

\========================================================================
# 1
['Pekka', 'nukkui']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "nukku"

		[[D Pekka] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] T{V}]

6.
	>>>	Trying candidate parse [[D Pekka] T{V}] (1.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] T{V}].
				Extracted head "nukku" from T and created [[D Pekka] [T nukku]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				= [<D Pekka> [T [<D Pekka> nukku]]]
			!Dropping A-/A-bar movement.
			= [<D Pekka> [T [<D Pekka> nukku]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 nukku]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 6/47 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> nukku]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 nukku]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 V]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
nukku: [V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 2
['Pekka', 'ei', 'nukkunut']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.

		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			!Reconstructing head movement for ei.
			!Dropping floaters...
				= ei
			!Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "nukku"

		[[D Pekka] [ei T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [ei T{V}]]

7.
	>>>	Trying candidate parse [[D Pekka] [ei T{V}]] (1.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [ei T{V}]].
				Extracted head "nukku" from T and created [[D Pekka] [ei [T nukku]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				= [[D Pekka] [ei [T nukku]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of nukku
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [[D Pekka]:1 [ei [(DP):1 [T nukku]]]].
			= [[D Pekka] [ei [[D Pekka] [T nukku]]]]
		Checking LF-interface conditions.
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [, Neg/fin]
nukku: [V, , Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkunut".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ei".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 3
['Pekka', 'ihailee', 'Merjaa']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Next word contains multiple morphemes ['$T/fin', '$v', 'ihaile-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "v"

		[[D Pekka] T] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D Pekka] T{v}]

6.

		Consume "ihailee"

		[[D Pekka] T{v}] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*ihailee]
			=[[D Pekka] T{v,V}]

7.

		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] T{v,V}]

8.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] T{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [v ihailee]]]] D] due to bad left branch.
		Exploring solution number (1) =[T{v,V} D]
			T{v,V} cannot be opened.
			=[[D Pekka] [T{v,V} D]]

9.

		Consume "Merjaa"

		[[D Pekka] [T{v,V} D]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [T{v,V} D{N}]]

10.
	>>>	Trying candidate parse [[D Pekka] [T{v,V} D{N}]] (1.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [T{v,V} D{N}]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T [v{V} D{N}]]]
				Extracted head "ihailee" and reconstructed it = [[D Pekka] [T [v [ihailee D{N}]]]]
				Extracted head "Merjaa" from D and created [[D Pekka] [T [v [ihailee [D Merjaa]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				= [<D Pekka> [T [<D Pekka> [v [ihailee [D Merjaa]]]]]]
			!Dropping A-/A-bar movement.
			= [<D Pekka> [T [<D Pekka> [v [ihailee [D Merjaa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 [v [ihailee [D Merjaa]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 10/78 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> [v [ihailee [D Merjaa]]]]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 [v [ihailee [D Merjaa]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
ihailee: [V, v, T/fin]
D: [D, V, v, T/fin]
Merjaa: [N, D, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 4
['Pekka', 'ei', 'ihaile', 'Merjaa']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.

		Next word contains multiple morphemes ['$T', '$v', 'ihaile-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			!Reconstructing head movement for ei.
			!Dropping floaters...
				= ei
			!Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "v"

		[[D Pekka] [ei T]] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D Pekka] [ei T{v}]]

7.

		Consume "ihailee"

		[[D Pekka] [ei T{v}]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*ihailee]
			=[[D Pekka] [ei T{v,V}]]

8.

		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{v,V}]]

9.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [ei T{v,V}]] + D
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [v ihailee]]]]] D] due to bad left branch.
				Reject [[ei [T [v ihailee]]] D] due to bad left branch.
		Exploring solution number (1) =[T{v,V} D]
			T{v,V} cannot be opened.
			=[[D Pekka] [ei [T{v,V} D]]]

10.

		Consume "Merjaa"

		[[D Pekka] [ei [T{v,V} D]]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [ei [T{v,V} D{N}]]]

11.
	>>>	Trying candidate parse [[D Pekka] [ei [T{v,V} D{N}]]] (1.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [ei [T{v,V} D{N}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [v{V} D{N}]]]]
				Extracted head "ihailee" and reconstructed it = [[D Pekka] [ei [T [v [ihailee D{N}]]]]]
				Extracted head "Merjaa" from D and created [[D Pekka] [ei [T [v [ihailee [D Merjaa]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				= [[D Pekka] [ei [T [v [ihailee [D Merjaa]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of v
			= [[D Pekka] [ei [T [[D Pekka] [v [ihailee [D Merjaa]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:1 [ei [T [(DP):1 [v [ihailee [D Merjaa]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 11/94 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] [v [ihailee [D Merjaa]]]]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 [v [ihailee [D Merjaa]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 [v [V [D N]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
v: [v, , Neg/fin]
ihailee: [V, v, , Neg/fin]
D: [D, V, v, , Neg/fin]
Merjaa: [N, D, V, v, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 5
['Pekka', 'antoi', 'kirjan', 'Merjalle']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "v"

		[[D Pekka] T] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D Pekka] T{v}]

6.

		Consume "antaa"

		[[D Pekka] T{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*antaa]
			=[[D Pekka] T{v,V}]

7.

		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] T{v,V}]

8.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] T{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[T{v,V} D]
			T{v,V} cannot be opened.
			=[[D Pekka] [T{v,V} D]]

9.

		Consume "kirja"

		[[D Pekka] [T{v,V} D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [T{v,V} D{N}]]

10.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [T{v,V} D{N}]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle)
				Avoid T/finP as SPEC, P(lle)
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection against [P]
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D Pekka] [T{v,V} D{N}]]; P(lle)]
			3. [[T{v,V} D{N}]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [T{v,V} [[D kirja] P(lle)]]]

11.

		Consume "D"

		[[D Pekka] [T{v,V} [[D kirja] P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [T{v,V} [[D kirja] P(lle){D}]]]

12.

		Consume "Merja-"

		[[D Pekka] [T{v,V} [[D kirja] P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [T{v,V} [[D kirja] P(lle){D,N}]]]

13.
	>>>	Trying candidate parse [[D Pekka] [T{v,V} [[D kirja] P(lle){D,N}]]] (1.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [T{v,V} [[D kirja] P(lle){D,N}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T [v{V} [[D kirja] P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [T [v [antaa [[D kirja] P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [T [v [antaa [[D kirja] [P(lle) D{N}]]]]]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [T [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				= [<D Pekka> [T [<D Pekka> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D Pekka>:1 [T [<DP>:1 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [<D Pekka> [T [<D Pekka> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 13/121 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [v [V [[D N] PP]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 6
['Pekka', 'ei', 'antanut', 'kirjaa', 'Merjalle']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.
		Ambiguous lexical item [?, ?]detected.

		Next word contains multiple morphemes ['$T', '$v', 'anta-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			!Reconstructing head movement for ei.
			!Dropping floaters...
				= ei
			!Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "v"

		[[D Pekka] [ei T]] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D Pekka] [ei T{v}]]

7.

		Consume "antaa"

		[[D Pekka] [ei T{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*antaa]
			=[[D Pekka] [ei T{v,V}]]

8.

		Next word contains multiple morphemes ['$par', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{v,V}]]

9.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [ei T{v,V}]] + D
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [v antaa]]]]] D] due to bad left branch.
				Reject [[ei [T [v antaa]]] D] due to bad left branch.
		Exploring solution number (1) =[T{v,V} D]
			T{v,V} cannot be opened.
			=[[D Pekka] [ei [T{v,V} D]]]

10.

		Consume "kirja"

		[[D Pekka] [ei [T{v,V} D]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [ei [T{v,V} D{N}]]]

11.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [ei [T{v,V} D{N}]]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [ei [T [v [antaa [D kirja]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T{v,V} D{N}], P(lle)] because the operation breaks up an existing selectional dependency.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection against [P]
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
		Ranking completed:
			1. [[[D Pekka] [ei [T{v,V} D{N}]]]; P(lle)]
			2. [[ei [T{v,V} D{N}]]; P(lle)]
			3. [D{N}; P(lle)]
			4. [[T{v,V} D{N}]; P(lle)]
		Exploring solution number (1) =[[[D Pekka] [ei [T{v,V} D{N}]]] P(lle)]
			!Reconstructing head movement for [[D Pekka] [ei [T{v,V} D{N}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [v{V} D{N}]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [ei [T [v [antaa D{N}]]]]]
				Extracted head "kirja" from D and created [[D Pekka] [ei [T [v [antaa [D kirja]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				= [[D Pekka] [ei [T [v [antaa [D kirja]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of v
			=[[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] P(lle)]

12.

		Consume "D"

		[[[D Pekka] [ei [T [[D Pekka] [v [antaa [D kirja]]]]]]] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] P(lle){D}]

13.

		Consume "Merja-"

		[[[D Pekka] [ei [T [[D Pekka] [v [antaa [D kirja]]]]]]] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] P(lle){D,N}]

14.
	>>>	Trying candidate parse [[[D Pekka] [ei [T [[D Pekka] [v [antaa [D kirja]]]]]]] P(lle){D,N}] (1.)
		Reconstructing...
			!Reconstructing head movement for [[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] [P(lle) D{N}]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]]
			!Dropping floaters...
				= [[[D Pekka] [ei [T [[D Pekka] [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka ei T __v antaa D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[[D N] [Neg/fin [ [[D N] [v [V [D N]]]]]]]]
			= [[[D Pekka] [ei [T [[D Pekka] [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]]
		Checking LF-interface conditions.
			Trying to transfer [[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 14/139 operations) <------------------------------------
		Solution:
		[[[D Pekka] [ei [T [[D Pekka] [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]]
		Grammar: [[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]]
		Spellout PP = [Neg/finP [P [D N]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
v: [v, , Neg/fin]
antaa: [V, v, , Neg/fin]
D: [D, V, v, , Neg/fin]
kirja: [N, D, V, v, , Neg/fin]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]

			Checking if the sentence is ambiguous...

		Next word contains multiple morphemes ['$T', '$v', 'anta-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			!Reconstructing head movement for ei.
			!Dropping floaters...
				= ei
			!Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.


\========================================================================
# 7
['Pekka', 'käski', 'heidän', 'nukkua']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Next word contains multiple morphemes ['$T/fin', 'käske-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "käske"

		[[D Pekka] T] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] T{V}]

6.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] T{V}]

7.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D Pekka] T{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D
				Avoid [T{V} D] due to local agreement failure.
				Avoid [T{V} D] due to complement selection against [D]
		Ranking completed:
			1. [[[D Pekka] T{V}]; D]
			2. [T{V}; D]
		Exploring solution number (1) =[[[D Pekka] T{V}] D]
			!Reconstructing head movement for [[D Pekka] T{V}].
				Extracted head "käske" from T and created [[D Pekka] [T käske]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				= [<D Pekka> [T [<D Pekka> käske]]]
			!Dropping A-/A-bar movement.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] D]

8.

		Consume "heidän"

		[[<D Pekka> [T [<D Pekka> käske]]] D] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] D{N}]

9.

		Next word contains multiple morphemes ['$-ta', 'nukku-']

		Consume "Ainf"

		[[<D Pekka> [T [<D Pekka> käske]]] D{N}] + Ainf
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Prioritize DP as SPEC,Ainf
				Prioritize D as SPEC,Ainf
		Ranking completed:
			1. [D{N}; Ainf]
			2. [[[<D Pekka>:1 [T [<DP>:1 käske]]] D{N}]; Ainf]
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] Ainf]]

10.

		Consume "nukku"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] Ainf]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*nukku]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] Ainf{V}]]

11.
	>>>	Trying candidate parse [[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] Ainf{V}]] (1.)
		Reconstructing...
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] Ainf{V}]].
				Extracted head "nukku" from Ainf and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf nukku]]]
			!Dropping floaters...
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				= [[<D Pekka> [T [<D Pekka> käske]]] [<D heidän> [Ainf [<D heidän> nukku]]]]
			!Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at Ainf but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [[<D Pekka>:1 [T [<DP>:1 käske]]] [? [<D heidän>:1 [Ainf [<DP>:1 nukku]]]]].
			= [[<D Pekka> [T [<D Pekka> käske]]] [? [<D heidän> [Ainf [<D heidän> nukku]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
?: [?]
D: [D, ?]
heidän: [N, D, ?]
Ainf: [, ?]
(D): [D, V, , ?]
(N): [N, D, V, , ?]
nukku: [V, , ?]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[<D Pekka>:1 [T [<DP>:1 käske]]] D{N}] Ainf]
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 käske]]] D{N}].
				Extracted head "heidän" from D and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [D heidän]]
			!Dropping floaters...
				D failed to tail.
				<D heidän> was made an adjunct.
				= [[<D Pekka> [T [<D Pekka> käske]]] <D heidän>]
			!Dropping A-/A-bar movement.
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] Ainf]

12.

		Consume "nukku"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] Ainf] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*nukku]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] Ainf{V}]

13.
	>>>	Trying candidate parse [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] Ainf{V}] (2.)
		Reconstructing...
			!Reconstructing head movement for [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] Ainf{V}].
				Extracted head "nukku" from Ainf and created [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf nukku]]
			!Dropping floaters...
				= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf nukku]]
			!Dropping A-/A-bar movement.
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf nukku]].
			= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf nukku]]
		Checking LF-interface conditions.
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
D: [D]
heidän: [N, D]
Ainf: []
nukku: [V, ]


		Trying to find other solutions...
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkua".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "heidän-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} D]]

14.

		Consume "heidän"

		[[D Pekka] [T{V} D]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [T{V} D{N}]]

15.

		Next word contains multiple morphemes ['$-ta', 'nukku-']

		Consume "Ainf"

		[[D Pekka] [T{V} D{N}]] + Ainf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [käske <D heidän>]]]] Ainf] due to bad left branch.
				Reject [[T [käske <D heidän>]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [T{V} [[D heidän] Ainf]]]

16.

		Consume "nukku"

		[[D Pekka] [T{V} [[D heidän] Ainf]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*nukku]
			=[[D Pekka] [T{V} [[D heidän] Ainf{V}]]]

17.
	>>>	Trying candidate parse [[D Pekka] [T{V} [[D heidän] Ainf{V}]]] (3.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [T{V} [[D heidän] Ainf{V}]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [T [käske [[D heidän] Ainf{V}]]]]
				Extracted head "nukku" from Ainf and created [[D Pekka] [T [käske [[D heidän] [Ainf nukku]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				= [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> nukku]]]]]]]
			!Dropping A-/A-bar movement.
			= [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> nukku]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 nukku]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 17/198 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> nukku]]]]]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 nukku]]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V [DP:2 [ [__:2 V]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
käske: [V, T/fin]
D: [D, V, T/fin]
heidän: [N, D, V, T/fin]
Ainf: [, V, T/fin]
(D): [D, V, , V, T/fin]
(N): [N, D, V, , V, T/fin]
nukku: [V, , V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 8
['Pekka', 'ei', 'käskenyt', 'heidän', 'nukkua']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.

		Next word contains multiple morphemes ['$T', 'käske-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			!Reconstructing head movement for ei.
			!Dropping floaters...
				= ei
			!Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "käske"

		[[D Pekka] [ei T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] [ei T{V}]]

7.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{V}]]

8.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D Pekka] [ei T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [[D Pekka] [ei [[D Pekka] [T käske]]]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T käske]] as left branch because it constitutes illicit structure.
				Avoid [T{V} D] due to local agreement failure.
				Avoid [T{V} D] due to complement selection against [D]
		Ranking completed:
			1. [T{V}; D]
			2. [[ei T{V}]; D]
			3. [[[D Pekka] [ei T{V}]]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} D]]]

9.

		Consume "heidän"

		[[D Pekka] [ei [T{V} D]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [ei [T{V} D{N}]]]

10.

		Next word contains multiple morphemes ['$-ta', 'nukku-']

		Consume "Ainf"

		[[D Pekka] [ei [T{V} D{N}]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [D heidän]]]]]] Ainf] due to bad left branch.
				Reject [[ei [T [käske [D heidän]]]] Ainf] due to bad left branch.
				Reject [[T [käske [D heidän]]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]

11.

		Consume "nukku"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*nukku]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{V}]]]]

12.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} [[D heidän] Ainf{V}]]]] (1.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [ei [T{V} [[D heidän] Ainf{V}]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] Ainf{V}]]]]]
				Extracted head "nukku" from Ainf and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf nukku]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				= [[D Pekka] [ei [T [käske [<D heidän> [Ainf [<D heidän> nukku]]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of käske
			= [[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> nukku]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 nukku]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 12/119 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> nukku]]]]]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 [käske [<D heidän>:2 [Ainf [<DP>:2 nukku]]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 [V [DP:2 [ [__:2 V]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
käske: [V, , Neg/fin]
D: [D, V, , Neg/fin]
heidän: [N, D, V, , Neg/fin]
Ainf: [, V, , Neg/fin]
(D): [D, V, , V, , Neg/fin]
(N): [N, D, V, , V, , Neg/fin]
nukku: [V, , V, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 9
['Pekka', 'käski', 'heidän', 'ihailla', 'Merjaa']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Next word contains multiple morphemes ['$T/fin', 'käske-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "käske"

		[[D Pekka] T] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] T{V}]

6.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] T{V}]

7.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D Pekka] T{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D
				Avoid [T{V} D] due to local agreement failure.
				Avoid [T{V} D] due to complement selection against [D]
		Ranking completed:
			1. [[[D Pekka] T{V}]; D]
			2. [T{V}; D]
		Exploring solution number (1) =[[[D Pekka] T{V}] D]
			!Reconstructing head movement for [[D Pekka] T{V}].
				Extracted head "käske" from T and created [[D Pekka] [T käske]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				= [<D Pekka> [T [<D Pekka> käske]]]
			!Dropping A-/A-bar movement.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] D]

8.

		Consume "heidän"

		[[<D Pekka> [T [<D Pekka> käske]]] D] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] D{N}]

9.

		Next word contains multiple morphemes ['$-ta', '$v', 'ihaile-']

		Consume "Ainf"

		[[<D Pekka> [T [<D Pekka> käske]]] D{N}] + Ainf
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Prioritize DP as SPEC,Ainf
				Prioritize D as SPEC,Ainf
		Ranking completed:
			1. [D{N}; Ainf]
			2. [[[<D Pekka>:1 [T [<DP>:1 käske]]] D{N}]; Ainf]
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] Ainf]]

10.

		Consume "v"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] Ainf]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] Ainf{v}]]

11.

		Consume "ihailee"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] Ainf{v}]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*ihailee]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] Ainf{v,V}]]

12.

		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] Ainf{v,V}]]

13.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] Ainf{v,V}]] + D
			Filtering out impossible merge sites...
				Reject [[[<D Pekka> [T [<D Pekka> käske]]] [? [<D heidän> [Ainf [<D heidän> [v ihailee]]]]]] D] due to bad left branch.
				Reject [[<D heidän> [Ainf [<D heidän> [v ihailee]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} D]]]

14.

		Consume "Merjaa"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [Ainf{v,V} D]]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} D{N}]]]

15.
	>>>	Trying candidate parse [[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [Ainf{v,V} D{N}]]] (1.)
		Reconstructing...
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} D{N}]]].
				Extracted head "v{V}" and reconstructed it = [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf [v{V} D{N}]]]]
				Extracted head "ihailee" and reconstructed it = [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf [v [ihailee D{N}]]]]]
				Extracted head "Merjaa" from D and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf [v [ihailee [D Merjaa]]]]]]
			!Dropping floaters...
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				= [[<D Pekka> [T [<D Pekka> käske]]] [<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]]]
			!Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at Ainf but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [[<D Pekka>:1 [T [<DP>:1 käske]]] [? [<D heidän>:1 [Ainf [<DP>:1 [v [ihailee [D Merjaa]]]]]]]].
			= [[<D Pekka> [T [<D Pekka> käske]]] [? [<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
?: [?]
D: [D, ?]
heidän: [N, D, ?]
Ainf: [, ?]
(D): [D, , ?]
(N): [N, D, , ?]
v: [v, , ?]
ihailee: [V, v, , ?]
D: [D, V, v, , ?]
Merjaa: [N, D, V, v, , ?]


		Trying to find other solutions...
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[<D Pekka>:1 [T [<DP>:1 käske]]] D{N}] Ainf]
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 käske]]] D{N}].
				Extracted head "heidän" from D and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [D heidän]]
			!Dropping floaters...
				D failed to tail.
				<D heidän> was made an adjunct.
				= [[<D Pekka> [T [<D Pekka> käske]]] <D heidän>]
			!Dropping A-/A-bar movement.
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] Ainf]

16.

		Consume "v"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] Ainf] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] Ainf{v}]

17.

		Consume "ihailee"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] Ainf{v}] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*ihailee]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] Ainf{v,V}]

18.

		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] Ainf{v,V}]

19.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] Ainf{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v ihailee]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} D]]

20.

		Consume "Merjaa"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf{v,V} D]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} D{N}]]

21.
	>>>	Trying candidate parse [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf{v,V} D{N}]] (2.)
		Reconstructing...
			!Reconstructing head movement for [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} D{N}]].
				Extracted head "v{V}" and reconstructed it = [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v{V} D{N}]]]
				Extracted head "ihailee" and reconstructed it = [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [ihailee D{N}]]]]
				Extracted head "Merjaa" from D and created [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [ihailee [D Merjaa]]]]]
			!Dropping floaters...
				= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [ihailee [D Merjaa]]]]]
			!Dropping A-/A-bar movement.
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [ihailee [D Merjaa]]]]].
			= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [ihailee [D Merjaa]]]]]
		Checking LF-interface conditions.
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
D: [D]
heidän: [N, D]
Ainf: []
v: [v, ]
ihailee: [V, v, ]
D: [D, V, v, ]
Merjaa: [N, D, V, v, ]


		Trying to find other solutions...
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihailla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "heidän-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} D]]

22.

		Consume "heidän"

		[[D Pekka] [T{V} D]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [T{V} D{N}]]

23.

		Next word contains multiple morphemes ['$-ta', '$v', 'ihaile-']

		Consume "Ainf"

		[[D Pekka] [T{V} D{N}]] + Ainf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [käske <D heidän>]]]] Ainf] due to bad left branch.
				Reject [[T [käske <D heidän>]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [T{V} [[D heidän] Ainf]]]

24.

		Consume "v"

		[[D Pekka] [T{V} [[D heidän] Ainf]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D Pekka] [T{V} [[D heidän] Ainf{v}]]]

25.

		Consume "ihailee"

		[[D Pekka] [T{V} [[D heidän] Ainf{v}]]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*ihailee]
			=[[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]

26.

		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]

27.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v ihailee]]]]]]]] D] due to bad left branch.
				Reject [[T [käske [<D heidän> [Ainf [<D heidän> [v ihailee]]]]]] D] due to bad left branch.
				Reject [[<D heidän> [Ainf [<D heidän> [v ihailee]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D]]]]

28.

		Consume "Merjaa"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D]]]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]

29.
	>>>	Trying candidate parse [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D{N}]]]] (3.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D{N}]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf{v,V} D{N}]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf [v{V} D{N}]]]]]]
				Extracted head "ihailee" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf [v [ihailee D{N}]]]]]]]
				Extracted head "Merjaa" from D and created [[D Pekka] [T [käske [[D heidän] [Ainf [v [ihailee [D Merjaa]]]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				= [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]]]]]]
			!Dropping A-/A-bar movement.
			= [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 [v [ihailee [D Merjaa]]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 29/310 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]]]]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 [v [ihailee [D Merjaa]]]]]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V [DP:2 [ [__:2 [v [V [D N]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
käske: [V, T/fin]
D: [D, V, T/fin]
heidän: [N, D, V, T/fin]
Ainf: [, V, T/fin]
(D): [D, , V, T/fin]
(N): [N, D, , V, T/fin]
v: [v, , V, T/fin]
ihailee: [V, v, , V, T/fin]
D: [D, V, v, , V, T/fin]
Merjaa: [N, D, V, v, , V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 10
['Pekka', 'ei', 'käskenyt', 'heidän', 'ihailla', 'Merjaa']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.

		Next word contains multiple morphemes ['$T', 'käske-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			!Reconstructing head movement for ei.
			!Dropping floaters...
				= ei
			!Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "käske"

		[[D Pekka] [ei T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] [ei T{V}]]

7.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{V}]]

8.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D Pekka] [ei T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [[D Pekka] [ei [[D Pekka] [T käske]]]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T käske]] as left branch because it constitutes illicit structure.
				Avoid [T{V} D] due to local agreement failure.
				Avoid [T{V} D] due to complement selection against [D]
		Ranking completed:
			1. [T{V}; D]
			2. [[ei T{V}]; D]
			3. [[[D Pekka] [ei T{V}]]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} D]]]

9.

		Consume "heidän"

		[[D Pekka] [ei [T{V} D]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [ei [T{V} D{N}]]]

10.

		Next word contains multiple morphemes ['$-ta', '$v', 'ihaile-']

		Consume "Ainf"

		[[D Pekka] [ei [T{V} D{N}]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [D heidän]]]]]] Ainf] due to bad left branch.
				Reject [[ei [T [käske [D heidän]]]] Ainf] due to bad left branch.
				Reject [[T [käske [D heidän]]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]

11.

		Consume "v"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]]

12.

		Consume "ihailee"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*ihailee]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]

13.

		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]

14.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]] + D
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v ihailee]]]]]]]]] D] due to bad left branch.
				Reject [[ei [T [käske [<D heidän> [Ainf [<D heidän> [v ihailee]]]]]]] D] due to bad left branch.
				Reject [[T [käske [<D heidän> [Ainf [<D heidän> [v ihailee]]]]]] D] due to bad left branch.
				Reject [[<D heidän> [Ainf [<D heidän> [v ihailee]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D]]]]]

15.

		Consume "Merjaa"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D]]]]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]]

16.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]] (1.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf{v,V} D{N}]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v{V} D{N}]]]]]]]
				Extracted head "ihailee" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [ihailee D{N}]]]]]]]]
				Extracted head "Merjaa" from D and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [ihailee [D Merjaa]]]]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				= [[D Pekka] [ei [T [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of käske
			= [[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [ihailee [D Merjaa]]]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 16/153 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]]]]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 [käske [<D heidän>:2 [Ainf [<DP>:2 [v [ihailee [D Merjaa]]]]]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 [V [DP:2 [ [__:2 [v [V [D N]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
käske: [V, , Neg/fin]
D: [D, V, , Neg/fin]
heidän: [N, D, V, , Neg/fin]
Ainf: [, V, , Neg/fin]
(D): [D, , V, , Neg/fin]
(N): [N, D, , V, , Neg/fin]
v: [v, , V, , Neg/fin]
ihailee: [V, v, , V, , Neg/fin]
D: [D, V, v, , V, , Neg/fin]
Merjaa: [N, D, V, v, , V, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 11
['Pekka', 'käski', 'heidän', 'antaa', 'kirjan', 'Merjalle']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Next word contains multiple morphemes ['$T/fin', 'käske-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "käske"

		[[D Pekka] T] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] T{V}]

6.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] T{V}]

7.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D Pekka] T{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D
				Avoid [T{V} D] due to local agreement failure.
				Avoid [T{V} D] due to complement selection against [D]
		Ranking completed:
			1. [[[D Pekka] T{V}]; D]
			2. [T{V}; D]
		Exploring solution number (1) =[[[D Pekka] T{V}] D]
			!Reconstructing head movement for [[D Pekka] T{V}].
				Extracted head "käske" from T and created [[D Pekka] [T käske]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				= [<D Pekka> [T [<D Pekka> käske]]]
			!Dropping A-/A-bar movement.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] D]

8.

		Consume "heidän"

		[[<D Pekka> [T [<D Pekka> käske]]] D] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] D{N}]

9.

		Next word contains multiple morphemes ['$-ta', '$v', 'anta-']

		Consume "Ainf"

		[[<D Pekka> [T [<D Pekka> käske]]] D{N}] + Ainf
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Prioritize DP as SPEC,Ainf
				Prioritize D as SPEC,Ainf
		Ranking completed:
			1. [D{N}; Ainf]
			2. [[[<D Pekka>:1 [T [<DP>:1 käske]]] D{N}]; Ainf]
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] Ainf]]

10.

		Consume "v"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] Ainf]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] Ainf{v}]]

11.

		Consume "antaa"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] Ainf{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*antaa]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] Ainf{v,V}]]

12.

		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] Ainf{v,V}]]

13.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] Ainf{v,V}]] + D
			Filtering out impossible merge sites...
				Reject [[[<D Pekka> [T [<D Pekka> käske]]] [? [<D heidän> [Ainf [<D heidän> [v antaa]]]]]] D] due to bad left branch.
				Reject [[<D heidän> [Ainf [<D heidän> [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} D]]]

14.

		Consume "kirja"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [Ainf{v,V} D]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} D{N}]]]

15.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [Ainf{v,V} D{N}]]] + P(lle)
			Filtering out impossible merge sites...
				Reject [[[<D Pekka> [T [<D Pekka> käske]]] [? [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]] P(lle)] due to bad left branch.
			Ranking remaining sites...
				Avoid P as SPEC, P(lle)
				Avoid P as SPEC, P(lle)
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection against [P]
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D heidän] [Ainf{v,V} D{N}]]; P(lle)]
			3. [[Ainf{v,V} D{N}]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]]

16.

		Consume "D"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]]

17.

		Consume "Merja-"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]

18.
	>>>	Trying candidate parse [[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]] (1.)
		Reconstructing...
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]].
				Extracted head "v{V}" and reconstructed it = [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf [v{V} [[D kirja] P(lle){D,N}]]]]]
				Extracted head "antaa" and reconstructed it = [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf [v [antaa [[D kirja] P(lle){D,N}]]]]]]
				Extracted head "D{N}" from P(lle) and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf [v [antaa [[D kirja] [P(lle) D{N}]]]]]]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]
			!Dropping floaters...
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				= [[<D Pekka> [T [<D Pekka> käske]]] [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]
			!Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at Ainf but its category is unknown!
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				An uninterpretable grammatical head without lexical category was detected.
				[D kirja]" has no thematic role
				Extraposition will be tried on [[<D Pekka>:1 [T [<DP>:1 käske]]] [? [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]].
			= [[<D Pekka> [T [<D Pekka> käske]]] [? [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				[D kirja]" has no thematic role
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
?: [?]
D: [D, ?]
heidän: [N, D, ?]
Ainf: [, ?]
(D): [D, , ?]
(N): [N, D, , ?]
v: [v, , ?]
antaa: [V, v, , ?]
D: [D, V, v, , ?]
kirja: [N, D, V, v, , ?]
P(lle): [P, V, v, , ?]
D: [D, P, V, v, , ?]
Merja-: [N, D, P, V, v, , ?]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D heidän] [Ainf{v,V} D{N}]] P(lle)]
			!Reconstructing head movement for [[D heidän] [Ainf{v,V} D{N}]].
				Extracted head "v{V}" and reconstructed it = [[D heidän] [Ainf [v{V} D{N}]]]
				Extracted head "antaa" and reconstructed it = [[D heidän] [Ainf [v [antaa D{N}]]]]
				Extracted head "kirja" from D and created [[D heidän] [Ainf [v [antaa [D kirja]]]]]
			!Dropping floaters...
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				= [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]
			!Dropping A-/A-bar movement.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] P(lle)]]

19.

		Consume "D"

		[[<D Pekka> [T [<D Pekka> käske]]] [[<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] P(lle){D}]]

20.

		Consume "Merja-"

		[[<D Pekka> [T [<D Pekka> käske]]] [[<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] P(lle){D,N}]]

21.
	>>>	Trying candidate parse [[<D Pekka> [T [<D Pekka> käske]]] [[<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]] P(lle){D,N}]] (2.)
		Reconstructing...
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] P(lle){D,N}]].
				Extracted head "D{N}" from P(lle) and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] [P(lle) D{N}]]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] [P(lle) [D Merja-]]]]
			!Dropping floaters...
				= [[<D Pekka> [T [<D Pekka> käske]]] [[<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]] [P(lle) [D Merja-]]]]
			!Dropping A-/A-bar movement.
				Moving "D heidän Ainf __v antaa D kirja " into memory buffer from SPEC of "P(lle)".
				Moving "D Pekka T __käske " into memory buffer from SPEC of "P(lle)".
				New head was spawned due to multiple specifiers at P(lle) but its category is unknown!
				Memory buffer: [[[D N] [ [[D N] [v [V [D N]]]]]], [[D N] [T/fin [[D N] V]]]]
				An uninterpretable grammatical head without lexical category was detected.
				P(lle) has unaccetable specifier [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]].
				Extraposition will be tried on [[<D Pekka>:1 [T [<DP>:1 käske]]] [? [[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] [P(lle) [D Merja-]]]]].
			= [[<D Pekka> [T [<D Pekka> käske]]] [? [[<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]] [P(lle) [D Merja-]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				P(lle) has unaccetable specifier [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
?: [?]
D: [D, ?]
heidän: [N, D, ?]
Ainf: [, ?]
(D): [D, , ?]
(N): [N, D, , ?]
v: [v, , ?]
antaa: [V, v, , ?]
D: [D, V, v, , ?]
kirja: [N, D, V, v, , ?]
P(lle): [P, ?]
D: [D, P, ?]
Merja-: [N, D, P, ?]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[Ainf{v,V} D{N}] P(lle)]
			!Reconstructing head movement for [Ainf{v,V} D{N}].
				Extracted head "v{V}" and reconstructed it = [Ainf [v{V} D{N}]]
				Extracted head "antaa" and reconstructed it = [Ainf [v [antaa D{N}]]]
				Extracted head "kirja" from D and created [Ainf [v [antaa [D kirja]]]]
			!Dropping floaters...
				= [Ainf [v [antaa [D kirja]]]]
			!Dropping A-/A-bar movement.
				An EPP-head "v" lacks specifier D that it requires.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[Ainf [v [antaa [D kirja]]]] P(lle)]]]

22.

		Consume "D"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [[Ainf [v [antaa [D kirja]]]] P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[Ainf [v [antaa [D kirja]]]] P(lle){D}]]]

23.

		Consume "Merja-"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [[Ainf [v [antaa [D kirja]]]] P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[Ainf [v [antaa [D kirja]]]] P(lle){D,N}]]]

24.
	>>>	Trying candidate parse [[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [[Ainf [v [antaa [D kirja]]]] P(lle){D,N}]]] (3.)
		Reconstructing...
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[Ainf [v [antaa [D kirja]]]] P(lle){D,N}]]].
				Extracted head "D{N}" from P(lle) and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[Ainf [v [antaa [D kirja]]]] [P(lle) D{N}]]]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]]]]
			!Dropping floaters...
				[D heidän] failed to tail [!COMP:*][PHI:0]
				= [[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]]]]
			!Dropping A-/A-bar movement.
				Moving "Ainf v antaa D kirja " into memory buffer from SPEC of "P(lle)".
				Moving "D heidän " into memory buffer from SPEC of "P(lle)".
				New head was spawned due to multiple specifiers at P(lle) but its category is unknown!
				Moving "D Pekka T __käske " into memory buffer from SPEC of "P(lle)".
				New head was spawned due to multiple specifiers at P(lle) but its category is unknown!
				Memory buffer: [[ [v [V [D N]]]], [D N], [[D N] [T/fin [[D N] V]]]]
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				P(lle) has unaccetable specifier [Ainf [v [antaa [D kirja]]]].
				Extraposition will be tried on [[<D Pekka>:1 [T [<DP>:1 käske]]] [? [[D heidän] [? [[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]]]]]].
			= [[<D Pekka> [T [<D Pekka> käske]]] [? [[D heidän] [? [[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				P(lle) has unaccetable specifier [Ainf [v [antaa [D kirja]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
:['LANG:FI']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
?: [?]
D: [D, ?]
heidän: [N, D, ?]
?: [?, ?]
Ainf: [, ?, ?]
v: [v, , ?, ?]
antaa: [V, v, , ?, ?]
D: [D, V, v, , ?, ?]
kirja: [N, D, V, v, , ?, ?]
P(lle): [P, ?, ?]
D: [D, P, ?, ?]
Merja-: [N, D, P, ?, ?]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[<D Pekka>:1 [T [<DP>:1 käske]]] D{N}] Ainf]
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 käske]]] D{N}].
				Extracted head "heidän" from D and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [D heidän]]
			!Dropping floaters...
				D failed to tail.
				<D heidän> was made an adjunct.
				= [[<D Pekka> [T [<D Pekka> käske]]] <D heidän>]
			!Dropping A-/A-bar movement.
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] Ainf]

25.

		Consume "v"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] Ainf] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] Ainf{v}]

26.

		Consume "antaa"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] Ainf{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*antaa]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] Ainf{v,V}]

27.

		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] Ainf{v,V}]

28.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] Ainf{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v antaa]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} D]]

29.

		Consume "kirja"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf{v,V} D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} D{N}]]

30.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf{v,V} D{N}]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid P as SPEC, P(lle)
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] as left branch because it constitutes illicit structure.
				Avoid P as SPEC, P(lle)
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection against [P]
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[Ainf{v,V} D{N}]; P(lle)]
			3. [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} D{N}]]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} [[D kirja] P(lle)]]]

31.

		Consume "D"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf{v,V} [[D kirja] P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} [[D kirja] P(lle){D}]]]

32.

		Consume "Merja-"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf{v,V} [[D kirja] P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]

33.
	>>>	Trying candidate parse [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf{v,V} [[D kirja] P(lle){D,N}]]] (4.)
		Reconstructing...
			!Reconstructing head movement for [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} [[D kirja] P(lle){D,N}]]].
				Extracted head "v{V}" and reconstructed it = [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v{V} [[D kirja] P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] [P(lle) D{N}]]]]]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]
			!Dropping floaters...
				= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
				Extraposition will be tried on [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]].
			= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]
		Checking LF-interface conditions.
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
D: [D]
heidän: [N, D]
Ainf: []
v: [v, ]
antaa: [V, v, ]
D: [D, V, v, ]
kirja: [N, D, V, v, ]
P(lle): [P, V, v, ]
D: [D, P, V, v, ]
Merja-: [N, D, P, V, v, ]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[Ainf{v,V} D{N}] P(lle)]
			!Reconstructing head movement for [Ainf{v,V} D{N}].
				Extracted head "v{V}" and reconstructed it = [Ainf [v{V} D{N}]]
				Extracted head "antaa" and reconstructed it = [Ainf [v [antaa D{N}]]]
				Extracted head "kirja" from D and created [Ainf [v [antaa [D kirja]]]]
			!Dropping floaters...
				= [Ainf [v [antaa [D kirja]]]]
			!Dropping A-/A-bar movement.
				An EPP-head "v" lacks specifier D that it requires.
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[Ainf [v [antaa [D kirja]]]] P(lle)]]

34.

		Consume "D"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [[Ainf [v [antaa [D kirja]]]] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[Ainf [v [antaa [D kirja]]]] P(lle){D}]]

35.

		Consume "Merja-"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [[Ainf [v [antaa [D kirja]]]] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[Ainf [v [antaa [D kirja]]]] P(lle){D,N}]]

36.
	>>>	Trying candidate parse [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [[Ainf [v [antaa [D kirja]]]] P(lle){D,N}]] (5.)
		Reconstructing...
			!Reconstructing head movement for [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[Ainf [v [antaa [D kirja]]]] P(lle){D,N}]].
				Extracted head "D{N}" from P(lle) and created [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[Ainf [v [antaa [D kirja]]]] [P(lle) D{N}]]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]]]
			!Dropping floaters...
				= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]]]
			!Dropping A-/A-bar movement.
				Moving "Ainf v antaa D kirja " into memory buffer from SPEC of "P(lle)".
				Moving "D Pekka T __käske D heidän " into memory buffer from SPEC of "P(lle)".
				New head was spawned due to multiple specifiers at P(lle) but its category is unknown!
				Memory buffer: [[ [v [V [D N]]]], [[[D N] [T/fin [[D N] V]]] [D N]]]
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				P(lle) has unaccetable specifier [Ainf [v [antaa [D kirja]]]].
				Extraposition will be tried on [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [? [[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]]]].
			= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [? [[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				P(lle) has unaccetable specifier [Ainf [v [antaa [D kirja]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
:['LANG:FI']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
D: [D]
heidän: [N, D]
?: [?]
Ainf: [, ?]
v: [v, , ?]
antaa: [V, v, , ?]
D: [D, V, v, , ?]
kirja: [N, D, V, v, , ?]
P(lle): [P, ?]
D: [D, P, ?]
Merja-: [N, D, P, ?]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} D{N}]] P(lle)]
			!Reconstructing head movement for [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} D{N}]].
				Extracted head "v{V}" and reconstructed it = [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v{V} D{N}]]]
				Extracted head "antaa" and reconstructed it = [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa D{N}]]]]
				Extracted head "kirja" from D and created [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]]
			!Dropping floaters...
				= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]]
			!Dropping A-/A-bar movement.
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]].
			=[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] P(lle)]

37.

		Consume "D"

		[[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] P(lle){D}]

38.

		Consume "Merja-"

		[[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] P(lle){D,N}]

39.
	>>>	Trying candidate parse [[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] P(lle){D,N}] (6.)
		Reconstructing...
			!Reconstructing head movement for [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [P(lle) D{N}]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]]
			!Dropping floaters...
				= [[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka T __käske D heidän Ainf v antaa D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[[[[D N] [T/fin [[D N] V]]] [D N]] [ [v [V [D N]]]]]]
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				P(lle) has unaccetable specifier [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]].
				Extraposition will be tried on [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]].
			= [[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]]
		Checking LF-interface conditions.
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				P(lle) has unaccetable specifier [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
D: [D]
heidän: [N, D]
Ainf: []
v: [v, ]
antaa: [V, v, ]
D: [D, V, v, ]
kirja: [N, D, V, v, ]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "heidän-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} D]]

40.

		Consume "heidän"

		[[D Pekka] [T{V} D]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [T{V} D{N}]]

41.

		Next word contains multiple morphemes ['$-ta', '$v', 'anta-']

		Consume "Ainf"

		[[D Pekka] [T{V} D{N}]] + Ainf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [käske <D heidän>]]]] Ainf] due to bad left branch.
				Reject [[T [käske <D heidän>]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [T{V} [[D heidän] Ainf]]]

42.

		Consume "v"

		[[D Pekka] [T{V} [[D heidän] Ainf]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D Pekka] [T{V} [[D heidän] Ainf{v}]]]

43.

		Consume "antaa"

		[[D Pekka] [T{V} [[D heidän] Ainf{v}]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*antaa]
			=[[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]

44.

		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]

45.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v antaa]]]]]]]] D] due to bad left branch.
				Reject [[T [käske [<D heidän> [Ainf [<D heidän> [v antaa]]]]]] D] due to bad left branch.
				Reject [[<D heidän> [Ainf [<D heidän> [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D]]]]

46.

		Consume "kirja"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D]]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]

47.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D{N}]]]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle)
				Avoid T/finP as SPEC, P(lle)
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid P as SPEC, P(lle)
				Avoid [[D heidän] [Ainf{v,V} D{N}]] because it could break words.
				Avoid P as SPEC, P(lle)
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection against [P]
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]; P(lle)]
			3. [[Ainf{v,V} D{N}]; P(lle)]
			4. [[[D heidän] [Ainf{v,V} D{N}]]; P(lle)]
			5. [[T{V} [[D heidän] [Ainf{v,V} D{N}]]]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]]]

48.

		Consume "D"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]]]

49.

		Consume "Merja-"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]

50.
	>>>	Trying candidate parse [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]] (7.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf [v{V} [[D kirja] P(lle){D,N}]]]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] P(lle){D,N}]]]]]]]]
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] [P(lle) D{N}]]]]]]]]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				= [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D Pekka>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 50/683 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V [DP:2 [ [__:2 [v [V [[D N] PP]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
käske: [V, T/fin]
D: [D, V, T/fin]
heidän: [N, D, V, T/fin]
Ainf: [, V, T/fin]
(D): [D, , V, T/fin]
(N): [N, D, , V, T/fin]
v: [v, , V, T/fin]
antaa: [V, v, , V, T/fin]
D: [D, V, v, , V, T/fin]
kirja: [N, D, V, v, , V, T/fin]
P(lle): [P, V, v, , V, T/fin]
D: [D, P, V, v, , V, T/fin]
Merja-: [N, D, P, V, v, , V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 12
['Pekka', 'ei', 'käskenyt', 'heidän', 'antaa', 'kirjaa', 'Merjalle']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.

		Next word contains multiple morphemes ['$T', 'käske-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			!Reconstructing head movement for ei.
			!Dropping floaters...
				= ei
			!Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "käske"

		[[D Pekka] [ei T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] [ei T{V}]]

7.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{V}]]

8.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D Pekka] [ei T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [[D Pekka] [ei [[D Pekka] [T käske]]]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T käske]] as left branch because it constitutes illicit structure.
				Avoid [T{V} D] due to local agreement failure.
				Avoid [T{V} D] due to complement selection against [D]
		Ranking completed:
			1. [T{V}; D]
			2. [[ei T{V}]; D]
			3. [[[D Pekka] [ei T{V}]]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} D]]]

9.

		Consume "heidän"

		[[D Pekka] [ei [T{V} D]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [ei [T{V} D{N}]]]

10.

		Next word contains multiple morphemes ['$-ta', '$v', 'anta-']

		Consume "Ainf"

		[[D Pekka] [ei [T{V} D{N}]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [D heidän]]]]]] Ainf] due to bad left branch.
				Reject [[ei [T [käske [D heidän]]]] Ainf] due to bad left branch.
				Reject [[T [käske [D heidän]]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]

11.

		Consume "v"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]]

12.

		Consume "antaa"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*antaa]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]

13.

		Next word contains multiple morphemes ['$par', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]

14.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]] + D
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v antaa]]]]]]]]] D] due to bad left branch.
				Reject [[ei [T [käske [<D heidän> [Ainf [<D heidän> [v antaa]]]]]]] D] due to bad left branch.
				Reject [[T [käske [<D heidän> [Ainf [<D heidän> [v antaa]]]]]] D] due to bad left branch.
				Reject [[<D heidän> [Ainf [<D heidän> [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D]]]]]

15.

		Consume "kirja"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D]]]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]]

16.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T{V} [[D heidän] [Ainf{v,V} D{N}]]], P(lle)] because the operation breaks up an existing selectional dependency.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid P as SPEC, P(lle)
				Avoid [[D heidän] [Ainf{v,V} D{N}]] because it could break words.
				Avoid P as SPEC, P(lle)
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection against [P]
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
		Ranking completed:
			1. [[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]]; P(lle)]
			2. [[ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]; P(lle)]
			3. [D{N}; P(lle)]
			4. [[Ainf{v,V} D{N}]; P(lle)]
			5. [[[D heidän] [Ainf{v,V} D{N}]]; P(lle)]
			6. [[T{V} [[D heidän] [Ainf{v,V} D{N}]]]; P(lle)]
		Exploring solution number (1) =[[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]] P(lle)]
			!Reconstructing head movement for [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf{v,V} D{N}]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v{V} D{N}]]]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa D{N}]]]]]]]]
				Extracted head "kirja" from D and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa [D kirja]]]]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				= [[D Pekka] [ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of käske
			=[[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] P(lle)]

17.

		Consume "D"

		[[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]]]] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] P(lle){D}]

18.

		Consume "Merja-"

		[[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]]]] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] P(lle){D,N}]

19.
	>>>	Trying candidate parse [[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]]]] P(lle){D,N}] (1.)
		Reconstructing...
			!Reconstructing head movement for [[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] [P(lle) D{N}]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] [P(lle) [D Merja-]]]
			!Dropping floaters...
				= [[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]]]] [P(lle) [D Merja-]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka ei T __käske D heidän Ainf __v antaa D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[[D N] [Neg/fin [ [[D N] [V [[D N] [ [[D N] [v [V [D N]]]]]]]]]]]]
			= [[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]]]] [P(lle) [D Merja-]]]
		Checking LF-interface conditions.
			Trying to transfer [[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] [P(lle) [D Merja-]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 19/204 operations) <------------------------------------
		Solution:
		[[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]]]] [P(lle) [D Merja-]]]
		Grammar: [[[D Pekka]:1 [ei [T [(DP):1 [käske [<D heidän>:2 [Ainf [<DP>:2 [v [antaa [D kirja]]]]]]]]]]] [P(lle) [D Merja-]]]
		Spellout PP = [Neg/finP [P [D N]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
käske: [V, , Neg/fin]
D: [D, V, , Neg/fin]
heidän: [N, D, V, , Neg/fin]
Ainf: [, V, , Neg/fin]
(D): [D, , V, , Neg/fin]
(N): [N, D, , V, , Neg/fin]
v: [v, , V, , Neg/fin]
antaa: [V, v, , V, , Neg/fin]
D: [D, V, v, , V, , Neg/fin]
kirja: [N, D, V, v, , V, , Neg/fin]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]

			Checking if the sentence is ambiguous...


\========================================================================
# 13
['Pekka', 'nukkui', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "nukku"

		[[D Pekka] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] T{V}]

6.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] T{V}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla
				Avoid [nukku malla] due to complement selection against [ADV]
				Avoid T{V} due to tail-head failure.
		Ranking completed:
			1. [[[D Pekka] T{V}]; malla]
			2. [T{V}; malla]
		Exploring solution number (1) =[[[D Pekka] T{V}] malla]
			!Reconstructing head movement for [[D Pekka] T{V}].
				Extracted head "nukku" from T and created [[D Pekka] [T nukku]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				= [<D Pekka> [T [<D Pekka> nukku]]]
			!Dropping A-/A-bar movement.
			=[[<D Pekka>:1 [T [<DP>:1 nukku]]] malla]

7.

		Consume "virtaa"

		[[<D Pekka> [T [<D Pekka> nukku]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[<D Pekka>:1 [T [<DP>:1 nukku]]] malla{V}]

8.
	>>>	Trying candidate parse [[<D Pekka> [T [<D Pekka> nukku]]] malla{V}] (1.)
		Reconstructing...
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 nukku]]] malla{V}].
				Extracted head "virtaa" from malla and created [[<D Pekka>:1 [T [<DP>:1 nukku]]] [malla virtaa]]
			!Dropping floaters...
				malla failed to tail.
				= [[<D Pekka> [T [<D Pekka> nukku]]] [malla virtaa]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka T __nukku " into memory buffer from SPEC of "malla".
				Memory buffer: [[[D N] [T/fin [[D N] V]]]]
				malla has unaccetable specifier [<D Pekka>:1 [T [<DP>:1 nukku]]].
				Extraposition will be tried on [[<D Pekka>:1 [T [<DP>:1 nukku]]] [malla virtaa]].
			= [[<D Pekka> [T [<D Pekka> nukku]]] [malla virtaa]]
		Checking LF-interface conditions.
				malla has unaccetable specifier [<D Pekka>:1 [T [<DP>:1 nukku]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
nukku: [V, T/fin]
malla: [ADV]
virtaa: [V, ADV]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[T{V} malla]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} malla]]

9.

		Consume "virtaa"

		[[D Pekka] [T{V} malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [T{V} malla{V}]]

10.
	>>>	Trying candidate parse [[D Pekka] [T{V} malla{V}]] (2.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [T{V} malla{V}]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T [nukku malla{V}]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [T [nukku [malla virtaa]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				<malla virtaa> was made an adjunct.
				= [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]
			!Dropping A-/A-bar movement.
			= [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 [nukku <malla virtaa>]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 10/110 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 [nukku <malla virtaa>]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V ADVP]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
nukku: [V, T/fin]
malla: [ADV, V, T/fin]
virtaa: [V, ADV, V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 14
['Pekka', 'ei', 'nukkunut', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.

		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			!Reconstructing head movement for ei.
			!Dropping floaters...
				= ei
			!Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "nukku"

		[[D Pekka] [ei T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [ei T{V}]]

7.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [ei T{V}]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [[D Pekka] [ei [[D Pekka] [T nukku]]]] as left branch because it constitutes illicit structure.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [ei [T nukku]] as left branch because it constitutes illicit structure.
				Avoid [nukku malla] due to complement selection against [ADV]
		Ranking completed:
			1. [T{V}; malla]
			2. [[ei T{V}]; malla]
			3. [[[D Pekka] [ei T{V}]]; malla]
		Exploring solution number (1) =[T{V} malla]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} malla]]]

8.

		Consume "virtaa"

		[[D Pekka] [ei [T{V} malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [ei [T{V} malla{V}]]]

9.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} malla{V}]]] (1.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [ei [T{V} malla{V}]]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [ei [T [nukku malla{V}]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [ei [T [nukku [malla virtaa]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<malla virtaa> was made an adjunct.
				= [[D Pekka] [ei [T [nukku <malla virtaa>]]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of nukku
			= [[D Pekka] [ei [T [[D Pekka] [nukku <malla virtaa>]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:1 [ei [T [(DP):1 [nukku <malla virtaa>]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 9/90 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] [nukku <malla virtaa>]]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 [nukku <malla virtaa>]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 [V ADVP]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
nukku: [V, , Neg/fin]
malla: [ADV, V, , Neg/fin]
virtaa: [V, ADV, V, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 15
['Pekka', 'ihailee', 'Merjaa', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Next word contains multiple morphemes ['$T/fin', '$v', 'ihaile-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "v"

		[[D Pekka] T] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D Pekka] T{v}]

6.

		Consume "ihailee"

		[[D Pekka] T{v}] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*ihailee]
			=[[D Pekka] T{v,V}]

7.

		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] T{v,V}]

8.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] T{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [v ihailee]]]] D] due to bad left branch.
		Exploring solution number (1) =[T{v,V} D]
			T{v,V} cannot be opened.
			=[[D Pekka] [T{v,V} D]]

9.

		Consume "Merjaa"

		[[D Pekka] [T{v,V} D]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [T{v,V} D{N}]]

10.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [T{v,V} D{N}]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla
				Avoid T/finP as SPEC, malla
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T [v [ihailee [D Merjaa]]]] as left branch because it constitutes illicit structure.
				Avoid [Merjaa malla] due to complement selection against [ADV]
				Avoid D{N} due to tail-head failure.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; malla]
			2. [[[D Pekka] [T{v,V} D{N}]]; malla]
			3. [[T{v,V} D{N}]; malla]
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[D Pekka] [T{v,V} [[D Merjaa] malla]]]

11.

		Consume "virtaa"

		[[D Pekka] [T{v,V} [[D Merjaa] malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [T{v,V} [[D Merjaa] malla{V}]]]

12.
	>>>	Trying candidate parse [[D Pekka] [T{v,V} [[D Merjaa] malla{V}]]] (1.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [T{v,V} [[D Merjaa] malla{V}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T [v{V} [[D Merjaa] malla{V}]]]]
				Extracted head "ihailee" and reconstructed it = [[D Pekka] [T [v [ihailee [[D Merjaa] malla{V}]]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [T [v [ihailee [[D Merjaa] [malla virtaa]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				<malla virtaa> was made an adjunct.
				= [<D Pekka> [T [<D Pekka> [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]
			!Dropping A-/A-bar movement.
			= [<D Pekka> [T [<D Pekka> [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 [v [ihailee [[D Merjaa] <malla virtaa>]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 12/108 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [v [V [[D N] ADVP]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
ihailee: [V, v, T/fin]
D: [D, V, v, T/fin]
Merjaa: [N, D, V, v, T/fin]
malla: [ADV, V, v, T/fin]
virtaa: [V, ADV, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 16
['Pekka', 'ei', 'ihaile', 'Merjaa', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.

		Next word contains multiple morphemes ['$T', '$v', 'ihaile-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			!Reconstructing head movement for ei.
			!Dropping floaters...
				= ei
			!Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "v"

		[[D Pekka] [ei T]] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D Pekka] [ei T{v}]]

7.

		Consume "ihailee"

		[[D Pekka] [ei T{v}]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*ihailee]
			=[[D Pekka] [ei T{v,V}]]

8.

		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{v,V}]]

9.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [ei T{v,V}]] + D
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [v ihailee]]]]] D] due to bad left branch.
				Reject [[ei [T [v ihailee]]] D] due to bad left branch.
		Exploring solution number (1) =[T{v,V} D]
			T{v,V} cannot be opened.
			=[[D Pekka] [ei [T{v,V} D]]]

10.

		Consume "Merjaa"

		[[D Pekka] [ei [T{v,V} D]]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [ei [T{v,V} D{N}]]]

11.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [ei [T{v,V} D{N}]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [ei [T [v [ihailee [D Merjaa]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T{v,V} D{N}], malla] because the operation breaks up an existing selectional dependency.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T [v [ihailee [D Merjaa]]]] as left branch because it constitutes illicit structure.
				Avoid [Merjaa malla] due to complement selection against [ADV]
		Ranking completed:
			1. [[[D Pekka] [ei [T{v,V} D{N}]]]; malla]
			2. [D{N}; malla]
			3. [[ei [T{v,V} D{N}]]; malla]
			4. [[T{v,V} D{N}]; malla]
		Exploring solution number (1) =[[[D Pekka] [ei [T{v,V} D{N}]]] malla]
			!Reconstructing head movement for [[D Pekka] [ei [T{v,V} D{N}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [v{V} D{N}]]]]
				Extracted head "ihailee" and reconstructed it = [[D Pekka] [ei [T [v [ihailee D{N}]]]]]
				Extracted head "Merjaa" from D and created [[D Pekka] [ei [T [v [ihailee [D Merjaa]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				= [[D Pekka] [ei [T [v [ihailee [D Merjaa]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of v
			=[[[D Pekka]:1 [ei [T [(DP):1 [v [ihailee [D Merjaa]]]]]]] malla]

12.

		Consume "virtaa"

		[[[D Pekka] [ei [T [[D Pekka] [v [ihailee [D Merjaa]]]]]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[D Pekka]:1 [ei [T [(DP):1 [v [ihailee [D Merjaa]]]]]]] malla{V}]

13.
	>>>	Trying candidate parse [[[D Pekka] [ei [T [[D Pekka] [v [ihailee [D Merjaa]]]]]]] malla{V}] (1.)
		Reconstructing...
			!Reconstructing head movement for [[[D Pekka]:1 [ei [T [(DP):1 [v [ihailee [D Merjaa]]]]]]] malla{V}].
				Extracted head "virtaa" from malla and created [[[D Pekka]:1 [ei [T [(DP):1 [v [ihailee [D Merjaa]]]]]]] [malla virtaa]]
			!Dropping floaters...
				malla failed to tail.
				= [[[D Pekka] [ei [T [[D Pekka] [v [ihailee [D Merjaa]]]]]]] [malla virtaa]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka ei T __v ihailee D Merjaa " into memory buffer from SPEC of "malla".
				Memory buffer: [[[D N] [Neg/fin [ [[D N] [v [V [D N]]]]]]]]
			= [[[D Pekka] [ei [T [[D Pekka] [v [ihailee [D Merjaa]]]]]]] [malla virtaa]]
		Checking LF-interface conditions.
			malla<[ADV]> failed to tail features [CAT:V]
malla
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
v: [v, , Neg/fin]
ihailee: [V, v, , Neg/fin]
D: [D, V, v, , Neg/fin]
Merjaa: [N, D, V, v, , Neg/fin]
malla: [ADV]
virtaa: [V, ADV]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} malla]
			D was opened.
			=[[D Pekka] [ei [T{v,V} [[D Merjaa] malla]]]]

14.

		Consume "virtaa"

		[[D Pekka] [ei [T{v,V} [[D Merjaa] malla]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [ei [T{v,V} [[D Merjaa] malla{V}]]]]

15.
	>>>	Trying candidate parse [[D Pekka] [ei [T{v,V} [[D Merjaa] malla{V}]]]] (2.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [ei [T{v,V} [[D Merjaa] malla{V}]]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [v{V} [[D Merjaa] malla{V}]]]]]
				Extracted head "ihailee" and reconstructed it = [[D Pekka] [ei [T [v [ihailee [[D Merjaa] malla{V}]]]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [ei [T [v [ihailee [[D Merjaa] [malla virtaa]]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<malla virtaa> was made an adjunct.
				= [[D Pekka] [ei [T [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of v
			= [[D Pekka] [ei [T [[D Pekka] [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:1 [ei [T [(DP):1 [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 15/164 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 [v [V [[D N] ADVP]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
v: [v, , Neg/fin]
ihailee: [V, v, , Neg/fin]
D: [D, V, v, , Neg/fin]
Merjaa: [N, D, V, v, , Neg/fin]
malla: [ADV, V, v, , Neg/fin]
virtaa: [V, ADV, V, v, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 17
['Pekka', 'antoi', 'kirjan', 'Merjalle', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "v"

		[[D Pekka] T] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D Pekka] T{v}]

6.

		Consume "antaa"

		[[D Pekka] T{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*antaa]
			=[[D Pekka] T{v,V}]

7.

		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] T{v,V}]

8.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] T{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[T{v,V} D]
			T{v,V} cannot be opened.
			=[[D Pekka] [T{v,V} D]]

9.

		Consume "kirja"

		[[D Pekka] [T{v,V} D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [T{v,V} D{N}]]

10.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [T{v,V} D{N}]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle)
				Avoid T/finP as SPEC, P(lle)
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection against [P]
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D Pekka] [T{v,V} D{N}]]; P(lle)]
			3. [[T{v,V} D{N}]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [T{v,V} [[D kirja] P(lle)]]]

11.

		Consume "D"

		[[D Pekka] [T{v,V} [[D kirja] P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [T{v,V} [[D kirja] P(lle){D}]]]

12.

		Consume "Merja-"

		[[D Pekka] [T{v,V} [[D kirja] P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [T{v,V} [[D kirja] P(lle){D,N}]]]

13.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [T{v,V} [[D kirja] P(lle){D,N}]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla
				Avoid T/finP as SPEC, malla
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]] as left branch because it constitutes illicit structure.
				[D kirja]" has no thematic role
				Avoid [[D kirja] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid [[D kirja] P(lle){D,N}] because it could break words.
				Avoid [[D kirja] P(lle){D,N}] due to tail-head failure.
				Avoid [P(lle){D,N} malla] due to complement selection against [ADV]
				Avoid [Merja- malla] due to complement selection against [ADV]
				Avoid P(lle){D,N} due to tail-head failure.
			P(lle) was opened.
				Prioritize P(lle){D,N} because all solutions were negative.
		Ranking completed:
			1. [P(lle){D,N}; malla]
			2. [[[D Pekka] [T{v,V} [[D kirja] P(lle){D,N}]]]; malla]
			3. [[T{v,V} [[D kirja] P(lle){D,N}]]; malla]
			4. [[[D kirja] P(lle){D,N}]; malla]
		Exploring solution number (1) =[P(lle){D,N} malla]
			P(lle) was opened.
			=[[D Pekka] [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]]

14.

		Consume "virtaa"

		[[D Pekka] [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]

15.
	>>>	Trying candidate parse [[D Pekka] [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]] (1.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T [v{V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [T [v [antaa [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [T [v [antaa [[D kirja] [[P(lle) [D Merja-]] [malla virtaa]]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				<malla virtaa> was made an adjunct.
				= [<D Pekka> [T [<D Pekka> [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla virtaa>]]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D Pekka>:1 [T [<DP>:1 [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla virtaa>]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [<D Pekka> [T [<D Pekka> [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 15/155 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [v [V [DP [[P [D N]] ADVP]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
malla: [ADV, V, v, T/fin]
virtaa: [V, ADV, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 18
['Pekka', 'ei', 'antanut', 'kirjaa', 'Merjalle', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.
		Ambiguous lexical item [?, ?]detected.

		Next word contains multiple morphemes ['$T', '$v', 'anta-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			!Reconstructing head movement for ei.
			!Dropping floaters...
				= ei
			!Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "v"

		[[D Pekka] [ei T]] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D Pekka] [ei T{v}]]

7.

		Consume "antaa"

		[[D Pekka] [ei T{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*antaa]
			=[[D Pekka] [ei T{v,V}]]

8.

		Next word contains multiple morphemes ['$par', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{v,V}]]

9.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [ei T{v,V}]] + D
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [v antaa]]]]] D] due to bad left branch.
				Reject [[ei [T [v antaa]]] D] due to bad left branch.
		Exploring solution number (1) =[T{v,V} D]
			T{v,V} cannot be opened.
			=[[D Pekka] [ei [T{v,V} D]]]

10.

		Consume "kirja"

		[[D Pekka] [ei [T{v,V} D]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [ei [T{v,V} D{N}]]]

11.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [ei [T{v,V} D{N}]]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [ei [T [v [antaa [D kirja]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T{v,V} D{N}], P(lle)] because the operation breaks up an existing selectional dependency.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection against [P]
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
		Ranking completed:
			1. [[[D Pekka] [ei [T{v,V} D{N}]]]; P(lle)]
			2. [[ei [T{v,V} D{N}]]; P(lle)]
			3. [D{N}; P(lle)]
			4. [[T{v,V} D{N}]; P(lle)]
		Exploring solution number (1) =[[[D Pekka] [ei [T{v,V} D{N}]]] P(lle)]
			!Reconstructing head movement for [[D Pekka] [ei [T{v,V} D{N}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [v{V} D{N}]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [ei [T [v [antaa D{N}]]]]]
				Extracted head "kirja" from D and created [[D Pekka] [ei [T [v [antaa [D kirja]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				= [[D Pekka] [ei [T [v [antaa [D kirja]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of v
			=[[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] P(lle)]

12.

		Consume "D"

		[[[D Pekka] [ei [T [[D Pekka] [v [antaa [D kirja]]]]]]] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] P(lle){D}]

13.

		Consume "Merja-"

		[[[D Pekka] [ei [T [[D Pekka] [v [antaa [D kirja]]]]]]] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] P(lle){D,N}]

14.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[[D Pekka] [ei [T [[D Pekka] [v [antaa [D kirja]]]]]]] P(lle){D,N}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [P(lle){D,N} malla] due to complement selection against [ADV]
				Avoid [Merja- malla] due to complement selection against [ADV]
		Ranking completed:
			1. [[[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] P(lle){D,N}]; malla]
			2. [P(lle){D,N}; malla]
		Exploring solution number (1) =[[[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] P(lle){D,N}] malla]
			!Reconstructing head movement for [[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] [P(lle) D{N}]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]]
			!Dropping floaters...
				= [[[D Pekka] [ei [T [[D Pekka] [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka ei T __v antaa D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[[D N] [Neg/fin [ [[D N] [v [V [D N]]]]]]]]
			=[[[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]] malla]

15.

		Consume "virtaa"

		[[[[D Pekka] [ei [T [[D Pekka] [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]] malla{V}]

16.
	>>>	Trying candidate parse [[[[D Pekka] [ei [T [[D Pekka] [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]] malla{V}] (1.)
		Reconstructing...
			!Reconstructing head movement for [[[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]] malla{V}].
				Extracted head "virtaa" from malla and created [[[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]] [malla virtaa]]
			!Dropping floaters...
				malla failed to tail.
				= [[[[D Pekka] [ei [T [[D Pekka] [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]] [malla virtaa]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka ei T __v antaa D kirja P(lle) D Merja- " into memory buffer from SPEC of "malla".
				Memory buffer: [[[[D N] [Neg/fin [ [[D N] [v [V [D N]]]]]]] [P [D N]]]]
				Dropping [[[D N] [Neg/fin [ [[D N] [v [V [D N]]]]]]] [P [D N]]](=D Pekka ei T __v antaa D kirja P(lle) D Merja- ) from memory buffer into Comp of ['V'].
				Result [[[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]]:1 [malla [virtaa (PP):1]]]
				Remaining items in memory buffer: []
			= [[[[D Pekka] [ei [T [[D Pekka] [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]] [malla [virtaa [[[D Pekka] [ei [T [[D Pekka] [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]]]]]
		Checking LF-interface conditions.
			malla<[ADV]> failed to tail features [CAT:V]
malla
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'null']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
v: [v, , Neg/fin]
antaa: [V, v, , Neg/fin]
D: [D, V, v, , Neg/fin]
kirja: [N, D, V, v, , Neg/fin]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
malla: [ADV]
virtaa: [V, ADV]
(D): [D, V, ADV]
(N): [N, D, V, ADV]
(Neg/fin): [Neg/fin, V, ADV]
(): [, Neg/fin, V, ADV]
(D): [D, , Neg/fin, V, ADV]
(N): [N, D, , Neg/fin, V, ADV]
(v): [v, , Neg/fin, V, ADV]
(V): [V, v, , Neg/fin, V, ADV]
(D): [D, V, v, , Neg/fin, V, ADV]
(N): [N, D, V, v, , Neg/fin, V, ADV]
(P): [P, V, ADV]
(D): [D, P, V, ADV]
(N): [N, D, P, V, ADV]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[P(lle){D,N} malla]
			P(lle) was opened.
			=[[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] [[P(lle) [D Merja-]] malla]]

17.

		Consume "virtaa"

		[[[D Pekka] [ei [T [[D Pekka] [v [antaa [D kirja]]]]]]] [[P(lle) [D Merja-]] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] [[P(lle) [D Merja-]] malla{V}]]

18.
	>>>	Trying candidate parse [[[D Pekka] [ei [T [[D Pekka] [v [antaa [D kirja]]]]]]] [[P(lle) [D Merja-]] malla{V}]] (2.)
		Reconstructing...
			!Reconstructing head movement for [[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] [[P(lle) [D Merja-]] malla{V}]].
				Extracted head "virtaa" from malla and created [[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] [[P(lle) [D Merja-]] [malla virtaa]]]
			!Dropping floaters...
				malla failed to tail.
				malla failed to tail.
				= [[[D Pekka] [ei [T [[D Pekka] [v [antaa [D kirja]]]]]]] [[P(lle) [D Merja-]] [malla virtaa]]]
			!Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "malla".
				Moving "D Pekka ei T __v antaa D kirja " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Memory buffer: [[P [D N]], [[D N] [Neg/fin [ [[D N] [v [V [D N]]]]]]]]
				Dropping [P [D N]](=P(lle) D Merja- ) from memory buffer into Comp of ['V'].
				Result [[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] [? [[P(lle) [D Merja-]]:1 [malla [virtaa (PP):1]]]]]
				Remaining items in memory buffer: [[[D N] [Neg/fin [ [[D N] [v [V [D N]]]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [D kirja]]]]]]] [? [[P(lle) [D Merja-]]:1 [malla [virtaa (PP):1]]]]].
			= [[[D Pekka] [ei [T [[D Pekka] [v [antaa [D kirja]]]]]]] [? [[P(lle) [D Merja-]] [malla [virtaa [P(lle) [D Merja-]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
v: [v, , Neg/fin]
antaa: [V, v, , Neg/fin]
D: [D, V, v, , Neg/fin]
kirja: [N, D, V, v, , Neg/fin]
?: [?]
P(lle): [P, ?]
D: [D, P, ?]
Merja-: [N, D, P, ?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]
(P): [P, V, ADV, ?]
(D): [D, P, V, ADV, ?]
(N): [N, D, P, V, ADV, ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[ei [T{v,V} D{N}]] P(lle)]
			!Reconstructing head movement for [ei [T{v,V} D{N}]].
				Extracted head "v{V}" and reconstructed it = [ei [T [v{V} D{N}]]]
				Extracted head "antaa" and reconstructed it = [ei [T [v [antaa D{N}]]]]
				Extracted head "kirja" from D and created [ei [T [v [antaa [D kirja]]]]]
			!Dropping floaters...
				= [ei [T [v [antaa [D kirja]]]]]
			!Dropping A-/A-bar movement.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [ei [T [v [antaa [D kirja]]]]].
			=[[D Pekka] [[ei [T [v [antaa [D kirja]]]]] P(lle)]]

19.

		Consume "D"

		[[D Pekka] [[ei [T [v [antaa [D kirja]]]]] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [[ei [T [v [antaa [D kirja]]]]] P(lle){D}]]

20.

		Consume "Merja-"

		[[D Pekka] [[ei [T [v [antaa [D kirja]]]]] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [[ei [T [v [antaa [D kirja]]]]] P(lle){D,N}]]

21.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [[ei [T [v [antaa [D kirja]]]]] P(lle){D,N}]] + malla
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [? [[ei [T [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]]]] malla] due to bad left branch.
			Ranking remaining sites...
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [[ei [T [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid [P(lle){D,N} malla] due to complement selection against [ADV]
				Avoid [Merja- malla] due to complement selection against [ADV]
			P(lle) was opened.
				Prioritize P(lle){D,N} because all solutions were negative.
		Ranking completed:
			1. [P(lle){D,N}; malla]
			2. [[[ei [T [v [antaa [D kirja]]]]] P(lle){D,N}]; malla]
		Exploring solution number (1) =[P(lle){D,N} malla]
			P(lle) was opened.
			=[[D Pekka] [[ei [T [v [antaa [D kirja]]]]] [[P(lle) [D Merja-]] malla]]]

22.

		Consume "virtaa"

		[[D Pekka] [[ei [T [v [antaa [D kirja]]]]] [[P(lle) [D Merja-]] malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [[ei [T [v [antaa [D kirja]]]]] [[P(lle) [D Merja-]] malla{V}]]]

23.
	>>>	Trying candidate parse [[D Pekka] [[ei [T [v [antaa [D kirja]]]]] [[P(lle) [D Merja-]] malla{V}]]] (3.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [[ei [T [v [antaa [D kirja]]]]] [[P(lle) [D Merja-]] malla{V}]]].
				Extracted head "virtaa" from malla and created [[D Pekka] [[ei [T [v [antaa [D kirja]]]]] [[P(lle) [D Merja-]] [malla virtaa]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				malla failed to tail.
				malla failed to tail.
				= [[D Pekka] [[ei [T [v [antaa [D kirja]]]]] [[P(lle) [D Merja-]] [malla virtaa]]]]
			!Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "malla".
				Moving "ei T v antaa D kirja " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Moving "D Pekka " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Memory buffer: [[P [D N]], [Neg/fin [ [v [V [D N]]]]], [D N]]
				Dropping [P [D N]](=P(lle) D Merja- ) from memory buffer into Comp of ['V'].
				Result [[D Pekka] [? [[ei [T [v [antaa [D kirja]]]]] [? [[P(lle) [D Merja-]]:1 [malla [virtaa (PP):1]]]]]]]
				Remaining items in memory buffer: [[Neg/fin [ [v [V [D N]]]]], [D N]]
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [[D Pekka] [? [[ei [T [v [antaa [D kirja]]]]] [? [[P(lle) [D Merja-]]:1 [malla [virtaa (PP):1]]]]]]].
			= [[D Pekka] [? [[ei [T [v [antaa [D kirja]]]]] [? [[P(lle) [D Merja-]] [malla [virtaa [P(lle) [D Merja-]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
?: [?]
ei: [Neg/fin, ?]
T: [, Neg/fin, ?]
v: [v, , Neg/fin, ?]
antaa: [V, v, , Neg/fin, ?]
D: [D, V, v, , Neg/fin, ?]
kirja: [N, D, V, v, , Neg/fin, ?]
?: [?, ?]
P(lle): [P, ?, ?]
D: [D, P, ?, ?]
Merja-: [N, D, P, ?, ?]
malla: [ADV, ?, ?]
virtaa: [V, ADV, ?, ?]
(P): [P, V, ADV, ?, ?]
(D): [D, P, V, ADV, ?, ?]
(N): [N, D, P, V, ADV, ?, ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[ei [T [v [antaa [D kirja]]]]] P(lle){D,N}] malla]
			!Reconstructing head movement for [[ei [T [v [antaa [D kirja]]]]] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[ei [T [v [antaa [D kirja]]]]] [P(lle) D{N}]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[ei [T [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]]
			!Dropping floaters...
				= [[ei [T [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]]
			!Dropping A-/A-bar movement.
				Moving "ei T v antaa D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[Neg/fin [ [v [V [D N]]]]]]
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[ei [T [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]].
			=[[D Pekka] [[[ei [T [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]] malla]]

24.

		Consume "virtaa"

		[[D Pekka] [[[ei [T [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [[[ei [T [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]] malla{V}]]

25.
	>>>	Trying candidate parse [[D Pekka] [[[ei [T [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]] malla{V}]] (4.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [[[ei [T [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]] malla{V}]].
				Extracted head "virtaa" from malla and created [[D Pekka] [[[ei [T [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]] [malla virtaa]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				malla failed to tail.
				= [[D Pekka] [[[ei [T [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]] [malla virtaa]]]
			!Dropping A-/A-bar movement.
				Moving "ei T v antaa D kirja P(lle) D Merja- " into memory buffer from SPEC of "malla".
				Moving "D Pekka " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Memory buffer: [[[Neg/fin [ [v [V [D N]]]]] [P [D N]]], [D N]]
				Dropping [[Neg/fin [ [v [V [D N]]]]] [P [D N]]](=ei T v antaa D kirja P(lle) D Merja- ) from memory buffer into Comp of ['V'].
				Result [[D Pekka] [? [[[ei [T [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]]:1 [malla [virtaa (PP):1]]]]]
				Remaining items in memory buffer: [[D N]]
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "(Neg/fin)" lacks specifier but needs one.
				An EPP-head "(v)" lacks specifier D that it requires.
				Extraposition will be tried on [[D Pekka] [? [[[ei [T [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]]:1 [malla [virtaa (PP):1]]]]].
			= [[D Pekka] [? [[[ei [T [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]] [malla [virtaa [[ei [T [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "(Neg/fin)" lacks specifier but needs one.
				An EPP-head "(v)" lacks specifier D that it requires.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'null']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
?: [?]
ei: [Neg/fin, ?]
T: [, Neg/fin, ?]
v: [v, , Neg/fin, ?]
antaa: [V, v, , Neg/fin, ?]
D: [D, V, v, , Neg/fin, ?]
kirja: [N, D, V, v, , Neg/fin, ?]
P(lle): [P, ?]
D: [D, P, ?]
Merja-: [N, D, P, ?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]
(Neg/fin): [Neg/fin, V, ADV, ?]
(): [, Neg/fin, V, ADV, ?]
(v): [v, , Neg/fin, V, ADV, ?]
(V): [V, v, , Neg/fin, V, ADV, ?]
(D): [D, V, v, , Neg/fin, V, ADV, ?]
(N): [N, D, V, v, , Neg/fin, V, ADV, ?]
(P): [P, V, ADV, ?]
(D): [D, P, V, ADV, ?]
(N): [N, D, P, V, ADV, ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [ei [T{v,V} [[D kirja] P(lle)]]]]

26.

		Consume "D"

		[[D Pekka] [ei [T{v,V} [[D kirja] P(lle)]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D}]]]]

27.

		Consume "Merja-"

		[[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D}]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D,N}]]]]

28.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D,N}]]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [ei [T [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T{v,V} [[D kirja] P(lle){D,N}]], malla] because the operation breaks up an existing selectional dependency.
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
				Avoid [T [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[D kirja] P(lle){D,N}] because it could break words.
				Avoid [P(lle){D,N} malla] due to complement selection against [ADV]
				Avoid [Merja- malla] due to complement selection against [ADV]
		Ranking completed:
			1. [[[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D,N}]]]]; malla]
			2. [[[D kirja] P(lle){D,N}]; malla]
			3. [[ei [T{v,V} [[D kirja] P(lle){D,N}]]]; malla]
			4. [P(lle){D,N}; malla]
			5. [[T{v,V} [[D kirja] P(lle){D,N}]]; malla]
		Exploring solution number (1) =[[[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D,N}]]]] malla]
			!Reconstructing head movement for [[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D,N}]]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [v{V} [[D kirja] P(lle){D,N}]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [ei [T [v [antaa [[D kirja] P(lle){D,N}]]]]]]
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [ei [T [v [antaa [[D kirja] [P(lle) D{N}]]]]]]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [ei [T [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				= [[D Pekka] [ei [T [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of v
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [[D Pekka]:1 [ei [T [(DP):1 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			=[[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]] malla]

29.

		Consume "virtaa"

		[[[D Pekka] [ei [T [[D Pekka] [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]] malla{V}]

30.
	>>>	Trying candidate parse [[[D Pekka] [ei [T [[D Pekka] [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]] malla{V}] (5.)
		Reconstructing...
			!Reconstructing head movement for [[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]] malla{V}].
				Extracted head "virtaa" from malla and created [[[D Pekka]:1 [ei [T [(DP):1 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]] [malla virtaa]]
			!Dropping floaters...
				malla failed to tail.
				= [[[D Pekka] [ei [T [[D Pekka] [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]] [malla virtaa]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka ei T __v antaa D kirja P(lle) D Merja- " into memory buffer from SPEC of "malla".
				Memory buffer: [[[D N] [Neg/fin [ [[D N] [v [V [[D N] [P [D N]]]]]]]]]]
			= [[[D Pekka] [ei [T [[D Pekka] [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]] [malla virtaa]]
		Checking LF-interface conditions.
			malla<[ADV]> failed to tail features [CAT:V]
malla
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
v: [v, , Neg/fin]
antaa: [V, v, , Neg/fin]
D: [D, V, v, , Neg/fin]
kirja: [N, D, V, v, , Neg/fin]
P(lle): [P, V, v, , Neg/fin]
D: [D, P, V, v, , Neg/fin]
Merja-: [N, D, P, V, v, , Neg/fin]
malla: [ADV]
virtaa: [V, ADV]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D kirja] P(lle){D,N}] malla]
			!Reconstructing head movement for [[D kirja] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[D kirja] [P(lle) D{N}]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D kirja] [P(lle) [D Merja-]]]
			!Dropping floaters...
				[D kirja] failed to tail [!COMP:*][-PHI]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped.
				= [<D kirja> [P(lle) [D [<D kirja> Merja-]]]]
			!Dropping A-/A-bar movement.
			=[[D Pekka] [ei [T{v,V} [[<D kirja>:1 [P(lle) [D [<DP>:1 Merja-]]]] malla]]]]

31.

		Consume "virtaa"

		[[D Pekka] [ei [T{v,V} [[<D kirja> [P(lle) [D [<D kirja> Merja-]]]] malla]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [ei [T{v,V} [[<D kirja>:1 [P(lle) [D [<DP>:1 Merja-]]]] malla{V}]]]]

32.
	>>>	Trying candidate parse [[D Pekka] [ei [T{v,V} [[<D kirja> [P(lle) [D [<D kirja> Merja-]]]] malla{V}]]]] (6.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [ei [T{v,V} [[<D kirja>:1 [P(lle) [D [<DP>:1 Merja-]]]] malla{V}]]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [v{V} [[<D kirja>:1 [P(lle) [D [<DP>:1 Merja-]]]] malla{V}]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [ei [T [v [antaa [[<D kirja>:1 [P(lle) [D [<DP>:1 Merja-]]]] malla{V}]]]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [ei [T [v [antaa [[<D kirja>:1 [P(lle) [D [<DP>:1 Merja-]]]] [malla virtaa]]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<malla virtaa> was made an adjunct.
				= [[D Pekka] [ei [T [v [antaa [[<D kirja> [P(lle) [D [<D kirja> Merja-]]]] <malla virtaa>]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of v
			= [[D Pekka] [ei [T [[D Pekka] [v [antaa [[<D kirja> [P(lle) [D [<D kirja> Merja-]]]] <malla virtaa>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:1 [ei [T [(DP):1 [v [antaa [[<D kirja>:1 [P(lle) [D [<DP>:1 Merja-]]]] <malla virtaa>]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 32/494 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] [v [antaa [[<D kirja> [P(lle) [D [<D kirja> Merja-]]]] <malla virtaa>]]]]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 [v [antaa [[<D kirja>:1 [P(lle) [D [<DP>:1 Merja-]]]] <malla virtaa>]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 [v [V [[DP:1 [P [D [__:1 N]]]] ADVP]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
v: [v, , Neg/fin]
antaa: [V, v, , Neg/fin]
D: [D, V, v, , Neg/fin]
kirja: [N, D, V, v, , Neg/fin]
P(lle): [P, V, v, , Neg/fin]
D: [D, P, V, v, , Neg/fin]
(D): [D, N, D, P, V, v, , Neg/fin]
(N): [N, D, N, D, P, V, v, , Neg/fin]
Merja-: [N, D, P, V, v, , Neg/fin]
malla: [ADV, V, v, , Neg/fin]
virtaa: [V, ADV, V, v, , Neg/fin]

			Checking if the sentence is ambiguous...

		Next word contains multiple morphemes ['$T', '$v', 'anta-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			!Reconstructing head movement for ei.
			!Dropping floaters...
				= ei
			!Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.


\========================================================================
# 19
['Pekka', 'käski', 'heidän', 'nukkua', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Next word contains multiple morphemes ['$T/fin', 'käske-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "käske"

		[[D Pekka] T] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] T{V}]

6.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] T{V}]

7.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D Pekka] T{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D
				Avoid [T{V} D] due to local agreement failure.
				Avoid [T{V} D] due to complement selection against [D]
		Ranking completed:
			1. [[[D Pekka] T{V}]; D]
			2. [T{V}; D]
		Exploring solution number (1) =[[[D Pekka] T{V}] D]
			!Reconstructing head movement for [[D Pekka] T{V}].
				Extracted head "käske" from T and created [[D Pekka] [T käske]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				= [<D Pekka> [T [<D Pekka> käske]]]
			!Dropping A-/A-bar movement.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] D]

8.

		Consume "heidän"

		[[<D Pekka> [T [<D Pekka> käske]]] D] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] D{N}]

9.

		Next word contains multiple morphemes ['$-ta', 'nukku-']

		Consume "Ainf"

		[[<D Pekka> [T [<D Pekka> käske]]] D{N}] + Ainf
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Prioritize DP as SPEC,Ainf
				Prioritize D as SPEC,Ainf
		Ranking completed:
			1. [D{N}; Ainf]
			2. [[[<D Pekka>:1 [T [<DP>:1 käske]]] D{N}]; Ainf]
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] Ainf]]

10.

		Consume "nukku"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] Ainf]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*nukku]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] Ainf{V}]]

11.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] Ainf{V}]] + malla
			Filtering out impossible merge sites...
				Reject [[[<D Pekka> [T [<D Pekka> käske]]] [? [<D heidän> [Ainf [<D heidän> nukku]]]]] malla] due to bad left branch.
			Ranking remaining sites...
				Avoid [nukku malla] due to complement selection against [ADV]
		Ranking completed:
			1. [[[D heidän] Ainf{V}]; malla]
			2. [Ainf{V}; malla]
		Exploring solution number (1) =[[[D heidän] Ainf{V}] malla]
			!Reconstructing head movement for [[D heidän] Ainf{V}].
				Extracted head "nukku" from Ainf and created [[D heidän] [Ainf nukku]]
			!Dropping floaters...
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				= [<D heidän> [Ainf [<D heidän> nukku]]]
			!Dropping A-/A-bar movement.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 nukku]]] malla]]

12.

		Consume "virtaa"

		[[<D Pekka> [T [<D Pekka> käske]]] [[<D heidän> [Ainf [<D heidän> nukku]]] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 nukku]]] malla{V}]]

13.
	>>>	Trying candidate parse [[<D Pekka> [T [<D Pekka> käske]]] [[<D heidän> [Ainf [<D heidän> nukku]]] malla{V}]] (1.)
		Reconstructing...
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 nukku]]] malla{V}]].
				Extracted head "virtaa" from malla and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 nukku]]] [malla virtaa]]]
			!Dropping floaters...
				malla failed to tail.
				malla failed to tail.
				= [[<D Pekka> [T [<D Pekka> käske]]] [[<D heidän> [Ainf [<D heidän> nukku]]] [malla virtaa]]]
			!Dropping A-/A-bar movement.
				Moving "D heidän Ainf __nukku " into memory buffer from SPEC of "malla".
				Moving "D Pekka T __käske " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Memory buffer: [[[D N] [ [[D N] V]]], [[D N] [T/fin [[D N] V]]]]
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [[<D Pekka>:1 [T [<DP>:1 käske]]] [? [[<D heidän>:1 [Ainf [<DP>:1 nukku]]] [malla virtaa]]]].
			= [[<D Pekka> [T [<D Pekka> käske]]] [? [[<D heidän> [Ainf [<D heidän> nukku]]] [malla virtaa]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
?: [?]
D: [D, ?]
heidän: [N, D, ?]
Ainf: [, ?]
(D): [D, V, , ?]
(N): [N, D, V, , ?]
nukku: [V, , ?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[Ainf{V} malla]
			Ainf{V} cannot be opened.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{V} malla]]]

14.

		Consume "virtaa"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [Ainf{V} malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{V} malla{V}]]]

15.
	>>>	Trying candidate parse [[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [Ainf{V} malla{V}]]] (2.)
		Reconstructing...
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{V} malla{V}]]].
				Extracted head "nukku" and reconstructed it = [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf [nukku malla{V}]]]]
				Extracted head "virtaa" from malla and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf [nukku [malla virtaa]]]]]
			!Dropping floaters...
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				<malla virtaa> was made an adjunct.
				= [[<D Pekka> [T [<D Pekka> käske]]] [<D heidän> [Ainf [<D heidän> [nukku <malla virtaa>]]]]]
			!Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at Ainf but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [[<D Pekka>:1 [T [<DP>:1 käske]]] [? [<D heidän>:1 [Ainf [<DP>:1 [nukku <malla virtaa>]]]]]].
			= [[<D Pekka> [T [<D Pekka> käske]]] [? [<D heidän> [Ainf [<D heidän> [nukku <malla virtaa>]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
?: [?]
D: [D, ?]
heidän: [N, D, ?]
Ainf: [, ?]
(D): [D, , ?]
(N): [N, D, , ?]
nukku: [V, , ?]
malla: [ADV, V, , ?]
virtaa: [V, ADV, V, , ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[<D Pekka>:1 [T [<DP>:1 käske]]] D{N}] Ainf]
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 käske]]] D{N}].
				Extracted head "heidän" from D and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [D heidän]]
			!Dropping floaters...
				D failed to tail.
				<D heidän> was made an adjunct.
				= [[<D Pekka> [T [<D Pekka> käske]]] <D heidän>]
			!Dropping A-/A-bar movement.
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] Ainf]

16.

		Consume "nukku"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] Ainf] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*nukku]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] Ainf{V}]

17.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] Ainf{V}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf nukku]] as left branch because it constitutes illicit structure.
				Avoid [nukku malla] due to complement selection against [ADV]
		Ranking completed:
			1. [Ainf{V}; malla]
			2. [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] Ainf{V}]; malla]
		Exploring solution number (1) =[Ainf{V} malla]
			Ainf{V} cannot be opened.
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{V} malla]]

18.

		Consume "virtaa"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf{V} malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{V} malla{V}]]

19.
	>>>	Trying candidate parse [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf{V} malla{V}]] (3.)
		Reconstructing...
			!Reconstructing head movement for [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{V} malla{V}]].
				Extracted head "nukku" and reconstructed it = [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [nukku malla{V}]]]
				Extracted head "virtaa" from malla and created [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [nukku [malla virtaa]]]]
			!Dropping floaters...
				<malla virtaa> was made an adjunct.
				= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [nukku <malla virtaa>]]]
			!Dropping A-/A-bar movement.
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [nukku <malla virtaa>]]].
			= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [nukku <malla virtaa>]]]
		Checking LF-interface conditions.
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
D: [D]
heidän: [N, D]
Ainf: []
nukku: [V, ]
malla: [ADV, V, ]
virtaa: [V, ADV, V, ]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] Ainf{V}] malla]
			!Reconstructing head movement for [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] Ainf{V}].
				Extracted head "nukku" from Ainf and created [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf nukku]]
			!Dropping floaters...
				= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf nukku]]
			!Dropping A-/A-bar movement.
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf nukku]].
			=[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf nukku]] malla]

20.

		Consume "virtaa"

		[[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf nukku]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf nukku]] malla{V}]

21.
	>>>	Trying candidate parse [[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf nukku]] malla{V}] (4.)
		Reconstructing...
			!Reconstructing head movement for [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf nukku]] malla{V}].
				Extracted head "virtaa" from malla and created [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf nukku]] [malla virtaa]]
			!Dropping floaters...
				malla failed to tail.
				= [[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf nukku]] [malla virtaa]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka T __käske D heidän Ainf nukku " into memory buffer from SPEC of "malla".
				Memory buffer: [[[[[D N] [T/fin [[D N] V]]] [D N]] [ V]]]
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "nukku" lacks specifier D that it requires.
				Extraposition will be tried on [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf nukku]] [malla virtaa]].
			= [[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf nukku]] [malla virtaa]]
		Checking LF-interface conditions.
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "nukku" lacks specifier D that it requires.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
D: [D]
heidän: [N, D]
Ainf: []
nukku: [V, ]
malla: [ADV]
virtaa: [V, ADV]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkua".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "heidän-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} D]]

22.

		Consume "heidän"

		[[D Pekka] [T{V} D]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [T{V} D{N}]]

23.

		Next word contains multiple morphemes ['$-ta', 'nukku-']

		Consume "Ainf"

		[[D Pekka] [T{V} D{N}]] + Ainf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [käske <D heidän>]]]] Ainf] due to bad left branch.
				Reject [[T [käske <D heidän>]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [T{V} [[D heidän] Ainf]]]

24.

		Consume "nukku"

		[[D Pekka] [T{V} [[D heidän] Ainf]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*nukku]
			=[[D Pekka] [T{V} [[D heidän] Ainf{V}]]]

25.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [T{V} [[D heidän] Ainf{V}]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla
				Avoid T/finP as SPEC, malla
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T [käske [<D heidän> [Ainf [<D heidän> nukku]]]]] as left branch because it constitutes illicit structure.
				Avoid [[D heidän] Ainf{V}] because it could break words.
				Avoid [[D heidän] Ainf{V}] due to tail-head failure.
				Avoid [nukku malla] due to complement selection against [ADV]
				Avoid Ainf{V} due to tail-head failure.
		Ranking completed:
			1. [[[D Pekka] [T{V} [[D heidän] Ainf{V}]]]; malla]
			2. [Ainf{V}; malla]
			3. [[[D heidän] Ainf{V}]; malla]
			4. [[T{V} [[D heidän] Ainf{V}]]; malla]
		Exploring solution number (1) =[[[D Pekka] [T{V} [[D heidän] Ainf{V}]]] malla]
			!Reconstructing head movement for [[D Pekka] [T{V} [[D heidän] Ainf{V}]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [T [käske [[D heidän] Ainf{V}]]]]
				Extracted head "nukku" from Ainf and created [[D Pekka] [T [käske [[D heidän] [Ainf nukku]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				= [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> nukku]]]]]]]
			!Dropping A-/A-bar movement.
			=[[<D Pekka>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 nukku]]]]]]] malla]

26.

		Consume "virtaa"

		[[<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> nukku]]]]]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[<D Pekka>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 nukku]]]]]]] malla{V}]

27.
	>>>	Trying candidate parse [[<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> nukku]]]]]]] malla{V}] (5.)
		Reconstructing...
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 nukku]]]]]]] malla{V}].
				Extracted head "virtaa" from malla and created [[<D Pekka>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 nukku]]]]]]] [malla virtaa]]
			!Dropping floaters...
				malla failed to tail.
				= [[<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> nukku]]]]]]] [malla virtaa]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka T __käske D heidän Ainf __nukku " into memory buffer from SPEC of "malla".
				Memory buffer: [[[D N] [T/fin [[D N] [V [[D N] [ [[D N] V]]]]]]]]
				malla has unaccetable specifier [<D Pekka>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 nukku]]]]]]].
				Extraposition will be tried on [[<D Pekka>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 nukku]]]]]]] [malla virtaa]].
			= [[<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> nukku]]]]]]] [malla virtaa]]
		Checking LF-interface conditions.
				malla has unaccetable specifier [<D Pekka>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 nukku]]]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
käske: [V, T/fin]
D: [D, V, T/fin]
heidän: [N, D, V, T/fin]
Ainf: [, V, T/fin]
(D): [D, V, , V, T/fin]
(N): [N, D, V, , V, T/fin]
nukku: [V, , V, T/fin]
malla: [ADV]
virtaa: [V, ADV]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[Ainf{V} malla]
			Ainf{V} cannot be opened.
			=[[D Pekka] [T{V} [[D heidän] [Ainf{V} malla]]]]

28.

		Consume "virtaa"

		[[D Pekka] [T{V} [[D heidän] [Ainf{V} malla]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [T{V} [[D heidän] [Ainf{V} malla{V}]]]]

29.
	>>>	Trying candidate parse [[D Pekka] [T{V} [[D heidän] [Ainf{V} malla{V}]]]] (6.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [T{V} [[D heidän] [Ainf{V} malla{V}]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf{V} malla{V}]]]]]
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf [nukku malla{V}]]]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [T [käske [[D heidän] [Ainf [nukku [malla virtaa]]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				<malla virtaa> was made an adjunct.
				= [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [nukku <malla virtaa>]]]]]]]]
			!Dropping A-/A-bar movement.
			= [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [nukku <malla virtaa>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 [nukku <malla virtaa>]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 29/412 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [nukku <malla virtaa>]]]]]]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 [nukku <malla virtaa>]]]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V [DP:2 [ [__:2 [V ADVP]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
käske: [V, T/fin]
D: [D, V, T/fin]
heidän: [N, D, V, T/fin]
Ainf: [, V, T/fin]
(D): [D, , V, T/fin]
(N): [N, D, , V, T/fin]
nukku: [V, , V, T/fin]
malla: [ADV, V, , V, T/fin]
virtaa: [V, ADV, V, , V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 20
['Pekka', 'ei', 'käskenyt', 'heidän', 'nukkua', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.

		Next word contains multiple morphemes ['$T', 'käske-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			!Reconstructing head movement for ei.
			!Dropping floaters...
				= ei
			!Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "käske"

		[[D Pekka] [ei T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] [ei T{V}]]

7.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{V}]]

8.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D Pekka] [ei T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [[D Pekka] [ei [[D Pekka] [T käske]]]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T käske]] as left branch because it constitutes illicit structure.
				Avoid [T{V} D] due to local agreement failure.
				Avoid [T{V} D] due to complement selection against [D]
		Ranking completed:
			1. [T{V}; D]
			2. [[ei T{V}]; D]
			3. [[[D Pekka] [ei T{V}]]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} D]]]

9.

		Consume "heidän"

		[[D Pekka] [ei [T{V} D]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [ei [T{V} D{N}]]]

10.

		Next word contains multiple morphemes ['$-ta', 'nukku-']

		Consume "Ainf"

		[[D Pekka] [ei [T{V} D{N}]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [D heidän]]]]]] Ainf] due to bad left branch.
				Reject [[ei [T [käske [D heidän]]]] Ainf] due to bad left branch.
				Reject [[T [käske [D heidän]]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]

11.

		Consume "nukku"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*nukku]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{V}]]]]

12.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{V}]]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T [käske [<D heidän> [Ainf [<D heidän> nukku]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T{V} [[D heidän] Ainf{V}]], malla] because the operation breaks up an existing selectional dependency.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T [käske [<D heidän> [Ainf [<D heidän> nukku]]]]] as left branch because it constitutes illicit structure.
				Avoid [[D heidän] Ainf{V}] because it could break words.
				Avoid [nukku malla] due to complement selection against [ADV]
		Ranking completed:
			1. [[[D Pekka] [ei [T{V} [[D heidän] Ainf{V}]]]]; malla]
			2. [Ainf{V}; malla]
			3. [[[D heidän] Ainf{V}]; malla]
			4. [[ei [T{V} [[D heidän] Ainf{V}]]]; malla]
			5. [[T{V} [[D heidän] Ainf{V}]]; malla]
		Exploring solution number (1) =[[[D Pekka] [ei [T{V} [[D heidän] Ainf{V}]]]] malla]
			!Reconstructing head movement for [[D Pekka] [ei [T{V} [[D heidän] Ainf{V}]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] Ainf{V}]]]]]
				Extracted head "nukku" from Ainf and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf nukku]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				= [[D Pekka] [ei [T [käske [<D heidän> [Ainf [<D heidän> nukku]]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of käske
			=[[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 nukku]]]]]]]] malla]

13.

		Consume "virtaa"

		[[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> nukku]]]]]]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 nukku]]]]]]]] malla{V}]

14.
	>>>	Trying candidate parse [[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> nukku]]]]]]]] malla{V}] (1.)
		Reconstructing...
			!Reconstructing head movement for [[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 nukku]]]]]]]] malla{V}].
				Extracted head "virtaa" from malla and created [[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 nukku]]]]]]]] [malla virtaa]]
			!Dropping floaters...
				malla failed to tail.
				= [[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> nukku]]]]]]]] [malla virtaa]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka ei T __käske D heidän Ainf __nukku " into memory buffer from SPEC of "malla".
				Memory buffer: [[[D N] [Neg/fin [ [[D N] [V [[D N] [ [[D N] V]]]]]]]]]
			= [[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> nukku]]]]]]]] [malla virtaa]]
		Checking LF-interface conditions.
			malla<[ADV]> failed to tail features [CAT:V]
malla
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
käske: [V, , Neg/fin]
D: [D, V, , Neg/fin]
heidän: [N, D, V, , Neg/fin]
Ainf: [, V, , Neg/fin]
(D): [D, V, , V, , Neg/fin]
(N): [N, D, V, , V, , Neg/fin]
nukku: [V, , V, , Neg/fin]
malla: [ADV]
virtaa: [V, ADV]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[Ainf{V} malla]
			Ainf{V} cannot be opened.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{V} malla]]]]]

15.

		Consume "virtaa"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{V} malla]]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{V} malla{V}]]]]]

16.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} [[D heidän] [Ainf{V} malla{V}]]]]] (2.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [ei [T{V} [[D heidän] [Ainf{V} malla{V}]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf{V} malla{V}]]]]]]
				Extracted head "nukku" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [nukku malla{V}]]]]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf [nukku [malla virtaa]]]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				<malla virtaa> was made an adjunct.
				= [[D Pekka] [ei [T [käske [<D heidän> [Ainf [<D heidän> [nukku <malla virtaa>]]]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of käske
			= [[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [nukku <malla virtaa>]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [nukku <malla virtaa>]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 16/194 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [nukku <malla virtaa>]]]]]]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 [käske [<D heidän>:2 [Ainf [<DP>:2 [nukku <malla virtaa>]]]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 [V [DP:2 [ [__:2 [V ADVP]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
käske: [V, , Neg/fin]
D: [D, V, , Neg/fin]
heidän: [N, D, V, , Neg/fin]
Ainf: [, V, , Neg/fin]
(D): [D, , V, , Neg/fin]
(N): [N, D, , V, , Neg/fin]
nukku: [V, , V, , Neg/fin]
malla: [ADV, V, , V, , Neg/fin]
virtaa: [V, ADV, V, , V, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 21
['Pekka', 'käski', 'heidän', 'ihailla', 'Merjaa', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Next word contains multiple morphemes ['$T/fin', 'käske-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "käske"

		[[D Pekka] T] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] T{V}]

6.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] T{V}]

7.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D Pekka] T{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D
				Avoid [T{V} D] due to local agreement failure.
				Avoid [T{V} D] due to complement selection against [D]
		Ranking completed:
			1. [[[D Pekka] T{V}]; D]
			2. [T{V}; D]
		Exploring solution number (1) =[[[D Pekka] T{V}] D]
			!Reconstructing head movement for [[D Pekka] T{V}].
				Extracted head "käske" from T and created [[D Pekka] [T käske]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				= [<D Pekka> [T [<D Pekka> käske]]]
			!Dropping A-/A-bar movement.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] D]

8.

		Consume "heidän"

		[[<D Pekka> [T [<D Pekka> käske]]] D] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] D{N}]

9.

		Next word contains multiple morphemes ['$-ta', '$v', 'ihaile-']

		Consume "Ainf"

		[[<D Pekka> [T [<D Pekka> käske]]] D{N}] + Ainf
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Prioritize DP as SPEC,Ainf
				Prioritize D as SPEC,Ainf
		Ranking completed:
			1. [D{N}; Ainf]
			2. [[[<D Pekka>:1 [T [<DP>:1 käske]]] D{N}]; Ainf]
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] Ainf]]

10.

		Consume "v"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] Ainf]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] Ainf{v}]]

11.

		Consume "ihailee"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] Ainf{v}]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*ihailee]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] Ainf{v,V}]]

12.

		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] Ainf{v,V}]]

13.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] Ainf{v,V}]] + D
			Filtering out impossible merge sites...
				Reject [[[<D Pekka> [T [<D Pekka> käske]]] [? [<D heidän> [Ainf [<D heidän> [v ihailee]]]]]] D] due to bad left branch.
				Reject [[<D heidän> [Ainf [<D heidän> [v ihailee]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} D]]]

14.

		Consume "Merjaa"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [Ainf{v,V} D]]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} D{N}]]]

15.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [Ainf{v,V} D{N}]]] + malla
			Filtering out impossible merge sites...
				Reject [[[<D Pekka> [T [<D Pekka> käske]]] [? [<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]]]] malla] due to bad left branch.
			Ranking remaining sites...
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [ihailee [D Merjaa]]]] as left branch because it constitutes illicit structure.
				Avoid [Merjaa malla] due to complement selection against [ADV]
		Ranking completed:
			1. [[[D heidän] [Ainf{v,V} D{N}]]; malla]
			2. [D{N}; malla]
			3. [[Ainf{v,V} D{N}]; malla]
		Exploring solution number (1) =[[[D heidän] [Ainf{v,V} D{N}]] malla]
			!Reconstructing head movement for [[D heidän] [Ainf{v,V} D{N}]].
				Extracted head "v{V}" and reconstructed it = [[D heidän] [Ainf [v{V} D{N}]]]
				Extracted head "ihailee" and reconstructed it = [[D heidän] [Ainf [v [ihailee D{N}]]]]
				Extracted head "Merjaa" from D and created [[D heidän] [Ainf [v [ihailee [D Merjaa]]]]]
			!Dropping floaters...
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				= [<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]]
			!Dropping A-/A-bar movement.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 [v [ihailee [D Merjaa]]]]]] malla]]

16.

		Consume "virtaa"

		[[<D Pekka> [T [<D Pekka> käske]]] [[<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 [v [ihailee [D Merjaa]]]]]] malla{V}]]

17.
	>>>	Trying candidate parse [[<D Pekka> [T [<D Pekka> käske]]] [[<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]] malla{V}]] (1.)
		Reconstructing...
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 [v [ihailee [D Merjaa]]]]]] malla{V}]].
				Extracted head "virtaa" from malla and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 [v [ihailee [D Merjaa]]]]]] [malla virtaa]]]
			!Dropping floaters...
				malla failed to tail.
				malla failed to tail.
				= [[<D Pekka> [T [<D Pekka> käske]]] [[<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]] [malla virtaa]]]
			!Dropping A-/A-bar movement.
				Moving "D heidän Ainf __v ihailee D Merjaa " into memory buffer from SPEC of "malla".
				Moving "D Pekka T __käske " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Memory buffer: [[[D N] [ [[D N] [v [V [D N]]]]]], [[D N] [T/fin [[D N] V]]]]
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [[<D Pekka>:1 [T [<DP>:1 käske]]] [? [[<D heidän>:1 [Ainf [<DP>:1 [v [ihailee [D Merjaa]]]]]] [malla virtaa]]]].
			= [[<D Pekka> [T [<D Pekka> käske]]] [? [[<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]] [malla virtaa]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
?: [?]
D: [D, ?]
heidän: [N, D, ?]
Ainf: [, ?]
(D): [D, , ?]
(N): [N, D, , ?]
v: [v, , ?]
ihailee: [V, v, , ?]
D: [D, V, v, , ?]
Merjaa: [N, D, V, v, , ?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} malla]
			D was opened.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} [[D Merjaa] malla]]]]

18.

		Consume "virtaa"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [Ainf{v,V} [[D Merjaa] malla]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} [[D Merjaa] malla{V}]]]]

19.
	>>>	Trying candidate parse [[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [Ainf{v,V} [[D Merjaa] malla{V}]]]] (2.)
		Reconstructing...
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} [[D Merjaa] malla{V}]]]].
				Extracted head "v{V}" and reconstructed it = [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf [v{V} [[D Merjaa] malla{V}]]]]]
				Extracted head "ihailee" and reconstructed it = [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf [v [ihailee [[D Merjaa] malla{V}]]]]]]
				Extracted head "virtaa" from malla and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf [v [ihailee [[D Merjaa] [malla virtaa]]]]]]]
			!Dropping floaters...
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				<malla virtaa> was made an adjunct.
				= [[<D Pekka> [T [<D Pekka> käske]]] [<D heidän> [Ainf [<D heidän> [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]]
			!Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at Ainf but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [[<D Pekka>:1 [T [<DP>:1 käske]]] [? [<D heidän>:1 [Ainf [<DP>:1 [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]]].
			= [[<D Pekka> [T [<D Pekka> käske]]] [? [<D heidän> [Ainf [<D heidän> [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
?: [?]
D: [D, ?]
heidän: [N, D, ?]
Ainf: [, ?]
(D): [D, , ?]
(N): [N, D, , ?]
v: [v, , ?]
ihailee: [V, v, , ?]
D: [D, V, v, , ?]
Merjaa: [N, D, V, v, , ?]
malla: [ADV, V, v, , ?]
virtaa: [V, ADV, V, v, , ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[Ainf{v,V} D{N}] malla]
			!Reconstructing head movement for [Ainf{v,V} D{N}].
				Extracted head "v{V}" and reconstructed it = [Ainf [v{V} D{N}]]
				Extracted head "ihailee" and reconstructed it = [Ainf [v [ihailee D{N}]]]
				Extracted head "Merjaa" from D and created [Ainf [v [ihailee [D Merjaa]]]]
			!Dropping floaters...
				= [Ainf [v [ihailee [D Merjaa]]]]
			!Dropping A-/A-bar movement.
				An EPP-head "v" lacks specifier D that it requires.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[Ainf [v [ihailee [D Merjaa]]]] malla]]]

20.

		Consume "virtaa"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [[Ainf [v [ihailee [D Merjaa]]]] malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[Ainf [v [ihailee [D Merjaa]]]] malla{V}]]]

21.
	>>>	Trying candidate parse [[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [[Ainf [v [ihailee [D Merjaa]]]] malla{V}]]] (3.)
		Reconstructing...
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[Ainf [v [ihailee [D Merjaa]]]] malla{V}]]].
				Extracted head "virtaa" from malla and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[Ainf [v [ihailee [D Merjaa]]]] [malla virtaa]]]]
			!Dropping floaters...
				malla failed to tail.
				[D heidän] failed to tail [!COMP:*][PHI:0]
				malla failed to tail.
				= [[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [[Ainf [v [ihailee [D Merjaa]]]] [malla virtaa]]]]
			!Dropping A-/A-bar movement.
				Moving "Ainf v ihailee D Merjaa " into memory buffer from SPEC of "malla".
				Moving "D heidän " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Moving "D Pekka T __käske " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Memory buffer: [[ [v [V [D N]]]], [D N], [[D N] [T/fin [[D N] V]]]]
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[<D Pekka>:1 [T [<DP>:1 käske]]] [? [[D heidän] [? [[Ainf [v [ihailee [D Merjaa]]]] [malla virtaa]]]]]].
			= [[<D Pekka> [T [<D Pekka> käske]]] [? [[D heidän] [? [[Ainf [v [ihailee [D Merjaa]]]] [malla virtaa]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
:['LANG:FI']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
?: [?]
D: [D, ?]
heidän: [N, D, ?]
?: [?, ?]
Ainf: [, ?, ?]
v: [v, , ?, ?]
ihailee: [V, v, , ?, ?]
D: [D, V, v, , ?, ?]
Merjaa: [N, D, V, v, , ?, ?]
malla: [ADV, ?, ?]
virtaa: [V, ADV, ?, ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[<D Pekka>:1 [T [<DP>:1 käske]]] D{N}] Ainf]
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 käske]]] D{N}].
				Extracted head "heidän" from D and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [D heidän]]
			!Dropping floaters...
				D failed to tail.
				<D heidän> was made an adjunct.
				= [[<D Pekka> [T [<D Pekka> käske]]] <D heidän>]
			!Dropping A-/A-bar movement.
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] Ainf]

22.

		Consume "v"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] Ainf] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] Ainf{v}]

23.

		Consume "ihailee"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] Ainf{v}] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*ihailee]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] Ainf{v,V}]

24.

		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] Ainf{v,V}]

25.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] Ainf{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v ihailee]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} D]]

26.

		Consume "Merjaa"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf{v,V} D]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} D{N}]]

27.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf{v,V} D{N}]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [ihailee [D Merjaa]]]]] as left branch because it constitutes illicit structure.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [ihailee [D Merjaa]]]] as left branch because it constitutes illicit structure.
				Avoid [Merjaa malla] due to complement selection against [ADV]
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; malla]
			2. [[Ainf{v,V} D{N}]; malla]
			3. [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} D{N}]]; malla]
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} [[D Merjaa] malla]]]

28.

		Consume "virtaa"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf{v,V} [[D Merjaa] malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} [[D Merjaa] malla{V}]]]

29.
	>>>	Trying candidate parse [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf{v,V} [[D Merjaa] malla{V}]]] (4.)
		Reconstructing...
			!Reconstructing head movement for [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} [[D Merjaa] malla{V}]]].
				Extracted head "v{V}" and reconstructed it = [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v{V} [[D Merjaa] malla{V}]]]]
				Extracted head "ihailee" and reconstructed it = [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [ihailee [[D Merjaa] malla{V}]]]]]
				Extracted head "virtaa" from malla and created [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [ihailee [[D Merjaa] [malla virtaa]]]]]]
			!Dropping floaters...
				<malla virtaa> was made an adjunct.
				= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [ihailee [[D Merjaa] <malla virtaa>]]]]]
			!Dropping A-/A-bar movement.
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [ihailee [[D Merjaa] <malla virtaa>]]]]].
			= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [ihailee [[D Merjaa] <malla virtaa>]]]]]
		Checking LF-interface conditions.
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
D: [D]
heidän: [N, D]
Ainf: []
v: [v, ]
ihailee: [V, v, ]
D: [D, V, v, ]
Merjaa: [N, D, V, v, ]
malla: [ADV, V, v, ]
virtaa: [V, ADV, V, v, ]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[Ainf{v,V} D{N}] malla]
			!Reconstructing head movement for [Ainf{v,V} D{N}].
				Extracted head "v{V}" and reconstructed it = [Ainf [v{V} D{N}]]
				Extracted head "ihailee" and reconstructed it = [Ainf [v [ihailee D{N}]]]
				Extracted head "Merjaa" from D and created [Ainf [v [ihailee [D Merjaa]]]]
			!Dropping floaters...
				= [Ainf [v [ihailee [D Merjaa]]]]
			!Dropping A-/A-bar movement.
				An EPP-head "v" lacks specifier D that it requires.
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[Ainf [v [ihailee [D Merjaa]]]] malla]]

30.

		Consume "virtaa"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [[Ainf [v [ihailee [D Merjaa]]]] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[Ainf [v [ihailee [D Merjaa]]]] malla{V}]]

31.
	>>>	Trying candidate parse [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [[Ainf [v [ihailee [D Merjaa]]]] malla{V}]] (5.)
		Reconstructing...
			!Reconstructing head movement for [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[Ainf [v [ihailee [D Merjaa]]]] malla{V}]].
				Extracted head "virtaa" from malla and created [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[Ainf [v [ihailee [D Merjaa]]]] [malla virtaa]]]
			!Dropping floaters...
				malla failed to tail.
				malla failed to tail.
				= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [[Ainf [v [ihailee [D Merjaa]]]] [malla virtaa]]]
			!Dropping A-/A-bar movement.
				Moving "Ainf v ihailee D Merjaa " into memory buffer from SPEC of "malla".
				Moving "D Pekka T __käske D heidän " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Memory buffer: [[ [v [V [D N]]]], [[[D N] [T/fin [[D N] V]]] [D N]]]
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [? [[Ainf [v [ihailee [D Merjaa]]]] [malla virtaa]]]].
			= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [? [[Ainf [v [ihailee [D Merjaa]]]] [malla virtaa]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
:['LANG:FI']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
D: [D]
heidän: [N, D]
?: [?]
Ainf: [, ?]
v: [v, , ?]
ihailee: [V, v, , ?]
D: [D, V, v, , ?]
Merjaa: [N, D, V, v, , ?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} D{N}]] malla]
			!Reconstructing head movement for [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} D{N}]].
				Extracted head "v{V}" and reconstructed it = [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v{V} D{N}]]]
				Extracted head "ihailee" and reconstructed it = [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [ihailee D{N}]]]]
				Extracted head "Merjaa" from D and created [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [ihailee [D Merjaa]]]]]
			!Dropping floaters...
				= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [ihailee [D Merjaa]]]]]
			!Dropping A-/A-bar movement.
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [ihailee [D Merjaa]]]]].
			=[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [ihailee [D Merjaa]]]]] malla]

32.

		Consume "virtaa"

		[[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [ihailee [D Merjaa]]]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [ihailee [D Merjaa]]]]] malla{V}]

33.
	>>>	Trying candidate parse [[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [ihailee [D Merjaa]]]]] malla{V}] (6.)
		Reconstructing...
			!Reconstructing head movement for [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [ihailee [D Merjaa]]]]] malla{V}].
				Extracted head "virtaa" from malla and created [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [ihailee [D Merjaa]]]]] [malla virtaa]]
			!Dropping floaters...
				malla failed to tail.
				= [[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [ihailee [D Merjaa]]]]] [malla virtaa]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka T __käske D heidän Ainf v ihailee D Merjaa " into memory buffer from SPEC of "malla".
				Memory buffer: [[[[[D N] [T/fin [[D N] V]]] [D N]] [ [v [V [D N]]]]]]
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [ihailee [D Merjaa]]]]] [malla virtaa]].
			= [[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [ihailee [D Merjaa]]]]] [malla virtaa]]
		Checking LF-interface conditions.
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
D: [D]
heidän: [N, D]
Ainf: []
v: [v, ]
ihailee: [V, v, ]
D: [D, V, v, ]
Merjaa: [N, D, V, v, ]
malla: [ADV]
virtaa: [V, ADV]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "ihailla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "heidän-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} D]]

34.

		Consume "heidän"

		[[D Pekka] [T{V} D]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [T{V} D{N}]]

35.

		Next word contains multiple morphemes ['$-ta', '$v', 'ihaile-']

		Consume "Ainf"

		[[D Pekka] [T{V} D{N}]] + Ainf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [käske <D heidän>]]]] Ainf] due to bad left branch.
				Reject [[T [käske <D heidän>]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [T{V} [[D heidän] Ainf]]]

36.

		Consume "v"

		[[D Pekka] [T{V} [[D heidän] Ainf]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D Pekka] [T{V} [[D heidän] Ainf{v}]]]

37.

		Consume "ihailee"

		[[D Pekka] [T{V} [[D heidän] Ainf{v}]]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*ihailee]
			=[[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]

38.

		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]

39.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v ihailee]]]]]]]] D] due to bad left branch.
				Reject [[T [käske [<D heidän> [Ainf [<D heidän> [v ihailee]]]]]] D] due to bad left branch.
				Reject [[<D heidän> [Ainf [<D heidän> [v ihailee]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D]]]]

40.

		Consume "Merjaa"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D]]]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]

41.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D{N}]]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla
				Avoid T/finP as SPEC, malla
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[D heidän] [Ainf{v,V} D{N}]] because it could break words.
				Avoid [[D heidän] [Ainf{v,V} D{N}]] due to tail-head failure.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [ihailee [D Merjaa]]]] as left branch because it constitutes illicit structure.
				Avoid [Ainf{v,V} D{N}] due to tail-head failure.
				Avoid [Merjaa malla] due to complement selection against [ADV]
				Avoid D{N} due to tail-head failure.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; malla]
			2. [[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]; malla]
			3. [[Ainf{v,V} D{N}]; malla]
			4. [[[D heidän] [Ainf{v,V} D{N}]]; malla]
			5. [[T{V} [[D heidän] [Ainf{v,V} D{N}]]]; malla]
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla]]]]]

42.

		Consume "virtaa"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla]]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla{V}]]]]]

43.
	>>>	Trying candidate parse [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla{V}]]]]] (7.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla{V}]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf{v,V} [[D Merjaa] malla{V}]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf [v{V} [[D Merjaa] malla{V}]]]]]]]
				Extracted head "ihailee" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf [v [ihailee [[D Merjaa] malla{V}]]]]]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [T [käske [[D heidän] [Ainf [v [ihailee [[D Merjaa] [malla virtaa]]]]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				<malla virtaa> was made an adjunct.
				= [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]]]]]
			!Dropping A-/A-bar movement.
			= [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 43/589 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]]]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V [DP:2 [ [__:2 [v [V [[D N] ADVP]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
käske: [V, T/fin]
D: [D, V, T/fin]
heidän: [N, D, V, T/fin]
Ainf: [, V, T/fin]
(D): [D, , V, T/fin]
(N): [N, D, , V, T/fin]
v: [v, , V, T/fin]
ihailee: [V, v, , V, T/fin]
D: [D, V, v, , V, T/fin]
Merjaa: [N, D, V, v, , V, T/fin]
malla: [ADV, V, v, , V, T/fin]
virtaa: [V, ADV, V, v, , V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 22
['Pekka', 'ei', 'käskenyt', 'heidän', 'ihailla', 'Merjaa', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.

		Next word contains multiple morphemes ['$T', 'käske-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			!Reconstructing head movement for ei.
			!Dropping floaters...
				= ei
			!Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "käske"

		[[D Pekka] [ei T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] [ei T{V}]]

7.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{V}]]

8.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D Pekka] [ei T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [[D Pekka] [ei [[D Pekka] [T käske]]]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T käske]] as left branch because it constitutes illicit structure.
				Avoid [T{V} D] due to local agreement failure.
				Avoid [T{V} D] due to complement selection against [D]
		Ranking completed:
			1. [T{V}; D]
			2. [[ei T{V}]; D]
			3. [[[D Pekka] [ei T{V}]]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} D]]]

9.

		Consume "heidän"

		[[D Pekka] [ei [T{V} D]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [ei [T{V} D{N}]]]

10.

		Next word contains multiple morphemes ['$-ta', '$v', 'ihaile-']

		Consume "Ainf"

		[[D Pekka] [ei [T{V} D{N}]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [D heidän]]]]]] Ainf] due to bad left branch.
				Reject [[ei [T [käske [D heidän]]]] Ainf] due to bad left branch.
				Reject [[T [käske [D heidän]]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]

11.

		Consume "v"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]]

12.

		Consume "ihailee"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*ihailee]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]

13.

		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]

14.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]] + D
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v ihailee]]]]]]]]] D] due to bad left branch.
				Reject [[ei [T [käske [<D heidän> [Ainf [<D heidän> [v ihailee]]]]]]] D] due to bad left branch.
				Reject [[T [käske [<D heidän> [Ainf [<D heidän> [v ihailee]]]]]] D] due to bad left branch.
				Reject [[<D heidän> [Ainf [<D heidän> [v ihailee]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D]]]]]

15.

		Consume "Merjaa"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D]]]]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]]

16.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T{V} [[D heidän] [Ainf{v,V} D{N}]]], malla] because the operation breaks up an existing selectional dependency.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[D heidän] [Ainf{v,V} D{N}]] because it could break words.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [ihailee [D Merjaa]]]] as left branch because it constitutes illicit structure.
				Avoid [Merjaa malla] due to complement selection against [ADV]
		Ranking completed:
			1. [[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]]; malla]
			2. [D{N}; malla]
			3. [[Ainf{v,V} D{N}]; malla]
			4. [[[D heidän] [Ainf{v,V} D{N}]]; malla]
			5. [[ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]; malla]
			6. [[T{V} [[D heidän] [Ainf{v,V} D{N}]]]; malla]
		Exploring solution number (1) =[[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]] malla]
			!Reconstructing head movement for [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf{v,V} D{N}]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v{V} D{N}]]]]]]]
				Extracted head "ihailee" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [ihailee D{N}]]]]]]]]
				Extracted head "Merjaa" from D and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [ihailee [D Merjaa]]]]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				= [[D Pekka] [ei [T [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of käske
			=[[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [ihailee [D Merjaa]]]]]]]]]]] malla]

17.

		Consume "virtaa"

		[[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]]]]]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [ihailee [D Merjaa]]]]]]]]]]] malla{V}]

18.
	>>>	Trying candidate parse [[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]]]]]]] malla{V}] (1.)
		Reconstructing...
			!Reconstructing head movement for [[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [ihailee [D Merjaa]]]]]]]]]]] malla{V}].
				Extracted head "virtaa" from malla and created [[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [ihailee [D Merjaa]]]]]]]]]]] [malla virtaa]]
			!Dropping floaters...
				malla failed to tail.
				= [[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]]]]]]] [malla virtaa]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka ei T __käske D heidän Ainf __v ihailee D Merjaa " into memory buffer from SPEC of "malla".
				Memory buffer: [[[D N] [Neg/fin [ [[D N] [V [[D N] [ [[D N] [v [V [D N]]]]]]]]]]]]
			= [[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]]]]]]] [malla virtaa]]
		Checking LF-interface conditions.
			malla<[ADV]> failed to tail features [CAT:V]
malla
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
käske: [V, , Neg/fin]
D: [D, V, , Neg/fin]
heidän: [N, D, V, , Neg/fin]
Ainf: [, V, , Neg/fin]
(D): [D, , V, , Neg/fin]
(N): [N, D, , V, , Neg/fin]
v: [v, , V, , Neg/fin]
ihailee: [V, v, , V, , Neg/fin]
D: [D, V, v, , V, , Neg/fin]
Merjaa: [N, D, V, v, , V, , Neg/fin]
malla: [ADV]
virtaa: [V, ADV]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} malla]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla]]]]]]

19.

		Consume "virtaa"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla]]]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla{V}]]]]]]

20.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla{V}]]]]]] (2.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla{V}]]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf{v,V} [[D Merjaa] malla{V}]]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v{V} [[D Merjaa] malla{V}]]]]]]]]
				Extracted head "ihailee" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [ihailee [[D Merjaa] malla{V}]]]]]]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [ihailee [[D Merjaa] [malla virtaa]]]]]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				<malla virtaa> was made an adjunct.
				= [[D Pekka] [ei [T [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of käske
			= [[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 20/232 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]]]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 [käske [<D heidän>:2 [Ainf [<DP>:2 [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 [V [DP:2 [ [__:2 [v [V [[D N] ADVP]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
käske: [V, , Neg/fin]
D: [D, V, , Neg/fin]
heidän: [N, D, V, , Neg/fin]
Ainf: [, V, , Neg/fin]
(D): [D, , V, , Neg/fin]
(N): [N, D, , V, , Neg/fin]
v: [v, , V, , Neg/fin]
ihailee: [V, v, , V, , Neg/fin]
D: [D, V, v, , V, , Neg/fin]
Merjaa: [N, D, V, v, , V, , Neg/fin]
malla: [ADV, V, v, , V, , Neg/fin]
virtaa: [V, ADV, V, v, , V, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 23
['Pekka', 'käski', 'heidän', 'antaa', 'kirjan', 'Merjalle', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Next word contains multiple morphemes ['$T/fin', 'käske-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "käske"

		[[D Pekka] T] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] T{V}]

6.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] T{V}]

7.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D Pekka] T{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D
				Avoid [T{V} D] due to local agreement failure.
				Avoid [T{V} D] due to complement selection against [D]
		Ranking completed:
			1. [[[D Pekka] T{V}]; D]
			2. [T{V}; D]
		Exploring solution number (1) =[[[D Pekka] T{V}] D]
			!Reconstructing head movement for [[D Pekka] T{V}].
				Extracted head "käske" from T and created [[D Pekka] [T käske]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				= [<D Pekka> [T [<D Pekka> käske]]]
			!Dropping A-/A-bar movement.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] D]

8.

		Consume "heidän"

		[[<D Pekka> [T [<D Pekka> käske]]] D] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] D{N}]

9.

		Next word contains multiple morphemes ['$-ta', '$v', 'anta-']

		Consume "Ainf"

		[[<D Pekka> [T [<D Pekka> käske]]] D{N}] + Ainf
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Prioritize DP as SPEC,Ainf
				Prioritize D as SPEC,Ainf
		Ranking completed:
			1. [D{N}; Ainf]
			2. [[[<D Pekka>:1 [T [<DP>:1 käske]]] D{N}]; Ainf]
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] Ainf]]

10.

		Consume "v"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] Ainf]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] Ainf{v}]]

11.

		Consume "antaa"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] Ainf{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*antaa]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] Ainf{v,V}]]

12.

		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] Ainf{v,V}]]

13.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] Ainf{v,V}]] + D
			Filtering out impossible merge sites...
				Reject [[[<D Pekka> [T [<D Pekka> käske]]] [? [<D heidän> [Ainf [<D heidän> [v antaa]]]]]] D] due to bad left branch.
				Reject [[<D heidän> [Ainf [<D heidän> [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} D]]]

14.

		Consume "kirja"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [Ainf{v,V} D]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} D{N}]]]

15.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [Ainf{v,V} D{N}]]] + P(lle)
			Filtering out impossible merge sites...
				Reject [[[<D Pekka> [T [<D Pekka> käske]]] [? [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]] P(lle)] due to bad left branch.
			Ranking remaining sites...
				Avoid P as SPEC, P(lle)
				Avoid P as SPEC, P(lle)
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection against [P]
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D heidän] [Ainf{v,V} D{N}]]; P(lle)]
			3. [[Ainf{v,V} D{N}]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]]

16.

		Consume "D"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]]

17.

		Consume "Merja-"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]

18.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]] + malla
			Filtering out impossible merge sites...
				Reject [[[<D Pekka> [T [<D Pekka> käske]]] [? [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]] malla] due to bad left branch.
			Ranking remaining sites...
				[D kirja]" has no thematic role
				Avoid [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]] as left branch because it constitutes illicit structure.
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
				Avoid [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] as left branch because it constitutes illicit structure.
				[D kirja]" has no thematic role
				Avoid [[D kirja] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid [[D kirja] P(lle){D,N}] because it could break words.
				Avoid [P(lle){D,N} malla] due to complement selection against [ADV]
				Avoid [Merja- malla] due to complement selection against [ADV]
			P(lle) was opened.
				Prioritize P(lle){D,N} because all solutions were negative.
		Ranking completed:
			1. [P(lle){D,N}; malla]
			2. [[Ainf{v,V} [[D kirja] P(lle){D,N}]]; malla]
			3. [[[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]; malla]
			4. [[[D kirja] P(lle){D,N}]; malla]
		Exploring solution number (1) =[P(lle){D,N} malla]
			P(lle) was opened.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]]]

19.

		Consume "virtaa"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]

20.
	>>>	Trying candidate parse [[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]] (1.)
		Reconstructing...
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]].
				Extracted head "v{V}" and reconstructed it = [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf [v{V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]
				Extracted head "antaa" and reconstructed it = [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf [v [antaa [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]]
				Extracted head "virtaa" from malla and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf [v [antaa [[D kirja] [[P(lle) [D Merja-]] [malla virtaa]]]]]]]]
			!Dropping floaters...
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				<malla virtaa> was made an adjunct.
				= [[<D Pekka> [T [<D Pekka> käske]]] [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla virtaa>]]]]]]]]
			!Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at Ainf but its category is unknown!
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				An uninterpretable grammatical head without lexical category was detected.
				[D kirja]" has no thematic role
				Extraposition will be tried on [[<D Pekka>:1 [T [<DP>:1 käske]]] [? [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla virtaa>]]]]]]]]].
			= [[<D Pekka> [T [<D Pekka> käske]]] [? [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla virtaa>]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				[D kirja]" has no thematic role
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
?: [?]
D: [D, ?]
heidän: [N, D, ?]
Ainf: [, ?]
(D): [D, , ?]
(N): [N, D, , ?]
v: [v, , ?]
antaa: [V, v, , ?]
D: [D, V, v, , ?]
kirja: [N, D, V, v, , ?]
P(lle): [P, V, v, , ?]
D: [D, P, V, v, , ?]
Merja-: [N, D, P, V, v, , ?]
malla: [ADV, V, v, , ?]
virtaa: [V, ADV, V, v, , ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[Ainf{v,V} [[D kirja] P(lle){D,N}]] malla]
			!Reconstructing head movement for [Ainf{v,V} [[D kirja] P(lle){D,N}]].
				Extracted head "v{V}" and reconstructed it = [Ainf [v{V} [[D kirja] P(lle){D,N}]]]
				Extracted head "antaa" and reconstructed it = [Ainf [v [antaa [[D kirja] P(lle){D,N}]]]]
				Extracted head "D{N}" from P(lle) and created [Ainf [v [antaa [[D kirja] [P(lle) D{N}]]]]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]
			!Dropping floaters...
				= [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] malla]]]

21.

		Consume "virtaa"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [[Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] malla{V}]]]

22.
	>>>	Trying candidate parse [[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [[Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] malla{V}]]] (2.)
		Reconstructing...
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] malla{V}]]].
				Extracted head "virtaa" from malla and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] [malla virtaa]]]]
			!Dropping floaters...
				malla failed to tail.
				[D heidän] failed to tail [!COMP:*][PHI:0]
				malla failed to tail.
				= [[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [[Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] [malla virtaa]]]]
			!Dropping A-/A-bar movement.
				Moving "Ainf v antaa D kirja P(lle) D Merja- " into memory buffer from SPEC of "malla".
				Moving "D heidän " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Moving "D Pekka T __käske " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Memory buffer: [[ [v [V [[D N] [P [D N]]]]]], [D N], [[D N] [T/fin [[D N] V]]]]
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
				Extraposition will be tried on [[<D Pekka>:1 [T [<DP>:1 käske]]] [? [[D heidän] [? [[Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] [malla virtaa]]]]]].
			= [[<D Pekka> [T [<D Pekka> käske]]] [? [[D heidän] [? [[Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] [malla virtaa]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
:['LANG:FI']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
?: [?]
D: [D, ?]
heidän: [N, D, ?]
?: [?, ?]
Ainf: [, ?, ?]
v: [v, , ?, ?]
antaa: [V, v, , ?, ?]
D: [D, V, v, , ?, ?]
kirja: [N, D, V, v, , ?, ?]
P(lle): [P, V, v, , ?, ?]
D: [D, P, V, v, , ?, ?]
Merja-: [N, D, P, V, v, , ?, ?]
malla: [ADV, ?, ?]
virtaa: [V, ADV, ?, ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]] malla]
			!Reconstructing head movement for [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]].
				Extracted head "v{V}" and reconstructed it = [[D heidän] [Ainf [v{V} [[D kirja] P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [[D heidän] [Ainf [v [antaa [[D kirja] P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [[D heidän] [Ainf [v [antaa [[D kirja] [P(lle) D{N}]]]]]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D heidän] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]
			!Dropping floaters...
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				= [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]] malla]]

23.

		Consume "virtaa"

		[[<D Pekka> [T [<D Pekka> käske]]] [[<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]] malla{V}]]

24.
	>>>	Trying candidate parse [[<D Pekka> [T [<D Pekka> käske]]] [[<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]] malla{V}]] (3.)
		Reconstructing...
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]] malla{V}]].
				Extracted head "virtaa" from malla and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]] [malla virtaa]]]
			!Dropping floaters...
				malla failed to tail.
				malla failed to tail.
				= [[<D Pekka> [T [<D Pekka> käske]]] [[<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]] [malla virtaa]]]
			!Dropping A-/A-bar movement.
				Moving "D heidän Ainf __v antaa D kirja P(lle) D Merja- " into memory buffer from SPEC of "malla".
				Moving "D Pekka T __käske " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Memory buffer: [[[D N] [ [[D N] [v [V [[D N] [P [D N]]]]]]]], [[D N] [T/fin [[D N] V]]]]
				An uninterpretable grammatical head without lexical category was detected.
				[D kirja]" has no thematic role
				Extraposition will be tried on [[<D Pekka>:1 [T [<DP>:1 käske]]] [? [[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]] [malla virtaa]]]].
			= [[<D Pekka> [T [<D Pekka> käske]]] [? [[<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]] [malla virtaa]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				[D kirja]" has no thematic role
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
?: [?]
D: [D, ?]
heidän: [N, D, ?]
Ainf: [, ?]
(D): [D, , ?]
(N): [N, D, , ?]
v: [v, , ?]
antaa: [V, v, , ?]
D: [D, V, v, , ?]
kirja: [N, D, V, v, , ?]
P(lle): [P, V, v, , ?]
D: [D, P, V, v, , ?]
Merja-: [N, D, P, V, v, , ?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (4) =[[[D kirja] P(lle){D,N}] malla]
			!Reconstructing head movement for [[D kirja] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[D kirja] [P(lle) D{N}]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D kirja] [P(lle) [D Merja-]]]
			!Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				= [[D kirja] [P(lle) [D Merja-]]]
			!Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla]]]]

25.

		Consume "virtaa"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [Ainf{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]]

26.
	>>>	Trying candidate parse [[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [Ainf{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]] (4.)
		Reconstructing...
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]].
				Extracted head "v{V}" and reconstructed it = [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf [v{V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]]]
				Extracted head "antaa" and reconstructed it = [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf [v [antaa [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]]]]
				Extracted head "virtaa" from malla and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [Ainf [v [antaa [[[D kirja] [P(lle) [D Merja-]]] [malla virtaa]]]]]]]
			!Dropping floaters...
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				<malla virtaa> was made an adjunct.
				= [[<D Pekka> [T [<D Pekka> käske]]] [<D heidän> [Ainf [<D heidän> [v [antaa [[[D kirja] [P(lle) [D Merja-]]] <malla virtaa>]]]]]]]
			!Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at Ainf but its category is unknown!
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				An uninterpretable grammatical head without lexical category was detected.
				[D kirja]" has no thematic role
				Extraposition will be tried on [[<D Pekka>:1 [T [<DP>:1 käske]]] [? [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [[[D kirja] [P(lle) [D Merja-]]] <malla virtaa>]]]]]]]].
			= [[<D Pekka> [T [<D Pekka> käske]]] [? [<D heidän> [Ainf [<D heidän> [v [antaa [[[D kirja] [P(lle) [D Merja-]]] <malla virtaa>]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				[D kirja]" has no thematic role
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
?: [?]
D: [D, ?]
heidän: [N, D, ?]
Ainf: [, ?]
(D): [D, , ?]
(N): [N, D, , ?]
v: [v, , ?]
antaa: [V, v, , ?]
D: [D, V, v, , ?]
kirja: [N, D, V, v, , ?]
P(lle): [P, V, v, , ?]
D: [D, P, V, v, , ?]
Merja-: [N, D, P, V, v, , ?]
malla: [ADV, V, v, , ?]
virtaa: [V, ADV, V, v, , ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D heidän] [Ainf{v,V} D{N}]] P(lle)]
			!Reconstructing head movement for [[D heidän] [Ainf{v,V} D{N}]].
				Extracted head "v{V}" and reconstructed it = [[D heidän] [Ainf [v{V} D{N}]]]
				Extracted head "antaa" and reconstructed it = [[D heidän] [Ainf [v [antaa D{N}]]]]
				Extracted head "kirja" from D and created [[D heidän] [Ainf [v [antaa [D kirja]]]]]
			!Dropping floaters...
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				= [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]
			!Dropping A-/A-bar movement.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] P(lle)]]

27.

		Consume "D"

		[[<D Pekka> [T [<D Pekka> käske]]] [[<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] P(lle){D}]]

28.

		Consume "Merja-"

		[[<D Pekka> [T [<D Pekka> käske]]] [[<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] P(lle){D,N}]]

29.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[<D Pekka> [T [<D Pekka> käske]]] [[<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]] P(lle){D,N}]] + malla
			Filtering out impossible merge sites...
				Reject [[[<D Pekka> [T [<D Pekka> käske]]] [? [[<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]] [P(lle) [D Merja-]]]]] malla] due to bad left branch.
			Ranking remaining sites...
				P(lle) has unaccetable specifier [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]].
				Avoid [[<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid [P(lle){D,N} malla] due to complement selection against [ADV]
				Avoid [Merja- malla] due to complement selection against [ADV]
			P(lle) was opened.
				Prioritize P(lle){D,N} because all solutions were negative.
		Ranking completed:
			1. [P(lle){D,N}; malla]
			2. [[[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] P(lle){D,N}]; malla]
		Exploring solution number (1) =[P(lle){D,N} malla]
			P(lle) was opened.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] [[P(lle) [D Merja-]] malla]]]

30.

		Consume "virtaa"

		[[<D Pekka> [T [<D Pekka> käske]]] [[<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]] [[P(lle) [D Merja-]] malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] [[P(lle) [D Merja-]] malla{V}]]]

31.
	>>>	Trying candidate parse [[<D Pekka> [T [<D Pekka> käske]]] [[<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]] [[P(lle) [D Merja-]] malla{V}]]] (5.)
		Reconstructing...
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] [[P(lle) [D Merja-]] malla{V}]]].
				Extracted head "virtaa" from malla and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] [[P(lle) [D Merja-]] [malla virtaa]]]]
			!Dropping floaters...
				malla failed to tail.
				malla failed to tail.
				malla failed to tail.
				= [[<D Pekka> [T [<D Pekka> käske]]] [[<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]] [[P(lle) [D Merja-]] [malla virtaa]]]]
			!Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "malla".
				Moving "D heidän Ainf __v antaa D kirja " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Moving "D Pekka T __käske " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Memory buffer: [[P [D N]], [[D N] [ [[D N] [v [V [D N]]]]]], [[D N] [T/fin [[D N] V]]]]
				Dropping [P [D N]](=P(lle) D Merja- ) from memory buffer into Comp of ['V'].
				Result [[<D Pekka>:1 [T [<DP>:1 käske]]] [? [[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] [? [[P(lle) [D Merja-]]:1 [malla [virtaa (PP):1]]]]]]]
				Remaining items in memory buffer: [[[D N] [ [[D N] [v [V [D N]]]]]], [[D N] [T/fin [[D N] V]]]]
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [[<D Pekka>:1 [T [<DP>:1 käske]]] [? [[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] [? [[P(lle) [D Merja-]]:1 [malla [virtaa (PP):1]]]]]]].
			= [[<D Pekka> [T [<D Pekka> käske]]] [? [[<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]] [? [[P(lle) [D Merja-]] [malla [virtaa [P(lle) [D Merja-]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
?: [?]
D: [D, ?]
heidän: [N, D, ?]
Ainf: [, ?]
(D): [D, , ?]
(N): [N, D, , ?]
v: [v, , ?]
antaa: [V, v, , ?]
D: [D, V, v, , ?]
kirja: [N, D, V, v, , ?]
?: [?, ?]
P(lle): [P, ?, ?]
D: [D, P, ?, ?]
Merja-: [N, D, P, ?, ?]
malla: [ADV, ?, ?]
virtaa: [V, ADV, ?, ?]
(P): [P, V, ADV, ?, ?]
(D): [D, P, V, ADV, ?, ?]
(N): [N, D, P, V, ADV, ?, ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] P(lle){D,N}] malla]
			!Reconstructing head movement for [[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] [P(lle) D{N}]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] [P(lle) [D Merja-]]]
			!Dropping floaters...
				= [[<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]] [P(lle) [D Merja-]]]
			!Dropping A-/A-bar movement.
				Moving "D heidän Ainf __v antaa D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[[D N] [ [[D N] [v [V [D N]]]]]]]
				P(lle) has unaccetable specifier [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]].
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] [P(lle) [D Merja-]]] malla]]

32.

		Consume "virtaa"

		[[<D Pekka> [T [<D Pekka> käske]]] [[[<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]] [P(lle) [D Merja-]]] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] [P(lle) [D Merja-]]] malla{V}]]

33.
	>>>	Trying candidate parse [[<D Pekka> [T [<D Pekka> käske]]] [[[<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]] [P(lle) [D Merja-]]] malla{V}]] (6.)
		Reconstructing...
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 käske]]] [[[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] [P(lle) [D Merja-]]] malla{V}]].
				Extracted head "virtaa" from malla and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [[[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] [P(lle) [D Merja-]]] [malla virtaa]]]
			!Dropping floaters...
				malla failed to tail.
				malla failed to tail.
				= [[<D Pekka> [T [<D Pekka> käske]]] [[[<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]] [P(lle) [D Merja-]]] [malla virtaa]]]
			!Dropping A-/A-bar movement.
				Moving "D heidän Ainf __v antaa D kirja P(lle) D Merja- " into memory buffer from SPEC of "malla".
				Moving "D Pekka T __käske " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Memory buffer: [[[[D N] [ [[D N] [v [V [D N]]]]]] [P [D N]]], [[D N] [T/fin [[D N] V]]]]
				Dropping [[[D N] [ [[D N] [v [V [D N]]]]]] [P [D N]]](=D heidän Ainf __v antaa D kirja P(lle) D Merja- ) from memory buffer into Comp of ['V'].
				Result [[<D Pekka>:1 [T [<DP>:1 käske]]] [? [[[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] [P(lle) [D Merja-]]]:1 [malla [virtaa (PP):1]]]]]
				Remaining items in memory buffer: [[[D N] [T/fin [[D N] V]]]]
				An uninterpretable grammatical head without lexical category was detected.
				(P) has unaccetable specifier (P).
				Extraposition will be tried on [[<D Pekka>:1 [T [<DP>:1 käske]]] [? [[[<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]] [P(lle) [D Merja-]]]:1 [malla [virtaa (PP):1]]]]].
			= [[<D Pekka> [T [<D Pekka> käske]]] [? [[[<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]] [P(lle) [D Merja-]]] [malla [virtaa [[<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]] [P(lle) [D Merja-]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				(P) has unaccetable specifier (P).
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'null']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
?: [?]
D: [D, ?]
heidän: [N, D, ?]
Ainf: [, ?]
(D): [D, , ?]
(N): [N, D, , ?]
v: [v, , ?]
antaa: [V, v, , ?]
D: [D, V, v, , ?]
kirja: [N, D, V, v, , ?]
P(lle): [P, ?]
D: [D, P, ?]
Merja-: [N, D, P, ?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]
(D): [D, V, ADV, ?]
(N): [N, D, V, ADV, ?]
(): [, V, ADV, ?]
(D): [D, , V, ADV, ?]
(N): [N, D, , V, ADV, ?]
(v): [v, , V, ADV, ?]
(V): [V, v, , V, ADV, ?]
(D): [D, V, v, , V, ADV, ?]
(N): [N, D, V, v, , V, ADV, ?]
(P): [P, V, ADV, ?]
(D): [D, P, V, ADV, ?]
(N): [N, D, P, V, ADV, ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[Ainf{v,V} D{N}] P(lle)]
			!Reconstructing head movement for [Ainf{v,V} D{N}].
				Extracted head "v{V}" and reconstructed it = [Ainf [v{V} D{N}]]
				Extracted head "antaa" and reconstructed it = [Ainf [v [antaa D{N}]]]
				Extracted head "kirja" from D and created [Ainf [v [antaa [D kirja]]]]
			!Dropping floaters...
				= [Ainf [v [antaa [D kirja]]]]
			!Dropping A-/A-bar movement.
				An EPP-head "v" lacks specifier D that it requires.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[Ainf [v [antaa [D kirja]]]] P(lle)]]]

34.

		Consume "D"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [[Ainf [v [antaa [D kirja]]]] P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[Ainf [v [antaa [D kirja]]]] P(lle){D}]]]

35.

		Consume "Merja-"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [[Ainf [v [antaa [D kirja]]]] P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[Ainf [v [antaa [D kirja]]]] P(lle){D,N}]]]

36.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [[Ainf [v [antaa [D kirja]]]] P(lle){D,N}]]] + malla
			Filtering out impossible merge sites...
				Reject [[[<D Pekka> [T [<D Pekka> käske]]] [? [[D heidän] [? [[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]]]]]] malla] due to bad left branch.
				Reject [[[D heidän] [? [[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]]]] malla] due to bad left branch.
			Ranking remaining sites...
				An EPP-head "v" lacks specifier D that it requires.
				P(lle) has unaccetable specifier [Ainf [v [antaa [D kirja]]]].
				Avoid [[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid [P(lle){D,N} malla] due to complement selection against [ADV]
				Avoid [Merja- malla] due to complement selection against [ADV]
			P(lle) was opened.
				Prioritize P(lle){D,N} because all solutions were negative.
		Ranking completed:
			1. [P(lle){D,N}; malla]
			2. [[[Ainf [v [antaa [D kirja]]]] P(lle){D,N}]; malla]
		Exploring solution number (1) =[P(lle){D,N} malla]
			P(lle) was opened.
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[Ainf [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] malla]]]]

37.

		Consume "virtaa"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [[Ainf [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] malla]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[Ainf [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] malla{V}]]]]

38.
	>>>	Trying candidate parse [[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [[Ainf [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] malla{V}]]]] (7.)
		Reconstructing...
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[Ainf [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] malla{V}]]]].
				Extracted head "virtaa" from malla and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[Ainf [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] [malla virtaa]]]]]
			!Dropping floaters...
				malla failed to tail.
				[D heidän] failed to tail [!COMP:*][PHI:0]
				malla failed to tail.
				malla failed to tail.
				= [[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [[Ainf [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] [malla virtaa]]]]]
			!Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "malla".
				Moving "Ainf v antaa D kirja " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Moving "D heidän " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Moving "D Pekka T __käske " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Memory buffer: [[P [D N]], [ [v [V [D N]]]], [D N], [[D N] [T/fin [[D N] V]]]]
				Dropping [P [D N]](=P(lle) D Merja- ) from memory buffer into Comp of ['V'].
				Result [[<D Pekka>:1 [T [<DP>:1 käske]]] [? [[D heidän] [? [[Ainf [v [antaa [D kirja]]]] [? [[P(lle) [D Merja-]]:1 [malla [virtaa (PP):1]]]]]]]]]
				Remaining items in memory buffer: [[ [v [V [D N]]]], [D N], [[D N] [T/fin [[D N] V]]]]
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [[<D Pekka>:1 [T [<DP>:1 käske]]] [? [[D heidän] [? [[Ainf [v [antaa [D kirja]]]] [? [[P(lle) [D Merja-]]:1 [malla [virtaa (PP):1]]]]]]]]].
			= [[<D Pekka> [T [<D Pekka> käske]]] [? [[D heidän] [? [[Ainf [v [antaa [D kirja]]]] [? [[P(lle) [D Merja-]] [malla [virtaa [P(lle) [D Merja-]]]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
:['LANG:FI']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
?: [?]
D: [D, ?]
heidän: [N, D, ?]
?: [?, ?]
Ainf: [, ?, ?]
v: [v, , ?, ?]
antaa: [V, v, , ?, ?]
D: [D, V, v, , ?, ?]
kirja: [N, D, V, v, , ?, ?]
?: [?, ?, ?]
P(lle): [P, ?, ?, ?]
D: [D, P, ?, ?, ?]
Merja-: [N, D, P, ?, ?, ?]
malla: [ADV, ?, ?, ?]
virtaa: [V, ADV, ?, ?, ?]
(P): [P, V, ADV, ?, ?, ?]
(D): [D, P, V, ADV, ?, ?, ?]
(N): [N, D, P, V, ADV, ?, ?, ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[Ainf [v [antaa [D kirja]]]] P(lle){D,N}] malla]
			!Reconstructing head movement for [[Ainf [v [antaa [D kirja]]]] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[Ainf [v [antaa [D kirja]]]] [P(lle) D{N}]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]]
			!Dropping floaters...
				= [[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]]
			!Dropping A-/A-bar movement.
				Moving "Ainf v antaa D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[ [v [V [D N]]]]]
				An EPP-head "v" lacks specifier D that it requires.
				P(lle) has unaccetable specifier [Ainf [v [antaa [D kirja]]]].
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] malla]]]

39.

		Consume "virtaa"

		[[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [[[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] malla{V}]]]

40.
	>>>	Trying candidate parse [[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [[[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] malla{V}]]] (8.)
		Reconstructing...
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] malla{V}]]].
				Extracted head "virtaa" from malla and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [[D heidän] [[[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] [malla virtaa]]]]
			!Dropping floaters...
				malla failed to tail.
				[D heidän] failed to tail [!COMP:*][PHI:0]
				malla failed to tail.
				= [[<D Pekka> [T [<D Pekka> käske]]] [[D heidän] [[[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] [malla virtaa]]]]
			!Dropping A-/A-bar movement.
				Moving "Ainf v antaa D kirja P(lle) D Merja- " into memory buffer from SPEC of "malla".
				Moving "D heidän " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Moving "D Pekka T __käske " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Memory buffer: [[[ [v [V [D N]]]] [P [D N]]], [D N], [[D N] [T/fin [[D N] V]]]]
				Dropping [[ [v [V [D N]]]] [P [D N]]](=Ainf v antaa D kirja P(lle) D Merja- ) from memory buffer into Comp of ['V'].
				Result [[<D Pekka>:1 [T [<DP>:1 käske]]] [? [[D heidän] [? [[[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]]:1 [malla [virtaa (PP):1]]]]]]]
				Remaining items in memory buffer: [[D N], [[D N] [T/fin [[D N] V]]]]
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "(v)" lacks specifier D that it requires.
				(P) has unaccetable specifier (P).
				Extraposition will be tried on [[<D Pekka>:1 [T [<DP>:1 käske]]] [? [[D heidän] [? [[[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]]:1 [malla [virtaa (PP):1]]]]]]].
			= [[<D Pekka> [T [<D Pekka> käske]]] [? [[D heidän] [? [[[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] [malla [virtaa [[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "(v)" lacks specifier D that it requires.
				(P) has unaccetable specifier (P).
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
:['LANG:FI']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'null']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
?: [?]
D: [D, ?]
heidän: [N, D, ?]
?: [?, ?]
Ainf: [, ?, ?]
v: [v, , ?, ?]
antaa: [V, v, , ?, ?]
D: [D, V, v, , ?, ?]
kirja: [N, D, V, v, , ?, ?]
P(lle): [P, ?, ?]
D: [D, P, ?, ?]
Merja-: [N, D, P, ?, ?]
malla: [ADV, ?, ?]
virtaa: [V, ADV, ?, ?]
(): [, V, ADV, ?, ?]
(v): [v, , V, ADV, ?, ?]
(V): [V, v, , V, ADV, ?, ?]
(D): [D, V, v, , V, ADV, ?, ?]
(N): [N, D, V, v, , V, ADV, ?, ?]
(P): [P, V, ADV, ?, ?]
(D): [D, P, V, ADV, ?, ?]
(N): [N, D, P, V, ADV, ?, ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[<D Pekka>:1 [T [<DP>:1 käske]]] D{N}] Ainf]
			!Reconstructing head movement for [[<D Pekka>:1 [T [<DP>:1 käske]]] D{N}].
				Extracted head "heidän" from D and created [[<D Pekka>:1 [T [<DP>:1 käske]]] [D heidän]]
			!Dropping floaters...
				D failed to tail.
				<D heidän> was made an adjunct.
				= [[<D Pekka> [T [<D Pekka> käske]]] <D heidän>]
			!Dropping A-/A-bar movement.
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] Ainf]

41.

		Consume "v"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] Ainf] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] Ainf{v}]

42.

		Consume "antaa"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] Ainf{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*antaa]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] Ainf{v,V}]

43.

		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] Ainf{v,V}]

44.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] Ainf{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v antaa]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} D]]

45.

		Consume "kirja"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf{v,V} D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} D{N}]]

46.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf{v,V} D{N}]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid P as SPEC, P(lle)
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] as left branch because it constitutes illicit structure.
				Avoid P as SPEC, P(lle)
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection against [P]
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[Ainf{v,V} D{N}]; P(lle)]
			3. [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} D{N}]]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} [[D kirja] P(lle)]]]

47.

		Consume "D"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf{v,V} [[D kirja] P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} [[D kirja] P(lle){D}]]]

48.

		Consume "Merja-"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf{v,V} [[D kirja] P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]

49.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf{v,V} [[D kirja] P(lle){D,N}]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
				Avoid [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]] as left branch because it constitutes illicit structure.
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
				Avoid [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] as left branch because it constitutes illicit structure.
				[D kirja]" has no thematic role
				Avoid [[D kirja] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid [[D kirja] P(lle){D,N}] because it could break words.
				Avoid [P(lle){D,N} malla] due to complement selection against [ADV]
				Avoid [Merja- malla] due to complement selection against [ADV]
			P(lle) was opened.
				Prioritize P(lle){D,N} because all solutions were negative.
		Ranking completed:
			1. [P(lle){D,N}; malla]
			2. [[Ainf{v,V} [[D kirja] P(lle){D,N}]]; malla]
			3. [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]; malla]
			4. [[[D kirja] P(lle){D,N}]; malla]
		Exploring solution number (1) =[P(lle){D,N} malla]
			P(lle) was opened.
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]]

50.

		Consume "virtaa"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]

51.
	>>>	Trying candidate parse [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]] (9.)
		Reconstructing...
			!Reconstructing head movement for [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]].
				Extracted head "v{V}" and reconstructed it = [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v{V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]
				Extracted head "antaa" and reconstructed it = [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]
				Extracted head "virtaa" from malla and created [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] [[P(lle) [D Merja-]] [malla virtaa]]]]]]]
			!Dropping floaters...
				<malla virtaa> was made an adjunct.
				= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla virtaa>]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
				Extraposition will be tried on [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla virtaa>]]]]]].
			= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla virtaa>]]]]]]
		Checking LF-interface conditions.
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
D: [D]
heidän: [N, D]
Ainf: []
v: [v, ]
antaa: [V, v, ]
D: [D, V, v, ]
kirja: [N, D, V, v, ]
P(lle): [P, V, v, ]
D: [D, P, V, v, ]
Merja-: [N, D, P, V, v, ]
malla: [ADV, V, v, ]
virtaa: [V, ADV, V, v, ]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[Ainf{v,V} [[D kirja] P(lle){D,N}]] malla]
			!Reconstructing head movement for [Ainf{v,V} [[D kirja] P(lle){D,N}]].
				Extracted head "v{V}" and reconstructed it = [Ainf [v{V} [[D kirja] P(lle){D,N}]]]
				Extracted head "antaa" and reconstructed it = [Ainf [v [antaa [[D kirja] P(lle){D,N}]]]]
				Extracted head "D{N}" from P(lle) and created [Ainf [v [antaa [[D kirja] [P(lle) D{N}]]]]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]
			!Dropping floaters...
				= [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] malla]]

52.

		Consume "virtaa"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [[Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] malla{V}]]

53.
	>>>	Trying candidate parse [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [[Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] malla{V}]] (10.)
		Reconstructing...
			!Reconstructing head movement for [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] malla{V}]].
				Extracted head "virtaa" from malla and created [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] [malla virtaa]]]
			!Dropping floaters...
				malla failed to tail.
				malla failed to tail.
				= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [[Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] [malla virtaa]]]
			!Dropping A-/A-bar movement.
				Moving "Ainf v antaa D kirja P(lle) D Merja- " into memory buffer from SPEC of "malla".
				Moving "D Pekka T __käske D heidän " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Memory buffer: [[ [v [V [[D N] [P [D N]]]]]], [[[D N] [T/fin [[D N] V]]] [D N]]]
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
				Extraposition will be tried on [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [? [[Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] [malla virtaa]]]].
			= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [? [[Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] [malla virtaa]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
:['LANG:FI']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
D: [D]
heidän: [N, D]
?: [?]
Ainf: [, ?]
v: [v, , ?]
antaa: [V, v, , ?]
D: [D, V, v, , ?]
kirja: [N, D, V, v, , ?]
P(lle): [P, V, v, , ?]
D: [D, P, V, v, , ?]
Merja-: [N, D, P, V, v, , ?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} [[D kirja] P(lle){D,N}]]] malla]
			!Reconstructing head movement for [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} [[D kirja] P(lle){D,N}]]].
				Extracted head "v{V}" and reconstructed it = [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v{V} [[D kirja] P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] [P(lle) D{N}]]]]]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]
			!Dropping floaters...
				= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
				Extraposition will be tried on [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]].
			=[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]] malla]

54.

		Consume "virtaa"

		[[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]] malla{V}]

55.
	>>>	Trying candidate parse [[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]] malla{V}] (11.)
		Reconstructing...
			!Reconstructing head movement for [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]] malla{V}].
				Extracted head "virtaa" from malla and created [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]] [malla virtaa]]
			!Dropping floaters...
				malla failed to tail.
				= [[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]] [malla virtaa]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka T __käske D heidän Ainf v antaa D kirja P(lle) D Merja- " into memory buffer from SPEC of "malla".
				Memory buffer: [[[[[D N] [T/fin [[D N] V]]] [D N]] [ [v [V [[D N] [P [D N]]]]]]]]
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
				Extraposition will be tried on [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]] [malla virtaa]].
			= [[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]] [malla virtaa]]
		Checking LF-interface conditions.
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
D: [D]
heidän: [N, D]
Ainf: []
v: [v, ]
antaa: [V, v, ]
D: [D, V, v, ]
kirja: [N, D, V, v, ]
P(lle): [P, V, v, ]
D: [D, P, V, v, ]
Merja-: [N, D, P, V, v, ]
malla: [ADV]
virtaa: [V, ADV]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (4) =[[[D kirja] P(lle){D,N}] malla]
			!Reconstructing head movement for [[D kirja] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[D kirja] [P(lle) D{N}]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D kirja] [P(lle) [D Merja-]]]
			!Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				= [[D kirja] [P(lle) [D Merja-]]]
			!Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla]]]

56.

		Consume "virtaa"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]

57.
	>>>	Trying candidate parse [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]] (12.)
		Reconstructing...
			!Reconstructing head movement for [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]].
				Extracted head "v{V}" and reconstructed it = [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v{V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]]
				Extracted head "antaa" and reconstructed it = [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]]]
				Extracted head "virtaa" from malla and created [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [[[D kirja] [P(lle) [D Merja-]]] [malla virtaa]]]]]]
			!Dropping floaters...
				<malla virtaa> was made an adjunct.
				= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [[[D kirja] [P(lle) [D Merja-]]] <malla virtaa>]]]]]
			!Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
				Extraposition will be tried on [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [[[D kirja] [P(lle) [D Merja-]]] <malla virtaa>]]]]].
			= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [[[D kirja] [P(lle) [D Merja-]]] <malla virtaa>]]]]]
		Checking LF-interface conditions.
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
D: [D]
heidän: [N, D]
Ainf: []
v: [v, ]
antaa: [V, v, ]
D: [D, V, v, ]
kirja: [N, D, V, v, ]
P(lle): [P, V, v, ]
D: [D, P, V, v, ]
Merja-: [N, D, P, V, v, ]
malla: [ADV, V, v, ]
virtaa: [V, ADV, V, v, ]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[Ainf{v,V} D{N}] P(lle)]
			!Reconstructing head movement for [Ainf{v,V} D{N}].
				Extracted head "v{V}" and reconstructed it = [Ainf [v{V} D{N}]]
				Extracted head "antaa" and reconstructed it = [Ainf [v [antaa D{N}]]]
				Extracted head "kirja" from D and created [Ainf [v [antaa [D kirja]]]]
			!Dropping floaters...
				= [Ainf [v [antaa [D kirja]]]]
			!Dropping A-/A-bar movement.
				An EPP-head "v" lacks specifier D that it requires.
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[Ainf [v [antaa [D kirja]]]] P(lle)]]

58.

		Consume "D"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [[Ainf [v [antaa [D kirja]]]] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[Ainf [v [antaa [D kirja]]]] P(lle){D}]]

59.

		Consume "Merja-"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [[Ainf [v [antaa [D kirja]]]] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[Ainf [v [antaa [D kirja]]]] P(lle){D,N}]]

60.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [[Ainf [v [antaa [D kirja]]]] P(lle){D,N}]] + malla
			Filtering out impossible merge sites...
				Reject [[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [? [[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]]]] malla] due to bad left branch.
			Ranking remaining sites...
				An EPP-head "v" lacks specifier D that it requires.
				P(lle) has unaccetable specifier [Ainf [v [antaa [D kirja]]]].
				Avoid [[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid [P(lle){D,N} malla] due to complement selection against [ADV]
				Avoid [Merja- malla] due to complement selection against [ADV]
			P(lle) was opened.
				Prioritize P(lle){D,N} because all solutions were negative.
		Ranking completed:
			1. [P(lle){D,N}; malla]
			2. [[[Ainf [v [antaa [D kirja]]]] P(lle){D,N}]; malla]
		Exploring solution number (1) =[P(lle){D,N} malla]
			P(lle) was opened.
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[Ainf [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] malla]]]

61.

		Consume "virtaa"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [[Ainf [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[Ainf [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] malla{V}]]]

62.
	>>>	Trying candidate parse [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [[Ainf [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] malla{V}]]] (13.)
		Reconstructing...
			!Reconstructing head movement for [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[Ainf [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] malla{V}]]].
				Extracted head "virtaa" from malla and created [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[Ainf [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] [malla virtaa]]]]
			!Dropping floaters...
				malla failed to tail.
				malla failed to tail.
				malla failed to tail.
				= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [[Ainf [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] [malla virtaa]]]]
			!Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "malla".
				Moving "Ainf v antaa D kirja " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Moving "D Pekka T __käske D heidän " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Memory buffer: [[P [D N]], [ [v [V [D N]]]], [[[D N] [T/fin [[D N] V]]] [D N]]]
				Dropping [P [D N]](=P(lle) D Merja- ) from memory buffer into Comp of ['V'].
				Result [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [? [[Ainf [v [antaa [D kirja]]]] [? [[P(lle) [D Merja-]]:1 [malla [virtaa (PP):1]]]]]]]
				Remaining items in memory buffer: [[ [v [V [D N]]]], [[[D N] [T/fin [[D N] V]]] [D N]]]
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [? [[Ainf [v [antaa [D kirja]]]] [? [[P(lle) [D Merja-]]:1 [malla [virtaa (PP):1]]]]]]].
			= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [? [[Ainf [v [antaa [D kirja]]]] [? [[P(lle) [D Merja-]] [malla [virtaa [P(lle) [D Merja-]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
:['LANG:FI']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
D: [D]
heidän: [N, D]
?: [?]
Ainf: [, ?]
v: [v, , ?]
antaa: [V, v, , ?]
D: [D, V, v, , ?]
kirja: [N, D, V, v, , ?]
?: [?, ?]
P(lle): [P, ?, ?]
D: [D, P, ?, ?]
Merja-: [N, D, P, ?, ?]
malla: [ADV, ?, ?]
virtaa: [V, ADV, ?, ?]
(P): [P, V, ADV, ?, ?]
(D): [D, P, V, ADV, ?, ?]
(N): [N, D, P, V, ADV, ?, ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[Ainf [v [antaa [D kirja]]]] P(lle){D,N}] malla]
			!Reconstructing head movement for [[Ainf [v [antaa [D kirja]]]] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[Ainf [v [antaa [D kirja]]]] [P(lle) D{N}]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]]
			!Dropping floaters...
				= [[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]]
			!Dropping A-/A-bar movement.
				Moving "Ainf v antaa D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[ [v [V [D N]]]]]
				An EPP-head "v" lacks specifier D that it requires.
				P(lle) has unaccetable specifier [Ainf [v [antaa [D kirja]]]].
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] malla]]

63.

		Consume "virtaa"

		[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [[[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] malla{V}]]

64.
	>>>	Trying candidate parse [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [[[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] malla{V}]] (14.)
		Reconstructing...
			!Reconstructing head movement for [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] malla{V}]].
				Extracted head "virtaa" from malla and created [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [[[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] [malla virtaa]]]
			!Dropping floaters...
				malla failed to tail.
				malla failed to tail.
				= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [[[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] [malla virtaa]]]
			!Dropping A-/A-bar movement.
				Moving "Ainf v antaa D kirja P(lle) D Merja- " into memory buffer from SPEC of "malla".
				Moving "D Pekka T __käske D heidän " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Memory buffer: [[[ [v [V [D N]]]] [P [D N]]], [[[D N] [T/fin [[D N] V]]] [D N]]]
				Dropping [[ [v [V [D N]]]] [P [D N]]](=Ainf v antaa D kirja P(lle) D Merja- ) from memory buffer into Comp of ['V'].
				Result [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [? [[[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]]:1 [malla [virtaa (PP):1]]]]]
				Remaining items in memory buffer: [[[[D N] [T/fin [[D N] V]]] [D N]]]
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "(v)" lacks specifier D that it requires.
				(P) has unaccetable specifier (P).
				Extraposition will be tried on [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [? [[[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]]:1 [malla [virtaa (PP):1]]]]].
			= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [? [[[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] [malla [virtaa [[Ainf [v [antaa [D kirja]]]] [P(lle) [D Merja-]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "(v)" lacks specifier D that it requires.
				(P) has unaccetable specifier (P).
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
:['LANG:FI']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'null']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
D: [D]
heidän: [N, D]
?: [?]
Ainf: [, ?]
v: [v, , ?]
antaa: [V, v, , ?]
D: [D, V, v, , ?]
kirja: [N, D, V, v, , ?]
P(lle): [P, ?]
D: [D, P, ?]
Merja-: [N, D, P, ?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]
(): [, V, ADV, ?]
(v): [v, , V, ADV, ?]
(V): [V, v, , V, ADV, ?]
(D): [D, V, v, , V, ADV, ?]
(N): [N, D, V, v, , V, ADV, ?]
(P): [P, V, ADV, ?]
(D): [D, P, V, ADV, ?]
(N): [N, D, P, V, ADV, ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} D{N}]] P(lle)]
			!Reconstructing head movement for [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf{v,V} D{N}]].
				Extracted head "v{V}" and reconstructed it = [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v{V} D{N}]]]
				Extracted head "antaa" and reconstructed it = [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa D{N}]]]]
				Extracted head "kirja" from D and created [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]]
			!Dropping floaters...
				= [[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]]
			!Dropping A-/A-bar movement.
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]].
			=[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] P(lle)]

65.

		Consume "D"

		[[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] P(lle){D}]

66.

		Consume "Merja-"

		[[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] P(lle){D,N}]

67.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] P(lle){D,N}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				P(lle) has unaccetable specifier [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]].
				Avoid [[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid [P(lle){D,N} malla] due to complement selection against [ADV]
				Avoid [Merja- malla] due to complement selection against [ADV]
			P(lle) was opened.
				Prioritize P(lle){D,N} because all solutions were negative.
		Ranking completed:
			1. [P(lle){D,N}; malla]
			2. [[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] P(lle){D,N}]; malla]
		Exploring solution number (1) =[P(lle){D,N} malla]
			P(lle) was opened.
			=[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [[P(lle) [D Merja-]] malla]]

68.

		Consume "virtaa"

		[[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [[P(lle) [D Merja-]] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [[P(lle) [D Merja-]] malla{V}]]

69.
	>>>	Trying candidate parse [[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [[P(lle) [D Merja-]] malla{V}]] (15.)
		Reconstructing...
			!Reconstructing head movement for [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [[P(lle) [D Merja-]] malla{V}]].
				Extracted head "virtaa" from malla and created [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [[P(lle) [D Merja-]] [malla virtaa]]]
			!Dropping floaters...
				malla failed to tail.
				malla failed to tail.
				= [[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [[P(lle) [D Merja-]] [malla virtaa]]]
			!Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "malla".
				Moving "D Pekka T __käske D heidän Ainf v antaa D kirja " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Memory buffer: [[P [D N]], [[[[D N] [T/fin [[D N] V]]] [D N]] [ [v [V [D N]]]]]]
				Dropping [P [D N]](=P(lle) D Merja- ) from memory buffer into Comp of ['V'].
				Result [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [? [[P(lle) [D Merja-]]:1 [malla [virtaa (PP):1]]]]]
				Remaining items in memory buffer: [[[[[D N] [T/fin [[D N] V]]] [D N]] [ [v [V [D N]]]]]]
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [? [[P(lle) [D Merja-]]:1 [malla [virtaa (PP):1]]]]].
			= [[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [? [[P(lle) [D Merja-]] [malla [virtaa [P(lle) [D Merja-]]]]]]]
		Checking LF-interface conditions.
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
D: [D]
heidän: [N, D]
Ainf: []
v: [v, ]
antaa: [V, v, ]
D: [D, V, v, ]
kirja: [N, D, V, v, ]
?: [?]
P(lle): [P, ?]
D: [D, P, ?]
Merja-: [N, D, P, ?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]
(P): [P, V, ADV, ?]
(D): [D, P, V, ADV, ?]
(N): [N, D, P, V, ADV, ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] P(lle){D,N}] malla]
			!Reconstructing head movement for [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [P(lle) D{N}]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]]
			!Dropping floaters...
				= [[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka T __käske D heidän Ainf v antaa D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[[[[D N] [T/fin [[D N] V]]] [D N]] [ [v [V [D N]]]]]]
				Ainf has unaccetable specifier [[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>].
				An EPP-head "v" lacks specifier D that it requires.
				P(lle) has unaccetable specifier [[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]].
				Extraposition will be tried on [[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]].
			=[[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]] malla]

70.

		Consume "virtaa"

		[[[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]] malla{V}]

71.
	>>>	Trying candidate parse [[[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]] malla{V}] (16.)
		Reconstructing...
			!Reconstructing head movement for [[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]] malla{V}].
				Extracted head "virtaa" from malla and created [[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]] [malla virtaa]]
			!Dropping floaters...
				malla failed to tail.
				= [[[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]] [malla virtaa]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka T __käske D heidän Ainf v antaa D kirja P(lle) D Merja- " into memory buffer from SPEC of "malla".
				Memory buffer: [[[[[[D N] [T/fin [[D N] V]]] [D N]] [ [v [V [D N]]]]] [P [D N]]]]
				Dropping [[[[[D N] [T/fin [[D N] V]]] [D N]] [ [v [V [D N]]]]] [P [D N]]](=D Pekka T __käske D heidän Ainf v antaa D kirja P(lle) D Merja- ) from memory buffer into Comp of ['V'].
				Result [[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]]:1 [malla [virtaa (PP):1]]]
				Remaining items in memory buffer: []
				(D) failed internal tail test.
				() has unaccetable specifier (T/finP).
				An EPP-head "(v)" lacks specifier D that it requires.
				(P) has unaccetable specifier (P).
				Extraposition will be tried on [[[[[<D Pekka>:1 [T [<DP>:1 käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]]:1 [malla [virtaa (PP):1]]].
			= [[[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]] [malla [virtaa [[[[<D Pekka> [T [<D Pekka> käske]]] <D heidän>] [Ainf [v [antaa [D kirja]]]]] [P(lle) [D Merja-]]]]]]
		Checking LF-interface conditions.
				(D) failed internal tail test.
				() has unaccetable specifier (T/finP).
				An EPP-head "(v)" lacks specifier D that it requires.
				(P) has unaccetable specifier (P).
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'null']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
käske: [V, T/fin]
D: [D]
heidän: [N, D]
Ainf: []
v: [v, ]
antaa: [V, v, ]
D: [D, V, v, ]
kirja: [N, D, V, v, ]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
malla: [ADV]
virtaa: [V, ADV]
(D): [D, V, ADV]
(N): [N, D, V, ADV]
(T/fin): [T/fin, V, ADV]
(D): [D, V, T/fin, V, ADV]
(N): [N, D, V, T/fin, V, ADV]
(V): [V, T/fin, V, ADV]
(D): [D, V, ADV]
(N): [N, D, V, ADV]
(): [, V, ADV]
(v): [v, , V, ADV]
(V): [V, v, , V, ADV]
(D): [D, V, v, , V, ADV]
(N): [N, D, V, v, , V, ADV]
(P): [P, V, ADV]
(D): [D, P, V, ADV]
(N): [N, D, P, V, ADV]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "heidän-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} D]]

72.

		Consume "heidän"

		[[D Pekka] [T{V} D]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [T{V} D{N}]]

73.

		Next word contains multiple morphemes ['$-ta', '$v', 'anta-']

		Consume "Ainf"

		[[D Pekka] [T{V} D{N}]] + Ainf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [käske <D heidän>]]]] Ainf] due to bad left branch.
				Reject [[T [käske <D heidän>]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [T{V} [[D heidän] Ainf]]]

74.

		Consume "v"

		[[D Pekka] [T{V} [[D heidän] Ainf]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D Pekka] [T{V} [[D heidän] Ainf{v}]]]

75.

		Consume "antaa"

		[[D Pekka] [T{V} [[D heidän] Ainf{v}]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*antaa]
			=[[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]

76.

		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]

77.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v antaa]]]]]]]] D] due to bad left branch.
				Reject [[T [käske [<D heidän> [Ainf [<D heidän> [v antaa]]]]]] D] due to bad left branch.
				Reject [[<D heidän> [Ainf [<D heidän> [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D]]]]

78.

		Consume "kirja"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D]]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]

79.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D{N}]]]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle)
				Avoid T/finP as SPEC, P(lle)
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid P as SPEC, P(lle)
				Avoid [[D heidän] [Ainf{v,V} D{N}]] because it could break words.
				Avoid P as SPEC, P(lle)
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection against [P]
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]; P(lle)]
			3. [[Ainf{v,V} D{N}]; P(lle)]
			4. [[[D heidän] [Ainf{v,V} D{N}]]; P(lle)]
			5. [[T{V} [[D heidän] [Ainf{v,V} D{N}]]]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]]]

80.

		Consume "D"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]]]

81.

		Consume "Merja-"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]

82.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla
				Avoid T/finP as SPEC, malla
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]] as left branch because it constitutes illicit structure.
				[D kirja]" has no thematic role
				Avoid [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]] because it could break words.
				Avoid [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]] due to tail-head failure.
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
				Avoid [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] as left branch because it constitutes illicit structure.
				Avoid [Ainf{v,V} [[D kirja] P(lle){D,N}]] due to tail-head failure.
				[D kirja]" has no thematic role
				Avoid [[D kirja] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid [[D kirja] P(lle){D,N}] because it could break words.
				Avoid [[D kirja] P(lle){D,N}] due to tail-head failure.
				Avoid [P(lle){D,N} malla] due to complement selection against [ADV]
				Avoid [Merja- malla] due to complement selection against [ADV]
				Avoid P(lle){D,N} due to tail-head failure.
			P(lle) was opened.
				Prioritize P(lle){D,N} because all solutions were negative.
		Ranking completed:
			1. [P(lle){D,N}; malla]
			2. [[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]; malla]
			3. [[Ainf{v,V} [[D kirja] P(lle){D,N}]]; malla]
			4. [[T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]; malla]
			5. [[[D kirja] P(lle){D,N}]; malla]
			6. [[[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]; malla]
		Exploring solution number (1) =[P(lle){D,N} malla]
			P(lle) was opened.
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]]]]

83.

		Consume "virtaa"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]

84.
	>>>	Trying candidate parse [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]] (17.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf [v{V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] [[P(lle) [D Merja-]] [malla virtaa]]]]]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				<malla virtaa> was made an adjunct.
				= [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla virtaa>]]]]]]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D Pekka>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla virtaa>]]]]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 84/1466 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]]]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V [DP:2 [ [__:2 [v [V [DP [[P [D N]] ADVP]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
käske: [V, T/fin]
D: [D, V, T/fin]
heidän: [N, D, V, T/fin]
Ainf: [, V, T/fin]
(D): [D, , V, T/fin]
(N): [N, D, , V, T/fin]
v: [v, , V, T/fin]
antaa: [V, v, , V, T/fin]
D: [D, V, v, , V, T/fin]
kirja: [N, D, V, v, , V, T/fin]
P(lle): [P, V, v, , V, T/fin]
D: [D, P, V, v, , V, T/fin]
Merja-: [N, D, P, V, v, , V, T/fin]
malla: [ADV, V, v, , V, T/fin]
virtaa: [V, ADV, V, v, , V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 24
['Pekka', 'ei', 'käskenyt', 'heidän', 'antaa', 'kirjaa', 'Merjalle', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.

		Next word contains multiple morphemes ['$T', 'käske-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			!Reconstructing head movement for ei.
			!Dropping floaters...
				= ei
			!Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "käske"

		[[D Pekka] [ei T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] [ei T{V}]]

7.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{V}]]

8.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D Pekka] [ei T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [[D Pekka] [ei [[D Pekka] [T käske]]]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T käske]] as left branch because it constitutes illicit structure.
				Avoid [T{V} D] due to local agreement failure.
				Avoid [T{V} D] due to complement selection against [D]
		Ranking completed:
			1. [T{V}; D]
			2. [[ei T{V}]; D]
			3. [[[D Pekka] [ei T{V}]]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} D]]]

9.

		Consume "heidän"

		[[D Pekka] [ei [T{V} D]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [ei [T{V} D{N}]]]

10.

		Next word contains multiple morphemes ['$-ta', '$v', 'anta-']

		Consume "Ainf"

		[[D Pekka] [ei [T{V} D{N}]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [D heidän]]]]]] Ainf] due to bad left branch.
				Reject [[ei [T [käske [D heidän]]]] Ainf] due to bad left branch.
				Reject [[T [käske [D heidän]]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]

11.

		Consume "v"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]]

12.

		Consume "antaa"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*antaa]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]

13.

		Next word contains multiple morphemes ['$par', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]

14.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]] + D
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v antaa]]]]]]]]] D] due to bad left branch.
				Reject [[ei [T [käske [<D heidän> [Ainf [<D heidän> [v antaa]]]]]]] D] due to bad left branch.
				Reject [[T [käske [<D heidän> [Ainf [<D heidän> [v antaa]]]]]] D] due to bad left branch.
				Reject [[<D heidän> [Ainf [<D heidän> [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D]]]]]

15.

		Consume "kirja"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D]]]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]]

16.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T{V} [[D heidän] [Ainf{v,V} D{N}]]], P(lle)] because the operation breaks up an existing selectional dependency.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid P as SPEC, P(lle)
				Avoid [[D heidän] [Ainf{v,V} D{N}]] because it could break words.
				Avoid P as SPEC, P(lle)
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection against [P]
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
		Ranking completed:
			1. [[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]]; P(lle)]
			2. [[ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]; P(lle)]
			3. [D{N}; P(lle)]
			4. [[Ainf{v,V} D{N}]; P(lle)]
			5. [[[D heidän] [Ainf{v,V} D{N}]]; P(lle)]
			6. [[T{V} [[D heidän] [Ainf{v,V} D{N}]]]; P(lle)]
		Exploring solution number (1) =[[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]] P(lle)]
			!Reconstructing head movement for [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf{v,V} D{N}]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v{V} D{N}]]]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa D{N}]]]]]]]]
				Extracted head "kirja" from D and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa [D kirja]]]]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				= [[D Pekka] [ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of käske
			=[[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] P(lle)]

17.

		Consume "D"

		[[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]]]] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] P(lle){D}]

18.

		Consume "Merja-"

		[[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]]]] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] P(lle){D,N}]

19.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]]]] P(lle){D,N}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [P(lle){D,N} malla] due to complement selection against [ADV]
				Avoid [Merja- malla] due to complement selection against [ADV]
		Ranking completed:
			1. [[[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] P(lle){D,N}]; malla]
			2. [P(lle){D,N}; malla]
		Exploring solution number (1) =[[[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] P(lle){D,N}] malla]
			!Reconstructing head movement for [[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] [P(lle) D{N}]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] [P(lle) [D Merja-]]]
			!Dropping floaters...
				= [[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]]]] [P(lle) [D Merja-]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka ei T __käske D heidän Ainf __v antaa D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[[D N] [Neg/fin [ [[D N] [V [[D N] [ [[D N] [v [V [D N]]]]]]]]]]]]
			=[[[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] [P(lle) [D Merja-]]] malla]

20.

		Consume "virtaa"

		[[[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]]]] [P(lle) [D Merja-]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] [P(lle) [D Merja-]]] malla{V}]

21.
	>>>	Trying candidate parse [[[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]]]] [P(lle) [D Merja-]]] malla{V}] (1.)
		Reconstructing...
			!Reconstructing head movement for [[[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] [P(lle) [D Merja-]]] malla{V}].
				Extracted head "virtaa" from malla and created [[[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] [P(lle) [D Merja-]]] [malla virtaa]]
			!Dropping floaters...
				malla failed to tail.
				= [[[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]]]] [P(lle) [D Merja-]]] [malla virtaa]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka ei T __käske D heidän Ainf __v antaa D kirja P(lle) D Merja- " into memory buffer from SPEC of "malla".
				Memory buffer: [[[[D N] [Neg/fin [ [[D N] [V [[D N] [ [[D N] [v [V [D N]]]]]]]]]]] [P [D N]]]]
				Dropping [[[D N] [Neg/fin [ [[D N] [V [[D N] [ [[D N] [v [V [D N]]]]]]]]]]] [P [D N]]](=D Pekka ei T __käske D heidän Ainf __v antaa D kirja P(lle) D Merja- ) from memory buffer into Comp of ['V'].
				Result [[[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] [P(lle) [D Merja-]]]:1 [malla [virtaa (PP):1]]]
				Remaining items in memory buffer: []
			= [[[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]]]] [P(lle) [D Merja-]]] [malla [virtaa [[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]]]] [P(lle) [D Merja-]]]]]]
		Checking LF-interface conditions.
			malla<[ADV]> failed to tail features [CAT:V]
malla
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'null']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
käske: [V, , Neg/fin]
D: [D, V, , Neg/fin]
heidän: [N, D, V, , Neg/fin]
Ainf: [, V, , Neg/fin]
(D): [D, , V, , Neg/fin]
(N): [N, D, , V, , Neg/fin]
v: [v, , V, , Neg/fin]
antaa: [V, v, , V, , Neg/fin]
D: [D, V, v, , V, , Neg/fin]
kirja: [N, D, V, v, , V, , Neg/fin]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
malla: [ADV]
virtaa: [V, ADV]
(D): [D, V, ADV]
(N): [N, D, V, ADV]
(Neg/fin): [Neg/fin, V, ADV]
(): [, Neg/fin, V, ADV]
(D): [D, , Neg/fin, V, ADV]
(N): [N, D, , Neg/fin, V, ADV]
(V): [V, , Neg/fin, V, ADV]
(D): [D, V, , Neg/fin, V, ADV]
(N): [N, D, V, , Neg/fin, V, ADV]
(): [, V, , Neg/fin, V, ADV]
(D): [D, , V, , Neg/fin, V, ADV]
(N): [N, D, , V, , Neg/fin, V, ADV]
(v): [v, , V, , Neg/fin, V, ADV]
(V): [V, v, , V, , Neg/fin, V, ADV]
(D): [D, V, v, , V, , Neg/fin, V, ADV]
(N): [N, D, V, v, , V, , Neg/fin, V, ADV]
(P): [P, V, ADV]
(D): [D, P, V, ADV]
(N): [N, D, P, V, ADV]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[P(lle){D,N} malla]
			P(lle) was opened.
			=[[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] [[P(lle) [D Merja-]] malla]]

22.

		Consume "virtaa"

		[[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]]]] [[P(lle) [D Merja-]] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] [[P(lle) [D Merja-]] malla{V}]]

23.
	>>>	Trying candidate parse [[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]]]] [[P(lle) [D Merja-]] malla{V}]] (2.)
		Reconstructing...
			!Reconstructing head movement for [[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] [[P(lle) [D Merja-]] malla{V}]].
				Extracted head "virtaa" from malla and created [[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] [[P(lle) [D Merja-]] [malla virtaa]]]
			!Dropping floaters...
				malla failed to tail.
				malla failed to tail.
				= [[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]]]] [[P(lle) [D Merja-]] [malla virtaa]]]
			!Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "malla".
				Moving "D Pekka ei T __käske D heidän Ainf __v antaa D kirja " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Memory buffer: [[P [D N]], [[D N] [Neg/fin [ [[D N] [V [[D N] [ [[D N] [v [V [D N]]]]]]]]]]]]
				Dropping [P [D N]](=P(lle) D Merja- ) from memory buffer into Comp of ['V'].
				Result [[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] [? [[P(lle) [D Merja-]]:1 [malla [virtaa (PP):1]]]]]
				Remaining items in memory buffer: [[[D N] [Neg/fin [ [[D N] [V [[D N] [ [[D N] [v [V [D N]]]]]]]]]]]]
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]]]] [? [[P(lle) [D Merja-]]:1 [malla [virtaa (PP):1]]]]].
			= [[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]]]] [? [[P(lle) [D Merja-]] [malla [virtaa [P(lle) [D Merja-]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
käske: [V, , Neg/fin]
D: [D, V, , Neg/fin]
heidän: [N, D, V, , Neg/fin]
Ainf: [, V, , Neg/fin]
(D): [D, , V, , Neg/fin]
(N): [N, D, , V, , Neg/fin]
v: [v, , V, , Neg/fin]
antaa: [V, v, , V, , Neg/fin]
D: [D, V, v, , V, , Neg/fin]
kirja: [N, D, V, v, , V, , Neg/fin]
?: [?]
P(lle): [P, ?]
D: [D, P, ?]
Merja-: [N, D, P, ?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]
(P): [P, V, ADV, ?]
(D): [D, P, V, ADV, ?]
(N): [N, D, P, V, ADV, ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]] P(lle)]
			!Reconstructing head movement for [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]].
				Extracted head "käske" and reconstructed it = [ei [T [käske [[D heidän] [Ainf{v,V} D{N}]]]]]
				Extracted head "v{V}" and reconstructed it = [ei [T [käske [[D heidän] [Ainf [v{V} D{N}]]]]]]
				Extracted head "antaa" and reconstructed it = [ei [T [käske [[D heidän] [Ainf [v [antaa D{N}]]]]]]]
				Extracted head "kirja" from D and created [ei [T [käske [[D heidän] [Ainf [v [antaa [D kirja]]]]]]]]
			!Dropping floaters...
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				= [ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]]
			!Dropping A-/A-bar movement.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Extraposition will be tried on [ei [T [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]].
			=[[D Pekka] [[ei [T [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]] P(lle)]]

24.

		Consume "D"

		[[D Pekka] [[ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [[ei [T [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]] P(lle){D}]]

25.

		Consume "Merja-"

		[[D Pekka] [[ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [[ei [T [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]] P(lle){D,N}]]

26.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [[ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]] P(lle){D,N}]] + malla
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [? [[ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]] [P(lle) [D Merja-]]]]] malla] due to bad left branch.
			Ranking remaining sites...
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [[ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid [P(lle){D,N} malla] due to complement selection against [ADV]
				Avoid [Merja- malla] due to complement selection against [ADV]
			P(lle) was opened.
				Prioritize P(lle){D,N} because all solutions were negative.
		Ranking completed:
			1. [P(lle){D,N}; malla]
			2. [[[ei [T [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]] P(lle){D,N}]; malla]
		Exploring solution number (1) =[P(lle){D,N} malla]
			P(lle) was opened.
			=[[D Pekka] [[ei [T [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]] [[P(lle) [D Merja-]] malla]]]

27.

		Consume "virtaa"

		[[D Pekka] [[ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]] [[P(lle) [D Merja-]] malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [[ei [T [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]] [[P(lle) [D Merja-]] malla{V}]]]

28.
	>>>	Trying candidate parse [[D Pekka] [[ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]] [[P(lle) [D Merja-]] malla{V}]]] (3.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [[ei [T [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]] [[P(lle) [D Merja-]] malla{V}]]].
				Extracted head "virtaa" from malla and created [[D Pekka] [[ei [T [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]] [[P(lle) [D Merja-]] [malla virtaa]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				malla failed to tail.
				malla failed to tail.
				= [[D Pekka] [[ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]] [[P(lle) [D Merja-]] [malla virtaa]]]]
			!Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "malla".
				Moving "ei T käske D heidän Ainf __v antaa D kirja " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Moving "D Pekka " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Memory buffer: [[P [D N]], [Neg/fin [ [V [[D N] [ [[D N] [v [V [D N]]]]]]]]], [D N]]
				Dropping [P [D N]](=P(lle) D Merja- ) from memory buffer into Comp of ['V'].
				Result [[D Pekka] [? [[ei [T [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]] [? [[P(lle) [D Merja-]]:1 [malla [virtaa (PP):1]]]]]]]
				Remaining items in memory buffer: [[Neg/fin [ [V [[D N] [ [[D N] [v [V [D N]]]]]]]]], [D N]]
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [[D Pekka] [? [[ei [T [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]] [? [[P(lle) [D Merja-]]:1 [malla [virtaa (PP):1]]]]]]].
			= [[D Pekka] [? [[ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]] [? [[P(lle) [D Merja-]] [malla [virtaa [P(lle) [D Merja-]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
?: [?]
ei: [Neg/fin, ?]
T: [, Neg/fin, ?]
käske: [V, , Neg/fin, ?]
D: [D, V, , Neg/fin, ?]
heidän: [N, D, V, , Neg/fin, ?]
Ainf: [, V, , Neg/fin, ?]
(D): [D, , V, , Neg/fin, ?]
(N): [N, D, , V, , Neg/fin, ?]
v: [v, , V, , Neg/fin, ?]
antaa: [V, v, , V, , Neg/fin, ?]
D: [D, V, v, , V, , Neg/fin, ?]
kirja: [N, D, V, v, , V, , Neg/fin, ?]
?: [?, ?]
P(lle): [P, ?, ?]
D: [D, P, ?, ?]
Merja-: [N, D, P, ?, ?]
malla: [ADV, ?, ?]
virtaa: [V, ADV, ?, ?]
(P): [P, V, ADV, ?, ?]
(D): [D, P, V, ADV, ?, ?]
(N): [N, D, P, V, ADV, ?, ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[ei [T [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]] P(lle){D,N}] malla]
			!Reconstructing head movement for [[ei [T [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[ei [T [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]] [P(lle) D{N}]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[ei [T [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]] [P(lle) [D Merja-]]]
			!Dropping floaters...
				= [[ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]] [P(lle) [D Merja-]]]
			!Dropping A-/A-bar movement.
				Moving "ei T käske D heidän Ainf __v antaa D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[Neg/fin [ [V [[D N] [ [[D N] [v [V [D N]]]]]]]]]]
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Extraposition will be tried on [[ei [T [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]] [P(lle) [D Merja-]]].
			=[[D Pekka] [[[ei [T [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]] [P(lle) [D Merja-]]] malla]]

29.

		Consume "virtaa"

		[[D Pekka] [[[ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]] [P(lle) [D Merja-]]] malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [[[ei [T [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]] [P(lle) [D Merja-]]] malla{V}]]

30.
	>>>	Trying candidate parse [[D Pekka] [[[ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]] [P(lle) [D Merja-]]] malla{V}]] (4.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [[[ei [T [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]] [P(lle) [D Merja-]]] malla{V}]].
				Extracted head "virtaa" from malla and created [[D Pekka] [[[ei [T [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]] [P(lle) [D Merja-]]] [malla virtaa]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				malla failed to tail.
				= [[D Pekka] [[[ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]] [P(lle) [D Merja-]]] [malla virtaa]]]
			!Dropping A-/A-bar movement.
				Moving "ei T käske D heidän Ainf __v antaa D kirja P(lle) D Merja- " into memory buffer from SPEC of "malla".
				Moving "D Pekka " into memory buffer from SPEC of "malla".
				New head was spawned due to multiple specifiers at malla but its category is unknown!
				Memory buffer: [[[Neg/fin [ [V [[D N] [ [[D N] [v [V [D N]]]]]]]]] [P [D N]]], [D N]]
				Dropping [[Neg/fin [ [V [[D N] [ [[D N] [v [V [D N]]]]]]]]] [P [D N]]](=ei T käske D heidän Ainf __v antaa D kirja P(lle) D Merja- ) from memory buffer into Comp of ['V'].
				Result [[D Pekka] [? [[[ei [T [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]] [P(lle) [D Merja-]]]:1 [malla [virtaa (PP):1]]]]]
				Remaining items in memory buffer: [[D N]]
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "(Neg/fin)" lacks specifier but needs one.
				An EPP-head "(V)" lacks specifier D that it requires.
				Extraposition will be tried on [[D Pekka] [? [[[ei [T [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [D kirja]]]]]]]]] [P(lle) [D Merja-]]]:1 [malla [virtaa (PP):1]]]]].
			= [[D Pekka] [? [[[ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]] [P(lle) [D Merja-]]] [malla [virtaa [[ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]] [P(lle) [D Merja-]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "(Neg/fin)" lacks specifier but needs one.
				An EPP-head "(V)" lacks specifier D that it requires.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'null']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
?: [?]
ei: [Neg/fin, ?]
T: [, Neg/fin, ?]
käske: [V, , Neg/fin, ?]
D: [D, V, , Neg/fin, ?]
heidän: [N, D, V, , Neg/fin, ?]
Ainf: [, V, , Neg/fin, ?]
(D): [D, , V, , Neg/fin, ?]
(N): [N, D, , V, , Neg/fin, ?]
v: [v, , V, , Neg/fin, ?]
antaa: [V, v, , V, , Neg/fin, ?]
D: [D, V, v, , V, , Neg/fin, ?]
kirja: [N, D, V, v, , V, , Neg/fin, ?]
P(lle): [P, ?]
D: [D, P, ?]
Merja-: [N, D, P, ?]
malla: [ADV, ?]
virtaa: [V, ADV, ?]
(Neg/fin): [Neg/fin, V, ADV, ?]
(): [, Neg/fin, V, ADV, ?]
(V): [V, , Neg/fin, V, ADV, ?]
(D): [D, V, , Neg/fin, V, ADV, ?]
(N): [N, D, V, , Neg/fin, V, ADV, ?]
(): [, V, , Neg/fin, V, ADV, ?]
(D): [D, , V, , Neg/fin, V, ADV, ?]
(N): [N, D, , V, , Neg/fin, V, ADV, ?]
(v): [v, , V, , Neg/fin, V, ADV, ?]
(V): [V, v, , V, , Neg/fin, V, ADV, ?]
(D): [D, V, v, , V, , Neg/fin, V, ADV, ?]
(N): [N, D, V, v, , V, , Neg/fin, V, ADV, ?]
(P): [P, V, ADV, ?]
(D): [D, P, V, ADV, ?]
(N): [N, D, P, V, ADV, ?]


		Trying to find other solutions...
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "virtaamalla".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]]]]

31.

		Consume "D"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]]]]

32.

		Consume "Merja-"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]]

33.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]], malla] because the operation breaks up an existing selectional dependency.
				An EPP-head "käske" lacks specifier D that it requires.
				[D kirja]" has no thematic role
				Avoid [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]] as left branch because it constitutes illicit structure.
				[D kirja]" has no thematic role
				Avoid [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]] because it could break words.
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
				Avoid [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[D kirja] P(lle){D,N}] because it could break words.
				Avoid [P(lle){D,N} malla] due to complement selection against [ADV]
				Avoid [Merja- malla] due to complement selection against [ADV]
		Ranking completed:
			1. [[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]]; malla]
			2. [[[D kirja] P(lle){D,N}]; malla]
			3. [[Ainf{v,V} [[D kirja] P(lle){D,N}]]; malla]
			4. [[ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]; malla]
			5. [P(lle){D,N}; malla]
			6. [[[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]; malla]
			7. [[T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]; malla]
		Exploring solution number (1) =[[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]] malla]
			!Reconstructing head movement for [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v{V} [[D kirja] P(lle){D,N}]]]]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] P(lle){D,N}]]]]]]]]]
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] [P(lle) D{N}]]]]]]]]]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				= [[D Pekka] [ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of käske
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			=[[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]] malla]

34.

		Consume "virtaa"

		[[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]] malla] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]] malla{V}]

35.
	>>>	Trying candidate parse [[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]] malla{V}] (5.)
		Reconstructing...
			!Reconstructing head movement for [[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]] malla{V}].
				Extracted head "virtaa" from malla and created [[[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]] [malla virtaa]]
			!Dropping floaters...
				malla failed to tail.
				= [[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]] [malla virtaa]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka ei T __käske D heidän Ainf __v antaa D kirja P(lle) D Merja- " into memory buffer from SPEC of "malla".
				Memory buffer: [[[D N] [Neg/fin [ [[D N] [V [[D N] [ [[D N] [v [V [[D N] [P [D N]]]]]]]]]]]]]]
			= [[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]] [malla virtaa]]
		Checking LF-interface conditions.
			malla<[ADV]> failed to tail features [CAT:V]
malla
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
käske: [V, , Neg/fin]
D: [D, V, , Neg/fin]
heidän: [N, D, V, , Neg/fin]
Ainf: [, V, , Neg/fin]
(D): [D, , V, , Neg/fin]
(N): [N, D, , V, , Neg/fin]
v: [v, , V, , Neg/fin]
antaa: [V, v, , V, , Neg/fin]
D: [D, V, v, , V, , Neg/fin]
kirja: [N, D, V, v, , V, , Neg/fin]
P(lle): [P, V, v, , V, , Neg/fin]
D: [D, P, V, v, , V, , Neg/fin]
Merja-: [N, D, P, V, v, , V, , Neg/fin]
malla: [ADV]
virtaa: [V, ADV]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "virtaa_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D kirja] P(lle){D,N}] malla]
			!Reconstructing head movement for [[D kirja] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[D kirja] [P(lle) D{N}]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D kirja] [P(lle) [D Merja-]]]
			!Dropping floaters...
				[D kirja] failed to tail [!COMP:*][-PHI]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped.
				= [<D kirja> [P(lle) [D [<D kirja> Merja-]]]]
			!Dropping A-/A-bar movement.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[<D kirja>:1 [P(lle) [D [<DP>:1 Merja-]]]] malla]]]]]]

36.

		Consume "virtaa"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[<D kirja> [P(lle) [D [<D kirja> Merja-]]]] malla]]]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[<D kirja>:1 [P(lle) [D [<DP>:1 Merja-]]]] malla{V}]]]]]]

37.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[<D kirja> [P(lle) [D [<D kirja> Merja-]]]] malla{V}]]]]]] (6.)
		Reconstructing...
			!Reconstructing head movement for [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[<D kirja>:1 [P(lle) [D [<DP>:1 Merja-]]]] malla{V}]]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf{v,V} [[<D kirja>:1 [P(lle) [D [<DP>:1 Merja-]]]] malla{V}]]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v{V} [[<D kirja>:1 [P(lle) [D [<DP>:1 Merja-]]]] malla{V}]]]]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa [[<D kirja>:1 [P(lle) [D [<DP>:1 Merja-]]]] malla{V}]]]]]]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa [[<D kirja>:1 [P(lle) [D [<DP>:1 Merja-]]]] [malla virtaa]]]]]]]]]]
			!Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				[D heidän] failed to tail [!COMP:*][PHI:0]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped.
				<malla virtaa> was made an adjunct.
				= [[D Pekka] [ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[<D kirja> [P(lle) [D [<D kirja> Merja-]]]] <malla virtaa>]]]]]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of käske
			= [[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[<D kirja> [P(lle) [D [<D kirja> Merja-]]]] <malla virtaa>]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:2 [ei [T [(DP):2 [käske [<D heidän>:1 [Ainf [<DP>:1 [v [antaa [[<D kirja>:1 [P(lle) [D [<DP>:1 Merja-]]]] <malla virtaa>]]]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 37/579 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[<D kirja> [P(lle) [D [<D kirja> Merja-]]]] <malla virtaa>]]]]]]]]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 [käske [<D heidän>:2 [Ainf [<DP>:2 [v [antaa [[<D kirja>:2 [P(lle) [D [<DP>:2 Merja-]]]] <malla virtaa>]]]]]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 [V [DP:2 [ [__:2 [v [V [[DP:2 [P [D [__:2 N]]]] ADVP]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:WH', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-PHI', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:ADV', '-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
käske: [V, , Neg/fin]
D: [D, V, , Neg/fin]
heidän: [N, D, V, , Neg/fin]
Ainf: [, V, , Neg/fin]
(D): [D, , V, , Neg/fin]
(N): [N, D, , V, , Neg/fin]
v: [v, , V, , Neg/fin]
antaa: [V, v, , V, , Neg/fin]
D: [D, V, v, , V, , Neg/fin]
kirja: [N, D, V, v, , V, , Neg/fin]
P(lle): [P, V, v, , V, , Neg/fin]
D: [D, P, V, v, , V, , Neg/fin]
(D): [D, N, D, P, V, v, , V, , Neg/fin]
(N): [N, D, N, D, P, V, v, , V, , Neg/fin]
Merja-: [N, D, P, V, v, , V, , Neg/fin]
malla: [ADV, V, v, , V, , Neg/fin]
virtaa: [V, ADV, V, v, , V, , Neg/fin]

			Checking if the sentence is ambiguous...
