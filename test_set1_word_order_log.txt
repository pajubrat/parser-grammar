

\========================================================================
# 1
['antoi=FOC', 'Pekka', 'kirjan', 'Merjalle']


			=None

1.
		Prosodic features detected.
		Prosodic focus detected at finite element, converted into C/fin.

		Next word contains multiple morphemes ['$C/fin', '$T/fin', '$v', 'anta-']
			=C

2.

		Consume "T"

		C + T
			Filtering out impossible merge sites...
			Sink "T" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T]
			=C{T/fin}

3.

		Consume "v"

		C{T/fin} + v
			Filtering out impossible merge sites...
			Sink "v" into C{T/fin} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin}*v]
			=C{T/fin,v}

4.

		Consume "antaa"

		C{T/fin,v} + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into C{T/fin,v} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin,v}*antaa]
			=C{T/fin,v,V}

5.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=C{T/fin,v,V}

6.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']

		Consume "D"

		C{T/fin,v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T/fin,v,V} D]
			C{T/fin,v,V} cannot be opened.
			=[C{T/fin,v,V} D]

7.

		Consume "Pekka"

		[C{T/fin,v,V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T/fin,v,V} D{N}]

8.

		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[C{T/fin,v,V} D{N}]

9.

		Adding inflectional features to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']

		Consume "D"

		[C{T/fin,v,V} D{N}] + D
			Filtering out impossible merge sites...
				Reject [[C{T/fin,v,V} [D Pekka]] D] due to bad left branch.
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[C{T/fin,v,V} [[D Pekka] D]]

10.

		Consume "kirja"

		[C{T/fin,v,V} [[D Pekka] D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[C{T/fin,v,V} [[D Pekka] D{N}]]

11.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[C{T/fin,v,V} [[D Pekka] D{N}]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [[D Pekka] D{N}] because it could break words.
				Avoid [kirja P(lle)] due to complement selection against [P]
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
		Ranking completed:
			1. [[C{T/fin,v,V} [[D Pekka] D{N}]]; P(lle)]
			2. [[[D Pekka] D{N}]; P(lle)]
			3. [D{N}; P(lle)]
		Exploring solution number (1) =[[C{T/fin,v,V} [[D Pekka] D{N}]] P(lle)]
			!Reconstructing head movement for [C{T/fin,v,V} [[D Pekka] D{N}]].
				Extracted head "T{v,V}" and reconstructed it = [C [[D Pekka] [T{v,V} D{N}]]]
				Extracted head "v{V}" and reconstructed it = [C [[D Pekka] [T [v{V} D{N}]]]]
				Extracted head "antaa" and reconstructed it = [C [[D Pekka] [T [v [antaa D{N}]]]]]
				Extracted head "kirja" from D and created [C [[D Pekka] [T [v [antaa [D kirja]]]]]]
			!Dropping floaters...
				= [C [[D Pekka] [T [v [antaa [D kirja]]]]]]
			!Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of v
			=[[C [[D Pekka]:1 [T [(DP):1 [v [antaa [D kirja]]]]]]] P(lle)]

12.

		Consume "D"

		[[C [[D Pekka] [T [[D Pekka] [v [antaa [D kirja]]]]]]] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[C [[D Pekka]:1 [T [(DP):1 [v [antaa [D kirja]]]]]]] P(lle){D}]

13.

		Consume "Merja-"

		[[C [[D Pekka] [T [[D Pekka] [v [antaa [D kirja]]]]]]] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[C [[D Pekka]:1 [T [(DP):1 [v [antaa [D kirja]]]]]]] P(lle){D,N}]

14.
	>>>	Trying candidate parse [[C [[D Pekka] [T [[D Pekka] [v [antaa [D kirja]]]]]]] P(lle){D,N}] (1.)
		Reconstructing...
			!Reconstructing head movement for [[C [[D Pekka]:1 [T [(DP):1 [v [antaa [D kirja]]]]]]] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[C [[D Pekka]:1 [T [(DP):1 [v [antaa [D kirja]]]]]]] [P(lle) D{N}]]
			!Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[C [[D Pekka]:1 [T [(DP):1 [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]]
			!Dropping floaters...
				= [[C [[D Pekka] [T [[D Pekka] [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]]
			!Dropping A-/A-bar movement.
				Moving "C D Pekka T __v antaa D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[C/fin [[D N] [T/fin [[D N] [v [V [D N]]]]]]]]
			= [[C [[D Pekka] [T [[D Pekka] [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]]
		Checking LF-interface conditions.
			Trying to transfer [[C [[D Pekka]:1 [T [(DP):1 [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 14/126 operations) <------------------------------------
		Solution:
		[[C [[D Pekka] [T [[D Pekka] [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]]
		Grammar: [[C [[D Pekka]:1 [T [(DP):1 [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]]
		Spellout PP = [C/finP [P [D N]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:T/fin', 'FOC', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:T/fin', 'FOC', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

C: [C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
T: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
v: [v, T/fin, C/fin]
antaa: [V, v, T/fin, C/fin]
D: [D, V, v, T/fin, C/fin]
kirja: [N, D, V, v, T/fin, C/fin]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]

			Checking if the sentence is ambiguous...
