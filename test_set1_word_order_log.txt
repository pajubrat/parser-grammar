

\========================================================================
# 1
['kenen', 'Pekka', 'käski', 'nukkua']


			=None

1.

		Next word contains multiple morphemes ['$gen', '$wh', '$D', 'kenen-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-COMP:C/fin', '-', '-COMP:ADV', 'CAT:WH', 'TAIL:PHI:0,!COMP:*', 'ABAR:WH', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
			=D

4.

		Consume "kenen"

		D + kenen
			Filtering out impossible merge sites...
			Sink "kenen" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kenen]
			=D{N}

5.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D kenen] D]

7.

		Consume "Pekka"

		[[D kenen] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D kenen] D{N}]

8.

		Next word contains multiple morphemes ['$T/fin', 'käske-']

		Consume "T"

		[[D kenen] D{N}] + T
			Filtering out impossible merge sites...
				Reject [[[D kenen] <D Pekka>] T] due to bad left branch.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D kenen] [[D Pekka] T]]

9.

		Consume "käske"

		[[D kenen] [[D Pekka] T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D kenen] [[D Pekka] T{V}]]

10.

		Next word contains multiple morphemes ['$-ta', 'nukku-']

		Consume "Ainf"

		[[D kenen] [[D Pekka] T{V}]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D kenen] [uWH [<D Pekka> [T [<D Pekka> käske]]]]] Ainf] due to bad left branch.
			Ranking remaining sites...
				Avoid T/finP as SPEC, Ainf
				Prioritize [käske Ainf] due to complement selection for [A/inf]
		Ranking completed:
			1. [T{V}; Ainf]
			2. [[[D Pekka] T{V}]; Ainf]
		Exploring solution number (1) =[T{V} Ainf]
			T{V} cannot be opened.
			=[[D kenen] [[D Pekka] [T{V} Ainf]]]

11.

		Consume "nukku"

		[[D kenen] [[D Pekka] [T{V} Ainf]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*nukku]
			=[[D kenen] [[D Pekka] [T{V} Ainf{V}]]]

12.
	>>>	Trying candidate parse [[D kenen] [[D Pekka] [T{V} Ainf{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kenen] [[D Pekka] [T{V} Ainf{V}]]].
				Extracted head "käske" and reconstructed it = [[D kenen] [[D Pekka] [T [käske Ainf{V}]]]]
				Extracted head "nukku" from Ainf and created [[D kenen] [[D Pekka] [T [käske [Ainf nukku]]]]]
			Dropping floaters...
				[D kenen] failed to tail [!COMP:*][PHI:0]
				<D kenen> was made an adjunct.
				Floater <D kenen> dropped.
				[D Pekka] is in an EPP SPEC position.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				= [<D kenen> [<D Pekka> [T [<D Pekka> [käske [<D kenen> [Ainf nukku]]]]]]]
			Dropping A-/A-bar movement.
				New {'WH'} head was spawned due to the occurrence of multiple specifiers at T
				<DP>:1 will undergo A-reconstruction (form of Agree).
				Criterial features {'WH'} copied to ['A/inf', 'INF', 'A/inf/INF']
			= [<D kenen> [uWH [<D Pekka> [T [<D Pekka> [käske [<D kenen> [Ainf [<D kenen> nukku]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D kenen>:1 [uWH [<D Pekka>:2 [T [<DP>:2 [käske [<DP>:1 [Ainf [<DP>:1 nukku]]]]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 12/103 operations) <------------------------------------
		Solution:
		[<D kenen> [uWH [<D Pekka> [T [<D Pekka> [käske [<D kenen> [Ainf [<D kenen> nukku]]]]]]]]]
		Grammar: [<D kenen>:1 [uWH [<D Pekka>:2 [T [<DP>:2 [käske [<DP>:1 [Ainf [<DP>:1 nukku]]]]]]]]]
		Spellout iWHP = [DP:1 [iWH [DP:2 [T/fin [__:2 [V [__:1 [ [__:1 V]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A', 'null']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '!SPEC:uWH', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/A/inf/INF/INF/uWH', 'CAT:A/inf/INF', 'CAT:INF', 'CAT:uWH', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-COMP:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A', 'null']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '!SPEC:uWH', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/A/inf/INF/INF/uWH', 'CAT:A/inf/INF', 'CAT:INF', 'CAT:uWH', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:ADV', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
kenen: [N, D]
uWH: [iWH]
D: [D, iWH]
Pekka: [N, D, iWH]
T: [T/fin, iWH]
(D): [D, T/fin, iWH]
(N): [N, D, T/fin, iWH]
käske: [V, T/fin, iWH]
(D): [D, V, T/fin, iWH]
(N): [N, D, V, T/fin, iWH]
Ainf: [, V, T/fin, iWH]
(D): [D, V, , V, T/fin, iWH]
(N): [N, D, V, , V, T/fin, iWH]
nukku: [V, , V, T/fin, iWH]

			Checking if the sentence is ambiguous...
