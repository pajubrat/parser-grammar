

\========================================================================
# 1
['Pekka', 'nukkui']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "nukku"

		[[D Pekka] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] T{V}]

6.
	>>>	Trying candidate parse [[D Pekka] T{V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] T{V}].
				Extracted head "nukku" from T and created [[D Pekka] [T nukku]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				= [<D Pekka> [T [<D Pekka> nukku]]]
			Dropping A-/A-bar movement.
			= [<D Pekka> [T [<D Pekka> nukku]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 nukku]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 6/47 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> nukku]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 nukku]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 V]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, V, T/fin]
(N): [N, D, V, T/fin]
nukku: [V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 2
['Pekka', 'ei', 'nukkunut']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.

		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "nukku"

		[[D Pekka] [ei T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [ei T{V}]]

7.
	>>>	Trying candidate parse [[D Pekka] [ei T{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei T{V}]].
				Extracted head "nukku" from T and created [[D Pekka] [ei [T nukku]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				= [[D Pekka] [ei [T nukku]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of nukku
			= [[D Pekka] [ei [T [[D Pekka] nukku]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:1 [ei [T [(DP):1 nukku]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 7/62 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] nukku]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 nukku]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 V]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, V, , Neg/fin]
(N): [N, D, V, , Neg/fin]
nukku: [V, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 3
['Pekka', 'ihailee', 'Merjaa']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Next word contains multiple morphemes ['$T/fin', '$v', 'ihaile-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "v"

		[[D Pekka] T] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D Pekka] T{v}]

6.

		Consume "ihailee"

		[[D Pekka] T{v}] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*ihailee]
			=[[D Pekka] T{v,V}]

7.

		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] T{v,V}]

8.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] T{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [v ihailee]]]] D] due to bad left branch.
		Exploring solution number (1) =[T{v,V} D]
			T{v,V} cannot be opened.
			=[[D Pekka] [T{v,V} D]]

9.

		Consume "Merjaa"

		[[D Pekka] [T{v,V} D]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [T{v,V} D{N}]]

10.
	>>>	Trying candidate parse [[D Pekka] [T{v,V} D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T{v,V} D{N}]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T [v{V} D{N}]]]
				Extracted head "ihailee" and reconstructed it = [[D Pekka] [T [v [ihailee D{N}]]]]
				Extracted head "Merjaa" from D and created [[D Pekka] [T [v [ihailee [D Merjaa]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				= [<D Pekka> [T [<D Pekka> [v [ihailee [D Merjaa]]]]]]
			Dropping A-/A-bar movement.
			= [<D Pekka> [T [<D Pekka> [v [ihailee [D Merjaa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 [v [ihailee [D Merjaa]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 10/78 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> [v [ihailee [D Merjaa]]]]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 [v [ihailee [D Merjaa]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
ihailee: [V, v, T/fin]
D: [D, V, v, T/fin]
Merjaa: [N, D, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 4
['Pekka', 'ei', 'ihaile', 'Merjaa']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.

		Next word contains multiple morphemes ['$T', '$v', 'ihaile-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "v"

		[[D Pekka] [ei T]] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D Pekka] [ei T{v}]]

7.

		Consume "ihailee"

		[[D Pekka] [ei T{v}]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*ihailee]
			=[[D Pekka] [ei T{v,V}]]

8.

		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{v,V}]]

9.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [ei T{v,V}]] + D
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [v ihailee]]]]] D] due to bad left branch.
				Reject [[ei [T [v ihailee]]] D] due to bad left branch.
		Exploring solution number (1) =[T{v,V} D]
			T{v,V} cannot be opened.
			=[[D Pekka] [ei [T{v,V} D]]]

10.

		Consume "Merjaa"

		[[D Pekka] [ei [T{v,V} D]]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [ei [T{v,V} D{N}]]]

11.
	>>>	Trying candidate parse [[D Pekka] [ei [T{v,V} D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{v,V} D{N}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [v{V} D{N}]]]]
				Extracted head "ihailee" and reconstructed it = [[D Pekka] [ei [T [v [ihailee D{N}]]]]]
				Extracted head "Merjaa" from D and created [[D Pekka] [ei [T [v [ihailee [D Merjaa]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				= [[D Pekka] [ei [T [v [ihailee [D Merjaa]]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of v
			= [[D Pekka] [ei [T [[D Pekka] [v [ihailee [D Merjaa]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:1 [ei [T [(DP):1 [v [ihailee [D Merjaa]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 11/94 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] [v [ihailee [D Merjaa]]]]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 [v [ihailee [D Merjaa]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 [v [V [D N]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
v: [v, , Neg/fin]
ihailee: [V, v, , Neg/fin]
D: [D, V, v, , Neg/fin]
Merjaa: [N, D, V, v, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 5
['Pekka', 'antoi', 'kirjan', 'Merjalle']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "v"

		[[D Pekka] T] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D Pekka] T{v}]

6.

		Consume "antaa"

		[[D Pekka] T{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*antaa]
			=[[D Pekka] T{v,V}]

7.

		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] T{v,V}]

8.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] T{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[T{v,V} D]
			T{v,V} cannot be opened.
			=[[D Pekka] [T{v,V} D]]

9.

		Consume "kirja"

		[[D Pekka] [T{v,V} D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [T{v,V} D{N}]]

10.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [T{v,V} D{N}]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle)
				Avoid T/finP as SPEC, P(lle)
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection against [P]
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D Pekka] [T{v,V} D{N}]]; P(lle)]
			3. [[T{v,V} D{N}]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [T{v,V} [[D kirja] P(lle)]]]

11.

		Consume "D"

		[[D Pekka] [T{v,V} [[D kirja] P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [T{v,V} [[D kirja] P(lle){D}]]]

12.

		Consume "Merja-"

		[[D Pekka] [T{v,V} [[D kirja] P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [T{v,V} [[D kirja] P(lle){D,N}]]]

13.
	>>>	Trying candidate parse [[D Pekka] [T{v,V} [[D kirja] P(lle){D,N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T{v,V} [[D kirja] P(lle){D,N}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T [v{V} [[D kirja] P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [T [v [antaa [[D kirja] P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [T [v [antaa [[D kirja] [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [T [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				= [<D Pekka> [T [<D Pekka> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D Pekka>:1 [T [<DP>:1 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [<D Pekka> [T [<D Pekka> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 13/122 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [v [V [[D N] PP]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 6
['Pekka', 'ei', 'antanut', 'kirjaa', 'Merjalle']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.

		Next word contains multiple morphemes ['$T', '$v', 'anta-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "v"

		[[D Pekka] [ei T]] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D Pekka] [ei T{v}]]

7.

		Consume "antaa"

		[[D Pekka] [ei T{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*antaa]
			=[[D Pekka] [ei T{v,V}]]

8.

		Next word contains multiple morphemes ['$par', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{v,V}]]

9.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [ei T{v,V}]] + D
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [v antaa]]]]] D] due to bad left branch.
				Reject [[ei [T [v antaa]]] D] due to bad left branch.
		Exploring solution number (1) =[T{v,V} D]
			T{v,V} cannot be opened.
			=[[D Pekka] [ei [T{v,V} D]]]

10.

		Consume "kirja"

		[[D Pekka] [ei [T{v,V} D]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [ei [T{v,V} D{N}]]]

11.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [ei [T{v,V} D{N}]]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, P(lle)
				Avoid Neg/finP as SPEC, P(lle)
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [ei [T [v [antaa [D kirja]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T{v,V} D{N}], P(lle)] because the operation breaks up an existing selectional dependency.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection against [P]
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D Pekka] [ei [T{v,V} D{N}]]]; P(lle)]
			3. [[T{v,V} D{N}]; P(lle)]
			4. [[ei [T{v,V} D{N}]]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [ei [T{v,V} [[D kirja] P(lle)]]]]

12.

		Consume "D"

		[[D Pekka] [ei [T{v,V} [[D kirja] P(lle)]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D}]]]]

13.

		Consume "Merja-"

		[[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D}]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D,N}]]]]

14.
	>>>	Trying candidate parse [[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D,N}]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D,N}]]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [v{V} [[D kirja] P(lle){D,N}]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [ei [T [v [antaa [[D kirja] P(lle){D,N}]]]]]]
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [ei [T [v [antaa [[D kirja] [P(lle) D{N}]]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [ei [T [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				= [[D Pekka] [ei [T [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of v
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [[D Pekka]:1 [ei [T [(DP):1 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [[D Pekka] [ei [T [[D Pekka] [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:1 [ei [T [(DP):1 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 14/142 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 [v [V [[D N] PP]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
v: [v, , Neg/fin]
antaa: [V, v, , Neg/fin]
D: [D, V, v, , Neg/fin]
kirja: [N, D, V, v, , Neg/fin]
P(lle): [P, V, v, , Neg/fin]
D: [D, P, V, v, , Neg/fin]
Merja-: [N, D, P, V, v, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 7
['Pekka', 'käski', 'heidän', 'nukkua']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Next word contains multiple morphemes ['$T/fin', 'käske-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "käske"

		[[D Pekka] T] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] T{V}]

6.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] T{V}]

7.

		Adding inflectional features {'TAIL:PHI:0,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D Pekka] T{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D
				Avoid [T{V} D] due to local agreement failure.
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} D]]

8.

		Consume "heidän"

		[[D Pekka] [T{V} D]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [T{V} D{N}]]

9.

		Next word contains multiple morphemes ['$-ta', 'nukku-']

		Consume "Ainf"

		[[D Pekka] [T{V} D{N}]] + Ainf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [käske <D heidän>]]]] Ainf] due to bad left branch.
				Reject [[T [käske <D heidän>]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [T{V} [[D heidän] Ainf]]]

10.

		Consume "nukku"

		[[D Pekka] [T{V} [[D heidän] Ainf]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*nukku]
			=[[D Pekka] [T{V} [[D heidän] Ainf{V}]]]

11.
	>>>	Trying candidate parse [[D Pekka] [T{V} [[D heidän] Ainf{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T{V} [[D heidän] Ainf{V}]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [T [käske [[D heidän] Ainf{V}]]]]
				Extracted head "nukku" from Ainf and created [[D Pekka] [T [käske [[D heidän] [Ainf nukku]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				= [<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf nukku]]]]]]
			Dropping A-/A-bar movement.
				[D heidän] will undergo A-reconstruction (form of Agree).
			= [<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] nukku]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 [käske [[D heidän]:2 [Ainf [(DP):2 nukku]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 11/93 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] nukku]]]]]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 [käske [[D heidän]:2 [Ainf [(DP):2 nukku]]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V [DP:2 [ [__:2 V]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
käske: [V, T/fin]
D: [D, V, T/fin]
heidän: [N, D, V, T/fin]
Ainf: [, V, T/fin]
(D): [D, V, , V, T/fin]
(N): [N, D, V, , V, T/fin]
nukku: [V, , V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 8
['Pekka', 'ei', 'käskenyt', 'heidän', 'nukkua']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.

		Next word contains multiple morphemes ['$T', 'käske-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "käske"

		[[D Pekka] [ei T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] [ei T{V}]]

7.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{V}]]

8.

		Adding inflectional features {'TAIL:PHI:0,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D Pekka] [ei T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D
				Avoid Neg/finP as SPEC for D
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T käske]] as left branch because it constitutes illicit structure.
				Avoid [T{V} D] due to local agreement failure.
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] [ei T{V}]]; D]
			3. [[ei T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} D]]]

9.

		Consume "heidän"

		[[D Pekka] [ei [T{V} D]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [ei [T{V} D{N}]]]

10.

		Next word contains multiple morphemes ['$-ta', 'nukku-']

		Consume "Ainf"

		[[D Pekka] [ei [T{V} D{N}]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [D heidän]]]]]] Ainf] due to bad left branch.
				Reject [[ei [T [käske [D heidän]]]] Ainf] due to bad left branch.
				Reject [[T [käske [D heidän]]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]

11.

		Consume "nukku"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*nukku]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{V}]]]]

12.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} [[D heidän] Ainf{V}]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{V} [[D heidän] Ainf{V}]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] Ainf{V}]]]]]
				Extracted head "nukku" from Ainf and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf nukku]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				= [[D Pekka] [ei [T [käske [[D heidän] [Ainf nukku]]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of käske
				[D heidän] will undergo A-reconstruction (form of Agree).
			= [[D Pekka] [ei [T [[D Pekka] [käske [[D heidän] [Ainf [[D heidän] nukku]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:1 [ei [T [(DP):1 [käske [[D heidän]:3 [Ainf [(DP):3 nukku]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 12/114 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] [käske [[D heidän] [Ainf [[D heidän] nukku]]]]]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 [käske [[D heidän]:2 [Ainf [(DP):2 nukku]]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 [V [DP:2 [ [__:2 V]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
käske: [V, , Neg/fin]
D: [D, V, , Neg/fin]
heidän: [N, D, V, , Neg/fin]
Ainf: [, V, , Neg/fin]
(D): [D, V, , V, , Neg/fin]
(N): [N, D, V, , V, , Neg/fin]
nukku: [V, , V, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 9
['Pekka', 'käski', 'heidän', 'ihailla', 'Merjaa']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Next word contains multiple morphemes ['$T/fin', 'käske-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "käske"

		[[D Pekka] T] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] T{V}]

6.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] T{V}]

7.

		Adding inflectional features {'TAIL:PHI:0,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D Pekka] T{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D
				Avoid [T{V} D] due to local agreement failure.
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} D]]

8.

		Consume "heidän"

		[[D Pekka] [T{V} D]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [T{V} D{N}]]

9.

		Next word contains multiple morphemes ['$-ta', '$v', 'ihaile-']

		Consume "Ainf"

		[[D Pekka] [T{V} D{N}]] + Ainf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [käske <D heidän>]]]] Ainf] due to bad left branch.
				Reject [[T [käske <D heidän>]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [T{V} [[D heidän] Ainf]]]

10.

		Consume "v"

		[[D Pekka] [T{V} [[D heidän] Ainf]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D Pekka] [T{V} [[D heidän] Ainf{v}]]]

11.

		Consume "ihailee"

		[[D Pekka] [T{V} [[D heidän] Ainf{v}]]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*ihailee]
			=[[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]

12.

		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]

13.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [v ihailee]]]]]]]] D] due to bad left branch.
				Reject [[T [käske [[D heidän] [Ainf [[D heidän] [v ihailee]]]]]] D] due to bad left branch.
				Reject [[[D heidän] [Ainf [[D heidän] [v ihailee]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D]]]]

14.

		Consume "Merjaa"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D]]]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]

15.
	>>>	Trying candidate parse [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D{N}]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D{N}]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf{v,V} D{N}]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf [v{V} D{N}]]]]]]
				Extracted head "ihailee" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf [v [ihailee D{N}]]]]]]]
				Extracted head "Merjaa" from D and created [[D Pekka] [T [käske [[D heidän] [Ainf [v [ihailee [D Merjaa]]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				= [<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [v [ihailee [D Merjaa]]]]]]]]]
			Dropping A-/A-bar movement.
				[D heidän] will undergo A-reconstruction (form of Agree).
			= [<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [v [ihailee [D Merjaa]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 [käske [[D heidän]:2 [Ainf [(DP):2 [v [ihailee [D Merjaa]]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 15/126 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [v [ihailee [D Merjaa]]]]]]]]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 [käske [[D heidän]:2 [Ainf [(DP):2 [v [ihailee [D Merjaa]]]]]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V [DP:2 [ [__:2 [v [V [D N]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
käske: [V, T/fin]
D: [D, V, T/fin]
heidän: [N, D, V, T/fin]
Ainf: [, V, T/fin]
(D): [D, , V, T/fin]
(N): [N, D, , V, T/fin]
v: [v, , V, T/fin]
ihailee: [V, v, , V, T/fin]
D: [D, V, v, , V, T/fin]
Merjaa: [N, D, V, v, , V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 10
['Pekka', 'ei', 'käskenyt', 'heidän', 'ihailla', 'Merjaa']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.

		Next word contains multiple morphemes ['$T', 'käske-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "käske"

		[[D Pekka] [ei T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] [ei T{V}]]

7.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{V}]]

8.

		Adding inflectional features {'TAIL:PHI:0,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D Pekka] [ei T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D
				Avoid Neg/finP as SPEC for D
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T käske]] as left branch because it constitutes illicit structure.
				Avoid [T{V} D] due to local agreement failure.
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] [ei T{V}]]; D]
			3. [[ei T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} D]]]

9.

		Consume "heidän"

		[[D Pekka] [ei [T{V} D]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [ei [T{V} D{N}]]]

10.

		Next word contains multiple morphemes ['$-ta', '$v', 'ihaile-']

		Consume "Ainf"

		[[D Pekka] [ei [T{V} D{N}]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [D heidän]]]]]] Ainf] due to bad left branch.
				Reject [[ei [T [käske [D heidän]]]] Ainf] due to bad left branch.
				Reject [[T [käske [D heidän]]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]

11.

		Consume "v"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]]

12.

		Consume "ihailee"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*ihailee]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]

13.

		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]

14.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]] + D
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [[D heidän] [Ainf [[D heidän] [v ihailee]]]]]]]]] D] due to bad left branch.
				Reject [[ei [T [käske [[D heidän] [Ainf [[D heidän] [v ihailee]]]]]]] D] due to bad left branch.
				Reject [[T [käske [[D heidän] [Ainf [[D heidän] [v ihailee]]]]]] D] due to bad left branch.
				Reject [[[D heidän] [Ainf [[D heidän] [v ihailee]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D]]]]]

15.

		Consume "Merjaa"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D]]]]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]]

16.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf{v,V} D{N}]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v{V} D{N}]]]]]]]
				Extracted head "ihailee" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [ihailee D{N}]]]]]]]]
				Extracted head "Merjaa" from D and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [ihailee [D Merjaa]]]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				= [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [ihailee [D Merjaa]]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of käske
				[D heidän] will undergo A-reconstruction (form of Agree).
			= [[D Pekka] [ei [T [[D Pekka] [käske [[D heidän] [Ainf [[D heidän] [v [ihailee [D Merjaa]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:1 [ei [T [(DP):1 [käske [[D heidän]:3 [Ainf [(DP):3 [v [ihailee [D Merjaa]]]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 16/148 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] [käske [[D heidän] [Ainf [[D heidän] [v [ihailee [D Merjaa]]]]]]]]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 [käske [[D heidän]:2 [Ainf [(DP):2 [v [ihailee [D Merjaa]]]]]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 [V [DP:2 [ [__:2 [v [V [D N]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
käske: [V, , Neg/fin]
D: [D, V, , Neg/fin]
heidän: [N, D, V, , Neg/fin]
Ainf: [, V, , Neg/fin]
(D): [D, , V, , Neg/fin]
(N): [N, D, , V, , Neg/fin]
v: [v, , V, , Neg/fin]
ihailee: [V, v, , V, , Neg/fin]
D: [D, V, v, , V, , Neg/fin]
Merjaa: [N, D, V, v, , V, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 11
['Pekka', 'käski', 'heidän', 'antaa', 'kirjan', 'Merjalle']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Next word contains multiple morphemes ['$T/fin', 'käske-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "käske"

		[[D Pekka] T] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] T{V}]

6.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] T{V}]

7.

		Adding inflectional features {'TAIL:PHI:0,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D Pekka] T{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D
				Avoid [T{V} D] due to local agreement failure.
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} D]]

8.

		Consume "heidän"

		[[D Pekka] [T{V} D]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [T{V} D{N}]]

9.

		Next word contains multiple morphemes ['$-ta', '$v', 'anta-']

		Consume "Ainf"

		[[D Pekka] [T{V} D{N}]] + Ainf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [käske <D heidän>]]]] Ainf] due to bad left branch.
				Reject [[T [käske <D heidän>]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [T{V} [[D heidän] Ainf]]]

10.

		Consume "v"

		[[D Pekka] [T{V} [[D heidän] Ainf]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D Pekka] [T{V} [[D heidän] Ainf{v}]]]

11.

		Consume "antaa"

		[[D Pekka] [T{V} [[D heidän] Ainf{v}]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*antaa]
			=[[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]

12.

		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]

13.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [v antaa]]]]]]]] D] due to bad left branch.
				Reject [[T [käske [[D heidän] [Ainf [[D heidän] [v antaa]]]]]] D] due to bad left branch.
				Reject [[[D heidän] [Ainf [[D heidän] [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D]]]]

14.

		Consume "kirja"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D]]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]

15.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D{N}]]]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle)
				Avoid T/finP as SPEC, P(lle)
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T [käske [[D heidän] [Ainf [[D heidän] [v [antaa [D kirja]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid P as SPEC, P(lle)
				Avoid P as SPEC, P(lle)
				An EPP-head "Ainf" lacks specifier D that it requires.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection against [P]
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D heidän] [Ainf{v,V} D{N}]]; P(lle)]
			3. [[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]; P(lle)]
			4. [[Ainf{v,V} D{N}]; P(lle)]
			5. [[T{V} [[D heidän] [Ainf{v,V} D{N}]]]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]]]

16.

		Consume "D"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]]]

17.

		Consume "Merja-"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]

18.
	>>>	Trying candidate parse [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf [v{V} [[D kirja] P(lle){D,N}]]]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] P(lle){D,N}]]]]]]]]
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] [P(lle) D{N}]]]]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				= [<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]]]
			Dropping A-/A-bar movement.
				[D heidän] will undergo A-reconstruction (form of Agree).
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D Pekka>:1 [T [<DP>:1 [käske [[D heidän]:2 [Ainf [(DP):2 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 [käske [[D heidän]:2 [Ainf [(DP):2 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 18/177 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 [käske [[D heidän]:2 [Ainf [(DP):2 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V [DP:2 [ [__:2 [v [V [[D N] PP]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
käske: [V, T/fin]
D: [D, V, T/fin]
heidän: [N, D, V, T/fin]
Ainf: [, V, T/fin]
(D): [D, , V, T/fin]
(N): [N, D, , V, T/fin]
v: [v, , V, T/fin]
antaa: [V, v, , V, T/fin]
D: [D, V, v, , V, T/fin]
kirja: [N, D, V, v, , V, T/fin]
P(lle): [P, V, v, , V, T/fin]
D: [D, P, V, v, , V, T/fin]
Merja-: [N, D, P, V, v, , V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 12
['Pekka', 'ei', 'käskenyt', 'heidän', 'antaa', 'kirjaa', 'Merjalle']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.

		Next word contains multiple morphemes ['$T', 'käske-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "käske"

		[[D Pekka] [ei T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] [ei T{V}]]

7.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{V}]]

8.

		Adding inflectional features {'TAIL:PHI:0,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D Pekka] [ei T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D
				Avoid Neg/finP as SPEC for D
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T käske]] as left branch because it constitutes illicit structure.
				Avoid [T{V} D] due to local agreement failure.
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] [ei T{V}]]; D]
			3. [[ei T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} D]]]

9.

		Consume "heidän"

		[[D Pekka] [ei [T{V} D]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [ei [T{V} D{N}]]]

10.

		Next word contains multiple morphemes ['$-ta', '$v', 'anta-']

		Consume "Ainf"

		[[D Pekka] [ei [T{V} D{N}]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [D heidän]]]]]] Ainf] due to bad left branch.
				Reject [[ei [T [käske [D heidän]]]] Ainf] due to bad left branch.
				Reject [[T [käske [D heidän]]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]

11.

		Consume "v"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]]

12.

		Consume "antaa"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*antaa]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]

13.

		Next word contains multiple morphemes ['$par', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]

14.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]] + D
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [[D heidän] [Ainf [[D heidän] [v antaa]]]]]]]]] D] due to bad left branch.
				Reject [[ei [T [käske [[D heidän] [Ainf [[D heidän] [v antaa]]]]]]] D] due to bad left branch.
				Reject [[T [käske [[D heidän] [Ainf [[D heidän] [v antaa]]]]]] D] due to bad left branch.
				Reject [[[D heidän] [Ainf [[D heidän] [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D]]]]]

15.

		Consume "kirja"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D]]]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]]

16.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, P(lle)
				Avoid Neg/finP as SPEC, P(lle)
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T [käske [[D heidän] [Ainf [[D heidän] [v [antaa [D kirja]]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T{V} [[D heidän] [Ainf{v,V} D{N}]]], P(lle)] because the operation breaks up an existing selectional dependency.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T [käske [[D heidän] [Ainf [[D heidän] [v [antaa [D kirja]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid P as SPEC, P(lle)
				Avoid P as SPEC, P(lle)
				An EPP-head "Ainf" lacks specifier D that it requires.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection against [P]
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D heidän] [Ainf{v,V} D{N}]]; P(lle)]
			3. [[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]]; P(lle)]
			4. [[Ainf{v,V} D{N}]; P(lle)]
			5. [[T{V} [[D heidän] [Ainf{v,V} D{N}]]]; P(lle)]
			6. [[ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]]]]

17.

		Consume "D"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]]]]

18.

		Consume "Merja-"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]]

19.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v{V} [[D kirja] P(lle){D,N}]]]]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] P(lle){D,N}]]]]]]]]]
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] [P(lle) D{N}]]]]]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				= [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of käske
				[D heidän] will undergo A-reconstruction (form of Agree).
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [[D Pekka]:1 [ei [T [(DP):1 [käske [[D heidän]:3 [Ainf [(DP):3 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [[D Pekka] [ei [T [[D Pekka] [käske [[D heidän] [Ainf [[D heidän] [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:1 [ei [T [(DP):1 [käske [[D heidän]:3 [Ainf [(DP):3 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 19/203 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] [käske [[D heidän] [Ainf [[D heidän] [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 [käske [[D heidän]:2 [Ainf [(DP):2 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 [V [DP:2 [ [__:2 [v [V [[D N] PP]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
käske: [V, , Neg/fin]
D: [D, V, , Neg/fin]
heidän: [N, D, V, , Neg/fin]
Ainf: [, V, , Neg/fin]
(D): [D, , V, , Neg/fin]
(N): [N, D, , V, , Neg/fin]
v: [v, , V, , Neg/fin]
antaa: [V, v, , V, , Neg/fin]
D: [D, V, v, , V, , Neg/fin]
kirja: [N, D, V, v, , V, , Neg/fin]
P(lle): [P, V, v, , V, , Neg/fin]
D: [D, P, V, v, , V, , Neg/fin]
Merja-: [N, D, P, V, v, , V, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 13
['Pekka', 'nukkui', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "nukku"

		[[D Pekka] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] T{V}]

6.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] T{V}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla
				Avoid T{V} due to tail-head failure.
		Ranking completed:
			1. [T{V}; malla]
			2. [[[D Pekka] T{V}]; malla]
		Exploring solution number (1) =[T{V} malla]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} malla]]

7.

		Consume "virtaa"

		[[D Pekka] [T{V} malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [T{V} malla{V}]]

8.
	>>>	Trying candidate parse [[D Pekka] [T{V} malla{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T{V} malla{V}]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T [nukku malla{V}]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [T [nukku [malla virtaa]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				<malla virtaa> was made an adjunct.
				= [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]
			Dropping A-/A-bar movement.
			= [<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 [nukku <malla virtaa>]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 8/70 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> [nukku <malla virtaa>]]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 [nukku <malla virtaa>]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V ADVP]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
nukku: [V, T/fin]
malla: [ADV, V, T/fin]
virtaa: [V, ADV, V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 14
['Pekka', 'ei', 'nukkunut', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.

		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "nukku"

		[[D Pekka] [ei T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [ei T{V}]]

7.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [ei T{V}]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla
				Avoid Neg/finP as SPEC, malla
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [ei [T nukku]] as left branch because it constitutes illicit structure.
		Ranking completed:
			1. [T{V}; malla]
			2. [[[D Pekka] [ei T{V}]]; malla]
			3. [[ei T{V}]; malla]
		Exploring solution number (1) =[T{V} malla]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} malla]]]

8.

		Consume "virtaa"

		[[D Pekka] [ei [T{V} malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [ei [T{V} malla{V}]]]

9.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} malla{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{V} malla{V}]]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [ei [T [nukku malla{V}]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [ei [T [nukku [malla virtaa]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<malla virtaa> was made an adjunct.
				= [[D Pekka] [ei [T [nukku <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of nukku
			= [[D Pekka] [ei [T [[D Pekka] [nukku <malla virtaa>]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:1 [ei [T [(DP):1 [nukku <malla virtaa>]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 9/89 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] [nukku <malla virtaa>]]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 [nukku <malla virtaa>]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 [V ADVP]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
nukku: [V, , Neg/fin]
malla: [ADV, V, , Neg/fin]
virtaa: [V, ADV, V, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 15
['Pekka', 'ihailee', 'Merjaa', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Next word contains multiple morphemes ['$T/fin', '$v', 'ihaile-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "v"

		[[D Pekka] T] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D Pekka] T{v}]

6.

		Consume "ihailee"

		[[D Pekka] T{v}] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*ihailee]
			=[[D Pekka] T{v,V}]

7.

		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] T{v,V}]

8.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] T{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [v ihailee]]]] D] due to bad left branch.
		Exploring solution number (1) =[T{v,V} D]
			T{v,V} cannot be opened.
			=[[D Pekka] [T{v,V} D]]

9.

		Consume "Merjaa"

		[[D Pekka] [T{v,V} D]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [T{v,V} D{N}]]

10.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [T{v,V} D{N}]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla
				Avoid T/finP as SPEC, malla
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T [v [ihailee [D Merjaa]]]] as left branch because it constitutes illicit structure.
				Avoid [Merjaa malla] due to complement selection against [ADV]
				Avoid D{N} due to tail-head failure.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; malla]
			2. [[[D Pekka] [T{v,V} D{N}]]; malla]
			3. [[T{v,V} D{N}]; malla]
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[D Pekka] [T{v,V} [[D Merjaa] malla]]]

11.

		Consume "virtaa"

		[[D Pekka] [T{v,V} [[D Merjaa] malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [T{v,V} [[D Merjaa] malla{V}]]]

12.
	>>>	Trying candidate parse [[D Pekka] [T{v,V} [[D Merjaa] malla{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T{v,V} [[D Merjaa] malla{V}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T [v{V} [[D Merjaa] malla{V}]]]]
				Extracted head "ihailee" and reconstructed it = [[D Pekka] [T [v [ihailee [[D Merjaa] malla{V}]]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [T [v [ihailee [[D Merjaa] [malla virtaa]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				<malla virtaa> was made an adjunct.
				= [<D Pekka> [T [<D Pekka> [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]
			Dropping A-/A-bar movement.
			= [<D Pekka> [T [<D Pekka> [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 [v [ihailee [[D Merjaa] <malla virtaa>]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 12/108 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [v [V [[D N] ADVP]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
ihailee: [V, v, T/fin]
D: [D, V, v, T/fin]
Merjaa: [N, D, V, v, T/fin]
malla: [ADV, V, v, T/fin]
virtaa: [V, ADV, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 16
['Pekka', 'ei', 'ihaile', 'Merjaa', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.

		Next word contains multiple morphemes ['$T', '$v', 'ihaile-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "v"

		[[D Pekka] [ei T]] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D Pekka] [ei T{v}]]

7.

		Consume "ihailee"

		[[D Pekka] [ei T{v}]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*ihailee]
			=[[D Pekka] [ei T{v,V}]]

8.

		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{v,V}]]

9.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [ei T{v,V}]] + D
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [v ihailee]]]]] D] due to bad left branch.
				Reject [[ei [T [v ihailee]]] D] due to bad left branch.
		Exploring solution number (1) =[T{v,V} D]
			T{v,V} cannot be opened.
			=[[D Pekka] [ei [T{v,V} D]]]

10.

		Consume "Merjaa"

		[[D Pekka] [ei [T{v,V} D]]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [ei [T{v,V} D{N}]]]

11.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [ei [T{v,V} D{N}]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla
				Avoid Neg/finP as SPEC, malla
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [ei [T [v [ihailee [D Merjaa]]]]] as left branch because it constitutes illicit structure.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T [v [ihailee [D Merjaa]]]] as left branch because it constitutes illicit structure.
				Avoid [Merjaa malla] due to complement selection against [ADV]
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; malla]
			2. [[T{v,V} D{N}]; malla]
			3. [[[D Pekka] [ei [T{v,V} D{N}]]]; malla]
			4. [[ei [T{v,V} D{N}]]; malla]
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[D Pekka] [ei [T{v,V} [[D Merjaa] malla]]]]

12.

		Consume "virtaa"

		[[D Pekka] [ei [T{v,V} [[D Merjaa] malla]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [ei [T{v,V} [[D Merjaa] malla{V}]]]]

13.
	>>>	Trying candidate parse [[D Pekka] [ei [T{v,V} [[D Merjaa] malla{V}]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{v,V} [[D Merjaa] malla{V}]]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [v{V} [[D Merjaa] malla{V}]]]]]
				Extracted head "ihailee" and reconstructed it = [[D Pekka] [ei [T [v [ihailee [[D Merjaa] malla{V}]]]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [ei [T [v [ihailee [[D Merjaa] [malla virtaa]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<malla virtaa> was made an adjunct.
				= [[D Pekka] [ei [T [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of v
			= [[D Pekka] [ei [T [[D Pekka] [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:1 [ei [T [(DP):1 [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 13/126 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 [v [V [[D N] ADVP]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
v: [v, , Neg/fin]
ihailee: [V, v, , Neg/fin]
D: [D, V, v, , Neg/fin]
Merjaa: [N, D, V, v, , Neg/fin]
malla: [ADV, V, v, , Neg/fin]
virtaa: [V, ADV, V, v, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 17
['Pekka', 'antoi', 'kirjan', 'Merjalle', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "v"

		[[D Pekka] T] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D Pekka] T{v}]

6.

		Consume "antaa"

		[[D Pekka] T{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*antaa]
			=[[D Pekka] T{v,V}]

7.

		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] T{v,V}]

8.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] T{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[T{v,V} D]
			T{v,V} cannot be opened.
			=[[D Pekka] [T{v,V} D]]

9.

		Consume "kirja"

		[[D Pekka] [T{v,V} D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [T{v,V} D{N}]]

10.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [T{v,V} D{N}]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle)
				Avoid T/finP as SPEC, P(lle)
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection against [P]
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D Pekka] [T{v,V} D{N}]]; P(lle)]
			3. [[T{v,V} D{N}]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [T{v,V} [[D kirja] P(lle)]]]

11.

		Consume "D"

		[[D Pekka] [T{v,V} [[D kirja] P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [T{v,V} [[D kirja] P(lle){D}]]]

12.

		Consume "Merja-"

		[[D Pekka] [T{v,V} [[D kirja] P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [T{v,V} [[D kirja] P(lle){D,N}]]]

13.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [T{v,V} [[D kirja] P(lle){D,N}]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla
				Avoid T/finP as SPEC, malla
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]] as left branch because it constitutes illicit structure.
				[D kirja]" has no thematic role
				Avoid [[D kirja] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid [[D kirja] P(lle){D,N}] due to tail-head failure.
				Avoid [P(lle){D,N} malla] due to complement selection against [ADV]
				Avoid [Merja- malla] due to complement selection against [ADV]
				Avoid P(lle){D,N} due to tail-head failure.
			P(lle) was opened.
				Prioritize P(lle){D,N} because all solutions were negative.
		Ranking completed:
			1. [P(lle){D,N}; malla]
			2. [[[D Pekka] [T{v,V} [[D kirja] P(lle){D,N}]]]; malla]
			3. [[[D kirja] P(lle){D,N}]; malla]
			4. [[T{v,V} [[D kirja] P(lle){D,N}]]; malla]
		Exploring solution number (1) =[P(lle){D,N} malla]
			P(lle) was opened.
			=[[D Pekka] [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]]

14.

		Consume "virtaa"

		[[D Pekka] [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]

15.
	>>>	Trying candidate parse [[D Pekka] [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T [v{V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [T [v [antaa [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [T [v [antaa [[D kirja] [[P(lle) [D Merja-]] [malla virtaa]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				<malla virtaa> was made an adjunct.
				= [<D Pekka> [T [<D Pekka> [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla virtaa>]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D Pekka>:1 [T [<DP>:1 [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla virtaa>]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [<D Pekka> [T [<D Pekka> [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 15/155 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [v [V [DP [[P [D N]] ADVP]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
malla: [ADV, V, v, T/fin]
virtaa: [V, ADV, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 18
['Pekka', 'ei', 'antanut', 'kirjaa', 'Merjalle', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.

		Next word contains multiple morphemes ['$T', '$v', 'anta-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "v"

		[[D Pekka] [ei T]] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D Pekka] [ei T{v}]]

7.

		Consume "antaa"

		[[D Pekka] [ei T{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*antaa]
			=[[D Pekka] [ei T{v,V}]]

8.

		Next word contains multiple morphemes ['$par', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{v,V}]]

9.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [ei T{v,V}]] + D
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [v antaa]]]]] D] due to bad left branch.
				Reject [[ei [T [v antaa]]] D] due to bad left branch.
		Exploring solution number (1) =[T{v,V} D]
			T{v,V} cannot be opened.
			=[[D Pekka] [ei [T{v,V} D]]]

10.

		Consume "kirja"

		[[D Pekka] [ei [T{v,V} D]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [ei [T{v,V} D{N}]]]

11.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [ei [T{v,V} D{N}]]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, P(lle)
				Avoid Neg/finP as SPEC, P(lle)
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [ei [T [v [antaa [D kirja]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T{v,V} D{N}], P(lle)] because the operation breaks up an existing selectional dependency.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection against [P]
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D Pekka] [ei [T{v,V} D{N}]]]; P(lle)]
			3. [[T{v,V} D{N}]; P(lle)]
			4. [[ei [T{v,V} D{N}]]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [ei [T{v,V} [[D kirja] P(lle)]]]]

12.

		Consume "D"

		[[D Pekka] [ei [T{v,V} [[D kirja] P(lle)]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D}]]]]

13.

		Consume "Merja-"

		[[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D}]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D,N}]]]]

14.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D,N}]]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla
				Avoid Neg/finP as SPEC, malla
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [ei [T [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]] as left branch because it constitutes illicit structure.
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
				Avoid [T [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] as left branch because it constitutes illicit structure.
				[D kirja]" has no thematic role
				Avoid [[D kirja] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid [P(lle){D,N} malla] due to complement selection against [ADV]
				Avoid [Merja- malla] due to complement selection against [ADV]
			P(lle) was opened.
				Prioritize P(lle){D,N} because all solutions were negative.
		Ranking completed:
			1. [P(lle){D,N}; malla]
			2. [[[D kirja] P(lle){D,N}]; malla]
			3. [[T{v,V} [[D kirja] P(lle){D,N}]]; malla]
			4. [[[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D,N}]]]]; malla]
			5. [[ei [T{v,V} [[D kirja] P(lle){D,N}]]]; malla]
		Exploring solution number (1) =[P(lle){D,N} malla]
			P(lle) was opened.
			=[[D Pekka] [ei [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]]]

15.

		Consume "virtaa"

		[[D Pekka] [ei [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [ei [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]

16.
	>>>	Trying candidate parse [[D Pekka] [ei [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [v{V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [ei [T [v [antaa [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [ei [T [v [antaa [[D kirja] [[P(lle) [D Merja-]] [malla virtaa]]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<malla virtaa> was made an adjunct.
				= [[D Pekka] [ei [T [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla virtaa>]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of v
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [[D Pekka]:1 [ei [T [(DP):1 [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla virtaa>]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [[D Pekka] [ei [T [[D Pekka] [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:1 [ei [T [(DP):1 [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 16/177 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 [v [V [DP [[P [D N]] ADVP]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
v: [v, , Neg/fin]
antaa: [V, v, , Neg/fin]
D: [D, V, v, , Neg/fin]
kirja: [N, D, V, v, , Neg/fin]
P(lle): [P, V, v, , Neg/fin]
D: [D, P, V, v, , Neg/fin]
Merja-: [N, D, P, V, v, , Neg/fin]
malla: [ADV, V, v, , Neg/fin]
virtaa: [V, ADV, V, v, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 19
['Pekka', 'käski', 'heidän', 'nukkua', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Next word contains multiple morphemes ['$T/fin', 'käske-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "käske"

		[[D Pekka] T] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] T{V}]

6.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] T{V}]

7.

		Adding inflectional features {'TAIL:PHI:0,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D Pekka] T{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D
				Avoid [T{V} D] due to local agreement failure.
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} D]]

8.

		Consume "heidän"

		[[D Pekka] [T{V} D]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [T{V} D{N}]]

9.

		Next word contains multiple morphemes ['$-ta', 'nukku-']

		Consume "Ainf"

		[[D Pekka] [T{V} D{N}]] + Ainf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [käske <D heidän>]]]] Ainf] due to bad left branch.
				Reject [[T [käske <D heidän>]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [T{V} [[D heidän] Ainf]]]

10.

		Consume "nukku"

		[[D Pekka] [T{V} [[D heidän] Ainf]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*nukku]
			=[[D Pekka] [T{V} [[D heidän] Ainf{V}]]]

11.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [T{V} [[D heidän] Ainf{V}]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla
				Avoid T/finP as SPEC, malla
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T [käske [[D heidän] [Ainf [[D heidän] nukku]]]]] as left branch because it constitutes illicit structure.
				Avoid [[D heidän] Ainf{V}] due to tail-head failure.
				Avoid Ainf{V} due to tail-head failure.
		Ranking completed:
			1. [Ainf{V}; malla]
			2. [[[D heidän] Ainf{V}]; malla]
			3. [[[D Pekka] [T{V} [[D heidän] Ainf{V}]]]; malla]
			4. [[T{V} [[D heidän] Ainf{V}]]; malla]
		Exploring solution number (1) =[Ainf{V} malla]
			Ainf{V} cannot be opened.
			=[[D Pekka] [T{V} [[D heidän] [Ainf{V} malla]]]]

12.

		Consume "virtaa"

		[[D Pekka] [T{V} [[D heidän] [Ainf{V} malla]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [T{V} [[D heidän] [Ainf{V} malla{V}]]]]

13.
	>>>	Trying candidate parse [[D Pekka] [T{V} [[D heidän] [Ainf{V} malla{V}]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T{V} [[D heidän] [Ainf{V} malla{V}]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf{V} malla{V}]]]]]
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf [nukku malla{V}]]]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [T [käske [[D heidän] [Ainf [nukku [malla virtaa]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				<malla virtaa> was made an adjunct.
				= [<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [nukku <malla virtaa>]]]]]]]
			Dropping A-/A-bar movement.
				[D heidän] will undergo A-reconstruction (form of Agree).
			= [<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [nukku <malla virtaa>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 [käske [[D heidän]:2 [Ainf [(DP):2 [nukku <malla virtaa>]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 13/123 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [nukku <malla virtaa>]]]]]]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 [käske [[D heidän]:2 [Ainf [(DP):2 [nukku <malla virtaa>]]]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V [DP:2 [ [__:2 [V ADVP]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
käske: [V, T/fin]
D: [D, V, T/fin]
heidän: [N, D, V, T/fin]
Ainf: [, V, T/fin]
(D): [D, , V, T/fin]
(N): [N, D, , V, T/fin]
nukku: [V, , V, T/fin]
malla: [ADV, V, , V, T/fin]
virtaa: [V, ADV, V, , V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 20
['Pekka', 'ei', 'käskenyt', 'heidän', 'nukkua', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.

		Next word contains multiple morphemes ['$T', 'käske-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "käske"

		[[D Pekka] [ei T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] [ei T{V}]]

7.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{V}]]

8.

		Adding inflectional features {'TAIL:PHI:0,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D Pekka] [ei T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D
				Avoid Neg/finP as SPEC for D
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T käske]] as left branch because it constitutes illicit structure.
				Avoid [T{V} D] due to local agreement failure.
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] [ei T{V}]]; D]
			3. [[ei T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} D]]]

9.

		Consume "heidän"

		[[D Pekka] [ei [T{V} D]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [ei [T{V} D{N}]]]

10.

		Next word contains multiple morphemes ['$-ta', 'nukku-']

		Consume "Ainf"

		[[D Pekka] [ei [T{V} D{N}]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [D heidän]]]]]] Ainf] due to bad left branch.
				Reject [[ei [T [käske [D heidän]]]] Ainf] due to bad left branch.
				Reject [[T [käske [D heidän]]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]

11.

		Consume "nukku"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*nukku]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{V}]]]]

12.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{V}]]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla
				Avoid Neg/finP as SPEC, malla
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T [käske [[D heidän] [Ainf [[D heidän] nukku]]]]]] as left branch because it constitutes illicit structure.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T [käske [[D heidän] [Ainf [[D heidän] nukku]]]]] as left branch because it constitutes illicit structure.
		Ranking completed:
			1. [Ainf{V}; malla]
			2. [[[D heidän] Ainf{V}]; malla]
			3. [[T{V} [[D heidän] Ainf{V}]]; malla]
			4. [[[D Pekka] [ei [T{V} [[D heidän] Ainf{V}]]]]; malla]
			5. [[ei [T{V} [[D heidän] Ainf{V}]]]; malla]
		Exploring solution number (1) =[Ainf{V} malla]
			Ainf{V} cannot be opened.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{V} malla]]]]]

13.

		Consume "virtaa"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{V} malla]]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{V} malla{V}]]]]]

14.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} [[D heidän] [Ainf{V} malla{V}]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{V} [[D heidän] [Ainf{V} malla{V}]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf{V} malla{V}]]]]]]
				Extracted head "nukku" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [nukku malla{V}]]]]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf [nukku [malla virtaa]]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<malla virtaa> was made an adjunct.
				= [[D Pekka] [ei [T [käske [[D heidän] [Ainf [nukku <malla virtaa>]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of käske
				[D heidän] will undergo A-reconstruction (form of Agree).
			= [[D Pekka] [ei [T [[D Pekka] [käske [[D heidän] [Ainf [[D heidän] [nukku <malla virtaa>]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:1 [ei [T [(DP):1 [käske [[D heidän]:3 [Ainf [(DP):3 [nukku <malla virtaa>]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 14/145 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] [käske [[D heidän] [Ainf [[D heidän] [nukku <malla virtaa>]]]]]]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 [käske [[D heidän]:2 [Ainf [(DP):2 [nukku <malla virtaa>]]]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 [V [DP:2 [ [__:2 [V ADVP]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
käske: [V, , Neg/fin]
D: [D, V, , Neg/fin]
heidän: [N, D, V, , Neg/fin]
Ainf: [, V, , Neg/fin]
(D): [D, , V, , Neg/fin]
(N): [N, D, , V, , Neg/fin]
nukku: [V, , V, , Neg/fin]
malla: [ADV, V, , V, , Neg/fin]
virtaa: [V, ADV, V, , V, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 21
['Pekka', 'käski', 'heidän', 'ihailla', 'Merjaa', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Next word contains multiple morphemes ['$T/fin', 'käske-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "käske"

		[[D Pekka] T] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] T{V}]

6.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] T{V}]

7.

		Adding inflectional features {'TAIL:PHI:0,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D Pekka] T{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D
				Avoid [T{V} D] due to local agreement failure.
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} D]]

8.

		Consume "heidän"

		[[D Pekka] [T{V} D]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [T{V} D{N}]]

9.

		Next word contains multiple morphemes ['$-ta', '$v', 'ihaile-']

		Consume "Ainf"

		[[D Pekka] [T{V} D{N}]] + Ainf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [käske <D heidän>]]]] Ainf] due to bad left branch.
				Reject [[T [käske <D heidän>]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [T{V} [[D heidän] Ainf]]]

10.

		Consume "v"

		[[D Pekka] [T{V} [[D heidän] Ainf]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D Pekka] [T{V} [[D heidän] Ainf{v}]]]

11.

		Consume "ihailee"

		[[D Pekka] [T{V} [[D heidän] Ainf{v}]]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*ihailee]
			=[[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]

12.

		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]

13.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [v ihailee]]]]]]]] D] due to bad left branch.
				Reject [[T [käske [[D heidän] [Ainf [[D heidän] [v ihailee]]]]]] D] due to bad left branch.
				Reject [[[D heidän] [Ainf [[D heidän] [v ihailee]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D]]]]

14.

		Consume "Merjaa"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D]]]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]

15.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D{N}]]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla
				Avoid T/finP as SPEC, malla
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T [käske [[D heidän] [Ainf [[D heidän] [v [ihailee [D Merjaa]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[D heidän] [Ainf{v,V} D{N}]] due to tail-head failure.
				An EPP-head "Ainf" lacks specifier D that it requires.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [ihailee [D Merjaa]]]] as left branch because it constitutes illicit structure.
				Avoid [Ainf{v,V} D{N}] due to tail-head failure.
				Avoid [Merjaa malla] due to complement selection against [ADV]
				Avoid D{N} due to tail-head failure.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; malla]
			2. [[[D heidän] [Ainf{v,V} D{N}]]; malla]
			3. [[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]; malla]
			4. [[Ainf{v,V} D{N}]; malla]
			5. [[T{V} [[D heidän] [Ainf{v,V} D{N}]]]; malla]
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla]]]]]

16.

		Consume "virtaa"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla]]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla{V}]]]]]

17.
	>>>	Trying candidate parse [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla{V}]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla{V}]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf{v,V} [[D Merjaa] malla{V}]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf [v{V} [[D Merjaa] malla{V}]]]]]]]
				Extracted head "ihailee" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf [v [ihailee [[D Merjaa] malla{V}]]]]]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [T [käske [[D heidän] [Ainf [v [ihailee [[D Merjaa] [malla virtaa]]]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				<malla virtaa> was made an adjunct.
				= [<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]]]]
			Dropping A-/A-bar movement.
				[D heidän] will undergo A-reconstruction (form of Agree).
			= [<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 [käske [[D heidän]:2 [Ainf [(DP):2 [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 17/163 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]]]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 [käske [[D heidän]:2 [Ainf [(DP):2 [v [ihailee [[D Merjaa] <malla virtaa>]]]]]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V [DP:2 [ [__:2 [v [V [[D N] ADVP]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
käske: [V, T/fin]
D: [D, V, T/fin]
heidän: [N, D, V, T/fin]
Ainf: [, V, T/fin]
(D): [D, , V, T/fin]
(N): [N, D, , V, T/fin]
v: [v, , V, T/fin]
ihailee: [V, v, , V, T/fin]
D: [D, V, v, , V, T/fin]
Merjaa: [N, D, V, v, , V, T/fin]
malla: [ADV, V, v, , V, T/fin]
virtaa: [V, ADV, V, v, , V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 22
['Pekka', 'ei', 'käskenyt', 'heidän', 'ihailla', 'Merjaa', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.

		Next word contains multiple morphemes ['$T', 'käske-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "käske"

		[[D Pekka] [ei T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] [ei T{V}]]

7.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{V}]]

8.

		Adding inflectional features {'TAIL:PHI:0,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D Pekka] [ei T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D
				Avoid Neg/finP as SPEC for D
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T käske]] as left branch because it constitutes illicit structure.
				Avoid [T{V} D] due to local agreement failure.
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] [ei T{V}]]; D]
			3. [[ei T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} D]]]

9.

		Consume "heidän"

		[[D Pekka] [ei [T{V} D]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [ei [T{V} D{N}]]]

10.

		Next word contains multiple morphemes ['$-ta', '$v', 'ihaile-']

		Consume "Ainf"

		[[D Pekka] [ei [T{V} D{N}]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [D heidän]]]]]] Ainf] due to bad left branch.
				Reject [[ei [T [käske [D heidän]]]] Ainf] due to bad left branch.
				Reject [[T [käske [D heidän]]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]

11.

		Consume "v"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]]

12.

		Consume "ihailee"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*ihailee]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]

13.

		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]

14.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]] + D
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [[D heidän] [Ainf [[D heidän] [v ihailee]]]]]]]]] D] due to bad left branch.
				Reject [[ei [T [käske [[D heidän] [Ainf [[D heidän] [v ihailee]]]]]]] D] due to bad left branch.
				Reject [[T [käske [[D heidän] [Ainf [[D heidän] [v ihailee]]]]]] D] due to bad left branch.
				Reject [[[D heidän] [Ainf [[D heidän] [v ihailee]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D]]]]]

15.

		Consume "Merjaa"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D]]]]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]]

16.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla
				Avoid Neg/finP as SPEC, malla
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T [käske [[D heidän] [Ainf [[D heidän] [v [ihailee [D Merjaa]]]]]]]]] as left branch because it constitutes illicit structure.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T [käske [[D heidän] [Ainf [[D heidän] [v [ihailee [D Merjaa]]]]]]]] as left branch because it constitutes illicit structure.
				An EPP-head "Ainf" lacks specifier D that it requires.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [ihailee [D Merjaa]]]] as left branch because it constitutes illicit structure.
				Avoid [Merjaa malla] due to complement selection against [ADV]
		Ranking completed:
			1. [[[D heidän] [Ainf{v,V} D{N}]]; malla]
			2. [D{N}; malla]
			3. [[Ainf{v,V} D{N}]; malla]
			4. [[T{V} [[D heidän] [Ainf{v,V} D{N}]]]; malla]
			5. [[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]]; malla]
			6. [[ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]; malla]
		Exploring solution number (1) =[[[D heidän] [Ainf{v,V} D{N}]] malla]
			Reconstructing head movement for [[D heidän] [Ainf{v,V} D{N}]].
				Extracted head "v{V}" and reconstructed it = [[D heidän] [Ainf [v{V} D{N}]]]
				Extracted head "ihailee" and reconstructed it = [[D heidän] [Ainf [v [ihailee D{N}]]]]
				Extracted head "Merjaa" from D and created [[D heidän] [Ainf [v [ihailee [D Merjaa]]]]]
			Dropping floaters...
				= [[D heidän] [Ainf [v [ihailee [D Merjaa]]]]]
			Dropping A-/A-bar movement.
				[D heidän] will undergo A-reconstruction (form of Agree).
			=[[D Pekka] [ei [T{V} [[[D heidän]:1 [Ainf [(DP):1 [v [ihailee [D Merjaa]]]]]] malla]]]]

17.

		Consume "virtaa"

		[[D Pekka] [ei [T{V} [[[D heidän] [Ainf [[D heidän] [v [ihailee [D Merjaa]]]]]] malla]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [ei [T{V} [[[D heidän]:1 [Ainf [(DP):1 [v [ihailee [D Merjaa]]]]]] malla{V}]]]]

18.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} [[[D heidän] [Ainf [[D heidän] [v [ihailee [D Merjaa]]]]]] malla{V}]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{V} [[[D heidän]:1 [Ainf [(DP):1 [v [ihailee [D Merjaa]]]]]] malla{V}]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [ei [T [käske [[[D heidän]:1 [Ainf [(DP):1 [v [ihailee [D Merjaa]]]]]] malla{V}]]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [ei [T [käske [[[D heidän]:1 [Ainf [(DP):1 [v [ihailee [D Merjaa]]]]]] [malla virtaa]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<malla virtaa> was made an adjunct.
				= [[D Pekka] [ei [T [käske [[[D heidän] [Ainf [[D heidän] [v [ihailee [D Merjaa]]]]]] <malla virtaa>]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of käske
			= [[D Pekka] [ei [T [[D Pekka] [käske [[[D heidän] [Ainf [[D heidän] [v [ihailee [D Merjaa]]]]]] <malla virtaa>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:1 [ei [T [(DP):1 [käske [[[D heidän]:1 [Ainf [(DP):1 [v [ihailee [D Merjaa]]]]]] <malla virtaa>]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 18/187 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] [käske [[[D heidän] [Ainf [[D heidän] [v [ihailee [D Merjaa]]]]]] <malla virtaa>]]]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 [käske [[[D heidän]:1 [Ainf [(DP):1 [v [ihailee [D Merjaa]]]]]] <malla virtaa>]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 [V [[DP:1 [ [__:1 [v [V [D N]]]]]] ADVP]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
käske: [V, , Neg/fin]
D: [D, V, , Neg/fin]
heidän: [N, D, V, , Neg/fin]
Ainf: [, V, , Neg/fin]
(D): [D, , V, , Neg/fin]
(N): [N, D, , V, , Neg/fin]
v: [v, , V, , Neg/fin]
ihailee: [V, v, , V, , Neg/fin]
D: [D, V, v, , V, , Neg/fin]
Merjaa: [N, D, V, v, , V, , Neg/fin]
malla: [ADV, V, , Neg/fin]
virtaa: [V, ADV, V, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 23
['Pekka', 'käski', 'heidän', 'antaa', 'kirjan', 'Merjalle', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Next word contains multiple morphemes ['$T/fin', 'käske-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D Pekka] T]

5.

		Consume "käske"

		[[D Pekka] T] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] T{V}]

6.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] T{V}]

7.

		Adding inflectional features {'TAIL:PHI:0,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D Pekka] T{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D
				Avoid [T{V} D] due to local agreement failure.
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [T{V} D]]

8.

		Consume "heidän"

		[[D Pekka] [T{V} D]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [T{V} D{N}]]

9.

		Next word contains multiple morphemes ['$-ta', '$v', 'anta-']

		Consume "Ainf"

		[[D Pekka] [T{V} D{N}]] + Ainf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [käske <D heidän>]]]] Ainf] due to bad left branch.
				Reject [[T [käske <D heidän>]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [T{V} [[D heidän] Ainf]]]

10.

		Consume "v"

		[[D Pekka] [T{V} [[D heidän] Ainf]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D Pekka] [T{V} [[D heidän] Ainf{v}]]]

11.

		Consume "antaa"

		[[D Pekka] [T{V} [[D heidän] Ainf{v}]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*antaa]
			=[[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]

12.

		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]

13.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [v antaa]]]]]]]] D] due to bad left branch.
				Reject [[T [käske [[D heidän] [Ainf [[D heidän] [v antaa]]]]]] D] due to bad left branch.
				Reject [[[D heidän] [Ainf [[D heidän] [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D]]]]

14.

		Consume "kirja"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D]]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]

15.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D{N}]]]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle)
				Avoid T/finP as SPEC, P(lle)
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T [käske [[D heidän] [Ainf [[D heidän] [v [antaa [D kirja]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid P as SPEC, P(lle)
				Avoid P as SPEC, P(lle)
				An EPP-head "Ainf" lacks specifier D that it requires.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection against [P]
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D heidän] [Ainf{v,V} D{N}]]; P(lle)]
			3. [[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]; P(lle)]
			4. [[Ainf{v,V} D{N}]; P(lle)]
			5. [[T{V} [[D heidän] [Ainf{v,V} D{N}]]]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]]]

16.

		Consume "D"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]]]

17.

		Consume "Merja-"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]

18.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla
				Avoid T/finP as SPEC, malla
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T [käske [[D heidän] [Ainf [[D heidän] [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]] as left branch because it constitutes illicit structure.
				[D kirja]" has no thematic role
				Avoid [[D heidän] [Ainf [[D heidän] [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]] due to tail-head failure.
				An EPP-head "Ainf" lacks specifier D that it requires.
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
				Avoid [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] as left branch because it constitutes illicit structure.
				Avoid [Ainf{v,V} [[D kirja] P(lle){D,N}]] due to tail-head failure.
				[D kirja]" has no thematic role
				Avoid [[D kirja] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid [[D kirja] P(lle){D,N}] due to tail-head failure.
				Avoid [P(lle){D,N} malla] due to complement selection against [ADV]
				Avoid [Merja- malla] due to complement selection against [ADV]
				Avoid P(lle){D,N} due to tail-head failure.
			P(lle) was opened.
				Prioritize P(lle){D,N} because all solutions were negative.
		Ranking completed:
			1. [P(lle){D,N}; malla]
			2. [[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]; malla]
			3. [[[D kirja] P(lle){D,N}]; malla]
			4. [[Ainf{v,V} [[D kirja] P(lle){D,N}]]; malla]
			5. [[[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]; malla]
			6. [[T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]; malla]
		Exploring solution number (1) =[P(lle){D,N} malla]
			P(lle) was opened.
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]]]]

19.

		Consume "virtaa"

		[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]

20.
	>>>	Trying candidate parse [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf [v{V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] [[P(lle) [D Merja-]] [malla virtaa]]]]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				<malla virtaa> was made an adjunct.
				= [<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla virtaa>]]]]]]]]]]
			Dropping A-/A-bar movement.
				[D heidän] will undergo A-reconstruction (form of Agree).
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D Pekka>:1 [T [<DP>:1 [käske [[D heidän]:2 [Ainf [(DP):2 [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla virtaa>]]]]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T [<DP>:1 [käske [[D heidän]:2 [Ainf [(DP):2 [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 20/220 operations) <------------------------------------
		Solution:
		[<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]]]]]
		Grammar: [<D Pekka>:1 [T [<DP>:1 [käske [[D heidän]:2 [Ainf [(DP):2 [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V [DP:2 [ [__:2 [v [V [DP [[P [D N]] ADVP]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
käske: [V, T/fin]
D: [D, V, T/fin]
heidän: [N, D, V, T/fin]
Ainf: [, V, T/fin]
(D): [D, , V, T/fin]
(N): [N, D, , V, T/fin]
v: [v, , V, T/fin]
antaa: [V, v, , V, T/fin]
D: [D, V, v, , V, T/fin]
kirja: [N, D, V, v, , V, T/fin]
P(lle): [P, V, v, , V, T/fin]
D: [D, P, V, v, , V, T/fin]
Merja-: [N, D, P, V, v, , V, T/fin]
malla: [ADV, V, v, , V, T/fin]
virtaa: [V, ADV, V, v, , V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 24
['Pekka', 'ei', 'käskenyt', 'heidän', 'antaa', 'kirjaa', 'Merjalle', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.

		Next word contains multiple morphemes ['$T', 'käske-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "käske"

		[[D Pekka] [ei T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] [ei T{V}]]

7.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{V}]]

8.

		Adding inflectional features {'TAIL:PHI:0,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D Pekka] [ei T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D
				Avoid Neg/finP as SPEC for D
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T käske]] as left branch because it constitutes illicit structure.
				Avoid [T{V} D] due to local agreement failure.
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] [ei T{V}]]; D]
			3. [[ei T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} D]]]

9.

		Consume "heidän"

		[[D Pekka] [ei [T{V} D]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [ei [T{V} D{N}]]]

10.

		Next word contains multiple morphemes ['$-ta', '$v', 'anta-']

		Consume "Ainf"

		[[D Pekka] [ei [T{V} D{N}]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [D heidän]]]]]] Ainf] due to bad left branch.
				Reject [[ei [T [käske [D heidän]]]] Ainf] due to bad left branch.
				Reject [[T [käske [D heidän]]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]

11.

		Consume "v"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]]

12.

		Consume "antaa"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*antaa]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]

13.

		Next word contains multiple morphemes ['$par', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]

14.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]] + D
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [[D heidän] [Ainf [[D heidän] [v antaa]]]]]]]]] D] due to bad left branch.
				Reject [[ei [T [käske [[D heidän] [Ainf [[D heidän] [v antaa]]]]]]] D] due to bad left branch.
				Reject [[T [käske [[D heidän] [Ainf [[D heidän] [v antaa]]]]]] D] due to bad left branch.
				Reject [[[D heidän] [Ainf [[D heidän] [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D]]]]]

15.

		Consume "kirja"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D]]]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]]

16.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, P(lle)
				Avoid Neg/finP as SPEC, P(lle)
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T [käske [[D heidän] [Ainf [[D heidän] [v [antaa [D kirja]]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T{V} [[D heidän] [Ainf{v,V} D{N}]]], P(lle)] because the operation breaks up an existing selectional dependency.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T [käske [[D heidän] [Ainf [[D heidän] [v [antaa [D kirja]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid P as SPEC, P(lle)
				Avoid P as SPEC, P(lle)
				An EPP-head "Ainf" lacks specifier D that it requires.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection against [P]
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D heidän] [Ainf{v,V} D{N}]]; P(lle)]
			3. [[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]]; P(lle)]
			4. [[Ainf{v,V} D{N}]; P(lle)]
			5. [[T{V} [[D heidän] [Ainf{v,V} D{N}]]]; P(lle)]
			6. [[ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]]]]

17.

		Consume "D"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]]]]

18.

		Consume "Merja-"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]]

19.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla
				Avoid Neg/finP as SPEC, malla
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T [käske [[D heidän] [Ainf [[D heidän] [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]] as left branch because it constitutes illicit structure.
				An EPP-head "käske" lacks specifier D that it requires.
				[D kirja]" has no thematic role
				Avoid [T [käske [[D heidän] [Ainf [[D heidän] [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]] as left branch because it constitutes illicit structure.
				[D kirja]" has no thematic role
				Avoid [[D heidän] [Ainf [[D heidän] [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]] as left branch because it constitutes illicit structure.
				An EPP-head "Ainf" lacks specifier D that it requires.
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
				Avoid [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] as left branch because it constitutes illicit structure.
				[D kirja]" has no thematic role
				Avoid [[D kirja] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid [P(lle){D,N} malla] due to complement selection against [ADV]
				Avoid [Merja- malla] due to complement selection against [ADV]
			P(lle) was opened.
				Prioritize P(lle){D,N} because all solutions were negative.
		Ranking completed:
			1. [P(lle){D,N}; malla]
			2. [[[D kirja] P(lle){D,N}]; malla]
			3. [[Ainf{v,V} [[D kirja] P(lle){D,N}]]; malla]
			4. [[[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]; malla]
			5. [[T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]; malla]
			6. [[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]]; malla]
			7. [[ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]; malla]
		Exploring solution number (1) =[P(lle){D,N} malla]
			P(lle) was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]]]]]

20.

		Consume "virtaa"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]]

21.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v{V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]]]]]
				Extracted head "virtaa" from malla and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] [[P(lle) [D Merja-]] [malla virtaa]]]]]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<malla virtaa> was made an adjunct.
				= [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla virtaa>]]]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of käske
				[D heidän] will undergo A-reconstruction (form of Agree).
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [[D Pekka]:1 [ei [T [(DP):1 [käske [[D heidän]:3 [Ainf [(DP):3 [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla virtaa>]]]]]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [[D Pekka] [ei [T [[D Pekka] [käske [[D heidän] [Ainf [[D heidän] [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D Pekka]:1 [ei [T [(DP):1 [käske [[D heidän]:3 [Ainf [(DP):3 [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 21/246 operations) <------------------------------------
		Solution:
		[[D Pekka] [ei [T [[D Pekka] [käske [[D heidän] [Ainf [[D heidän] [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]]]]]]
		Grammar: [[D Pekka]:1 [ei [T [(DP):1 [käske [[D heidän]:2 [Ainf [(DP):2 [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 [V [DP:2 [ [__:2 [v [V [DP [[P [D N]] ADVP]]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
käske: [V, , Neg/fin]
D: [D, V, , Neg/fin]
heidän: [N, D, V, , Neg/fin]
Ainf: [, V, , Neg/fin]
(D): [D, , V, , Neg/fin]
(N): [N, D, , V, , Neg/fin]
v: [v, , V, , Neg/fin]
antaa: [V, v, , V, , Neg/fin]
D: [D, V, v, , V, , Neg/fin]
kirja: [N, D, V, v, , V, , Neg/fin]
P(lle): [P, V, v, , V, , Neg/fin]
D: [D, P, V, v, , V, , Neg/fin]
Merja-: [N, D, P, V, v, , V, , Neg/fin]
malla: [ADV, V, v, , V, , Neg/fin]
virtaa: [V, ADV, V, v, , V, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 25
['kuka', 'nukkui']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'CAT:WH', '-', 'ABAR:WH', 'TAIL:CAT:T/fin,!COMP:*', '-COMP:ADV', '-COMP:C/fin', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

4.

		Consume "kuka"

		D + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=D{N}

5.

		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D kuka] T]

6.

		Consume "nukku"

		[[D kuka] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D kuka] T{V}]

7.
	>>>	Trying candidate parse [[D kuka] T{V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kuka] T{V}].
				Extracted head "nukku" from T and created [[D kuka] [T nukku]]
			Dropping floaters...
				[D kuka] failed to tail [!COMP:*][CAT:T/fin]
				<D kuka> was made an adjunct.
				Floater <D kuka> dropped.
				= [<D kuka> [T [<D kuka> nukku]]]
			Dropping A-/A-bar movement.
				Criterial features {'WH'} copied to ['FIN/T/fin', 'T/fin', 'FIN']
			= [<D kuka> [T [<D kuka> nukku]]]
		Checking LF-interface conditions.
			Trying to transfer [<D kuka>:1 [T [<DP>:1 nukku]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 7/53 operations) <------------------------------------
		Solution:
		[<D kuka> [T [<D kuka> nukku]]]
		Grammar: [<D kuka>:1 [T [<DP>:1 nukku]]]
		Spellout T/finiWHP = [DP:1 [T/finiWH [__:1 V]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iWH/uWH', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iWH/uWH', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
kuka: [N, D]
T: [T/finiWH]
(D): [D, V, T/finiWH]
(N): [N, D, V, T/finiWH]
nukku: [V, T/finiWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 26
['kuka', 'ei', 'nukkunut']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'CAT:WH', '-', 'ABAR:WH', 'TAIL:CAT:T/fin,!COMP:*', '-COMP:ADV', '-COMP:C/fin', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

4.

		Consume "kuka"

		D + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=D{N}

5.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D kuka] ei]

6.

		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D kuka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D kuka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D kuka] [ei T]]

7.

		Consume "nukku"

		[[D kuka] [ei T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D kuka] [ei T{V}]]

8.
	>>>	Trying candidate parse [[D kuka] [ei T{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kuka] [ei T{V}]].
				Extracted head "nukku" from T and created [[D kuka] [ei [T nukku]]]
			Dropping floaters...
				[D kuka] failed to tail [!COMP:*][CAT:T/fin]
				= [[D kuka] [ei [T nukku]]]
			Dropping A-/A-bar movement.
				Moving "D kuka " into memory buffer from SPEC of "ei".
				Criterial features {'WH'} copied to ['Neg/fin', 'NEG', 'FIN', 'FIN/NEG/Neg/fin']
				Memory buffer: [[D N]]
				Dropping constituent [D kuka]:1 from memory buffer into Spec of nukku
			= [[D kuka] [ei [T [[D kuka] nukku]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D kuka]:1 [ei [T [(DP):1 nukku]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 8/67 operations) <------------------------------------
		Solution:
		[[D kuka] [ei [T [[D kuka] nukku]]]]
		Grammar: [[D kuka]:1 [ei [T [(DP):1 nukku]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 V]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
ei:['!COMP:*', '!COMP:T', '!SPEC:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/uWH', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:uWH', 'LANG:FI', 'LF:not', 'PF:ei', 'SPEC:*']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
ei:['!COMP:*', '!COMP:T', '!SPEC:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/uWH', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:uWH', 'LANG:FI', 'LF:not', 'PF:ei', 'SPEC:*']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
kuka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, V, , Neg/fin]
(N): [N, D, V, , Neg/fin]
nukku: [V, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 27
['ketä', 'Pekka', 'ihailee']


			=None

1.

		Next word contains multiple morphemes ['$par', '$wh', '$D', 'ketä-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'CAT:WH', '-', 'ABAR:WH', '-COMP:ADV', '-COMP:C/fin', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
			=D

4.

		Consume "ketä"

		D + ketä
			Filtering out impossible merge sites...
			Sink "ketä" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*ketä]
			=D{N}

5.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D ketä] D]

7.

		Consume "Pekka"

		[[D ketä] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D ketä] D{N}]

8.

		Next word contains multiple morphemes ['$T/fin', '$v', 'ihaile-']

		Consume "T"

		[[D ketä] D{N}] + T
			Filtering out impossible merge sites...
				Reject [[[D ketä] <D Pekka>] T] due to bad left branch.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D ketä] [[D Pekka] T]]

9.

		Consume "v"

		[[D ketä] [[D Pekka] T]] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D ketä] [[D Pekka] T{v}]]

10.

		Consume "ihailee"

		[[D ketä] [[D Pekka] T{v}]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*ihailee]
			=[[D ketä] [[D Pekka] T{v,V}]]

11.
	>>>	Trying candidate parse [[D ketä] [[D Pekka] T{v,V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D ketä] [[D Pekka] T{v,V}]].
				Extracted head "v{V}" from T and created [[D ketä] [[D Pekka] [T v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "ihailee" from v and created [[D ketä] [[D Pekka] [T [v ihailee]]]]
			Dropping floaters...
				[D ketä] failed to tail [!COMP:*][-PHI]
				<D ketä> was made an adjunct.
				Floater <D ketä> dropped.
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				= [<D ketä> [<D Pekka> [T [<D Pekka> [v [<D ketä> ihailee]]]]]]
			Dropping A-/A-bar movement.
				New {'WH'} head was spawned due to the occurrence of multiple specifiers at T
			= [<D ketä> [uWH [<D Pekka> [T [<D Pekka> [v [<D ketä> ihailee]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D ketä>:1 [uWH [<D Pekka>:2 [T [<DP>:2 [v [<DP>:1 ihailee]]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 11/87 operations) <------------------------------------
		Solution:
		[<D ketä> [uWH [<D Pekka> [T [<D Pekka> [v [<D ketä> ihailee]]]]]]]
		Grammar: [<D ketä>:1 [uWH [<D Pekka>:2 [T [<DP>:2 [v [<DP>:1 ihailee]]]]]]]
		Spellout iWHP = [DP:1 [iWH [DP:2 [T/fin [__:2 [v [__:1 V]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
ketä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:ketä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
ketä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:ketä', 'SPEC:A', 'null']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
ketä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:ketä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
ketä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:ketä', 'SPEC:A', 'null']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']

D: [D]
ketä: [N, D]
uWH: [iWH]
D: [D, iWH]
Pekka: [N, D, iWH]
T: [T/fin, iWH]
(D): [D, T/fin, iWH]
(N): [N, D, T/fin, iWH]
v: [v, T/fin, iWH]
(D): [D, V, v, T/fin, iWH]
(N): [N, D, V, v, T/fin, iWH]
ihailee: [V, v, T/fin, iWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 28
['ketä', 'Pekka', 'ei', 'ihaile']


			=None

1.

		Next word contains multiple morphemes ['$par', '$wh', '$D', 'ketä-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'CAT:WH', '-', 'ABAR:WH', '-COMP:ADV', '-COMP:C/fin', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
			=D

4.

		Consume "ketä"

		D + ketä
			Filtering out impossible merge sites...
			Sink "ketä" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*ketä]
			=D{N}

5.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D ketä] D]

7.

		Consume "Pekka"

		[[D ketä] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D ketä] D{N}]

8.

		Consume "ei"

		[[D ketä] D{N}] + ei
			Filtering out impossible merge sites...
				Reject [[[D ketä] <D Pekka>] ei] due to bad left branch.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D ketä] [[D Pekka] ei]]

9.

		Next word contains multiple morphemes ['$T', '$v', 'ihaile-']

		Consume "T"

		[[D ketä] [[D Pekka] ei]] + T
			Filtering out impossible merge sites...
				Reject [[[D ketä] [[D Pekka] ei]] T] due to bad left branch.
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D ketä] [[D Pekka] [ei T]]]

10.

		Consume "v"

		[[D ketä] [[D Pekka] [ei T]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D ketä] [[D Pekka] [ei T{v}]]]

11.

		Consume "ihailee"

		[[D ketä] [[D Pekka] [ei T{v}]]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*ihailee]
			=[[D ketä] [[D Pekka] [ei T{v,V}]]]

12.
	>>>	Trying candidate parse [[D ketä] [[D Pekka] [ei T{v,V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D ketä] [[D Pekka] [ei T{v,V}]]].
				Extracted head "v{V}" from T and created [[D ketä] [[D Pekka] [ei [T v{V}]]]]
			Reconstructing head movement for v{V}.
				Extracted head "ihailee" from v and created [[D ketä] [[D Pekka] [ei [T [v ihailee]]]]]
			Dropping floaters...
				[D ketä] failed to tail [!COMP:*][-PHI]
				<D ketä> was made an adjunct.
				Floater <D ketä> dropped.
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				= [<D ketä> [[D Pekka] [ei [T [v [<D ketä> ihailee]]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				New {'WH'} head was spawned due to the occurrence of multiple specifiers at ei
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of v
			= [<D ketä> [uWH [[D Pekka] [ei [T [[D Pekka] [v [<D ketä> ihailee]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D ketä>:1 [uWH [[D Pekka]:2 [ei [T [(DP):2 [v [<DP>:1 ihailee]]]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 12/103 operations) <------------------------------------
		Solution:
		[<D ketä> [uWH [[D Pekka] [ei [T [[D Pekka] [v [<D ketä> ihailee]]]]]]]]
		Grammar: [<D ketä>:1 [uWH [[D Pekka]:2 [ei [T [(DP):2 [v [<DP>:1 ihailee]]]]]]]]
		Spellout iWHP = [DP:1 [iWH [DP:2 [Neg/fin [ [__:2 [v [__:1 V]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
ketä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:ketä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
ketä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:ketä', 'SPEC:A', 'null']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
ketä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:ketä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
ketä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:ketä', 'SPEC:A', 'null']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']

D: [D]
ketä: [N, D]
uWH: [iWH]
D: [D, iWH]
Pekka: [N, D, iWH]
ei: [Neg/fin, iWH]
T: [, Neg/fin, iWH]
(D): [D, , Neg/fin, iWH]
(N): [N, D, , Neg/fin, iWH]
v: [v, , Neg/fin, iWH]
(D): [D, V, v, , Neg/fin, iWH]
(N): [N, D, V, v, , Neg/fin, iWH]
ihailee: [V, v, , Neg/fin, iWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 29
['mitä', 'Pekka', 'antoi', 'Merjalle']


			=None

1.

		Next word contains multiple morphemes ['$par', '$wh', '$D', 'mitä-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'CAT:WH', '-', 'ABAR:WH', '-COMP:ADV', '-COMP:C/fin', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
			=D

4.

		Consume "mitä"

		D + mitä
			Filtering out impossible merge sites...
			Sink "mitä" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mitä]
			=D{N}

5.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D mitä] D]

7.

		Consume "Pekka"

		[[D mitä] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D mitä] D{N}]

8.

		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T"

		[[D mitä] D{N}] + T
			Filtering out impossible merge sites...
				Reject [[[D mitä] <D Pekka>] T] due to bad left branch.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D mitä] [[D Pekka] T]]

9.

		Consume "v"

		[[D mitä] [[D Pekka] T]] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D mitä] [[D Pekka] T{v}]]

10.

		Consume "antaa"

		[[D mitä] [[D Pekka] T{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*antaa]
			=[[D mitä] [[D Pekka] T{v,V}]]

11.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D mitä] [[D Pekka] T{v,V}]] + P(lle)
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [v antaa]]]] P(lle)] due to bad left branch.
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle)
				Prioritize [antaa P(lle)] due to complement selection for [P]
		Ranking completed:
			1. [T{v,V}; P(lle)]
			2. [[[D mitä] [[D Pekka] T{v,V}]]; P(lle)]
		Exploring solution number (1) =[T{v,V} P(lle)]
			T{v,V} cannot be opened.
			=[[D mitä] [[D Pekka] [T{v,V} P(lle)]]]

12.

		Consume "D"

		[[D mitä] [[D Pekka] [T{v,V} P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D mitä] [[D Pekka] [T{v,V} P(lle){D}]]]

13.

		Consume "Merja-"

		[[D mitä] [[D Pekka] [T{v,V} P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D mitä] [[D Pekka] [T{v,V} P(lle){D,N}]]]

14.
	>>>	Trying candidate parse [[D mitä] [[D Pekka] [T{v,V} P(lle){D,N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D mitä] [[D Pekka] [T{v,V} P(lle){D,N}]]].
				Extracted head "v{V}" and reconstructed it = [[D mitä] [[D Pekka] [T [v{V} P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [[D mitä] [[D Pekka] [T [v [antaa P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [[D mitä] [[D Pekka] [T [v [antaa [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D mitä] [[D Pekka] [T [v [antaa [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[D mitä] failed to tail [!COMP:*][-PHI]
				<D mitä> was made an adjunct.
				Floater <D mitä> dropped.
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				= [<D mitä> [<D Pekka> [T [<D Pekka> [v [<D mitä> [antaa [P(lle) [D Merja-]]]]]]]]]
			Dropping A-/A-bar movement.
				New {'WH'} head was spawned due to the occurrence of multiple specifiers at T
			= [<D mitä> [uWH [<D Pekka> [T [<D Pekka> [v [<D mitä> [antaa [P(lle) [D Merja-]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D mitä>:1 [uWH [<D Pekka>:2 [T [<DP>:2 [v [<DP>:1 [antaa [P(lle) [D Merja-]]]]]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 14/118 operations) <------------------------------------
		Solution:
		[<D mitä> [uWH [<D Pekka> [T [<D Pekka> [v [<D mitä> [antaa [P(lle) [D Merja-]]]]]]]]]]
		Grammar: [<D mitä>:1 [uWH [<D Pekka>:2 [T [<DP>:2 [v [<DP>:1 [antaa [P(lle) [D Merja-]]]]]]]]]]
		Spellout iWHP = [DP:1 [iWH [DP:2 [T/fin [__:2 [v [__:1 [V [P [D N]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
mitä: [N, D]
uWH: [iWH]
D: [D, iWH]
Pekka: [N, D, iWH]
T: [T/fin, iWH]
(D): [D, T/fin, iWH]
(N): [N, D, T/fin, iWH]
v: [v, T/fin, iWH]
(D): [D, v, T/fin, iWH]
(N): [N, D, v, T/fin, iWH]
antaa: [V, v, T/fin, iWH]
P(lle): [P, V, v, T/fin, iWH]
D: [D, P, V, v, T/fin, iWH]
Merja-: [N, D, P, V, v, T/fin, iWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 30
['mitä', 'Pekka', 'ei', 'antanut', 'Merjalle']


			=None

1.

		Next word contains multiple morphemes ['$par', '$wh', '$D', 'mitä-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'CAT:WH', '-', 'ABAR:WH', '-COMP:ADV', '-COMP:C/fin', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
			=D

4.

		Consume "mitä"

		D + mitä
			Filtering out impossible merge sites...
			Sink "mitä" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mitä]
			=D{N}

5.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D mitä] D]

7.

		Consume "Pekka"

		[[D mitä] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D mitä] D{N}]

8.

		Consume "ei"

		[[D mitä] D{N}] + ei
			Filtering out impossible merge sites...
				Reject [[[D mitä] <D Pekka>] ei] due to bad left branch.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D mitä] [[D Pekka] ei]]

9.

		Next word contains multiple morphemes ['$T', '$v', 'anta-']

		Consume "T"

		[[D mitä] [[D Pekka] ei]] + T
			Filtering out impossible merge sites...
				Reject [[[D mitä] [[D Pekka] ei]] T] due to bad left branch.
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D mitä] [[D Pekka] [ei T]]]

10.

		Consume "v"

		[[D mitä] [[D Pekka] [ei T]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D mitä] [[D Pekka] [ei T{v}]]]

11.

		Consume "antaa"

		[[D mitä] [[D Pekka] [ei T{v}]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*antaa]
			=[[D mitä] [[D Pekka] [ei T{v,V}]]]

12.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D mitä] [[D Pekka] [ei T{v,V}]]] + P(lle)
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [v antaa]]]]] P(lle)] due to bad left branch.
				Reject [[ei [T [v antaa]]] P(lle)] due to bad left branch.
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, P(lle)
				Prioritize [antaa P(lle)] due to complement selection for [P]
		Ranking completed:
			1. [T{v,V}; P(lle)]
			2. [[[D mitä] [[D Pekka] [ei T{v,V}]]]; P(lle)]
		Exploring solution number (1) =[T{v,V} P(lle)]
			T{v,V} cannot be opened.
			=[[D mitä] [[D Pekka] [ei [T{v,V} P(lle)]]]]

13.

		Consume "D"

		[[D mitä] [[D Pekka] [ei [T{v,V} P(lle)]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D mitä] [[D Pekka] [ei [T{v,V} P(lle){D}]]]]

14.

		Consume "Merja-"

		[[D mitä] [[D Pekka] [ei [T{v,V} P(lle){D}]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D mitä] [[D Pekka] [ei [T{v,V} P(lle){D,N}]]]]

15.
	>>>	Trying candidate parse [[D mitä] [[D Pekka] [ei [T{v,V} P(lle){D,N}]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D mitä] [[D Pekka] [ei [T{v,V} P(lle){D,N}]]]].
				Extracted head "v{V}" and reconstructed it = [[D mitä] [[D Pekka] [ei [T [v{V} P(lle){D,N}]]]]]
				Extracted head "antaa" and reconstructed it = [[D mitä] [[D Pekka] [ei [T [v [antaa P(lle){D,N}]]]]]]
				Extracted head "D{N}" from P(lle) and created [[D mitä] [[D Pekka] [ei [T [v [antaa [P(lle) D{N}]]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D mitä] [[D Pekka] [ei [T [v [antaa [P(lle) [D Merja-]]]]]]]]
			Dropping floaters...
				[D mitä] failed to tail [!COMP:*][-PHI]
				<D mitä> was made an adjunct.
				Floater <D mitä> dropped.
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				= [<D mitä> [[D Pekka] [ei [T [v [<D mitä> [antaa [P(lle) [D Merja-]]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				New {'WH'} head was spawned due to the occurrence of multiple specifiers at ei
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of v
			= [<D mitä> [uWH [[D Pekka] [ei [T [[D Pekka] [v [<D mitä> [antaa [P(lle) [D Merja-]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D mitä>:1 [uWH [[D Pekka]:2 [ei [T [(DP):2 [v [<DP>:1 [antaa [P(lle) [D Merja-]]]]]]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 15/135 operations) <------------------------------------
		Solution:
		[<D mitä> [uWH [[D Pekka] [ei [T [[D Pekka] [v [<D mitä> [antaa [P(lle) [D Merja-]]]]]]]]]]]
		Grammar: [<D mitä>:1 [uWH [[D Pekka]:2 [ei [T [(DP):2 [v [<DP>:1 [antaa [P(lle) [D Merja-]]]]]]]]]]]
		Spellout iWHP = [DP:1 [iWH [DP:2 [Neg/fin [ [__:2 [v [__:1 [V [P [D N]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
mitä: [N, D]
uWH: [iWH]
D: [D, iWH]
Pekka: [N, D, iWH]
ei: [Neg/fin, iWH]
T: [, Neg/fin, iWH]
(D): [D, , Neg/fin, iWH]
(N): [N, D, , Neg/fin, iWH]
v: [v, , Neg/fin, iWH]
(D): [D, v, , Neg/fin, iWH]
(N): [N, D, v, , Neg/fin, iWH]
antaa: [V, v, , Neg/fin, iWH]
P(lle): [P, V, v, , Neg/fin, iWH]
D: [D, P, V, v, , Neg/fin, iWH]
Merja-: [N, D, P, V, v, , Neg/fin, iWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 31
['kenen', 'Pekka', 'käski', 'nukkua']


			=None

1.

		Next word contains multiple morphemes ['$gen', '$wh', '$D', 'kenen-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'CAT:WH', 'TAIL:PHI:0,!COMP:*', '-', 'ABAR:WH', '-COMP:ADV', '-COMP:C/fin', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
			=D

4.

		Consume "kenen"

		D + kenen
			Filtering out impossible merge sites...
			Sink "kenen" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kenen]
			=D{N}

5.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D kenen] D]

7.

		Consume "Pekka"

		[[D kenen] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D kenen] D{N}]

8.

		Next word contains multiple morphemes ['$T/fin', 'käske-']

		Consume "T"

		[[D kenen] D{N}] + T
			Filtering out impossible merge sites...
				Reject [[[D kenen] <D Pekka>] T] due to bad left branch.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D kenen] [[D Pekka] T]]

9.

		Consume "käske"

		[[D kenen] [[D Pekka] T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D kenen] [[D Pekka] T{V}]]

10.

		Next word contains multiple morphemes ['$-ta', 'nukku-']

		Consume "Ainf"

		[[D kenen] [[D Pekka] T{V}]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D kenen] [uWH [<D Pekka> [T [<D Pekka> käske]]]]] Ainf] due to bad left branch.
			Ranking remaining sites...
				Avoid T/finP as SPEC, Ainf
				Prioritize [käske Ainf] due to complement selection for [A/inf]
		Ranking completed:
			1. [T{V}; Ainf]
			2. [[[D Pekka] T{V}]; Ainf]
		Exploring solution number (1) =[T{V} Ainf]
			T{V} cannot be opened.
			=[[D kenen] [[D Pekka] [T{V} Ainf]]]

11.

		Consume "nukku"

		[[D kenen] [[D Pekka] [T{V} Ainf]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*nukku]
			=[[D kenen] [[D Pekka] [T{V} Ainf{V}]]]

12.
	>>>	Trying candidate parse [[D kenen] [[D Pekka] [T{V} Ainf{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kenen] [[D Pekka] [T{V} Ainf{V}]]].
				Extracted head "käske" and reconstructed it = [[D kenen] [[D Pekka] [T [käske Ainf{V}]]]]
				Extracted head "nukku" from Ainf and created [[D kenen] [[D Pekka] [T [käske [Ainf nukku]]]]]
			Dropping floaters...
				[D kenen] failed to tail [!COMP:*][PHI:0]
				<D kenen> was made an adjunct.
				Floater <D kenen> dropped.
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				= [<D kenen> [<D Pekka> [T [<D Pekka> [käske [<D kenen> [Ainf nukku]]]]]]]
			Dropping A-/A-bar movement.
				New {'WH'} head was spawned due to the occurrence of multiple specifiers at T
				<DP>:1 will undergo A-reconstruction (form of Agree).
				Criterial features {'WH'} copied to ['INF', 'A/inf/INF', 'A/inf']
			= [<D kenen> [uWH [<D Pekka> [T [<D Pekka> [käske [<D kenen> [Ainf [<D kenen> nukku]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D kenen>:1 [uWH [<D Pekka>:2 [T [<DP>:2 [käske [<DP>:1 [Ainf [<DP>:1 nukku]]]]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 12/103 operations) <------------------------------------
		Solution:
		[<D kenen> [uWH [<D Pekka> [T [<D Pekka> [käske [<D kenen> [Ainf [<D kenen> nukku]]]]]]]]]
		Grammar: [<D kenen>:1 [uWH [<D Pekka>:2 [T [<DP>:2 [käske [<DP>:1 [Ainf [<DP>:1 nukku]]]]]]]]]
		Spellout iWHP = [DP:1 [iWH [DP:2 [T/fin [__:2 [V [__:1 [ [__:1 V]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A', 'null']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '!SPEC:uWH', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/A/inf/INF/INF/uWH', 'CAT:A/inf/INF', 'CAT:INF', 'CAT:uWH', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A', 'null']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '!SPEC:uWH', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/A/inf/INF/INF/uWH', 'CAT:A/inf/INF', 'CAT:INF', 'CAT:uWH', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
kenen: [N, D]
uWH: [iWH]
D: [D, iWH]
Pekka: [N, D, iWH]
T: [T/fin, iWH]
(D): [D, T/fin, iWH]
(N): [N, D, T/fin, iWH]
käske: [V, T/fin, iWH]
(D): [D, V, T/fin, iWH]
(N): [N, D, V, T/fin, iWH]
Ainf: [, V, T/fin, iWH]
(D): [D, V, , V, T/fin, iWH]
(N): [N, D, V, , V, T/fin, iWH]
nukku: [V, , V, T/fin, iWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 32
['kenen', 'Pekka', 'ei', 'käskenyt', 'nukkua']


			=None

1.

		Next word contains multiple morphemes ['$gen', '$wh', '$D', 'kenen-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'CAT:WH', 'TAIL:PHI:0,!COMP:*', '-', 'ABAR:WH', '-COMP:ADV', '-COMP:C/fin', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
			=D

4.

		Consume "kenen"

		D + kenen
			Filtering out impossible merge sites...
			Sink "kenen" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kenen]
			=D{N}

5.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D kenen] D]

7.

		Consume "Pekka"

		[[D kenen] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D kenen] D{N}]

8.

		Consume "ei"

		[[D kenen] D{N}] + ei
			Filtering out impossible merge sites...
				Reject [[[D kenen] <D Pekka>] ei] due to bad left branch.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D kenen] [[D Pekka] ei]]

9.

		Next word contains multiple morphemes ['$T', 'käske-']

		Consume "T"

		[[D kenen] [[D Pekka] ei]] + T
			Filtering out impossible merge sites...
				Reject [[[D kenen] [[D Pekka] ei]] T] due to bad left branch.
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D kenen] [[D Pekka] [ei T]]]

10.

		Consume "käske"

		[[D kenen] [[D Pekka] [ei T]]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D kenen] [[D Pekka] [ei T{V}]]]

11.

		Next word contains multiple morphemes ['$-ta', 'nukku-']

		Consume "Ainf"

		[[D kenen] [[D Pekka] [ei T{V}]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D kenen] [uWH [[D Pekka] [ei [T [[D Pekka] käske]]]]]] Ainf] due to bad left branch.
				Reject [[ei [T käske]] Ainf] due to bad left branch.
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, Ainf
				Prioritize [käske Ainf] due to complement selection for [A/inf]
		Ranking completed:
			1. [T{V}; Ainf]
			2. [[[D Pekka] [ei T{V}]]; Ainf]
		Exploring solution number (1) =[T{V} Ainf]
			T{V} cannot be opened.
			=[[D kenen] [[D Pekka] [ei [T{V} Ainf]]]]

12.

		Consume "nukku"

		[[D kenen] [[D Pekka] [ei [T{V} Ainf]]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*nukku]
			=[[D kenen] [[D Pekka] [ei [T{V} Ainf{V}]]]]

13.
	>>>	Trying candidate parse [[D kenen] [[D Pekka] [ei [T{V} Ainf{V}]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kenen] [[D Pekka] [ei [T{V} Ainf{V}]]]].
				Extracted head "käske" and reconstructed it = [[D kenen] [[D Pekka] [ei [T [käske Ainf{V}]]]]]
				Extracted head "nukku" from Ainf and created [[D kenen] [[D Pekka] [ei [T [käske [Ainf nukku]]]]]]
			Dropping floaters...
				[D kenen] failed to tail [!COMP:*][PHI:0]
				<D kenen> was made an adjunct.
				Floater <D kenen> dropped.
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				= [<D kenen> [[D Pekka] [ei [T [käske [<D kenen> [Ainf nukku]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				New {'WH'} head was spawned due to the occurrence of multiple specifiers at ei
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of käske
				<DP>:1 will undergo A-reconstruction (form of Agree).
				Criterial features {'WH'} copied to ['INF', 'A/inf/INF', 'A/inf']
			= [<D kenen> [uWH [[D Pekka] [ei [T [[D Pekka] [käske [<D kenen> [Ainf [<D kenen> nukku]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D kenen>:1 [uWH [[D Pekka]:2 [ei [T [(DP):2 [käske [<DP>:1 [Ainf [<DP>:1 nukku]]]]]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 13/120 operations) <------------------------------------
		Solution:
		[<D kenen> [uWH [[D Pekka] [ei [T [[D Pekka] [käske [<D kenen> [Ainf [<D kenen> nukku]]]]]]]]]]
		Grammar: [<D kenen>:1 [uWH [[D Pekka]:2 [ei [T [(DP):2 [käske [<DP>:1 [Ainf [<DP>:1 nukku]]]]]]]]]]
		Spellout iWHP = [DP:1 [iWH [DP:2 [Neg/fin [ [__:2 [V [__:1 [ [__:1 V]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A', 'null']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '!SPEC:uWH', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/A/inf/INF/INF/uWH', 'CAT:A/inf/INF', 'CAT:INF', 'CAT:uWH', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A', 'null']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '!SPEC:uWH', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/A/inf/INF/INF/uWH', 'CAT:A/inf/INF', 'CAT:INF', 'CAT:uWH', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
kenen: [N, D]
uWH: [iWH]
D: [D, iWH]
Pekka: [N, D, iWH]
ei: [Neg/fin, iWH]
T: [, Neg/fin, iWH]
(D): [D, , Neg/fin, iWH]
(N): [N, D, , Neg/fin, iWH]
käske: [V, , Neg/fin, iWH]
(D): [D, V, , Neg/fin, iWH]
(N): [N, D, V, , Neg/fin, iWH]
Ainf: [, V, , Neg/fin, iWH]
(D): [D, V, , V, , Neg/fin, iWH]
(N): [N, D, V, , V, , Neg/fin, iWH]
nukku: [V, , V, , Neg/fin, iWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 33
['mitä', 'Pekka', 'käski', 'heidän', 'ihailla']


			=None

1.

		Next word contains multiple morphemes ['$par', '$wh', '$D', 'mitä-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'CAT:WH', '-', 'ABAR:WH', '-COMP:ADV', '-COMP:C/fin', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
			=D

4.

		Consume "mitä"

		D + mitä
			Filtering out impossible merge sites...
			Sink "mitä" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mitä]
			=D{N}

5.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D mitä] D]

7.

		Consume "Pekka"

		[[D mitä] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D mitä] D{N}]

8.

		Next word contains multiple morphemes ['$T/fin', 'käske-']

		Consume "T"

		[[D mitä] D{N}] + T
			Filtering out impossible merge sites...
				Reject [[[D mitä] <D Pekka>] T] due to bad left branch.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D mitä] [[D Pekka] T]]

9.

		Consume "käske"

		[[D mitä] [[D Pekka] T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D mitä] [[D Pekka] T{V}]]

10.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D mitä] [[D Pekka] T{V}]]

11.

		Adding inflectional features {'TAIL:PHI:0,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D mitä] [[D Pekka] T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D
				[D mitä]" has no thematic role
				Avoid [[D mitä] [uWH [<D Pekka> [T [<D Pekka> käske]]]]] as left branch because it constitutes illicit structure.
				Avoid T/finP as SPEC for D
				Avoid [T{V} D] due to local agreement failure.
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] T{V}]; D]
			3. [[[D mitä] [[D Pekka] T{V}]]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D mitä] [[D Pekka] [T{V} D]]]

12.

		Consume "heidän"

		[[D mitä] [[D Pekka] [T{V} D]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D mitä] [[D Pekka] [T{V} D{N}]]]

13.

		Next word contains multiple morphemes ['$-ta', '$v', 'ihaile-']

		Consume "Ainf"

		[[D mitä] [[D Pekka] [T{V} D{N}]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D mitä] [uWH [<D Pekka> [T [<D Pekka> [käske <D heidän>]]]]]] Ainf] due to bad left branch.
				Reject [[<D Pekka> [T [<D Pekka> [käske <D heidän>]]]] Ainf] due to bad left branch.
				Reject [[T [käske <D heidän>]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf]]]]

14.

		Consume "v"

		[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf{v}]]]]

15.

		Consume "ihailee"

		[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf{v}]]]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*ihailee]
			=[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]]

16.
	>>>	Trying candidate parse [[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]].
				Extracted head "käske" and reconstructed it = [[D mitä] [[D Pekka] [T [käske [[D heidän] Ainf{v,V}]]]]]
				Extracted head "v{V}" from Ainf and created [[D mitä] [[D Pekka] [T [käske [[D heidän] [Ainf v{V}]]]]]]
			Reconstructing head movement for v{V}.
				Extracted head "ihailee" from v and created [[D mitä] [[D Pekka] [T [käske [[D heidän] [Ainf [v ihailee]]]]]]]
			Dropping floaters...
				[D mitä] failed to tail [!COMP:*][-PHI]
				<D mitä> was made an adjunct.
				Floater <D mitä> dropped.
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				= [<D mitä> [<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [v [<D mitä> ihailee]]]]]]]]]
			Dropping A-/A-bar movement.
				New {'WH'} head was spawned due to the occurrence of multiple specifiers at T
				[D heidän] will undergo A-reconstruction (form of Agree).
			= [<D mitä> [uWH [<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [v [<D mitä> ihailee]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D mitä>:1 [uWH [<D Pekka>:2 [T [<DP>:2 [käske [[D heidän]:3 [Ainf [(DP):3 [v [<DP>:1 ihailee]]]]]]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 16/138 operations) <------------------------------------
		Solution:
		[<D mitä> [uWH [<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [v [<D mitä> ihailee]]]]]]]]]]]
		Grammar: [<D mitä>:1 [uWH [<D Pekka>:2 [T [<DP>:2 [käske [[D heidän]:3 [Ainf [(DP):3 [v [<DP>:1 ihailee]]]]]]]]]]]
		Spellout iWHP = [DP:1 [iWH [DP:2 [T/fin [__:2 [V [DP:3 [ [__:3 [v [__:1 V]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']

D: [D]
mitä: [N, D]
uWH: [iWH]
D: [D, iWH]
Pekka: [N, D, iWH]
T: [T/fin, iWH]
(D): [D, T/fin, iWH]
(N): [N, D, T/fin, iWH]
käske: [V, T/fin, iWH]
D: [D, V, T/fin, iWH]
heidän: [N, D, V, T/fin, iWH]
Ainf: [, V, T/fin, iWH]
(D): [D, , V, T/fin, iWH]
(N): [N, D, , V, T/fin, iWH]
v: [v, , V, T/fin, iWH]
(D): [D, V, v, , V, T/fin, iWH]
(N): [N, D, V, v, , V, T/fin, iWH]
ihailee: [V, v, , V, T/fin, iWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 34
['mitä', 'Pekka', 'ei', 'käskenyt', 'heidän', 'ihailla']


			=None

1.

		Next word contains multiple morphemes ['$par', '$wh', '$D', 'mitä-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'CAT:WH', '-', 'ABAR:WH', '-COMP:ADV', '-COMP:C/fin', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
			=D

4.

		Consume "mitä"

		D + mitä
			Filtering out impossible merge sites...
			Sink "mitä" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mitä]
			=D{N}

5.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D mitä] D]

7.

		Consume "Pekka"

		[[D mitä] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D mitä] D{N}]

8.

		Consume "ei"

		[[D mitä] D{N}] + ei
			Filtering out impossible merge sites...
				Reject [[[D mitä] <D Pekka>] ei] due to bad left branch.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D mitä] [[D Pekka] ei]]

9.

		Next word contains multiple morphemes ['$T', 'käske-']

		Consume "T"

		[[D mitä] [[D Pekka] ei]] + T
			Filtering out impossible merge sites...
				Reject [[[D mitä] [[D Pekka] ei]] T] due to bad left branch.
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D mitä] [[D Pekka] [ei T]]]

10.

		Consume "käske"

		[[D mitä] [[D Pekka] [ei T]]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D mitä] [[D Pekka] [ei T{V}]]]

11.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D mitä] [[D Pekka] [ei T{V}]]]

12.

		Adding inflectional features {'TAIL:PHI:0,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D mitä] [[D Pekka] [ei T{V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D
				[D mitä]" has no thematic role
				Avoid [[D mitä] [uWH [[D Pekka] [ei [T [[D Pekka] käske]]]]]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D
				Avoid Neg/finP as SPEC for D
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T käske]] as left branch because it constitutes illicit structure.
				Avoid [T{V} D] due to local agreement failure.
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] [ei T{V}]]; D]
			3. [[ei T{V}]; D]
			4. [[[D mitä] [[D Pekka] [ei T{V}]]]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D mitä] [[D Pekka] [ei [T{V} D]]]]

13.

		Consume "heidän"

		[[D mitä] [[D Pekka] [ei [T{V} D]]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D mitä] [[D Pekka] [ei [T{V} D{N}]]]]

14.

		Next word contains multiple morphemes ['$-ta', '$v', 'ihaile-']

		Consume "Ainf"

		[[D mitä] [[D Pekka] [ei [T{V} D{N}]]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D mitä] [uWH [[D Pekka] [ei [T [[D Pekka] [käske [D heidän]]]]]]]] Ainf] due to bad left branch.
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [D heidän]]]]]] Ainf] due to bad left branch.
				Reject [[ei [T [käske [D heidän]]]] Ainf] due to bad left branch.
				Reject [[T [käske [D heidän]]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]]

15.

		Consume "v"

		[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]]]

16.

		Consume "ihailee"

		[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*ihailee]
			=[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]]

17.
	>>>	Trying candidate parse [[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]].
				Extracted head "käske" and reconstructed it = [[D mitä] [[D Pekka] [ei [T [käske [[D heidän] Ainf{v,V}]]]]]]
				Extracted head "v{V}" from Ainf and created [[D mitä] [[D Pekka] [ei [T [käske [[D heidän] [Ainf v{V}]]]]]]]
			Reconstructing head movement for v{V}.
				Extracted head "ihailee" from v and created [[D mitä] [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v ihailee]]]]]]]]
			Dropping floaters...
				[D mitä] failed to tail [!COMP:*][-PHI]
				<D mitä> was made an adjunct.
				Floater <D mitä> dropped.
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				= [<D mitä> [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [<D mitä> ihailee]]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				New {'WH'} head was spawned due to the occurrence of multiple specifiers at ei
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of käske
				[D heidän] will undergo A-reconstruction (form of Agree).
			= [<D mitä> [uWH [[D Pekka] [ei [T [[D Pekka] [käske [[D heidän] [Ainf [[D heidän] [v [<D mitä> ihailee]]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D mitä>:1 [uWH [[D Pekka]:2 [ei [T [(DP):2 [käske [[D heidän]:4 [Ainf [(DP):4 [v [<DP>:1 ihailee]]]]]]]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 17/160 operations) <------------------------------------
		Solution:
		[<D mitä> [uWH [[D Pekka] [ei [T [[D Pekka] [käske [[D heidän] [Ainf [[D heidän] [v [<D mitä> ihailee]]]]]]]]]]]]
		Grammar: [<D mitä>:1 [uWH [[D Pekka]:2 [ei [T [(DP):2 [käske [[D heidän]:3 [Ainf [(DP):3 [v [<DP>:1 ihailee]]]]]]]]]]]]
		Spellout iWHP = [DP:1 [iWH [DP:2 [Neg/fin [ [__:2 [V [DP:3 [ [__:3 [v [__:1 V]]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']

D: [D]
mitä: [N, D]
uWH: [iWH]
D: [D, iWH]
Pekka: [N, D, iWH]
ei: [Neg/fin, iWH]
T: [, Neg/fin, iWH]
(D): [D, , Neg/fin, iWH]
(N): [N, D, , Neg/fin, iWH]
käske: [V, , Neg/fin, iWH]
D: [D, V, , Neg/fin, iWH]
heidän: [N, D, V, , Neg/fin, iWH]
Ainf: [, V, , Neg/fin, iWH]
(D): [D, , V, , Neg/fin, iWH]
(N): [N, D, , V, , Neg/fin, iWH]
v: [v, , V, , Neg/fin, iWH]
(D): [D, V, v, , V, , Neg/fin, iWH]
(N): [N, D, V, v, , V, , Neg/fin, iWH]
ihailee: [V, v, , V, , Neg/fin, iWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 35
['mitä', 'Pekka', 'käski', 'heidän', 'antaa', 'Merjalle']


			=None

1.

		Next word contains multiple morphemes ['$par', '$wh', '$D', 'mitä-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'CAT:WH', '-', 'ABAR:WH', '-COMP:ADV', '-COMP:C/fin', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
			=D

4.

		Consume "mitä"

		D + mitä
			Filtering out impossible merge sites...
			Sink "mitä" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mitä]
			=D{N}

5.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D mitä] D]

7.

		Consume "Pekka"

		[[D mitä] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D mitä] D{N}]

8.

		Next word contains multiple morphemes ['$T/fin', 'käske-']

		Consume "T"

		[[D mitä] D{N}] + T
			Filtering out impossible merge sites...
				Reject [[[D mitä] <D Pekka>] T] due to bad left branch.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D mitä] [[D Pekka] T]]

9.

		Consume "käske"

		[[D mitä] [[D Pekka] T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D mitä] [[D Pekka] T{V}]]

10.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D mitä] [[D Pekka] T{V}]]

11.

		Adding inflectional features {'TAIL:PHI:0,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D mitä] [[D Pekka] T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D
				[D mitä]" has no thematic role
				Avoid [[D mitä] [uWH [<D Pekka> [T [<D Pekka> käske]]]]] as left branch because it constitutes illicit structure.
				Avoid T/finP as SPEC for D
				Avoid [T{V} D] due to local agreement failure.
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] T{V}]; D]
			3. [[[D mitä] [[D Pekka] T{V}]]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D mitä] [[D Pekka] [T{V} D]]]

12.

		Consume "heidän"

		[[D mitä] [[D Pekka] [T{V} D]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D mitä] [[D Pekka] [T{V} D{N}]]]

13.

		Next word contains multiple morphemes ['$-ta', '$v', 'anta-']

		Consume "Ainf"

		[[D mitä] [[D Pekka] [T{V} D{N}]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D mitä] [uWH [<D Pekka> [T [<D Pekka> [käske <D heidän>]]]]]] Ainf] due to bad left branch.
				Reject [[<D Pekka> [T [<D Pekka> [käske <D heidän>]]]] Ainf] due to bad left branch.
				Reject [[T [käske <D heidän>]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf]]]]

14.

		Consume "v"

		[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf{v}]]]]

15.

		Consume "antaa"

		[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf{v}]]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*antaa]
			=[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]]

16.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]] + P(lle)
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [v antaa]]]]]]]] P(lle)] due to bad left branch.
				Reject [[T [käske [[D heidän] [Ainf [[D heidän] [v antaa]]]]]] P(lle)] due to bad left branch.
				Reject [[[D heidän] [Ainf [[D heidän] [v antaa]]]] P(lle)] due to bad left branch.
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle)
				Prioritize [antaa P(lle)] due to complement selection for [P]
		Ranking completed:
			1. [Ainf{v,V}; P(lle)]
			2. [[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]]; P(lle)]
		Exploring solution number (1) =[Ainf{v,V} P(lle)]
			Ainf{v,V} cannot be opened.
			=[[D mitä] [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} P(lle)]]]]]

17.

		Consume "D"

		[[D mitä] [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} P(lle)]]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D mitä] [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} P(lle){D}]]]]]

18.

		Consume "Merja-"

		[[D mitä] [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} P(lle){D}]]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D mitä] [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} P(lle){D,N}]]]]]

19.
	>>>	Trying candidate parse [[D mitä] [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} P(lle){D,N}]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D mitä] [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} P(lle){D,N}]]]]].
				Extracted head "käske" and reconstructed it = [[D mitä] [[D Pekka] [T [käske [[D heidän] [Ainf{v,V} P(lle){D,N}]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D mitä] [[D Pekka] [T [käske [[D heidän] [Ainf [v{V} P(lle){D,N}]]]]]]]
				Extracted head "antaa" and reconstructed it = [[D mitä] [[D Pekka] [T [käske [[D heidän] [Ainf [v [antaa P(lle){D,N}]]]]]]]]
				Extracted head "D{N}" from P(lle) and created [[D mitä] [[D Pekka] [T [käske [[D heidän] [Ainf [v [antaa [P(lle) D{N}]]]]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D mitä] [[D Pekka] [T [käske [[D heidän] [Ainf [v [antaa [P(lle) [D Merja-]]]]]]]]]]
			Dropping floaters...
				[D mitä] failed to tail [!COMP:*][-PHI]
				<D mitä> was made an adjunct.
				Floater <D mitä> dropped.
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				= [<D mitä> [<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [v [<D mitä> [antaa [P(lle) [D Merja-]]]]]]]]]]]]
			Dropping A-/A-bar movement.
				New {'WH'} head was spawned due to the occurrence of multiple specifiers at T
				[D heidän] will undergo A-reconstruction (form of Agree).
			= [<D mitä> [uWH [<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [v [<D mitä> [antaa [P(lle) [D Merja-]]]]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D mitä>:1 [uWH [<D Pekka>:2 [T [<DP>:2 [käske [[D heidän]:3 [Ainf [(DP):3 [v [<DP>:1 [antaa [P(lle) [D Merja-]]]]]]]]]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 19/171 operations) <------------------------------------
		Solution:
		[<D mitä> [uWH [<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [v [<D mitä> [antaa [P(lle) [D Merja-]]]]]]]]]]]]]]
		Grammar: [<D mitä>:1 [uWH [<D Pekka>:2 [T [<DP>:2 [käske [[D heidän]:3 [Ainf [(DP):3 [v [<DP>:1 [antaa [P(lle) [D Merja-]]]]]]]]]]]]]]
		Spellout iWHP = [DP:1 [iWH [DP:2 [T/fin [__:2 [V [DP:3 [ [__:3 [v [__:1 [V [P [D N]]]]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
mitä: [N, D]
uWH: [iWH]
D: [D, iWH]
Pekka: [N, D, iWH]
T: [T/fin, iWH]
(D): [D, T/fin, iWH]
(N): [N, D, T/fin, iWH]
käske: [V, T/fin, iWH]
D: [D, V, T/fin, iWH]
heidän: [N, D, V, T/fin, iWH]
Ainf: [, V, T/fin, iWH]
(D): [D, , V, T/fin, iWH]
(N): [N, D, , V, T/fin, iWH]
v: [v, , V, T/fin, iWH]
(D): [D, v, , V, T/fin, iWH]
(N): [N, D, v, , V, T/fin, iWH]
antaa: [V, v, , V, T/fin, iWH]
P(lle): [P, V, v, , V, T/fin, iWH]
D: [D, P, V, v, , V, T/fin, iWH]
Merja-: [N, D, P, V, v, , V, T/fin, iWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 36
['mitä', 'Pekka', 'ei', 'käskenyt', 'heidän', 'antaa', 'Merjalle']


			=None

1.

		Next word contains multiple morphemes ['$par', '$wh', '$D', 'mitä-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'CAT:WH', '-', 'ABAR:WH', '-COMP:ADV', '-COMP:C/fin', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
			=D

4.

		Consume "mitä"

		D + mitä
			Filtering out impossible merge sites...
			Sink "mitä" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mitä]
			=D{N}

5.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D mitä] D]

7.

		Consume "Pekka"

		[[D mitä] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D mitä] D{N}]

8.

		Consume "ei"

		[[D mitä] D{N}] + ei
			Filtering out impossible merge sites...
				Reject [[[D mitä] <D Pekka>] ei] due to bad left branch.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D mitä] [[D Pekka] ei]]

9.

		Next word contains multiple morphemes ['$T', 'käske-']

		Consume "T"

		[[D mitä] [[D Pekka] ei]] + T
			Filtering out impossible merge sites...
				Reject [[[D mitä] [[D Pekka] ei]] T] due to bad left branch.
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D mitä] [[D Pekka] [ei T]]]

10.

		Consume "käske"

		[[D mitä] [[D Pekka] [ei T]]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D mitä] [[D Pekka] [ei T{V}]]]

11.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D mitä] [[D Pekka] [ei T{V}]]]

12.

		Adding inflectional features {'TAIL:PHI:0,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D mitä] [[D Pekka] [ei T{V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D
				[D mitä]" has no thematic role
				Avoid [[D mitä] [uWH [[D Pekka] [ei [T [[D Pekka] käske]]]]]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D
				Avoid Neg/finP as SPEC for D
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T käske]] as left branch because it constitutes illicit structure.
				Avoid [T{V} D] due to local agreement failure.
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] [ei T{V}]]; D]
			3. [[ei T{V}]; D]
			4. [[[D mitä] [[D Pekka] [ei T{V}]]]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D mitä] [[D Pekka] [ei [T{V} D]]]]

13.

		Consume "heidän"

		[[D mitä] [[D Pekka] [ei [T{V} D]]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D mitä] [[D Pekka] [ei [T{V} D{N}]]]]

14.

		Next word contains multiple morphemes ['$-ta', '$v', 'anta-']

		Consume "Ainf"

		[[D mitä] [[D Pekka] [ei [T{V} D{N}]]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D mitä] [uWH [[D Pekka] [ei [T [[D Pekka] [käske [D heidän]]]]]]]] Ainf] due to bad left branch.
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [D heidän]]]]]] Ainf] due to bad left branch.
				Reject [[ei [T [käske [D heidän]]]] Ainf] due to bad left branch.
				Reject [[T [käske [D heidän]]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]]

15.

		Consume "v"

		[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]]]

16.

		Consume "antaa"

		[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*antaa]
			=[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]]

17.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]] + P(lle)
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [[D heidän] [Ainf [[D heidän] [v antaa]]]]]]]]] P(lle)] due to bad left branch.
				Reject [[ei [T [käske [[D heidän] [Ainf [[D heidän] [v antaa]]]]]]] P(lle)] due to bad left branch.
				Reject [[T [käske [[D heidän] [Ainf [[D heidän] [v antaa]]]]]] P(lle)] due to bad left branch.
				Reject [[[D heidän] [Ainf [[D heidän] [v antaa]]]] P(lle)] due to bad left branch.
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, P(lle)
				Prioritize [antaa P(lle)] due to complement selection for [P]
		Ranking completed:
			1. [Ainf{v,V}; P(lle)]
			2. [[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]]; P(lle)]
		Exploring solution number (1) =[Ainf{v,V} P(lle)]
			Ainf{v,V} cannot be opened.
			=[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} P(lle)]]]]]]

18.

		Consume "D"

		[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} P(lle)]]]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} P(lle){D}]]]]]]

19.

		Consume "Merja-"

		[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} P(lle){D}]]]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} P(lle){D,N}]]]]]]

20.
	>>>	Trying candidate parse [[D mitä] [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} P(lle){D,N}]]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D mitä] [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} P(lle){D,N}]]]]]].
				Extracted head "käske" and reconstructed it = [[D mitä] [[D Pekka] [ei [T [käske [[D heidän] [Ainf{v,V} P(lle){D,N}]]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D mitä] [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v{V} P(lle){D,N}]]]]]]]]
				Extracted head "antaa" and reconstructed it = [[D mitä] [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa P(lle){D,N}]]]]]]]]]
				Extracted head "D{N}" from P(lle) and created [[D mitä] [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa [P(lle) D{N}]]]]]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D mitä] [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa [P(lle) [D Merja-]]]]]]]]]]]
			Dropping floaters...
				[D mitä] failed to tail [!COMP:*][-PHI]
				<D mitä> was made an adjunct.
				Floater <D mitä> dropped.
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				= [<D mitä> [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [<D mitä> [antaa [P(lle) [D Merja-]]]]]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				New {'WH'} head was spawned due to the occurrence of multiple specifiers at ei
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of käske
				[D heidän] will undergo A-reconstruction (form of Agree).
			= [<D mitä> [uWH [[D Pekka] [ei [T [[D Pekka] [käske [[D heidän] [Ainf [[D heidän] [v [<D mitä> [antaa [P(lle) [D Merja-]]]]]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D mitä>:1 [uWH [[D Pekka]:2 [ei [T [(DP):2 [käske [[D heidän]:4 [Ainf [(DP):4 [v [<DP>:1 [antaa [P(lle) [D Merja-]]]]]]]]]]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 20/194 operations) <------------------------------------
		Solution:
		[<D mitä> [uWH [[D Pekka] [ei [T [[D Pekka] [käske [[D heidän] [Ainf [[D heidän] [v [<D mitä> [antaa [P(lle) [D Merja-]]]]]]]]]]]]]]]
		Grammar: [<D mitä>:1 [uWH [[D Pekka]:2 [ei [T [(DP):2 [käske [[D heidän]:3 [Ainf [(DP):3 [v [<DP>:1 [antaa [P(lle) [D Merja-]]]]]]]]]]]]]]]
		Spellout iWHP = [DP:1 [iWH [DP:2 [Neg/fin [ [__:2 [V [DP:3 [ [__:3 [v [__:1 [V [P [D N]]]]]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
mitä: [N, D]
uWH: [iWH]
D: [D, iWH]
Pekka: [N, D, iWH]
ei: [Neg/fin, iWH]
T: [, Neg/fin, iWH]
(D): [D, , Neg/fin, iWH]
(N): [N, D, , Neg/fin, iWH]
käske: [V, , Neg/fin, iWH]
D: [D, V, , Neg/fin, iWH]
heidän: [N, D, V, , Neg/fin, iWH]
Ainf: [, V, , Neg/fin, iWH]
(D): [D, , V, , Neg/fin, iWH]
(N): [N, D, , V, , Neg/fin, iWH]
v: [v, , V, , Neg/fin, iWH]
(D): [D, v, , V, , Neg/fin, iWH]
(N): [N, D, v, , V, , Neg/fin, iWH]
antaa: [V, v, , V, , Neg/fin, iWH]
P(lle): [P, V, v, , V, , Neg/fin, iWH]
D: [D, P, V, v, , V, , Neg/fin, iWH]
Merja-: [N, D, P, V, v, , V, , Neg/fin, iWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 37
['kuka', 'nukkui', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'CAT:WH', '-', 'ABAR:WH', 'TAIL:CAT:T/fin,!COMP:*', '-COMP:ADV', '-COMP:C/fin', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

4.

		Consume "kuka"

		D + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=D{N}

5.

		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D kuka] T]

6.

		Consume "nukku"

		[[D kuka] T] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D kuka] T{V}]

7.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D kuka] T{V}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla
				Avoid T{V} due to tail-head failure.
		Ranking completed:
			1. [T{V}; malla]
			2. [[[D kuka] T{V}]; malla]
		Exploring solution number (1) =[T{V} malla]
			T{V} cannot be opened.
			=[[D kuka] [T{V} malla]]

8.

		Consume "virtaa"

		[[D kuka] [T{V} malla]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D kuka] [T{V} malla{V}]]

9.
	>>>	Trying candidate parse [[D kuka] [T{V} malla{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kuka] [T{V} malla{V}]].
				Extracted head "nukku" and reconstructed it = [[D kuka] [T [nukku malla{V}]]]
				Extracted head "virtaa" from malla and created [[D kuka] [T [nukku [malla virtaa]]]]
			Dropping floaters...
				[D kuka] failed to tail [!COMP:*][CAT:T/fin]
				<D kuka> was made an adjunct.
				Floater <D kuka> dropped.
				<malla virtaa> was made an adjunct.
				= [<D kuka> [T [<D kuka> [nukku <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				Criterial features {'WH'} copied to ['FIN/T/fin', 'T/fin', 'FIN']
			= [<D kuka> [T [<D kuka> [nukku <malla virtaa>]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D kuka>:1 [T [<DP>:1 [nukku <malla virtaa>]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 9/76 operations) <------------------------------------
		Solution:
		[<D kuka> [T [<D kuka> [nukku <malla virtaa>]]]]
		Grammar: [<D kuka>:1 [T [<DP>:1 [nukku <malla virtaa>]]]]
		Spellout T/finiWHP = [DP:1 [T/finiWH [__:1 [V ADVP]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iWH/uWH', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iWH/uWH', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
kuka: [N, D]
T: [T/finiWH]
(D): [D, T/finiWH]
(N): [N, D, T/finiWH]
nukku: [V, T/finiWH]
malla: [ADV, V, T/finiWH]
virtaa: [V, ADV, V, T/finiWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 38
['kuka', 'ei', 'nukkunut', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'CAT:WH', '-', 'ABAR:WH', 'TAIL:CAT:T/fin,!COMP:*', '-COMP:ADV', '-COMP:C/fin', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

4.

		Consume "kuka"

		D + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=D{N}

5.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D kuka] ei]

6.

		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D kuka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D kuka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D kuka] [ei T]]

7.

		Consume "nukku"

		[[D kuka] [ei T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D kuka] [ei T{V}]]

8.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D kuka] [ei T{V}]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla
				Avoid Neg/finP as SPEC, malla
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [ei [T nukku]] as left branch because it constitutes illicit structure.
		Ranking completed:
			1. [T{V}; malla]
			2. [[[D kuka] [ei T{V}]]; malla]
			3. [[ei T{V}]; malla]
		Exploring solution number (1) =[T{V} malla]
			T{V} cannot be opened.
			=[[D kuka] [ei [T{V} malla]]]

9.

		Consume "virtaa"

		[[D kuka] [ei [T{V} malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D kuka] [ei [T{V} malla{V}]]]

10.
	>>>	Trying candidate parse [[D kuka] [ei [T{V} malla{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kuka] [ei [T{V} malla{V}]]].
				Extracted head "nukku" and reconstructed it = [[D kuka] [ei [T [nukku malla{V}]]]]
				Extracted head "virtaa" from malla and created [[D kuka] [ei [T [nukku [malla virtaa]]]]]
			Dropping floaters...
				[D kuka] failed to tail [!COMP:*][CAT:T/fin]
				<malla virtaa> was made an adjunct.
				= [[D kuka] [ei [T [nukku <malla virtaa>]]]]
			Dropping A-/A-bar movement.
				Moving "D kuka " into memory buffer from SPEC of "ei".
				Criterial features {'WH'} copied to ['Neg/fin', 'NEG', 'FIN', 'FIN/NEG/Neg/fin']
				Memory buffer: [[D N]]
				Dropping constituent [D kuka]:1 from memory buffer into Spec of nukku
			= [[D kuka] [ei [T [[D kuka] [nukku <malla virtaa>]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D kuka]:1 [ei [T [(DP):1 [nukku <malla virtaa>]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 10/94 operations) <------------------------------------
		Solution:
		[[D kuka] [ei [T [[D kuka] [nukku <malla virtaa>]]]]]
		Grammar: [[D kuka]:1 [ei [T [(DP):1 [nukku <malla virtaa>]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [ [__:1 [V ADVP]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
ei:['!COMP:*', '!COMP:T', '!SPEC:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/uWH', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:uWH', 'LANG:FI', 'LF:not', 'PF:ei', 'SPEC:*']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
ei:['!COMP:*', '!COMP:T', '!SPEC:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:FIN', 'CAT:FIN/FIN/NEG/Neg/fin/NEG/Neg/fin/uWH', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'CAT:uWH', 'LANG:FI', 'LF:not', 'PF:ei', 'SPEC:*']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
kuka: [N, D]
ei: [Neg/fin]
T: [, Neg/fin]
(D): [D, , Neg/fin]
(N): [N, D, , Neg/fin]
nukku: [V, , Neg/fin]
malla: [ADV, V, , Neg/fin]
virtaa: [V, ADV, V, , Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 39
['mitä', 'Pekka', 'ihailee', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$par', '$wh', '$D', 'mitä-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'CAT:WH', '-', 'ABAR:WH', '-COMP:ADV', '-COMP:C/fin', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
			=D

4.

		Consume "mitä"

		D + mitä
			Filtering out impossible merge sites...
			Sink "mitä" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mitä]
			=D{N}

5.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D mitä] D]

7.

		Consume "Pekka"

		[[D mitä] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D mitä] D{N}]

8.

		Next word contains multiple morphemes ['$T/fin', '$v', 'ihaile-']

		Consume "T"

		[[D mitä] D{N}] + T
			Filtering out impossible merge sites...
				Reject [[[D mitä] <D Pekka>] T] due to bad left branch.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D mitä] [[D Pekka] T]]

9.

		Consume "v"

		[[D mitä] [[D Pekka] T]] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D mitä] [[D Pekka] T{v}]]

10.

		Consume "ihailee"

		[[D mitä] [[D Pekka] T{v}]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*ihailee]
			=[[D mitä] [[D Pekka] T{v,V}]]

11.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D mitä] [[D Pekka] T{v,V}]] + malla
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [v ihailee]]]] malla] due to bad left branch.
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla
				Avoid T{v,V} due to tail-head failure.
		Ranking completed:
			1. [T{v,V}; malla]
			2. [[[D mitä] [[D Pekka] T{v,V}]]; malla]
		Exploring solution number (1) =[T{v,V} malla]
			T{v,V} cannot be opened.
			=[[D mitä] [[D Pekka] [T{v,V} malla]]]

12.

		Consume "virtaa"

		[[D mitä] [[D Pekka] [T{v,V} malla]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D mitä] [[D Pekka] [T{v,V} malla{V}]]]

13.
	>>>	Trying candidate parse [[D mitä] [[D Pekka] [T{v,V} malla{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D mitä] [[D Pekka] [T{v,V} malla{V}]]].
				Extracted head "v{V}" and reconstructed it = [[D mitä] [[D Pekka] [T [v{V} malla{V}]]]]
				Extracted head "ihailee" and reconstructed it = [[D mitä] [[D Pekka] [T [v [ihailee malla{V}]]]]]
				Extracted head "virtaa" from malla and created [[D mitä] [[D Pekka] [T [v [ihailee [malla virtaa]]]]]]
			Dropping floaters...
				[D mitä] failed to tail [!COMP:*][-PHI]
				<D mitä> was made an adjunct.
				Floater <D mitä> dropped.
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				<malla virtaa> was made an adjunct.
				= [<D mitä> [<D Pekka> [T [<D Pekka> [v [<D mitä> [ihailee <malla virtaa>]]]]]]]
			Dropping A-/A-bar movement.
				New {'WH'} head was spawned due to the occurrence of multiple specifiers at T
			= [<D mitä> [uWH [<D Pekka> [T [<D Pekka> [v [<D mitä> [ihailee <malla virtaa>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D mitä>:1 [uWH [<D Pekka>:2 [T [<DP>:2 [v [<DP>:1 [ihailee <malla virtaa>]]]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 13/110 operations) <------------------------------------
		Solution:
		[<D mitä> [uWH [<D Pekka> [T [<D Pekka> [v [<D mitä> [ihailee <malla virtaa>]]]]]]]]
		Grammar: [<D mitä>:1 [uWH [<D Pekka>:2 [T [<DP>:2 [v [<DP>:1 [ihailee <malla virtaa>]]]]]]]]
		Spellout iWHP = [DP:1 [iWH [DP:2 [T/fin [__:2 [v [__:1 [V ADVP]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
mitä: [N, D]
uWH: [iWH]
D: [D, iWH]
Pekka: [N, D, iWH]
T: [T/fin, iWH]
(D): [D, T/fin, iWH]
(N): [N, D, T/fin, iWH]
v: [v, T/fin, iWH]
(D): [D, v, T/fin, iWH]
(N): [N, D, v, T/fin, iWH]
ihailee: [V, v, T/fin, iWH]
malla: [ADV, V, v, T/fin, iWH]
virtaa: [V, ADV, V, v, T/fin, iWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 40
['mitä', 'Pekka', 'ei', 'ihaile', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$par', '$wh', '$D', 'mitä-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'CAT:WH', '-', 'ABAR:WH', '-COMP:ADV', '-COMP:C/fin', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
			=D

4.

		Consume "mitä"

		D + mitä
			Filtering out impossible merge sites...
			Sink "mitä" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mitä]
			=D{N}

5.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D mitä] D]

7.

		Consume "Pekka"

		[[D mitä] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D mitä] D{N}]

8.

		Consume "ei"

		[[D mitä] D{N}] + ei
			Filtering out impossible merge sites...
				Reject [[[D mitä] <D Pekka>] ei] due to bad left branch.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D mitä] [[D Pekka] ei]]

9.

		Next word contains multiple morphemes ['$T', '$v', 'ihaile-']

		Consume "T"

		[[D mitä] [[D Pekka] ei]] + T
			Filtering out impossible merge sites...
				Reject [[[D mitä] [[D Pekka] ei]] T] due to bad left branch.
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D mitä] [[D Pekka] [ei T]]]

10.

		Consume "v"

		[[D mitä] [[D Pekka] [ei T]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D mitä] [[D Pekka] [ei T{v}]]]

11.

		Consume "ihailee"

		[[D mitä] [[D Pekka] [ei T{v}]]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*ihailee]
			=[[D mitä] [[D Pekka] [ei T{v,V}]]]

12.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D mitä] [[D Pekka] [ei T{v,V}]]] + malla
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [v ihailee]]]]] malla] due to bad left branch.
				Reject [[ei [T [v ihailee]]] malla] due to bad left branch.
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla
		Ranking completed:
			1. [T{v,V}; malla]
			2. [[[D mitä] [[D Pekka] [ei T{v,V}]]]; malla]
		Exploring solution number (1) =[T{v,V} malla]
			T{v,V} cannot be opened.
			=[[D mitä] [[D Pekka] [ei [T{v,V} malla]]]]

13.

		Consume "virtaa"

		[[D mitä] [[D Pekka] [ei [T{v,V} malla]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D mitä] [[D Pekka] [ei [T{v,V} malla{V}]]]]

14.
	>>>	Trying candidate parse [[D mitä] [[D Pekka] [ei [T{v,V} malla{V}]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D mitä] [[D Pekka] [ei [T{v,V} malla{V}]]]].
				Extracted head "v{V}" and reconstructed it = [[D mitä] [[D Pekka] [ei [T [v{V} malla{V}]]]]]
				Extracted head "ihailee" and reconstructed it = [[D mitä] [[D Pekka] [ei [T [v [ihailee malla{V}]]]]]]
				Extracted head "virtaa" from malla and created [[D mitä] [[D Pekka] [ei [T [v [ihailee [malla virtaa]]]]]]]
			Dropping floaters...
				[D mitä] failed to tail [!COMP:*][-PHI]
				<D mitä> was made an adjunct.
				Floater <D mitä> dropped.
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<malla virtaa> was made an adjunct.
				= [<D mitä> [[D Pekka] [ei [T [v [<D mitä> [ihailee <malla virtaa>]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				New {'WH'} head was spawned due to the occurrence of multiple specifiers at ei
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of v
			= [<D mitä> [uWH [[D Pekka] [ei [T [[D Pekka] [v [<D mitä> [ihailee <malla virtaa>]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D mitä>:1 [uWH [[D Pekka]:2 [ei [T [(DP):2 [v [<DP>:1 [ihailee <malla virtaa>]]]]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 14/126 operations) <------------------------------------
		Solution:
		[<D mitä> [uWH [[D Pekka] [ei [T [[D Pekka] [v [<D mitä> [ihailee <malla virtaa>]]]]]]]]]
		Grammar: [<D mitä>:1 [uWH [[D Pekka]:2 [ei [T [(DP):2 [v [<DP>:1 [ihailee <malla virtaa>]]]]]]]]]
		Spellout iWHP = [DP:1 [iWH [DP:2 [Neg/fin [ [__:2 [v [__:1 [V ADVP]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
mitä: [N, D]
uWH: [iWH]
D: [D, iWH]
Pekka: [N, D, iWH]
ei: [Neg/fin, iWH]
T: [, Neg/fin, iWH]
(D): [D, , Neg/fin, iWH]
(N): [N, D, , Neg/fin, iWH]
v: [v, , Neg/fin, iWH]
(D): [D, v, , Neg/fin, iWH]
(N): [N, D, v, , Neg/fin, iWH]
ihailee: [V, v, , Neg/fin, iWH]
malla: [ADV, V, v, , Neg/fin, iWH]
virtaa: [V, ADV, V, v, , Neg/fin, iWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 41
['kuka', 'antoi', 'kirjan', 'Merjalle', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$nom', '$wh', '$D', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'CAT:WH', '-', 'ABAR:WH', 'TAIL:CAT:T/fin,!COMP:*', '-COMP:ADV', '-COMP:C/fin', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']
			=D

4.

		Consume "kuka"

		D + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kuka]
			=D{N}

5.

		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T"

		D{N} + T
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D kuka] T]

6.

		Consume "v"

		[[D kuka] T] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D kuka] T{v}]

7.

		Consume "antaa"

		[[D kuka] T{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*antaa]
			=[[D kuka] T{v,V}]

8.

		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D kuka] T{v,V}]

9.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D kuka] T{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[<D kuka> [T [<D kuka> [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[T{v,V} D]
			T{v,V} cannot be opened.
			=[[D kuka] [T{v,V} D]]

10.

		Consume "kirja"

		[[D kuka] [T{v,V} D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D kuka] [T{v,V} D{N}]]

11.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D kuka] [T{v,V} D{N}]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle)
				Avoid T/finP as SPEC, P(lle)
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection against [P]
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D kuka] [T{v,V} D{N}]]; P(lle)]
			3. [[T{v,V} D{N}]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D kuka] [T{v,V} [[D kirja] P(lle)]]]

12.

		Consume "D"

		[[D kuka] [T{v,V} [[D kirja] P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D kuka] [T{v,V} [[D kirja] P(lle){D}]]]

13.

		Consume "Merja-"

		[[D kuka] [T{v,V} [[D kirja] P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D kuka] [T{v,V} [[D kirja] P(lle){D,N}]]]

14.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D kuka] [T{v,V} [[D kirja] P(lle){D,N}]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla
				Avoid T/finP as SPEC, malla
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]] as left branch because it constitutes illicit structure.
				[D kirja]" has no thematic role
				Avoid [[D kirja] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid [[D kirja] P(lle){D,N}] due to tail-head failure.
				Avoid [P(lle){D,N} malla] due to complement selection against [ADV]
				Avoid [Merja- malla] due to complement selection against [ADV]
				Avoid P(lle){D,N} due to tail-head failure.
			P(lle) was opened.
				Prioritize P(lle){D,N} because all solutions were negative.
		Ranking completed:
			1. [P(lle){D,N}; malla]
			2. [[[D kuka] [T{v,V} [[D kirja] P(lle){D,N}]]]; malla]
			3. [[[D kirja] P(lle){D,N}]; malla]
			4. [[T{v,V} [[D kirja] P(lle){D,N}]]; malla]
		Exploring solution number (1) =[P(lle){D,N} malla]
			P(lle) was opened.
			=[[D kuka] [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]]

15.

		Consume "virtaa"

		[[D kuka] [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D kuka] [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]

16.
	>>>	Trying candidate parse [[D kuka] [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kuka] [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]].
				Extracted head "v{V}" and reconstructed it = [[D kuka] [T [v{V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]
				Extracted head "antaa" and reconstructed it = [[D kuka] [T [v [antaa [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]
				Extracted head "virtaa" from malla and created [[D kuka] [T [v [antaa [[D kirja] [[P(lle) [D Merja-]] [malla virtaa]]]]]]]
			Dropping floaters...
				[D kuka] failed to tail [!COMP:*][CAT:T/fin]
				<D kuka> was made an adjunct.
				Floater <D kuka> dropped.
				<malla virtaa> was made an adjunct.
				= [<D kuka> [T [<D kuka> [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla virtaa>]]]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'WH'} copied to ['FIN/T/fin', 'T/fin', 'FIN']
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D kuka>:1 [T [<DP>:1 [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla virtaa>]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [<D kuka> [T [<D kuka> [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D kuka>:1 [T [<DP>:1 [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 16/161 operations) <------------------------------------
		Solution:
		[<D kuka> [T [<D kuka> [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]
		Grammar: [<D kuka>:1 [T [<DP>:1 [v [antaa [[D kirja] [<P(lle) [D Merja-]> <malla virtaa>]]]]]]]
		Spellout T/finiWHP = [DP:1 [T/finiWH [__:1 [v [V [DP [[P [D N]] ADVP]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iWH/uWH', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iWH/uWH', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
kuka: [N, D]
T: [T/finiWH]
(D): [D, T/finiWH]
(N): [N, D, T/finiWH]
v: [v, T/finiWH]
antaa: [V, v, T/finiWH]
D: [D, V, v, T/finiWH]
kirja: [N, D, V, v, T/finiWH]
P(lle): [P, V, v, T/finiWH]
D: [D, P, V, v, T/finiWH]
Merja-: [N, D, P, V, v, T/finiWH]
malla: [ADV, V, v, T/finiWH]
virtaa: [V, ADV, V, v, T/finiWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 42
['mitä', 'Pekka', 'ei', 'antanut', 'Merjalle', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$par', '$wh', '$D', 'mitä-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'CAT:WH', '-', 'ABAR:WH', '-COMP:ADV', '-COMP:C/fin', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
			=D

4.

		Consume "mitä"

		D + mitä
			Filtering out impossible merge sites...
			Sink "mitä" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mitä]
			=D{N}

5.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D mitä] D]

7.

		Consume "Pekka"

		[[D mitä] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D mitä] D{N}]

8.

		Consume "ei"

		[[D mitä] D{N}] + ei
			Filtering out impossible merge sites...
				Reject [[[D mitä] <D Pekka>] ei] due to bad left branch.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D mitä] [[D Pekka] ei]]

9.

		Next word contains multiple morphemes ['$T', '$v', 'anta-']

		Consume "T"

		[[D mitä] [[D Pekka] ei]] + T
			Filtering out impossible merge sites...
				Reject [[[D mitä] [[D Pekka] ei]] T] due to bad left branch.
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D mitä] [[D Pekka] [ei T]]]

10.

		Consume "v"

		[[D mitä] [[D Pekka] [ei T]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D mitä] [[D Pekka] [ei T{v}]]]

11.

		Consume "antaa"

		[[D mitä] [[D Pekka] [ei T{v}]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*antaa]
			=[[D mitä] [[D Pekka] [ei T{v,V}]]]

12.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D mitä] [[D Pekka] [ei T{v,V}]]] + P(lle)
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [v antaa]]]]] P(lle)] due to bad left branch.
				Reject [[ei [T [v antaa]]] P(lle)] due to bad left branch.
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, P(lle)
				Prioritize [antaa P(lle)] due to complement selection for [P]
		Ranking completed:
			1. [T{v,V}; P(lle)]
			2. [[[D mitä] [[D Pekka] [ei T{v,V}]]]; P(lle)]
		Exploring solution number (1) =[T{v,V} P(lle)]
			T{v,V} cannot be opened.
			=[[D mitä] [[D Pekka] [ei [T{v,V} P(lle)]]]]

13.

		Consume "D"

		[[D mitä] [[D Pekka] [ei [T{v,V} P(lle)]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D mitä] [[D Pekka] [ei [T{v,V} P(lle){D}]]]]

14.

		Consume "Merja-"

		[[D mitä] [[D Pekka] [ei [T{v,V} P(lle){D}]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D mitä] [[D Pekka] [ei [T{v,V} P(lle){D,N}]]]]

15.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D mitä] [[D Pekka] [ei [T{v,V} P(lle){D,N}]]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla
				Avoid Neg/finP as SPEC, malla
				Avoid Neg/finP as SPEC, malla
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [ei [T [v [antaa [P(lle) [D Merja-]]]]]] as left branch because it constitutes illicit structure.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T [v [antaa [P(lle) [D Merja-]]]]] as left branch because it constitutes illicit structure.
				Avoid [P(lle){D,N} malla] due to complement selection against [ADV]
				Avoid [Merja- malla] due to complement selection against [ADV]
			P(lle) was opened.
				Prioritize P(lle){D,N} because all solutions were negative.
		Ranking completed:
			1. [P(lle){D,N}; malla]
			2. [[T{v,V} P(lle){D,N}]; malla]
			3. [[[D Pekka] [ei [T{v,V} P(lle){D,N}]]]; malla]
			4. [[[D mitä] [[D Pekka] [ei [T{v,V} P(lle){D,N}]]]]; malla]
			5. [[ei [T{v,V} P(lle){D,N}]]; malla]
		Exploring solution number (1) =[P(lle){D,N} malla]
			P(lle) was opened.
			=[[D mitä] [[D Pekka] [ei [T{v,V} [[P(lle) [D Merja-]] malla]]]]]

16.

		Consume "virtaa"

		[[D mitä] [[D Pekka] [ei [T{v,V} [[P(lle) [D Merja-]] malla]]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D mitä] [[D Pekka] [ei [T{v,V} [[P(lle) [D Merja-]] malla{V}]]]]]

17.
	>>>	Trying candidate parse [[D mitä] [[D Pekka] [ei [T{v,V} [[P(lle) [D Merja-]] malla{V}]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D mitä] [[D Pekka] [ei [T{v,V} [[P(lle) [D Merja-]] malla{V}]]]]].
				Extracted head "v{V}" and reconstructed it = [[D mitä] [[D Pekka] [ei [T [v{V} [[P(lle) [D Merja-]] malla{V}]]]]]]
				Extracted head "antaa" and reconstructed it = [[D mitä] [[D Pekka] [ei [T [v [antaa [[P(lle) [D Merja-]] malla{V}]]]]]]]
				Extracted head "virtaa" from malla and created [[D mitä] [[D Pekka] [ei [T [v [antaa [[P(lle) [D Merja-]] [malla virtaa]]]]]]]]
			Dropping floaters...
				[D mitä] failed to tail [!COMP:*][-PHI]
				<D mitä> was made an adjunct.
				Floater <D mitä> dropped.
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<malla virtaa> was made an adjunct.
				= [<D mitä> [[D Pekka] [ei [T [v [<D mitä> [antaa [[P(lle) [D Merja-]] <malla virtaa>]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				New {'WH'} head was spawned due to the occurrence of multiple specifiers at ei
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of v
			= [<D mitä> [uWH [[D Pekka] [ei [T [[D Pekka] [v [<D mitä> [antaa [[P(lle) [D Merja-]] <malla virtaa>]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D mitä>:1 [uWH [[D Pekka]:2 [ei [T [(DP):2 [v [<DP>:1 [antaa [[P(lle) [D Merja-]] <malla virtaa>]]]]]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 17/168 operations) <------------------------------------
		Solution:
		[<D mitä> [uWH [[D Pekka] [ei [T [[D Pekka] [v [<D mitä> [antaa [[P(lle) [D Merja-]] <malla virtaa>]]]]]]]]]]
		Grammar: [<D mitä>:1 [uWH [[D Pekka]:2 [ei [T [(DP):2 [v [<DP>:1 [antaa [[P(lle) [D Merja-]] <malla virtaa>]]]]]]]]]]
		Spellout iWHP = [DP:1 [iWH [DP:2 [Neg/fin [ [__:2 [v [__:1 [V [[P [D N]] ADVP]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
mitä: [N, D]
uWH: [iWH]
D: [D, iWH]
Pekka: [N, D, iWH]
ei: [Neg/fin, iWH]
T: [, Neg/fin, iWH]
(D): [D, , Neg/fin, iWH]
(N): [N, D, , Neg/fin, iWH]
v: [v, , Neg/fin, iWH]
(D): [D, v, , Neg/fin, iWH]
(N): [N, D, v, , Neg/fin, iWH]
antaa: [V, v, , Neg/fin, iWH]
P(lle): [P, V, v, , Neg/fin, iWH]
D: [D, P, V, v, , Neg/fin, iWH]
Merja-: [N, D, P, V, v, , Neg/fin, iWH]
malla: [ADV, V, v, , Neg/fin, iWH]
virtaa: [V, ADV, V, v, , Neg/fin, iWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 43
['kenen', 'Pekka', 'käski', 'nukkua', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$gen', '$wh', '$D', 'kenen-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'CAT:WH', 'TAIL:PHI:0,!COMP:*', '-', 'ABAR:WH', '-COMP:ADV', '-COMP:C/fin', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
			=D

4.

		Consume "kenen"

		D + kenen
			Filtering out impossible merge sites...
			Sink "kenen" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kenen]
			=D{N}

5.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D kenen] D]

7.

		Consume "Pekka"

		[[D kenen] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D kenen] D{N}]

8.

		Next word contains multiple morphemes ['$T/fin', 'käske-']

		Consume "T"

		[[D kenen] D{N}] + T
			Filtering out impossible merge sites...
				Reject [[[D kenen] <D Pekka>] T] due to bad left branch.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D kenen] [[D Pekka] T]]

9.

		Consume "käske"

		[[D kenen] [[D Pekka] T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D kenen] [[D Pekka] T{V}]]

10.

		Next word contains multiple morphemes ['$-ta', 'nukku-']

		Consume "Ainf"

		[[D kenen] [[D Pekka] T{V}]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D kenen] [uWH [<D Pekka> [T [<D Pekka> käske]]]]] Ainf] due to bad left branch.
			Ranking remaining sites...
				Avoid T/finP as SPEC, Ainf
				Prioritize [käske Ainf] due to complement selection for [A/inf]
		Ranking completed:
			1. [T{V}; Ainf]
			2. [[[D Pekka] T{V}]; Ainf]
		Exploring solution number (1) =[T{V} Ainf]
			T{V} cannot be opened.
			=[[D kenen] [[D Pekka] [T{V} Ainf]]]

11.

		Consume "nukku"

		[[D kenen] [[D Pekka] [T{V} Ainf]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*nukku]
			=[[D kenen] [[D Pekka] [T{V} Ainf{V}]]]

12.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D kenen] [[D Pekka] [T{V} Ainf{V}]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla
				Avoid T/finP as SPEC, malla
				An EPP-head "Ainf" lacks specifier D that it requires.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [<D Pekka> [T [<D Pekka> [käske [Ainf nukku]]]]] as left branch because it constitutes illicit structure.
				Avoid T/finP as SPEC, malla
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				An EPP-head "Ainf" lacks specifier D that it requires.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [T [käske [Ainf nukku]]] as left branch because it constitutes illicit structure.
				Avoid Ainf{V} due to tail-head failure.
		Ranking completed:
			1. [Ainf{V}; malla]
			2. [[[D kenen] [[D Pekka] [T{V} Ainf{V}]]]; malla]
			3. [[T{V} Ainf{V}]; malla]
			4. [[[D Pekka] [T{V} Ainf{V}]]; malla]
		Exploring solution number (1) =[Ainf{V} malla]
			Ainf{V} cannot be opened.
			=[[D kenen] [[D Pekka] [T{V} [Ainf{V} malla]]]]

13.

		Consume "virtaa"

		[[D kenen] [[D Pekka] [T{V} [Ainf{V} malla]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D kenen] [[D Pekka] [T{V} [Ainf{V} malla{V}]]]]

14.
	>>>	Trying candidate parse [[D kenen] [[D Pekka] [T{V} [Ainf{V} malla{V}]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kenen] [[D Pekka] [T{V} [Ainf{V} malla{V}]]]].
				Extracted head "käske" and reconstructed it = [[D kenen] [[D Pekka] [T [käske [Ainf{V} malla{V}]]]]]
				Extracted head "nukku" and reconstructed it = [[D kenen] [[D Pekka] [T [käske [Ainf [nukku malla{V}]]]]]]
				Extracted head "virtaa" from malla and created [[D kenen] [[D Pekka] [T [käske [Ainf [nukku [malla virtaa]]]]]]]
			Dropping floaters...
				[D kenen] failed to tail [!COMP:*][PHI:0]
				<D kenen> was made an adjunct.
				Floater <D kenen> dropped.
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				<malla virtaa> was made an adjunct.
				= [<D kenen> [<D Pekka> [T [<D Pekka> [käske [<D kenen> [Ainf [nukku <malla virtaa>]]]]]]]]
			Dropping A-/A-bar movement.
				New {'WH'} head was spawned due to the occurrence of multiple specifiers at T
				<DP>:1 will undergo A-reconstruction (form of Agree).
				Criterial features {'WH'} copied to ['INF', 'A/inf/INF', 'A/inf']
			= [<D kenen> [uWH [<D Pekka> [T [<D Pekka> [käske [<D kenen> [Ainf [<D kenen> [nukku <malla virtaa>]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D kenen>:1 [uWH [<D Pekka>:2 [T [<DP>:2 [käske [<DP>:1 [Ainf [<DP>:1 [nukku <malla virtaa>]]]]]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 14/138 operations) <------------------------------------
		Solution:
		[<D kenen> [uWH [<D Pekka> [T [<D Pekka> [käske [<D kenen> [Ainf [<D kenen> [nukku <malla virtaa>]]]]]]]]]]
		Grammar: [<D kenen>:1 [uWH [<D Pekka>:2 [T [<DP>:2 [käske [<DP>:1 [Ainf [<DP>:1 [nukku <malla virtaa>]]]]]]]]]]
		Spellout iWHP = [DP:1 [iWH [DP:2 [T/fin [__:2 [V [__:1 [ [__:1 [V ADVP]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A', 'null']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '!SPEC:uWH', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/A/inf/INF/INF/uWH', 'CAT:A/inf/INF', 'CAT:INF', 'CAT:uWH', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A', 'null']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '!SPEC:uWH', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/A/inf/INF/INF/uWH', 'CAT:A/inf/INF', 'CAT:INF', 'CAT:uWH', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
kenen: [N, D]
uWH: [iWH]
D: [D, iWH]
Pekka: [N, D, iWH]
T: [T/fin, iWH]
(D): [D, T/fin, iWH]
(N): [N, D, T/fin, iWH]
käske: [V, T/fin, iWH]
(D): [D, V, T/fin, iWH]
(N): [N, D, V, T/fin, iWH]
Ainf: [, V, T/fin, iWH]
(D): [D, , V, T/fin, iWH]
(N): [N, D, , V, T/fin, iWH]
nukku: [V, , V, T/fin, iWH]
malla: [ADV, V, , V, T/fin, iWH]
virtaa: [V, ADV, V, , V, T/fin, iWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 44
['kenen', 'Pekka', 'ei', 'käskenyt', 'nukkua', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$gen', '$wh', '$D', 'kenen-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'CAT:WH', 'TAIL:PHI:0,!COMP:*', '-', 'ABAR:WH', '-COMP:ADV', '-COMP:C/fin', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']
			=D

4.

		Consume "kenen"

		D + kenen
			Filtering out impossible merge sites...
			Sink "kenen" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kenen]
			=D{N}

5.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D kenen] D]

7.

		Consume "Pekka"

		[[D kenen] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D kenen] D{N}]

8.

		Consume "ei"

		[[D kenen] D{N}] + ei
			Filtering out impossible merge sites...
				Reject [[[D kenen] <D Pekka>] ei] due to bad left branch.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D kenen] [[D Pekka] ei]]

9.

		Next word contains multiple morphemes ['$T', 'käske-']

		Consume "T"

		[[D kenen] [[D Pekka] ei]] + T
			Filtering out impossible merge sites...
				Reject [[[D kenen] [[D Pekka] ei]] T] due to bad left branch.
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D kenen] [[D Pekka] [ei T]]]

10.

		Consume "käske"

		[[D kenen] [[D Pekka] [ei T]]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D kenen] [[D Pekka] [ei T{V}]]]

11.

		Next word contains multiple morphemes ['$-ta', 'nukku-']

		Consume "Ainf"

		[[D kenen] [[D Pekka] [ei T{V}]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D kenen] [uWH [[D Pekka] [ei [T [[D Pekka] käske]]]]]] Ainf] due to bad left branch.
				Reject [[ei [T käske]] Ainf] due to bad left branch.
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, Ainf
				Prioritize [käske Ainf] due to complement selection for [A/inf]
		Ranking completed:
			1. [T{V}; Ainf]
			2. [[[D Pekka] [ei T{V}]]; Ainf]
		Exploring solution number (1) =[T{V} Ainf]
			T{V} cannot be opened.
			=[[D kenen] [[D Pekka] [ei [T{V} Ainf]]]]

12.

		Consume "nukku"

		[[D kenen] [[D Pekka] [ei [T{V} Ainf]]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*nukku]
			=[[D kenen] [[D Pekka] [ei [T{V} Ainf{V}]]]]

13.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D kenen] [[D Pekka] [ei [T{V} Ainf{V}]]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla
				Avoid Neg/finP as SPEC, malla
				An EPP-head "Ainf" lacks specifier D that it requires.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [[D Pekka] [ei [T [[D Pekka] [käske [Ainf nukku]]]]]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC, malla
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				An EPP-head "Ainf" lacks specifier D that it requires.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [ei [T [käske [Ainf nukku]]]] as left branch because it constitutes illicit structure.
				An EPP-head "käske" lacks specifier D that it requires.
				An EPP-head "Ainf" lacks specifier D that it requires.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [T [käske [Ainf nukku]]] as left branch because it constitutes illicit structure.
		Ranking completed:
			1. [Ainf{V}; malla]
			2. [[T{V} Ainf{V}]; malla]
			3. [[[D kenen] [[D Pekka] [ei [T{V} Ainf{V}]]]]; malla]
			4. [[ei [T{V} Ainf{V}]]; malla]
			5. [[[D Pekka] [ei [T{V} Ainf{V}]]]; malla]
		Exploring solution number (1) =[Ainf{V} malla]
			Ainf{V} cannot be opened.
			=[[D kenen] [[D Pekka] [ei [T{V} [Ainf{V} malla]]]]]

14.

		Consume "virtaa"

		[[D kenen] [[D Pekka] [ei [T{V} [Ainf{V} malla]]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D kenen] [[D Pekka] [ei [T{V} [Ainf{V} malla{V}]]]]]

15.
	>>>	Trying candidate parse [[D kenen] [[D Pekka] [ei [T{V} [Ainf{V} malla{V}]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kenen] [[D Pekka] [ei [T{V} [Ainf{V} malla{V}]]]]].
				Extracted head "käske" and reconstructed it = [[D kenen] [[D Pekka] [ei [T [käske [Ainf{V} malla{V}]]]]]]
				Extracted head "nukku" and reconstructed it = [[D kenen] [[D Pekka] [ei [T [käske [Ainf [nukku malla{V}]]]]]]]
				Extracted head "virtaa" from malla and created [[D kenen] [[D Pekka] [ei [T [käske [Ainf [nukku [malla virtaa]]]]]]]]
			Dropping floaters...
				[D kenen] failed to tail [!COMP:*][PHI:0]
				<D kenen> was made an adjunct.
				Floater <D kenen> dropped.
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<malla virtaa> was made an adjunct.
				= [<D kenen> [[D Pekka] [ei [T [käske [<D kenen> [Ainf [nukku <malla virtaa>]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				New {'WH'} head was spawned due to the occurrence of multiple specifiers at ei
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of käske
				<DP>:1 will undergo A-reconstruction (form of Agree).
				Criterial features {'WH'} copied to ['INF', 'A/inf/INF', 'A/inf']
			= [<D kenen> [uWH [[D Pekka] [ei [T [[D Pekka] [käske [<D kenen> [Ainf [<D kenen> [nukku <malla virtaa>]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D kenen>:1 [uWH [[D Pekka]:2 [ei [T [(DP):2 [käske [<DP>:1 [Ainf [<DP>:1 [nukku <malla virtaa>]]]]]]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 15/159 operations) <------------------------------------
		Solution:
		[<D kenen> [uWH [[D Pekka] [ei [T [[D Pekka] [käske [<D kenen> [Ainf [<D kenen> [nukku <malla virtaa>]]]]]]]]]]]
		Grammar: [<D kenen>:1 [uWH [[D Pekka]:2 [ei [T [(DP):2 [käske [<DP>:1 [Ainf [<DP>:1 [nukku <malla virtaa>]]]]]]]]]]]
		Spellout iWHP = [DP:1 [iWH [DP:2 [Neg/fin [ [__:2 [V [__:1 [ [__:1 [V ADVP]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A', 'null']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '!SPEC:uWH', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/A/inf/INF/INF/uWH', 'CAT:A/inf/INF', 'CAT:INF', 'CAT:uWH', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A', 'null']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '!SPEC:uWH', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/A/inf/INF/INF/uWH', 'CAT:A/inf/INF', 'CAT:INF', 'CAT:uWH', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
kenen:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:whose', 'PF:kenen', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
kenen: [N, D]
uWH: [iWH]
D: [D, iWH]
Pekka: [N, D, iWH]
ei: [Neg/fin, iWH]
T: [, Neg/fin, iWH]
(D): [D, , Neg/fin, iWH]
(N): [N, D, , Neg/fin, iWH]
käske: [V, , Neg/fin, iWH]
(D): [D, V, , Neg/fin, iWH]
(N): [N, D, V, , Neg/fin, iWH]
Ainf: [, V, , Neg/fin, iWH]
(D): [D, , V, , Neg/fin, iWH]
(N): [N, D, , V, , Neg/fin, iWH]
nukku: [V, , V, , Neg/fin, iWH]
malla: [ADV, V, , V, , Neg/fin, iWH]
virtaa: [V, ADV, V, , V, , Neg/fin, iWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 45
['mitä', 'Pekka', 'käski', 'heidän', 'ihailla', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$par', '$wh', '$D', 'mitä-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'CAT:WH', '-', 'ABAR:WH', '-COMP:ADV', '-COMP:C/fin', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
			=D

4.

		Consume "mitä"

		D + mitä
			Filtering out impossible merge sites...
			Sink "mitä" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mitä]
			=D{N}

5.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D mitä] D]

7.

		Consume "Pekka"

		[[D mitä] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D mitä] D{N}]

8.

		Next word contains multiple morphemes ['$T/fin', 'käske-']

		Consume "T"

		[[D mitä] D{N}] + T
			Filtering out impossible merge sites...
				Reject [[[D mitä] <D Pekka>] T] due to bad left branch.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D mitä] [[D Pekka] T]]

9.

		Consume "käske"

		[[D mitä] [[D Pekka] T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D mitä] [[D Pekka] T{V}]]

10.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D mitä] [[D Pekka] T{V}]]

11.

		Adding inflectional features {'TAIL:PHI:0,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D mitä] [[D Pekka] T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D
				[D mitä]" has no thematic role
				Avoid [[D mitä] [uWH [<D Pekka> [T [<D Pekka> käske]]]]] as left branch because it constitutes illicit structure.
				Avoid T/finP as SPEC for D
				Avoid [T{V} D] due to local agreement failure.
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] T{V}]; D]
			3. [[[D mitä] [[D Pekka] T{V}]]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D mitä] [[D Pekka] [T{V} D]]]

12.

		Consume "heidän"

		[[D mitä] [[D Pekka] [T{V} D]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D mitä] [[D Pekka] [T{V} D{N}]]]

13.

		Next word contains multiple morphemes ['$-ta', '$v', 'ihaile-']

		Consume "Ainf"

		[[D mitä] [[D Pekka] [T{V} D{N}]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D mitä] [uWH [<D Pekka> [T [<D Pekka> [käske <D heidän>]]]]]] Ainf] due to bad left branch.
				Reject [[<D Pekka> [T [<D Pekka> [käske <D heidän>]]]] Ainf] due to bad left branch.
				Reject [[T [käske <D heidän>]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf]]]]

14.

		Consume "v"

		[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf{v}]]]]

15.

		Consume "ihailee"

		[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf{v}]]]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*ihailee]
			=[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]]

16.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]] + malla
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [v ihailee]]]]]]]] malla] due to bad left branch.
				Reject [[T [käske [[D heidän] [Ainf [[D heidän] [v ihailee]]]]]] malla] due to bad left branch.
				Reject [[[D heidän] [Ainf [[D heidän] [v ihailee]]]] malla] due to bad left branch.
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla
				Avoid Ainf{v,V} due to tail-head failure.
		Ranking completed:
			1. [Ainf{v,V}; malla]
			2. [[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]]; malla]
		Exploring solution number (1) =[Ainf{v,V} malla]
			Ainf{v,V} cannot be opened.
			=[[D mitä] [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} malla]]]]]

17.

		Consume "virtaa"

		[[D mitä] [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} malla]]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D mitä] [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} malla{V}]]]]]

18.
	>>>	Trying candidate parse [[D mitä] [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} malla{V}]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D mitä] [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} malla{V}]]]]].
				Extracted head "käske" and reconstructed it = [[D mitä] [[D Pekka] [T [käske [[D heidän] [Ainf{v,V} malla{V}]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D mitä] [[D Pekka] [T [käske [[D heidän] [Ainf [v{V} malla{V}]]]]]]]
				Extracted head "ihailee" and reconstructed it = [[D mitä] [[D Pekka] [T [käske [[D heidän] [Ainf [v [ihailee malla{V}]]]]]]]]
				Extracted head "virtaa" from malla and created [[D mitä] [[D Pekka] [T [käske [[D heidän] [Ainf [v [ihailee [malla virtaa]]]]]]]]]
			Dropping floaters...
				[D mitä] failed to tail [!COMP:*][-PHI]
				<D mitä> was made an adjunct.
				Floater <D mitä> dropped.
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				<malla virtaa> was made an adjunct.
				= [<D mitä> [<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [v [<D mitä> [ihailee <malla virtaa>]]]]]]]]]]
			Dropping A-/A-bar movement.
				New {'WH'} head was spawned due to the occurrence of multiple specifiers at T
				[D heidän] will undergo A-reconstruction (form of Agree).
			= [<D mitä> [uWH [<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [v [<D mitä> [ihailee <malla virtaa>]]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D mitä>:1 [uWH [<D Pekka>:2 [T [<DP>:2 [käske [[D heidän]:3 [Ainf [(DP):3 [v [<DP>:1 [ihailee <malla virtaa>]]]]]]]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 18/163 operations) <------------------------------------
		Solution:
		[<D mitä> [uWH [<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [v [<D mitä> [ihailee <malla virtaa>]]]]]]]]]]]]
		Grammar: [<D mitä>:1 [uWH [<D Pekka>:2 [T [<DP>:2 [käske [[D heidän]:3 [Ainf [(DP):3 [v [<DP>:1 [ihailee <malla virtaa>]]]]]]]]]]]]
		Spellout iWHP = [DP:1 [iWH [DP:2 [T/fin [__:2 [V [DP:3 [ [__:3 [v [__:1 [V ADVP]]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
mitä: [N, D]
uWH: [iWH]
D: [D, iWH]
Pekka: [N, D, iWH]
T: [T/fin, iWH]
(D): [D, T/fin, iWH]
(N): [N, D, T/fin, iWH]
käske: [V, T/fin, iWH]
D: [D, V, T/fin, iWH]
heidän: [N, D, V, T/fin, iWH]
Ainf: [, V, T/fin, iWH]
(D): [D, , V, T/fin, iWH]
(N): [N, D, , V, T/fin, iWH]
v: [v, , V, T/fin, iWH]
(D): [D, v, , V, T/fin, iWH]
(N): [N, D, v, , V, T/fin, iWH]
ihailee: [V, v, , V, T/fin, iWH]
malla: [ADV, V, v, , V, T/fin, iWH]
virtaa: [V, ADV, V, v, , V, T/fin, iWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 46
['mitä', 'Pekka', 'ei', 'käskenyt', 'heidän', 'ihailla', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$par', '$wh', '$D', 'mitä-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'CAT:WH', '-', 'ABAR:WH', '-COMP:ADV', '-COMP:C/fin', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
			=D

4.

		Consume "mitä"

		D + mitä
			Filtering out impossible merge sites...
			Sink "mitä" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mitä]
			=D{N}

5.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D mitä] D]

7.

		Consume "Pekka"

		[[D mitä] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D mitä] D{N}]

8.

		Consume "ei"

		[[D mitä] D{N}] + ei
			Filtering out impossible merge sites...
				Reject [[[D mitä] <D Pekka>] ei] due to bad left branch.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D mitä] [[D Pekka] ei]]

9.

		Next word contains multiple morphemes ['$T', 'käske-']

		Consume "T"

		[[D mitä] [[D Pekka] ei]] + T
			Filtering out impossible merge sites...
				Reject [[[D mitä] [[D Pekka] ei]] T] due to bad left branch.
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D mitä] [[D Pekka] [ei T]]]

10.

		Consume "käske"

		[[D mitä] [[D Pekka] [ei T]]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D mitä] [[D Pekka] [ei T{V}]]]

11.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D mitä] [[D Pekka] [ei T{V}]]]

12.

		Adding inflectional features {'TAIL:PHI:0,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D mitä] [[D Pekka] [ei T{V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D
				[D mitä]" has no thematic role
				Avoid [[D mitä] [uWH [[D Pekka] [ei [T [[D Pekka] käske]]]]]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D
				Avoid Neg/finP as SPEC for D
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T käske]] as left branch because it constitutes illicit structure.
				Avoid [T{V} D] due to local agreement failure.
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] [ei T{V}]]; D]
			3. [[ei T{V}]; D]
			4. [[[D mitä] [[D Pekka] [ei T{V}]]]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D mitä] [[D Pekka] [ei [T{V} D]]]]

13.

		Consume "heidän"

		[[D mitä] [[D Pekka] [ei [T{V} D]]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D mitä] [[D Pekka] [ei [T{V} D{N}]]]]

14.

		Next word contains multiple morphemes ['$-ta', '$v', 'ihaile-']

		Consume "Ainf"

		[[D mitä] [[D Pekka] [ei [T{V} D{N}]]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D mitä] [uWH [[D Pekka] [ei [T [[D Pekka] [käske [D heidän]]]]]]]] Ainf] due to bad left branch.
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [D heidän]]]]]] Ainf] due to bad left branch.
				Reject [[ei [T [käske [D heidän]]]] Ainf] due to bad left branch.
				Reject [[T [käske [D heidän]]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]]

15.

		Consume "v"

		[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]]]

16.

		Consume "ihailee"

		[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*ihailee]
			=[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]]

17.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]] + malla
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [[D heidän] [Ainf [[D heidän] [v ihailee]]]]]]]]] malla] due to bad left branch.
				Reject [[ei [T [käske [[D heidän] [Ainf [[D heidän] [v ihailee]]]]]]] malla] due to bad left branch.
				Reject [[T [käske [[D heidän] [Ainf [[D heidän] [v ihailee]]]]]] malla] due to bad left branch.
				Reject [[[D heidän] [Ainf [[D heidän] [v ihailee]]]] malla] due to bad left branch.
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla
		Ranking completed:
			1. [Ainf{v,V}; malla]
			2. [[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]]; malla]
		Exploring solution number (1) =[Ainf{v,V} malla]
			Ainf{v,V} cannot be opened.
			=[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} malla]]]]]]

18.

		Consume "virtaa"

		[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} malla]]]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} malla{V}]]]]]]

19.
	>>>	Trying candidate parse [[D mitä] [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} malla{V}]]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D mitä] [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} malla{V}]]]]]].
				Extracted head "käske" and reconstructed it = [[D mitä] [[D Pekka] [ei [T [käske [[D heidän] [Ainf{v,V} malla{V}]]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D mitä] [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v{V} malla{V}]]]]]]]]
				Extracted head "ihailee" and reconstructed it = [[D mitä] [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [ihailee malla{V}]]]]]]]]]
				Extracted head "virtaa" from malla and created [[D mitä] [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [ihailee [malla virtaa]]]]]]]]]]
			Dropping floaters...
				[D mitä] failed to tail [!COMP:*][-PHI]
				<D mitä> was made an adjunct.
				Floater <D mitä> dropped.
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<malla virtaa> was made an adjunct.
				= [<D mitä> [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [<D mitä> [ihailee <malla virtaa>]]]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				New {'WH'} head was spawned due to the occurrence of multiple specifiers at ei
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:2 from memory buffer into Spec of käske
				[D heidän] will undergo A-reconstruction (form of Agree).
			= [<D mitä> [uWH [[D Pekka] [ei [T [[D Pekka] [käske [[D heidän] [Ainf [[D heidän] [v [<D mitä> [ihailee <malla virtaa>]]]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D mitä>:1 [uWH [[D Pekka]:2 [ei [T [(DP):2 [käske [[D heidän]:4 [Ainf [(DP):4 [v [<DP>:1 [ihailee <malla virtaa>]]]]]]]]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 19/185 operations) <------------------------------------
		Solution:
		[<D mitä> [uWH [[D Pekka] [ei [T [[D Pekka] [käske [[D heidän] [Ainf [[D heidän] [v [<D mitä> [ihailee <malla virtaa>]]]]]]]]]]]]]
		Grammar: [<D mitä>:1 [uWH [[D Pekka]:2 [ei [T [(DP):2 [käske [[D heidän]:3 [Ainf [(DP):3 [v [<DP>:1 [ihailee <malla virtaa>]]]]]]]]]]]]]
		Spellout iWHP = [DP:1 [iWH [DP:2 [Neg/fin [ [__:2 [V [DP:3 [ [__:3 [v [__:1 [V ADVP]]]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
ihailee:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
mitä: [N, D]
uWH: [iWH]
D: [D, iWH]
Pekka: [N, D, iWH]
ei: [Neg/fin, iWH]
T: [, Neg/fin, iWH]
(D): [D, , Neg/fin, iWH]
(N): [N, D, , Neg/fin, iWH]
käske: [V, , Neg/fin, iWH]
D: [D, V, , Neg/fin, iWH]
heidän: [N, D, V, , Neg/fin, iWH]
Ainf: [, V, , Neg/fin, iWH]
(D): [D, , V, , Neg/fin, iWH]
(N): [N, D, , V, , Neg/fin, iWH]
v: [v, , V, , Neg/fin, iWH]
(D): [D, v, , V, , Neg/fin, iWH]
(N): [N, D, v, , V, , Neg/fin, iWH]
ihailee: [V, v, , V, , Neg/fin, iWH]
malla: [ADV, V, v, , V, , Neg/fin, iWH]
virtaa: [V, ADV, V, v, , V, , Neg/fin, iWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 47
['mitä', 'Pekka', 'käski', 'heidän', 'antaa', 'Merjalle', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$par', '$wh', '$D', 'mitä-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'CAT:WH', '-', 'ABAR:WH', '-COMP:ADV', '-COMP:C/fin', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
			=D

4.

		Consume "mitä"

		D + mitä
			Filtering out impossible merge sites...
			Sink "mitä" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mitä]
			=D{N}

5.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D mitä] D]

7.

		Consume "Pekka"

		[[D mitä] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D mitä] D{N}]

8.

		Next word contains multiple morphemes ['$T/fin', 'käske-']

		Consume "T"

		[[D mitä] D{N}] + T
			Filtering out impossible merge sites...
				Reject [[[D mitä] <D Pekka>] T] due to bad left branch.
		Exploring solution number (1) =[D{N} T]
			D was opened.
			=[[D mitä] [[D Pekka] T]]

9.

		Consume "käske"

		[[D mitä] [[D Pekka] T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D mitä] [[D Pekka] T{V}]]

10.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D mitä] [[D Pekka] T{V}]]

11.

		Adding inflectional features {'TAIL:PHI:0,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D mitä] [[D Pekka] T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D
				[D mitä]" has no thematic role
				Avoid [[D mitä] [uWH [<D Pekka> [T [<D Pekka> käske]]]]] as left branch because it constitutes illicit structure.
				Avoid T/finP as SPEC for D
				Avoid [T{V} D] due to local agreement failure.
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] T{V}]; D]
			3. [[[D mitä] [[D Pekka] T{V}]]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D mitä] [[D Pekka] [T{V} D]]]

12.

		Consume "heidän"

		[[D mitä] [[D Pekka] [T{V} D]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D mitä] [[D Pekka] [T{V} D{N}]]]

13.

		Next word contains multiple morphemes ['$-ta', '$v', 'anta-']

		Consume "Ainf"

		[[D mitä] [[D Pekka] [T{V} D{N}]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D mitä] [uWH [<D Pekka> [T [<D Pekka> [käske <D heidän>]]]]]] Ainf] due to bad left branch.
				Reject [[<D Pekka> [T [<D Pekka> [käske <D heidän>]]]] Ainf] due to bad left branch.
				Reject [[T [käske <D heidän>]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf]]]]

14.

		Consume "v"

		[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf{v}]]]]

15.

		Consume "antaa"

		[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf{v}]]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*antaa]
			=[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]]

16.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]] + P(lle)
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [v antaa]]]]]]]] P(lle)] due to bad left branch.
				Reject [[T [käske [[D heidän] [Ainf [[D heidän] [v antaa]]]]]] P(lle)] due to bad left branch.
				Reject [[[D heidän] [Ainf [[D heidän] [v antaa]]]] P(lle)] due to bad left branch.
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle)
				Prioritize [antaa P(lle)] due to complement selection for [P]
		Ranking completed:
			1. [Ainf{v,V}; P(lle)]
			2. [[[D mitä] [[D Pekka] [T{V} [[D heidän] Ainf{v,V}]]]]; P(lle)]
		Exploring solution number (1) =[Ainf{v,V} P(lle)]
			Ainf{v,V} cannot be opened.
			=[[D mitä] [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} P(lle)]]]]]

17.

		Consume "D"

		[[D mitä] [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} P(lle)]]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D mitä] [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} P(lle){D}]]]]]

18.

		Consume "Merja-"

		[[D mitä] [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} P(lle){D}]]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D mitä] [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} P(lle){D,N}]]]]]

19.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D mitä] [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} P(lle){D,N}]]]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla
				Avoid T/finP as SPEC, malla
				Avoid T/finP as SPEC, malla
				An EPP-head "T" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T [käske [[D heidän] [Ainf [[D heidän] [v [antaa [P(lle) [D Merja-]]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[D heidän] [Ainf{v,V} P(lle){D,N}]] due to tail-head failure.
				An EPP-head "Ainf" lacks specifier D that it requires.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [antaa [P(lle) [D Merja-]]]]] as left branch because it constitutes illicit structure.
				Avoid [Ainf{v,V} P(lle){D,N}] due to tail-head failure.
				Avoid [P(lle){D,N} malla] due to complement selection against [ADV]
				Avoid [Merja- malla] due to complement selection against [ADV]
				Avoid P(lle){D,N} due to tail-head failure.
			P(lle) was opened.
				Prioritize P(lle){D,N} because all solutions were negative.
		Ranking completed:
			1. [P(lle){D,N}; malla]
			2. [[[D heidän] [Ainf{v,V} P(lle){D,N}]]; malla]
			3. [[[D Pekka] [T{V} [[D heidän] [Ainf{v,V} P(lle){D,N}]]]]; malla]
			4. [[[D mitä] [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} P(lle){D,N}]]]]]; malla]
			5. [[Ainf{v,V} P(lle){D,N}]; malla]
			6. [[T{V} [[D heidän] [Ainf{v,V} P(lle){D,N}]]]; malla]
		Exploring solution number (1) =[P(lle){D,N} malla]
			P(lle) was opened.
			=[[D mitä] [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[P(lle) [D Merja-]] malla]]]]]]

20.

		Consume "virtaa"

		[[D mitä] [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[P(lle) [D Merja-]] malla]]]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D mitä] [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[P(lle) [D Merja-]] malla{V}]]]]]]

21.
	>>>	Trying candidate parse [[D mitä] [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[P(lle) [D Merja-]] malla{V}]]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D mitä] [[D Pekka] [T{V} [[D heidän] [Ainf{v,V} [[P(lle) [D Merja-]] malla{V}]]]]]].
				Extracted head "käske" and reconstructed it = [[D mitä] [[D Pekka] [T [käske [[D heidän] [Ainf{v,V} [[P(lle) [D Merja-]] malla{V}]]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D mitä] [[D Pekka] [T [käske [[D heidän] [Ainf [v{V} [[P(lle) [D Merja-]] malla{V}]]]]]]]]
				Extracted head "antaa" and reconstructed it = [[D mitä] [[D Pekka] [T [käske [[D heidän] [Ainf [v [antaa [[P(lle) [D Merja-]] malla{V}]]]]]]]]]
				Extracted head "virtaa" from malla and created [[D mitä] [[D Pekka] [T [käske [[D heidän] [Ainf [v [antaa [[P(lle) [D Merja-]] [malla virtaa]]]]]]]]]]
			Dropping floaters...
				[D mitä] failed to tail [!COMP:*][-PHI]
				<D mitä> was made an adjunct.
				Floater <D mitä> dropped.
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped.
				<malla virtaa> was made an adjunct.
				= [<D mitä> [<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [v [<D mitä> [antaa [[P(lle) [D Merja-]] <malla virtaa>]]]]]]]]]]]
			Dropping A-/A-bar movement.
				New {'WH'} head was spawned due to the occurrence of multiple specifiers at T
				[D heidän] will undergo A-reconstruction (form of Agree).
			= [<D mitä> [uWH [<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [v [<D mitä> [antaa [[P(lle) [D Merja-]] <malla virtaa>]]]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D mitä>:1 [uWH [<D Pekka>:2 [T [<DP>:2 [käske [[D heidän]:3 [Ainf [(DP):3 [v [<DP>:1 [antaa [[P(lle) [D Merja-]] <malla virtaa>]]]]]]]]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 21/209 operations) <------------------------------------
		Solution:
		[<D mitä> [uWH [<D Pekka> [T [<D Pekka> [käske [[D heidän] [Ainf [[D heidän] [v [<D mitä> [antaa [[P(lle) [D Merja-]] <malla virtaa>]]]]]]]]]]]]]
		Grammar: [<D mitä>:1 [uWH [<D Pekka>:2 [T [<DP>:2 [käske [[D heidän]:3 [Ainf [(DP):3 [v [<DP>:1 [antaa [[P(lle) [D Merja-]] <malla virtaa>]]]]]]]]]]]]]
		Spellout iWHP = [DP:1 [iWH [DP:2 [T/fin [__:2 [V [DP:3 [ [__:3 [v [__:1 [V [[P [D N]] ADVP]]]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
mitä: [N, D]
uWH: [iWH]
D: [D, iWH]
Pekka: [N, D, iWH]
T: [T/fin, iWH]
(D): [D, T/fin, iWH]
(N): [N, D, T/fin, iWH]
käske: [V, T/fin, iWH]
D: [D, V, T/fin, iWH]
heidän: [N, D, V, T/fin, iWH]
Ainf: [, V, T/fin, iWH]
(D): [D, , V, T/fin, iWH]
(N): [N, D, , V, T/fin, iWH]
v: [v, , V, T/fin, iWH]
(D): [D, v, , V, T/fin, iWH]
(N): [N, D, v, , V, T/fin, iWH]
antaa: [V, v, , V, T/fin, iWH]
P(lle): [P, V, v, , V, T/fin, iWH]
D: [D, P, V, v, , V, T/fin, iWH]
Merja-: [N, D, P, V, v, , V, T/fin, iWH]
malla: [ADV, V, v, , V, T/fin, iWH]
virtaa: [V, ADV, V, v, , V, T/fin, iWH]

			Checking if the sentence is ambiguous...


\========================================================================
# 48
['mitä', 'Pekka', 'ei', 'käskenyt', 'heidän', 'antaa', 'Merjalle', 'virtaamalla']


			=None

1.

		Next word contains multiple morphemes ['$par', '$wh', '$D', 'mitä-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$wh"

			=None

2.
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'CAT:WH', '-', 'ABAR:WH', '-COMP:ADV', '-COMP:C/fin', 'LANG:FI', 'TAIL:!COMP:*,-PHI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
			=D

4.

		Consume "mitä"

		D + mitä
			Filtering out impossible merge sites...
			Sink "mitä" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*mitä]
			=D{N}

5.

		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:T/fin,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'TAIL:CAT:T/fin,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:T/fin,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D mitä] D]

7.

		Consume "Pekka"

		[[D mitä] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D mitä] D{N}]

8.

		Consume "ei"

		[[D mitä] D{N}] + ei
			Filtering out impossible merge sites...
				Reject [[[D mitä] <D Pekka>] ei] due to bad left branch.
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D mitä] [[D Pekka] ei]]

9.

		Next word contains multiple morphemes ['$T', 'käske-']

		Consume "T"

		[[D mitä] [[D Pekka] ei]] + T
			Filtering out impossible merge sites...
				Reject [[[D mitä] [[D Pekka] ei]] T] due to bad left branch.
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D mitä] [[D Pekka] [ei T]]]

10.

		Consume "käske"

		[[D mitä] [[D Pekka] [ei T]]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D mitä] [[D Pekka] [ei T{V}]]]

11.

		Next word contains multiple morphemes ['$gen', '$D', 'heidän-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:PHI:0,!COMP:*'] into working memory.

		Consume "$D"

			=[[D mitä] [[D Pekka] [ei T{V}]]]

12.

		Adding inflectional features {'TAIL:PHI:0,!COMP:*', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*']

		Consume "D"

		[[D mitä] [[D Pekka] [ei T{V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D
				[D mitä]" has no thematic role
				Avoid [[D mitä] [uWH [[D Pekka] [ei [T [[D Pekka] käske]]]]]] as left branch because it constitutes illicit structure.
				Avoid Neg/finP as SPEC for D
				Avoid Neg/finP as SPEC for D
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T käske]] as left branch because it constitutes illicit structure.
				Avoid [T{V} D] due to local agreement failure.
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] [ei T{V}]]; D]
			3. [[ei T{V}]; D]
			4. [[[D mitä] [[D Pekka] [ei T{V}]]]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D mitä] [[D Pekka] [ei [T{V} D]]]]

13.

		Consume "heidän"

		[[D mitä] [[D Pekka] [ei [T{V} D]]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D mitä] [[D Pekka] [ei [T{V} D{N}]]]]

14.

		Next word contains multiple morphemes ['$-ta', '$v', 'anta-']

		Consume "Ainf"

		[[D mitä] [[D Pekka] [ei [T{V} D{N}]]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[[D mitä] [uWH [[D Pekka] [ei [T [[D Pekka] [käske [D heidän]]]]]]]] Ainf] due to bad left branch.
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [D heidän]]]]]] Ainf] due to bad left branch.
				Reject [[ei [T [käske [D heidän]]]] Ainf] due to bad left branch.
				Reject [[T [käske [D heidän]]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]]

15.

		Consume "v"

		[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]]]

16.

		Consume "antaa"

		[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*antaa]
			=[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]]

17.

		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]] + P(lle)
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [ei [T [[D Pekka] [käske [[D heidän] [Ainf [[D heidän] [v antaa]]]]]]]]] P(lle)] due to bad left branch.
				Reject [[ei [T [käske [[D heidän] [Ainf [[D heidän] [v antaa]]]]]]] P(lle)] due to bad left branch.
				Reject [[T [käske [[D heidän] [Ainf [[D heidän] [v antaa]]]]]] P(lle)] due to bad left branch.
				Reject [[[D heidän] [Ainf [[D heidän] [v antaa]]]] P(lle)] due to bad left branch.
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, P(lle)
				Prioritize [antaa P(lle)] due to complement selection for [P]
		Ranking completed:
			1. [Ainf{v,V}; P(lle)]
			2. [[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]]; P(lle)]
		Exploring solution number (1) =[Ainf{v,V} P(lle)]
			Ainf{v,V} cannot be opened.
			=[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} P(lle)]]]]]]

18.

		Consume "D"

		[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} P(lle)]]]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} P(lle){D}]]]]]]

19.

		Consume "Merja-"

		[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} P(lle){D}]]]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} P(lle){D,N}]]]]]]

20.

		Next word contains multiple morphemes ['$malla', 'virtaa_pro-']

		Consume "malla"

		[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} P(lle){D,N}]]]]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla
				Avoid Neg/finP as SPEC, malla
				Avoid Neg/finP as SPEC, malla
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T [käske [[D heidän] [Ainf [[D heidän] [v [antaa [P(lle) [D Merja-]]]]]]]]]] as left branch because it constitutes illicit structure.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T [käske [[D heidän] [Ainf [[D heidän] [v [antaa [P(lle) [D Merja-]]]]]]]]] as left branch because it constitutes illicit structure.
				An EPP-head "Ainf" lacks specifier D that it requires.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [antaa [P(lle) [D Merja-]]]]] as left branch because it constitutes illicit structure.
				Avoid [P(lle){D,N} malla] due to complement selection against [ADV]
				Avoid [Merja- malla] due to complement selection against [ADV]
		Ranking completed:
			1. [[[D heidän] [Ainf{v,V} P(lle){D,N}]]; malla]
			2. [[Ainf{v,V} P(lle){D,N}]; malla]
			3. [[T{V} [[D heidän] [Ainf{v,V} P(lle){D,N}]]]; malla]
			4. [[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} P(lle){D,N}]]]]]; malla]
			5. [[[D mitä] [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} P(lle){D,N}]]]]]]; malla]
			6. [P(lle){D,N}; malla]
			7. [[ei [T{V} [[D heidän] [Ainf{v,V} P(lle){D,N}]]]]; malla]
		Exploring solution number (1) =[[[D heidän] [Ainf{v,V} P(lle){D,N}]] malla]
			Reconstructing head movement for [[D heidän] [Ainf{v,V} P(lle){D,N}]].
				Extracted head "v{V}" and reconstructed it = [[D heidän] [Ainf [v{V} P(lle){D,N}]]]
				Extracted head "antaa" and reconstructed it = [[D heidän] [Ainf [v [antaa P(lle){D,N}]]]]
				Extracted head "D{N}" from P(lle) and created [[D heidän] [Ainf [v [antaa [P(lle) D{N}]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D heidän] [Ainf [v [antaa [P(lle) [D Merja-]]]]]]
			Dropping floaters...
				= [[D heidän] [Ainf [v [antaa [P(lle) [D Merja-]]]]]]
			Dropping A-/A-bar movement.
				[D heidän] will undergo A-reconstruction (form of Agree).
			=[[D mitä] [[D Pekka] [ei [T{V} [[[D heidän]:1 [Ainf [(DP):1 [v [antaa [P(lle) [D Merja-]]]]]]] malla]]]]]

21.

		Consume "virtaa"

		[[D mitä] [[D Pekka] [ei [T{V} [[[D heidän] [Ainf [[D heidän] [v [antaa [P(lle) [D Merja-]]]]]]] malla]]]]] + virtaa
			Filtering out impossible merge sites...
			Sink "virtaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*virtaa]
			=[[D mitä] [[D Pekka] [ei [T{V} [[[D heidän]:1 [Ainf [(DP):1 [v [antaa [P(lle) [D Merja-]]]]]]] malla{V}]]]]]

22.
	>>>	Trying candidate parse [[D mitä] [[D Pekka] [ei [T{V} [[[D heidän] [Ainf [[D heidän] [v [antaa [P(lle) [D Merja-]]]]]]] malla{V}]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D mitä] [[D Pekka] [ei [T{V} [[[D heidän]:1 [Ainf [(DP):1 [v [antaa [P(lle) [D Merja-]]]]]]] malla{V}]]]]].
				Extracted head "käske" and reconstructed it = [[D mitä] [[D Pekka] [ei [T [käske [[[D heidän]:1 [Ainf [(DP):1 [v [antaa [P(lle) [D Merja-]]]]]]] malla{V}]]]]]]
				Extracted head "virtaa" from malla and created [[D mitä] [[D Pekka] [ei [T [käske [[[D heidän]:1 [Ainf [(DP):1 [v [antaa [P(lle) [D Merja-]]]]]]] [malla virtaa]]]]]]]
			Dropping floaters...
				[D mitä] failed to tail [!COMP:*][-PHI]
				[D Pekka] failed to tail [!COMP:*][CAT:T/fin]
				<malla virtaa> was made an adjunct.
				= [[D mitä] [[D Pekka] [ei [T [käske [[[D heidän] [Ainf [[D heidän] [v [antaa [P(lle) [D Merja-]]]]]]] <malla virtaa>]]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "ei".
				Moving "D mitä " into memory buffer from SPEC of "ei".
				New {'WH'} head was spawned due to the occurrence of multiple specifiers at ei
				Memory buffer: [[D N], [D N]]
				Dropping constituent [D Pekka]:1 from memory buffer into Spec of käske
				Dropping constituent [D mitä]:3 from memory buffer into Spec of antaa
			= [[D mitä] [uWH [[D Pekka] [ei [T [[D Pekka] [käske [[[D heidän] [Ainf [[D heidän] [v [[D mitä] [antaa [P(lle) [D Merja-]]]]]]]] <malla virtaa>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[D mitä]:3 [uWH [[D Pekka]:1 [ei [T [(DP):1 [käske [[[D heidän]:1 [Ainf [(DP):1 [v [(DP):3 [antaa [P(lle) [D Merja-]]]]]]]] <malla virtaa>]]]]]]]] into LF...
				(D)[ABAR:WH] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 22/236 operations) <------------------------------------
		Solution:
		[[D mitä] [uWH [[D Pekka] [ei [T [[D Pekka] [käske [[[D heidän] [Ainf [[D heidän] [v [[D mitä] [antaa [P(lle) [D Merja-]]]]]]]] <malla virtaa>]]]]]]]]
		Grammar: [[D mitä]:1 [uWH [[D Pekka]:2 [ei [T [(DP):2 [käske [[[D heidän]:2 [Ainf [(DP):2 [v [(DP):1 [antaa [P(lle) [D Merja-]]]]]]]] <malla virtaa>]]]]]]]]
		Spellout iWHP = [DP:1 [iWH [DP:2 [Neg/fin [ [__:2 [V [[DP:2 [ [__:2 [v [__:1 [V [P [D N]]]]]]]] ADVP]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A']
uWH:['!COMP:*', '!SPEC:uWH', '-SPEC:T/fin', 'CAT:iWH', 'CAT:iWH/uWH', 'CAT:uWH', 'LANG:FI', 'PF:uWH', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'LANG:FI', 'LF:not', 'PF:ei']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:PHI:0,!COMP:*', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:WH', 'CAT:D', 'CAT:D/WH', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
mitä:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:what', 'PF:mitä', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
virtaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:flow', 'PF:virtaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
mitä: [N, D]
uWH: [iWH]
D: [D, iWH]
Pekka: [N, D, iWH]
ei: [Neg/fin, iWH]
T: [, Neg/fin, iWH]
(D): [D, , Neg/fin, iWH]
(N): [N, D, , Neg/fin, iWH]
käske: [V, , Neg/fin, iWH]
D: [D, V, , Neg/fin, iWH]
heidän: [N, D, V, , Neg/fin, iWH]
Ainf: [, V, , Neg/fin, iWH]
(D): [D, , V, , Neg/fin, iWH]
(N): [N, D, , V, , Neg/fin, iWH]
v: [v, , V, , Neg/fin, iWH]
(D): [D, v, , V, , Neg/fin, iWH]
(N): [N, D, v, , V, , Neg/fin, iWH]
antaa: [V, v, , V, , Neg/fin, iWH]
P(lle): [P, V, v, , V, , Neg/fin, iWH]
D: [D, P, V, v, , V, , Neg/fin, iWH]
Merja-: [N, D, P, V, v, , V, , Neg/fin, iWH]
malla: [ADV, V, , Neg/fin, iWH]
virtaa: [V, ADV, V, , Neg/fin, iWH]

			Checking if the sentence is ambiguous...
