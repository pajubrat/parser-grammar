

\========================================================================
# 1
['Pekka', 'antoi', 'kirjan', 'Merjalle']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:CAT:FIN,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

5.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] T/fin{v}]

6.

		Consume "antaa"

		[[D Pekka] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] T/fin{v,V}]

7.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] T/fin{v,V}]

8.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[D Pekka] [T/fin{v,V} D]]

9.

		Consume "kirja"

		[[D Pekka] [T/fin{v,V} D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [T/fin{v,V} D{N}]]

10.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [T/fin{v,V} D{N}]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				Avoid T/finP as SPEC, P(lle).
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D Pekka] [T/fin{v,V} D{N}]]; P(lle)]
			3. [[T/fin{v,V} D{N}]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [T/fin{v,V} [[D kirja] P(lle)]]]

11.

		Consume "D"

		[[D Pekka] [T/fin{v,V} [[D kirja] P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D}]]]

12.

		Consume "Merja-"

		[[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D,N}]]]

13.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D,N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D,N}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T/fin [v{V} [[D kirja] P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [T/fin [v [antaa [[D kirja] P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [T/fin [v [antaa [[D kirja] [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [T/fin [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:4 [T/fin [<DP>:4 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]
				= [<D Pekka> [T/fin [<D Pekka> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D Pekka>:4 [T/fin [<DP>:4 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [<D Pekka> [T/fin [<D Pekka> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:4 [T/fin [<DP>:4 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 13/122 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [v [V [[D N] PP]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 2
['Pekka#foc', 'antoi', 'kirjan', 'Merjalle']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'LANG:FI', 'TAIL:CAT:FIN,A/HEAD', 'ABAR:FOC', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

6.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] T/fin{v}]

7.

		Consume "antaa"

		[[D Pekka] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] T/fin{v,V}]

8.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] T/fin{v,V}]

9.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[D Pekka] [T/fin{v,V} D]]

10.

		Consume "kirja"

		[[D Pekka] [T/fin{v,V} D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [T/fin{v,V} D{N}]]

11.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [T/fin{v,V} D{N}]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				Avoid T/finP as SPEC, P(lle).
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D Pekka] [T/fin{v,V} D{N}]]; P(lle)]
			3. [[T/fin{v,V} D{N}]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [T/fin{v,V} [[D kirja] P(lle)]]]

12.

		Consume "D"

		[[D Pekka] [T/fin{v,V} [[D kirja] P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D}]]]

13.

		Consume "Merja-"

		[[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D,N}]]]

14.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D,N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D,N}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T/fin [v{V} [[D kirja] P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [T/fin [v [antaa [[D kirja] P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [T/fin [v [antaa [[D kirja] [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [T/fin [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:8 [T/fin [<DP>:8 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]
				= [<D Pekka> [T/fin [<D Pekka> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'FIN/T/fin', 'FIN', 'T/fin'}
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D Pekka>:8 [T/fin [<DP>:8 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [<D Pekka> [T/fin [<D Pekka> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:8 [T/fin [<DP>:8 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 14/129 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [v [V [[D N] PP]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 3
['Pekka', 'antoi', 'Merjalle', 'kirjan']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:CAT:FIN,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

5.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] T/fin{v}]

6.

		Consume "antaa"

		[[D Pekka] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] T/fin{v,V}]

7.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] T/fin{v,V}] + P(lle)
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v antaa]]]] P(lle)] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} P(lle)]
			T/fin{v,V} cannot be opened.
			=[[D Pekka] [T/fin{v,V} P(lle)]]

8.

		Consume "D"

		[[D Pekka] [T/fin{v,V} P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [T/fin{v,V} P(lle){D}]]

9.

		Consume "Merja-"

		[[D Pekka] [T/fin{v,V} P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [T/fin{v,V} P(lle){D,N}]]

10.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [T/fin{v,V} P(lle){D,N}]]

11.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] [T/fin{v,V} P(lle){D,N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [P(lle) [D Merja-]]]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
				Avoid P(lle){D,N} because it could break words.
		Ranking completed:
			1. [[[D Pekka] [T/fin{v,V} P(lle){D,N}]]; D]
			2. [[T/fin{v,V} P(lle){D,N}]; D]
			3. [P(lle){D,N}; D]
		Exploring solution number (1) =[[[D Pekka] [T/fin{v,V} P(lle){D,N}]] D]
			Reconstructing head movement for [[D Pekka] [T/fin{v,V} P(lle){D,N}]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T/fin [v{V} P(lle){D,N}]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [T/fin [v [antaa P(lle){D,N}]]]]
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [T/fin [v [antaa [P(lle) D{N}]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [T/fin [v [antaa [P(lle) [D Merja-]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:12 [T/fin [<DP>:12 [v [antaa [P(lle) [D Merja-]]]]]]]
				= [<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]]
			Dropping A-/A-bar movement.
			=[[<D Pekka>:12 [T/fin [<DP>:12 [v [antaa [P(lle) [D Merja-]]]]]]] D]

12.

		Consume "kirja"

		[[<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[<D Pekka>:12 [T/fin [<DP>:12 [v [antaa [P(lle) [D Merja-]]]]]]] D{N}]

13.
	>>>	Trying candidate parse [[<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]] D{N}] (1.)
		Reconstructing...
			Reconstructing head movement for [[<D Pekka>:12 [T/fin [<DP>:12 [v [antaa [P(lle) [D Merja-]]]]]]] D{N}].
				Extracted head "kirja" from D and created [[<D Pekka>:12 [T/fin [<DP>:12 [v [antaa [P(lle) [D Merja-]]]]]]] [D kirja]]
			Dropping floaters...
				D failed to tail.
				<D kirja> was made an adjunct.
				= [[<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]] <D kirja>]
			Dropping A-/A-bar movement.
			= [[<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]] <D kirja>]
		Checking LF-interface conditions.
			D<[D]> failed to tail features [!COMP:*][CAT:v]
D
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D]
kirja: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{v,V} P(lle){D,N}] D]
			Reconstructing head movement for [T/fin{v,V} P(lle){D,N}].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} P(lle){D,N}]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa P(lle){D,N}]]]
				Extracted head "D{N}" from P(lle) and created [T/fin [v [antaa [P(lle) D{N}]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [T/fin [v [antaa [P(lle) [D Merja-]]]]]
			Dropping floaters...
				= [T/fin [v [antaa [P(lle) [D Merja-]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [T/fin [v [antaa [P(lle) [D Merja-]]]]].
			=[[D Pekka] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] D]]

14.

		Consume "kirja"

		[[D Pekka] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}]]

15.
	>>>	Trying candidate parse [[D Pekka] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}]].
				Extracted head "kirja" from D and created [[D Pekka] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [D kirja]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				D failed to tail.
				<D kirja> was made an adjunct.
				= [[D Pekka] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D kirja>]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T/fin".
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:13 from memory buffer into Spec of v
			= [[D Pekka] [[T/fin [[D Pekka] [v [antaa [P(lle) [D Merja-]]]]]] <D kirja>]]
		Checking LF-interface conditions.
			D<[D]> failed to tail features [!COMP:*][CAT:v]
D
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D]
kirja: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[P(lle){D,N} D]
			P(lle) was opened.
			=[[D Pekka] [T/fin{v,V} [[P(lle) [D Merja-]] D]]]

16.

		Consume "kirja"

		[[D Pekka] [T/fin{v,V} [[P(lle) [D Merja-]] D]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [T/fin{v,V} [[P(lle) [D Merja-]] D{N}]]]

17.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} [[P(lle) [D Merja-]] D{N}]]] (3.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T/fin{v,V} [[P(lle) [D Merja-]] D{N}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T/fin [v{V} [[P(lle) [D Merja-]] D{N}]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [T/fin [v [antaa [[P(lle) [D Merja-]] D{N}]]]]]
				Extracted head "kirja" from D and created [[D Pekka] [T/fin [v [antaa [[P(lle) [D Merja-]] [D kirja]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:14 [T/fin [<DP>:14 [v [antaa [[P(lle) [D Merja-]] [D kirja]]]]]]]
				= [<D Pekka> [T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] [D kirja]]]]]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[P [D N]]]
				D (D) has a specifier [P(lle) [D Merja-]] but is marked for -EPP behavior.
				Extraposition will be tried on [<D Pekka>:14 [T/fin [<DP>:14 [v [antaa [[P(lle) [D Merja-]] [D kirja]]]]]]].
				<D kirja> was made adjunct by an extraposition rule.
			= [<D Pekka> [T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] <D kirja>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:14 [T/fin [<DP>:14 [v [antaa [[P(lle) [D Merja-]] <D kirja>]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 17/206 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] <D kirja>]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 [v [antaa [[P(lle) [D Merja-]] <D kirja>]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [v [V [[P [D N]] DP]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 4
['Pekka#foc', 'antoi', 'Merjalle', 'kirjan']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'LANG:FI', 'TAIL:CAT:FIN,A/HEAD', 'ABAR:FOC', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

6.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] T/fin{v}]

7.

		Consume "antaa"

		[[D Pekka] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] T/fin{v,V}]

8.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] T/fin{v,V}] + P(lle)
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v antaa]]]] P(lle)] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} P(lle)]
			T/fin{v,V} cannot be opened.
			=[[D Pekka] [T/fin{v,V} P(lle)]]

9.

		Consume "D"

		[[D Pekka] [T/fin{v,V} P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [T/fin{v,V} P(lle){D}]]

10.

		Consume "Merja-"

		[[D Pekka] [T/fin{v,V} P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [T/fin{v,V} P(lle){D,N}]]

11.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [T/fin{v,V} P(lle){D,N}]]

12.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] [T/fin{v,V} P(lle){D,N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [P(lle) [D Merja-]]]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
				Avoid P(lle){D,N} because it could break words.
		Ranking completed:
			1. [[[D Pekka] [T/fin{v,V} P(lle){D,N}]]; D]
			2. [[T/fin{v,V} P(lle){D,N}]; D]
			3. [P(lle){D,N}; D]
		Exploring solution number (1) =[[[D Pekka] [T/fin{v,V} P(lle){D,N}]] D]
			Reconstructing head movement for [[D Pekka] [T/fin{v,V} P(lle){D,N}]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T/fin [v{V} P(lle){D,N}]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [T/fin [v [antaa P(lle){D,N}]]]]
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [T/fin [v [antaa [P(lle) D{N}]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [T/fin [v [antaa [P(lle) [D Merja-]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:18 [T/fin [<DP>:18 [v [antaa [P(lle) [D Merja-]]]]]]]
				= [<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'FIN/T/fin', 'FIN', 'T/fin'}
			=[[<D Pekka>:18 [T/fin [<DP>:18 [v [antaa [P(lle) [D Merja-]]]]]]] D]

13.

		Consume "kirja"

		[[<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[<D Pekka>:18 [T/fin [<DP>:18 [v [antaa [P(lle) [D Merja-]]]]]]] D{N}]

14.
	>>>	Trying candidate parse [[<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]] D{N}] (1.)
		Reconstructing...
			Reconstructing head movement for [[<D Pekka>:18 [T/fin [<DP>:18 [v [antaa [P(lle) [D Merja-]]]]]]] D{N}].
				Extracted head "kirja" from D and created [[<D Pekka>:18 [T/fin [<DP>:18 [v [antaa [P(lle) [D Merja-]]]]]]] [D kirja]]
			Dropping floaters...
				D failed to tail.
				<D kirja> was made an adjunct.
				= [[<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]] <D kirja>]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'FIN', 'T/fin', 'FIN/T/fin', 'uFOC', 'iFOC', 'FIN/FIN/T/fin/T/fin/iFOC/uFOC'}
			= [[<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]] <D kirja>]
		Checking LF-interface conditions.
			D<[D]> failed to tail features [!COMP:*][CAT:v]
D
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/FIN/T/fin/T/fin/iFOC/uFOC/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D]
kirja: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{v,V} P(lle){D,N}] D]
			Reconstructing head movement for [T/fin{v,V} P(lle){D,N}].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} P(lle){D,N}]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa P(lle){D,N}]]]
				Extracted head "D{N}" from P(lle) and created [T/fin [v [antaa [P(lle) D{N}]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [T/fin [v [antaa [P(lle) [D Merja-]]]]]
			Dropping floaters...
				= [T/fin [v [antaa [P(lle) [D Merja-]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [T/fin [v [antaa [P(lle) [D Merja-]]]]].
			=[[D Pekka] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] D]]

15.

		Consume "kirja"

		[[D Pekka] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}]]

16.
	>>>	Trying candidate parse [[D Pekka] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}]].
				Extracted head "kirja" from D and created [[D Pekka] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [D kirja]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				D failed to tail.
				<D kirja> was made an adjunct.
				= [[D Pekka] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D kirja>]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T/fin".
				Criterial features {'FOC'} copied to {'FIN/T/fin', 'FIN', 'T/fin'}
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:19 from memory buffer into Spec of v
			= [[D Pekka] [[T/fin [[D Pekka] [v [antaa [P(lle) [D Merja-]]]]]] <D kirja>]]
		Checking LF-interface conditions.
			D<[D]> failed to tail features [!COMP:*][CAT:v]
D
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D]
kirja: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[P(lle){D,N} D]
			P(lle) was opened.
			=[[D Pekka] [T/fin{v,V} [[P(lle) [D Merja-]] D]]]

17.

		Consume "kirja"

		[[D Pekka] [T/fin{v,V} [[P(lle) [D Merja-]] D]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [T/fin{v,V} [[P(lle) [D Merja-]] D{N}]]]

18.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} [[P(lle) [D Merja-]] D{N}]]] (3.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T/fin{v,V} [[P(lle) [D Merja-]] D{N}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T/fin [v{V} [[P(lle) [D Merja-]] D{N}]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [T/fin [v [antaa [[P(lle) [D Merja-]] D{N}]]]]]
				Extracted head "kirja" from D and created [[D Pekka] [T/fin [v [antaa [[P(lle) [D Merja-]] [D kirja]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:20 [T/fin [<DP>:20 [v [antaa [[P(lle) [D Merja-]] [D kirja]]]]]]]
				= [<D Pekka> [T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] [D kirja]]]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'FIN/T/fin', 'FIN', 'T/fin'}
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[P [D N]]]
				D (D) has a specifier [P(lle) [D Merja-]] but is marked for -EPP behavior.
				Extraposition will be tried on [<D Pekka>:20 [T/fin [<DP>:20 [v [antaa [[P(lle) [D Merja-]] [D kirja]]]]]]].
				<D kirja> was made adjunct by an extraposition rule.
			= [<D Pekka> [T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] <D kirja>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:20 [T/fin [<DP>:20 [v [antaa [[P(lle) [D Merja-]] <D kirja>]]]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 18/216 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] <D kirja>]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 [v [antaa [[P(lle) [D Merja-]] <D kirja>]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [v [V [[P [D N]] DP]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 5
['Pekka', 'kirjan', 'antoi', 'Merjalle']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:CAT:FIN,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

5.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D Pekka] D]

6.

		Consume "kirja"

		[[D Pekka] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] D{N}]

7.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[D Pekka] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [kirja T/fin] due to complement selection.
		Ranking completed:
			1. [[[D Pekka] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[D Pekka] D{N}] T/fin]
			Reconstructing head movement for [[D Pekka] D{N}].
				Extracted head "kirja" from D and created [[D Pekka] [D kirja]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[D Pekka] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "D".
				Memory buffer: [[D N]]
				D (D) has a specifier [D Pekka] but is marked for -EPP behavior.
				Extraposition will be tried on [[D Pekka] [D kirja]].
				<D kirja> was made adjunct by an extraposition rule.
			=[[[D Pekka] <D kirja>] T/fin]

8.

		Consume "v"

		[[[D Pekka] <D kirja>] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[D Pekka] <D kirja>] T/fin{v}]

9.

		Consume "antaa"

		[[[D Pekka] <D kirja>] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[D Pekka] <D kirja>] T/fin{v,V}]

10.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[[D Pekka] <D kirja>] T/fin{v,V}] + P(lle)
			Filtering out impossible merge sites...
				Reject [[<[D Pekka] <D kirja>> [T/fin [<[D Pekka] <D kirja>> [v antaa]]]] P(lle)] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} P(lle)]
			T/fin{v,V} cannot be opened.
			=[[[D Pekka] <D kirja>] [T/fin{v,V} P(lle)]]

11.

		Consume "D"

		[[[D Pekka] <D kirja>] [T/fin{v,V} P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[[D Pekka] <D kirja>] [T/fin{v,V} P(lle){D}]]

12.

		Consume "Merja-"

		[[[D Pekka] <D kirja>] [T/fin{v,V} P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[[D Pekka] <D kirja>] [T/fin{v,V} P(lle){D,N}]]

13.
	>>>	Trying candidate parse [[[D Pekka] <D kirja>] [T/fin{v,V} P(lle){D,N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka] <D kirja>] [T/fin{v,V} P(lle){D,N}]].
				Extracted head "v{V}" and reconstructed it = [[[D Pekka] <D kirja>] [T/fin [v{V} P(lle){D,N}]]]
				Extracted head "antaa" and reconstructed it = [[[D Pekka] <D kirja>] [T/fin [v [antaa P(lle){D,N}]]]]
				Extracted head "D{N}" from P(lle) and created [[[D Pekka] <D kirja>] [T/fin [v [antaa [P(lle) D{N}]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[[D Pekka] <D kirja>] [T/fin [v [antaa [P(lle) [D Merja-]]]]]]
			Dropping floaters...
				[[D Pekka] <D kirja>] failed to tail [A/HEAD][CAT:FIN]
				<[D Pekka] <D kirja>> was made an adjunct.
				Floater <[D Pekka] <D kirja>> dropped: [<[D Pekka] <D kirja>>:22 [T/fin [<DP>:22 [v [antaa [P(lle) [D Merja-]]]]]]]
				= [<[D Pekka] <D kirja>> [T/fin [<[D Pekka] <D kirja>> [v [antaa [P(lle) [D Merja-]]]]]]]
			Dropping A-/A-bar movement.
				(D) failed internal tail test.
				Extraposition will be tried on [<[D Pekka] <D kirja>>:22 [T/fin [<DP>:22 [v [antaa [P(lle) [D Merja-]]]]]]].
			= [<[D Pekka] <D kirja>> [T/fin [<[D Pekka] <D kirja>> [v [antaa [P(lle) [D Merja-]]]]]]]
		Checking LF-interface conditions.
				(D) failed internal tail test.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
D: [D]
kirja: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] [[D kirja] T/fin]]

14.

		Consume "v"

		[[D Pekka] [[D kirja] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] [[D kirja] T/fin{v}]]

15.

		Consume "antaa"

		[[D Pekka] [[D kirja] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] [[D kirja] T/fin{v,V}]]

16.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [[D kirja] T/fin{v,V}]] + P(lle)
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [? [<D kirja> [T/fin [<D Pekka> [v [<D kirja> antaa]]]]]]] P(lle)] due to bad left branch.
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [<D kirja> [T/fin [v [<D kirja> antaa]]]] as left branch because it constitutes illicit structure.
				Prioritize [antaa P(lle)] due to complement selection.
		Ranking completed:
			1. [T/fin{v,V}; P(lle)]
			2. [[[D kirja] T/fin{v,V}]; P(lle)]
		Exploring solution number (1) =[T/fin{v,V} P(lle)]
			T/fin{v,V} cannot be opened.
			=[[D Pekka] [[D kirja] [T/fin{v,V} P(lle)]]]

17.

		Consume "D"

		[[D Pekka] [[D kirja] [T/fin{v,V} P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [[D kirja] [T/fin{v,V} P(lle){D}]]]

18.

		Consume "Merja-"

		[[D Pekka] [[D kirja] [T/fin{v,V} P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [[D kirja] [T/fin{v,V} P(lle){D,N}]]]

19.
	>>>	Trying candidate parse [[D Pekka] [[D kirja] [T/fin{v,V} P(lle){D,N}]]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[D kirja] [T/fin{v,V} P(lle){D,N}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [[D kirja] [T/fin [v{V} P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [[D kirja] [T/fin [v [antaa P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [[D kirja] [T/fin [v [antaa [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [[D kirja] [T/fin [v [antaa [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:27 [[D kirja] [T/fin [<DP>:27 [v [antaa [P(lle) [D Merja-]]]]]]]]
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D Pekka>:27 [<D kirja>:28 [T/fin [<DP>:27 [v [<DP>:28 [antaa [P(lle) [D Merja-]]]]]]]]]
				= [<D Pekka> [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<D Pekka>:27 [? [<D kirja>:28 [T/fin [<DP>:27 [v [<DP>:28 [antaa [P(lle) [D Merja-]]]]]]]]]].
			= [<D Pekka> [? [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
?: [?]
D: [D, ?]
kirja: [N, D, ?]
T/fin: [T/fin, ?]
(D): [D, T/fin, ?]
(N): [N, D, T/fin, ?]
v: [v, T/fin, ?]
(D): [D, v, T/fin, ?]
(N): [N, D, v, T/fin, ?]
antaa: [V, v, T/fin, ?]
P(lle): [P, V, v, T/fin, ?]
D: [D, P, V, v, T/fin, ?]
Merja-: [N, D, P, V, v, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D kirja] T/fin{v,V}] P(lle)]
			Reconstructing head movement for [[D kirja] T/fin{v,V}].
				Extracted head "v{V}" from T/fin and created [[D kirja] [T/fin v{V}]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[D kirja] [T/fin [v antaa]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D kirja>:29 [T/fin [v [<DP>:29 antaa]]]]
				= [<D kirja> [T/fin [v [<D kirja> antaa]]]]
			Dropping A-/A-bar movement.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [<D kirja>:29 [T/fin [v [<DP>:29 antaa]]]].
			=[[D Pekka] [[<D kirja>:29 [T/fin [v [<DP>:29 antaa]]]] P(lle)]]

20.

		Consume "D"

		[[D Pekka] [[<D kirja> [T/fin [v [<D kirja> antaa]]]] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [[<D kirja>:29 [T/fin [v [<DP>:29 antaa]]]] P(lle){D}]]

21.

		Consume "Merja-"

		[[D Pekka] [[<D kirja> [T/fin [v [<D kirja> antaa]]]] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [[<D kirja>:29 [T/fin [v [<DP>:29 antaa]]]] P(lle){D,N}]]

22.
	>>>	Trying candidate parse [[D Pekka] [[<D kirja> [T/fin [v [<D kirja> antaa]]]] P(lle){D,N}]] (3.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[<D kirja>:29 [T/fin [v [<DP>:29 antaa]]]] P(lle){D,N}]].
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [[<D kirja>:29 [T/fin [v [<DP>:29 antaa]]]] [P(lle) D{N}]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [[<D kirja>:29 [T/fin [v [<DP>:29 antaa]]]] [P(lle) [D Merja-]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[D Pekka] [[<D kirja> [T/fin [v [<D kirja> antaa]]]] [P(lle) [D Merja-]]]]
			Dropping A-/A-bar movement.
				Moving "D kirja T/fin v __antaa " into memory buffer from SPEC of "P(lle)".
				Moving "D Pekka " into memory buffer from SPEC of "P(lle)".
				New head was spawned due to multiple specifiers at P(lle) but its category is unknown!
				Memory buffer: [[[D N] [T/fin [v [[D N] V]]]], [D N]]
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				P(lle) has unaccetable specifier [<D kirja>:29 [T/fin [v [<DP>:29 antaa]]]].
				Extraposition will be tried on [[D Pekka] [? [[<D kirja>:29 [T/fin [v [<DP>:29 antaa]]]] [P(lle) [D Merja-]]]]].
			= [[D Pekka] [? [[<D kirja> [T/fin [v [<D kirja> antaa]]]] [P(lle) [D Merja-]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				P(lle) has unaccetable specifier [<D kirja>:29 [T/fin [v [<DP>:29 antaa]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
?: [?]
D: [D, ?]
kirja: [N, D, ?]
T/fin: [T/fin, ?]
v: [v, T/fin, ?]
(D): [D, v, T/fin, ?]
(N): [N, D, v, T/fin, ?]
antaa: [V, v, T/fin, ?]
P(lle): [P, ?]
D: [D, P, ?]
Merja-: [N, D, P, ?]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 6
['Pekka#foc', 'kirjan', 'antoi', 'Merjalle']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'LANG:FI', 'TAIL:CAT:FIN,A/HEAD', 'ABAR:FOC', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D Pekka] D]

7.

		Consume "kirja"

		[[D Pekka] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] D{N}]

8.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[D Pekka] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [kirja T/fin] due to complement selection.
		Ranking completed:
			1. [[[D Pekka] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[D Pekka] D{N}] T/fin]
			Reconstructing head movement for [[D Pekka] D{N}].
				Extracted head "kirja" from D and created [[D Pekka] [D kirja]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[D Pekka] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "D".
				Criterial features {'FOC'} copied to {'D'}
				Tail features [!COMP:*][CAT:v] were detected at D, this must head an adjunct floater.
				<D kirja> was made an adjunct.
				Memory buffer: [[D N]]
			=[[[D Pekka] <D kirja>] T/fin]

9.

		Consume "v"

		[[[D Pekka] <D kirja>] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[D Pekka] <D kirja>] T/fin{v}]

10.

		Consume "antaa"

		[[[D Pekka] <D kirja>] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[D Pekka] <D kirja>] T/fin{v,V}]

11.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[[D Pekka] <D kirja>] T/fin{v,V}] + P(lle)
			Filtering out impossible merge sites...
				Reject [[<[D Pekka] <D kirja>> [T/fin [<[D Pekka] <D kirja>> [v antaa]]]] P(lle)] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} P(lle)]
			T/fin{v,V} cannot be opened.
			=[[[D Pekka] <D kirja>] [T/fin{v,V} P(lle)]]

12.

		Consume "D"

		[[[D Pekka] <D kirja>] [T/fin{v,V} P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[[D Pekka] <D kirja>] [T/fin{v,V} P(lle){D}]]

13.

		Consume "Merja-"

		[[[D Pekka] <D kirja>] [T/fin{v,V} P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[[D Pekka] <D kirja>] [T/fin{v,V} P(lle){D,N}]]

14.
	>>>	Trying candidate parse [[[D Pekka] <D kirja>] [T/fin{v,V} P(lle){D,N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka] <D kirja>] [T/fin{v,V} P(lle){D,N}]].
				Extracted head "v{V}" and reconstructed it = [[[D Pekka] <D kirja>] [T/fin [v{V} P(lle){D,N}]]]
				Extracted head "antaa" and reconstructed it = [[[D Pekka] <D kirja>] [T/fin [v [antaa P(lle){D,N}]]]]
				Extracted head "D{N}" from P(lle) and created [[[D Pekka] <D kirja>] [T/fin [v [antaa [P(lle) D{N}]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[[D Pekka] <D kirja>] [T/fin [v [antaa [P(lle) [D Merja-]]]]]]
			Dropping floaters...
				[[D Pekka] <D kirja>] failed to tail [A/HEAD][CAT:FIN]
				<[D Pekka] <D kirja>> was made an adjunct.
				Floater <[D Pekka] <D kirja>> dropped: [<[D Pekka] <D kirja>>:31 [T/fin [<DP>:31 [v [antaa [P(lle) [D Merja-]]]]]]]
				= [<[D Pekka] <D kirja>> [T/fin [<[D Pekka] <D kirja>> [v [antaa [P(lle) [D Merja-]]]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'FIN/T/fin', 'FIN', 'T/fin'}
				(D) failed internal tail test.
				Extraposition will be tried on [<[D Pekka] <D kirja>>:31 [T/fin [<DP>:31 [v [antaa [P(lle) [D Merja-]]]]]]].
			= [<[D Pekka] <D kirja>> [T/fin [<[D Pekka] <D kirja>> [v [antaa [P(lle) [D Merja-]]]]]]]
		Checking LF-interface conditions.
				(D) failed internal tail test.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
D: [D]
kirja: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] [[D kirja] T/fin]]

15.

		Consume "v"

		[[D Pekka] [[D kirja] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] [[D kirja] T/fin{v}]]

16.

		Consume "antaa"

		[[D Pekka] [[D kirja] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] [[D kirja] T/fin{v,V}]]

17.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [[D kirja] T/fin{v,V}]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				Avoid T/finP as SPEC, P(lle).
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [<D kirja> [T/fin [v [<D kirja> antaa]]]] as left branch because it constitutes illicit structure.
				Prioritize [antaa P(lle)] due to complement selection.
		Ranking completed:
			1. [T/fin{v,V}; P(lle)]
			2. [[[D Pekka] [[D kirja] T/fin{v,V}]]; P(lle)]
			3. [[[D kirja] T/fin{v,V}]; P(lle)]
		Exploring solution number (1) =[T/fin{v,V} P(lle)]
			T/fin{v,V} cannot be opened.
			=[[D Pekka] [[D kirja] [T/fin{v,V} P(lle)]]]

18.

		Consume "D"

		[[D Pekka] [[D kirja] [T/fin{v,V} P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [[D kirja] [T/fin{v,V} P(lle){D}]]]

19.

		Consume "Merja-"

		[[D Pekka] [[D kirja] [T/fin{v,V} P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [[D kirja] [T/fin{v,V} P(lle){D,N}]]]

20.
	>>>	Trying candidate parse [[D Pekka] [[D kirja] [T/fin{v,V} P(lle){D,N}]]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[D kirja] [T/fin{v,V} P(lle){D,N}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [[D kirja] [T/fin [v{V} P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [[D kirja] [T/fin [v [antaa P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [[D kirja] [T/fin [v [antaa [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [[D kirja] [T/fin [v [antaa [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:38 [[D kirja] [T/fin [<DP>:38 [v [antaa [P(lle) [D Merja-]]]]]]]]
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D Pekka>:38 [<D kirja>:39 [T/fin [<DP>:38 [v [<DP>:39 [antaa [P(lle) [D Merja-]]]]]]]]]
				= [<D Pekka> [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]]
			Dropping A-/A-bar movement.
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
			= [<D Pekka> [uFOC [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:38 [uFOC [<D kirja>:39 [T/fin [<DP>:38 [v [<DP>:39 [antaa [P(lle) [D Merja-]]]]]]]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 20/212 operations) <------------------------------------
		Solution:
		[<D Pekka> [uFOC [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]]]
		Grammar: [<D Pekka>:1 [uFOC [<D kirja>:2 [T/fin [<DP>:1 [v [<DP>:2 [antaa [P(lle) [D Merja-]]]]]]]]]]
		Spellout P = [DP:1 [ [DP:2 [T/fin [__:1 [v [__:2 [V [P [D N]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
uFOC: []
D: [D, ]
kirja: [N, D, ]
T/fin: [T/fin, ]
(D): [D, T/fin, ]
(N): [N, D, T/fin, ]
v: [v, T/fin, ]
(D): [D, v, T/fin, ]
(N): [N, D, v, T/fin, ]
antaa: [V, v, T/fin, ]
P(lle): [P, V, v, T/fin, ]
D: [D, P, V, v, T/fin, ]
Merja-: [N, D, P, V, v, T/fin, ]

			Checking if the sentence is ambiguous...


\========================================================================
# 7
['Pekka', 'kirjan', 'Merjalle', 'antoi']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:CAT:FIN,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

5.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D Pekka] D]

6.

		Consume "kirja"

		[[D Pekka] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] D{N}]

7.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] D{N}] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [kirja P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
		Ranking completed:
			1. [[[D Pekka] D{N}]; P(lle)]
			2. [D{N}; P(lle)]
		Exploring solution number (1) =[[[D Pekka] D{N}] P(lle)]
			Reconstructing head movement for [[D Pekka] D{N}].
				Extracted head "kirja" from D and created [[D Pekka] [D kirja]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[D Pekka] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "D".
				Memory buffer: [[D N]]
				D (D) has a specifier [D Pekka] but is marked for -EPP behavior.
				Extraposition will be tried on [[D Pekka] [D kirja]].
				<D kirja> was made adjunct by an extraposition rule.
			=[[[D Pekka] <D kirja>] P(lle)]

8.

		Consume "D"

		[[[D Pekka] <D kirja>] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[[D Pekka] <D kirja>] P(lle){D}]

9.

		Consume "Merja-"

		[[[D Pekka] <D kirja>] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[[D Pekka] <D kirja>] P(lle){D,N}]

10.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[[D Pekka] <D kirja>] P(lle){D,N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[[D Pekka] <D kirja>] [P(lle) [D Merja-]]] T/fin] due to bad left branch.
		Exploring solution number (1) =[P(lle){D,N} T/fin]
			P(lle) was opened.
			=[[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin]]

11.

		Consume "v"

		[[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin{v}]]

12.

		Consume "antaa"

		[[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin{v,V}]]

13.
	>>>	Trying candidate parse [[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin{v,V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] [T/fin [v antaa]]]]
			Dropping floaters...
				[[D Pekka] <D kirja>] failed to tail [A/HEAD][CAT:FIN]
				<[D Pekka] <D kirja>> was made an adjunct.
				Floater <[D Pekka] <D kirja>> dropped: [<[D Pekka] <D kirja>>:40 [[P(lle) [D Merja-]] [T/fin [<DP>:40 [v antaa]]]]]
				= [<[D Pekka] <D kirja>> [[P(lle) [D Merja-]] [T/fin [<[D Pekka] <D kirja>> [v antaa]]]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "T/fin".
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				Memory buffer: [[P [D N]]]
				Dropping constituent [P(lle) [D Merja-]]:41 from memory buffer into Spec of antaa
				An uninterpretable grammatical head without lexical category was detected.
				(D) failed internal tail test.
				v probing for CAT:D failed.
				Extraposition will be tried on [<[D Pekka] <D kirja>>:40 [? [[P(lle) [D Merja-]]:41 [T/fin [<DP>:40 [v [(PP):41 antaa]]]]]]].
			= [<[D Pekka] <D kirja>> [? [[P(lle) [D Merja-]] [T/fin [<[D Pekka] <D kirja>> [v [[P(lle) [D Merja-]] antaa]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				(D) failed internal tail test.
				v probing for CAT:D failed.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
D: [D]
kirja: [N, D]
?: [?]
P(lle): [P, ?]
D: [D, P, ?]
Merja-: [N, D, P, ?]
T/fin: [T/fin, ?]
(D): [D, T/fin, ?]
(N): [N, D, T/fin, ?]
(D): [D, T/fin, ?]
(N): [N, D, T/fin, ?]
v: [v, T/fin, ?]
(P): [P, v, T/fin, ?]
(D): [D, P, v, T/fin, ?]
(N): [N, D, P, v, T/fin, ?]
antaa: [V, v, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [[D kirja] P(lle)]]

14.

		Consume "D"

		[[D Pekka] [[D kirja] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [[D kirja] P(lle){D}]]

15.

		Consume "Merja-"

		[[D Pekka] [[D kirja] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [[D kirja] P(lle){D,N}]]

16.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[D Pekka] [[D kirja] P(lle){D,N}]] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [? [[D kirja] [P(lle) [D Merja-]]]]] T/fin] due to bad left branch.
				Reject [[[D kirja] [P(lle) [D Merja-]]] T/fin] due to bad left branch.
		Exploring solution number (1) =[P(lle){D,N} T/fin]
			P(lle) was opened.
			=[[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin]]]

17.

		Consume "v"

		[[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin{v}]]]

18.

		Consume "antaa"

		[[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin{v}]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin{v,V}]]]

19.
	>>>	Trying candidate parse [[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin{v,V}]]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin{v,V}]]].
				Extracted head "v{V}" from T/fin and created [[D Pekka] [[D kirja] [[P(lle) [D Merja-]] [T/fin v{V}]]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[D Pekka] [[D kirja] [[P(lle) [D Merja-]] [T/fin [v antaa]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:42 [[D kirja] [[P(lle) [D Merja-]] [T/fin [<DP>:42 [v antaa]]]]]]
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D Pekka>:42 [<D kirja>:43 [[P(lle) [D Merja-]] [T/fin [<DP>:42 [v [<DP>:43 antaa]]]]]]]
				= [<D Pekka> [<D kirja> [[P(lle) [D Merja-]] [T/fin [<D Pekka> [v [<D kirja> antaa]]]]]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "T/fin".
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				Memory buffer: [[P [D N]]]
				Dropping [P [D N]](=P(lle) D Merja- ) from memory buffer into Comp of {'V'}.
				Result [<D Pekka>:42 [? [<D kirja>:43 [? [[P(lle) [D Merja-]]:44 [T/fin [<DP>:42 [v [<DP>:43 [antaa (PP):44]]]]]]]]]]
				Remaining items in memory buffer: []
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<D Pekka>:42 [? [<D kirja>:43 [? [[P(lle) [D Merja-]]:44 [T/fin [<DP>:42 [v [<DP>:43 [antaa (PP):44]]]]]]]]]].
			= [<D Pekka> [? [<D kirja> [? [[P(lle) [D Merja-]] [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
?: [?]
D: [D, ?]
kirja: [N, D, ?]
?: [?, ?]
P(lle): [P, ?, ?]
D: [D, P, ?, ?]
Merja-: [N, D, P, ?, ?]
T/fin: [T/fin, ?, ?]
(D): [D, T/fin, ?, ?]
(N): [N, D, T/fin, ?, ?]
v: [v, T/fin, ?, ?]
(D): [D, v, T/fin, ?, ?]
(N): [N, D, v, T/fin, ?, ?]
antaa: [V, v, T/fin, ?, ?]
(P): [P, V, v, T/fin, ?, ?]
(D): [D, P, V, v, T/fin, ?, ?]
(N): [N, D, P, V, v, T/fin, ?, ?]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 8
['Pekka#foc', 'kirjan', 'Merjalle', 'antoi']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'LANG:FI', 'TAIL:CAT:FIN,A/HEAD', 'ABAR:FOC', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D Pekka] D]

7.

		Consume "kirja"

		[[D Pekka] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] D{N}]

8.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] D{N}] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [kirja P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
		Ranking completed:
			1. [[[D Pekka] D{N}]; P(lle)]
			2. [D{N}; P(lle)]
		Exploring solution number (1) =[[[D Pekka] D{N}] P(lle)]
			Reconstructing head movement for [[D Pekka] D{N}].
				Extracted head "kirja" from D and created [[D Pekka] [D kirja]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[D Pekka] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "D".
				Criterial features {'FOC'} copied to {'D'}
				Tail features [!COMP:*][CAT:v] were detected at D, this must head an adjunct floater.
				<D kirja> was made an adjunct.
				Memory buffer: [[D N]]
			=[[[D Pekka] <D kirja>] P(lle)]

9.

		Consume "D"

		[[[D Pekka] <D kirja>] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[[D Pekka] <D kirja>] P(lle){D}]

10.

		Consume "Merja-"

		[[[D Pekka] <D kirja>] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[[D Pekka] <D kirja>] P(lle){D,N}]

11.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[[D Pekka] <D kirja>] P(lle){D,N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[[D Pekka] <D kirja>] [P(lle) [D Merja-]]] T/fin] due to bad left branch.
		Exploring solution number (1) =[P(lle){D,N} T/fin]
			P(lle) was opened.
			=[[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin]]

12.

		Consume "v"

		[[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin{v}]]

13.

		Consume "antaa"

		[[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin{v,V}]]

14.
	>>>	Trying candidate parse [[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin{v,V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] [T/fin [v antaa]]]]
			Dropping floaters...
				[[D Pekka] <D kirja>] failed to tail [A/HEAD][CAT:FIN]
				<[D Pekka] <D kirja>> was made an adjunct.
				Floater <[D Pekka] <D kirja>> dropped: [<[D Pekka] <D kirja>>:45 [[P(lle) [D Merja-]] [T/fin [<DP>:45 [v antaa]]]]]
				= [<[D Pekka] <D kirja>> [[P(lle) [D Merja-]] [T/fin [<[D Pekka] <D kirja>> [v antaa]]]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "T/fin".
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
				Memory buffer: [[P [D N]]]
				Dropping constituent [P(lle) [D Merja-]]:46 from memory buffer into Spec of antaa
				(D) failed internal tail test.
				v probing for CAT:D failed.
				Extraposition will be tried on [<[D Pekka] <D kirja>>:45 [uFOC [[P(lle) [D Merja-]]:46 [T/fin [<DP>:45 [v [(PP):46 antaa]]]]]]].
			= [<[D Pekka] <D kirja>> [uFOC [[P(lle) [D Merja-]] [T/fin [<[D Pekka] <D kirja>> [v [[P(lle) [D Merja-]] antaa]]]]]]]
		Checking LF-interface conditions.
				(D) failed internal tail test.
				v probing for CAT:D failed.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
D: [D]
kirja: [N, D]
uFOC: []
P(lle): [P, ]
D: [D, P, ]
Merja-: [N, D, P, ]
T/fin: [T/fin, ]
(D): [D, T/fin, ]
(N): [N, D, T/fin, ]
(D): [D, T/fin, ]
(N): [N, D, T/fin, ]
v: [v, T/fin, ]
(P): [P, v, T/fin, ]
(D): [D, P, v, T/fin, ]
(N): [N, D, P, v, T/fin, ]
antaa: [V, v, T/fin, ]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [[D kirja] P(lle)]]

15.

		Consume "D"

		[[D Pekka] [[D kirja] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [[D kirja] P(lle){D}]]

16.

		Consume "Merja-"

		[[D Pekka] [[D kirja] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [[D kirja] P(lle){D,N}]]

17.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[D Pekka] [[D kirja] P(lle){D,N}]] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [uFOC [[D kirja] [P(lle) [D Merja-]]]]] T/fin] due to bad left branch.
				Reject [[[D kirja] [P(lle) [D Merja-]]] T/fin] due to bad left branch.
		Exploring solution number (1) =[P(lle){D,N} T/fin]
			P(lle) was opened.
			=[[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin]]]

18.

		Consume "v"

		[[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin{v}]]]

19.

		Consume "antaa"

		[[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin{v}]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin{v,V}]]]

20.
	>>>	Trying candidate parse [[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin{v,V}]]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin{v,V}]]].
				Extracted head "v{V}" from T/fin and created [[D Pekka] [[D kirja] [[P(lle) [D Merja-]] [T/fin v{V}]]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[D Pekka] [[D kirja] [[P(lle) [D Merja-]] [T/fin [v antaa]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:47 [[D kirja] [[P(lle) [D Merja-]] [T/fin [<DP>:47 [v antaa]]]]]]
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D Pekka>:47 [<D kirja>:48 [[P(lle) [D Merja-]] [T/fin [<DP>:47 [v [<DP>:48 antaa]]]]]]]
				= [<D Pekka> [<D kirja> [[P(lle) [D Merja-]] [T/fin [<D Pekka> [v [<D kirja> antaa]]]]]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "T/fin".
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
				Memory buffer: [[P [D N]]]
				Dropping [P [D N]](=P(lle) D Merja- ) from memory buffer into Comp of {'V'}.
				Result [<D Pekka>:47 [uFOC [<D kirja>:48 [? [[P(lle) [D Merja-]]:49 [T/fin [<DP>:47 [v [<DP>:48 [antaa (PP):49]]]]]]]]]]
				Remaining items in memory buffer: []
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<D Pekka>:47 [uFOC [<D kirja>:48 [? [[P(lle) [D Merja-]]:49 [T/fin [<DP>:47 [v [<DP>:48 [antaa (PP):49]]]]]]]]]].
			= [<D Pekka> [uFOC [<D kirja> [? [[P(lle) [D Merja-]] [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
uFOC: []
D: [D, ]
kirja: [N, D, ]
?: [?, ]
P(lle): [P, ?, ]
D: [D, P, ?, ]
Merja-: [N, D, P, ?, ]
T/fin: [T/fin, ?, ]
(D): [D, T/fin, ?, ]
(N): [N, D, T/fin, ?, ]
v: [v, T/fin, ?, ]
(D): [D, v, T/fin, ?, ]
(N): [N, D, v, T/fin, ?, ]
antaa: [V, v, T/fin, ?, ]
(P): [P, V, v, T/fin, ?, ]
(D): [D, P, V, v, T/fin, ?, ]
(N): [N, D, P, V, v, T/fin, ?, ]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka#foc".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 9
['Pekka', 'Merjalle', 'antoi', 'kirjan']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:CAT:FIN,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		D{N} + P(lle)
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] P(lle)]

5.

		Consume "D"

		[[D Pekka] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] P(lle){D}]

6.

		Consume "Merja-"

		[[D Pekka] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] P(lle){D,N}]

7.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[D Pekka] P(lle){D,N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [P(lle) [D Merja-]]] T/fin] due to bad left branch.
		Exploring solution number (1) =[P(lle){D,N} T/fin]
			P(lle) was opened.
			=[[D Pekka] [[P(lle) [D Merja-]] T/fin]]

8.

		Consume "v"

		[[D Pekka] [[P(lle) [D Merja-]] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] [[P(lle) [D Merja-]] T/fin{v}]]

9.

		Consume "antaa"

		[[D Pekka] [[P(lle) [D Merja-]] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] [[P(lle) [D Merja-]] T/fin{v,V}]]

10.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [[P(lle) [D Merja-]] T/fin{v,V}]]

11.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] [[P(lle) [D Merja-]] T/fin{v,V}]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [? [[P(lle) [D Merja-]] [T/fin [<D Pekka> [v [[P(lle) [D Merja-]] antaa]]]]]]] D] due to bad left branch.
				Reject [[[P(lle) [D Merja-]] [T/fin [v [[P(lle) [D Merja-]] antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[D Pekka] [[P(lle) [D Merja-]] [T/fin{v,V} D]]]

12.

		Consume "kirja"

		[[D Pekka] [[P(lle) [D Merja-]] [T/fin{v,V} D]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]]

13.
	>>>	Trying candidate parse [[D Pekka] [[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [[P(lle) [D Merja-]] [T/fin [v{V} D{N}]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [[P(lle) [D Merja-]] [T/fin [v [antaa D{N}]]]]]
				Extracted head "kirja" from D and created [[D Pekka] [[P(lle) [D Merja-]] [T/fin [v [antaa [D kirja]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:53 [[P(lle) [D Merja-]] [T/fin [<DP>:53 [v [antaa [D kirja]]]]]]]
				= [<D Pekka> [[P(lle) [D Merja-]] [T/fin [<D Pekka> [v [antaa [D kirja]]]]]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "T/fin".
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				Memory buffer: [[P [D N]]]
				Dropping constituent [P(lle) [D Merja-]]:54 from memory buffer into Spec of antaa
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<D Pekka>:53 [? [[P(lle) [D Merja-]]:54 [T/fin [<DP>:53 [v [(PP):54 [antaa [D kirja]]]]]]]]].
			= [<D Pekka> [? [[P(lle) [D Merja-]] [T/fin [<D Pekka> [v [[P(lle) [D Merja-]] [antaa [D kirja]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

D: [D]
Pekka: [N, D]
?: [?]
P(lle): [P, ?]
D: [D, P, ?]
Merja-: [N, D, P, ?]
T/fin: [T/fin, ?]
(D): [D, T/fin, ?]
(N): [N, D, T/fin, ?]
v: [v, T/fin, ?]
(P): [P, v, T/fin, ?]
(D): [D, P, v, T/fin, ?]
(N): [N, D, P, v, T/fin, ?]
antaa: [V, v, T/fin, ?]
D: [D, V, v, T/fin, ?]
kirja: [N, D, V, v, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 10
['Pekka#foc', 'Merjalle', 'antoi', 'kirjan']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'LANG:FI', 'TAIL:CAT:FIN,A/HEAD', 'ABAR:FOC', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		D{N} + P(lle)
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] P(lle)]

6.

		Consume "D"

		[[D Pekka] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] P(lle){D}]

7.

		Consume "Merja-"

		[[D Pekka] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] P(lle){D,N}]

8.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[D Pekka] P(lle){D,N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [P(lle) [D Merja-]]] T/fin] due to bad left branch.
		Exploring solution number (1) =[P(lle){D,N} T/fin]
			P(lle) was opened.
			=[[D Pekka] [[P(lle) [D Merja-]] T/fin]]

9.

		Consume "v"

		[[D Pekka] [[P(lle) [D Merja-]] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] [[P(lle) [D Merja-]] T/fin{v}]]

10.

		Consume "antaa"

		[[D Pekka] [[P(lle) [D Merja-]] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] [[P(lle) [D Merja-]] T/fin{v,V}]]

11.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [[P(lle) [D Merja-]] T/fin{v,V}]]

12.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] [[P(lle) [D Merja-]] T/fin{v,V}]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [uFOC [[P(lle) [D Merja-]] [T/fin [<D Pekka> [v [[P(lle) [D Merja-]] antaa]]]]]]] D] due to bad left branch.
				Reject [[[P(lle) [D Merja-]] [T/fin [v [[P(lle) [D Merja-]] antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[D Pekka] [[P(lle) [D Merja-]] [T/fin{v,V} D]]]

13.

		Consume "kirja"

		[[D Pekka] [[P(lle) [D Merja-]] [T/fin{v,V} D]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]]

14.
	>>>	Trying candidate parse [[D Pekka] [[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [[P(lle) [D Merja-]] [T/fin [v{V} D{N}]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [[P(lle) [D Merja-]] [T/fin [v [antaa D{N}]]]]]
				Extracted head "kirja" from D and created [[D Pekka] [[P(lle) [D Merja-]] [T/fin [v [antaa [D kirja]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:58 [[P(lle) [D Merja-]] [T/fin [<DP>:58 [v [antaa [D kirja]]]]]]]
				= [<D Pekka> [[P(lle) [D Merja-]] [T/fin [<D Pekka> [v [antaa [D kirja]]]]]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "T/fin".
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
				Memory buffer: [[P [D N]]]
				Dropping constituent [P(lle) [D Merja-]]:59 from memory buffer into Spec of antaa
			= [<D Pekka> [uFOC [[P(lle) [D Merja-]] [T/fin [<D Pekka> [v [[P(lle) [D Merja-]] [antaa [D kirja]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:58 [uFOC [[P(lle) [D Merja-]]:59 [T/fin [<DP>:58 [v [(PP):59 [antaa [D kirja]]]]]]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 14/112 operations) <------------------------------------
		Solution:
		[<D Pekka> [uFOC [[P(lle) [D Merja-]] [T/fin [<D Pekka> [v [[P(lle) [D Merja-]] [antaa [D kirja]]]]]]]]]
		Grammar: [<D Pekka>:1 [uFOC [[P(lle) [D Merja-]]:2 [T/fin [<DP>:1 [v [(PP):2 [antaa [D kirja]]]]]]]]]
		Spellout P = [DP:1 [ [PP:2 [T/fin [__:1 [v [__:2 [V [D N]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

D: [D]
Pekka: [N, D]
uFOC: []
P(lle): [P, ]
D: [D, P, ]
Merja-: [N, D, P, ]
T/fin: [T/fin, ]
(D): [D, T/fin, ]
(N): [N, D, T/fin, ]
v: [v, T/fin, ]
(P): [P, v, T/fin, ]
(D): [D, P, v, T/fin, ]
(N): [N, D, P, v, T/fin, ]
antaa: [V, v, T/fin, ]
D: [D, V, v, T/fin, ]
kirja: [N, D, V, v, T/fin, ]

			Checking if the sentence is ambiguous...


\========================================================================
# 11
['Pekka', 'Merjalle', 'kirjan', 'antoi']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:CAT:FIN,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		D{N} + P(lle)
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] P(lle)]

5.

		Consume "D"

		[[D Pekka] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] P(lle){D}]

6.

		Consume "Merja-"

		[[D Pekka] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] P(lle){D,N}]

7.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] P(lle){D,N}]

8.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] P(lle){D,N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid PP as SPEC for D due to unselective SPEC feature.
				[D Pekka]" has no thematic role
				Avoid [[D Pekka] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
		Ranking completed:
			1. [P(lle){D,N}; D]
			2. [[[D Pekka] P(lle){D,N}]; D]
		Exploring solution number (1) =[P(lle){D,N} D]
			P(lle) was opened.
			=[[D Pekka] [[P(lle) [D Merja-]] D]]

9.

		Consume "kirja"

		[[D Pekka] [[P(lle) [D Merja-]] D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [[P(lle) [D Merja-]] D{N}]]

10.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[D Pekka] [[P(lle) [D Merja-]] D{N}]] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [? [[P(lle) [D Merja-]] [D kirja]]]] T/fin] due to bad left branch.
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [kirja T/fin] due to complement selection.
		Ranking completed:
			1. [[[P(lle) [D Merja-]] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[P(lle) [D Merja-]] D{N}] T/fin]
			Reconstructing head movement for [[P(lle) [D Merja-]] D{N}].
				Extracted head "kirja" from D and created [[P(lle) [D Merja-]] [D kirja]]
			Dropping floaters...
				D failed to tail.
				= [[P(lle) [D Merja-]] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[P [D N]]]
				D (D) has a specifier [P(lle) [D Merja-]] but is marked for -EPP behavior.
				Extraposition will be tried on [[P(lle) [D Merja-]] [D kirja]].
				<D kirja> was made adjunct by an extraposition rule.
			=[[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin]]

11.

		Consume "v"

		[[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin{v}]]

12.

		Consume "antaa"

		[[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin{v,V}]]

13.
	>>>	Trying candidate parse [[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin{v,V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] [T/fin [v antaa]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:60 [[[P(lle) [D Merja-]] <D kirja>] [T/fin [<DP>:60 [v antaa]]]]]
				= [<D Pekka> [[[P(lle) [D Merja-]] <D kirja>] [T/fin [<D Pekka> [v antaa]]]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- D kirja " into memory buffer from SPEC of "T/fin".
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				Memory buffer: [[[P [D N]] [D N]]]
				Dropping constituent [[P(lle) [D Merja-]] <D kirja>]:61 from memory buffer into Spec of antaa
				An uninterpretable grammatical head without lexical category was detected.
				v probing for CAT:D failed.
				Extraposition will be tried on [<D Pekka>:60 [? [[[P(lle) [D Merja-]] <D kirja>]:61 [T/fin [<DP>:60 [v [(PP):61 antaa]]]]]]].
			= [<D Pekka> [? [[[P(lle) [D Merja-]] <D kirja>] [T/fin [<D Pekka> [v [[[P(lle) [D Merja-]] <D kirja>] antaa]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				v probing for CAT:D failed.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
?: [?]
P(lle): [P, ?]
D: [D, P, ?]
Merja-: [N, D, P, ?]
D: [D, ?]
kirja: [N, D, ?]
T/fin: [T/fin, ?]
(D): [D, T/fin, ?]
(N): [N, D, T/fin, ?]
v: [v, T/fin, ?]
(P): [P, v, T/fin, ?]
(D): [D, P, v, T/fin, ?]
(N): [N, D, P, v, T/fin, ?]
(D): [D, v, T/fin, ?]
(N): [N, D, v, T/fin, ?]
antaa: [V, v, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] [[P(lle) [D Merja-]] [[D kirja] T/fin]]]

14.

		Consume "v"

		[[D Pekka] [[P(lle) [D Merja-]] [[D kirja] T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] [[P(lle) [D Merja-]] [[D kirja] T/fin{v}]]]

15.

		Consume "antaa"

		[[D Pekka] [[P(lle) [D Merja-]] [[D kirja] T/fin{v}]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] [[P(lle) [D Merja-]] [[D kirja] T/fin{v,V}]]]

16.
	>>>	Trying candidate parse [[D Pekka] [[P(lle) [D Merja-]] [[D kirja] T/fin{v,V}]]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[P(lle) [D Merja-]] [[D kirja] T/fin{v,V}]]].
				Extracted head "v{V}" from T/fin and created [[D Pekka] [[P(lle) [D Merja-]] [[D kirja] [T/fin v{V}]]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[D Pekka] [[P(lle) [D Merja-]] [[D kirja] [T/fin [v antaa]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:62 [[P(lle) [D Merja-]] [[D kirja] [T/fin [<DP>:62 [v antaa]]]]]]
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D Pekka>:62 [[P(lle) [D Merja-]] [<D kirja>:63 [T/fin [<DP>:62 [v [<DP>:63 antaa]]]]]]]
				= [<D Pekka> [[P(lle) [D Merja-]] [<D kirja> [T/fin [<D Pekka> [v [<D kirja> antaa]]]]]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "T/fin".
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				Memory buffer: [[P [D N]]]
				Dropping [P [D N]](=P(lle) D Merja- ) from memory buffer into Comp of {'V'}.
				Result [<D Pekka>:62 [? [[P(lle) [D Merja-]]:64 [? [<D kirja>:63 [T/fin [<DP>:62 [v [<DP>:63 [antaa (PP):64]]]]]]]]]]
				Remaining items in memory buffer: []
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<D Pekka>:62 [? [[P(lle) [D Merja-]]:64 [? [<D kirja>:63 [T/fin [<DP>:62 [v [<DP>:63 [antaa (PP):64]]]]]]]]]].
			= [<D Pekka> [? [[P(lle) [D Merja-]] [? [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
?: [?]
P(lle): [P, ?]
D: [D, P, ?]
Merja-: [N, D, P, ?]
?: [?, ?]
D: [D, ?, ?]
kirja: [N, D, ?, ?]
T/fin: [T/fin, ?, ?]
(D): [D, T/fin, ?, ?]
(N): [N, D, T/fin, ?, ?]
v: [v, T/fin, ?, ?]
(D): [D, v, T/fin, ?, ?]
(N): [N, D, v, T/fin, ?, ?]
antaa: [V, v, T/fin, ?, ?]
(P): [P, V, v, T/fin, ?, ?]
(D): [D, P, V, v, T/fin, ?, ?]
(N): [N, D, P, V, v, T/fin, ?, ?]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D Pekka] P(lle){D,N}] D]
			Reconstructing head movement for [[D Pekka] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [P(lle) [D Merja-]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[D Pekka] [P(lle) [D Merja-]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D Pekka]" has no thematic role
			=[[[D Pekka] [P(lle) [D Merja-]]] D]

17.

		Consume "kirja"

		[[[D Pekka] [P(lle) [D Merja-]]] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[[D Pekka] [P(lle) [D Merja-]]] D{N}]

18.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[[D Pekka] [P(lle) [D Merja-]]] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[[D Pekka] [P(lle) [D Merja-]]] <D kirja>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] T/fin]]

19.

		Consume "v"

		[[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] T/fin{v}]]

20.

		Consume "antaa"

		[[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] T/fin{v,V}]]

21.
	>>>	Trying candidate parse [[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] T/fin{v,V}]] (3.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] [T/fin [v antaa]]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [[[D Pekka] [P(lle) [D Merja-]]] [<D kirja>:65 [T/fin [v [<DP>:65 antaa]]]]]
				= [[[D Pekka] [P(lle) [D Merja-]]] [<D kirja> [T/fin [v [<D kirja> antaa]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka P(lle) D Merja- " into memory buffer from SPEC of "T/fin".
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				Memory buffer: [[[D N] [P [D N]]]]
				Dropping [[D N] [P [D N]]](=D Pekka P(lle) D Merja- ) from memory buffer into Comp of {'V'}.
				Result [[[D Pekka] [P(lle) [D Merja-]]]:66 [? [<D kirja>:65 [T/fin [v [<DP>:65 [antaa (PP):66]]]]]]]
				Remaining items in memory buffer: []
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				(DP)" has no thematic role
				Extraposition will be tried on [[[D Pekka] [P(lle) [D Merja-]]]:66 [? [<D kirja>:65 [T/fin [v [<DP>:65 [antaa (PP):66]]]]]]].
			= [[[D Pekka] [P(lle) [D Merja-]]] [? [<D kirja> [T/fin [v [<D kirja> [antaa [[D Pekka] [P(lle) [D Merja-]]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				(DP)" has no thematic role
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
?: [?]
D: [D, ?]
kirja: [N, D, ?]
T/fin: [T/fin, ?]
v: [v, T/fin, ?]
(D): [D, v, T/fin, ?]
(N): [N, D, v, T/fin, ?]
antaa: [V, v, T/fin, ?]
(D): [D, V, v, T/fin, ?]
(N): [N, D, V, v, T/fin, ?]
(P): [P, V, v, T/fin, ?]
(D): [D, P, V, v, T/fin, ?]
(N): [N, D, P, V, v, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 12
['Pekka#foc', 'Merjalle', 'kirjan', 'antoi']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'LANG:FI', 'TAIL:CAT:FIN,A/HEAD', 'ABAR:FOC', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		D{N} + P(lle)
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] P(lle)]

6.

		Consume "D"

		[[D Pekka] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] P(lle){D}]

7.

		Consume "Merja-"

		[[D Pekka] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] P(lle){D,N}]

8.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] P(lle){D,N}]

9.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] P(lle){D,N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid PP as SPEC for D due to unselective SPEC feature.
				[D Pekka]" has no thematic role
				Avoid [[D Pekka] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
		Ranking completed:
			1. [P(lle){D,N}; D]
			2. [[[D Pekka] P(lle){D,N}]; D]
		Exploring solution number (1) =[P(lle){D,N} D]
			P(lle) was opened.
			=[[D Pekka] [[P(lle) [D Merja-]] D]]

10.

		Consume "kirja"

		[[D Pekka] [[P(lle) [D Merja-]] D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [[P(lle) [D Merja-]] D{N}]]

11.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[D Pekka] [[P(lle) [D Merja-]] D{N}]] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [uFOC [[P(lle) [D Merja-]] [D kirja]]]] T/fin] due to bad left branch.
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [kirja T/fin] due to complement selection.
		Ranking completed:
			1. [[[P(lle) [D Merja-]] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[P(lle) [D Merja-]] D{N}] T/fin]
			Reconstructing head movement for [[P(lle) [D Merja-]] D{N}].
				Extracted head "kirja" from D and created [[P(lle) [D Merja-]] [D kirja]]
			Dropping floaters...
				D failed to tail.
				= [[P(lle) [D Merja-]] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[P [D N]]]
				D (D) has a specifier [P(lle) [D Merja-]] but is marked for -EPP behavior.
				Extraposition will be tried on [[P(lle) [D Merja-]] [D kirja]].
				<D kirja> was made adjunct by an extraposition rule.
			=[[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin]]

12.

		Consume "v"

		[[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin{v}]]

13.

		Consume "antaa"

		[[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin{v,V}]]

14.
	>>>	Trying candidate parse [[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin{v,V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] [T/fin [v antaa]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:67 [[[P(lle) [D Merja-]] <D kirja>] [T/fin [<DP>:67 [v antaa]]]]]
				= [<D Pekka> [[[P(lle) [D Merja-]] <D kirja>] [T/fin [<D Pekka> [v antaa]]]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- D kirja " into memory buffer from SPEC of "T/fin".
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
				Memory buffer: [[[P [D N]] [D N]]]
				Dropping constituent [[P(lle) [D Merja-]] <D kirja>]:68 from memory buffer into Spec of antaa
				v probing for CAT:D failed.
				Extraposition will be tried on [<D Pekka>:67 [uFOC [[[P(lle) [D Merja-]] <D kirja>]:68 [T/fin [<DP>:67 [v [(PP):68 antaa]]]]]]].
			= [<D Pekka> [uFOC [[[P(lle) [D Merja-]] <D kirja>] [T/fin [<D Pekka> [v [[[P(lle) [D Merja-]] <D kirja>] antaa]]]]]]]
		Checking LF-interface conditions.
				v probing for CAT:D failed.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']

D: [D]
Pekka: [N, D]
uFOC: []
P(lle): [P, ]
D: [D, P, ]
Merja-: [N, D, P, ]
D: [D, ]
kirja: [N, D, ]
T/fin: [T/fin, ]
(D): [D, T/fin, ]
(N): [N, D, T/fin, ]
v: [v, T/fin, ]
(P): [P, v, T/fin, ]
(D): [D, P, v, T/fin, ]
(N): [N, D, P, v, T/fin, ]
(D): [D, v, T/fin, ]
(N): [N, D, v, T/fin, ]
antaa: [V, v, T/fin, ]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] [[P(lle) [D Merja-]] [[D kirja] T/fin]]]

15.

		Consume "v"

		[[D Pekka] [[P(lle) [D Merja-]] [[D kirja] T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] [[P(lle) [D Merja-]] [[D kirja] T/fin{v}]]]

16.

		Consume "antaa"

		[[D Pekka] [[P(lle) [D Merja-]] [[D kirja] T/fin{v}]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] [[P(lle) [D Merja-]] [[D kirja] T/fin{v,V}]]]

17.
	>>>	Trying candidate parse [[D Pekka] [[P(lle) [D Merja-]] [[D kirja] T/fin{v,V}]]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[P(lle) [D Merja-]] [[D kirja] T/fin{v,V}]]].
				Extracted head "v{V}" from T/fin and created [[D Pekka] [[P(lle) [D Merja-]] [[D kirja] [T/fin v{V}]]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[D Pekka] [[P(lle) [D Merja-]] [[D kirja] [T/fin [v antaa]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:69 [[P(lle) [D Merja-]] [[D kirja] [T/fin [<DP>:69 [v antaa]]]]]]
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D Pekka>:69 [[P(lle) [D Merja-]] [<D kirja>:70 [T/fin [<DP>:69 [v [<DP>:70 antaa]]]]]]]
				= [<D Pekka> [[P(lle) [D Merja-]] [<D kirja> [T/fin [<D Pekka> [v [<D kirja> antaa]]]]]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "T/fin".
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
				Memory buffer: [[P [D N]]]
				Dropping [P [D N]](=P(lle) D Merja- ) from memory buffer into Comp of {'V'}.
				Result [<D Pekka>:69 [uFOC [[P(lle) [D Merja-]]:71 [? [<D kirja>:70 [T/fin [<DP>:69 [v [<DP>:70 [antaa (PP):71]]]]]]]]]]
				Remaining items in memory buffer: []
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<D Pekka>:69 [uFOC [[P(lle) [D Merja-]]:71 [? [<D kirja>:70 [T/fin [<DP>:69 [v [<DP>:70 [antaa (PP):71]]]]]]]]]].
			= [<D Pekka> [uFOC [[P(lle) [D Merja-]] [? [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
uFOC: []
P(lle): [P, ]
D: [D, P, ]
Merja-: [N, D, P, ]
?: [?, ]
D: [D, ?, ]
kirja: [N, D, ?, ]
T/fin: [T/fin, ?, ]
(D): [D, T/fin, ?, ]
(N): [N, D, T/fin, ?, ]
v: [v, T/fin, ?, ]
(D): [D, v, T/fin, ?, ]
(N): [N, D, v, T/fin, ?, ]
antaa: [V, v, T/fin, ?, ]
(P): [P, V, v, T/fin, ?, ]
(D): [D, P, V, v, T/fin, ?, ]
(N): [N, D, P, V, v, T/fin, ?, ]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D Pekka] P(lle){D,N}] D]
			Reconstructing head movement for [[D Pekka] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [P(lle) [D Merja-]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[D Pekka] [P(lle) [D Merja-]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "P(lle)".
				Criterial features {'FOC'} copied to {'P'}
				Memory buffer: [[D N]]
				[D Pekka]" has no thematic role
			=[[[D Pekka] [P(lle) [D Merja-]]] D]

18.

		Consume "kirja"

		[[[D Pekka] [P(lle) [D Merja-]]] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[[D Pekka] [P(lle) [D Merja-]]] D{N}]

19.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[[D Pekka] [P(lle) [D Merja-]]] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[[D Pekka] [P(lle) [D Merja-]]] <D kirja>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] T/fin]]

20.

		Consume "v"

		[[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] T/fin{v}]]

21.

		Consume "antaa"

		[[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] T/fin{v,V}]]

22.
	>>>	Trying candidate parse [[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] T/fin{v,V}]] (3.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] [T/fin [v antaa]]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [[[D Pekka] [P(lle) [D Merja-]]] [<D kirja>:72 [T/fin [v [<DP>:72 antaa]]]]]
				= [[[D Pekka] [P(lle) [D Merja-]]] [<D kirja> [T/fin [v [<D kirja> antaa]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka P(lle) D Merja- " into memory buffer from SPEC of "T/fin".
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
				Memory buffer: [[[D N] [P [D N]]]]
				Dropping [[D N] [P [D N]]](=D Pekka P(lle) D Merja- ) from memory buffer into Comp of {'V'}.
				Result [[[D Pekka] [P(lle) [D Merja-]]]:73 [uFOC [<D kirja>:72 [T/fin [v [<DP>:72 [antaa (PP):73]]]]]]]
				Remaining items in memory buffer: []
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				(DP)" has no thematic role
				Extraposition will be tried on [[[D Pekka] [P(lle) [D Merja-]]]:73 [uFOC [<D kirja>:72 [T/fin [v [<DP>:72 [antaa (PP):73]]]]]]].
			= [[[D Pekka] [P(lle) [D Merja-]]] [uFOC [<D kirja> [T/fin [v [<D kirja> [antaa [[D Pekka] [P(lle) [D Merja-]]]]]]]]]]
		Checking LF-interface conditions.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				(DP)" has no thematic role
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'CAT:P/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'CAT:P/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
uFOC: []
D: [D, ]
kirja: [N, D, ]
T/fin: [T/fin, ]
v: [v, T/fin, ]
(D): [D, v, T/fin, ]
(N): [N, D, v, T/fin, ]
antaa: [V, v, T/fin, ]
(D): [D, V, v, T/fin, ]
(N): [N, D, V, v, T/fin, ]
(P): [P, V, v, T/fin, ]
(D): [D, P, V, v, T/fin, ]
(N): [N, D, P, V, v, T/fin, ]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka#foc".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 13
['antoi', 'Pekka', 'kirjan', 'Merjalle']


			=None

1.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']
			=T/fin

2.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

3.

		Consume "antaa"

		T/fin{v} + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=T/fin{v,V}

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=T/fin{v,V}

5.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:CAT:FIN,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[T/fin{v,V} D]

6.

		Consume "Pekka"

		[T/fin{v,V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T/fin{v,V} D{N}]

7.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[T/fin{v,V} D{N}]

8.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[T/fin{v,V} D{N}] + D
			Filtering out impossible merge sites...
				Reject [[T/fin [<D Pekka> [v [antaa <D Pekka>]]]] D] due to bad left branch.
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[T/fin{v,V} [[D Pekka] D]]

9.

		Consume "kirja"

		[T/fin{v,V} [[D Pekka] D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[T/fin{v,V} [[D Pekka] D{N}]]

10.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[T/fin{v,V} [[D Pekka] D{N}]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				An EPP-head "T/fin" lacks specifier but needs one.
				Avoid [T/fin [<D Pekka> [v [antaa [<D Pekka> <D kirja>]]]]] as left branch because it constitutes illicit structure.
				Avoid [[[D Pekka] D{N}], P(lle)] because the operation breaks up an existing selectional dependency.
				Avoid [kirja P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Prioritize [[D Pekka] D{N}] because all solutions were negative.
		Ranking completed:
			1. [[[D Pekka] D{N}]; P(lle)]
			2. [D{N}; P(lle)]
			3. [[T/fin{v,V} [[D Pekka] D{N}]]; P(lle)]
		Exploring solution number (1) =[[[D Pekka] D{N}] P(lle)]
			Reconstructing head movement for [[D Pekka] D{N}].
				Extracted head "kirja" from D and created [[D Pekka] [D kirja]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[D Pekka] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "D".
				Memory buffer: [[D N]]
				D (D) has a specifier [D Pekka] but is marked for -EPP behavior.
				Extraposition will be tried on [[D Pekka] [D kirja]].
				<D kirja> was made adjunct by an extraposition rule.
			=[T/fin{v,V} [[[D Pekka] <D kirja>] P(lle)]]

11.

		Consume "D"

		[T/fin{v,V} [[[D Pekka] <D kirja>] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[T/fin{v,V} [[[D Pekka] <D kirja>] P(lle){D}]]

12.

		Consume "Merja-"

		[T/fin{v,V} [[[D Pekka] <D kirja>] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[T/fin{v,V} [[[D Pekka] <D kirja>] P(lle){D,N}]]

13.
	>>>	Trying candidate parse [T/fin{v,V} [[[D Pekka] <D kirja>] P(lle){D,N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [T/fin{v,V} [[[D Pekka] <D kirja>] P(lle){D,N}]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[[D Pekka] <D kirja>] P(lle){D,N}]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[[D Pekka] <D kirja>] P(lle){D,N}]]]]
				Extracted head "D{N}" from P(lle) and created [T/fin [v [antaa [[[D Pekka] <D kirja>] [P(lle) D{N}]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [T/fin [v [antaa [[[D Pekka] <D kirja>] [P(lle) [D Merja-]]]]]]
			Dropping floaters...
				[[D Pekka] <D kirja>] failed to tail [A/HEAD][CAT:FIN]
				<[D Pekka] <D kirja>> was made an adjunct.
				Floater <[D Pekka] <D kirja>> dropped: [T/fin [<DP>:77 [v [antaa [<[D Pekka] <D kirja>>:77 [P(lle) [D Merja-]]]]]]]
				= [T/fin [<[D Pekka] <D kirja>> [v [antaa [<[D Pekka] <D kirja>> [P(lle) [D Merja-]]]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				(D) failed internal tail test.
				Extraposition will be tried on [T/fin [<DP>:77 [v [antaa [<[D Pekka] <D kirja>>:77 [P(lle) [D Merja-]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				(D) failed internal tail test.
			= [T/fin [<[D Pekka] <D kirja>> [v [antaa [<[D Pekka] <D kirja>> <P(lle) [D Merja-]>]]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				(D) failed internal tail test.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} P(lle)]
			D was opened.
			=[T/fin{v,V} [[D Pekka] [[D kirja] P(lle)]]]

14.

		Consume "D"

		[T/fin{v,V} [[D Pekka] [[D kirja] P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[T/fin{v,V} [[D Pekka] [[D kirja] P(lle){D}]]]

15.

		Consume "Merja-"

		[T/fin{v,V} [[D Pekka] [[D kirja] P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[T/fin{v,V} [[D Pekka] [[D kirja] P(lle){D,N}]]]

16.
	>>>	Trying candidate parse [T/fin{v,V} [[D Pekka] [[D kirja] P(lle){D,N}]]] (2.)
		Reconstructing...
			Reconstructing head movement for [T/fin{v,V} [[D Pekka] [[D kirja] P(lle){D,N}]]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[D Pekka] [[D kirja] P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[D Pekka] [[D kirja] P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [T/fin [v [antaa [[D Pekka] [[D kirja] [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [T/fin [v [antaa [[D Pekka] [[D kirja] [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:78 [v [antaa [<D Pekka>:78 [[D kirja] [P(lle) [D Merja-]]]]]]]]
				= [T/fin [<D Pekka> [v [antaa [<D Pekka> [[D kirja] [P(lle) [D Merja-]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				New head was spawned due to multiple specifiers at P(lle) but its category is unknown!
				Memory buffer: [[D N]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
				[D kirja]" has no thematic role
				Extraposition will be tried on [T/fin [<DP>:78 [v [antaa [<D Pekka>:78 [? [[D kirja] [P(lle) [D Merja-]]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
			= [T/fin [<D Pekka> [v [antaa [<D Pekka> [? [[D kirja] <P(lle) [D Merja-]>]]]]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
?: [?, V, v, T/fin]
D: [D, ?, V, v, T/fin]
kirja: [N, D, ?, V, v, T/fin]
P(lle): [P, ?, V, v, T/fin]
D: [D, P, ?, V, v, T/fin]
Merja-: [N, D, P, ?, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[T/fin{v,V} [[D Pekka] D{N}]] P(lle)]
			Reconstructing head movement for [T/fin{v,V} [[D Pekka] D{N}]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[D Pekka] D{N}]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[D Pekka] D{N}]]]]
				Extracted head "kirja" from D and created [T/fin [v [antaa [[D Pekka] [D kirja]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:79 [v [antaa [<D Pekka>:79 [D kirja]]]]]]
				= [T/fin [<D Pekka> [v [antaa [<D Pekka> [D kirja]]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				D (D) has a specifier <D Pekka>:79 but is marked for -EPP behavior.
				Extraposition will be tried on [T/fin [<DP>:79 [v [antaa [<D Pekka>:79 [D kirja]]]]]].
				<D kirja> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
			=[[T/fin [<DP>:79 [v [antaa [<D Pekka>:79 <D kirja>]]]]] P(lle)]

17.

		Consume "D"

		[[T/fin [<D Pekka> [v [antaa [<D Pekka> <D kirja>]]]]] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[T/fin [<DP>:79 [v [antaa [<D Pekka>:79 <D kirja>]]]]] P(lle){D}]

18.

		Consume "Merja-"

		[[T/fin [<D Pekka> [v [antaa [<D Pekka> <D kirja>]]]]] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[T/fin [<DP>:79 [v [antaa [<D Pekka>:79 <D kirja>]]]]] P(lle){D,N}]

19.
	>>>	Trying candidate parse [[T/fin [<D Pekka> [v [antaa [<D Pekka> <D kirja>]]]]] P(lle){D,N}] (3.)
		Reconstructing...
			Reconstructing head movement for [[T/fin [<DP>:79 [v [antaa [<D Pekka>:79 <D kirja>]]]]] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[T/fin [<DP>:79 [v [antaa [<D Pekka>:79 <D kirja>]]]]] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[T/fin [<DP>:79 [v [antaa [<D Pekka>:79 <D kirja>]]]]] [P(lle) [D Merja-]]]
			Dropping floaters...
				= [[T/fin [<D Pekka> [v [antaa [<D Pekka> <D kirja>]]]]] [P(lle) [D Merja-]]]
			Dropping A-/A-bar movement.
				Moving "T/fin __v antaa D Pekka D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[T/fin [[D N] [v [V [[D N] [D N]]]]]]]
				An EPP-head "T/fin" lacks specifier but needs one.
				P(lle) has unaccetable specifier [T/fin [<DP>:79 [v [antaa [<D Pekka>:79 <D kirja>]]]]].
				Extraposition will be tried on [[T/fin [<DP>:79 [v [antaa [<D Pekka>:79 <D kirja>]]]]] [P(lle) [D Merja-]]].
			= [[T/fin [<D Pekka> [v [antaa [<D Pekka> <D kirja>]]]]] [P(lle) [D Merja-]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				P(lle) has unaccetable specifier [T/fin [<DP>:79 [v [antaa [<D Pekka>:79 <D kirja>]]]]].
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 14
['antoi#foc', 'Pekka', 'kirjan', 'Merjalle']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'antoi']
			=C

2.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		C + T/fin
			Filtering out impossible merge sites...
			Sink "T/fin" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T/fin]
			=C{T/fin}

3.

		Consume "v"

		C{T/fin} + v
			Filtering out impossible merge sites...
			Sink "v" into C{T/fin} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin}*v]
			=C{T/fin,v}

4.

		Consume "antaa"

		C{T/fin,v} + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into C{T/fin,v} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin,v}*antaa]
			=C{T/fin,v,V}

5.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=C{T/fin,v,V}

6.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:CAT:FIN,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		C{T/fin,v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T/fin,v,V} D]
			C{T/fin,v,V} cannot be opened.
			=[C{T/fin,v,V} D]

7.

		Consume "Pekka"

		[C{T/fin,v,V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T/fin,v,V} D{N}]

8.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[C{T/fin,v,V} D{N}]

9.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[C{T/fin,v,V} D{N}] + D
			Filtering out impossible merge sites...
				Reject [[C [<D Pekka> [T/fin [<D Pekka> [v [antaa <D Pekka>]]]]]] D] due to bad left branch.
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[C{T/fin,v,V} [[D Pekka] D]]

10.

		Consume "kirja"

		[C{T/fin,v,V} [[D Pekka] D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[C{T/fin,v,V} [[D Pekka] D{N}]]

11.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[C{T/fin,v,V} [[D Pekka] D{N}]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC, P(lle).
				Avoid [kirja P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
		Ranking completed:
			1. [[[D Pekka] D{N}]; P(lle)]
			2. [[C{T/fin,v,V} [[D Pekka] D{N}]]; P(lle)]
			3. [D{N}; P(lle)]
		Exploring solution number (1) =[[[D Pekka] D{N}] P(lle)]
			Reconstructing head movement for [[D Pekka] D{N}].
				Extracted head "kirja" from D and created [[D Pekka] [D kirja]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[D Pekka] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "D".
				Memory buffer: [[D N]]
				D (D) has a specifier [D Pekka] but is marked for -EPP behavior.
				Extraposition will be tried on [[D Pekka] [D kirja]].
				<D kirja> was made adjunct by an extraposition rule.
			=[C{T/fin,v,V} [[[D Pekka] <D kirja>] P(lle)]]

12.

		Consume "D"

		[C{T/fin,v,V} [[[D Pekka] <D kirja>] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[C{T/fin,v,V} [[[D Pekka] <D kirja>] P(lle){D}]]

13.

		Consume "Merja-"

		[C{T/fin,v,V} [[[D Pekka] <D kirja>] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[C{T/fin,v,V} [[[D Pekka] <D kirja>] P(lle){D,N}]]

14.
	>>>	Trying candidate parse [C{T/fin,v,V} [[[D Pekka] <D kirja>] P(lle){D,N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{T/fin,v,V} [[[D Pekka] <D kirja>] P(lle){D,N}]].
				Extracted head "T/fin{v,V}" and reconstructed it = [C [[[D Pekka] <D kirja>] [T/fin{v,V} P(lle){D,N}]]]
				Extracted head "v{V}" and reconstructed it = [C [[[D Pekka] <D kirja>] [T/fin [v{V} P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [C [[[D Pekka] <D kirja>] [T/fin [v [antaa P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [C [[[D Pekka] <D kirja>] [T/fin [v [antaa [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [C [[[D Pekka] <D kirja>] [T/fin [v [antaa [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[[D Pekka] <D kirja>] is in an EPP SPEC position.
				<[D Pekka] <D kirja>> was made an adjunct.
				Floater <[D Pekka] <D kirja>> dropped: [C [<[D Pekka] <D kirja>>:84 [T/fin [<DP>:84 [v [antaa [P(lle) [D Merja-]]]]]]]]
				= [C [<[D Pekka] <D kirja>> [T/fin [<[D Pekka] <D kirja>> [v [antaa [P(lle) [D Merja-]]]]]]]]
			Dropping A-/A-bar movement.
				(D) failed internal tail test.
				Extraposition will be tried on [C [<[D Pekka] <D kirja>>:84 [T/fin [<DP>:84 [v [antaa [P(lle) [D Merja-]]]]]]]].
			= [C [<[D Pekka] <D kirja>> [T/fin [<[D Pekka] <D kirja>> [v [antaa [P(lle) [D Merja-]]]]]]]]
		Checking LF-interface conditions.
				(D) failed internal tail test.
			LF-interface condition(s) violated
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

C: [C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
D: [D, C/fin]
kirja: [N, D, C/fin]
T/fin: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
v: [v, T/fin, C/fin]
antaa: [V, v, T/fin, C/fin]
P(lle): [P, V, v, T/fin, C/fin]
D: [D, P, V, v, T/fin, C/fin]
Merja-: [N, D, P, V, v, T/fin, C/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[C{T/fin,v,V} [[D Pekka] D{N}]] P(lle)]
			Reconstructing head movement for [C{T/fin,v,V} [[D Pekka] D{N}]].
				Extracted head "T/fin{v,V}" and reconstructed it = [C [[D Pekka] [T/fin{v,V} D{N}]]]
				Extracted head "v{V}" and reconstructed it = [C [[D Pekka] [T/fin [v{V} D{N}]]]]
				Extracted head "antaa" and reconstructed it = [C [[D Pekka] [T/fin [v [antaa D{N}]]]]]
				Extracted head "kirja" from D and created [C [[D Pekka] [T/fin [v [antaa [D kirja]]]]]]
			Dropping floaters...
				[D Pekka] is in an EPP SPEC position.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<D Pekka>:85 [T/fin [<DP>:85 [v [antaa [D kirja]]]]]]]
				= [C [<D Pekka> [T/fin [<D Pekka> [v [antaa [D kirja]]]]]]]
			Dropping A-/A-bar movement.
			=[[C [<D Pekka>:85 [T/fin [<DP>:85 [v [antaa [D kirja]]]]]]] P(lle)]

15.

		Consume "D"

		[[C [<D Pekka> [T/fin [<D Pekka> [v [antaa [D kirja]]]]]]] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[C [<D Pekka>:85 [T/fin [<DP>:85 [v [antaa [D kirja]]]]]]] P(lle){D}]

16.

		Consume "Merja-"

		[[C [<D Pekka> [T/fin [<D Pekka> [v [antaa [D kirja]]]]]]] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[C [<D Pekka>:85 [T/fin [<DP>:85 [v [antaa [D kirja]]]]]]] P(lle){D,N}]

17.
	>>>	Trying candidate parse [[C [<D Pekka> [T/fin [<D Pekka> [v [antaa [D kirja]]]]]]] P(lle){D,N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[C [<D Pekka>:85 [T/fin [<DP>:85 [v [antaa [D kirja]]]]]]] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[C [<D Pekka>:85 [T/fin [<DP>:85 [v [antaa [D kirja]]]]]]] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[C [<D Pekka>:85 [T/fin [<DP>:85 [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]]
			Dropping floaters...
				= [[C [<D Pekka> [T/fin [<D Pekka> [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]]
			Dropping A-/A-bar movement.
				Moving "C D Pekka T/fin __v antaa D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[C/fin [[D N] [T/fin [[D N] [v [V [D N]]]]]]]]
				P(lle) has unaccetable specifier [C [<D Pekka>:85 [T/fin [<DP>:85 [v [antaa [D kirja]]]]]]].
				Extraposition will be tried on [[C [<D Pekka>:85 [T/fin [<DP>:85 [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]].
			= [[C [<D Pekka> [T/fin [<D Pekka> [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]]
		Checking LF-interface conditions.
				P(lle) has unaccetable specifier [C [<D Pekka>:85 [T/fin [<DP>:85 [v [antaa [D kirja]]]]]]].
			LF-interface condition(s) violated
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

C: [C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
T/fin: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
v: [v, T/fin, C/fin]
antaa: [V, v, T/fin, C/fin]
D: [D, V, v, T/fin, C/fin]
kirja: [N, D, V, v, T/fin, C/fin]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[D{N} P(lle)]
			D was opened.
			=[C{T/fin,v,V} [[D Pekka] [[D kirja] P(lle)]]]

18.

		Consume "D"

		[C{T/fin,v,V} [[D Pekka] [[D kirja] P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[C{T/fin,v,V} [[D Pekka] [[D kirja] P(lle){D}]]]

19.

		Consume "Merja-"

		[C{T/fin,v,V} [[D Pekka] [[D kirja] P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[C{T/fin,v,V} [[D Pekka] [[D kirja] P(lle){D,N}]]]

20.
	>>>	Trying candidate parse [C{T/fin,v,V} [[D Pekka] [[D kirja] P(lle){D,N}]]] (3.)
		Reconstructing...
			Reconstructing head movement for [C{T/fin,v,V} [[D Pekka] [[D kirja] P(lle){D,N}]]].
				Extracted head "T/fin{v,V}" and reconstructed it = [C [[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D,N}]]]]
				Extracted head "v{V}" and reconstructed it = [C [[D Pekka] [T/fin [v{V} [[D kirja] P(lle){D,N}]]]]]
				Extracted head "antaa" and reconstructed it = [C [[D Pekka] [T/fin [v [antaa [[D kirja] P(lle){D,N}]]]]]]
				Extracted head "D{N}" from P(lle) and created [C [[D Pekka] [T/fin [v [antaa [[D kirja] [P(lle) D{N}]]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [C [[D Pekka] [T/fin [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]
			Dropping floaters...
				[D Pekka] is in an EPP SPEC position.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<D Pekka>:86 [T/fin [<DP>:86 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]
				= [C [<D Pekka> [T/fin [<D Pekka> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [C [<D Pekka>:86 [T/fin [<DP>:86 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [C [<D Pekka> [T/fin [<D Pekka> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<D Pekka>:86 [T/fin [<DP>:86 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 20/233 operations) <------------------------------------
		Solution:
		[C [<D Pekka> [T/fin [<D Pekka> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]
		Grammar: [C [<D Pekka>:1 [T/fin [<DP>:1 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]
		Spellout C/finP = [C/fin [DP:1 [T/fin [__:1 [v [V [[D N] PP]]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

C: [C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
T/fin: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
v: [v, T/fin, C/fin]
antaa: [V, v, T/fin, C/fin]
D: [D, V, v, T/fin, C/fin]
kirja: [N, D, V, v, T/fin, C/fin]
P(lle): [P, V, v, T/fin, C/fin]
D: [D, P, V, v, T/fin, C/fin]
Merja-: [N, D, P, V, v, T/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 15
['antoi', 'Pekka', 'Merjalle', 'kirjan']


			=None

1.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']
			=T/fin

2.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

3.

		Consume "antaa"

		T/fin{v} + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=T/fin{v,V}

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=T/fin{v,V}

5.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:CAT:FIN,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[T/fin{v,V} D]

6.

		Consume "Pekka"

		[T/fin{v,V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T/fin{v,V} D{N}]

7.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[T/fin{v,V} D{N}] + P(lle)
			Filtering out impossible merge sites...
				Reject [[T/fin [<D Pekka> [v [antaa <D Pekka>]]]] P(lle)] due to bad left branch.
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[T/fin{v,V} [[D Pekka] P(lle)]]

8.

		Consume "D"

		[T/fin{v,V} [[D Pekka] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[T/fin{v,V} [[D Pekka] P(lle){D}]]

9.

		Consume "Merja-"

		[T/fin{v,V} [[D Pekka] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[T/fin{v,V} [[D Pekka] P(lle){D,N}]]

10.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[T/fin{v,V} [[D Pekka] P(lle){D,N}]]

11.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[T/fin{v,V} [[D Pekka] P(lle){D,N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				Avoid [T/fin [<D Pekka> [v [antaa [<D Pekka> <P(lle) [D Merja-]>]]]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				[D Pekka]" has no thematic role
				Avoid [[D Pekka] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
		Ranking completed:
			1. [P(lle){D,N}; D]
			2. [[[D Pekka] P(lle){D,N}]; D]
			3. [[T/fin{v,V} [[D Pekka] P(lle){D,N}]]; D]
		Exploring solution number (1) =[P(lle){D,N} D]
			P(lle) was opened.
			=[T/fin{v,V} [[D Pekka] [[P(lle) [D Merja-]] D]]]

12.

		Consume "kirja"

		[T/fin{v,V} [[D Pekka] [[P(lle) [D Merja-]] D]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[T/fin{v,V} [[D Pekka] [[P(lle) [D Merja-]] D{N}]]]

13.
	>>>	Trying candidate parse [T/fin{v,V} [[D Pekka] [[P(lle) [D Merja-]] D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [T/fin{v,V} [[D Pekka] [[P(lle) [D Merja-]] D{N}]]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[D Pekka] [[P(lle) [D Merja-]] D{N}]]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[D Pekka] [[P(lle) [D Merja-]] D{N}]]]]]
				Extracted head "kirja" from D and created [T/fin [v [antaa [[D Pekka] [[P(lle) [D Merja-]] [D kirja]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:90 [v [antaa [<D Pekka>:90 [[P(lle) [D Merja-]] [D kirja]]]]]]]
				= [T/fin [<D Pekka> [v [antaa [<D Pekka> [[P(lle) [D Merja-]] [D kirja]]]]]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "D".
				New head was spawned due to multiple specifiers at D but its category is unknown!
				Memory buffer: [[P [D N]]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
				D (D) has a specifier [P(lle) [D Merja-]] but is marked for -EPP behavior.
				Extraposition will be tried on [T/fin [<DP>:90 [v [antaa [<D Pekka>:90 [? [[P(lle) [D Merja-]] [D kirja]]]]]]]].
				<D kirja> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
			= [T/fin [<D Pekka> [v [antaa [<D Pekka> [? [[P(lle) [D Merja-]] <D kirja>]]]]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
?: [?, V, v, T/fin]
P(lle): [P, ?, V, v, T/fin]
D: [D, P, ?, V, v, T/fin]
Merja-: [N, D, P, ?, V, v, T/fin]
D: [D, ?, V, v, T/fin]
kirja: [N, D, ?, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D Pekka] P(lle){D,N}] D]
			Reconstructing head movement for [[D Pekka] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [P(lle) [D Merja-]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[D Pekka] [P(lle) [D Merja-]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D Pekka]" has no thematic role
			=[T/fin{v,V} [[[D Pekka] [P(lle) [D Merja-]]] D]]

14.

		Consume "kirja"

		[T/fin{v,V} [[[D Pekka] [P(lle) [D Merja-]]] D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[T/fin{v,V} [[[D Pekka] [P(lle) [D Merja-]]] D{N}]]

15.
	>>>	Trying candidate parse [T/fin{v,V} [[[D Pekka] [P(lle) [D Merja-]]] D{N}]] (2.)
		Reconstructing...
			Reconstructing head movement for [T/fin{v,V} [[[D Pekka] [P(lle) [D Merja-]]] D{N}]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[[D Pekka] [P(lle) [D Merja-]]] D{N}]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[[D Pekka] [P(lle) [D Merja-]]] D{N}]]]]
				Extracted head "kirja" from D and created [T/fin [v [antaa [[[D Pekka] [P(lle) [D Merja-]]] [D kirja]]]]]
			Dropping floaters...
				= [T/fin [v [antaa [[[D Pekka] [P(lle) [D Merja-]]] [D kirja]]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[[D N] [P [D N]]]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				D failed internal tail test.
				[D Pekka]" has no thematic role
				D (D) has a specifier [[D Pekka] [P(lle) [D Merja-]]] but is marked for -EPP behavior.
				Extraposition will be tried on [T/fin [v [antaa [[[D Pekka] [P(lle) [D Merja-]]] [D kirja]]]]].
				<D kirja> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				D failed internal tail test.
				[D Pekka]" has no thematic role
			= [T/fin [v [antaa [[[D Pekka] [P(lle) [D Merja-]]] <D kirja>]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				D failed internal tail test.
				[D Pekka]" has no thematic role
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

T/fin: [T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[T/fin{v,V} [[D Pekka] P(lle){D,N}]] D]
			Reconstructing head movement for [T/fin{v,V} [[D Pekka] P(lle){D,N}]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[D Pekka] P(lle){D,N}]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[D Pekka] P(lle){D,N}]]]]
				Extracted head "D{N}" from P(lle) and created [T/fin [v [antaa [[D Pekka] [P(lle) D{N}]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [T/fin [v [antaa [[D Pekka] [P(lle) [D Merja-]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:91 [v [antaa [<D Pekka>:91 [P(lle) [D Merja-]]]]]]]
				= [T/fin [<D Pekka> [v [antaa [<D Pekka> [P(lle) [D Merja-]]]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [T/fin [<DP>:91 [v [antaa [<D Pekka>:91 [P(lle) [D Merja-]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
			=[[T/fin [<DP>:91 [v [antaa [<D Pekka>:91 <P(lle) [D Merja-]>]]]]] D]

16.

		Consume "kirja"

		[[T/fin [<D Pekka> [v [antaa [<D Pekka> <P(lle) [D Merja-]>]]]]] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[T/fin [<DP>:91 [v [antaa [<D Pekka>:91 <P(lle) [D Merja-]>]]]]] D{N}]

17.
	>>>	Trying candidate parse [[T/fin [<D Pekka> [v [antaa [<D Pekka> <P(lle) [D Merja-]>]]]]] D{N}] (3.)
		Reconstructing...
			Reconstructing head movement for [[T/fin [<DP>:91 [v [antaa [<D Pekka>:91 <P(lle) [D Merja-]>]]]]] D{N}].
				Extracted head "kirja" from D and created [[T/fin [<DP>:91 [v [antaa [<D Pekka>:91 <P(lle) [D Merja-]>]]]]] [D kirja]]
			Dropping floaters...
				D failed to tail.
				<D kirja> was made an adjunct.
				= [[T/fin [<D Pekka> [v [antaa [<D Pekka> <P(lle) [D Merja-]>]]]]] <D kirja>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [[T/fin [<DP>:91 [v [antaa [<D Pekka>:91 <P(lle) [D Merja-]>]]]]] <D kirja>].
			= [[T/fin [<D Pekka> [v [antaa [<D Pekka> <P(lle) [D Merja-]>]]]]] <D kirja>]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D]
kirja: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 16
['antoi#foc', 'Pekka', 'Merjalle', 'kirjan']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'antoi']
			=C

2.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		C + T/fin
			Filtering out impossible merge sites...
			Sink "T/fin" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T/fin]
			=C{T/fin}

3.

		Consume "v"

		C{T/fin} + v
			Filtering out impossible merge sites...
			Sink "v" into C{T/fin} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin}*v]
			=C{T/fin,v}

4.

		Consume "antaa"

		C{T/fin,v} + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into C{T/fin,v} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin,v}*antaa]
			=C{T/fin,v,V}

5.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=C{T/fin,v,V}

6.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:CAT:FIN,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		C{T/fin,v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T/fin,v,V} D]
			C{T/fin,v,V} cannot be opened.
			=[C{T/fin,v,V} D]

7.

		Consume "Pekka"

		[C{T/fin,v,V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T/fin,v,V} D{N}]

8.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[C{T/fin,v,V} D{N}] + P(lle)
			Filtering out impossible merge sites...
				Reject [[C [<D Pekka> [T/fin [<D Pekka> [v [antaa <D Pekka>]]]]]] P(lle)] due to bad left branch.
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[C{T/fin,v,V} [[D Pekka] P(lle)]]

9.

		Consume "D"

		[C{T/fin,v,V} [[D Pekka] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[C{T/fin,v,V} [[D Pekka] P(lle){D}]]

10.

		Consume "Merja-"

		[C{T/fin,v,V} [[D Pekka] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[C{T/fin,v,V} [[D Pekka] P(lle){D,N}]]

11.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[C{T/fin,v,V} [[D Pekka] P(lle){D,N}]]

12.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[C{T/fin,v,V} [[D Pekka] P(lle){D,N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				[D Pekka]" has no thematic role
				Avoid [[D Pekka] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
		Ranking completed:
			1. [[C{T/fin,v,V} [[D Pekka] P(lle){D,N}]]; D]
			2. [P(lle){D,N}; D]
			3. [[[D Pekka] P(lle){D,N}]; D]
		Exploring solution number (1) =[[C{T/fin,v,V} [[D Pekka] P(lle){D,N}]] D]
			Reconstructing head movement for [C{T/fin,v,V} [[D Pekka] P(lle){D,N}]].
				Extracted head "T/fin{v,V}" and reconstructed it = [C [[D Pekka] [T/fin{v,V} P(lle){D,N}]]]
				Extracted head "v{V}" and reconstructed it = [C [[D Pekka] [T/fin [v{V} P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [C [[D Pekka] [T/fin [v [antaa P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [C [[D Pekka] [T/fin [v [antaa [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [C [[D Pekka] [T/fin [v [antaa [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[D Pekka] is in an EPP SPEC position.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<D Pekka>:96 [T/fin [<DP>:96 [v [antaa [P(lle) [D Merja-]]]]]]]]
				= [C [<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]]]
			Dropping A-/A-bar movement.
			=[[C [<D Pekka>:96 [T/fin [<DP>:96 [v [antaa [P(lle) [D Merja-]]]]]]]] D]

13.

		Consume "kirja"

		[[C [<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]]] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[C [<D Pekka>:96 [T/fin [<DP>:96 [v [antaa [P(lle) [D Merja-]]]]]]]] D{N}]

14.
	>>>	Trying candidate parse [[C [<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]]] D{N}] (1.)
		Reconstructing...
			Reconstructing head movement for [[C [<D Pekka>:96 [T/fin [<DP>:96 [v [antaa [P(lle) [D Merja-]]]]]]]] D{N}].
				Extracted head "kirja" from D and created [[C [<D Pekka>:96 [T/fin [<DP>:96 [v [antaa [P(lle) [D Merja-]]]]]]]] [D kirja]]
			Dropping floaters...
				D failed to tail.
				<D kirja> was made an adjunct.
				= [[C [<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]]] <D kirja>]
			Dropping A-/A-bar movement.
			= [[C [<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]]] <D kirja>]
		Checking LF-interface conditions.
			D<[D]> failed to tail features [!COMP:*][CAT:v]
D
			Final tail-head check failed.
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

C: [C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
T/fin: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
v: [v, T/fin, C/fin]
antaa: [V, v, T/fin, C/fin]
P(lle): [P, V, v, T/fin, C/fin]
D: [D, P, V, v, T/fin, C/fin]
Merja-: [N, D, P, V, v, T/fin, C/fin]
D: [D]
kirja: [N, D]

			Let's find another solution...
.
.
.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[P(lle){D,N} D]
			P(lle) was opened.
			=[C{T/fin,v,V} [[D Pekka] [[P(lle) [D Merja-]] D]]]

15.

		Consume "kirja"

		[C{T/fin,v,V} [[D Pekka] [[P(lle) [D Merja-]] D]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[C{T/fin,v,V} [[D Pekka] [[P(lle) [D Merja-]] D{N}]]]

16.
	>>>	Trying candidate parse [C{T/fin,v,V} [[D Pekka] [[P(lle) [D Merja-]] D{N}]]] (2.)
		Reconstructing...
			Reconstructing head movement for [C{T/fin,v,V} [[D Pekka] [[P(lle) [D Merja-]] D{N}]]].
				Extracted head "T/fin{v,V}" and reconstructed it = [C [[D Pekka] [T/fin{v,V} [[P(lle) [D Merja-]] D{N}]]]]
				Extracted head "v{V}" and reconstructed it = [C [[D Pekka] [T/fin [v{V} [[P(lle) [D Merja-]] D{N}]]]]]
				Extracted head "antaa" and reconstructed it = [C [[D Pekka] [T/fin [v [antaa [[P(lle) [D Merja-]] D{N}]]]]]]
				Extracted head "kirja" from D and created [C [[D Pekka] [T/fin [v [antaa [[P(lle) [D Merja-]] [D kirja]]]]]]]
			Dropping floaters...
				[D Pekka] is in an EPP SPEC position.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<D Pekka>:97 [T/fin [<DP>:97 [v [antaa [[P(lle) [D Merja-]] [D kirja]]]]]]]]
				= [C [<D Pekka> [T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] [D kirja]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[P [D N]]]
				D (D) has a specifier [P(lle) [D Merja-]] but is marked for -EPP behavior.
				Extraposition will be tried on [C [<D Pekka>:97 [T/fin [<DP>:97 [v [antaa [[P(lle) [D Merja-]] [D kirja]]]]]]]].
				<D kirja> was made adjunct by an extraposition rule.
			= [C [<D Pekka> [T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] <D kirja>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<D Pekka>:97 [T/fin [<DP>:97 [v [antaa [[P(lle) [D Merja-]] <D kirja>]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 16/170 operations) <------------------------------------
		Solution:
		[C [<D Pekka> [T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] <D kirja>]]]]]]]
		Grammar: [C [<D Pekka>:1 [T/fin [<DP>:1 [v [antaa [[P(lle) [D Merja-]] <D kirja>]]]]]]]
		Spellout C/finP = [C/fin [DP:1 [T/fin [__:1 [v [V [[P [D N]] DP]]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

C: [C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
T/fin: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
v: [v, T/fin, C/fin]
antaa: [V, v, T/fin, C/fin]
P(lle): [P, V, v, T/fin, C/fin]
D: [D, P, V, v, T/fin, C/fin]
Merja-: [N, D, P, V, v, T/fin, C/fin]
D: [D, V, v, T/fin, C/fin]
kirja: [N, D, V, v, T/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 17
['antoi', 'kirjan', 'Pekka', 'Merjalle']


			=None

1.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']
			=T/fin

2.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

3.

		Consume "antaa"

		T/fin{v} + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=T/fin{v,V}

4.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=T/fin{v,V}

5.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[T/fin{v,V} D]

6.

		Consume "kirja"

		[T/fin{v,V} D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[T/fin{v,V} D{N}]

7.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[T/fin{v,V} D{N}]

8.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:CAT:FIN,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[T/fin{v,V} D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [kirja D] due to complement selection.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; D]
			2. [[T/fin{v,V} D{N}]; D]
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[T/fin{v,V} [[D kirja] D]]

9.

		Consume "Pekka"

		[T/fin{v,V} [[D kirja] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T/fin{v,V} [[D kirja] D{N}]]

10.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[T/fin{v,V} [[D kirja] D{N}]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				An EPP-head "T/fin" lacks specifier but needs one.
				Avoid [T/fin [<D Pekka> [v [antaa [[D kirja] <D Pekka>]]]]] as left branch because it constitutes illicit structure.
				Avoid [[[D kirja] D{N}], P(lle)] because the operation breaks up an existing selectional dependency.
				Avoid [Pekka P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Prioritize [[D kirja] D{N}] because all solutions were negative.
		Ranking completed:
			1. [[[D kirja] D{N}]; P(lle)]
			2. [D{N}; P(lle)]
			3. [[T/fin{v,V} [[D kirja] D{N}]]; P(lle)]
		Exploring solution number (1) =[[[D kirja] D{N}] P(lle)]
			Reconstructing head movement for [[D kirja] D{N}].
				Extracted head "Pekka" from D and created [[D kirja] [D Pekka]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				= [[D kirja] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "D".
				Memory buffer: [[D N]]
				D (D) has a specifier [D kirja] but is marked for -EPP behavior.
				Extraposition will be tried on [[D kirja] [D Pekka]].
				<D Pekka> was made adjunct by an extraposition rule.
			=[T/fin{v,V} [[[D kirja] <D Pekka>] P(lle)]]

11.

		Consume "D"

		[T/fin{v,V} [[[D kirja] <D Pekka>] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[T/fin{v,V} [[[D kirja] <D Pekka>] P(lle){D}]]

12.

		Consume "Merja-"

		[T/fin{v,V} [[[D kirja] <D Pekka>] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[T/fin{v,V} [[[D kirja] <D Pekka>] P(lle){D,N}]]

13.
	>>>	Trying candidate parse [T/fin{v,V} [[[D kirja] <D Pekka>] P(lle){D,N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [T/fin{v,V} [[[D kirja] <D Pekka>] P(lle){D,N}]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[[D kirja] <D Pekka>] P(lle){D,N}]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[[D kirja] <D Pekka>] P(lle){D,N}]]]]
				Extracted head "D{N}" from P(lle) and created [T/fin [v [antaa [[[D kirja] <D Pekka>] [P(lle) D{N}]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [T/fin [v [antaa [[[D kirja] <D Pekka>] [P(lle) [D Merja-]]]]]]
			Dropping floaters...
				= [T/fin [v [antaa [[[D kirja] <D Pekka>] [P(lle) [D Merja-]]]]]]
			Dropping A-/A-bar movement.
				Moving "D kirja D Pekka " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[[D N] [D N]]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				D failed internal tail test.
				[[D kirja] <D Pekka>]" has no thematic role
				Extraposition will be tried on [T/fin [v [antaa [[[D kirja] <D Pekka>] [P(lle) [D Merja-]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				D failed internal tail test.
			= [T/fin [v [antaa [[[D kirja] <D Pekka>] <P(lle) [D Merja-]>]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				D failed internal tail test.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

T/fin: [T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} P(lle)]
			D was opened.
			=[T/fin{v,V} [[D kirja] [[D Pekka] P(lle)]]]

14.

		Consume "D"

		[T/fin{v,V} [[D kirja] [[D Pekka] P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[T/fin{v,V} [[D kirja] [[D Pekka] P(lle){D}]]]

15.

		Consume "Merja-"

		[T/fin{v,V} [[D kirja] [[D Pekka] P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[T/fin{v,V} [[D kirja] [[D Pekka] P(lle){D,N}]]]

16.
	>>>	Trying candidate parse [T/fin{v,V} [[D kirja] [[D Pekka] P(lle){D,N}]]] (2.)
		Reconstructing...
			Reconstructing head movement for [T/fin{v,V} [[D kirja] [[D Pekka] P(lle){D,N}]]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[D kirja] [[D Pekka] P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[D kirja] [[D Pekka] P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [T/fin [v [antaa [[D kirja] [[D Pekka] [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [T/fin [v [antaa [[D kirja] [[D Pekka] [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:100 [v [antaa [[D kirja] [<D Pekka>:100 [P(lle) [D Merja-]]]]]]]]
				= [T/fin [<D Pekka> [v [antaa [[D kirja] [<D Pekka> [P(lle) [D Merja-]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				New head was spawned due to multiple specifiers at P(lle) but its category is unknown!
				Memory buffer: [[D N]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [T/fin [<DP>:100 [v [antaa [[D kirja] [? [<D Pekka>:100 [P(lle) [D Merja-]]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
			= [T/fin [<D Pekka> [v [antaa [[D kirja] [? [<D Pekka> <P(lle) [D Merja-]>]]]]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
?: [?, V, v, T/fin]
D: [D, ?, V, v, T/fin]
Pekka: [N, D, ?, V, v, T/fin]
P(lle): [P, ?, V, v, T/fin]
D: [D, P, ?, V, v, T/fin]
Merja-: [N, D, P, ?, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[T/fin{v,V} [[D kirja] D{N}]] P(lle)]
			Reconstructing head movement for [T/fin{v,V} [[D kirja] D{N}]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[D kirja] D{N}]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[D kirja] D{N}]]]]
				Extracted head "Pekka" from D and created [T/fin [v [antaa [[D kirja] [D Pekka]]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:101 [v [antaa [[D kirja] <D Pekka>:101]]]]]
				= [T/fin [<D Pekka> [v [antaa [[D kirja] <D Pekka>]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [T/fin [<DP>:101 [v [antaa [[D kirja] <D Pekka>:101]]]]].
			=[[T/fin [<DP>:101 [v [antaa [[D kirja] <D Pekka>:101]]]]] P(lle)]

17.

		Consume "D"

		[[T/fin [<D Pekka> [v [antaa [[D kirja] <D Pekka>]]]]] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[T/fin [<DP>:101 [v [antaa [[D kirja] <D Pekka>:101]]]]] P(lle){D}]

18.

		Consume "Merja-"

		[[T/fin [<D Pekka> [v [antaa [[D kirja] <D Pekka>]]]]] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[T/fin [<DP>:101 [v [antaa [[D kirja] <D Pekka>:101]]]]] P(lle){D,N}]

19.
	>>>	Trying candidate parse [[T/fin [<D Pekka> [v [antaa [[D kirja] <D Pekka>]]]]] P(lle){D,N}] (3.)
		Reconstructing...
			Reconstructing head movement for [[T/fin [<DP>:101 [v [antaa [[D kirja] <D Pekka>:101]]]]] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[T/fin [<DP>:101 [v [antaa [[D kirja] <D Pekka>:101]]]]] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[T/fin [<DP>:101 [v [antaa [[D kirja] <D Pekka>:101]]]]] [P(lle) [D Merja-]]]
			Dropping floaters...
				= [[T/fin [<D Pekka> [v [antaa [[D kirja] <D Pekka>]]]]] [P(lle) [D Merja-]]]
			Dropping A-/A-bar movement.
				Moving "T/fin __v antaa D kirja D Pekka " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[T/fin [[D N] [v [V [[D N] [D N]]]]]]]
				An EPP-head "T/fin" lacks specifier but needs one.
				P(lle) has unaccetable specifier [T/fin [<DP>:101 [v [antaa [[D kirja] <D Pekka>:101]]]]].
				Extraposition will be tried on [[T/fin [<DP>:101 [v [antaa [[D kirja] <D Pekka>:101]]]]] [P(lle) [D Merja-]]].
			= [[T/fin [<D Pekka> [v [antaa [[D kirja] <D Pekka>]]]]] [P(lle) [D Merja-]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				P(lle) has unaccetable specifier [T/fin [<DP>:101 [v [antaa [[D kirja] <D Pekka>:101]]]]].
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{v,V} D{N}] D]
			Reconstructing head movement for [T/fin{v,V} D{N}].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} D{N}]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa D{N}]]]
				Extracted head "kirja" from D and created [T/fin [v [antaa [D kirja]]]]
			Dropping floaters...
				= [T/fin [v [antaa [D kirja]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [T/fin [v [antaa [D kirja]]]].
			=[[T/fin [v [antaa [D kirja]]]] D]

20.

		Consume "Pekka"

		[[T/fin [v [antaa [D kirja]]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[T/fin [v [antaa [D kirja]]]] D{N}]

21.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[T/fin [v [antaa [D kirja]]]] D{N}] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [[T/fin [v [antaa [D kirja]]]] <D Pekka>] as left branch because it constitutes illicit structure.
				Avoid [Pekka P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[T/fin [v [antaa [D kirja]]]] D{N}]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[T/fin [v [antaa [D kirja]]]] [[D Pekka] P(lle)]]

22.

		Consume "D"

		[[T/fin [v [antaa [D kirja]]]] [[D Pekka] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[T/fin [v [antaa [D kirja]]]] [[D Pekka] P(lle){D}]]

23.

		Consume "Merja-"

		[[T/fin [v [antaa [D kirja]]]] [[D Pekka] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[T/fin [v [antaa [D kirja]]]] [[D Pekka] P(lle){D,N}]]

24.
	>>>	Trying candidate parse [[T/fin [v [antaa [D kirja]]]] [[D Pekka] P(lle){D,N}]] (4.)
		Reconstructing...
			Reconstructing head movement for [[T/fin [v [antaa [D kirja]]]] [[D Pekka] P(lle){D,N}]].
				Extracted head "D{N}" from P(lle) and created [[T/fin [v [antaa [D kirja]]]] [[D Pekka] [P(lle) D{N}]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[T/fin [v [antaa [D kirja]]]] [[D Pekka] [P(lle) [D Merja-]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[T/fin [v [antaa [D kirja]]]] [[D Pekka] [P(lle) [D Merja-]]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "P(lle)".
				Moving "T/fin v antaa D kirja " into memory buffer from SPEC of "P(lle)".
				New head was spawned due to multiple specifiers at P(lle) but its category is unknown!
				Memory buffer: [[D N], [T/fin [v [V [D N]]]]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				An uninterpretable grammatical head without lexical category was detected.
				[D Pekka]" has no thematic role
				Extraposition will be tried on [[T/fin [v [antaa [D kirja]]]] [? [[D Pekka] [P(lle) [D Merja-]]]]].
			= [[T/fin [v [antaa [D kirja]]]] [? [[D Pekka] [P(lle) [D Merja-]]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				An uninterpretable grammatical head without lexical category was detected.
				[D Pekka]" has no thematic role
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

T/fin: [T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
?: [?]
D: [D, ?]
Pekka: [N, D, ?]
P(lle): [P, ?]
D: [D, P, ?]
Merja-: [N, D, P, ?]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[T/fin [v [antaa [D kirja]]]] D{N}] P(lle)]
			Reconstructing head movement for [[T/fin [v [antaa [D kirja]]]] D{N}].
				Extracted head "Pekka" from D and created [[T/fin [v [antaa [D kirja]]]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				= [[T/fin [v [antaa [D kirja]]]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[T/fin [v [antaa [D kirja]]]] <D Pekka>].
			=[[[T/fin [v [antaa [D kirja]]]] <D Pekka>] P(lle)]

25.

		Consume "D"

		[[[T/fin [v [antaa [D kirja]]]] <D Pekka>] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[[T/fin [v [antaa [D kirja]]]] <D Pekka>] P(lle){D}]

26.

		Consume "Merja-"

		[[[T/fin [v [antaa [D kirja]]]] <D Pekka>] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[[T/fin [v [antaa [D kirja]]]] <D Pekka>] P(lle){D,N}]

27.
	>>>	Trying candidate parse [[[T/fin [v [antaa [D kirja]]]] <D Pekka>] P(lle){D,N}] (5.)
		Reconstructing...
			Reconstructing head movement for [[[T/fin [v [antaa [D kirja]]]] <D Pekka>] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[[T/fin [v [antaa [D kirja]]]] <D Pekka>] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[[T/fin [v [antaa [D kirja]]]] <D Pekka>] [P(lle) [D Merja-]]]
			Dropping floaters...
				= [[[T/fin [v [antaa [D kirja]]]] <D Pekka>] [P(lle) [D Merja-]]]
			Dropping A-/A-bar movement.
				Moving "T/fin v antaa D kirja D Pekka " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[[T/fin [v [V [D N]]]] [D N]]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				P(lle) has unaccetable specifier [[T/fin [v [antaa [D kirja]]]] <D Pekka>].
				Extraposition will be tried on [[[T/fin [v [antaa [D kirja]]]] <D Pekka>] [P(lle) [D Merja-]]].
			= [[[T/fin [v [antaa [D kirja]]]] <D Pekka>] [P(lle) [D Merja-]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				P(lle) has unaccetable specifier [[T/fin [v [antaa [D kirja]]]] <D Pekka>].
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

T/fin: [T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
D: [D]
Pekka: [N, D]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 18
['antoi#foc', 'kirjan', 'Pekka', 'Merjalle']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'antoi']
			=C

2.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		C + T/fin
			Filtering out impossible merge sites...
			Sink "T/fin" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T/fin]
			=C{T/fin}

3.

		Consume "v"

		C{T/fin} + v
			Filtering out impossible merge sites...
			Sink "v" into C{T/fin} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin}*v]
			=C{T/fin,v}

4.

		Consume "antaa"

		C{T/fin,v} + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into C{T/fin,v} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin,v}*antaa]
			=C{T/fin,v,V}

5.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=C{T/fin,v,V}

6.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		C{T/fin,v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T/fin,v,V} D]
			C{T/fin,v,V} cannot be opened.
			=[C{T/fin,v,V} D]

7.

		Consume "kirja"

		[C{T/fin,v,V} D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[C{T/fin,v,V} D{N}]

8.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[C{T/fin,v,V} D{N}]

9.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:CAT:FIN,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[C{T/fin,v,V} D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [C [T/fin [v [antaa [D kirja]]]]] as left branch because it constitutes illicit structure.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [kirja D] due to complement selection.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; D]
			2. [[C{T/fin,v,V} D{N}]; D]
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[C{T/fin,v,V} [[D kirja] D]]

10.

		Consume "Pekka"

		[C{T/fin,v,V} [[D kirja] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T/fin,v,V} [[D kirja] D{N}]]

11.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[C{T/fin,v,V} [[D kirja] D{N}]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC, P(lle).
				Avoid [Pekka P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
		Ranking completed:
			1. [[[D kirja] D{N}]; P(lle)]
			2. [[C{T/fin,v,V} [[D kirja] D{N}]]; P(lle)]
			3. [D{N}; P(lle)]
		Exploring solution number (1) =[[[D kirja] D{N}] P(lle)]
			Reconstructing head movement for [[D kirja] D{N}].
				Extracted head "Pekka" from D and created [[D kirja] [D Pekka]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				= [[D kirja] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "D".
				Memory buffer: [[D N]]
				D (D) has a specifier [D kirja] but is marked for -EPP behavior.
				Extraposition will be tried on [[D kirja] [D Pekka]].
				<D Pekka> was made adjunct by an extraposition rule.
			=[C{T/fin,v,V} [[[D kirja] <D Pekka>] P(lle)]]

12.

		Consume "D"

		[C{T/fin,v,V} [[[D kirja] <D Pekka>] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[C{T/fin,v,V} [[[D kirja] <D Pekka>] P(lle){D}]]

13.

		Consume "Merja-"

		[C{T/fin,v,V} [[[D kirja] <D Pekka>] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[C{T/fin,v,V} [[[D kirja] <D Pekka>] P(lle){D,N}]]

14.
	>>>	Trying candidate parse [C{T/fin,v,V} [[[D kirja] <D Pekka>] P(lle){D,N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{T/fin,v,V} [[[D kirja] <D Pekka>] P(lle){D,N}]].
				Extracted head "T/fin{v,V}" and reconstructed it = [C [[[D kirja] <D Pekka>] [T/fin{v,V} P(lle){D,N}]]]
				Extracted head "v{V}" and reconstructed it = [C [[[D kirja] <D Pekka>] [T/fin [v{V} P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [C [[[D kirja] <D Pekka>] [T/fin [v [antaa P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [C [[[D kirja] <D Pekka>] [T/fin [v [antaa [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [C [[[D kirja] <D Pekka>] [T/fin [v [antaa [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[[D kirja] <D Pekka>] failed to tail [!COMP:*][CAT:v]
				<[D kirja] <D Pekka>> was made an adjunct.
				Floater <[D kirja] <D Pekka>> dropped: [C [<[D kirja] <D Pekka>>:106 [T/fin [v [<DP>:106 [antaa [P(lle) [D Merja-]]]]]]]]
				= [C [<[D kirja] <D Pekka>> [T/fin [v [<[D kirja] <D Pekka>> [antaa [P(lle) [D Merja-]]]]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [C [<[D kirja] <D Pekka>>:106 [T/fin [v [<DP>:106 [antaa [P(lle) [D Merja-]]]]]]]].
			= [C [<[D kirja] <D Pekka>> [T/fin [v [<[D kirja] <D Pekka>> [antaa [P(lle) [D Merja-]]]]]]]]
		Checking LF-interface conditions.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
			LF-interface condition(s) violated
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

C: [C/fin]
D: [D, C/fin]
kirja: [N, D, C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
T/fin: [T/fin, C/fin]
v: [v, T/fin, C/fin]
(D): [D, v, T/fin, C/fin]
(N): [N, D, v, T/fin, C/fin]
(D): [D, v, T/fin, C/fin]
(N): [N, D, v, T/fin, C/fin]
antaa: [V, v, T/fin, C/fin]
P(lle): [P, V, v, T/fin, C/fin]
D: [D, P, V, v, T/fin, C/fin]
Merja-: [N, D, P, V, v, T/fin, C/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[C{T/fin,v,V} [[D kirja] D{N}]] P(lle)]
			Reconstructing head movement for [C{T/fin,v,V} [[D kirja] D{N}]].
				Extracted head "T/fin{v,V}" and reconstructed it = [C [[D kirja] [T/fin{v,V} D{N}]]]
				Extracted head "v{V}" and reconstructed it = [C [[D kirja] [T/fin [v{V} D{N}]]]]
				Extracted head "antaa" and reconstructed it = [C [[D kirja] [T/fin [v [antaa D{N}]]]]]
				Extracted head "Pekka" from D and created [C [[D kirja] [T/fin [v [antaa [D Pekka]]]]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [C [<D kirja>:107 [T/fin [v [<DP>:107 [antaa [D Pekka]]]]]]]
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<D kirja>:107 [T/fin [<DP>:108 [v [<DP>:107 [antaa <D Pekka>:108]]]]]]]
				= [C [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa <D Pekka>]]]]]]]
			Dropping A-/A-bar movement.
			=[[C [<D kirja>:107 [T/fin [<DP>:108 [v [<DP>:107 [antaa <D Pekka>:108]]]]]]] P(lle)]

15.

		Consume "D"

		[[C [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa <D Pekka>]]]]]]] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[C [<D kirja>:107 [T/fin [<DP>:108 [v [<DP>:107 [antaa <D Pekka>:108]]]]]]] P(lle){D}]

16.

		Consume "Merja-"

		[[C [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa <D Pekka>]]]]]]] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[C [<D kirja>:107 [T/fin [<DP>:108 [v [<DP>:107 [antaa <D Pekka>:108]]]]]]] P(lle){D,N}]

17.
	>>>	Trying candidate parse [[C [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa <D Pekka>]]]]]]] P(lle){D,N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[C [<D kirja>:107 [T/fin [<DP>:108 [v [<DP>:107 [antaa <D Pekka>:108]]]]]]] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[C [<D kirja>:107 [T/fin [<DP>:108 [v [<DP>:107 [antaa <D Pekka>:108]]]]]]] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[C [<D kirja>:107 [T/fin [<DP>:108 [v [<DP>:107 [antaa <D Pekka>:108]]]]]]] [P(lle) [D Merja-]]]
			Dropping floaters...
				= [[C [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa <D Pekka>]]]]]]] [P(lle) [D Merja-]]]
			Dropping A-/A-bar movement.
				Moving "C D kirja T/fin __v __antaa D Pekka " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[C/fin [[D N] [T/fin [[D N] [v [[D N] [V [D N]]]]]]]]]
				P(lle) has unaccetable specifier [C [<D kirja>:107 [T/fin [<DP>:108 [v [<DP>:107 [antaa <D Pekka>:108]]]]]]].
				Extraposition will be tried on [[C [<D kirja>:107 [T/fin [<DP>:108 [v [<DP>:107 [antaa <D Pekka>:108]]]]]]] [P(lle) [D Merja-]]].
			= [[C [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa <D Pekka>]]]]]]] [P(lle) [D Merja-]]]
		Checking LF-interface conditions.
				P(lle) has unaccetable specifier [C [<D kirja>:107 [T/fin [<DP>:108 [v [<DP>:107 [antaa <D Pekka>:108]]]]]]].
			LF-interface condition(s) violated
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

C: [C/fin]
D: [D, C/fin]
kirja: [N, D, C/fin]
T/fin: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
v: [v, T/fin, C/fin]
(D): [D, v, T/fin, C/fin]
(N): [N, D, v, T/fin, C/fin]
antaa: [V, v, T/fin, C/fin]
D: [D, V, v, T/fin, C/fin]
Pekka: [N, D, V, v, T/fin, C/fin]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[D{N} P(lle)]
			D was opened.
			=[C{T/fin,v,V} [[D kirja] [[D Pekka] P(lle)]]]

18.

		Consume "D"

		[C{T/fin,v,V} [[D kirja] [[D Pekka] P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[C{T/fin,v,V} [[D kirja] [[D Pekka] P(lle){D}]]]

19.

		Consume "Merja-"

		[C{T/fin,v,V} [[D kirja] [[D Pekka] P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[C{T/fin,v,V} [[D kirja] [[D Pekka] P(lle){D,N}]]]

20.
	>>>	Trying candidate parse [C{T/fin,v,V} [[D kirja] [[D Pekka] P(lle){D,N}]]] (3.)
		Reconstructing...
			Reconstructing head movement for [C{T/fin,v,V} [[D kirja] [[D Pekka] P(lle){D,N}]]].
				Extracted head "T/fin{v,V}" and reconstructed it = [C [[D kirja] [T/fin{v,V} [[D Pekka] P(lle){D,N}]]]]
				Extracted head "v{V}" and reconstructed it = [C [[D kirja] [T/fin [v{V} [[D Pekka] P(lle){D,N}]]]]]
				Extracted head "antaa" and reconstructed it = [C [[D kirja] [T/fin [v [antaa [[D Pekka] P(lle){D,N}]]]]]]
				Extracted head "D{N}" from P(lle) and created [C [[D kirja] [T/fin [v [antaa [[D Pekka] [P(lle) D{N}]]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [C [[D kirja] [T/fin [v [antaa [[D Pekka] [P(lle) [D Merja-]]]]]]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [C [<D kirja>:109 [T/fin [v [<DP>:109 [antaa [[D Pekka] [P(lle) [D Merja-]]]]]]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<D kirja>:109 [T/fin [<DP>:110 [v [<DP>:109 [antaa [<D Pekka>:110 [P(lle) [D Merja-]]]]]]]]]]
				= [C [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [<D Pekka> [P(lle) [D Merja-]]]]]]]]]]
			Dropping A-/A-bar movement.
			= [C [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [<D Pekka> [P(lle) [D Merja-]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<D kirja>:109 [T/fin [<DP>:110 [v [<DP>:109 [antaa [<D Pekka>:110 [P(lle) [D Merja-]]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 20/249 operations) <------------------------------------
		Solution:
		[C [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [<D Pekka> [P(lle) [D Merja-]]]]]]]]]]
		Grammar: [C [<D kirja>:1 [T/fin [<DP>:2 [v [<DP>:1 [antaa [<D Pekka>:2 [P(lle) [D Merja-]]]]]]]]]]
		Spellout C/finP = [C/fin [DP:1 [T/fin [__:2 [v [__:1 [V [DP:2 [P [D N]]]]]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

C: [C/fin]
D: [D, C/fin]
kirja: [N, D, C/fin]
T/fin: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
v: [v, T/fin, C/fin]
(D): [D, v, T/fin, C/fin]
(N): [N, D, v, T/fin, C/fin]
antaa: [V, v, T/fin, C/fin]
D: [D, V, v, T/fin, C/fin]
Pekka: [N, D, V, v, T/fin, C/fin]
P(lle): [P, V, v, T/fin, C/fin]
D: [D, P, V, v, T/fin, C/fin]
Merja-: [N, D, P, V, v, T/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 19
['antoi', 'kirjan', 'Merjalle', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']
			=T/fin

2.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

3.

		Consume "antaa"

		T/fin{v} + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=T/fin{v,V}

4.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=T/fin{v,V}

5.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[T/fin{v,V} D]

6.

		Consume "kirja"

		[T/fin{v,V} D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[T/fin{v,V} D{N}]

7.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[T/fin{v,V} D{N}] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[T/fin{v,V} D{N}]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[T/fin{v,V} [[D kirja] P(lle)]]

8.

		Consume "D"

		[T/fin{v,V} [[D kirja] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[T/fin{v,V} [[D kirja] P(lle){D}]]

9.

		Consume "Merja-"

		[T/fin{v,V} [[D kirja] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[T/fin{v,V} [[D kirja] P(lle){D,N}]]

10.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[T/fin{v,V} [[D kirja] P(lle){D,N}]]

11.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:CAT:FIN,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[T/fin{v,V} [[D kirja] P(lle){D,N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				[D kirja]" has no thematic role
				Avoid [[D kirja] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
		Ranking completed:
			1. [P(lle){D,N}; D]
			2. [[[D kirja] P(lle){D,N}]; D]
			3. [[T/fin{v,V} [[D kirja] P(lle){D,N}]]; D]
		Exploring solution number (1) =[P(lle){D,N} D]
			P(lle) was opened.
			=[T/fin{v,V} [[D kirja] [[P(lle) [D Merja-]] D]]]

12.

		Consume "Pekka"

		[T/fin{v,V} [[D kirja] [[P(lle) [D Merja-]] D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T/fin{v,V} [[D kirja] [[P(lle) [D Merja-]] D{N}]]]

13.
	>>>	Trying candidate parse [T/fin{v,V} [[D kirja] [[P(lle) [D Merja-]] D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [T/fin{v,V} [[D kirja] [[P(lle) [D Merja-]] D{N}]]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[D kirja] [[P(lle) [D Merja-]] D{N}]]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[D kirja] [[P(lle) [D Merja-]] D{N}]]]]]
				Extracted head "Pekka" from D and created [T/fin [v [antaa [[D kirja] [[P(lle) [D Merja-]] [D Pekka]]]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:111 [v [antaa [[D kirja] [[P(lle) [D Merja-]] <D Pekka>:111]]]]]]
				= [T/fin [<D Pekka> [v [antaa [[D kirja] [[P(lle) [D Merja-]] <D Pekka>]]]]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				An EPP-head "T/fin" lacks specifier but needs one.
				[D kirja]" has no thematic role
				Extraposition will be tried on [T/fin [<DP>:111 [v [antaa [[D kirja] [[P(lle) [D Merja-]] <D Pekka>:111]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
			= [T/fin [<D Pekka> [v [antaa [[D kirja] [<P(lle) [D Merja-]> <D Pekka>]]]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D kirja] P(lle){D,N}] D]
			Reconstructing head movement for [[D kirja] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[D kirja] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D kirja] [P(lle) [D Merja-]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				= [[D kirja] [P(lle) [D Merja-]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
			=[T/fin{v,V} [[[D kirja] [P(lle) [D Merja-]]] D]]

14.

		Consume "Pekka"

		[T/fin{v,V} [[[D kirja] [P(lle) [D Merja-]]] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T/fin{v,V} [[[D kirja] [P(lle) [D Merja-]]] D{N}]]

15.
	>>>	Trying candidate parse [T/fin{v,V} [[[D kirja] [P(lle) [D Merja-]]] D{N}]] (2.)
		Reconstructing...
			Reconstructing head movement for [T/fin{v,V} [[[D kirja] [P(lle) [D Merja-]]] D{N}]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[[D kirja] [P(lle) [D Merja-]]] D{N}]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[[D kirja] [P(lle) [D Merja-]]] D{N}]]]]
				Extracted head "Pekka" from D and created [T/fin [v [antaa [[[D kirja] [P(lle) [D Merja-]]] [D Pekka]]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:112 [v [antaa [[[D kirja] [P(lle) [D Merja-]]] <D Pekka>:112]]]]]
				= [T/fin [<D Pekka> [v [antaa [[[D kirja] [P(lle) [D Merja-]]] <D Pekka>]]]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				An EPP-head "T/fin" lacks specifier but needs one.
				[D kirja]" has no thematic role
				Extraposition will be tried on [T/fin [<DP>:112 [v [antaa [[[D kirja] [P(lle) [D Merja-]]] <D Pekka>:112]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
			= [T/fin [<D Pekka> [v [antaa [[[D kirja] <P(lle) [D Merja-]>] <D Pekka>]]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[T/fin{v,V} [[D kirja] P(lle){D,N}]] D]
			Reconstructing head movement for [T/fin{v,V} [[D kirja] P(lle){D,N}]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[D kirja] P(lle){D,N}]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[D kirja] P(lle){D,N}]]]]
				Extracted head "D{N}" from P(lle) and created [T/fin [v [antaa [[D kirja] [P(lle) D{N}]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [T/fin [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]
			Dropping floaters...
				= [T/fin [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
				Extraposition will be tried on [T/fin [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
			=[[T/fin [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]] D]

16.

		Consume "Pekka"

		[[T/fin [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[T/fin [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]] D{N}]

17.
	>>>	Trying candidate parse [[T/fin [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]] D{N}] (3.)
		Reconstructing...
			Reconstructing head movement for [[T/fin [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]] D{N}].
				Extracted head "Pekka" from D and created [[T/fin [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				= [[T/fin [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[T/fin [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]] <D Pekka>].
			= [[T/fin [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin: [T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{v,V} D{N}] P(lle)]
			Reconstructing head movement for [T/fin{v,V} D{N}].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} D{N}]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa D{N}]]]
				Extracted head "kirja" from D and created [T/fin [v [antaa [D kirja]]]]
			Dropping floaters...
				= [T/fin [v [antaa [D kirja]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [T/fin [v [antaa [D kirja]]]].
			=[[T/fin [v [antaa [D kirja]]]] P(lle)]

18.

		Consume "D"

		[[T/fin [v [antaa [D kirja]]]] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[T/fin [v [antaa [D kirja]]]] P(lle){D}]

19.

		Consume "Merja-"

		[[T/fin [v [antaa [D kirja]]]] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[T/fin [v [antaa [D kirja]]]] P(lle){D,N}]

20.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[T/fin [v [antaa [D kirja]]]] P(lle){D,N}]

21.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:CAT:FIN,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[T/fin [v [antaa [D kirja]]]] P(lle){D,N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid PP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				P(lle) has unaccetable specifier [T/fin [v [antaa [D kirja]]]].
				Avoid [[T/fin [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
		Ranking completed:
			1. [P(lle){D,N}; D]
			2. [[[T/fin [v [antaa [D kirja]]]] P(lle){D,N}]; D]
		Exploring solution number (1) =[P(lle){D,N} D]
			P(lle) was opened.
			=[[T/fin [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] D]]

22.

		Consume "Pekka"

		[[T/fin [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[T/fin [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] D{N}]]

23.
	>>>	Trying candidate parse [[T/fin [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] D{N}]] (4.)
		Reconstructing...
			Reconstructing head movement for [[T/fin [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] D{N}]].
				Extracted head "Pekka" from D and created [[T/fin [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] [D Pekka]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				D failed to tail.
				<D Pekka> was made an adjunct.
				= [[T/fin [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] <D Pekka>]]
			Dropping A-/A-bar movement.
				Moving "T/fin v antaa D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[T/fin [v [V [D N]]]]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				P(lle) has unaccetable specifier [T/fin [v [antaa [D kirja]]]].
				Extraposition will be tried on [[T/fin [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] <D Pekka>]].
			= [[T/fin [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] <D Pekka>]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				P(lle) has unaccetable specifier [T/fin [v [antaa [D kirja]]]].
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin: [T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[T/fin [v [antaa [D kirja]]]] P(lle){D,N}] D]
			Reconstructing head movement for [[T/fin [v [antaa [D kirja]]]] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[T/fin [v [antaa [D kirja]]]] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[T/fin [v [antaa [D kirja]]]] [P(lle) [D Merja-]]]
			Dropping floaters...
				= [[T/fin [v [antaa [D kirja]]]] [P(lle) [D Merja-]]]
			Dropping A-/A-bar movement.
				Moving "T/fin v antaa D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[T/fin [v [V [D N]]]]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				P(lle) has unaccetable specifier [T/fin [v [antaa [D kirja]]]].
				Extraposition will be tried on [[T/fin [v [antaa [D kirja]]]] [P(lle) [D Merja-]]].
			=[[[T/fin [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] D]

24.

		Consume "Pekka"

		[[[T/fin [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[[T/fin [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] D{N}]

25.
	>>>	Trying candidate parse [[[T/fin [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] D{N}] (5.)
		Reconstructing...
			Reconstructing head movement for [[[T/fin [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] D{N}].
				Extracted head "Pekka" from D and created [[[T/fin [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				= [[[T/fin [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] <D Pekka>]
			Dropping A-/A-bar movement.
				Moving "T/fin v antaa D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[T/fin [v [V [D N]]]]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				P(lle) has unaccetable specifier [T/fin [v [antaa [D kirja]]]].
				Extraposition will be tried on [[[T/fin [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] <D Pekka>].
			= [[[T/fin [v [antaa [D kirja]]]] [P(lle) [D Merja-]]] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				P(lle) has unaccetable specifier [T/fin [v [antaa [D kirja]]]].
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin: [T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 20
['antoi#foc', 'kirjan', 'Merjalle', 'Pekka']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'antoi']
			=C

2.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		C + T/fin
			Filtering out impossible merge sites...
			Sink "T/fin" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T/fin]
			=C{T/fin}

3.

		Consume "v"

		C{T/fin} + v
			Filtering out impossible merge sites...
			Sink "v" into C{T/fin} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin}*v]
			=C{T/fin,v}

4.

		Consume "antaa"

		C{T/fin,v} + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into C{T/fin,v} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin,v}*antaa]
			=C{T/fin,v,V}

5.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=C{T/fin,v,V}

6.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		C{T/fin,v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T/fin,v,V} D]
			C{T/fin,v,V} cannot be opened.
			=[C{T/fin,v,V} D]

7.

		Consume "kirja"

		[C{T/fin,v,V} D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[C{T/fin,v,V} D{N}]

8.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[C{T/fin,v,V} D{N}] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC, P(lle).
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [C [T/fin [v [antaa [D kirja]]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[C{T/fin,v,V} D{N}]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[C{T/fin,v,V} [[D kirja] P(lle)]]

9.

		Consume "D"

		[C{T/fin,v,V} [[D kirja] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[C{T/fin,v,V} [[D kirja] P(lle){D}]]

10.

		Consume "Merja-"

		[C{T/fin,v,V} [[D kirja] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[C{T/fin,v,V} [[D kirja] P(lle){D,N}]]

11.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[C{T/fin,v,V} [[D kirja] P(lle){D,N}]]

12.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:CAT:FIN,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[C{T/fin,v,V} [[D kirja] P(lle){D,N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [C [<D kirja> [T/fin [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				[D kirja]" has no thematic role
				Avoid [[D kirja] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
		Ranking completed:
			1. [P(lle){D,N}; D]
			2. [[[D kirja] P(lle){D,N}]; D]
			3. [[C{T/fin,v,V} [[D kirja] P(lle){D,N}]]; D]
		Exploring solution number (1) =[P(lle){D,N} D]
			P(lle) was opened.
			=[C{T/fin,v,V} [[D kirja] [[P(lle) [D Merja-]] D]]]

13.

		Consume "Pekka"

		[C{T/fin,v,V} [[D kirja] [[P(lle) [D Merja-]] D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T/fin,v,V} [[D kirja] [[P(lle) [D Merja-]] D{N}]]]

14.
	>>>	Trying candidate parse [C{T/fin,v,V} [[D kirja] [[P(lle) [D Merja-]] D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{T/fin,v,V} [[D kirja] [[P(lle) [D Merja-]] D{N}]]].
				Extracted head "T/fin{v,V}" and reconstructed it = [C [[D kirja] [T/fin{v,V} [[P(lle) [D Merja-]] D{N}]]]]
				Extracted head "v{V}" and reconstructed it = [C [[D kirja] [T/fin [v{V} [[P(lle) [D Merja-]] D{N}]]]]]
				Extracted head "antaa" and reconstructed it = [C [[D kirja] [T/fin [v [antaa [[P(lle) [D Merja-]] D{N}]]]]]]
				Extracted head "Pekka" from D and created [C [[D kirja] [T/fin [v [antaa [[P(lle) [D Merja-]] [D Pekka]]]]]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [C [<D kirja>:115 [T/fin [v [<DP>:115 [antaa [[P(lle) [D Merja-]] [D Pekka]]]]]]]]
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<D kirja>:115 [T/fin [<DP>:116 [v [<DP>:115 [antaa [[P(lle) [D Merja-]] <D Pekka>:116]]]]]]]]
				= [C [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]]]]]
			Dropping A-/A-bar movement.
			= [C [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<D kirja>:115 [T/fin [<DP>:116 [v [<DP>:115 [antaa [[P(lle) [D Merja-]] <D Pekka>:116]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 14/141 operations) <------------------------------------
		Solution:
		[C [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]]]]]
		Grammar: [C [<D kirja>:1 [T/fin [<DP>:2 [v [<DP>:1 [antaa [[P(lle) [D Merja-]] <D Pekka>:2]]]]]]]]
		Spellout C/finP = [C/fin [DP:1 [T/fin [__:2 [v [__:1 [V [[P [D N]] DP:2]]]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C: [C/fin]
D: [D, C/fin]
kirja: [N, D, C/fin]
T/fin: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
v: [v, T/fin, C/fin]
(D): [D, v, T/fin, C/fin]
(N): [N, D, v, T/fin, C/fin]
antaa: [V, v, T/fin, C/fin]
P(lle): [P, V, v, T/fin, C/fin]
D: [D, P, V, v, T/fin, C/fin]
Merja-: [N, D, P, V, v, T/fin, C/fin]
D: [D, V, v, T/fin, C/fin]
Pekka: [N, D, V, v, T/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 21
['antoi', 'Merjalle', 'Pekka', 'kirjan']


			=None

1.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']
			=T/fin

2.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

3.

		Consume "antaa"

		T/fin{v} + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=T/fin{v,V}

4.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		T/fin{v,V} + P(lle)
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} P(lle)]
			T/fin{v,V} cannot be opened.
			=[T/fin{v,V} P(lle)]

5.

		Consume "D"

		[T/fin{v,V} P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[T/fin{v,V} P(lle){D}]

6.

		Consume "Merja-"

		[T/fin{v,V} P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[T/fin{v,V} P(lle){D,N}]

7.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[T/fin{v,V} P(lle){D,N}]

8.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:CAT:FIN,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[T/fin{v,V} P(lle){D,N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [P(lle) [D Merja-]]]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
				Avoid P(lle){D,N} because it could break words.
		Ranking completed:
			1. [[T/fin{v,V} P(lle){D,N}]; D]
			2. [P(lle){D,N}; D]
		Exploring solution number (1) =[[T/fin{v,V} P(lle){D,N}] D]
			Reconstructing head movement for [T/fin{v,V} P(lle){D,N}].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} P(lle){D,N}]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa P(lle){D,N}]]]
				Extracted head "D{N}" from P(lle) and created [T/fin [v [antaa [P(lle) D{N}]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [T/fin [v [antaa [P(lle) [D Merja-]]]]]
			Dropping floaters...
				= [T/fin [v [antaa [P(lle) [D Merja-]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [T/fin [v [antaa [P(lle) [D Merja-]]]]].
			=[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D]

9.

		Consume "Pekka"

		[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}]

10.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}]

11.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid DP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D Pekka>] as left branch because it constitutes illicit structure.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [D{N} D] due to local agreement failure.
				Avoid [Pekka D] due to complement selection.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; D]
			2. [[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}]; D]
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D Pekka] D]]

12.

		Consume "kirja"

		[[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D Pekka] D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D Pekka] D{N}]]

13.
	>>>	Trying candidate parse [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D Pekka] D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D Pekka] D{N}]].
				Extracted head "kirja" from D and created [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D Pekka] [D kirja]]]
			Dropping floaters...
				D failed to tail.
				<D kirja> was made an adjunct.
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D Pekka] <D kirja>]]
			Dropping A-/A-bar movement.
				Moving "T/fin v antaa P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[T/fin [v [V [P [D N]]]]]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				D (D) has a specifier [T/fin [v [antaa [P(lle) [D Merja-]]]]] but is marked for -EPP behavior.
				Extraposition will be tried on [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D Pekka] <D kirja>]].
				<D Pekka> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
			= [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [<D Pekka> <D kirja>]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

T/fin: [T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D]
Pekka: [N, D]
D: [D]
kirja: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}] D]
			Reconstructing head movement for [[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}].
				Extracted head "Pekka" from D and created [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				= [[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D Pekka>].
			=[[[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D Pekka>] D]

14.

		Consume "kirja"

		[[[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D Pekka>] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D Pekka>] D{N}]

15.
	>>>	Trying candidate parse [[[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D Pekka>] D{N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D Pekka>] D{N}].
				Extracted head "kirja" from D and created [[[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D Pekka>] [D kirja]]
			Dropping floaters...
				D failed to tail.
				<D kirja> was made an adjunct.
				D failed to tail.
				<D Pekka> was made an adjunct.
				= [[[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D Pekka>] <D kirja>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D Pekka>] <D kirja>].
			= [[[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D Pekka>] <D kirja>]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

T/fin: [T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D]
Pekka: [N, D]
D: [D]
kirja: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[P(lle){D,N} D]
			P(lle) was opened.
			=[T/fin{v,V} [[P(lle) [D Merja-]] D]]

16.

		Consume "Pekka"

		[T/fin{v,V} [[P(lle) [D Merja-]] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T/fin{v,V} [[P(lle) [D Merja-]] D{N}]]

17.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[T/fin{v,V} [[P(lle) [D Merja-]] D{N}]]

18.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[T/fin{v,V} [[P(lle) [D Merja-]] D{N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				Avoid [T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]] as left branch because it constitutes illicit structure.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [[[P(lle) [D Merja-]] D{N}], D] because the operation breaks up an existing selectional dependency.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [D{N} D] due to local agreement failure.
				Avoid [Pekka D] due to complement selection.
				Prioritize [[P(lle) [D Merja-]] D{N}] because all solutions were negative.
		Ranking completed:
			1. [[[P(lle) [D Merja-]] D{N}]; D]
			2. [[T/fin{v,V} [[P(lle) [D Merja-]] D{N}]]; D]
			3. [D{N}; D]
		Exploring solution number (1) =[[[P(lle) [D Merja-]] D{N}] D]
			Reconstructing head movement for [[P(lle) [D Merja-]] D{N}].
				Extracted head "Pekka" from D and created [[P(lle) [D Merja-]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				= [[P(lle) [D Merja-]] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[P [D N]]]
				D (D) has a specifier [P(lle) [D Merja-]] but is marked for -EPP behavior.
				Extraposition will be tried on [[P(lle) [D Merja-]] [D Pekka]].
				<D Pekka> was made adjunct by an extraposition rule.
			=[T/fin{v,V} [[[P(lle) [D Merja-]] <D Pekka>] D]]

19.

		Consume "kirja"

		[T/fin{v,V} [[[P(lle) [D Merja-]] <D Pekka>] D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[T/fin{v,V} [[[P(lle) [D Merja-]] <D Pekka>] D{N}]]

20.
	>>>	Trying candidate parse [T/fin{v,V} [[[P(lle) [D Merja-]] <D Pekka>] D{N}]] (3.)
		Reconstructing...
			Reconstructing head movement for [T/fin{v,V} [[[P(lle) [D Merja-]] <D Pekka>] D{N}]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[[P(lle) [D Merja-]] <D Pekka>] D{N}]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[[P(lle) [D Merja-]] <D Pekka>] D{N}]]]]
				Extracted head "kirja" from D and created [T/fin [v [antaa [[[P(lle) [D Merja-]] <D Pekka>] [D kirja]]]]]
			Dropping floaters...
				= [T/fin [v [antaa [[[P(lle) [D Merja-]] <D Pekka>] [D kirja]]]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- D Pekka " into memory buffer from SPEC of "D".
				Memory buffer: [[[P [D N]] [D N]]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				D failed internal tail test.
				D (D) has a specifier [[P(lle) [D Merja-]] <D Pekka>] but is marked for -EPP behavior.
				Extraposition will be tried on [T/fin [v [antaa [[[P(lle) [D Merja-]] <D Pekka>] [D kirja]]]]].
				<D kirja> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				D failed internal tail test.
			= [T/fin [v [antaa [[[P(lle) [D Merja-]] <D Pekka>] <D kirja>]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				D failed internal tail test.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

T/fin: [T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{v,V} [[P(lle) [D Merja-]] D{N}]] D]
			Reconstructing head movement for [T/fin{v,V} [[P(lle) [D Merja-]] D{N}]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[P(lle) [D Merja-]] D{N}]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[P(lle) [D Merja-]] D{N}]]]]
				Extracted head "Pekka" from D and created [T/fin [v [antaa [[P(lle) [D Merja-]] [D Pekka]]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:119 [v [antaa [[P(lle) [D Merja-]] <D Pekka>:119]]]]]
				= [T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [T/fin [<DP>:119 [v [antaa [[P(lle) [D Merja-]] <D Pekka>:119]]]]].
			=[[T/fin [<DP>:119 [v [antaa [[P(lle) [D Merja-]] <D Pekka>:119]]]]] D]

21.

		Consume "kirja"

		[[T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[T/fin [<DP>:119 [v [antaa [[P(lle) [D Merja-]] <D Pekka>:119]]]]] D{N}]

22.
	>>>	Trying candidate parse [[T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]] D{N}] (4.)
		Reconstructing...
			Reconstructing head movement for [[T/fin [<DP>:119 [v [antaa [[P(lle) [D Merja-]] <D Pekka>:119]]]]] D{N}].
				Extracted head "kirja" from D and created [[T/fin [<DP>:119 [v [antaa [[P(lle) [D Merja-]] <D Pekka>:119]]]]] [D kirja]]
			Dropping floaters...
				D failed to tail.
				<D kirja> was made an adjunct.
				= [[T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]] <D kirja>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [[T/fin [<DP>:119 [v [antaa [[P(lle) [D Merja-]] <D Pekka>:119]]]]] <D kirja>].
			= [[T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]] <D kirja>]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
D: [D]
kirja: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[D{N} D]
			D was opened.
			=[T/fin{v,V} [[P(lle) [D Merja-]] [[D Pekka] D]]]

23.

		Consume "kirja"

		[T/fin{v,V} [[P(lle) [D Merja-]] [[D Pekka] D]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[T/fin{v,V} [[P(lle) [D Merja-]] [[D Pekka] D{N}]]]

24.
	>>>	Trying candidate parse [T/fin{v,V} [[P(lle) [D Merja-]] [[D Pekka] D{N}]]] (5.)
		Reconstructing...
			Reconstructing head movement for [T/fin{v,V} [[P(lle) [D Merja-]] [[D Pekka] D{N}]]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[P(lle) [D Merja-]] [[D Pekka] D{N}]]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[P(lle) [D Merja-]] [[D Pekka] D{N}]]]]]
				Extracted head "kirja" from D and created [T/fin [v [antaa [[P(lle) [D Merja-]] [[D Pekka] [D kirja]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:120 [v [antaa [[P(lle) [D Merja-]] [<D Pekka>:120 [D kirja]]]]]]]
				= [T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] [<D Pekka> [D kirja]]]]]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "D".
				New head was spawned due to multiple specifiers at D but its category is unknown!
				Memory buffer: [[P [D N]]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
				D (D) has a specifier <D Pekka>:120 but is marked for -EPP behavior.
				Extraposition will be tried on [T/fin [<DP>:120 [v [antaa [[P(lle) [D Merja-]] [? [<D Pekka>:120 [D kirja]]]]]]]].
				<D kirja> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
			= [T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] [? [<D Pekka> <D kirja>]]]]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
?: [?, V, v, T/fin]
D: [D, ?, V, v, T/fin]
Pekka: [N, D, ?, V, v, T/fin]
D: [D, ?, V, v, T/fin]
kirja: [N, D, ?, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 22
['antoi#foc', 'Merjalle', 'Pekka', 'kirjan']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'antoi']
			=C

2.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		C + T/fin
			Filtering out impossible merge sites...
			Sink "T/fin" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T/fin]
			=C{T/fin}

3.

		Consume "v"

		C{T/fin} + v
			Filtering out impossible merge sites...
			Sink "v" into C{T/fin} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin}*v]
			=C{T/fin,v}

4.

		Consume "antaa"

		C{T/fin,v} + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into C{T/fin,v} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin,v}*antaa]
			=C{T/fin,v,V}

5.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		C{T/fin,v,V} + P(lle)
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T/fin,v,V} P(lle)]
			C{T/fin,v,V} cannot be opened.
			=[C{T/fin,v,V} P(lle)]

6.

		Consume "D"

		[C{T/fin,v,V} P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[C{T/fin,v,V} P(lle){D}]

7.

		Consume "Merja-"

		[C{T/fin,v,V} P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[C{T/fin,v,V} P(lle){D,N}]

8.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[C{T/fin,v,V} P(lle){D,N}]

9.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:CAT:FIN,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[C{T/fin,v,V} P(lle){D,N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
				Avoid P(lle){D,N} because it could break words.
		Ranking completed:
			1. [[C{T/fin,v,V} P(lle){D,N}]; D]
			2. [P(lle){D,N}; D]
		Exploring solution number (1) =[[C{T/fin,v,V} P(lle){D,N}] D]
			Reconstructing head movement for [C{T/fin,v,V} P(lle){D,N}].
				Head reconstruction failed for T/fin{v,V}, merged locally as a last resort.
				Extracted head "T/fin{v,V}" and reconstructed it = [C [T/fin{v,V} P(lle){D,N}]]
				Extracted head "v{V}" and reconstructed it = [C [T/fin [v{V} P(lle){D,N}]]]
				Extracted head "antaa" and reconstructed it = [C [T/fin [v [antaa P(lle){D,N}]]]]
				Extracted head "D{N}" from P(lle) and created [C [T/fin [v [antaa [P(lle) D{N}]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [C [T/fin [v [antaa [P(lle) [D Merja-]]]]]]
			Dropping floaters...
				= [C [T/fin [v [antaa [P(lle) [D Merja-]]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [C [T/fin [v [antaa [P(lle) [D Merja-]]]]]].
			=[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] D]

10.

		Consume "Pekka"

		[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] D{N}]

11.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] D{N}]

12.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid DP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>] as left branch because it constitutes illicit structure.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [D{N} D] due to local agreement failure.
				Avoid [Pekka D] due to complement selection.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; D]
			2. [[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] D{N}]; D]
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [[D Pekka] D]]

13.

		Consume "kirja"

		[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [[D Pekka] D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [[D Pekka] D{N}]]

14.
	>>>	Trying candidate parse [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [[D Pekka] D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [[D Pekka] D{N}]].
				Extracted head "kirja" from D and created [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [[D Pekka] [D kirja]]]
			Dropping floaters...
				D failed to tail.
				<D kirja> was made an adjunct.
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [[D Pekka] <D kirja>]]
			Dropping A-/A-bar movement.
				Moving "C T/fin v antaa P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[C/fin [T/fin [v [V [P [D N]]]]]]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				D (D) has a specifier [C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] but is marked for -EPP behavior.
				Extraposition will be tried on [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [[D Pekka] <D kirja>]].
				<D Pekka> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
			= [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [<D Pekka> <D kirja>]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
			LF-interface condition(s) violated
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

C: [C/fin]
T/fin: [T/fin, C/fin]
v: [v, T/fin, C/fin]
antaa: [V, v, T/fin, C/fin]
P(lle): [P, V, v, T/fin, C/fin]
D: [D, P, V, v, T/fin, C/fin]
Merja-: [N, D, P, V, v, T/fin, C/fin]
D: [D]
Pekka: [N, D]
D: [D]
kirja: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] D{N}] D]
			Reconstructing head movement for [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] D{N}].
				Extracted head "Pekka" from D and created [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				= [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>].
			=[[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>] D]

15.

		Consume "kirja"

		[[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>] D{N}]

16.
	>>>	Trying candidate parse [[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>] D{N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>] D{N}].
				Extracted head "kirja" from D and created [[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>] [D kirja]]
			Dropping floaters...
				D failed to tail.
				<D kirja> was made an adjunct.
				D failed to tail.
				<D Pekka> was made an adjunct.
				= [[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>] <D kirja>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>] <D kirja>].
			= [[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>] <D kirja>]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
			LF-interface condition(s) violated
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

C: [C/fin]
T/fin: [T/fin, C/fin]
v: [v, T/fin, C/fin]
antaa: [V, v, T/fin, C/fin]
P(lle): [P, V, v, T/fin, C/fin]
D: [D, P, V, v, T/fin, C/fin]
Merja-: [N, D, P, V, v, T/fin, C/fin]
D: [D]
Pekka: [N, D]
D: [D]
kirja: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[P(lle){D,N} D]
			P(lle) was opened.
			=[C{T/fin,v,V} [[P(lle) [D Merja-]] D]]

17.

		Consume "Pekka"

		[C{T/fin,v,V} [[P(lle) [D Merja-]] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T/fin,v,V} [[P(lle) [D Merja-]] D{N}]]

18.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[C{T/fin,v,V} [[P(lle) [D Merja-]] D{N}]]

19.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[C{T/fin,v,V} [[P(lle) [D Merja-]] D{N}]] + D
			Filtering out impossible merge sites...
				Reject [[C [[P(lle) [D Merja-]] [T/fin [<D Pekka> [v [[P(lle) [D Merja-]] [antaa <D Pekka>]]]]]]] D] due to bad left branch.
			Ranking remaining sites...
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [D{N} D] due to local agreement failure.
				Avoid [Pekka D] due to complement selection.
				Prioritize [[P(lle) [D Merja-]] D{N}] because all solutions were negative.
		Ranking completed:
			1. [[[P(lle) [D Merja-]] D{N}]; D]
			2. [D{N}; D]
		Exploring solution number (1) =[[[P(lle) [D Merja-]] D{N}] D]
			Reconstructing head movement for [[P(lle) [D Merja-]] D{N}].
				Extracted head "Pekka" from D and created [[P(lle) [D Merja-]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				= [[P(lle) [D Merja-]] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[P [D N]]]
				D (D) has a specifier [P(lle) [D Merja-]] but is marked for -EPP behavior.
				Extraposition will be tried on [[P(lle) [D Merja-]] [D Pekka]].
				<D Pekka> was made adjunct by an extraposition rule.
			=[C{T/fin,v,V} [[[P(lle) [D Merja-]] <D Pekka>] D]]

20.

		Consume "kirja"

		[C{T/fin,v,V} [[[P(lle) [D Merja-]] <D Pekka>] D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[C{T/fin,v,V} [[[P(lle) [D Merja-]] <D Pekka>] D{N}]]

21.
	>>>	Trying candidate parse [C{T/fin,v,V} [[[P(lle) [D Merja-]] <D Pekka>] D{N}]] (3.)
		Reconstructing...
			Reconstructing head movement for [C{T/fin,v,V} [[[P(lle) [D Merja-]] <D Pekka>] D{N}]].
				Extracted head "T/fin{v,V}" and reconstructed it = [C [[[P(lle) [D Merja-]] <D Pekka>] [T/fin{v,V} D{N}]]]
				Extracted head "v{V}" and reconstructed it = [C [[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v{V} D{N}]]]]
				Extracted head "antaa" and reconstructed it = [C [[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v [antaa D{N}]]]]]
				Extracted head "kirja" from D and created [C [[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v [antaa [D kirja]]]]]]
			Dropping floaters...
				= [C [[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v [antaa [D kirja]]]]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- D Pekka " into memory buffer from SPEC of "T/fin".
				Memory buffer: [[[P [D N]] [D N]]]
				Dropping constituent [[P(lle) [D Merja-]] <D Pekka>]:123 from memory buffer into Spec of antaa
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [C [[[P(lle) [D Merja-]] <D Pekka>]:123 [T/fin [v [(PP):123 [antaa [D kirja]]]]]]].
			= [C [[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v [[[P(lle) [D Merja-]] <D Pekka>] [antaa [D kirja]]]]]]]
		Checking LF-interface conditions.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
			LF-interface condition(s) violated
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

C: [C/fin]
P(lle): [P, C/fin]
D: [D, P, C/fin]
Merja-: [N, D, P, C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
T/fin: [T/fin, C/fin]
v: [v, T/fin, C/fin]
(P): [P, v, T/fin, C/fin]
(D): [D, P, v, T/fin, C/fin]
(N): [N, D, P, v, T/fin, C/fin]
(D): [D, v, T/fin, C/fin]
(N): [N, D, v, T/fin, C/fin]
antaa: [V, v, T/fin, C/fin]
D: [D, V, v, T/fin, C/fin]
kirja: [N, D, V, v, T/fin, C/fin]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} D]
			D was opened.
			=[C{T/fin,v,V} [[P(lle) [D Merja-]] [[D Pekka] D]]]

22.

		Consume "kirja"

		[C{T/fin,v,V} [[P(lle) [D Merja-]] [[D Pekka] D]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[C{T/fin,v,V} [[P(lle) [D Merja-]] [[D Pekka] D{N}]]]

23.
	>>>	Trying candidate parse [C{T/fin,v,V} [[P(lle) [D Merja-]] [[D Pekka] D{N}]]] (4.)
		Reconstructing...
			Reconstructing head movement for [C{T/fin,v,V} [[P(lle) [D Merja-]] [[D Pekka] D{N}]]].
				Extracted head "T/fin{v,V}" and reconstructed it = [C [[P(lle) [D Merja-]] [T/fin{v,V} [[D Pekka] D{N}]]]]
				Extracted head "v{V}" and reconstructed it = [C [[P(lle) [D Merja-]] [T/fin [v{V} [[D Pekka] D{N}]]]]]
				Extracted head "antaa" and reconstructed it = [C [[P(lle) [D Merja-]] [T/fin [v [antaa [[D Pekka] D{N}]]]]]]
				Extracted head "kirja" from D and created [C [[P(lle) [D Merja-]] [T/fin [v [antaa [[D Pekka] [D kirja]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [[P(lle) [D Merja-]] [T/fin [<DP>:124 [v [antaa [<D Pekka>:124 [D kirja]]]]]]]]
				= [C [[P(lle) [D Merja-]] [T/fin [<D Pekka> [v [antaa [<D Pekka> [D kirja]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "T/fin".
				Memory buffer: [[P [D N]]]
				Dropping constituent [P(lle) [D Merja-]]:125 from memory buffer into Spec of antaa
				D (D) has a specifier <D Pekka>:124 but is marked for -EPP behavior.
				Extraposition will be tried on [C [[P(lle) [D Merja-]]:125 [T/fin [<DP>:124 [v [(PP):125 [antaa [<D Pekka>:124 [D kirja]]]]]]]]].
				<D kirja> was made adjunct by an extraposition rule.
			= [C [[P(lle) [D Merja-]] [T/fin [<D Pekka> [v [[P(lle) [D Merja-]] [antaa [<D Pekka> <D kirja>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [[P(lle) [D Merja-]]:125 [T/fin [<DP>:124 [v [(PP):125 [antaa [<D Pekka>:124 <D kirja>]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 23/322 operations) <------------------------------------
		Solution:
		[C [[P(lle) [D Merja-]] [T/fin [<D Pekka> [v [[P(lle) [D Merja-]] [antaa [<D Pekka> <D kirja>]]]]]]]]
		Grammar: [C [[P(lle) [D Merja-]]:1 [T/fin [<DP>:2 [v [(PP):1 [antaa [<D Pekka>:2 <D kirja>]]]]]]]]
		Spellout C/finP = [C/fin [PP:1 [T/fin [__:2 [v [__:1 [V [[D N]:2 DP]]]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

C: [C/fin]
P(lle): [P, C/fin]
D: [D, P, C/fin]
Merja-: [N, D, P, C/fin]
T/fin: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
v: [v, T/fin, C/fin]
(P): [P, v, T/fin, C/fin]
(D): [D, P, v, T/fin, C/fin]
(N): [N, D, P, v, T/fin, C/fin]
antaa: [V, v, T/fin, C/fin]
D: [D, V, v, T/fin, C/fin]
Pekka: [N, D, V, v, T/fin, C/fin]
D: [D, V, v, T/fin, C/fin]
kirja: [N, D, V, v, T/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 23
['antoi', 'Merjalle', 'kirjan', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']
			=T/fin

2.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

3.

		Consume "antaa"

		T/fin{v} + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=T/fin{v,V}

4.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		T/fin{v,V} + P(lle)
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} P(lle)]
			T/fin{v,V} cannot be opened.
			=[T/fin{v,V} P(lle)]

5.

		Consume "D"

		[T/fin{v,V} P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[T/fin{v,V} P(lle){D}]

6.

		Consume "Merja-"

		[T/fin{v,V} P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[T/fin{v,V} P(lle){D,N}]

7.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[T/fin{v,V} P(lle){D,N}]

8.

		Adding inflectional features {'TAIL:CAT:v,!COMP:*', 'LANG:FI', '-'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[T/fin{v,V} P(lle){D,N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [P(lle) [D Merja-]]]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
				Avoid P(lle){D,N} because it could break words.
		Ranking completed:
			1. [[T/fin{v,V} P(lle){D,N}]; D]
			2. [P(lle){D,N}; D]
		Exploring solution number (1) =[[T/fin{v,V} P(lle){D,N}] D]
			Reconstructing head movement for [T/fin{v,V} P(lle){D,N}].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} P(lle){D,N}]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa P(lle){D,N}]]]
				Extracted head "D{N}" from P(lle) and created [T/fin [v [antaa [P(lle) D{N}]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [T/fin [v [antaa [P(lle) [D Merja-]]]]]
			Dropping floaters...
				= [T/fin [v [antaa [P(lle) [D Merja-]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [T/fin [v [antaa [P(lle) [D Merja-]]]]].
			=[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D]

9.

		Consume "kirja"

		[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}]

10.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}]

11.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:CAT:FIN,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid DP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D kirja>] as left branch because it constitutes illicit structure.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [kirja D] due to complement selection.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; D]
			2. [[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}]; D]
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D kirja] D]]

12.

		Consume "Pekka"

		[[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D kirja] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D kirja] D{N}]]

13.
	>>>	Trying candidate parse [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D kirja] D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D kirja] D{N}]].
				Extracted head "Pekka" from D and created [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D kirja] [D Pekka]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				[D kirja] failed to tail [!COMP:*][CAT:v]
				= [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D kirja] <D Pekka>]]
			Dropping A-/A-bar movement.
				Moving "T/fin v antaa P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[T/fin [v [V [P [D N]]]]]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				D (D) has a specifier [T/fin [v [antaa [P(lle) [D Merja-]]]]] but is marked for -EPP behavior.
				Extraposition will be tried on [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D kirja] <D Pekka>]].
				<D kirja> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
			= [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [<D kirja> <D Pekka>]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin: [T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D]
kirja: [N, D]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}] D]
			Reconstructing head movement for [[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}].
				Extracted head "kirja" from D and created [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [D kirja]]
			Dropping floaters...
				D failed to tail.
				<D kirja> was made an adjunct.
				= [[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D kirja>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D kirja>].
			=[[[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D kirja>] D]

14.

		Consume "Pekka"

		[[[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D kirja>] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D kirja>] D{N}]

15.
	>>>	Trying candidate parse [[[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D kirja>] D{N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D kirja>] D{N}].
				Extracted head "Pekka" from D and created [[[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D kirja>] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				D failed to tail.
				<D kirja> was made an adjunct.
				= [[[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D kirja>] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D kirja>] <D Pekka>].
			= [[[T/fin [v [antaa [P(lle) [D Merja-]]]]] <D kirja>] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin: [T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D]
kirja: [N, D]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[P(lle){D,N} D]
			P(lle) was opened.
			=[T/fin{v,V} [[P(lle) [D Merja-]] D]]

16.

		Consume "kirja"

		[T/fin{v,V} [[P(lle) [D Merja-]] D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[T/fin{v,V} [[P(lle) [D Merja-]] D{N}]]

17.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[T/fin{v,V} [[P(lle) [D Merja-]] D{N}]]

18.

		Adding inflectional features {'LANG:FI', '-', 'TAIL:CAT:FIN,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[T/fin{v,V} [[P(lle) [D Merja-]] D{N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [[P(lle) [D Merja-]] <D kirja>]]]] as left branch because it constitutes illicit structure.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [[[P(lle) [D Merja-]] D{N}], D] because the operation breaks up an existing selectional dependency.
