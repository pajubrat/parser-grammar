

\========================================================================
# 1
['Pekka', 'nukkui']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

5.

		Consume "nukku"

		[[D Pekka] T/fin] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=[[D Pekka] T/fin{V}]

6.
	>>>	Trying candidate parse [[D Pekka] T/fin{V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] T/fin{V}].
				Extracted head "nukku" from T/fin and created [[D Pekka] [T/fin nukku]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:1 [T/fin [<DP>:1 nukku]]]
				= [<D Pekka> [T/fin [<D Pekka> nukku]]]
			Dropping A-/A-bar movement.
			= [<D Pekka> [T/fin [<D Pekka> nukku]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T/fin [<DP>:1 nukku]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 6/47 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> nukku]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 nukku]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 V]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:Neg/fin', '-COMP:T', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:Neg/fin', '-COMP:T', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
nukku: [V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 2
['Pekka#foc', 'nukkui']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', 'ABAR:FOC'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

6.

		Consume "nukku"

		[[D Pekka] T/fin] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=[[D Pekka] T/fin{V}]

7.
	>>>	Trying candidate parse [[D Pekka] T/fin{V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] T/fin{V}].
				Extracted head "nukku" from T/fin and created [[D Pekka] [T/fin nukku]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:2 [T/fin [<DP>:2 nukku]]]
				= [<D Pekka> [T/fin [<D Pekka> nukku]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'FIN', 'T/fin', 'FIN/T/fin'}
			= [<D Pekka> [T/fin [<D Pekka> nukku]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:2 [T/fin [<DP>:2 nukku]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 7/54 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> nukku]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 nukku]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 V]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:Neg/fin', '-COMP:T', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:Neg/fin', '-COMP:T', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
nukku: [V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 3
['nukkui', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']
			=T/fin

2.

		Consume "nukku"

		T/fin + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=T/fin{V}

3.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=T/fin{V}

4.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		T/fin{V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{V} D]
			T/fin{V} cannot be opened.
			=[T/fin{V} D]

5.

		Consume "Pekka"

		[T/fin{V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T/fin{V} D{N}]

6.
	>>>	Trying candidate parse [T/fin{V} D{N}] (1.)
		Reconstructing...
			Reconstructing head movement for [T/fin{V} D{N}].
				Extracted head "nukku" and reconstructed it = [T/fin [nukku D{N}]]
				Extracted head "Pekka" from D and created [T/fin [nukku [D Pekka]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				= [T/fin [nukku <D Pekka>]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
				Extraposition will be tried on [T/fin [nukku <D Pekka>]].
			= [T/fin [nukku <D Pekka>]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				D failed internal tail test.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
nukku:['!SPEC:D', '-COMP:N', '-COMP:Neg/fin', '-COMP:T', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin: [T/fin]
nukku: [V, T/fin]
D: [D, V, T/fin]
Pekka: [N, D, V, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukku-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "nukkui".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 4
['nukkui#foc', 'Pekka']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'nukkui']
			=C

2.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		C + T/fin
			Filtering out impossible merge sites...
			Sink "T/fin" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T/fin]
			=C{T/fin}

3.

		Consume "nukku"

		C{T/fin} + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into C{T/fin} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin}*nukku]
			=C{T/fin,V}

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=C{T/fin,V}

5.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		C{T/fin,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T/fin,V} D]
			C{T/fin,V} cannot be opened.
			=[C{T/fin,V} D]

6.

		Consume "Pekka"

		[C{T/fin,V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T/fin,V} D{N}]

7.
	>>>	Trying candidate parse [C{T/fin,V} D{N}] (1.)
		Reconstructing...
			Reconstructing head movement for [C{T/fin,V} D{N}].
				Head reconstruction failed for T/fin{V}, merged locally as a last resort.
				Extracted head "T/fin{V}" and reconstructed it = [C [T/fin{V} D{N}]]
				Extracted head "nukku" and reconstructed it = [C [T/fin [nukku D{N}]]]
				Extracted head "Pekka" from D and created [C [T/fin [nukku [D Pekka]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<DP>:3 [T/fin [nukku <D Pekka>:3]]]]
				= [C [<D Pekka> [T/fin [nukku <D Pekka>]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T/fin".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:3 from memory buffer into Spec of nukku
			= [C [<D Pekka> [T/fin [<D Pekka> [nukku <D Pekka>]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<DP>:3 [T/fin [<DP>:3 [nukku <D Pekka>:3]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 7/63 operations) <------------------------------------
		Solution:
		[C [<D Pekka> [T/fin [<D Pekka> [nukku <D Pekka>]]]]]
		Grammar: [C [<DP>:1 [T/fin [<DP>:1 [nukku <D Pekka>:1]]]]]
		Spellout C/finP = [C/fin [__:1 [T/fin [__:1 [V DP:1]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:Neg/fin', '-COMP:T', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:Neg/fin', '-COMP:T', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C: [C/fin]
(D): [D, C/fin]
(N): [N, D, C/fin]
T/fin: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
nukku: [V, T/fin, C/fin]
D: [D, V, T/fin, C/fin]
Pekka: [N, D, V, T/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 5
['Pekka', 'auttaa', 'Merjaa']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', '$v', 'autta-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

5.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] T/fin{v}]

6.

		Consume "auttaa"

		[[D Pekka] T/fin{v}] + auttaa
			Filtering out impossible merge sites...
			Sink "auttaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*auttaa]
			=[[D Pekka] T/fin{v,V}]

7.
		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] T/fin{v,V}]

8.

		Adding inflectional features {'-', 'TAIL:!COMP:*,-PHI', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v auttaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[D Pekka] [T/fin{v,V} D]]

9.

		Consume "Merjaa"

		[[D Pekka] [T/fin{v,V} D]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [T/fin{v,V} D{N}]]

10.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T/fin{v,V} D{N}]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T/fin [v{V} D{N}]]]
				Extracted head "auttaa" and reconstructed it = [[D Pekka] [T/fin [v [auttaa D{N}]]]]
				Extracted head "Merjaa" from D and created [[D Pekka] [T/fin [v [auttaa [D Merjaa]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:6 [T/fin [<DP>:6 [v [auttaa [D Merjaa]]]]]]
				= [<D Pekka> [T/fin [<D Pekka> [v [auttaa [D Merjaa]]]]]]
			Dropping A-/A-bar movement.
			= [<D Pekka> [T/fin [<D Pekka> [v [auttaa [D Merjaa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:6 [T/fin [<DP>:6 [v [auttaa [D Merjaa]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 10/78 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v [auttaa [D Merjaa]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 [v [auttaa [D Merjaa]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
auttaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Merjaa: [N, D, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 6
['Pekka#foc', 'auttaa', 'Merjaa']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', 'ABAR:FOC'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$T/fin', '$v', 'autta-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

6.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] T/fin{v}]

7.

		Consume "auttaa"

		[[D Pekka] T/fin{v}] + auttaa
			Filtering out impossible merge sites...
			Sink "auttaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*auttaa]
			=[[D Pekka] T/fin{v,V}]

8.
		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] T/fin{v,V}]

9.

		Adding inflectional features {'-', 'TAIL:!COMP:*,-PHI', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v auttaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[D Pekka] [T/fin{v,V} D]]

10.

		Consume "Merjaa"

		[[D Pekka] [T/fin{v,V} D]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [T/fin{v,V} D{N}]]

11.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T/fin{v,V} D{N}]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T/fin [v{V} D{N}]]]
				Extracted head "auttaa" and reconstructed it = [[D Pekka] [T/fin [v [auttaa D{N}]]]]
				Extracted head "Merjaa" from D and created [[D Pekka] [T/fin [v [auttaa [D Merjaa]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:8 [T/fin [<DP>:8 [v [auttaa [D Merjaa]]]]]]
				= [<D Pekka> [T/fin [<D Pekka> [v [auttaa [D Merjaa]]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'FIN', 'T/fin', 'FIN/T/fin'}
			= [<D Pekka> [T/fin [<D Pekka> [v [auttaa [D Merjaa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:8 [T/fin [<DP>:8 [v [auttaa [D Merjaa]]]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 11/85 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v [auttaa [D Merjaa]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 [v [auttaa [D Merjaa]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
auttaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Merjaa: [N, D, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 7
['Pekka', 'Merjaa', 'auttaa']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=D{N}

5.

		Adding inflectional features {'-', 'TAIL:!COMP:*,-PHI', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D Pekka] D]

6.

		Consume "Merjaa"

		[[D Pekka] D] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] D{N}]

7.
		Next word contains multiple morphemes ['$T/fin', '$v', 'autta-']

		Consume "T/fin"

		[[D Pekka] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [Merjaa T/fin] due to complement selection.
		Ranking completed:
			1. [[[D Pekka] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[D Pekka] D{N}] T/fin]
			Reconstructing head movement for [[D Pekka] D{N}].
				Extracted head "Merjaa" from D and created [[D Pekka] [D Merjaa]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[D Pekka] [D Merjaa]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "D".
				Memory buffer: [[D N]]
				D (D) has a specifier [D Pekka] but is marked for -EPP behavior.
				Extraposition will be tried on [[D Pekka] [D Merjaa]].
				<D Merjaa> was made adjunct by an extraposition rule.
			=[[[D Pekka] <D Merjaa>] T/fin]

8.

		Consume "v"

		[[[D Pekka] <D Merjaa>] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[D Pekka] <D Merjaa>] T/fin{v}]

9.

		Consume "auttaa"

		[[[D Pekka] <D Merjaa>] T/fin{v}] + auttaa
			Filtering out impossible merge sites...
			Sink "auttaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*auttaa]
			=[[[D Pekka] <D Merjaa>] T/fin{v,V}]

10.
	>>>	Trying candidate parse [[[D Pekka] <D Merjaa>] T/fin{v,V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka] <D Merjaa>] T/fin{v,V}].
				Extracted head "v{V}" from T/fin and created [[[D Pekka] <D Merjaa>] [T/fin v{V}]]
			Reconstructing head movement for v{V}.
				Extracted head "auttaa" from v and created [[[D Pekka] <D Merjaa>] [T/fin [v auttaa]]]
			Dropping floaters...
				[[D Pekka] <D Merjaa>] failed to tail [A/HEAD][CAT:FIN]
				<[D Pekka] <D Merjaa>> was made an adjunct.
				Floater <[D Pekka] <D Merjaa>> dropped: [<[D Pekka] <D Merjaa>>:9 [T/fin [<DP>:9 [v auttaa]]]]
				= [<[D Pekka] <D Merjaa>> [T/fin [<[D Pekka] <D Merjaa>> [v auttaa]]]]
			Dropping A-/A-bar movement.
				(D) failed internal tail test.
				v probing for CAT:D failed.
				auttaa (auttaa) is missing complement D
				Extraposition will be tried on [<[D Pekka] <D Merjaa>>:9 [T/fin [<DP>:9 [v auttaa]]]].
			= [<[D Pekka] <D Merjaa>> [T/fin [<[D Pekka] <D Merjaa>> [v auttaa]]]]
		Checking LF-interface conditions.
				(D) failed internal tail test.
				v probing for CAT:D failed.
				auttaa (auttaa) is missing complement D
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
D: [D]
Merjaa: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
auttaa: [V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "autta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] [[D Merjaa] T/fin]]

11.

		Consume "v"

		[[D Pekka] [[D Merjaa] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] [[D Merjaa] T/fin{v}]]

12.

		Consume "auttaa"

		[[D Pekka] [[D Merjaa] T/fin{v}]] + auttaa
			Filtering out impossible merge sites...
			Sink "auttaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*auttaa]
			=[[D Pekka] [[D Merjaa] T/fin{v,V}]]

13.
	>>>	Trying candidate parse [[D Pekka] [[D Merjaa] T/fin{v,V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[D Merjaa] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[D Pekka] [[D Merjaa] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "auttaa" from v and created [[D Pekka] [[D Merjaa] [T/fin [v auttaa]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:10 [[D Merjaa] [T/fin [<DP>:10 [v auttaa]]]]]
				[D Merjaa] failed to tail [!COMP:*][-PHI]
				<D Merjaa> was made an adjunct.
				Floater <D Merjaa> dropped: [<D Pekka>:10 [<D Merjaa>:11 [T/fin [<DP>:10 [v [<DP>:11 auttaa]]]]]]
				= [<D Pekka> [<D Merjaa> [T/fin [<D Pekka> [v [<D Merjaa> auttaa]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<D Pekka>:10 [? [<D Merjaa>:11 [T/fin [<DP>:10 [v [<DP>:11 auttaa]]]]]]].
			= [<D Pekka> [? [<D Merjaa> [T/fin [<D Pekka> [v [<D Merjaa> auttaa]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
?: [?]
D: [D, ?]
Merjaa: [N, D, ?]
T/fin: [T/fin, ?]
(D): [D, T/fin, ?]
(N): [N, D, T/fin, ?]
v: [v, T/fin, ?]
(D): [D, v, T/fin, ?]
(N): [N, D, v, T/fin, ?]
auttaa: [V, v, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "autta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "auttaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 8
['Pekka#foc', 'Merjaa', 'auttaa']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', 'ABAR:FOC'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'-', 'TAIL:!COMP:*,-PHI', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D Pekka] D]

7.

		Consume "Merjaa"

		[[D Pekka] D] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] D{N}]

8.
		Next word contains multiple morphemes ['$T/fin', '$v', 'autta-']

		Consume "T/fin"

		[[D Pekka] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [Merjaa T/fin] due to complement selection.
		Ranking completed:
			1. [[[D Pekka] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[D Pekka] D{N}] T/fin]
			Reconstructing head movement for [[D Pekka] D{N}].
				Extracted head "Merjaa" from D and created [[D Pekka] [D Merjaa]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[D Pekka] [D Merjaa]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "D".
				Criterial features {'FOC'} copied to {'D'}
				Tail features [!COMP:*][-PHI] were detected at D, this must head an adjunct floater.
				<D Merjaa> was made an adjunct.
				Memory buffer: [[D N]]
			=[[[D Pekka] <D Merjaa>] T/fin]

9.

		Consume "v"

		[[[D Pekka] <D Merjaa>] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[D Pekka] <D Merjaa>] T/fin{v}]

10.

		Consume "auttaa"

		[[[D Pekka] <D Merjaa>] T/fin{v}] + auttaa
			Filtering out impossible merge sites...
			Sink "auttaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*auttaa]
			=[[[D Pekka] <D Merjaa>] T/fin{v,V}]

11.
	>>>	Trying candidate parse [[[D Pekka] <D Merjaa>] T/fin{v,V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka] <D Merjaa>] T/fin{v,V}].
				Extracted head "v{V}" from T/fin and created [[[D Pekka] <D Merjaa>] [T/fin v{V}]]
			Reconstructing head movement for v{V}.
				Extracted head "auttaa" from v and created [[[D Pekka] <D Merjaa>] [T/fin [v auttaa]]]
			Dropping floaters...
				[[D Pekka] <D Merjaa>] failed to tail [A/HEAD][CAT:FIN]
				<[D Pekka] <D Merjaa>> was made an adjunct.
				Floater <[D Pekka] <D Merjaa>> dropped: [<[D Pekka] <D Merjaa>>:12 [T/fin [<DP>:12 [v auttaa]]]]
				= [<[D Pekka] <D Merjaa>> [T/fin [<[D Pekka] <D Merjaa>> [v auttaa]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'FIN', 'T/fin', 'FIN/T/fin'}
				(D) failed internal tail test.
				v probing for CAT:D failed.
				auttaa (auttaa) is missing complement D
				Extraposition will be tried on [<[D Pekka] <D Merjaa>>:12 [T/fin [<DP>:12 [v auttaa]]]].
			= [<[D Pekka] <D Merjaa>> [T/fin [<[D Pekka] <D Merjaa>> [v auttaa]]]]
		Checking LF-interface conditions.
				(D) failed internal tail test.
				v probing for CAT:D failed.
				auttaa (auttaa) is missing complement D
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
D: [D]
Merjaa: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
auttaa: [V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "autta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] [[D Merjaa] T/fin]]

12.

		Consume "v"

		[[D Pekka] [[D Merjaa] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] [[D Merjaa] T/fin{v}]]

13.

		Consume "auttaa"

		[[D Pekka] [[D Merjaa] T/fin{v}]] + auttaa
			Filtering out impossible merge sites...
			Sink "auttaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*auttaa]
			=[[D Pekka] [[D Merjaa] T/fin{v,V}]]

14.
	>>>	Trying candidate parse [[D Pekka] [[D Merjaa] T/fin{v,V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[D Merjaa] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[D Pekka] [[D Merjaa] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "auttaa" from v and created [[D Pekka] [[D Merjaa] [T/fin [v auttaa]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:13 [[D Merjaa] [T/fin [<DP>:13 [v auttaa]]]]]
				[D Merjaa] failed to tail [!COMP:*][-PHI]
				<D Merjaa> was made an adjunct.
				Floater <D Merjaa> dropped: [<D Pekka>:13 [<D Merjaa>:14 [T/fin [<DP>:13 [v [<DP>:14 auttaa]]]]]]
				= [<D Pekka> [<D Merjaa> [T/fin [<D Pekka> [v [<D Merjaa> auttaa]]]]]]
			Dropping A-/A-bar movement.
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
			= [<D Pekka> [uFOC [<D Merjaa> [T/fin [<D Pekka> [v [<D Merjaa> auttaa]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:13 [uFOC [<D Merjaa>:14 [T/fin [<DP>:13 [v [<DP>:14 auttaa]]]]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 14/151 operations) <------------------------------------
		Solution:
		[<D Pekka> [uFOC [<D Merjaa> [T/fin [<D Pekka> [v [<D Merjaa> auttaa]]]]]]]
		Grammar: [<D Pekka>:1 [uFOC [<D Merjaa>:2 [T/fin [<DP>:1 [v [<DP>:2 auttaa]]]]]]]
		Spellout P = [DP:1 [ [DP:2 [T/fin [__:1 [v [__:2 V]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
uFOC: []
D: [D, ]
Merjaa: [N, D, ]
T/fin: [T/fin, ]
(D): [D, T/fin, ]
(N): [N, D, T/fin, ]
v: [v, T/fin, ]
(D): [D, v, T/fin, ]
(N): [N, D, v, T/fin, ]
auttaa: [V, v, T/fin, ]

			Checking if the sentence is ambiguous...


\========================================================================
# 9
['auttaa', 'Pekka', 'Merjaa']


			=None

1.
		Next word contains multiple morphemes ['$T/fin', '$v', 'autta-']
			=T/fin

2.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

3.

		Consume "auttaa"

		T/fin{v} + auttaa
			Filtering out impossible merge sites...
			Sink "auttaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*auttaa]
			=T/fin{v,V}

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=T/fin{v,V}

5.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[T/fin{v,V} D]

6.

		Consume "Pekka"

		[T/fin{v,V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T/fin{v,V} D{N}]

7.
		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[T/fin{v,V} D{N}]

8.

		Adding inflectional features {'-', 'TAIL:!COMP:*,-PHI', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[T/fin{v,V} D{N}] + D
			Filtering out impossible merge sites...
				Reject [[T/fin [<D Pekka> [v [auttaa <D Pekka>]]]] D] due to bad left branch.
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[T/fin{v,V} [[D Pekka] D]]

9.

		Consume "Merjaa"

		[T/fin{v,V} [[D Pekka] D]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[T/fin{v,V} [[D Pekka] D{N}]]

10.
	>>>	Trying candidate parse [T/fin{v,V} [[D Pekka] D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [T/fin{v,V} [[D Pekka] D{N}]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[D Pekka] D{N}]]]
				Extracted head "auttaa" and reconstructed it = [T/fin [v [auttaa [[D Pekka] D{N}]]]]
				Extracted head "Merjaa" from D and created [T/fin [v [auttaa [[D Pekka] [D Merjaa]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:16 [v [auttaa [<D Pekka>:16 [D Merjaa]]]]]]
				= [T/fin [<D Pekka> [v [auttaa [<D Pekka> [D Merjaa]]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [T/fin [<DP>:16 [v [auttaa [<D Pekka>:16 [D Merjaa]]]]]].
				<D Merjaa> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
			= [T/fin [<D Pekka> [v [auttaa [<D Pekka> <D Merjaa>]]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
auttaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
D: [D, V, v, T/fin]
Merjaa: [N, D, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "autta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "auttaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 10
['auttaa#foc', 'Pekka', 'Merjaa']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'auttaa']
			=C

2.
		Next word contains multiple morphemes ['$T/fin', '$v', 'autta-']

		Consume "T/fin"

		C + T/fin
			Filtering out impossible merge sites...
			Sink "T/fin" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T/fin]
			=C{T/fin}

3.

		Consume "v"

		C{T/fin} + v
			Filtering out impossible merge sites...
			Sink "v" into C{T/fin} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin}*v]
			=C{T/fin,v}

4.

		Consume "auttaa"

		C{T/fin,v} + auttaa
			Filtering out impossible merge sites...
			Sink "auttaa" into C{T/fin,v} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin,v}*auttaa]
			=C{T/fin,v,V}

5.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=C{T/fin,v,V}

6.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		C{T/fin,v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T/fin,v,V} D]
			C{T/fin,v,V} cannot be opened.
			=[C{T/fin,v,V} D]

7.

		Consume "Pekka"

		[C{T/fin,v,V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T/fin,v,V} D{N}]

8.
		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[C{T/fin,v,V} D{N}]

9.

		Adding inflectional features {'-', 'TAIL:!COMP:*,-PHI', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[C{T/fin,v,V} D{N}] + D
			Filtering out impossible merge sites...
				Reject [[C [<D Pekka> [T/fin [<D Pekka> [v [auttaa <D Pekka>]]]]]] D] due to bad left branch.
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[C{T/fin,v,V} [[D Pekka] D]]

10.

		Consume "Merjaa"

		[C{T/fin,v,V} [[D Pekka] D]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[C{T/fin,v,V} [[D Pekka] D{N}]]

11.
	>>>	Trying candidate parse [C{T/fin,v,V} [[D Pekka] D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{T/fin,v,V} [[D Pekka] D{N}]].
				Extracted head "T/fin{v,V}" and reconstructed it = [C [[D Pekka] [T/fin{v,V} D{N}]]]
				Extracted head "v{V}" and reconstructed it = [C [[D Pekka] [T/fin [v{V} D{N}]]]]
				Extracted head "auttaa" and reconstructed it = [C [[D Pekka] [T/fin [v [auttaa D{N}]]]]]
				Extracted head "Merjaa" from D and created [C [[D Pekka] [T/fin [v [auttaa [D Merjaa]]]]]]
			Dropping floaters...
				[D Pekka] is in an EPP SPEC position.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<D Pekka>:19 [T/fin [<DP>:19 [v [auttaa [D Merjaa]]]]]]]
				= [C [<D Pekka> [T/fin [<D Pekka> [v [auttaa [D Merjaa]]]]]]]
			Dropping A-/A-bar movement.
			= [C [<D Pekka> [T/fin [<D Pekka> [v [auttaa [D Merjaa]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<D Pekka>:19 [T/fin [<DP>:19 [v [auttaa [D Merjaa]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 11/88 operations) <------------------------------------
		Solution:
		[C [<D Pekka> [T/fin [<D Pekka> [v [auttaa [D Merjaa]]]]]]]
		Grammar: [C [<D Pekka>:1 [T/fin [<DP>:1 [v [auttaa [D Merjaa]]]]]]]
		Spellout C/finP = [C/fin [DP:1 [T/fin [__:1 [v [V [D N]]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

C: [C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
T/fin: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
v: [v, T/fin, C/fin]
auttaa: [V, v, T/fin, C/fin]
D: [D, V, v, T/fin, C/fin]
Merjaa: [N, D, V, v, T/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 11
['auttaa', 'Merjaa', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$T/fin', '$v', 'autta-']
			=T/fin

2.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

3.

		Consume "auttaa"

		T/fin{v} + auttaa
			Filtering out impossible merge sites...
			Sink "auttaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*auttaa]
			=T/fin{v,V}

4.
		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=T/fin{v,V}

5.

		Adding inflectional features {'-', 'TAIL:!COMP:*,-PHI', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[T/fin{v,V} D]

6.

		Consume "Merjaa"

		[T/fin{v,V} D] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[T/fin{v,V} D{N}]

7.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[T/fin{v,V} D{N}]

8.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[T/fin{v,V} D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [auttaa [D Merjaa]]]] as left branch because it constitutes illicit structure.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [Merjaa D] due to complement selection.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; D]
			2. [[T/fin{v,V} D{N}]; D]
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[T/fin{v,V} [[D Merjaa] D]]

9.

		Consume "Pekka"

		[T/fin{v,V} [[D Merjaa] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T/fin{v,V} [[D Merjaa] D{N}]]

10.
	>>>	Trying candidate parse [T/fin{v,V} [[D Merjaa] D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [T/fin{v,V} [[D Merjaa] D{N}]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[D Merjaa] D{N}]]]
				Extracted head "auttaa" and reconstructed it = [T/fin [v [auttaa [[D Merjaa] D{N}]]]]
				Extracted head "Pekka" from D and created [T/fin [v [auttaa [[D Merjaa] [D Pekka]]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:20 [v [auttaa [[D Merjaa] <D Pekka>:20]]]]]
				[D Merjaa] cannot be made an adjunct because its sister is an adjunct.
				Floater [D Merjaa] dropped: [T/fin [<DP>:20 [v [(DP):21 [auttaa [[D Merjaa]:21 <D Pekka>:20]]]]]]
				= [T/fin [<D Pekka> [v [[D Merjaa] [auttaa [[D Merjaa] <D Pekka>]]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [T/fin [<DP>:20 [v [(DP):21 [auttaa [[D Merjaa]:21 <D Pekka>:20]]]]]].
			= [T/fin [<D Pekka> [v [[D Merjaa] [auttaa [[D Merjaa] <D Pekka>]]]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
auttaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Merjaa: [N, D, V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{v,V} D{N}] D]
			Reconstructing head movement for [T/fin{v,V} D{N}].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} D{N}]]
				Extracted head "auttaa" and reconstructed it = [T/fin [v [auttaa D{N}]]]
				Extracted head "Merjaa" from D and created [T/fin [v [auttaa [D Merjaa]]]]
			Dropping floaters...
				= [T/fin [v [auttaa [D Merjaa]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [T/fin [v [auttaa [D Merjaa]]]].
			=[[T/fin [v [auttaa [D Merjaa]]]] D]

11.

		Consume "Pekka"

		[[T/fin [v [auttaa [D Merjaa]]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[T/fin [v [auttaa [D Merjaa]]]] D{N}]

12.
	>>>	Trying candidate parse [[T/fin [v [auttaa [D Merjaa]]]] D{N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[T/fin [v [auttaa [D Merjaa]]]] D{N}].
				Extracted head "Pekka" from D and created [[T/fin [v [auttaa [D Merjaa]]]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [[T/fin [<DP>:22 [v [auttaa [D Merjaa]]]]] <D Pekka>:22]
				= [[T/fin [<D Pekka> [v [auttaa [D Merjaa]]]]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [[T/fin [<DP>:22 [v [auttaa [D Merjaa]]]]] <D Pekka>:22].
			= [[T/fin [<D Pekka> [v [auttaa [D Merjaa]]]]] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
auttaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Merjaa: [N, D, V, v, T/fin]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "autta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "auttaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 12
['auttaa#foc', 'Merjaa', 'Pekka']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'auttaa']
			=C

2.
		Next word contains multiple morphemes ['$T/fin', '$v', 'autta-']

		Consume "T/fin"

		C + T/fin
			Filtering out impossible merge sites...
			Sink "T/fin" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T/fin]
			=C{T/fin}

3.

		Consume "v"

		C{T/fin} + v
			Filtering out impossible merge sites...
			Sink "v" into C{T/fin} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin}*v]
			=C{T/fin,v}

4.

		Consume "auttaa"

		C{T/fin,v} + auttaa
			Filtering out impossible merge sites...
			Sink "auttaa" into C{T/fin,v} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin,v}*auttaa]
			=C{T/fin,v,V}

5.
		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=C{T/fin,v,V}

6.

		Adding inflectional features {'-', 'TAIL:!COMP:*,-PHI', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		C{T/fin,v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T/fin,v,V} D]
			C{T/fin,v,V} cannot be opened.
			=[C{T/fin,v,V} D]

7.

		Consume "Merjaa"

		[C{T/fin,v,V} D] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[C{T/fin,v,V} D{N}]

8.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[C{T/fin,v,V} D{N}]

9.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[C{T/fin,v,V} D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [C [T/fin [v [auttaa [D Merjaa]]]]] as left branch because it constitutes illicit structure.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [Merjaa D] due to complement selection.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; D]
			2. [[C{T/fin,v,V} D{N}]; D]
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[C{T/fin,v,V} [[D Merjaa] D]]

10.

		Consume "Pekka"

		[C{T/fin,v,V} [[D Merjaa] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T/fin,v,V} [[D Merjaa] D{N}]]

11.
	>>>	Trying candidate parse [C{T/fin,v,V} [[D Merjaa] D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{T/fin,v,V} [[D Merjaa] D{N}]].
				Extracted head "T/fin{v,V}" and reconstructed it = [C [[D Merjaa] [T/fin{v,V} D{N}]]]
				Extracted head "v{V}" and reconstructed it = [C [[D Merjaa] [T/fin [v{V} D{N}]]]]
				Extracted head "auttaa" and reconstructed it = [C [[D Merjaa] [T/fin [v [auttaa D{N}]]]]]
				Extracted head "Pekka" from D and created [C [[D Merjaa] [T/fin [v [auttaa [D Pekka]]]]]]
			Dropping floaters...
				[D Merjaa] failed to tail [!COMP:*][-PHI]
				<D Merjaa> was made an adjunct.
				Floater <D Merjaa> dropped: [C [<D Merjaa>:23 [T/fin [v [<DP>:23 [auttaa [D Pekka]]]]]]]
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<D Merjaa>:23 [T/fin [<DP>:24 [v [<DP>:23 [auttaa <D Pekka>:24]]]]]]]
				= [C [<D Merjaa> [T/fin [<D Pekka> [v [<D Merjaa> [auttaa <D Pekka>]]]]]]]
			Dropping A-/A-bar movement.
			= [C [<D Merjaa> [T/fin [<D Pekka> [v [<D Merjaa> [auttaa <D Pekka>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<D Merjaa>:23 [T/fin [<DP>:24 [v [<DP>:23 [auttaa <D Pekka>:24]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 11/104 operations) <------------------------------------
		Solution:
		[C [<D Merjaa> [T/fin [<D Pekka> [v [<D Merjaa> [auttaa <D Pekka>]]]]]]]
		Grammar: [C [<D Merjaa>:1 [T/fin [<DP>:2 [v [<DP>:1 [auttaa <D Pekka>:2]]]]]]]
		Spellout C/finP = [C/fin [DP:1 [T/fin [__:2 [v [__:1 [V DP:2]]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C: [C/fin]
D: [D, C/fin]
Merjaa: [N, D, C/fin]
T/fin: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
v: [v, T/fin, C/fin]
(D): [D, v, T/fin, C/fin]
(N): [N, D, v, T/fin, C/fin]
auttaa: [V, v, T/fin, C/fin]
D: [D, V, v, T/fin, C/fin]
Pekka: [N, D, V, v, T/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 13
['Merjaa', 'Pekka', 'auttaa']


			=None

1.
		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'TAIL:!COMP:*,-PHI', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
			=D

3.

		Consume "Merjaa"

		D + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=D{N}

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=D{N}

5.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D Merjaa] D]

6.

		Consume "Pekka"

		[[D Merjaa] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D Merjaa] D{N}]

7.
		Next word contains multiple morphemes ['$T/fin', '$v', 'autta-']

		Consume "T/fin"

		[[D Merjaa] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [Pekka T/fin] due to complement selection.
		Ranking completed:
			1. [[[D Merjaa] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[D Merjaa] D{N}] T/fin]
			Reconstructing head movement for [[D Merjaa] D{N}].
				Extracted head "Pekka" from D and created [[D Merjaa] [D Pekka]]
			Dropping floaters...
				[D Merjaa] failed to tail [!COMP:*][-PHI]
				= [[D Merjaa] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "D Merjaa " into memory buffer from SPEC of "D".
				Memory buffer: [[D N]]
				D (D) has a specifier [D Merjaa] but is marked for -EPP behavior.
				Extraposition will be tried on [[D Merjaa] [D Pekka]].
				<D Pekka> was made adjunct by an extraposition rule.
			=[[[D Merjaa] <D Pekka>] T/fin]

8.

		Consume "v"

		[[[D Merjaa] <D Pekka>] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[D Merjaa] <D Pekka>] T/fin{v}]

9.

		Consume "auttaa"

		[[[D Merjaa] <D Pekka>] T/fin{v}] + auttaa
			Filtering out impossible merge sites...
			Sink "auttaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*auttaa]
			=[[[D Merjaa] <D Pekka>] T/fin{v,V}]

10.
	>>>	Trying candidate parse [[[D Merjaa] <D Pekka>] T/fin{v,V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[[D Merjaa] <D Pekka>] T/fin{v,V}].
				Extracted head "v{V}" from T/fin and created [[[D Merjaa] <D Pekka>] [T/fin v{V}]]
			Reconstructing head movement for v{V}.
				Extracted head "auttaa" from v and created [[[D Merjaa] <D Pekka>] [T/fin [v auttaa]]]
			Dropping floaters...
				[[D Merjaa] <D Pekka>] failed to tail [!COMP:*][-PHI]
				<[D Merjaa] <D Pekka>> was made an adjunct.
				Floater <[D Merjaa] <D Pekka>> dropped: [<[D Merjaa] <D Pekka>>:25 [T/fin [v [<DP>:25 auttaa]]]]
				= [<[D Merjaa] <D Pekka>> [T/fin [v [<[D Merjaa] <D Pekka>> auttaa]]]]
			Dropping A-/A-bar movement.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [<[D Merjaa] <D Pekka>>:25 [T/fin [v [<DP>:25 auttaa]]]].
			= [<[D Merjaa] <D Pekka>> [T/fin [v [<[D Merjaa] <D Pekka>> auttaa]]]]
		Checking LF-interface conditions.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Merjaa: [N, D]
D: [D]
Pekka: [N, D]
T/fin: [T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
auttaa: [V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "autta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[D Merjaa] [[D Pekka] T/fin]]

11.

		Consume "v"

		[[D Merjaa] [[D Pekka] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Merjaa] [[D Pekka] T/fin{v}]]

12.

		Consume "auttaa"

		[[D Merjaa] [[D Pekka] T/fin{v}]] + auttaa
			Filtering out impossible merge sites...
			Sink "auttaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*auttaa]
			=[[D Merjaa] [[D Pekka] T/fin{v,V}]]

13.
	>>>	Trying candidate parse [[D Merjaa] [[D Pekka] T/fin{v,V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Merjaa] [[D Pekka] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[D Merjaa] [[D Pekka] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "auttaa" from v and created [[D Merjaa] [[D Pekka] [T/fin [v auttaa]]]]
			Dropping floaters...
				[D Merjaa] failed to tail [!COMP:*][-PHI]
				<D Merjaa> was made an adjunct.
				Floater <D Merjaa> dropped: [<D Merjaa>:26 [[D Pekka] [T/fin [v [<DP>:26 auttaa]]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Merjaa>:26 [<D Pekka>:27 [T/fin [<DP>:27 [v [<DP>:26 auttaa]]]]]]
				= [<D Merjaa> [<D Pekka> [T/fin [<D Pekka> [v [<D Merjaa> auttaa]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<D Merjaa>:26 [? [<D Pekka>:27 [T/fin [<DP>:27 [v [<DP>:26 auttaa]]]]]]].
			= [<D Merjaa> [? [<D Pekka> [T/fin [<D Pekka> [v [<D Merjaa> auttaa]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Merjaa: [N, D]
?: [?]
D: [D, ?]
Pekka: [N, D, ?]
T/fin: [T/fin, ?]
(D): [D, T/fin, ?]
(N): [N, D, T/fin, ?]
v: [v, T/fin, ?]
(D): [D, v, T/fin, ?]
(N): [N, D, v, T/fin, ?]
auttaa: [V, v, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "autta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "auttaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 14
['Merjaa#foc', 'Pekka', 'auttaa']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Merjaa']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Merjaa"

			=None

2.
		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'TAIL:!COMP:*,-PHI', 'LANG:FI', 'ABAR:FOC'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
			=D

4.

		Consume "Merjaa"

		D + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=D{N}

5.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D Merjaa] D]

7.

		Consume "Pekka"

		[[D Merjaa] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D Merjaa] D{N}]

8.
		Next word contains multiple morphemes ['$T/fin', '$v', 'autta-']

		Consume "T/fin"

		[[D Merjaa] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [Pekka T/fin] due to complement selection.
		Ranking completed:
			1. [[[D Merjaa] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[D Merjaa] D{N}] T/fin]
			Reconstructing head movement for [[D Merjaa] D{N}].
				Extracted head "Pekka" from D and created [[D Merjaa] [D Pekka]]
			Dropping floaters...
				[D Merjaa] failed to tail [!COMP:*][-PHI]
				= [[D Merjaa] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "D Merjaa " into memory buffer from SPEC of "D".
				Criterial features {'FOC'} copied to {'D'}
				Tail features [A/HEAD][CAT:FIN] were detected at D, this must head an adjunct floater.
				<D Pekka> was made an adjunct.
				Memory buffer: [[D N]]
			=[[[D Merjaa] <D Pekka>] T/fin]

9.

		Consume "v"

		[[[D Merjaa] <D Pekka>] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[D Merjaa] <D Pekka>] T/fin{v}]

10.

		Consume "auttaa"

		[[[D Merjaa] <D Pekka>] T/fin{v}] + auttaa
			Filtering out impossible merge sites...
			Sink "auttaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*auttaa]
			=[[[D Merjaa] <D Pekka>] T/fin{v,V}]

11.
	>>>	Trying candidate parse [[[D Merjaa] <D Pekka>] T/fin{v,V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[[D Merjaa] <D Pekka>] T/fin{v,V}].
				Extracted head "v{V}" from T/fin and created [[[D Merjaa] <D Pekka>] [T/fin v{V}]]
			Reconstructing head movement for v{V}.
				Extracted head "auttaa" from v and created [[[D Merjaa] <D Pekka>] [T/fin [v auttaa]]]
			Dropping floaters...
				[[D Merjaa] <D Pekka>] failed to tail [!COMP:*][-PHI]
				<[D Merjaa] <D Pekka>> was made an adjunct.
				Floater <[D Merjaa] <D Pekka>> dropped: [<[D Merjaa] <D Pekka>>:28 [T/fin [v [<DP>:28 auttaa]]]]
				= [<[D Merjaa] <D Pekka>> [T/fin [v [<[D Merjaa] <D Pekka>> auttaa]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'FIN', 'T/fin', 'FIN/T/fin'}
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [<[D Merjaa] <D Pekka>>:28 [T/fin [v [<DP>:28 auttaa]]]].
			= [<[D Merjaa] <D Pekka>> [T/fin [v [<[D Merjaa] <D Pekka>> auttaa]]]]
		Checking LF-interface conditions.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Merjaa: [N, D]
D: [D]
Pekka: [N, D]
T/fin: [T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
auttaa: [V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "autta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[D Merjaa] [[D Pekka] T/fin]]

12.

		Consume "v"

		[[D Merjaa] [[D Pekka] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Merjaa] [[D Pekka] T/fin{v}]]

13.

		Consume "auttaa"

		[[D Merjaa] [[D Pekka] T/fin{v}]] + auttaa
			Filtering out impossible merge sites...
			Sink "auttaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*auttaa]
			=[[D Merjaa] [[D Pekka] T/fin{v,V}]]

14.
	>>>	Trying candidate parse [[D Merjaa] [[D Pekka] T/fin{v,V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Merjaa] [[D Pekka] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[D Merjaa] [[D Pekka] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "auttaa" from v and created [[D Merjaa] [[D Pekka] [T/fin [v auttaa]]]]
			Dropping floaters...
				[D Merjaa] failed to tail [!COMP:*][-PHI]
				<D Merjaa> was made an adjunct.
				Floater <D Merjaa> dropped: [<D Merjaa>:29 [[D Pekka] [T/fin [v [<DP>:29 auttaa]]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Merjaa>:29 [<D Pekka>:30 [T/fin [<DP>:30 [v [<DP>:29 auttaa]]]]]]
				= [<D Merjaa> [<D Pekka> [T/fin [<D Pekka> [v [<D Merjaa> auttaa]]]]]]
			Dropping A-/A-bar movement.
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
			= [<D Merjaa> [uFOC [<D Pekka> [T/fin [<D Pekka> [v [<D Merjaa> auttaa]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Merjaa>:29 [uFOC [<D Pekka>:30 [T/fin [<DP>:30 [v [<DP>:29 auttaa]]]]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 14/149 operations) <------------------------------------
		Solution:
		[<D Merjaa> [uFOC [<D Pekka> [T/fin [<D Pekka> [v [<D Merjaa> auttaa]]]]]]]
		Grammar: [<D Merjaa>:1 [uFOC [<D Pekka>:2 [T/fin [<DP>:2 [v [<DP>:1 auttaa]]]]]]]
		Spellout P = [DP:1 [ [DP:2 [T/fin [__:2 [v [__:1 V]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Merjaa: [N, D]
uFOC: []
D: [D, ]
Pekka: [N, D, ]
T/fin: [T/fin, ]
(D): [D, T/fin, ]
(N): [N, D, T/fin, ]
v: [v, T/fin, ]
(D): [D, v, T/fin, ]
(N): [N, D, v, T/fin, ]
auttaa: [V, v, T/fin, ]

			Checking if the sentence is ambiguous...


\========================================================================
# 15
['Merjaa', 'auttaa', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'TAIL:!COMP:*,-PHI', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
			=D

3.

		Consume "Merjaa"

		D + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', '$v', 'autta-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Merjaa] T/fin]

5.

		Consume "v"

		[[D Merjaa] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Merjaa] T/fin{v}]

6.

		Consume "auttaa"

		[[D Merjaa] T/fin{v}] + auttaa
			Filtering out impossible merge sites...
			Sink "auttaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*auttaa]
			=[[D Merjaa] T/fin{v,V}]

7.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[D Merjaa] T/fin{v,V}]

8.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[D Merjaa] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [<D Merjaa> [T/fin [v [<D Merjaa> auttaa]]]] as left branch because it constitutes illicit structure.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [auttaa D] due to complement selection.
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D Merjaa] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[D Merjaa] [T/fin{v,V} D]]

9.

		Consume "Pekka"

		[[D Merjaa] [T/fin{v,V} D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D Merjaa] [T/fin{v,V} D{N}]]

10.
	>>>	Trying candidate parse [[D Merjaa] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Merjaa] [T/fin{v,V} D{N}]].
				Extracted head "v{V}" and reconstructed it = [[D Merjaa] [T/fin [v{V} D{N}]]]
				Extracted head "auttaa" and reconstructed it = [[D Merjaa] [T/fin [v [auttaa D{N}]]]]
				Extracted head "Pekka" from D and created [[D Merjaa] [T/fin [v [auttaa [D Pekka]]]]]
			Dropping floaters...
				[D Merjaa] failed to tail [!COMP:*][-PHI]
				<D Merjaa> was made an adjunct.
				Floater <D Merjaa> dropped: [<D Merjaa>:33 [T/fin [v [<DP>:33 [auttaa [D Pekka]]]]]]
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Merjaa>:33 [T/fin [<DP>:34 [v [<DP>:33 [auttaa <D Pekka>:34]]]]]]
				= [<D Merjaa> [T/fin [<D Pekka> [v [<D Merjaa> [auttaa <D Pekka>]]]]]]
			Dropping A-/A-bar movement.
			= [<D Merjaa> [T/fin [<D Pekka> [v [<D Merjaa> [auttaa <D Pekka>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Merjaa>:33 [T/fin [<DP>:34 [v [<DP>:33 [auttaa <D Pekka>:34]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 10/91 operations) <------------------------------------
		Solution:
		[<D Merjaa> [T/fin [<D Pekka> [v [<D Merjaa> [auttaa <D Pekka>]]]]]]
		Grammar: [<D Merjaa>:1 [T/fin [<DP>:2 [v [<DP>:1 [auttaa <D Pekka>:2]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:2 [v [__:1 [V DP:2]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

D: [D]
Merjaa: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
auttaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 16
['Merjaa#foc', 'auttaa', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Merjaa']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Merjaa"

			=None

2.
		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'TAIL:!COMP:*,-PHI', 'LANG:FI', 'ABAR:FOC'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
			=D

4.

		Consume "Merjaa"

		D + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=D{N}

5.
		Next word contains multiple morphemes ['$T/fin', '$v', 'autta-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Merjaa] T/fin]

6.

		Consume "v"

		[[D Merjaa] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Merjaa] T/fin{v}]

7.

		Consume "auttaa"

		[[D Merjaa] T/fin{v}] + auttaa
			Filtering out impossible merge sites...
			Sink "auttaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*auttaa]
			=[[D Merjaa] T/fin{v,V}]

8.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[D Merjaa] T/fin{v,V}]

9.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[D Merjaa] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [<D Merjaa> [T/fin [v [<D Merjaa> auttaa]]]] as left branch because it constitutes illicit structure.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [auttaa D] due to complement selection.
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D Merjaa] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[D Merjaa] [T/fin{v,V} D]]

10.

		Consume "Pekka"

		[[D Merjaa] [T/fin{v,V} D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D Merjaa] [T/fin{v,V} D{N}]]

11.
	>>>	Trying candidate parse [[D Merjaa] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Merjaa] [T/fin{v,V} D{N}]].
				Extracted head "v{V}" and reconstructed it = [[D Merjaa] [T/fin [v{V} D{N}]]]
				Extracted head "auttaa" and reconstructed it = [[D Merjaa] [T/fin [v [auttaa D{N}]]]]
				Extracted head "Pekka" from D and created [[D Merjaa] [T/fin [v [auttaa [D Pekka]]]]]
			Dropping floaters...
				[D Merjaa] failed to tail [!COMP:*][-PHI]
				<D Merjaa> was made an adjunct.
				Floater <D Merjaa> dropped: [<D Merjaa>:37 [T/fin [v [<DP>:37 [auttaa [D Pekka]]]]]]
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Merjaa>:37 [T/fin [<DP>:38 [v [<DP>:37 [auttaa <D Pekka>:38]]]]]]
				= [<D Merjaa> [T/fin [<D Pekka> [v [<D Merjaa> [auttaa <D Pekka>]]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'FIN', 'T/fin', 'FIN/T/fin'}
			= [<D Merjaa> [T/fin [<D Pekka> [v [<D Merjaa> [auttaa <D Pekka>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Merjaa>:37 [T/fin [<DP>:38 [v [<DP>:37 [auttaa <D Pekka>:38]]]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 11/98 operations) <------------------------------------
		Solution:
		[<D Merjaa> [T/fin [<D Pekka> [v [<D Merjaa> [auttaa <D Pekka>]]]]]]
		Grammar: [<D Merjaa>:1 [T/fin [<DP>:2 [v [<DP>:1 [auttaa <D Pekka>:2]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:2 [v [__:1 [V DP:2]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
auttaa:['!COMP:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:help', 'PF:auttaa', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

D: [D]
Merjaa: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
auttaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 17
['Pekka', 'antoi', 'kirjan', 'Merjalle']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

5.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] T/fin{v}]

6.

		Consume "antaa"

		[[D Pekka] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] T/fin{v,V}]

7.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] T/fin{v,V}]

8.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[D Pekka] [T/fin{v,V} D]]

9.

		Consume "kirja"

		[[D Pekka] [T/fin{v,V} D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [T/fin{v,V} D{N}]]

10.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [T/fin{v,V} D{N}]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				Avoid T/finP as SPEC, P(lle).
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D Pekka] [T/fin{v,V} D{N}]]; P(lle)]
			3. [[T/fin{v,V} D{N}]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [T/fin{v,V} [[D kirja] P(lle)]]]

11.

		Consume "D"

		[[D Pekka] [T/fin{v,V} [[D kirja] P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D}]]]

12.

		Consume "Merja-"

		[[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D,N}]]]

13.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D,N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D,N}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T/fin [v{V} [[D kirja] P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [T/fin [v [antaa [[D kirja] P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [T/fin [v [antaa [[D kirja] [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [T/fin [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:42 [T/fin [<DP>:42 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]
				= [<D Pekka> [T/fin [<D Pekka> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D Pekka>:42 [T/fin [<DP>:42 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [<D Pekka> [T/fin [<D Pekka> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:42 [T/fin [<DP>:42 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 13/122 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [v [V [[D N] PP]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 18
['Pekka#foc', 'antoi', 'kirjan', 'Merjalle']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', 'ABAR:FOC'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

6.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] T/fin{v}]

7.

		Consume "antaa"

		[[D Pekka] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] T/fin{v,V}]

8.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] T/fin{v,V}]

9.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[D Pekka] [T/fin{v,V} D]]

10.

		Consume "kirja"

		[[D Pekka] [T/fin{v,V} D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [T/fin{v,V} D{N}]]

11.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [T/fin{v,V} D{N}]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				Avoid T/finP as SPEC, P(lle).
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D Pekka] [T/fin{v,V} D{N}]]; P(lle)]
			3. [[T/fin{v,V} D{N}]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [T/fin{v,V} [[D kirja] P(lle)]]]

12.

		Consume "D"

		[[D Pekka] [T/fin{v,V} [[D kirja] P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D}]]]

13.

		Consume "Merja-"

		[[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D,N}]]]

14.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D,N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D,N}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T/fin [v{V} [[D kirja] P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [T/fin [v [antaa [[D kirja] P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [T/fin [v [antaa [[D kirja] [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [T/fin [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:46 [T/fin [<DP>:46 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]
				= [<D Pekka> [T/fin [<D Pekka> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'FIN', 'T/fin', 'FIN/T/fin'}
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D Pekka>:46 [T/fin [<DP>:46 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [<D Pekka> [T/fin [<D Pekka> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:46 [T/fin [<DP>:46 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 14/129 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [v [V [[D N] PP]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 19
['Pekka', 'antoi', 'Merjalle', 'kirjan']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

5.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] T/fin{v}]

6.

		Consume "antaa"

		[[D Pekka] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] T/fin{v,V}]

7.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] T/fin{v,V}] + P(lle)
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v antaa]]]] P(lle)] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} P(lle)]
			T/fin{v,V} cannot be opened.
			=[[D Pekka] [T/fin{v,V} P(lle)]]

8.

		Consume "D"

		[[D Pekka] [T/fin{v,V} P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [T/fin{v,V} P(lle){D}]]

9.

		Consume "Merja-"

		[[D Pekka] [T/fin{v,V} P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [T/fin{v,V} P(lle){D,N}]]

10.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [T/fin{v,V} P(lle){D,N}]]

11.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] [T/fin{v,V} P(lle){D,N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [P(lle) [D Merja-]]]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
				Avoid P(lle){D,N} because it could break words.
		Ranking completed:
			1. [[[D Pekka] [T/fin{v,V} P(lle){D,N}]]; D]
			2. [[T/fin{v,V} P(lle){D,N}]; D]
			3. [P(lle){D,N}; D]
		Exploring solution number (1) =[[[D Pekka] [T/fin{v,V} P(lle){D,N}]] D]
			Reconstructing head movement for [[D Pekka] [T/fin{v,V} P(lle){D,N}]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T/fin [v{V} P(lle){D,N}]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [T/fin [v [antaa P(lle){D,N}]]]]
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [T/fin [v [antaa [P(lle) D{N}]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [T/fin [v [antaa [P(lle) [D Merja-]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:50 [T/fin [<DP>:50 [v [antaa [P(lle) [D Merja-]]]]]]]
				= [<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]]
			Dropping A-/A-bar movement.
			=[[<D Pekka>:50 [T/fin [<DP>:50 [v [antaa [P(lle) [D Merja-]]]]]]] D]

12.

		Consume "kirja"

		[[<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[<D Pekka>:50 [T/fin [<DP>:50 [v [antaa [P(lle) [D Merja-]]]]]]] D{N}]

13.
	>>>	Trying candidate parse [[<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]] D{N}] (1.)
		Reconstructing...
			Reconstructing head movement for [[<D Pekka>:50 [T/fin [<DP>:50 [v [antaa [P(lle) [D Merja-]]]]]]] D{N}].
				Extracted head "kirja" from D and created [[<D Pekka>:50 [T/fin [<DP>:50 [v [antaa [P(lle) [D Merja-]]]]]]] [D kirja]]
			Dropping floaters...
				D failed to tail.
				<D kirja> was made an adjunct.
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [[<D Pekka>:50 [T/fin [<DP>:50 [v [<DP>:51 [antaa [P(lle) [D Merja-]]]]]]]] <D kirja>:51]
				= [[<D Pekka> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]] <D kirja>]
			Dropping A-/A-bar movement.
			= [[<D Pekka> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]] <D kirja>]
		Checking LF-interface conditions.
			Trying to transfer [[<D Pekka>:50 [T/fin [<DP>:50 [v [<DP>:51 [antaa [P(lle) [D Merja-]]]]]]]] <D kirja>:51] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 13/125 operations) <------------------------------------
		Solution:
		[[<D Pekka> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]] <D kirja>]
		Grammar: [[<D Pekka>:1 [T/fin [<DP>:1 [v [<DP>:2 [antaa [P(lle) [D Merja-]]]]]]]] <D kirja>:2]
		Spellout T/finP = [[DP:1 [T/fin [__:1 [v [__:2 [V [P [D N]]]]]]]] DP:2]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D]
kirja: [N, D]

			Checking if the sentence is ambiguous...


\========================================================================
# 20
['Pekka#foc', 'antoi', 'Merjalle', 'kirjan']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', 'ABAR:FOC'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

6.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] T/fin{v}]

7.

		Consume "antaa"

		[[D Pekka] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] T/fin{v,V}]

8.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] T/fin{v,V}] + P(lle)
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v antaa]]]] P(lle)] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} P(lle)]
			T/fin{v,V} cannot be opened.
			=[[D Pekka] [T/fin{v,V} P(lle)]]

9.

		Consume "D"

		[[D Pekka] [T/fin{v,V} P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [T/fin{v,V} P(lle){D}]]

10.

		Consume "Merja-"

		[[D Pekka] [T/fin{v,V} P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [T/fin{v,V} P(lle){D,N}]]

11.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [T/fin{v,V} P(lle){D,N}]]

12.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] [T/fin{v,V} P(lle){D,N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [P(lle) [D Merja-]]]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
				Avoid P(lle){D,N} because it could break words.
		Ranking completed:
			1. [[[D Pekka] [T/fin{v,V} P(lle){D,N}]]; D]
			2. [[T/fin{v,V} P(lle){D,N}]; D]
			3. [P(lle){D,N}; D]
		Exploring solution number (1) =[[[D Pekka] [T/fin{v,V} P(lle){D,N}]] D]
			Reconstructing head movement for [[D Pekka] [T/fin{v,V} P(lle){D,N}]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T/fin [v{V} P(lle){D,N}]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [T/fin [v [antaa P(lle){D,N}]]]]
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [T/fin [v [antaa [P(lle) D{N}]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [T/fin [v [antaa [P(lle) [D Merja-]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:55 [T/fin [<DP>:55 [v [antaa [P(lle) [D Merja-]]]]]]]
				= [<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'FIN', 'T/fin', 'FIN/T/fin'}
			=[[<D Pekka>:55 [T/fin [<DP>:55 [v [antaa [P(lle) [D Merja-]]]]]]] D]

13.

		Consume "kirja"

		[[<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[<D Pekka>:55 [T/fin [<DP>:55 [v [antaa [P(lle) [D Merja-]]]]]]] D{N}]

14.
	>>>	Trying candidate parse [[<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]] D{N}] (1.)
		Reconstructing...
			Reconstructing head movement for [[<D Pekka>:55 [T/fin [<DP>:55 [v [antaa [P(lle) [D Merja-]]]]]]] D{N}].
				Extracted head "kirja" from D and created [[<D Pekka>:55 [T/fin [<DP>:55 [v [antaa [P(lle) [D Merja-]]]]]]] [D kirja]]
			Dropping floaters...
				D failed to tail.
				<D kirja> was made an adjunct.
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [[<D Pekka>:55 [T/fin [<DP>:55 [v [<DP>:56 [antaa [P(lle) [D Merja-]]]]]]]] <D kirja>:56]
				= [[<D Pekka> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]] <D kirja>]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'T/fin', 'uFOC', 'iFOC', 'FIN/T/fin', 'FIN', 'FIN/FIN/T/fin/T/fin/iFOC/uFOC'}
			= [[<D Pekka> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]] <D kirja>]
		Checking LF-interface conditions.
			Trying to transfer [[<D Pekka>:55 [T/fin [<DP>:55 [v [<DP>:56 [antaa [P(lle) [D Merja-]]]]]]]] <D kirja>:56] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 14/133 operations) <------------------------------------
		Solution:
		[[<D Pekka> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]] <D kirja>]
		Grammar: [[<D Pekka>:1 [T/fin [<DP>:1 [v [<DP>:2 [antaa [P(lle) [D Merja-]]]]]]]] <D kirja>:2]
		Spellout T/finP = [[DP:1 [T/fin [__:1 [v [__:2 [V [P [D N]]]]]]]] DP:2]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/FIN/T/fin/T/fin/iFOC/uFOC/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/FIN/T/fin/T/fin/iFOC/uFOC/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D]
kirja: [N, D]

			Checking if the sentence is ambiguous...


\========================================================================
# 21
['Pekka', 'kirjan', 'antoi', 'Merjalle']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

5.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D Pekka] D]

6.

		Consume "kirja"

		[[D Pekka] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] D{N}]

7.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[D Pekka] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [kirja T/fin] due to complement selection.
		Ranking completed:
			1. [[[D Pekka] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[D Pekka] D{N}] T/fin]
			Reconstructing head movement for [[D Pekka] D{N}].
				Extracted head "kirja" from D and created [[D Pekka] [D kirja]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[D Pekka] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "D".
				Memory buffer: [[D N]]
				D (D) has a specifier [D Pekka] but is marked for -EPP behavior.
				Extraposition will be tried on [[D Pekka] [D kirja]].
				<D kirja> was made adjunct by an extraposition rule.
			=[[[D Pekka] <D kirja>] T/fin]

8.

		Consume "v"

		[[[D Pekka] <D kirja>] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[D Pekka] <D kirja>] T/fin{v}]

9.

		Consume "antaa"

		[[[D Pekka] <D kirja>] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[D Pekka] <D kirja>] T/fin{v,V}]

10.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[[D Pekka] <D kirja>] T/fin{v,V}] + P(lle)
			Filtering out impossible merge sites...
				Reject [[<[D Pekka] <D kirja>> [T/fin [<[D Pekka] <D kirja>> [v antaa]]]] P(lle)] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} P(lle)]
			T/fin{v,V} cannot be opened.
			=[[[D Pekka] <D kirja>] [T/fin{v,V} P(lle)]]

11.

		Consume "D"

		[[[D Pekka] <D kirja>] [T/fin{v,V} P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[[D Pekka] <D kirja>] [T/fin{v,V} P(lle){D}]]

12.

		Consume "Merja-"

		[[[D Pekka] <D kirja>] [T/fin{v,V} P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[[D Pekka] <D kirja>] [T/fin{v,V} P(lle){D,N}]]

13.
	>>>	Trying candidate parse [[[D Pekka] <D kirja>] [T/fin{v,V} P(lle){D,N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka] <D kirja>] [T/fin{v,V} P(lle){D,N}]].
				Extracted head "v{V}" and reconstructed it = [[[D Pekka] <D kirja>] [T/fin [v{V} P(lle){D,N}]]]
				Extracted head "antaa" and reconstructed it = [[[D Pekka] <D kirja>] [T/fin [v [antaa P(lle){D,N}]]]]
				Extracted head "D{N}" from P(lle) and created [[[D Pekka] <D kirja>] [T/fin [v [antaa [P(lle) D{N}]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[[D Pekka] <D kirja>] [T/fin [v [antaa [P(lle) [D Merja-]]]]]]
			Dropping floaters...
				[[D Pekka] <D kirja>] failed to tail [A/HEAD][CAT:FIN]
				<[D Pekka] <D kirja>> was made an adjunct.
				Floater <[D Pekka] <D kirja>> dropped: [<[D Pekka] <D kirja>>:58 [T/fin [<DP>:58 [v [antaa [P(lle) [D Merja-]]]]]]]
				= [<[D Pekka] <D kirja>> [T/fin [<[D Pekka] <D kirja>> [v [antaa [P(lle) [D Merja-]]]]]]]
			Dropping A-/A-bar movement.
				(D) failed internal tail test.
				Extraposition will be tried on [<[D Pekka] <D kirja>>:58 [T/fin [<DP>:58 [v [antaa [P(lle) [D Merja-]]]]]]].
			= [<[D Pekka] <D kirja>> [T/fin [<[D Pekka] <D kirja>> [v [antaa [P(lle) [D Merja-]]]]]]]
		Checking LF-interface conditions.
				(D) failed internal tail test.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
D: [D]
kirja: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] [[D kirja] T/fin]]

14.

		Consume "v"

		[[D Pekka] [[D kirja] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] [[D kirja] T/fin{v}]]

15.

		Consume "antaa"

		[[D Pekka] [[D kirja] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] [[D kirja] T/fin{v,V}]]

16.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [[D kirja] T/fin{v,V}]] + P(lle)
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [? [<D kirja> [T/fin [<D Pekka> [v [<D kirja> antaa]]]]]]] P(lle)] due to bad left branch.
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [<D kirja> [T/fin [v [<D kirja> antaa]]]] as left branch because it constitutes illicit structure.
				Prioritize [antaa P(lle)] due to complement selection.
		Ranking completed:
			1. [T/fin{v,V}; P(lle)]
			2. [[[D kirja] T/fin{v,V}]; P(lle)]
		Exploring solution number (1) =[T/fin{v,V} P(lle)]
			T/fin{v,V} cannot be opened.
			=[[D Pekka] [[D kirja] [T/fin{v,V} P(lle)]]]

17.

		Consume "D"

		[[D Pekka] [[D kirja] [T/fin{v,V} P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [[D kirja] [T/fin{v,V} P(lle){D}]]]

18.

		Consume "Merja-"

		[[D Pekka] [[D kirja] [T/fin{v,V} P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [[D kirja] [T/fin{v,V} P(lle){D,N}]]]

19.
	>>>	Trying candidate parse [[D Pekka] [[D kirja] [T/fin{v,V} P(lle){D,N}]]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[D kirja] [T/fin{v,V} P(lle){D,N}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [[D kirja] [T/fin [v{V} P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [[D kirja] [T/fin [v [antaa P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [[D kirja] [T/fin [v [antaa [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [[D kirja] [T/fin [v [antaa [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:63 [[D kirja] [T/fin [<DP>:63 [v [antaa [P(lle) [D Merja-]]]]]]]]
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D Pekka>:63 [<D kirja>:64 [T/fin [<DP>:63 [v [<DP>:64 [antaa [P(lle) [D Merja-]]]]]]]]]
				= [<D Pekka> [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<D Pekka>:63 [? [<D kirja>:64 [T/fin [<DP>:63 [v [<DP>:64 [antaa [P(lle) [D Merja-]]]]]]]]]].
			= [<D Pekka> [? [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
?: [?]
D: [D, ?]
kirja: [N, D, ?]
T/fin: [T/fin, ?]
(D): [D, T/fin, ?]
(N): [N, D, T/fin, ?]
v: [v, T/fin, ?]
(D): [D, v, T/fin, ?]
(N): [N, D, v, T/fin, ?]
antaa: [V, v, T/fin, ?]
P(lle): [P, V, v, T/fin, ?]
D: [D, P, V, v, T/fin, ?]
Merja-: [N, D, P, V, v, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D kirja] T/fin{v,V}] P(lle)]
			Reconstructing head movement for [[D kirja] T/fin{v,V}].
				Extracted head "v{V}" from T/fin and created [[D kirja] [T/fin v{V}]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[D kirja] [T/fin [v antaa]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D kirja>:65 [T/fin [v [<DP>:65 antaa]]]]
				= [<D kirja> [T/fin [v [<D kirja> antaa]]]]
			Dropping A-/A-bar movement.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [<D kirja>:65 [T/fin [v [<DP>:65 antaa]]]].
			=[[D Pekka] [[<D kirja>:65 [T/fin [v [<DP>:65 antaa]]]] P(lle)]]

20.

		Consume "D"

		[[D Pekka] [[<D kirja> [T/fin [v [<D kirja> antaa]]]] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [[<D kirja>:65 [T/fin [v [<DP>:65 antaa]]]] P(lle){D}]]

21.

		Consume "Merja-"

		[[D Pekka] [[<D kirja> [T/fin [v [<D kirja> antaa]]]] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [[<D kirja>:65 [T/fin [v [<DP>:65 antaa]]]] P(lle){D,N}]]

22.
	>>>	Trying candidate parse [[D Pekka] [[<D kirja> [T/fin [v [<D kirja> antaa]]]] P(lle){D,N}]] (3.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[<D kirja>:65 [T/fin [v [<DP>:65 antaa]]]] P(lle){D,N}]].
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [[<D kirja>:65 [T/fin [v [<DP>:65 antaa]]]] [P(lle) D{N}]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [[<D kirja>:65 [T/fin [v [<DP>:65 antaa]]]] [P(lle) [D Merja-]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				P(lle) failed to tail.
				<P(lle) [D Merja-]> was made an adjunct.
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [[D Pekka] [[<D kirja>:65 [T/fin [v [[<DP>:65 antaa] <PP>:66]]]] <P(lle) [D Merja-]>:66]]
				= [[D Pekka] [[<D kirja> [T/fin [v [[<D kirja> antaa] <P(lle) [D Merja-]>]]]] <P(lle) [D Merja-]>]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "T/fin".
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				Memory buffer: [[D N]]
				Dropping constituent [D Pekka]:67 from memory buffer into Spec of v
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [[D Pekka]:67 [[? [<D kirja>:65 [T/fin [(DP):67 [v [[<DP>:65 antaa] <PP>:66]]]]]] <P(lle) [D Merja-]>:66]].
			= [[D Pekka] [[? [<D kirja> [T/fin [[D Pekka] [v [[<D kirja> antaa] <P(lle) [D Merja-]>]]]]]] <P(lle) [D Merja-]>]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
?: [?]
D: [D, ?]
kirja: [N, D, ?]
T/fin: [T/fin, ?]
(D): [D, T/fin, ?]
(N): [N, D, T/fin, ?]
v: [v, T/fin, ?]
(D): [D, v, T/fin, ?]
(N): [N, D, v, T/fin, ?]
antaa: [V, v, T/fin, ?]
(P): [P, v, T/fin, ?]
(D): [D, P, v, T/fin, ?]
(N): [N, D, P, v, T/fin, ?]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 22
['Pekka#foc', 'kirjan', 'antoi', 'Merjalle']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', 'ABAR:FOC'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D Pekka] D]

7.

		Consume "kirja"

		[[D Pekka] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] D{N}]

8.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[D Pekka] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [kirja T/fin] due to complement selection.
		Ranking completed:
			1. [[[D Pekka] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[D Pekka] D{N}] T/fin]
			Reconstructing head movement for [[D Pekka] D{N}].
				Extracted head "kirja" from D and created [[D Pekka] [D kirja]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[D Pekka] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "D".
				Criterial features {'FOC'} copied to {'D'}
				Tail features [!COMP:*][CAT:v] were detected at D, this must head an adjunct floater.
				<D kirja> was made an adjunct.
				Memory buffer: [[D N]]
			=[[[D Pekka] <D kirja>] T/fin]

9.

		Consume "v"

		[[[D Pekka] <D kirja>] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[D Pekka] <D kirja>] T/fin{v}]

10.

		Consume "antaa"

		[[[D Pekka] <D kirja>] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[D Pekka] <D kirja>] T/fin{v,V}]

11.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[[D Pekka] <D kirja>] T/fin{v,V}] + P(lle)
			Filtering out impossible merge sites...
				Reject [[<[D Pekka] <D kirja>> [T/fin [<[D Pekka] <D kirja>> [v antaa]]]] P(lle)] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} P(lle)]
			T/fin{v,V} cannot be opened.
			=[[[D Pekka] <D kirja>] [T/fin{v,V} P(lle)]]

12.

		Consume "D"

		[[[D Pekka] <D kirja>] [T/fin{v,V} P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[[D Pekka] <D kirja>] [T/fin{v,V} P(lle){D}]]

13.

		Consume "Merja-"

		[[[D Pekka] <D kirja>] [T/fin{v,V} P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[[D Pekka] <D kirja>] [T/fin{v,V} P(lle){D,N}]]

14.
	>>>	Trying candidate parse [[[D Pekka] <D kirja>] [T/fin{v,V} P(lle){D,N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka] <D kirja>] [T/fin{v,V} P(lle){D,N}]].
				Extracted head "v{V}" and reconstructed it = [[[D Pekka] <D kirja>] [T/fin [v{V} P(lle){D,N}]]]
				Extracted head "antaa" and reconstructed it = [[[D Pekka] <D kirja>] [T/fin [v [antaa P(lle){D,N}]]]]
				Extracted head "D{N}" from P(lle) and created [[[D Pekka] <D kirja>] [T/fin [v [antaa [P(lle) D{N}]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[[D Pekka] <D kirja>] [T/fin [v [antaa [P(lle) [D Merja-]]]]]]
			Dropping floaters...
				[[D Pekka] <D kirja>] failed to tail [A/HEAD][CAT:FIN]
				<[D Pekka] <D kirja>> was made an adjunct.
				Floater <[D Pekka] <D kirja>> dropped: [<[D Pekka] <D kirja>>:69 [T/fin [<DP>:69 [v [antaa [P(lle) [D Merja-]]]]]]]
				= [<[D Pekka] <D kirja>> [T/fin [<[D Pekka] <D kirja>> [v [antaa [P(lle) [D Merja-]]]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'FIN', 'T/fin', 'FIN/T/fin'}
				(D) failed internal tail test.
				Extraposition will be tried on [<[D Pekka] <D kirja>>:69 [T/fin [<DP>:69 [v [antaa [P(lle) [D Merja-]]]]]]].
			= [<[D Pekka] <D kirja>> [T/fin [<[D Pekka] <D kirja>> [v [antaa [P(lle) [D Merja-]]]]]]]
		Checking LF-interface conditions.
				(D) failed internal tail test.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
D: [D]
kirja: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] [[D kirja] T/fin]]

15.

		Consume "v"

		[[D Pekka] [[D kirja] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] [[D kirja] T/fin{v}]]

16.

		Consume "antaa"

		[[D Pekka] [[D kirja] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] [[D kirja] T/fin{v,V}]]

17.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [[D kirja] T/fin{v,V}]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				Avoid T/finP as SPEC, P(lle).
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [<D kirja> [T/fin [v [<D kirja> antaa]]]] as left branch because it constitutes illicit structure.
				Prioritize [antaa P(lle)] due to complement selection.
		Ranking completed:
			1. [T/fin{v,V}; P(lle)]
			2. [[[D Pekka] [[D kirja] T/fin{v,V}]]; P(lle)]
			3. [[[D kirja] T/fin{v,V}]; P(lle)]
		Exploring solution number (1) =[T/fin{v,V} P(lle)]
			T/fin{v,V} cannot be opened.
			=[[D Pekka] [[D kirja] [T/fin{v,V} P(lle)]]]

18.

		Consume "D"

		[[D Pekka] [[D kirja] [T/fin{v,V} P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [[D kirja] [T/fin{v,V} P(lle){D}]]]

19.

		Consume "Merja-"

		[[D Pekka] [[D kirja] [T/fin{v,V} P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [[D kirja] [T/fin{v,V} P(lle){D,N}]]]

20.
	>>>	Trying candidate parse [[D Pekka] [[D kirja] [T/fin{v,V} P(lle){D,N}]]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[D kirja] [T/fin{v,V} P(lle){D,N}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [[D kirja] [T/fin [v{V} P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [[D kirja] [T/fin [v [antaa P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [[D kirja] [T/fin [v [antaa [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [[D kirja] [T/fin [v [antaa [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:76 [[D kirja] [T/fin [<DP>:76 [v [antaa [P(lle) [D Merja-]]]]]]]]
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D Pekka>:76 [<D kirja>:77 [T/fin [<DP>:76 [v [<DP>:77 [antaa [P(lle) [D Merja-]]]]]]]]]
				= [<D Pekka> [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]]
			Dropping A-/A-bar movement.
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
			= [<D Pekka> [uFOC [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:76 [uFOC [<D kirja>:77 [T/fin [<DP>:76 [v [<DP>:77 [antaa [P(lle) [D Merja-]]]]]]]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 20/212 operations) <------------------------------------
		Solution:
		[<D Pekka> [uFOC [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]]]
		Grammar: [<D Pekka>:1 [uFOC [<D kirja>:2 [T/fin [<DP>:1 [v [<DP>:2 [antaa [P(lle) [D Merja-]]]]]]]]]]
		Spellout P = [DP:1 [ [DP:2 [T/fin [__:1 [v [__:2 [V [P [D N]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
uFOC: []
D: [D, ]
kirja: [N, D, ]
T/fin: [T/fin, ]
(D): [D, T/fin, ]
(N): [N, D, T/fin, ]
v: [v, T/fin, ]
(D): [D, v, T/fin, ]
(N): [N, D, v, T/fin, ]
antaa: [V, v, T/fin, ]
P(lle): [P, V, v, T/fin, ]
D: [D, P, V, v, T/fin, ]
Merja-: [N, D, P, V, v, T/fin, ]

			Checking if the sentence is ambiguous...


\========================================================================
# 23
['Pekka', 'kirjan', 'Merjalle', 'antoi']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

5.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D Pekka] D]

6.

		Consume "kirja"

		[[D Pekka] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] D{N}]

7.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] D{N}] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [kirja P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
		Ranking completed:
			1. [[[D Pekka] D{N}]; P(lle)]
			2. [D{N}; P(lle)]
		Exploring solution number (1) =[[[D Pekka] D{N}] P(lle)]
			Reconstructing head movement for [[D Pekka] D{N}].
				Extracted head "kirja" from D and created [[D Pekka] [D kirja]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[D Pekka] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "D".
				Memory buffer: [[D N]]
				D (D) has a specifier [D Pekka] but is marked for -EPP behavior.
				Extraposition will be tried on [[D Pekka] [D kirja]].
				<D kirja> was made adjunct by an extraposition rule.
			=[[[D Pekka] <D kirja>] P(lle)]

8.

		Consume "D"

		[[[D Pekka] <D kirja>] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[[D Pekka] <D kirja>] P(lle){D}]

9.

		Consume "Merja-"

		[[[D Pekka] <D kirja>] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[[D Pekka] <D kirja>] P(lle){D,N}]

10.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[[D Pekka] <D kirja>] P(lle){D,N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[[D Pekka] <D kirja>] [P(lle) [D Merja-]]] T/fin] due to bad left branch.
		Exploring solution number (1) =[P(lle){D,N} T/fin]
			P(lle) was opened.
			=[[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin]]

11.

		Consume "v"

		[[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin{v}]]

12.

		Consume "antaa"

		[[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin{v,V}]]

13.
	>>>	Trying candidate parse [[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin{v,V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] [T/fin [v antaa]]]]
			Dropping floaters...
				[[D Pekka] <D kirja>] failed to tail [A/HEAD][CAT:FIN]
				<[D Pekka] <D kirja>> was made an adjunct.
				Floater <[D Pekka] <D kirja>> dropped: [<[D Pekka] <D kirja>>:78 [[P(lle) [D Merja-]] [T/fin [<DP>:78 [v antaa]]]]]
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<[D Pekka] <D kirja>>:78 [<P(lle) [D Merja-]>:79 [T/fin [<DP>:78 [v [antaa <PP>:79]]]]]]
				= [<[D Pekka] <D kirja>> [<P(lle) [D Merja-]> [T/fin [<[D Pekka] <D kirja>> [v [antaa <P(lle) [D Merja-]>]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				(D) failed internal tail test.
				v probing for CAT:D failed.
				Extraposition will be tried on [<[D Pekka] <D kirja>>:78 [? [<P(lle) [D Merja-]>:79 [T/fin [<DP>:78 [v [antaa <PP>:79]]]]]]].
			= [<[D Pekka] <D kirja>> [? [<P(lle) [D Merja-]> [T/fin [<[D Pekka] <D kirja>> [v [antaa <P(lle) [D Merja-]>]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				(D) failed internal tail test.
				v probing for CAT:D failed.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
D: [D]
kirja: [N, D]
?: [?]
P(lle): [P, ?]
D: [D, P, ?]
Merja-: [N, D, P, ?]
T/fin: [T/fin, ?]
(D): [D, T/fin, ?]
(N): [N, D, T/fin, ?]
(D): [D, T/fin, ?]
(N): [N, D, T/fin, ?]
v: [v, T/fin, ?]
antaa: [V, v, T/fin, ?]
(P): [P, V, v, T/fin, ?]
(D): [D, P, V, v, T/fin, ?]
(N): [N, D, P, V, v, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [[D kirja] P(lle)]]

14.

		Consume "D"

		[[D Pekka] [[D kirja] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [[D kirja] P(lle){D}]]

15.

		Consume "Merja-"

		[[D Pekka] [[D kirja] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [[D kirja] P(lle){D,N}]]

16.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[D Pekka] [[D kirja] P(lle){D,N}]] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [? [[D kirja] [P(lle) [D Merja-]]]]] T/fin] due to bad left branch.
				Reject [[[D kirja] [P(lle) [D Merja-]]] T/fin] due to bad left branch.
		Exploring solution number (1) =[P(lle){D,N} T/fin]
			P(lle) was opened.
			=[[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin]]]

17.

		Consume "v"

		[[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin{v}]]]

18.

		Consume "antaa"

		[[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin{v}]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin{v,V}]]]

19.
	>>>	Trying candidate parse [[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin{v,V}]]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin{v,V}]]].
				Extracted head "v{V}" from T/fin and created [[D Pekka] [[D kirja] [[P(lle) [D Merja-]] [T/fin v{V}]]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[D Pekka] [[D kirja] [[P(lle) [D Merja-]] [T/fin [v antaa]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:80 [[D kirja] [[P(lle) [D Merja-]] [T/fin [<DP>:80 [v antaa]]]]]]
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D Pekka>:80 [<D kirja>:81 [[P(lle) [D Merja-]] [T/fin [<DP>:80 [v [<DP>:81 antaa]]]]]]]
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<D Pekka>:80 [<D kirja>:81 [<P(lle) [D Merja-]>:82 [T/fin [<DP>:80 [v [[<DP>:81 antaa] <PP>:82]]]]]]]
				= [<D Pekka> [<D kirja> [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[<D kirja> antaa] <P(lle) [D Merja-]>]]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<D Pekka>:80 [? [<D kirja>:81 [? [<P(lle) [D Merja-]>:82 [T/fin [<DP>:80 [v [[<DP>:81 antaa] <PP>:82]]]]]]]]].
			= [<D Pekka> [? [<D kirja> [? [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[<D kirja> antaa] <P(lle) [D Merja-]>]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
?: [?]
D: [D, ?]
kirja: [N, D, ?]
?: [?, ?]
P(lle): [P, ?, ?]
D: [D, P, ?, ?]
Merja-: [N, D, P, ?, ?]
T/fin: [T/fin, ?, ?]
(D): [D, T/fin, ?, ?]
(N): [N, D, T/fin, ?, ?]
v: [v, T/fin, ?, ?]
(D): [D, v, T/fin, ?, ?]
(N): [N, D, v, T/fin, ?, ?]
antaa: [V, v, T/fin, ?, ?]
(P): [P, v, T/fin, ?, ?]
(D): [D, P, v, T/fin, ?, ?]
(N): [N, D, P, v, T/fin, ?, ?]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 24
['Pekka#foc', 'kirjan', 'Merjalle', 'antoi']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', 'ABAR:FOC'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D Pekka] D]

7.

		Consume "kirja"

		[[D Pekka] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] D{N}]

8.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] D{N}] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [kirja P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
		Ranking completed:
			1. [[[D Pekka] D{N}]; P(lle)]
			2. [D{N}; P(lle)]
		Exploring solution number (1) =[[[D Pekka] D{N}] P(lle)]
			Reconstructing head movement for [[D Pekka] D{N}].
				Extracted head "kirja" from D and created [[D Pekka] [D kirja]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[D Pekka] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "D".
				Criterial features {'FOC'} copied to {'D'}
				Tail features [!COMP:*][CAT:v] were detected at D, this must head an adjunct floater.
				<D kirja> was made an adjunct.
				Memory buffer: [[D N]]
			=[[[D Pekka] <D kirja>] P(lle)]

9.

		Consume "D"

		[[[D Pekka] <D kirja>] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[[D Pekka] <D kirja>] P(lle){D}]

10.

		Consume "Merja-"

		[[[D Pekka] <D kirja>] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[[D Pekka] <D kirja>] P(lle){D,N}]

11.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[[D Pekka] <D kirja>] P(lle){D,N}] + T/fin
			Filtering out impossible merge sites...
				Reject [<[[D Pekka] <D kirja>] [P(lle) [D Merja-]]> T/fin] due to bad left branch.
		Exploring solution number (1) =[P(lle){D,N} T/fin]
			P(lle) was opened.
			=[[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin]]

12.

		Consume "v"

		[[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin{v}]]

13.

		Consume "antaa"

		[[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin{v,V}]]

14.
	>>>	Trying candidate parse [[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin{v,V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[[D Pekka] <D kirja>] [[P(lle) [D Merja-]] [T/fin [v antaa]]]]
			Dropping floaters...
				[[D Pekka] <D kirja>] failed to tail [A/HEAD][CAT:FIN]
				<[D Pekka] <D kirja>> was made an adjunct.
				Floater <[D Pekka] <D kirja>> dropped: [<[D Pekka] <D kirja>>:83 [[P(lle) [D Merja-]] [T/fin [<DP>:83 [v antaa]]]]]
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<[D Pekka] <D kirja>>:83 [<P(lle) [D Merja-]>:84 [T/fin [<DP>:83 [v [antaa <PP>:84]]]]]]
				= [<[D Pekka] <D kirja>> [<P(lle) [D Merja-]> [T/fin [<[D Pekka] <D kirja>> [v [antaa <P(lle) [D Merja-]>]]]]]]
			Dropping A-/A-bar movement.
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
				(D) failed internal tail test.
				v probing for CAT:D failed.
				Extraposition will be tried on [<[D Pekka] <D kirja>>:83 [uFOC [<P(lle) [D Merja-]>:84 [T/fin [<DP>:83 [v [antaa <PP>:84]]]]]]].
			= [<[D Pekka] <D kirja>> [uFOC [<P(lle) [D Merja-]> [T/fin [<[D Pekka] <D kirja>> [v [antaa <P(lle) [D Merja-]>]]]]]]]
		Checking LF-interface conditions.
				(D) failed internal tail test.
				v probing for CAT:D failed.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
D: [D]
kirja: [N, D]
uFOC: []
P(lle): [P, ]
D: [D, P, ]
Merja-: [N, D, P, ]
T/fin: [T/fin, ]
(D): [D, T/fin, ]
(N): [N, D, T/fin, ]
(D): [D, T/fin, ]
(N): [N, D, T/fin, ]
v: [v, T/fin, ]
antaa: [V, v, T/fin, ]
(P): [P, V, v, T/fin, ]
(D): [D, P, V, v, T/fin, ]
(N): [N, D, P, V, v, T/fin, ]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [[D kirja] P(lle)]]

15.

		Consume "D"

		[[D Pekka] [[D kirja] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [[D kirja] P(lle){D}]]

16.

		Consume "Merja-"

		[[D Pekka] [[D kirja] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [[D kirja] P(lle){D,N}]]

17.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[D Pekka] [[D kirja] P(lle){D,N}]] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [uFOC [[D kirja] [P(lle) [D Merja-]]]]] T/fin] due to bad left branch.
				Reject [[[D kirja] [P(lle) [D Merja-]]] T/fin] due to bad left branch.
		Exploring solution number (1) =[P(lle){D,N} T/fin]
			P(lle) was opened.
			=[[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin]]]

18.

		Consume "v"

		[[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin{v}]]]

19.

		Consume "antaa"

		[[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin{v}]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin{v,V}]]]

20.
	>>>	Trying candidate parse [[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin{v,V}]]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[D kirja] [[P(lle) [D Merja-]] T/fin{v,V}]]].
				Extracted head "v{V}" from T/fin and created [[D Pekka] [[D kirja] [[P(lle) [D Merja-]] [T/fin v{V}]]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[D Pekka] [[D kirja] [[P(lle) [D Merja-]] [T/fin [v antaa]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:85 [[D kirja] [[P(lle) [D Merja-]] [T/fin [<DP>:85 [v antaa]]]]]]
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D Pekka>:85 [<D kirja>:86 [[P(lle) [D Merja-]] [T/fin [<DP>:85 [v [<DP>:86 antaa]]]]]]]
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<D Pekka>:85 [<D kirja>:86 [<P(lle) [D Merja-]>:87 [T/fin [<DP>:85 [v [[<DP>:86 antaa] <PP>:87]]]]]]]
				= [<D Pekka> [<D kirja> [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[<D kirja> antaa] <P(lle) [D Merja-]>]]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<D Pekka>:85 [uFOC [<D kirja>:86 [? [<P(lle) [D Merja-]>:87 [T/fin [<DP>:85 [v [[<DP>:86 antaa] <PP>:87]]]]]]]]].
			= [<D Pekka> [uFOC [<D kirja> [? [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[<D kirja> antaa] <P(lle) [D Merja-]>]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
uFOC: []
D: [D, ]
kirja: [N, D, ]
?: [?, ]
P(lle): [P, ?, ]
D: [D, P, ?, ]
Merja-: [N, D, P, ?, ]
T/fin: [T/fin, ?, ]
(D): [D, T/fin, ?, ]
(N): [N, D, T/fin, ?, ]
v: [v, T/fin, ?, ]
(D): [D, v, T/fin, ?, ]
(N): [N, D, v, T/fin, ?, ]
antaa: [V, v, T/fin, ?, ]
(P): [P, v, T/fin, ?, ]
(D): [D, P, v, T/fin, ?, ]
(N): [N, D, P, v, T/fin, ?, ]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka#foc".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 25
['Pekka', 'Merjalle', 'antoi', 'kirjan']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		D{N} + P(lle)
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] P(lle)]

5.

		Consume "D"

		[[D Pekka] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] P(lle){D}]

6.

		Consume "Merja-"

		[[D Pekka] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] P(lle){D,N}]

7.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[D Pekka] P(lle){D,N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [P(lle) [D Merja-]]] T/fin] due to bad left branch.
		Exploring solution number (1) =[P(lle){D,N} T/fin]
			P(lle) was opened.
			=[[D Pekka] [[P(lle) [D Merja-]] T/fin]]

8.

		Consume "v"

		[[D Pekka] [[P(lle) [D Merja-]] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] [[P(lle) [D Merja-]] T/fin{v}]]

9.

		Consume "antaa"

		[[D Pekka] [[P(lle) [D Merja-]] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] [[P(lle) [D Merja-]] T/fin{v,V}]]

10.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [[P(lle) [D Merja-]] T/fin{v,V}]]

11.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] [[P(lle) [D Merja-]] T/fin{v,V}]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [? [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [antaa <P(lle) [D Merja-]>]]]]]]] D] due to bad left branch.
				Reject [[<P(lle) [D Merja-]> [T/fin [v [antaa <P(lle) [D Merja-]>]]]] D] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[D Pekka] [[P(lle) [D Merja-]] [T/fin{v,V} D]]]

12.

		Consume "kirja"

		[[D Pekka] [[P(lle) [D Merja-]] [T/fin{v,V} D]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]]

13.
	>>>	Trying candidate parse [[D Pekka] [[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [[P(lle) [D Merja-]] [T/fin [v{V} D{N}]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [[P(lle) [D Merja-]] [T/fin [v [antaa D{N}]]]]]
				Extracted head "kirja" from D and created [[D Pekka] [[P(lle) [D Merja-]] [T/fin [v [antaa [D kirja]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:91 [[P(lle) [D Merja-]] [T/fin [<DP>:91 [v [antaa [D kirja]]]]]]]
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<D Pekka>:91 [<P(lle) [D Merja-]>:92 [T/fin [<DP>:91 [v [[antaa [D kirja]] <PP>:92]]]]]]
				= [<D Pekka> [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<D Pekka>:91 [? [<P(lle) [D Merja-]>:92 [T/fin [<DP>:91 [v [[antaa [D kirja]] <PP>:92]]]]]]].
			= [<D Pekka> [? [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
?: [?]
P(lle): [P, ?]
D: [D, P, ?]
Merja-: [N, D, P, ?]
T/fin: [T/fin, ?]
(D): [D, T/fin, ?]
(N): [N, D, T/fin, ?]
v: [v, T/fin, ?]
antaa: [V, v, T/fin, ?]
D: [D, V, v, T/fin, ?]
kirja: [N, D, V, v, T/fin, ?]
(P): [P, v, T/fin, ?]
(D): [D, P, v, T/fin, ?]
(N): [N, D, P, v, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 26
['Pekka#foc', 'Merjalle', 'antoi', 'kirjan']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', 'ABAR:FOC'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		D{N} + P(lle)
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] P(lle)]

6.

		Consume "D"

		[[D Pekka] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] P(lle){D}]

7.

		Consume "Merja-"

		[[D Pekka] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] P(lle){D,N}]

8.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[D Pekka] P(lle){D,N}] + T/fin
			Filtering out impossible merge sites...
				Reject [<[D Pekka] [P(lle) [D Merja-]]> T/fin] due to bad left branch.
		Exploring solution number (1) =[P(lle){D,N} T/fin]
			P(lle) was opened.
			=[[D Pekka] [[P(lle) [D Merja-]] T/fin]]

9.

		Consume "v"

		[[D Pekka] [[P(lle) [D Merja-]] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] [[P(lle) [D Merja-]] T/fin{v}]]

10.

		Consume "antaa"

		[[D Pekka] [[P(lle) [D Merja-]] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] [[P(lle) [D Merja-]] T/fin{v,V}]]

11.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [[P(lle) [D Merja-]] T/fin{v,V}]]

12.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] [[P(lle) [D Merja-]] T/fin{v,V}]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [uFOC [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [antaa <P(lle) [D Merja-]>]]]]]]] D] due to bad left branch.
				Reject [[<P(lle) [D Merja-]> [T/fin [v [antaa <P(lle) [D Merja-]>]]]] D] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[D Pekka] [[P(lle) [D Merja-]] [T/fin{v,V} D]]]

13.

		Consume "kirja"

		[[D Pekka] [[P(lle) [D Merja-]] [T/fin{v,V} D]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]]

14.
	>>>	Trying candidate parse [[D Pekka] [[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [[P(lle) [D Merja-]] [T/fin [v{V} D{N}]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [[P(lle) [D Merja-]] [T/fin [v [antaa D{N}]]]]]
				Extracted head "kirja" from D and created [[D Pekka] [[P(lle) [D Merja-]] [T/fin [v [antaa [D kirja]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:96 [[P(lle) [D Merja-]] [T/fin [<DP>:96 [v [antaa [D kirja]]]]]]]
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<D Pekka>:96 [<P(lle) [D Merja-]>:97 [T/fin [<DP>:96 [v [[antaa [D kirja]] <PP>:97]]]]]]
				= [<D Pekka> [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]]]]]
			Dropping A-/A-bar movement.
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
			= [<D Pekka> [uFOC [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:96 [uFOC [<P(lle) [D Merja-]>:97 [T/fin [<DP>:96 [v [[antaa [D kirja]] <PP>:97]]]]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 14/112 operations) <------------------------------------
		Solution:
		[<D Pekka> [uFOC [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]]]]]]
		Grammar: [<D Pekka>:1 [uFOC [<P(lle) [D Merja-]>:2 [T/fin [<DP>:1 [v [[antaa [D kirja]] <PP>:2]]]]]]]
		Spellout P = [DP:1 [ [PP:2 [T/fin [__:1 [v [[V [D N]] __:2]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
uFOC: []
P(lle): [P, ]
D: [D, P, ]
Merja-: [N, D, P, ]
T/fin: [T/fin, ]
(D): [D, T/fin, ]
(N): [N, D, T/fin, ]
v: [v, T/fin, ]
antaa: [V, v, T/fin, ]
D: [D, V, v, T/fin, ]
kirja: [N, D, V, v, T/fin, ]
(P): [P, v, T/fin, ]
(D): [D, P, v, T/fin, ]
(N): [N, D, P, v, T/fin, ]

			Checking if the sentence is ambiguous...


\========================================================================
# 27
['Pekka', 'Merjalle', 'kirjan', 'antoi']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		D{N} + P(lle)
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] P(lle)]

5.

		Consume "D"

		[[D Pekka] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] P(lle){D}]

6.

		Consume "Merja-"

		[[D Pekka] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] P(lle){D,N}]

7.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] P(lle){D,N}]

8.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] P(lle){D,N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid PP as SPEC for D due to unselective SPEC feature.
				[D Pekka]" has no thematic role
				Avoid [[D Pekka] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
		Ranking completed:
			1. [P(lle){D,N}; D]
			2. [[[D Pekka] P(lle){D,N}]; D]
		Exploring solution number (1) =[P(lle){D,N} D]
			P(lle) was opened.
			=[[D Pekka] [[P(lle) [D Merja-]] D]]

9.

		Consume "kirja"

		[[D Pekka] [[P(lle) [D Merja-]] D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [[P(lle) [D Merja-]] D{N}]]

10.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[D Pekka] [[P(lle) [D Merja-]] D{N}]] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [? [[P(lle) [D Merja-]] [D kirja]]]] T/fin] due to bad left branch.
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [kirja T/fin] due to complement selection.
		Ranking completed:
			1. [[[P(lle) [D Merja-]] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[P(lle) [D Merja-]] D{N}] T/fin]
			Reconstructing head movement for [[P(lle) [D Merja-]] D{N}].
				Extracted head "kirja" from D and created [[P(lle) [D Merja-]] [D kirja]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				= [[P(lle) [D Merja-]] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[P [D N]]]
				D (D) has a specifier [P(lle) [D Merja-]] but is marked for -EPP behavior.
				Extraposition will be tried on [[P(lle) [D Merja-]] [D kirja]].
				<D kirja> was made adjunct by an extraposition rule.
			=[[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin]]

11.

		Consume "v"

		[[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin{v}]]

12.

		Consume "antaa"

		[[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin{v,V}]]

13.
	>>>	Trying candidate parse [[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin{v,V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] [T/fin [v antaa]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:98 [[[P(lle) [D Merja-]] <D kirja>] [T/fin [<DP>:98 [v antaa]]]]]
				[[P(lle) [D Merja-]] <D kirja>] failed to tail [CAT:V]
				= [<D Pekka> [[[P(lle) [D Merja-]] <D kirja>] [T/fin [<D Pekka> [v antaa]]]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- D kirja " into memory buffer from SPEC of "T/fin".
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				Memory buffer: [[[P [D N]] [D N]]]
				Dropping [[P [D N]] [D N]](=P(lle) D Merja- D kirja ) from memory buffer into Comp of {'V'}.
				Result [<D Pekka>:98 [? [[[P(lle) [D Merja-]] <D kirja>]:99 [T/fin [<DP>:98 [v [antaa (PP):99]]]]]]]
				Remaining items in memory buffer: []
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<D Pekka>:98 [? [[[P(lle) [D Merja-]] <D kirja>]:99 [T/fin [<DP>:98 [v [antaa (PP):99]]]]]]].
			= [<D Pekka> [? [[[P(lle) [D Merja-]] <D kirja>] [T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] <D kirja>]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
?: [?]
P(lle): [P, ?]
D: [D, P, ?]
Merja-: [N, D, P, ?]
D: [D, ?]
kirja: [N, D, ?]
T/fin: [T/fin, ?]
(D): [D, T/fin, ?]
(N): [N, D, T/fin, ?]
v: [v, T/fin, ?]
antaa: [V, v, T/fin, ?]
(P): [P, V, v, T/fin, ?]
(D): [D, P, V, v, T/fin, ?]
(N): [N, D, P, V, v, T/fin, ?]
(D): [D, V, v, T/fin, ?]
(N): [N, D, V, v, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] [[P(lle) [D Merja-]] [[D kirja] T/fin]]]

14.

		Consume "v"

		[[D Pekka] [[P(lle) [D Merja-]] [[D kirja] T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] [[P(lle) [D Merja-]] [[D kirja] T/fin{v}]]]

15.

		Consume "antaa"

		[[D Pekka] [[P(lle) [D Merja-]] [[D kirja] T/fin{v}]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] [[P(lle) [D Merja-]] [[D kirja] T/fin{v,V}]]]

16.
	>>>	Trying candidate parse [[D Pekka] [[P(lle) [D Merja-]] [[D kirja] T/fin{v,V}]]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[P(lle) [D Merja-]] [[D kirja] T/fin{v,V}]]].
				Extracted head "v{V}" from T/fin and created [[D Pekka] [[P(lle) [D Merja-]] [[D kirja] [T/fin v{V}]]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[D Pekka] [[P(lle) [D Merja-]] [[D kirja] [T/fin [v antaa]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:101 [[P(lle) [D Merja-]] [[D kirja] [T/fin [<DP>:101 [v antaa]]]]]]
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<D Pekka>:101 [<P(lle) [D Merja-]>:102 [[D kirja] [T/fin [<DP>:101 [v [antaa <PP>:102]]]]]]]
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D Pekka>:101 [<P(lle) [D Merja-]>:102 [<D kirja>:103 [T/fin [<DP>:101 [v [<DP>:103 [antaa <PP>:102]]]]]]]]
				= [<D Pekka> [<P(lle) [D Merja-]> [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa <P(lle) [D Merja-]>]]]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<D Pekka>:101 [? [<P(lle) [D Merja-]>:102 [? [<D kirja>:103 [T/fin [<DP>:101 [v [<DP>:103 [antaa <PP>:102]]]]]]]]]].
			= [<D Pekka> [? [<P(lle) [D Merja-]> [? [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa <P(lle) [D Merja-]>]]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
?: [?]
P(lle): [P, ?]
D: [D, P, ?]
Merja-: [N, D, P, ?]
?: [?, ?]
D: [D, ?, ?]
kirja: [N, D, ?, ?]
T/fin: [T/fin, ?, ?]
(D): [D, T/fin, ?, ?]
(N): [N, D, T/fin, ?, ?]
v: [v, T/fin, ?, ?]
(D): [D, v, T/fin, ?, ?]
(N): [N, D, v, T/fin, ?, ?]
antaa: [V, v, T/fin, ?, ?]
(P): [P, V, v, T/fin, ?, ?]
(D): [D, P, V, v, T/fin, ?, ?]
(N): [N, D, P, V, v, T/fin, ?, ?]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D Pekka] P(lle){D,N}] D]
			Reconstructing head movement for [[D Pekka] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [P(lle) [D Merja-]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[D Pekka] [P(lle) [D Merja-]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D Pekka]" has no thematic role
			=[[[D Pekka] [P(lle) [D Merja-]]] D]

17.

		Consume "kirja"

		[[[D Pekka] [P(lle) [D Merja-]]] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[[D Pekka] [P(lle) [D Merja-]]] D{N}]

18.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[[D Pekka] [P(lle) [D Merja-]]] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[[D Pekka] [P(lle) [D Merja-]]] <D kirja>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] T/fin]]

19.

		Consume "v"

		[[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] T/fin{v}]]

20.

		Consume "antaa"

		[[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] T/fin{v,V}]]

21.
	>>>	Trying candidate parse [[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] T/fin{v,V}]] (3.)
		Reconstructing...
			Reconstructing head movement for [[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[[D Pekka] [P(lle) [D Merja-]]] [[D kirja] [T/fin [v antaa]]]]
			Dropping floaters...
				[[D Pekka] [P(lle) [D Merja-]]] failed to tail [CAT:V]
				<[D Pekka] [P(lle) [D Merja-]]> was made an adjunct.
				Floater <[D Pekka] [P(lle) [D Merja-]]> dropped: [<[D Pekka] [P(lle) [D Merja-]]>:104 [[D kirja] [T/fin [v [antaa <PP>:104]]]]]
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<[D Pekka] [P(lle) [D Merja-]]>:104 [<D kirja>:105 [T/fin [v [<DP>:105 [antaa <PP>:104]]]]]]
				= [<[D Pekka] [P(lle) [D Merja-]]> [<D kirja> [T/fin [v [<D kirja> [antaa <[D Pekka] [P(lle) [D Merja-]]>]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				(DP)" has no thematic role
				Extraposition will be tried on [<[D Pekka] [P(lle) [D Merja-]]>:104 [? [<D kirja>:105 [T/fin [v [<DP>:105 [antaa <PP>:104]]]]]]].
			= [<[D Pekka] [P(lle) [D Merja-]]> [? [<D kirja> [T/fin [v [<D kirja> [antaa <[D Pekka] [P(lle) [D Merja-]]>]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				(DP)" has no thematic role
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
?: [?]
D: [D, ?]
kirja: [N, D, ?]
T/fin: [T/fin, ?]
v: [v, T/fin, ?]
(D): [D, v, T/fin, ?]
(N): [N, D, v, T/fin, ?]
antaa: [V, v, T/fin, ?]
(D): [D, V, v, T/fin, ?]
(N): [N, D, V, v, T/fin, ?]
(P): [P, V, v, T/fin, ?]
(D): [D, P, V, v, T/fin, ?]
(N): [N, D, P, V, v, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 28
['Pekka#foc', 'Merjalle', 'kirjan', 'antoi']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Pekka']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Pekka"

			=None

2.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI', 'ABAR:FOC'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

4.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

5.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		D{N} + P(lle)
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] P(lle)]

6.

		Consume "D"

		[[D Pekka] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] P(lle){D}]

7.

		Consume "Merja-"

		[[D Pekka] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] P(lle){D,N}]

8.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] P(lle){D,N}]

9.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] P(lle){D,N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid PP as SPEC for D due to unselective SPEC feature.
				[D Pekka]" has no thematic role
				Avoid <[D Pekka] [P(lle) [D Merja-]]> as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
		Ranking completed:
			1. [P(lle){D,N}; D]
			2. [[[D Pekka] P(lle){D,N}]; D]
		Exploring solution number (1) =[P(lle){D,N} D]
			P(lle) was opened.
			=[[D Pekka] [[P(lle) [D Merja-]] D]]

10.

		Consume "kirja"

		[[D Pekka] [[P(lle) [D Merja-]] D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [[P(lle) [D Merja-]] D{N}]]

11.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[D Pekka] [[P(lle) [D Merja-]] D{N}]] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D Pekka] [uFOC [[P(lle) [D Merja-]] [D kirja]]]] T/fin] due to bad left branch.
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [kirja T/fin] due to complement selection.
		Ranking completed:
			1. [[[P(lle) [D Merja-]] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[P(lle) [D Merja-]] D{N}] T/fin]
			Reconstructing head movement for [[P(lle) [D Merja-]] D{N}].
				Extracted head "kirja" from D and created [[P(lle) [D Merja-]] [D kirja]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				= [[P(lle) [D Merja-]] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[P [D N]]]
				D (D) has a specifier [P(lle) [D Merja-]] but is marked for -EPP behavior.
				Extraposition will be tried on [[P(lle) [D Merja-]] [D kirja]].
				<D kirja> was made adjunct by an extraposition rule.
			=[[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin]]

12.

		Consume "v"

		[[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin{v}]]

13.

		Consume "antaa"

		[[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin{v,V}]]

14.
	>>>	Trying candidate parse [[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin{v,V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[D Pekka] [[[P(lle) [D Merja-]] <D kirja>] [T/fin [v antaa]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:106 [[[P(lle) [D Merja-]] <D kirja>] [T/fin [<DP>:106 [v antaa]]]]]
				[[P(lle) [D Merja-]] <D kirja>] failed to tail [CAT:V]
				= [<D Pekka> [[[P(lle) [D Merja-]] <D kirja>] [T/fin [<D Pekka> [v antaa]]]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- D kirja " into memory buffer from SPEC of "T/fin".
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
				Memory buffer: [[[P [D N]] [D N]]]
				Dropping [[P [D N]] [D N]](=P(lle) D Merja- D kirja ) from memory buffer into Comp of {'V'}.
				Result [<D Pekka>:106 [uFOC [[[P(lle) [D Merja-]] <D kirja>]:107 [T/fin [<DP>:106 [v [antaa (PP):107]]]]]]]
				Remaining items in memory buffer: []
			= [<D Pekka> [uFOC [[[P(lle) [D Merja-]] <D kirja>] [T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] <D kirja>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:106 [uFOC [[[P(lle) [D Merja-]] <D kirja>]:107 [T/fin [<DP>:106 [v [antaa (PP):107]]]]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 14/140 operations) <------------------------------------
		Solution:
		[<D Pekka> [uFOC [[[P(lle) [D Merja-]] <D kirja>] [T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] <D kirja>]]]]]]]]
		Grammar: [<D Pekka>:1 [uFOC [[[P(lle) [D Merja-]] <D kirja>]:2 [T/fin [<DP>:1 [v [antaa (PP):2]]]]]]]
		Spellout P = [DP:1 [ [PP:2 [T/fin [__:1 [v [V __:2]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']

D: [D]
Pekka: [N, D]
uFOC: []
P(lle): [P, ]
D: [D, P, ]
Merja-: [N, D, P, ]
D: [D, ]
kirja: [N, D, ]
T/fin: [T/fin, ]
(D): [D, T/fin, ]
(N): [N, D, T/fin, ]
v: [v, T/fin, ]
antaa: [V, v, T/fin, ]
(P): [P, V, v, T/fin, ]
(D): [D, P, V, v, T/fin, ]
(N): [N, D, P, V, v, T/fin, ]
(D): [D, V, v, T/fin, ]
(N): [N, D, V, v, T/fin, ]

			Checking if the sentence is ambiguous...


\========================================================================
# 29
['antoi', 'Pekka', 'kirjan', 'Merjalle']


			=None

1.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']
			=T/fin

2.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

3.

		Consume "antaa"

		T/fin{v} + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=T/fin{v,V}

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=T/fin{v,V}

5.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[T/fin{v,V} D]

6.

		Consume "Pekka"

		[T/fin{v,V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T/fin{v,V} D{N}]

7.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[T/fin{v,V} D{N}]

8.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[T/fin{v,V} D{N}] + D
			Filtering out impossible merge sites...
				Reject [[T/fin [<D Pekka> [v [antaa <D Pekka>]]]] D] due to bad left branch.
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[T/fin{v,V} [[D Pekka] D]]

9.

		Consume "kirja"

		[T/fin{v,V} [[D Pekka] D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[T/fin{v,V} [[D Pekka] D{N}]]

10.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[T/fin{v,V} [[D Pekka] D{N}]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				An EPP-head "T/fin" lacks specifier but needs one.
				Avoid [T/fin [<D Pekka> [v [antaa [<D Pekka> <D kirja>]]]]] as left branch because it constitutes illicit structure.
				Avoid [[[D Pekka] D{N}], P(lle)] because the operation breaks up an existing selectional dependency.
				Avoid [kirja P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Prioritize [[D Pekka] D{N}] because all solutions were negative.
		Ranking completed:
			1. [[[D Pekka] D{N}]; P(lle)]
			2. [D{N}; P(lle)]
			3. [[T/fin{v,V} [[D Pekka] D{N}]]; P(lle)]
		Exploring solution number (1) =[[[D Pekka] D{N}] P(lle)]
			Reconstructing head movement for [[D Pekka] D{N}].
				Extracted head "kirja" from D and created [[D Pekka] [D kirja]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[D Pekka] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "D".
				Memory buffer: [[D N]]
				D (D) has a specifier [D Pekka] but is marked for -EPP behavior.
				Extraposition will be tried on [[D Pekka] [D kirja]].
				<D kirja> was made adjunct by an extraposition rule.
			=[T/fin{v,V} [[[D Pekka] <D kirja>] P(lle)]]

11.

		Consume "D"

		[T/fin{v,V} [[[D Pekka] <D kirja>] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[T/fin{v,V} [[[D Pekka] <D kirja>] P(lle){D}]]

12.

		Consume "Merja-"

		[T/fin{v,V} [[[D Pekka] <D kirja>] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[T/fin{v,V} [[[D Pekka] <D kirja>] P(lle){D,N}]]

13.
	>>>	Trying candidate parse [T/fin{v,V} [[[D Pekka] <D kirja>] P(lle){D,N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [T/fin{v,V} [[[D Pekka] <D kirja>] P(lle){D,N}]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[[D Pekka] <D kirja>] P(lle){D,N}]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[[D Pekka] <D kirja>] P(lle){D,N}]]]]
				Extracted head "D{N}" from P(lle) and created [T/fin [v [antaa [[[D Pekka] <D kirja>] [P(lle) D{N}]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [T/fin [v [antaa [[[D Pekka] <D kirja>] [P(lle) [D Merja-]]]]]]
			Dropping floaters...
				[[D Pekka] <D kirja>] failed to tail [A/HEAD][CAT:FIN]
				<[D Pekka] <D kirja>> was made an adjunct.
				Floater <[D Pekka] <D kirja>> dropped: [T/fin [<DP>:112 [v [antaa [<[D Pekka] <D kirja>>:112 [P(lle) [D Merja-]]]]]]]
				= [T/fin [<[D Pekka] <D kirja>> [v [antaa [<[D Pekka] <D kirja>> [P(lle) [D Merja-]]]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				(D) failed internal tail test.
				Extraposition will be tried on [T/fin [<DP>:112 [v [antaa [<[D Pekka] <D kirja>>:112 [P(lle) [D Merja-]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				(D) failed internal tail test.
			= [T/fin [<[D Pekka] <D kirja>> [v [antaa [<[D Pekka] <D kirja>> <P(lle) [D Merja-]>]]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				(D) failed internal tail test.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} P(lle)]
			D was opened.
			=[T/fin{v,V} [[D Pekka] [[D kirja] P(lle)]]]

14.

		Consume "D"

		[T/fin{v,V} [[D Pekka] [[D kirja] P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[T/fin{v,V} [[D Pekka] [[D kirja] P(lle){D}]]]

15.

		Consume "Merja-"

		[T/fin{v,V} [[D Pekka] [[D kirja] P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[T/fin{v,V} [[D Pekka] [[D kirja] P(lle){D,N}]]]

16.
	>>>	Trying candidate parse [T/fin{v,V} [[D Pekka] [[D kirja] P(lle){D,N}]]] (2.)
		Reconstructing...
			Reconstructing head movement for [T/fin{v,V} [[D Pekka] [[D kirja] P(lle){D,N}]]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[D Pekka] [[D kirja] P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[D Pekka] [[D kirja] P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [T/fin [v [antaa [[D Pekka] [[D kirja] [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [T/fin [v [antaa [[D Pekka] [[D kirja] [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:113 [v [antaa [<D Pekka>:113 [[D kirja] [P(lle) [D Merja-]]]]]]]]
				= [T/fin [<D Pekka> [v [antaa [<D Pekka> [[D kirja] [P(lle) [D Merja-]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				New head was spawned due to multiple specifiers at P(lle) but its category is unknown!
				Memory buffer: [[D N]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
				[D kirja]" has no thematic role
				Extraposition will be tried on [T/fin [<DP>:113 [v [antaa [<D Pekka>:113 [? [[D kirja] [P(lle) [D Merja-]]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
			= [T/fin [<D Pekka> [v [antaa [<D Pekka> [? [[D kirja] <P(lle) [D Merja-]>]]]]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
?: [?, V, v, T/fin]
D: [D, ?, V, v, T/fin]
kirja: [N, D, ?, V, v, T/fin]
P(lle): [P, ?, V, v, T/fin]
D: [D, P, ?, V, v, T/fin]
Merja-: [N, D, P, ?, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[T/fin{v,V} [[D Pekka] D{N}]] P(lle)]
			Reconstructing head movement for [T/fin{v,V} [[D Pekka] D{N}]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[D Pekka] D{N}]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[D Pekka] D{N}]]]]
				Extracted head "kirja" from D and created [T/fin [v [antaa [[D Pekka] [D kirja]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:114 [v [antaa [<D Pekka>:114 [D kirja]]]]]]
				= [T/fin [<D Pekka> [v [antaa [<D Pekka> [D kirja]]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [T/fin [<DP>:114 [v [antaa [<D Pekka>:114 [D kirja]]]]]].
				<D kirja> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
			=[[T/fin [<DP>:114 [v [antaa [<D Pekka>:114 <D kirja>]]]]] P(lle)]

17.

		Consume "D"

		[[T/fin [<D Pekka> [v [antaa [<D Pekka> <D kirja>]]]]] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[T/fin [<DP>:114 [v [antaa [<D Pekka>:114 <D kirja>]]]]] P(lle){D}]

18.

		Consume "Merja-"

		[[T/fin [<D Pekka> [v [antaa [<D Pekka> <D kirja>]]]]] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[T/fin [<DP>:114 [v [antaa [<D Pekka>:114 <D kirja>]]]]] P(lle){D,N}]

19.
	>>>	Trying candidate parse [[T/fin [<D Pekka> [v [antaa [<D Pekka> <D kirja>]]]]] P(lle){D,N}] (3.)
		Reconstructing...
			Reconstructing head movement for [[T/fin [<DP>:114 [v [antaa [<D Pekka>:114 <D kirja>]]]]] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[T/fin [<DP>:114 [v [antaa [<D Pekka>:114 <D kirja>]]]]] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[T/fin [<DP>:114 [v [antaa [<D Pekka>:114 <D kirja>]]]]] [P(lle) [D Merja-]]]
			Dropping floaters...
				P(lle) failed to tail.
				<P(lle) [D Merja-]> was made an adjunct.
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [[T/fin [<DP>:114 [v [[antaa [<D Pekka>:114 <D kirja>]] <PP>:115]]]] <P(lle) [D Merja-]>:115]
				= [[T/fin [<D Pekka> [v [[antaa [<D Pekka> <D kirja>]] <P(lle) [D Merja-]>]]]] <P(lle) [D Merja-]>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [[T/fin [<DP>:114 [v [[antaa [<D Pekka>:114 <D kirja>]] <PP>:115]]]] <P(lle) [D Merja-]>:115].
			= [[T/fin [<D Pekka> [v [[antaa [<D Pekka> <D kirja>]] <P(lle) [D Merja-]>]]]] <P(lle) [D Merja-]>]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
(P): [P, v, T/fin]
(D): [D, P, v, T/fin]
(N): [N, D, P, v, T/fin]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 30
['antoi#foc', 'Pekka', 'kirjan', 'Merjalle']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'antoi']
			=C

2.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		C + T/fin
			Filtering out impossible merge sites...
			Sink "T/fin" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T/fin]
			=C{T/fin}

3.

		Consume "v"

		C{T/fin} + v
			Filtering out impossible merge sites...
			Sink "v" into C{T/fin} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin}*v]
			=C{T/fin,v}

4.

		Consume "antaa"

		C{T/fin,v} + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into C{T/fin,v} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin,v}*antaa]
			=C{T/fin,v,V}

5.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=C{T/fin,v,V}

6.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		C{T/fin,v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T/fin,v,V} D]
			C{T/fin,v,V} cannot be opened.
			=[C{T/fin,v,V} D]

7.

		Consume "Pekka"

		[C{T/fin,v,V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T/fin,v,V} D{N}]

8.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[C{T/fin,v,V} D{N}]

9.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[C{T/fin,v,V} D{N}] + D
			Filtering out impossible merge sites...
				Reject [[C [<D Pekka> [T/fin [<D Pekka> [v [antaa <D Pekka>]]]]]] D] due to bad left branch.
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[C{T/fin,v,V} [[D Pekka] D]]

10.

		Consume "kirja"

		[C{T/fin,v,V} [[D Pekka] D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[C{T/fin,v,V} [[D Pekka] D{N}]]

11.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[C{T/fin,v,V} [[D Pekka] D{N}]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC, P(lle).
				Avoid [kirja P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
		Ranking completed:
			1. [[[D Pekka] D{N}]; P(lle)]
			2. [[C{T/fin,v,V} [[D Pekka] D{N}]]; P(lle)]
			3. [D{N}; P(lle)]
		Exploring solution number (1) =[[[D Pekka] D{N}] P(lle)]
			Reconstructing head movement for [[D Pekka] D{N}].
				Extracted head "kirja" from D and created [[D Pekka] [D kirja]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[D Pekka] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "D".
				Memory buffer: [[D N]]
				D (D) has a specifier [D Pekka] but is marked for -EPP behavior.
				Extraposition will be tried on [[D Pekka] [D kirja]].
				<D kirja> was made adjunct by an extraposition rule.
			=[C{T/fin,v,V} [[[D Pekka] <D kirja>] P(lle)]]

12.

		Consume "D"

		[C{T/fin,v,V} [[[D Pekka] <D kirja>] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[C{T/fin,v,V} [[[D Pekka] <D kirja>] P(lle){D}]]

13.

		Consume "Merja-"

		[C{T/fin,v,V} [[[D Pekka] <D kirja>] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[C{T/fin,v,V} [[[D Pekka] <D kirja>] P(lle){D,N}]]

14.
	>>>	Trying candidate parse [C{T/fin,v,V} [[[D Pekka] <D kirja>] P(lle){D,N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{T/fin,v,V} [[[D Pekka] <D kirja>] P(lle){D,N}]].
				Extracted head "T/fin{v,V}" and reconstructed it = [C [[[D Pekka] <D kirja>] [T/fin{v,V} P(lle){D,N}]]]
				Extracted head "v{V}" and reconstructed it = [C [[[D Pekka] <D kirja>] [T/fin [v{V} P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [C [[[D Pekka] <D kirja>] [T/fin [v [antaa P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [C [[[D Pekka] <D kirja>] [T/fin [v [antaa [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [C [[[D Pekka] <D kirja>] [T/fin [v [antaa [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[[D Pekka] <D kirja>] is in an EPP SPEC position.
				<[D Pekka] <D kirja>> was made an adjunct.
				Floater <[D Pekka] <D kirja>> dropped: [C [<[D Pekka] <D kirja>>:120 [T/fin [<DP>:120 [v [antaa [P(lle) [D Merja-]]]]]]]]
				= [C [<[D Pekka] <D kirja>> [T/fin [<[D Pekka] <D kirja>> [v [antaa [P(lle) [D Merja-]]]]]]]]
			Dropping A-/A-bar movement.
				(D) failed internal tail test.
				Extraposition will be tried on [C [<[D Pekka] <D kirja>>:120 [T/fin [<DP>:120 [v [antaa [P(lle) [D Merja-]]]]]]]].
			= [C [<[D Pekka] <D kirja>> [T/fin [<[D Pekka] <D kirja>> [v [antaa [P(lle) [D Merja-]]]]]]]]
		Checking LF-interface conditions.
				(D) failed internal tail test.
			LF-interface condition(s) violated
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

C: [C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
D: [D, C/fin]
kirja: [N, D, C/fin]
T/fin: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
v: [v, T/fin, C/fin]
antaa: [V, v, T/fin, C/fin]
P(lle): [P, V, v, T/fin, C/fin]
D: [D, P, V, v, T/fin, C/fin]
Merja-: [N, D, P, V, v, T/fin, C/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[C{T/fin,v,V} [[D Pekka] D{N}]] P(lle)]
			Reconstructing head movement for [C{T/fin,v,V} [[D Pekka] D{N}]].
				Extracted head "T/fin{v,V}" and reconstructed it = [C [[D Pekka] [T/fin{v,V} D{N}]]]
				Extracted head "v{V}" and reconstructed it = [C [[D Pekka] [T/fin [v{V} D{N}]]]]
				Extracted head "antaa" and reconstructed it = [C [[D Pekka] [T/fin [v [antaa D{N}]]]]]
				Extracted head "kirja" from D and created [C [[D Pekka] [T/fin [v [antaa [D kirja]]]]]]
			Dropping floaters...
				[D Pekka] is in an EPP SPEC position.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<D Pekka>:121 [T/fin [<DP>:121 [v [antaa [D kirja]]]]]]]
				= [C [<D Pekka> [T/fin [<D Pekka> [v [antaa [D kirja]]]]]]]
			Dropping A-/A-bar movement.
			=[[C [<D Pekka>:121 [T/fin [<DP>:121 [v [antaa [D kirja]]]]]]] P(lle)]

15.

		Consume "D"

		[[C [<D Pekka> [T/fin [<D Pekka> [v [antaa [D kirja]]]]]]] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[C [<D Pekka>:121 [T/fin [<DP>:121 [v [antaa [D kirja]]]]]]] P(lle){D}]

16.

		Consume "Merja-"

		[[C [<D Pekka> [T/fin [<D Pekka> [v [antaa [D kirja]]]]]]] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[C [<D Pekka>:121 [T/fin [<DP>:121 [v [antaa [D kirja]]]]]]] P(lle){D,N}]

17.
	>>>	Trying candidate parse [[C [<D Pekka> [T/fin [<D Pekka> [v [antaa [D kirja]]]]]]] P(lle){D,N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[C [<D Pekka>:121 [T/fin [<DP>:121 [v [antaa [D kirja]]]]]]] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[C [<D Pekka>:121 [T/fin [<DP>:121 [v [antaa [D kirja]]]]]]] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[C [<D Pekka>:121 [T/fin [<DP>:121 [v [antaa [D kirja]]]]]]] [P(lle) [D Merja-]]]
			Dropping floaters...
				P(lle) failed to tail.
				<P(lle) [D Merja-]> was made an adjunct.
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [[C [<D Pekka>:121 [T/fin [<DP>:121 [v [[antaa [D kirja]] <PP>:122]]]]]] <P(lle) [D Merja-]>:122]
				= [[C [<D Pekka> [T/fin [<D Pekka> [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]]]]] <P(lle) [D Merja-]>]
			Dropping A-/A-bar movement.
			= [[C [<D Pekka> [T/fin [<D Pekka> [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]]]]] <P(lle) [D Merja-]>]
		Checking LF-interface conditions.
			Trying to transfer [[C [<D Pekka>:121 [T/fin [<DP>:121 [v [[antaa [D kirja]] <PP>:122]]]]]] <P(lle) [D Merja-]>:122] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 17/184 operations) <------------------------------------
		Solution:
		[[C [<D Pekka> [T/fin [<D Pekka> [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]]]]] <P(lle) [D Merja-]>]
		Grammar: [[C [<D Pekka>:1 [T/fin [<DP>:1 [v [[antaa [D kirja]] <PP>:2]]]]]] <P(lle) [D Merja-]>:2]
		Spellout C/finP = [[C/fin [DP:1 [T/fin [__:1 [v [[V [D N]] __:2]]]]]] PP:2]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

C: [C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
T/fin: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
v: [v, T/fin, C/fin]
antaa: [V, v, T/fin, C/fin]
D: [D, V, v, T/fin, C/fin]
kirja: [N, D, V, v, T/fin, C/fin]
(P): [P, v, T/fin, C/fin]
(D): [D, P, v, T/fin, C/fin]
(N): [N, D, P, v, T/fin, C/fin]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]

			Checking if the sentence is ambiguous...


\========================================================================
# 31
['antoi', 'Pekka', 'Merjalle', 'kirjan']


			=None

1.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']
			=T/fin

2.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

3.

		Consume "antaa"

		T/fin{v} + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=T/fin{v,V}

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=T/fin{v,V}

5.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[T/fin{v,V} D]

6.

		Consume "Pekka"

		[T/fin{v,V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T/fin{v,V} D{N}]

7.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[T/fin{v,V} D{N}] + P(lle)
			Filtering out impossible merge sites...
				Reject [[T/fin [<D Pekka> [v [antaa <D Pekka>]]]] P(lle)] due to bad left branch.
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[T/fin{v,V} [[D Pekka] P(lle)]]

8.

		Consume "D"

		[T/fin{v,V} [[D Pekka] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[T/fin{v,V} [[D Pekka] P(lle){D}]]

9.

		Consume "Merja-"

		[T/fin{v,V} [[D Pekka] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[T/fin{v,V} [[D Pekka] P(lle){D,N}]]

10.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[T/fin{v,V} [[D Pekka] P(lle){D,N}]]

11.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[T/fin{v,V} [[D Pekka] P(lle){D,N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				Avoid [T/fin [<D Pekka> [v [antaa [<D Pekka> <P(lle) [D Merja-]>]]]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				[D Pekka]" has no thematic role
				Avoid [[D Pekka] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
		Ranking completed:
			1. [P(lle){D,N}; D]
			2. [[[D Pekka] P(lle){D,N}]; D]
			3. [[T/fin{v,V} [[D Pekka] P(lle){D,N}]]; D]
		Exploring solution number (1) =[P(lle){D,N} D]
			P(lle) was opened.
			=[T/fin{v,V} [[D Pekka] [[P(lle) [D Merja-]] D]]]

12.

		Consume "kirja"

		[T/fin{v,V} [[D Pekka] [[P(lle) [D Merja-]] D]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[T/fin{v,V} [[D Pekka] [[P(lle) [D Merja-]] D{N}]]]

13.
	>>>	Trying candidate parse [T/fin{v,V} [[D Pekka] [[P(lle) [D Merja-]] D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [T/fin{v,V} [[D Pekka] [[P(lle) [D Merja-]] D{N}]]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[D Pekka] [[P(lle) [D Merja-]] D{N}]]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[D Pekka] [[P(lle) [D Merja-]] D{N}]]]]]
				Extracted head "kirja" from D and created [T/fin [v [antaa [[D Pekka] [[P(lle) [D Merja-]] [D kirja]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:126 [v [antaa [<D Pekka>:126 [[P(lle) [D Merja-]] [D kirja]]]]]]]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [T/fin [<DP>:126 [v [[antaa [<D Pekka>:126 [<P(lle) [D Merja-]>:127 [D kirja]]]] <PP>:127]]]]
				= [T/fin [<D Pekka> [v [[antaa [<D Pekka> [<P(lle) [D Merja-]> [D kirja]]]] <P(lle) [D Merja-]>]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at D but its category is unknown!
				An EPP-head "T/fin" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [T/fin [<DP>:126 [v [[antaa [<D Pekka>:126 [? [<P(lle) [D Merja-]>:127 [D kirja]]]]] <PP>:127]]]].
				<D kirja> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
			= [T/fin [<D Pekka> [v [[antaa [<D Pekka> [? [<P(lle) [D Merja-]> <D kirja>]]]] <P(lle) [D Merja-]>]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
?: [?, V, v, T/fin]
P(lle): [P, ?, V, v, T/fin]
D: [D, P, ?, V, v, T/fin]
Merja-: [N, D, P, ?, V, v, T/fin]
D: [D, ?, V, v, T/fin]
kirja: [N, D, ?, V, v, T/fin]
(P): [P, v, T/fin]
(D): [D, P, v, T/fin]
(N): [N, D, P, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D Pekka] P(lle){D,N}] D]
			Reconstructing head movement for [[D Pekka] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [P(lle) [D Merja-]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[D Pekka] [P(lle) [D Merja-]]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D Pekka]" has no thematic role
			=[T/fin{v,V} [[[D Pekka] [P(lle) [D Merja-]]] D]]

14.

		Consume "kirja"

		[T/fin{v,V} [[[D Pekka] [P(lle) [D Merja-]]] D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[T/fin{v,V} [[[D Pekka] [P(lle) [D Merja-]]] D{N}]]

15.
	>>>	Trying candidate parse [T/fin{v,V} [[[D Pekka] [P(lle) [D Merja-]]] D{N}]] (2.)
		Reconstructing...
			Reconstructing head movement for [T/fin{v,V} [[[D Pekka] [P(lle) [D Merja-]]] D{N}]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[[D Pekka] [P(lle) [D Merja-]]] D{N}]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[[D Pekka] [P(lle) [D Merja-]]] D{N}]]]]
				Extracted head "kirja" from D and created [T/fin [v [antaa [[[D Pekka] [P(lle) [D Merja-]]] [D kirja]]]]]
			Dropping floaters...
				<[D Pekka] [P(lle) [D Merja-]]> was made an adjunct.
				Floater <[D Pekka] [P(lle) [D Merja-]]> dropped: [T/fin [v [[antaa [<[D Pekka] [P(lle) [D Merja-]]>:128 [D kirja]]] <PP>:128]]]
				= [T/fin [v [[antaa [<[D Pekka] [P(lle) [D Merja-]]> [D kirja]]] <[D Pekka] [P(lle) [D Merja-]]>]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				(DP)" has no thematic role
				Extraposition will be tried on [T/fin [v [[antaa [<[D Pekka] [P(lle) [D Merja-]]>:128 [D kirja]]] <PP>:128]]].
				<D kirja> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				(DP)" has no thematic role
			= [T/fin [v [[antaa [<[D Pekka] [P(lle) [D Merja-]]> <D kirja>]] <[D Pekka] [P(lle) [D Merja-]]>]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				(DP)" has no thematic role
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

T/fin: [T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
(P): [P, v, T/fin]
(D): [D, P, v, T/fin]
(N): [N, D, P, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[T/fin{v,V} [[D Pekka] P(lle){D,N}]] D]
			Reconstructing head movement for [T/fin{v,V} [[D Pekka] P(lle){D,N}]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[D Pekka] P(lle){D,N}]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[D Pekka] P(lle){D,N}]]]]
				Extracted head "D{N}" from P(lle) and created [T/fin [v [antaa [[D Pekka] [P(lle) D{N}]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [T/fin [v [antaa [[D Pekka] [P(lle) [D Merja-]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:129 [v [antaa [<D Pekka>:129 [P(lle) [D Merja-]]]]]]]
				= [T/fin [<D Pekka> [v [antaa [<D Pekka> [P(lle) [D Merja-]]]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [T/fin [<DP>:129 [v [antaa [<D Pekka>:129 [P(lle) [D Merja-]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
			=[[T/fin [<DP>:129 [v [antaa [<D Pekka>:129 <P(lle) [D Merja-]>]]]]] D]

16.

		Consume "kirja"

		[[T/fin [<D Pekka> [v [antaa [<D Pekka> <P(lle) [D Merja-]>]]]]] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[T/fin [<DP>:129 [v [antaa [<D Pekka>:129 <P(lle) [D Merja-]>]]]]] D{N}]

17.
	>>>	Trying candidate parse [[T/fin [<D Pekka> [v [antaa [<D Pekka> <P(lle) [D Merja-]>]]]]] D{N}] (3.)
		Reconstructing...
			Reconstructing head movement for [[T/fin [<DP>:129 [v [antaa [<D Pekka>:129 <P(lle) [D Merja-]>]]]]] D{N}].
				Extracted head "kirja" from D and created [[T/fin [<DP>:129 [v [antaa [<D Pekka>:129 <P(lle) [D Merja-]>]]]]] [D kirja]]
			Dropping floaters...
				D failed to tail.
				<D kirja> was made an adjunct.
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [[T/fin [<DP>:129 [v [<DP>:130 [antaa [<D Pekka>:129 <P(lle) [D Merja-]>]]]]]] <D kirja>:130]
				= [[T/fin [<D Pekka> [v [<D kirja> [antaa [<D Pekka> <P(lle) [D Merja-]>]]]]]] <D kirja>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [[T/fin [<DP>:129 [v [<DP>:130 [antaa [<D Pekka>:129 <P(lle) [D Merja-]>]]]]]] <D kirja>:130].
			= [[T/fin [<D Pekka> [v [<D kirja> [antaa [<D Pekka> <P(lle) [D Merja-]>]]]]]] <D kirja>]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D]
kirja: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 32
['antoi#foc', 'Pekka', 'Merjalle', 'kirjan']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'antoi']
			=C

2.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		C + T/fin
			Filtering out impossible merge sites...
			Sink "T/fin" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T/fin]
			=C{T/fin}

3.

		Consume "v"

		C{T/fin} + v
			Filtering out impossible merge sites...
			Sink "v" into C{T/fin} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin}*v]
			=C{T/fin,v}

4.

		Consume "antaa"

		C{T/fin,v} + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into C{T/fin,v} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin,v}*antaa]
			=C{T/fin,v,V}

5.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=C{T/fin,v,V}

6.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		C{T/fin,v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T/fin,v,V} D]
			C{T/fin,v,V} cannot be opened.
			=[C{T/fin,v,V} D]

7.

		Consume "Pekka"

		[C{T/fin,v,V} D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T/fin,v,V} D{N}]

8.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[C{T/fin,v,V} D{N}] + P(lle)
			Filtering out impossible merge sites...
				Reject [[C [<D Pekka> [T/fin [<D Pekka> [v [antaa <D Pekka>]]]]]] P(lle)] due to bad left branch.
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[C{T/fin,v,V} [[D Pekka] P(lle)]]

9.

		Consume "D"

		[C{T/fin,v,V} [[D Pekka] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[C{T/fin,v,V} [[D Pekka] P(lle){D}]]

10.

		Consume "Merja-"

		[C{T/fin,v,V} [[D Pekka] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[C{T/fin,v,V} [[D Pekka] P(lle){D,N}]]

11.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[C{T/fin,v,V} [[D Pekka] P(lle){D,N}]]

12.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[C{T/fin,v,V} [[D Pekka] P(lle){D,N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				[D Pekka]" has no thematic role
				Avoid [[D Pekka] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
		Ranking completed:
			1. [[C{T/fin,v,V} [[D Pekka] P(lle){D,N}]]; D]
			2. [P(lle){D,N}; D]
			3. [[[D Pekka] P(lle){D,N}]; D]
		Exploring solution number (1) =[[C{T/fin,v,V} [[D Pekka] P(lle){D,N}]] D]
			Reconstructing head movement for [C{T/fin,v,V} [[D Pekka] P(lle){D,N}]].
				Extracted head "T/fin{v,V}" and reconstructed it = [C [[D Pekka] [T/fin{v,V} P(lle){D,N}]]]
				Extracted head "v{V}" and reconstructed it = [C [[D Pekka] [T/fin [v{V} P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [C [[D Pekka] [T/fin [v [antaa P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [C [[D Pekka] [T/fin [v [antaa [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [C [[D Pekka] [T/fin [v [antaa [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[D Pekka] is in an EPP SPEC position.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<D Pekka>:135 [T/fin [<DP>:135 [v [antaa [P(lle) [D Merja-]]]]]]]]
				= [C [<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]]]
			Dropping A-/A-bar movement.
			=[[C [<D Pekka>:135 [T/fin [<DP>:135 [v [antaa [P(lle) [D Merja-]]]]]]]] D]

13.

		Consume "kirja"

		[[C [<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]]] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[C [<D Pekka>:135 [T/fin [<DP>:135 [v [antaa [P(lle) [D Merja-]]]]]]]] D{N}]

14.
	>>>	Trying candidate parse [[C [<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]]] D{N}] (1.)
		Reconstructing...
			Reconstructing head movement for [[C [<D Pekka>:135 [T/fin [<DP>:135 [v [antaa [P(lle) [D Merja-]]]]]]]] D{N}].
				Extracted head "kirja" from D and created [[C [<D Pekka>:135 [T/fin [<DP>:135 [v [antaa [P(lle) [D Merja-]]]]]]]] [D kirja]]
			Dropping floaters...
				D failed to tail.
				<D kirja> was made an adjunct.
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [[C [<D Pekka>:135 [T/fin [<DP>:135 [v [<DP>:136 [antaa [P(lle) [D Merja-]]]]]]]]] <D kirja>:136]
				= [[C [<D Pekka> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]] <D kirja>]
			Dropping A-/A-bar movement.
			= [[C [<D Pekka> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]] <D kirja>]
		Checking LF-interface conditions.
			Trying to transfer [[C [<D Pekka>:135 [T/fin [<DP>:135 [v [<DP>:136 [antaa [P(lle) [D Merja-]]]]]]]]] <D kirja>:136] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 14/133 operations) <------------------------------------
		Solution:
		[[C [<D Pekka> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]] <D kirja>]
		Grammar: [[C [<D Pekka>:1 [T/fin [<DP>:1 [v [<DP>:2 [antaa [P(lle) [D Merja-]]]]]]]]] <D kirja>:2]
		Spellout C/finP = [[C/fin [DP:1 [T/fin [__:1 [v [__:2 [V [P [D N]]]]]]]]] DP:2]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

C: [C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
T/fin: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
v: [v, T/fin, C/fin]
(D): [D, v, T/fin, C/fin]
(N): [N, D, v, T/fin, C/fin]
antaa: [V, v, T/fin, C/fin]
P(lle): [P, V, v, T/fin, C/fin]
D: [D, P, V, v, T/fin, C/fin]
Merja-: [N, D, P, V, v, T/fin, C/fin]
D: [D]
kirja: [N, D]

			Checking if the sentence is ambiguous...


\========================================================================
# 33
['antoi', 'kirjan', 'Pekka', 'Merjalle']


			=None

1.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']
			=T/fin

2.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

3.

		Consume "antaa"

		T/fin{v} + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=T/fin{v,V}

4.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=T/fin{v,V}

5.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[T/fin{v,V} D]

6.

		Consume "kirja"

		[T/fin{v,V} D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[T/fin{v,V} D{N}]

7.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[T/fin{v,V} D{N}]

8.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[T/fin{v,V} D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [kirja D] due to complement selection.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; D]
			2. [[T/fin{v,V} D{N}]; D]
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[T/fin{v,V} [[D kirja] D]]

9.

		Consume "Pekka"

		[T/fin{v,V} [[D kirja] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T/fin{v,V} [[D kirja] D{N}]]

10.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[T/fin{v,V} [[D kirja] D{N}]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				An EPP-head "T/fin" lacks specifier but needs one.
				Avoid [T/fin [<D Pekka> [v [[D kirja] [antaa [[D kirja] <D Pekka>]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[[D kirja] D{N}], P(lle)] because the operation breaks up an existing selectional dependency.
				Avoid [Pekka P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Prioritize [[D kirja] D{N}] because all solutions were negative.
		Ranking completed:
			1. [[[D kirja] D{N}]; P(lle)]
			2. [D{N}; P(lle)]
			3. [[T/fin{v,V} [[D kirja] D{N}]]; P(lle)]
		Exploring solution number (1) =[[[D kirja] D{N}] P(lle)]
			Reconstructing head movement for [[D kirja] D{N}].
				Extracted head "Pekka" from D and created [[D kirja] [D Pekka]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				= [[D kirja] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "D".
				Memory buffer: [[D N]]
				D (D) has a specifier [D kirja] but is marked for -EPP behavior.
				Extraposition will be tried on [[D kirja] [D Pekka]].
				<D Pekka> was made adjunct by an extraposition rule.
			=[T/fin{v,V} [[[D kirja] <D Pekka>] P(lle)]]

11.

		Consume "D"

		[T/fin{v,V} [[[D kirja] <D Pekka>] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[T/fin{v,V} [[[D kirja] <D Pekka>] P(lle){D}]]

12.

		Consume "Merja-"

		[T/fin{v,V} [[[D kirja] <D Pekka>] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[T/fin{v,V} [[[D kirja] <D Pekka>] P(lle){D,N}]]

13.
	>>>	Trying candidate parse [T/fin{v,V} [[[D kirja] <D Pekka>] P(lle){D,N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [T/fin{v,V} [[[D kirja] <D Pekka>] P(lle){D,N}]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[[D kirja] <D Pekka>] P(lle){D,N}]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[[D kirja] <D Pekka>] P(lle){D,N}]]]]
				Extracted head "D{N}" from P(lle) and created [T/fin [v [antaa [[[D kirja] <D Pekka>] [P(lle) D{N}]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [T/fin [v [antaa [[[D kirja] <D Pekka>] [P(lle) [D Merja-]]]]]]
			Dropping floaters...
				= [T/fin [v [antaa [[[D kirja] <D Pekka>] [P(lle) [D Merja-]]]]]]
			Dropping A-/A-bar movement.
				Moving "D kirja D Pekka " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[[D N] [D N]]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				D failed internal tail test.
				[[D kirja] <D Pekka>]" has no thematic role
				Extraposition will be tried on [T/fin [v [antaa [[[D kirja] <D Pekka>] [P(lle) [D Merja-]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				D failed internal tail test.
			= [T/fin [v [antaa [[[D kirja] <D Pekka>] <P(lle) [D Merja-]>]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				D failed internal tail test.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

T/fin: [T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} P(lle)]
			D was opened.
			=[T/fin{v,V} [[D kirja] [[D Pekka] P(lle)]]]

14.

		Consume "D"

		[T/fin{v,V} [[D kirja] [[D Pekka] P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[T/fin{v,V} [[D kirja] [[D Pekka] P(lle){D}]]]

15.

		Consume "Merja-"

		[T/fin{v,V} [[D kirja] [[D Pekka] P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[T/fin{v,V} [[D kirja] [[D Pekka] P(lle){D,N}]]]

16.
	>>>	Trying candidate parse [T/fin{v,V} [[D kirja] [[D Pekka] P(lle){D,N}]]] (2.)
		Reconstructing...
			Reconstructing head movement for [T/fin{v,V} [[D kirja] [[D Pekka] P(lle){D,N}]]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[D kirja] [[D Pekka] P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[D kirja] [[D Pekka] P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [T/fin [v [antaa [[D kirja] [[D Pekka] [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [T/fin [v [antaa [[D kirja] [[D Pekka] [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:141 [v [antaa [[D kirja] [<D Pekka>:141 [P(lle) [D Merja-]]]]]]]]
				= [T/fin [<D Pekka> [v [antaa [[D kirja] [<D Pekka> [P(lle) [D Merja-]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				New head was spawned due to multiple specifiers at P(lle) but its category is unknown!
				Memory buffer: [[D N]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [T/fin [<DP>:141 [v [antaa [[D kirja] [? [<D Pekka>:141 [P(lle) [D Merja-]]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
			= [T/fin [<D Pekka> [v [antaa [[D kirja] [? [<D Pekka> <P(lle) [D Merja-]>]]]]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
?: [?, V, v, T/fin]
D: [D, ?, V, v, T/fin]
Pekka: [N, D, ?, V, v, T/fin]
P(lle): [P, ?, V, v, T/fin]
D: [D, P, ?, V, v, T/fin]
Merja-: [N, D, P, ?, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[T/fin{v,V} [[D kirja] D{N}]] P(lle)]
			Reconstructing head movement for [T/fin{v,V} [[D kirja] D{N}]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[D kirja] D{N}]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[D kirja] D{N}]]]]
				Extracted head "Pekka" from D and created [T/fin [v [antaa [[D kirja] [D Pekka]]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:142 [v [antaa [[D kirja] <D Pekka>:142]]]]]
				[D kirja] cannot be made an adjunct because its sister is an adjunct.
				Floater [D kirja] dropped: [T/fin [<DP>:142 [v [(DP):143 [antaa [[D kirja]:143 <D Pekka>:142]]]]]]
				= [T/fin [<D Pekka> [v [[D kirja] [antaa [[D kirja] <D Pekka>]]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [T/fin [<DP>:142 [v [(DP):143 [antaa [[D kirja]:143 <D Pekka>:142]]]]]].
			=[[T/fin [<DP>:142 [v [(DP):143 [antaa [[D kirja]:143 <D Pekka>:142]]]]]] P(lle)]

17.

		Consume "D"

		[[T/fin [<D Pekka> [v [[D kirja] [antaa [[D kirja] <D Pekka>]]]]]] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[T/fin [<DP>:142 [v [(DP):143 [antaa [[D kirja]:143 <D Pekka>:142]]]]]] P(lle){D}]

18.

		Consume "Merja-"

		[[T/fin [<D Pekka> [v [[D kirja] [antaa [[D kirja] <D Pekka>]]]]]] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[T/fin [<DP>:142 [v [(DP):143 [antaa [[D kirja]:143 <D Pekka>:142]]]]]] P(lle){D,N}]

19.
	>>>	Trying candidate parse [[T/fin [<D Pekka> [v [[D kirja] [antaa [[D kirja] <D Pekka>]]]]]] P(lle){D,N}] (3.)
		Reconstructing...
			Reconstructing head movement for [[T/fin [<DP>:142 [v [(DP):143 [antaa [[D kirja]:143 <D Pekka>:142]]]]]] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[T/fin [<DP>:142 [v [(DP):143 [antaa [[D kirja]:143 <D Pekka>:142]]]]]] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[T/fin [<DP>:142 [v [(DP):143 [antaa [[D kirja]:143 <D Pekka>:142]]]]]] [P(lle) [D Merja-]]]
			Dropping floaters...
				P(lle) failed to tail.
				<P(lle) [D Merja-]> was made an adjunct.
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [[T/fin [<DP>:142 [v [[(DP):143 [antaa [[D kirja]:143 <D Pekka>:142]]] <PP>:144]]]] <P(lle) [D Merja-]>:144]
				= [[T/fin [<D Pekka> [v [[[D kirja] [antaa [[D kirja] <D Pekka>]]] <P(lle) [D Merja-]>]]]] <P(lle) [D Merja-]>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [[T/fin [<DP>:142 [v [[(DP):143 [antaa [[D kirja]:143 <D Pekka>:142]]] <PP>:144]]]] <P(lle) [D Merja-]>:144].
			= [[T/fin [<D Pekka> [v [[[D kirja] [antaa [[D kirja] <D Pekka>]]] <P(lle) [D Merja-]>]]]] <P(lle) [D Merja-]>]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
(P): [P, v, T/fin]
(D): [D, P, v, T/fin]
(N): [N, D, P, v, T/fin]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{v,V} D{N}] D]
			Reconstructing head movement for [T/fin{v,V} D{N}].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} D{N}]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa D{N}]]]
				Extracted head "kirja" from D and created [T/fin [v [antaa [D kirja]]]]
			Dropping floaters...
				= [T/fin [v [antaa [D kirja]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [T/fin [v [antaa [D kirja]]]].
			=[[T/fin [v [antaa [D kirja]]]] D]

20.

		Consume "Pekka"

		[[T/fin [v [antaa [D kirja]]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[T/fin [v [antaa [D kirja]]]] D{N}]

21.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[T/fin [v [antaa [D kirja]]]] D{N}] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "T/fin" lacks specifier but needs one.
				Avoid [[T/fin [<D Pekka> [v [antaa [D kirja]]]]] <D Pekka>] as left branch because it constitutes illicit structure.
				Avoid [Pekka P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[T/fin [v [antaa [D kirja]]]] D{N}]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[T/fin [v [antaa [D kirja]]]] [[D Pekka] P(lle)]]

22.

		Consume "D"

		[[T/fin [v [antaa [D kirja]]]] [[D Pekka] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[T/fin [v [antaa [D kirja]]]] [[D Pekka] P(lle){D}]]

23.

		Consume "Merja-"

		[[T/fin [v [antaa [D kirja]]]] [[D Pekka] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[T/fin [v [antaa [D kirja]]]] [[D Pekka] P(lle){D,N}]]

24.
	>>>	Trying candidate parse [[T/fin [v [antaa [D kirja]]]] [[D Pekka] P(lle){D,N}]] (4.)
		Reconstructing...
			Reconstructing head movement for [[T/fin [v [antaa [D kirja]]]] [[D Pekka] P(lle){D,N}]].
				Extracted head "D{N}" from P(lle) and created [[T/fin [v [antaa [D kirja]]]] [[D Pekka] [P(lle) D{N}]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[T/fin [v [antaa [D kirja]]]] [[D Pekka] [P(lle) [D Merja-]]]]
			Dropping floaters...
				P(lle) failed to tail.
				<[D Pekka] [P(lle) [D Merja-]]> was made an adjunct.
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [[T/fin [v [[antaa [D kirja]] <PP>:147]]] <[D Pekka] <P(lle) [D Merja-]>:147>]
				= [[T/fin [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]] <[D Pekka] <P(lle) [D Merja-]>>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[T/fin [v [[antaa [D kirja]] <PP>:147]]] <[D Pekka] <P(lle) [D Merja-]>:147>].
			= [[T/fin [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]] <[D Pekka] <P(lle) [D Merja-]>>]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

T/fin: [T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
(P): [P, v, T/fin]
(D): [D, P, v, T/fin]
(N): [N, D, P, v, T/fin]
D: [D]
Pekka: [N, D]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[T/fin [v [antaa [D kirja]]]] D{N}] P(lle)]
			Reconstructing head movement for [[T/fin [v [antaa [D kirja]]]] D{N}].
				Extracted head "Pekka" from D and created [[T/fin [v [antaa [D kirja]]]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [[T/fin [<DP>:148 [v [antaa [D kirja]]]]] <D Pekka>:148]
				= [[T/fin [<D Pekka> [v [antaa [D kirja]]]]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [[T/fin [<DP>:148 [v [antaa [D kirja]]]]] <D Pekka>:148].
			=[[[T/fin [<DP>:148 [v [antaa [D kirja]]]]] <D Pekka>:148] P(lle)]

25.

		Consume "D"

		[[[T/fin [<D Pekka> [v [antaa [D kirja]]]]] <D Pekka>] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[[T/fin [<DP>:148 [v [antaa [D kirja]]]]] <D Pekka>:148] P(lle){D}]

26.

		Consume "Merja-"

		[[[T/fin [<D Pekka> [v [antaa [D kirja]]]]] <D Pekka>] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[[T/fin [<DP>:148 [v [antaa [D kirja]]]]] <D Pekka>:148] P(lle){D,N}]

27.
	>>>	Trying candidate parse [[[T/fin [<D Pekka> [v [antaa [D kirja]]]]] <D Pekka>] P(lle){D,N}] (5.)
		Reconstructing...
			Reconstructing head movement for [[[T/fin [<DP>:148 [v [antaa [D kirja]]]]] <D Pekka>:148] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[[T/fin [<DP>:148 [v [antaa [D kirja]]]]] <D Pekka>:148] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[[T/fin [<DP>:148 [v [antaa [D kirja]]]]] <D Pekka>:148] [P(lle) [D Merja-]]]
			Dropping floaters...
				P(lle) failed to tail.
				<P(lle) [D Merja-]> was made an adjunct.
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [[[T/fin [<DP>:148 [v [[antaa [D kirja]] <PP>:149]]]] <D Pekka>:148] <P(lle) [D Merja-]>:149]
				= [[[T/fin [<D Pekka> [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]]] <D Pekka>] <P(lle) [D Merja-]>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [[[T/fin [<DP>:148 [v [[antaa [D kirja]] <PP>:149]]]] <D Pekka>:148] <P(lle) [D Merja-]>:149].
			= [[[T/fin [<D Pekka> [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]]] <D Pekka>] <P(lle) [D Merja-]>]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
(P): [P, v, T/fin]
(D): [D, P, v, T/fin]
(N): [N, D, P, v, T/fin]
D: [D]
Pekka: [N, D]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 34
['antoi#foc', 'kirjan', 'Pekka', 'Merjalle']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'antoi']
			=C

2.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		C + T/fin
			Filtering out impossible merge sites...
			Sink "T/fin" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T/fin]
			=C{T/fin}

3.

		Consume "v"

		C{T/fin} + v
			Filtering out impossible merge sites...
			Sink "v" into C{T/fin} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin}*v]
			=C{T/fin,v}

4.

		Consume "antaa"

		C{T/fin,v} + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into C{T/fin,v} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin,v}*antaa]
			=C{T/fin,v,V}

5.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=C{T/fin,v,V}

6.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		C{T/fin,v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T/fin,v,V} D]
			C{T/fin,v,V} cannot be opened.
			=[C{T/fin,v,V} D]

7.

		Consume "kirja"

		[C{T/fin,v,V} D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[C{T/fin,v,V} D{N}]

8.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[C{T/fin,v,V} D{N}]

9.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[C{T/fin,v,V} D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [C [T/fin [v [antaa [D kirja]]]]] as left branch because it constitutes illicit structure.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [kirja D] due to complement selection.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; D]
			2. [[C{T/fin,v,V} D{N}]; D]
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[C{T/fin,v,V} [[D kirja] D]]

10.

		Consume "Pekka"

		[C{T/fin,v,V} [[D kirja] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T/fin,v,V} [[D kirja] D{N}]]

11.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[C{T/fin,v,V} [[D kirja] D{N}]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC, P(lle).
				Avoid [Pekka P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
		Ranking completed:
			1. [[[D kirja] D{N}]; P(lle)]
			2. [[C{T/fin,v,V} [[D kirja] D{N}]]; P(lle)]
			3. [D{N}; P(lle)]
		Exploring solution number (1) =[[[D kirja] D{N}] P(lle)]
			Reconstructing head movement for [[D kirja] D{N}].
				Extracted head "Pekka" from D and created [[D kirja] [D Pekka]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				= [[D kirja] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "D".
				Memory buffer: [[D N]]
				D (D) has a specifier [D kirja] but is marked for -EPP behavior.
				Extraposition will be tried on [[D kirja] [D Pekka]].
				<D Pekka> was made adjunct by an extraposition rule.
			=[C{T/fin,v,V} [[[D kirja] <D Pekka>] P(lle)]]

12.

		Consume "D"

		[C{T/fin,v,V} [[[D kirja] <D Pekka>] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[C{T/fin,v,V} [[[D kirja] <D Pekka>] P(lle){D}]]

13.

		Consume "Merja-"

		[C{T/fin,v,V} [[[D kirja] <D Pekka>] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[C{T/fin,v,V} [[[D kirja] <D Pekka>] P(lle){D,N}]]

14.
	>>>	Trying candidate parse [C{T/fin,v,V} [[[D kirja] <D Pekka>] P(lle){D,N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{T/fin,v,V} [[[D kirja] <D Pekka>] P(lle){D,N}]].
				Extracted head "T/fin{v,V}" and reconstructed it = [C [[[D kirja] <D Pekka>] [T/fin{v,V} P(lle){D,N}]]]
				Extracted head "v{V}" and reconstructed it = [C [[[D kirja] <D Pekka>] [T/fin [v{V} P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [C [[[D kirja] <D Pekka>] [T/fin [v [antaa P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [C [[[D kirja] <D Pekka>] [T/fin [v [antaa [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [C [[[D kirja] <D Pekka>] [T/fin [v [antaa [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[[D kirja] <D Pekka>] failed to tail [!COMP:*][CAT:v]
				<[D kirja] <D Pekka>> was made an adjunct.
				Floater <[D kirja] <D Pekka>> dropped: [C [<[D kirja] <D Pekka>>:154 [T/fin [v [<DP>:154 [antaa [P(lle) [D Merja-]]]]]]]]
				= [C [<[D kirja] <D Pekka>> [T/fin [v [<[D kirja] <D Pekka>> [antaa [P(lle) [D Merja-]]]]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [C [<[D kirja] <D Pekka>>:154 [T/fin [v [<DP>:154 [antaa [P(lle) [D Merja-]]]]]]]].
			= [C [<[D kirja] <D Pekka>> [T/fin [v [<[D kirja] <D Pekka>> [antaa [P(lle) [D Merja-]]]]]]]]
		Checking LF-interface conditions.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
			LF-interface condition(s) violated
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

C: [C/fin]
D: [D, C/fin]
kirja: [N, D, C/fin]
D: [D, C/fin]
Pekka: [N, D, C/fin]
T/fin: [T/fin, C/fin]
v: [v, T/fin, C/fin]
(D): [D, v, T/fin, C/fin]
(N): [N, D, v, T/fin, C/fin]
(D): [D, v, T/fin, C/fin]
(N): [N, D, v, T/fin, C/fin]
antaa: [V, v, T/fin, C/fin]
P(lle): [P, V, v, T/fin, C/fin]
D: [D, P, V, v, T/fin, C/fin]
Merja-: [N, D, P, V, v, T/fin, C/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[C{T/fin,v,V} [[D kirja] D{N}]] P(lle)]
			Reconstructing head movement for [C{T/fin,v,V} [[D kirja] D{N}]].
				Extracted head "T/fin{v,V}" and reconstructed it = [C [[D kirja] [T/fin{v,V} D{N}]]]
				Extracted head "v{V}" and reconstructed it = [C [[D kirja] [T/fin [v{V} D{N}]]]]
				Extracted head "antaa" and reconstructed it = [C [[D kirja] [T/fin [v [antaa D{N}]]]]]
				Extracted head "Pekka" from D and created [C [[D kirja] [T/fin [v [antaa [D Pekka]]]]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [C [<D kirja>:155 [T/fin [v [<DP>:155 [antaa [D Pekka]]]]]]]
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<D kirja>:155 [T/fin [<DP>:156 [v [<DP>:155 [antaa <D Pekka>:156]]]]]]]
				= [C [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa <D Pekka>]]]]]]]
			Dropping A-/A-bar movement.
			=[[C [<D kirja>:155 [T/fin [<DP>:156 [v [<DP>:155 [antaa <D Pekka>:156]]]]]]] P(lle)]

15.

		Consume "D"

		[[C [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa <D Pekka>]]]]]]] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[C [<D kirja>:155 [T/fin [<DP>:156 [v [<DP>:155 [antaa <D Pekka>:156]]]]]]] P(lle){D}]

16.

		Consume "Merja-"

		[[C [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa <D Pekka>]]]]]]] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[C [<D kirja>:155 [T/fin [<DP>:156 [v [<DP>:155 [antaa <D Pekka>:156]]]]]]] P(lle){D,N}]

17.
	>>>	Trying candidate parse [[C [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa <D Pekka>]]]]]]] P(lle){D,N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[C [<D kirja>:155 [T/fin [<DP>:156 [v [<DP>:155 [antaa <D Pekka>:156]]]]]]] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[C [<D kirja>:155 [T/fin [<DP>:156 [v [<DP>:155 [antaa <D Pekka>:156]]]]]]] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[C [<D kirja>:155 [T/fin [<DP>:156 [v [<DP>:155 [antaa <D Pekka>:156]]]]]]] [P(lle) [D Merja-]]]
			Dropping floaters...
				P(lle) failed to tail.
				<P(lle) [D Merja-]> was made an adjunct.
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [[C [<D kirja>:155 [T/fin [<DP>:156 [v [[<DP>:155 [antaa <D Pekka>:156]] <PP>:157]]]]]] <P(lle) [D Merja-]>:157]
				= [[C [<D kirja> [T/fin [<D Pekka> [v [[<D kirja> [antaa <D Pekka>]] <P(lle) [D Merja-]>]]]]]] <P(lle) [D Merja-]>]
			Dropping A-/A-bar movement.
			= [[C [<D kirja> [T/fin [<D Pekka> [v [[<D kirja> [antaa <D Pekka>]] <P(lle) [D Merja-]>]]]]]] <P(lle) [D Merja-]>]
		Checking LF-interface conditions.
			Trying to transfer [[C [<D kirja>:155 [T/fin [<DP>:156 [v [[<DP>:155 [antaa <D Pekka>:156]] <PP>:157]]]]]] <P(lle) [D Merja-]>:157] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 17/202 operations) <------------------------------------
		Solution:
		[[C [<D kirja> [T/fin [<D Pekka> [v [[<D kirja> [antaa <D Pekka>]] <P(lle) [D Merja-]>]]]]]] <P(lle) [D Merja-]>]
		Grammar: [[C [<D kirja>:1 [T/fin [<DP>:2 [v [[<DP>:1 [antaa <D Pekka>:2]] <PP>:3]]]]]] <P(lle) [D Merja-]>:3]
		Spellout C/finP = [[C/fin [DP:1 [T/fin [__:2 [v [[__:1 [V DP:2]] __:3]]]]]] PP:3]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

C: [C/fin]
D: [D, C/fin]
kirja: [N, D, C/fin]
T/fin: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
v: [v, T/fin, C/fin]
(D): [D, v, T/fin, C/fin]
(N): [N, D, v, T/fin, C/fin]
antaa: [V, v, T/fin, C/fin]
D: [D, V, v, T/fin, C/fin]
Pekka: [N, D, V, v, T/fin, C/fin]
(P): [P, v, T/fin, C/fin]
(D): [D, P, v, T/fin, C/fin]
(N): [N, D, P, v, T/fin, C/fin]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]

			Checking if the sentence is ambiguous...


\========================================================================
# 35
['antoi', 'kirjan', 'Merjalle', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']
			=T/fin

2.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

3.

		Consume "antaa"

		T/fin{v} + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=T/fin{v,V}

4.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=T/fin{v,V}

5.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[T/fin{v,V} D]

6.

		Consume "kirja"

		[T/fin{v,V} D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[T/fin{v,V} D{N}]

7.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[T/fin{v,V} D{N}] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[T/fin{v,V} D{N}]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[T/fin{v,V} [[D kirja] P(lle)]]

8.

		Consume "D"

		[T/fin{v,V} [[D kirja] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[T/fin{v,V} [[D kirja] P(lle){D}]]

9.

		Consume "Merja-"

		[T/fin{v,V} [[D kirja] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[T/fin{v,V} [[D kirja] P(lle){D,N}]]

10.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[T/fin{v,V} [[D kirja] P(lle){D,N}]]

11.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[T/fin{v,V} [[D kirja] P(lle){D,N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				[D kirja]" has no thematic role
				Avoid [[D kirja] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
		Ranking completed:
			1. [P(lle){D,N}; D]
			2. [[[D kirja] P(lle){D,N}]; D]
			3. [[T/fin{v,V} [[D kirja] P(lle){D,N}]]; D]
		Exploring solution number (1) =[P(lle){D,N} D]
			P(lle) was opened.
			=[T/fin{v,V} [[D kirja] [[P(lle) [D Merja-]] D]]]

12.

		Consume "Pekka"

		[T/fin{v,V} [[D kirja] [[P(lle) [D Merja-]] D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T/fin{v,V} [[D kirja] [[P(lle) [D Merja-]] D{N}]]]

13.
	>>>	Trying candidate parse [T/fin{v,V} [[D kirja] [[P(lle) [D Merja-]] D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [T/fin{v,V} [[D kirja] [[P(lle) [D Merja-]] D{N}]]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[D kirja] [[P(lle) [D Merja-]] D{N}]]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[D kirja] [[P(lle) [D Merja-]] D{N}]]]]]
				Extracted head "Pekka" from D and created [T/fin [v [antaa [[D kirja] [[P(lle) [D Merja-]] [D Pekka]]]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:158 [v [antaa [[D kirja] [[P(lle) [D Merja-]] <D Pekka>:158]]]]]]
				= [T/fin [<D Pekka> [v [antaa [[D kirja] [[P(lle) [D Merja-]] <D Pekka>]]]]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				An EPP-head "T/fin" lacks specifier but needs one.
				[D kirja]" has no thematic role
				Extraposition will be tried on [T/fin [<DP>:158 [v [antaa [[D kirja] [[P(lle) [D Merja-]] <D Pekka>:158]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
			= [T/fin [<D Pekka> [v [antaa [[D kirja] [<P(lle) [D Merja-]> <D Pekka>]]]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D kirja] P(lle){D,N}] D]
			Reconstructing head movement for [[D kirja] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[D kirja] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D kirja] [P(lle) [D Merja-]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				= [[D kirja] [P(lle) [D Merja-]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
			=[T/fin{v,V} [[[D kirja] [P(lle) [D Merja-]]] D]]

14.

		Consume "Pekka"

		[T/fin{v,V} [[[D kirja] [P(lle) [D Merja-]]] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T/fin{v,V} [[[D kirja] [P(lle) [D Merja-]]] D{N}]]

15.
	>>>	Trying candidate parse [T/fin{v,V} [[[D kirja] [P(lle) [D Merja-]]] D{N}]] (2.)
		Reconstructing...
			Reconstructing head movement for [T/fin{v,V} [[[D kirja] [P(lle) [D Merja-]]] D{N}]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[[D kirja] [P(lle) [D Merja-]]] D{N}]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[[D kirja] [P(lle) [D Merja-]]] D{N}]]]]
				Extracted head "Pekka" from D and created [T/fin [v [antaa [[[D kirja] [P(lle) [D Merja-]]] [D Pekka]]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:159 [v [antaa [[[D kirja] [P(lle) [D Merja-]]] <D Pekka>:159]]]]]
				= [T/fin [<D Pekka> [v [antaa [[[D kirja] [P(lle) [D Merja-]]] <D Pekka>]]]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				An EPP-head "T/fin" lacks specifier but needs one.
				[D kirja]" has no thematic role
				Extraposition will be tried on [T/fin [<DP>:159 [v [antaa [[[D kirja] [P(lle) [D Merja-]]] <D Pekka>:159]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
			= [T/fin [<D Pekka> [v [antaa [[[D kirja] <P(lle) [D Merja-]>] <D Pekka>]]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[T/fin{v,V} [[D kirja] P(lle){D,N}]] D]
			Reconstructing head movement for [T/fin{v,V} [[D kirja] P(lle){D,N}]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[D kirja] P(lle){D,N}]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[D kirja] P(lle){D,N}]]]]
				Extracted head "D{N}" from P(lle) and created [T/fin [v [antaa [[D kirja] [P(lle) D{N}]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [T/fin [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]
			Dropping floaters...
				= [T/fin [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
				Extraposition will be tried on [T/fin [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
			=[[T/fin [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]] D]

16.

		Consume "Pekka"

		[[T/fin [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[T/fin [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]] D{N}]

17.
	>>>	Trying candidate parse [[T/fin [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]] D{N}] (3.)
		Reconstructing...
			Reconstructing head movement for [[T/fin [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]] D{N}].
				Extracted head "Pekka" from D and created [[T/fin [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [[T/fin [<DP>:160 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]] <D Pekka>:160]
				[D kirja] cannot be made an adjunct because its sister is an adjunct.
				Floater [D kirja] dropped: [[T/fin [<DP>:160 [v [(DP):161 [antaa [[D kirja]:161 <P(lle) [D Merja-]>]]]]]] <D Pekka>:160]
				= [[T/fin [<D Pekka> [v [[D kirja] [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [[T/fin [<DP>:160 [v [(DP):161 [antaa [[D kirja]:161 <P(lle) [D Merja-]>]]]]]] <D Pekka>:160].
			= [[T/fin [<D Pekka> [v [[D kirja] [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{v,V} D{N}] P(lle)]
			Reconstructing head movement for [T/fin{v,V} D{N}].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} D{N}]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa D{N}]]]
				Extracted head "kirja" from D and created [T/fin [v [antaa [D kirja]]]]
			Dropping floaters...
				= [T/fin [v [antaa [D kirja]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [T/fin [v [antaa [D kirja]]]].
			=[[T/fin [v [antaa [D kirja]]]] P(lle)]

18.

		Consume "D"

		[[T/fin [v [antaa [D kirja]]]] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[T/fin [v [antaa [D kirja]]]] P(lle){D}]

19.

		Consume "Merja-"

		[[T/fin [v [antaa [D kirja]]]] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[T/fin [v [antaa [D kirja]]]] P(lle){D,N}]

20.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[T/fin [v [antaa [D kirja]]]] P(lle){D,N}]

21.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[T/fin [v [antaa [D kirja]]]] P(lle){D,N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid PP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [[T/fin [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]] <P(lle) [D Merja-]>] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
		Ranking completed:
			1. [P(lle){D,N}; D]
			2. [[[T/fin [v [antaa [D kirja]]]] P(lle){D,N}]; D]
		Exploring solution number (1) =[P(lle){D,N} D]
			P(lle) was opened.
			=[[T/fin [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] D]]

22.

		Consume "Pekka"

		[[T/fin [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[T/fin [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] D{N}]]

23.
	>>>	Trying candidate parse [[T/fin [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] D{N}]] (4.)
		Reconstructing...
			Reconstructing head movement for [[T/fin [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] D{N}]].
				Extracted head "Pekka" from D and created [[T/fin [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] [D Pekka]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				= [[T/fin [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] <D Pekka>]]
			Dropping A-/A-bar movement.
				Moving "T/fin v antaa D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[T/fin [v [V [D N]]]]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				P(lle) has unaccetable specifier [T/fin [v [antaa [D kirja]]]].
				Extraposition will be tried on [[T/fin [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] <D Pekka>]].
			= [[T/fin [v [antaa [D kirja]]]] [[P(lle) [D Merja-]] <D Pekka>]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				P(lle) has unaccetable specifier [T/fin [v [antaa [D kirja]]]].
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin: [T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[T/fin [v [antaa [D kirja]]]] P(lle){D,N}] D]
			Reconstructing head movement for [[T/fin [v [antaa [D kirja]]]] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[T/fin [v [antaa [D kirja]]]] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[T/fin [v [antaa [D kirja]]]] [P(lle) [D Merja-]]]
			Dropping floaters...
				P(lle) failed to tail.
				<P(lle) [D Merja-]> was made an adjunct.
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [[T/fin [v [[antaa [D kirja]] <PP>:164]]] <P(lle) [D Merja-]>:164]
				= [[T/fin [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]] <P(lle) [D Merja-]>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[T/fin [v [[antaa [D kirja]] <PP>:164]]] <P(lle) [D Merja-]>:164].
			=[[[T/fin [v [[antaa [D kirja]] <PP>:164]]] <P(lle) [D Merja-]>:164] D]

24.

		Consume "Pekka"

		[[[T/fin [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]] <P(lle) [D Merja-]>] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[[T/fin [v [[antaa [D kirja]] <PP>:164]]] <P(lle) [D Merja-]>:164] D{N}]

25.
	>>>	Trying candidate parse [[[T/fin [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]] <P(lle) [D Merja-]>] D{N}] (5.)
		Reconstructing...
			Reconstructing head movement for [[[T/fin [v [[antaa [D kirja]] <PP>:164]]] <P(lle) [D Merja-]>:164] D{N}].
				Extracted head "Pekka" from D and created [[[T/fin [v [[antaa [D kirja]] <PP>:164]]] <P(lle) [D Merja-]>:164] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [[[T/fin [<DP>:165 [v [[antaa [D kirja]] <PP>:164]]]] <P(lle) [D Merja-]>:164] <D Pekka>:165]
				= [[[T/fin [<D Pekka> [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]]] <P(lle) [D Merja-]>] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [[[T/fin [<DP>:165 [v [[antaa [D kirja]] <PP>:164]]]] <P(lle) [D Merja-]>:164] <D Pekka>:165].
			= [[[T/fin [<D Pekka> [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]]] <P(lle) [D Merja-]>] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
(P): [P, v, T/fin]
(D): [D, P, v, T/fin]
(N): [N, D, P, v, T/fin]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 36
['antoi#foc', 'kirjan', 'Merjalle', 'Pekka']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'antoi']
			=C

2.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		C + T/fin
			Filtering out impossible merge sites...
			Sink "T/fin" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T/fin]
			=C{T/fin}

3.

		Consume "v"

		C{T/fin} + v
			Filtering out impossible merge sites...
			Sink "v" into C{T/fin} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin}*v]
			=C{T/fin,v}

4.

		Consume "antaa"

		C{T/fin,v} + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into C{T/fin,v} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin,v}*antaa]
			=C{T/fin,v,V}

5.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=C{T/fin,v,V}

6.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		C{T/fin,v,V} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T/fin,v,V} D]
			C{T/fin,v,V} cannot be opened.
			=[C{T/fin,v,V} D]

7.

		Consume "kirja"

		[C{T/fin,v,V} D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[C{T/fin,v,V} D{N}]

8.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[C{T/fin,v,V} D{N}] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC, P(lle).
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [C [T/fin [v [antaa [D kirja]]]]] as left branch because it constitutes illicit structure.
				Avoid [kirja P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[C{T/fin,v,V} D{N}]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[C{T/fin,v,V} [[D kirja] P(lle)]]

9.

		Consume "D"

		[C{T/fin,v,V} [[D kirja] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[C{T/fin,v,V} [[D kirja] P(lle){D}]]

10.

		Consume "Merja-"

		[C{T/fin,v,V} [[D kirja] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[C{T/fin,v,V} [[D kirja] P(lle){D,N}]]

11.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[C{T/fin,v,V} [[D kirja] P(lle){D,N}]]

12.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[C{T/fin,v,V} [[D kirja] P(lle){D,N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [C [<D kirja> [T/fin [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				[D kirja]" has no thematic role
				Avoid [[D kirja] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
		Ranking completed:
			1. [P(lle){D,N}; D]
			2. [[[D kirja] P(lle){D,N}]; D]
			3. [[C{T/fin,v,V} [[D kirja] P(lle){D,N}]]; D]
		Exploring solution number (1) =[P(lle){D,N} D]
			P(lle) was opened.
			=[C{T/fin,v,V} [[D kirja] [[P(lle) [D Merja-]] D]]]

13.

		Consume "Pekka"

		[C{T/fin,v,V} [[D kirja] [[P(lle) [D Merja-]] D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[C{T/fin,v,V} [[D kirja] [[P(lle) [D Merja-]] D{N}]]]

14.
	>>>	Trying candidate parse [C{T/fin,v,V} [[D kirja] [[P(lle) [D Merja-]] D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [C{T/fin,v,V} [[D kirja] [[P(lle) [D Merja-]] D{N}]]].
				Extracted head "T/fin{v,V}" and reconstructed it = [C [[D kirja] [T/fin{v,V} [[P(lle) [D Merja-]] D{N}]]]]
				Extracted head "v{V}" and reconstructed it = [C [[D kirja] [T/fin [v{V} [[P(lle) [D Merja-]] D{N}]]]]]
				Extracted head "antaa" and reconstructed it = [C [[D kirja] [T/fin [v [antaa [[P(lle) [D Merja-]] D{N}]]]]]]
				Extracted head "Pekka" from D and created [C [[D kirja] [T/fin [v [antaa [[P(lle) [D Merja-]] [D Pekka]]]]]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [C [<D kirja>:168 [T/fin [v [<DP>:168 [antaa [[P(lle) [D Merja-]] [D Pekka]]]]]]]]
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [C [<D kirja>:168 [T/fin [<DP>:169 [v [<DP>:168 [antaa [[P(lle) [D Merja-]] <D Pekka>:169]]]]]]]]
				= [C [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]]]]]
			Dropping A-/A-bar movement.
			= [C [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [C [<D kirja>:168 [T/fin [<DP>:169 [v [<DP>:168 [antaa [[P(lle) [D Merja-]] <D Pekka>:169]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 14/141 operations) <------------------------------------
		Solution:
		[C [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]]]]]
		Grammar: [C [<D kirja>:1 [T/fin [<DP>:2 [v [<DP>:1 [antaa [[P(lle) [D Merja-]] <D Pekka>:2]]]]]]]]
		Spellout C/finP = [C/fin [DP:1 [T/fin [__:2 [v [__:1 [V [[P [D N]] DP:2]]]]]]]]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C: [C/fin]
D: [D, C/fin]
kirja: [N, D, C/fin]
T/fin: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
v: [v, T/fin, C/fin]
(D): [D, v, T/fin, C/fin]
(N): [N, D, v, T/fin, C/fin]
antaa: [V, v, T/fin, C/fin]
P(lle): [P, V, v, T/fin, C/fin]
D: [D, P, V, v, T/fin, C/fin]
Merja-: [N, D, P, V, v, T/fin, C/fin]
D: [D, V, v, T/fin, C/fin]
Pekka: [N, D, V, v, T/fin, C/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 37
['antoi', 'Merjalle', 'Pekka', 'kirjan']


			=None

1.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']
			=T/fin

2.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

3.

		Consume "antaa"

		T/fin{v} + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=T/fin{v,V}

4.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		T/fin{v,V} + P(lle)
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} P(lle)]
			T/fin{v,V} cannot be opened.
			=[T/fin{v,V} P(lle)]

5.

		Consume "D"

		[T/fin{v,V} P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[T/fin{v,V} P(lle){D}]

6.

		Consume "Merja-"

		[T/fin{v,V} P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[T/fin{v,V} P(lle){D,N}]

7.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[T/fin{v,V} P(lle){D,N}]

8.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[T/fin{v,V} P(lle){D,N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [P(lle) [D Merja-]]]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
				Avoid P(lle){D,N} because it could break words.
		Ranking completed:
			1. [[T/fin{v,V} P(lle){D,N}]; D]
			2. [P(lle){D,N}; D]
		Exploring solution number (1) =[[T/fin{v,V} P(lle){D,N}] D]
			Reconstructing head movement for [T/fin{v,V} P(lle){D,N}].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} P(lle){D,N}]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa P(lle){D,N}]]]
				Extracted head "D{N}" from P(lle) and created [T/fin [v [antaa [P(lle) D{N}]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [T/fin [v [antaa [P(lle) [D Merja-]]]]]
			Dropping floaters...
				= [T/fin [v [antaa [P(lle) [D Merja-]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [T/fin [v [antaa [P(lle) [D Merja-]]]]].
			=[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D]

9.

		Consume "Pekka"

		[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}]

10.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}]

11.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid DP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				Avoid [[T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>] as left branch because it constitutes illicit structure.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [D{N} D] due to local agreement failure.
				Avoid [Pekka D] due to complement selection.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; D]
			2. [[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}]; D]
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D Pekka] D]]

12.

		Consume "kirja"

		[[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D Pekka] D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D Pekka] D{N}]]

13.
	>>>	Trying candidate parse [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D Pekka] D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D Pekka] D{N}]].
				Extracted head "kirja" from D and created [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D Pekka] [D kirja]]]
			Dropping floaters...
				D failed to tail.
				<D kirja> was made an adjunct.
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D Pekka] <D kirja>]]
			Dropping A-/A-bar movement.
				Moving "T/fin v antaa P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[T/fin [v [V [P [D N]]]]]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				D (D) has a specifier [T/fin [v [antaa [P(lle) [D Merja-]]]]] but is marked for -EPP behavior.
				Extraposition will be tried on [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D Pekka] <D kirja>]].
				<D Pekka> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
			= [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [<D Pekka> <D kirja>]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

T/fin: [T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D]
Pekka: [N, D]
D: [D]
kirja: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}] D]
			Reconstructing head movement for [[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}].
				Extracted head "Pekka" from D and created [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [[T/fin [<DP>:172 [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>:172]
				= [[T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [[T/fin [<DP>:172 [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>:172].
			=[[[T/fin [<DP>:172 [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>:172] D]

14.

		Consume "kirja"

		[[[T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[[T/fin [<DP>:172 [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>:172] D{N}]

15.
	>>>	Trying candidate parse [[[T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>] D{N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[[T/fin [<DP>:172 [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>:172] D{N}].
				Extracted head "kirja" from D and created [[[T/fin [<DP>:172 [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>:172] [D kirja]]
			Dropping floaters...
				D failed to tail.
				<D kirja> was made an adjunct.
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [[[T/fin [<DP>:172 [v [<DP>:173 [antaa [P(lle) [D Merja-]]]]]]] <D Pekka>:172] <D kirja>:173]
				= [[[T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]] <D Pekka>] <D kirja>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [[[T/fin [<DP>:172 [v [<DP>:173 [antaa [P(lle) [D Merja-]]]]]]] <D Pekka>:172] <D kirja>:173].
			= [[[T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]] <D Pekka>] <D kirja>]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D]
Pekka: [N, D]
D: [D]
kirja: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[P(lle){D,N} D]
			P(lle) was opened.
			=[T/fin{v,V} [[P(lle) [D Merja-]] D]]

16.

		Consume "Pekka"

		[T/fin{v,V} [[P(lle) [D Merja-]] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T/fin{v,V} [[P(lle) [D Merja-]] D{N}]]

17.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[T/fin{v,V} [[P(lle) [D Merja-]] D{N}]]

18.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[T/fin{v,V} [[P(lle) [D Merja-]] D{N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				Avoid [T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]] as left branch because it constitutes illicit structure.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [[[P(lle) [D Merja-]] D{N}], D] because the operation breaks up an existing selectional dependency.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [D{N} D] due to local agreement failure.
				Avoid [Pekka D] due to complement selection.
				Prioritize [[P(lle) [D Merja-]] D{N}] because all solutions were negative.
		Ranking completed:
			1. [[[P(lle) [D Merja-]] D{N}]; D]
			2. [[T/fin{v,V} [[P(lle) [D Merja-]] D{N}]]; D]
			3. [D{N}; D]
		Exploring solution number (1) =[[[P(lle) [D Merja-]] D{N}] D]
			Reconstructing head movement for [[P(lle) [D Merja-]] D{N}].
				Extracted head "Pekka" from D and created [[P(lle) [D Merja-]] [D Pekka]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				= [[P(lle) [D Merja-]] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[P [D N]]]
				D (D) has a specifier [P(lle) [D Merja-]] but is marked for -EPP behavior.
				Extraposition will be tried on [[P(lle) [D Merja-]] [D Pekka]].
				<D Pekka> was made adjunct by an extraposition rule.
			=[T/fin{v,V} [[[P(lle) [D Merja-]] <D Pekka>] D]]

19.

		Consume "kirja"

		[T/fin{v,V} [[[P(lle) [D Merja-]] <D Pekka>] D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[T/fin{v,V} [[[P(lle) [D Merja-]] <D Pekka>] D{N}]]

20.
	>>>	Trying candidate parse [T/fin{v,V} [[[P(lle) [D Merja-]] <D Pekka>] D{N}]] (3.)
		Reconstructing...
			Reconstructing head movement for [T/fin{v,V} [[[P(lle) [D Merja-]] <D Pekka>] D{N}]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[[P(lle) [D Merja-]] <D Pekka>] D{N}]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[[P(lle) [D Merja-]] <D Pekka>] D{N}]]]]
				Extracted head "kirja" from D and created [T/fin [v [antaa [[[P(lle) [D Merja-]] <D Pekka>] [D kirja]]]]]
			Dropping floaters...
				<[P(lle) [D Merja-]] <D Pekka>> was made an adjunct.
				Floater <[P(lle) [D Merja-]] <D Pekka>> dropped: [T/fin [v [antaa [[<[P(lle) [D Merja-]] <D Pekka>>:176 [D kirja]] <PP>:176]]]]
				= [T/fin [v [antaa [[<[P(lle) [D Merja-]] <D Pekka>> [D kirja]] <[P(lle) [D Merja-]] <D Pekka>>]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [T/fin [v [antaa [[<[P(lle) [D Merja-]] <D Pekka>>:176 [D kirja]] <PP>:176]]]].
				<D kirja> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
			= [T/fin [v [antaa [[<[P(lle) [D Merja-]] <D Pekka>> <D kirja>] <[P(lle) [D Merja-]] <D Pekka>>]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']

T/fin: [T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
(P): [P, V, v, T/fin]
(D): [D, P, V, v, T/fin]
(N): [N, D, P, V, v, T/fin]
(D): [D, V, v, T/fin]
(N): [N, D, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[T/fin{v,V} [[P(lle) [D Merja-]] D{N}]] D]
			Reconstructing head movement for [T/fin{v,V} [[P(lle) [D Merja-]] D{N}]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[P(lle) [D Merja-]] D{N}]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[P(lle) [D Merja-]] D{N}]]]]
				Extracted head "Pekka" from D and created [T/fin [v [antaa [[P(lle) [D Merja-]] [D Pekka]]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:177 [v [antaa [[P(lle) [D Merja-]] <D Pekka>:177]]]]]
				= [T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [T/fin [<DP>:177 [v [antaa [[P(lle) [D Merja-]] <D Pekka>:177]]]]].
			=[[T/fin [<DP>:177 [v [antaa [[P(lle) [D Merja-]] <D Pekka>:177]]]]] D]

21.

		Consume "kirja"

		[[T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[T/fin [<DP>:177 [v [antaa [[P(lle) [D Merja-]] <D Pekka>:177]]]]] D{N}]

22.
	>>>	Trying candidate parse [[T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]] D{N}] (4.)
		Reconstructing...
			Reconstructing head movement for [[T/fin [<DP>:177 [v [antaa [[P(lle) [D Merja-]] <D Pekka>:177]]]]] D{N}].
				Extracted head "kirja" from D and created [[T/fin [<DP>:177 [v [antaa [[P(lle) [D Merja-]] <D Pekka>:177]]]]] [D kirja]]
			Dropping floaters...
				D failed to tail.
				<D kirja> was made an adjunct.
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [[T/fin [<DP>:177 [v [<DP>:178 [antaa [[P(lle) [D Merja-]] <D Pekka>:177]]]]]] <D kirja>:178]
				= [[T/fin [<D Pekka> [v [<D kirja> [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]]] <D kirja>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [[T/fin [<DP>:177 [v [<DP>:178 [antaa [[P(lle) [D Merja-]] <D Pekka>:177]]]]]] <D kirja>:178].
			= [[T/fin [<D Pekka> [v [<D kirja> [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]]] <D kirja>]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
D: [D]
kirja: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[D{N} D]
			D was opened.
			=[T/fin{v,V} [[P(lle) [D Merja-]] [[D Pekka] D]]]

23.

		Consume "kirja"

		[T/fin{v,V} [[P(lle) [D Merja-]] [[D Pekka] D]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[T/fin{v,V} [[P(lle) [D Merja-]] [[D Pekka] D{N}]]]

24.
	>>>	Trying candidate parse [T/fin{v,V} [[P(lle) [D Merja-]] [[D Pekka] D{N}]]] (5.)
		Reconstructing...
			Reconstructing head movement for [T/fin{v,V} [[P(lle) [D Merja-]] [[D Pekka] D{N}]]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[P(lle) [D Merja-]] [[D Pekka] D{N}]]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[P(lle) [D Merja-]] [[D Pekka] D{N}]]]]]
				Extracted head "kirja" from D and created [T/fin [v [antaa [[P(lle) [D Merja-]] [[D Pekka] [D kirja]]]]]]
			Dropping floaters...
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [T/fin [v [[antaa [<P(lle) [D Merja-]>:179 [[D Pekka] [D kirja]]]] <PP>:179]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:180 [v [[antaa [<P(lle) [D Merja-]>:179 [<D Pekka>:180 [D kirja]]]] <PP>:179]]]]
				= [T/fin [<D Pekka> [v [[antaa [<P(lle) [D Merja-]> [<D Pekka> [D kirja]]]] <P(lle) [D Merja-]>]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at D but its category is unknown!
				An EPP-head "T/fin" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [T/fin [<DP>:180 [v [[antaa [<P(lle) [D Merja-]>:179 [? [<D Pekka>:180 [D kirja]]]]] <PP>:179]]]].
				<D kirja> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
			= [T/fin [<D Pekka> [v [[antaa [<P(lle) [D Merja-]> [? [<D Pekka> <D kirja>]]]] <P(lle) [D Merja-]>]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
?: [?, V, v, T/fin]
D: [D, ?, V, v, T/fin]
Pekka: [N, D, ?, V, v, T/fin]
D: [D, ?, V, v, T/fin]
kirja: [N, D, ?, V, v, T/fin]
(P): [P, v, T/fin]
(D): [D, P, v, T/fin]
(N): [N, D, P, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 38
['antoi#foc', 'Merjalle', 'Pekka', 'kirjan']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'antoi']
			=C

2.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		C + T/fin
			Filtering out impossible merge sites...
			Sink "T/fin" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T/fin]
			=C{T/fin}

3.

		Consume "v"

		C{T/fin} + v
			Filtering out impossible merge sites...
			Sink "v" into C{T/fin} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin}*v]
			=C{T/fin,v}

4.

		Consume "antaa"

		C{T/fin,v} + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into C{T/fin,v} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin,v}*antaa]
			=C{T/fin,v,V}

5.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		C{T/fin,v,V} + P(lle)
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T/fin,v,V} P(lle)]
			C{T/fin,v,V} cannot be opened.
			=[C{T/fin,v,V} P(lle)]

6.

		Consume "D"

		[C{T/fin,v,V} P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[C{T/fin,v,V} P(lle){D}]

7.

		Consume "Merja-"

		[C{T/fin,v,V} P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[C{T/fin,v,V} P(lle){D,N}]

8.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[C{T/fin,v,V} P(lle){D,N}]

9.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[C{T/fin,v,V} P(lle){D,N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
				Avoid P(lle){D,N} because it could break words.
		Ranking completed:
			1. [[C{T/fin,v,V} P(lle){D,N}]; D]
			2. [P(lle){D,N}; D]
		Exploring solution number (1) =[[C{T/fin,v,V} P(lle){D,N}] D]
			Reconstructing head movement for [C{T/fin,v,V} P(lle){D,N}].
				Head reconstruction failed for T/fin{v,V}, merged locally as a last resort.
				Extracted head "T/fin{v,V}" and reconstructed it = [C [T/fin{v,V} P(lle){D,N}]]
				Extracted head "v{V}" and reconstructed it = [C [T/fin [v{V} P(lle){D,N}]]]
				Extracted head "antaa" and reconstructed it = [C [T/fin [v [antaa P(lle){D,N}]]]]
				Extracted head "D{N}" from P(lle) and created [C [T/fin [v [antaa [P(lle) D{N}]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [C [T/fin [v [antaa [P(lle) [D Merja-]]]]]]
			Dropping floaters...
				= [C [T/fin [v [antaa [P(lle) [D Merja-]]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [C [T/fin [v [antaa [P(lle) [D Merja-]]]]]].
			=[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] D]

10.

		Consume "Pekka"

		[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] D{N}]

11.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] D{N}]

12.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [D{N} D] due to local agreement failure.
				Avoid [Pekka D] due to complement selection.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; D]
			2. [[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] D{N}]; D]
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [[D Pekka] D]]

13.

		Consume "kirja"

		[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [[D Pekka] D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [[D Pekka] D{N}]]

14.
	>>>	Trying candidate parse [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [[D Pekka] D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [[D Pekka] D{N}]].
				Extracted head "kirja" from D and created [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [[D Pekka] [D kirja]]]
			Dropping floaters...
				D failed to tail.
				<D kirja> was made an adjunct.
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [[D Pekka] <D kirja>]]
			Dropping A-/A-bar movement.
				Moving "C T/fin v antaa P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[C/fin [T/fin [v [V [P [D N]]]]]]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				D (D) has a specifier [C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] but is marked for -EPP behavior.
				Extraposition will be tried on [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [[D Pekka] <D kirja>]].
				<D Pekka> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
			= [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [<D Pekka> <D kirja>]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
			LF-interface condition(s) violated
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

C: [C/fin]
T/fin: [T/fin, C/fin]
v: [v, T/fin, C/fin]
antaa: [V, v, T/fin, C/fin]
P(lle): [P, V, v, T/fin, C/fin]
D: [D, P, V, v, T/fin, C/fin]
Merja-: [N, D, P, V, v, T/fin, C/fin]
D: [D]
Pekka: [N, D]
D: [D]
kirja: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] D{N}] D]
			Reconstructing head movement for [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] D{N}].
				Extracted head "Pekka" from D and created [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [[C [<DP>:185 [T/fin [v [antaa [P(lle) [D Merja-]]]]]]] <D Pekka>:185]
				<D Pekka> is in an EPP SPEC position.
				<DP>:185 was made an adjunct.
				Floater <D Pekka> dropped: [[C [<DP>:185 [T/fin [<DP>:185 [v [antaa [P(lle) [D Merja-]]]]]]]] <D Pekka>:185]
				= [[C [<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]]] <D Pekka>]
			Dropping A-/A-bar movement.
			=[[[C [<DP>:185 [T/fin [<DP>:185 [v [antaa [P(lle) [D Merja-]]]]]]]] <D Pekka>:185] D]

15.

		Consume "kirja"

		[[[C [<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]]] <D Pekka>] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[[C [<DP>:185 [T/fin [<DP>:185 [v [antaa [P(lle) [D Merja-]]]]]]]] <D Pekka>:185] D{N}]

16.
	>>>	Trying candidate parse [[[C [<D Pekka> [T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]]]] <D Pekka>] D{N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[[C [<DP>:185 [T/fin [<DP>:185 [v [antaa [P(lle) [D Merja-]]]]]]]] <D Pekka>:185] D{N}].
				Extracted head "kirja" from D and created [[[C [<DP>:185 [T/fin [<DP>:185 [v [antaa [P(lle) [D Merja-]]]]]]]] <D Pekka>:185] [D kirja]]
			Dropping floaters...
				D failed to tail.
				<D kirja> was made an adjunct.
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [[[C [<DP>:185 [T/fin [<DP>:185 [v [<DP>:187 [antaa [P(lle) [D Merja-]]]]]]]]] <D Pekka>:185] <D kirja>:187]
				= [[[C [<D Pekka> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]] <D Pekka>] <D kirja>]
			Dropping A-/A-bar movement.
			= [[[C [<D Pekka> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]] <D Pekka>] <D kirja>]
		Checking LF-interface conditions.
			Trying to transfer [[[C [<DP>:185 [T/fin [<DP>:185 [v [<DP>:187 [antaa [P(lle) [D Merja-]]]]]]]]] <D Pekka>:185] <D kirja>:187] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 16/194 operations) <------------------------------------
		Solution:
		[[[C [<D Pekka> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]] <D Pekka>] <D kirja>]
		Grammar: [[[C [<DP>:1 [T/fin [<DP>:1 [v [<DP>:2 [antaa [P(lle) [D Merja-]]]]]]]]] <D Pekka>:1] <D kirja>:2]
		Spellout C/finP = [[[C/fin [__:1 [T/fin [__:1 [v [__:2 [V [P [D N]]]]]]]]] DP:1] DP:2]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

C: [C/fin]
(D): [D, C/fin]
(N): [N, D, C/fin]
T/fin: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
v: [v, T/fin, C/fin]
(D): [D, v, T/fin, C/fin]
(N): [N, D, v, T/fin, C/fin]
antaa: [V, v, T/fin, C/fin]
P(lle): [P, V, v, T/fin, C/fin]
D: [D, P, V, v, T/fin, C/fin]
Merja-: [N, D, P, V, v, T/fin, C/fin]
D: [D]
Pekka: [N, D]
D: [D]
kirja: [N, D]

			Checking if the sentence is ambiguous...


\========================================================================
# 39
['antoi', 'Merjalle', 'kirjan', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']
			=T/fin

2.

		Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=T/fin{v}

3.

		Consume "antaa"

		T/fin{v} + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=T/fin{v,V}

4.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		T/fin{v,V} + P(lle)
			Filtering out impossible merge sites...
		Exploring solution number (1) =[T/fin{v,V} P(lle)]
			T/fin{v,V} cannot be opened.
			=[T/fin{v,V} P(lle)]

5.

		Consume "D"

		[T/fin{v,V} P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[T/fin{v,V} P(lle){D}]

6.

		Consume "Merja-"

		[T/fin{v,V} P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[T/fin{v,V} P(lle){D,N}]

7.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[T/fin{v,V} P(lle){D,N}]

8.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[T/fin{v,V} P(lle){D,N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [P(lle) [D Merja-]]]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
				Avoid P(lle){D,N} because it could break words.
		Ranking completed:
			1. [[T/fin{v,V} P(lle){D,N}]; D]
			2. [P(lle){D,N}; D]
		Exploring solution number (1) =[[T/fin{v,V} P(lle){D,N}] D]
			Reconstructing head movement for [T/fin{v,V} P(lle){D,N}].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} P(lle){D,N}]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa P(lle){D,N}]]]
				Extracted head "D{N}" from P(lle) and created [T/fin [v [antaa [P(lle) D{N}]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [T/fin [v [antaa [P(lle) [D Merja-]]]]]
			Dropping floaters...
				= [T/fin [v [antaa [P(lle) [D Merja-]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [T/fin [v [antaa [P(lle) [D Merja-]]]]].
			=[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D]

9.

		Consume "kirja"

		[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}]

10.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}]

11.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid DP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [[T/fin [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]] <D kirja>] as left branch because it constitutes illicit structure.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [kirja D] due to complement selection.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; D]
			2. [[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}]; D]
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D kirja] D]]

12.

		Consume "Pekka"

		[[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D kirja] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D kirja] D{N}]]

13.
	>>>	Trying candidate parse [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D kirja] D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D kirja] D{N}]].
				Extracted head "Pekka" from D and created [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D kirja] [D Pekka]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				[D kirja] failed to tail [!COMP:*][CAT:v]
				= [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D kirja] <D Pekka>]]
			Dropping A-/A-bar movement.
				Moving "T/fin v antaa P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[T/fin [v [V [P [D N]]]]]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				D (D) has a specifier [T/fin [v [antaa [P(lle) [D Merja-]]]]] but is marked for -EPP behavior.
				Extraposition will be tried on [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [[D kirja] <D Pekka>]].
				<D kirja> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
			= [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [<D kirja> <D Pekka>]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin: [T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D]
kirja: [N, D]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}] D]
			Reconstructing head movement for [[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}].
				Extracted head "kirja" from D and created [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [D kirja]]
			Dropping floaters...
				D failed to tail.
				<D kirja> was made an adjunct.
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [[T/fin [v [<DP>:190 [antaa [P(lle) [D Merja-]]]]]] <D kirja>:190]
				= [[T/fin [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]] <D kirja>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[T/fin [v [<DP>:190 [antaa [P(lle) [D Merja-]]]]]] <D kirja>:190].
			=[[[T/fin [v [<DP>:190 [antaa [P(lle) [D Merja-]]]]]] <D kirja>:190] D]

14.

		Consume "Pekka"

		[[[T/fin [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]] <D kirja>] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[[T/fin [v [<DP>:190 [antaa [P(lle) [D Merja-]]]]]] <D kirja>:190] D{N}]

15.
	>>>	Trying candidate parse [[[T/fin [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]] <D kirja>] D{N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[[T/fin [v [<DP>:190 [antaa [P(lle) [D Merja-]]]]]] <D kirja>:190] D{N}].
				Extracted head "Pekka" from D and created [[[T/fin [v [<DP>:190 [antaa [P(lle) [D Merja-]]]]]] <D kirja>:190] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [[[T/fin [<DP>:191 [v [<DP>:190 [antaa [P(lle) [D Merja-]]]]]]] <D kirja>:190] <D Pekka>:191]
				= [[[T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]] <D kirja>] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [[[T/fin [<DP>:191 [v [<DP>:190 [antaa [P(lle) [D Merja-]]]]]]] <D kirja>:190] <D Pekka>:191].
			= [[[T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]] <D kirja>] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D]
kirja: [N, D]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[P(lle){D,N} D]
			P(lle) was opened.
			=[T/fin{v,V} [[P(lle) [D Merja-]] D]]

16.

		Consume "kirja"

		[T/fin{v,V} [[P(lle) [D Merja-]] D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[T/fin{v,V} [[P(lle) [D Merja-]] D{N}]]

17.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[T/fin{v,V} [[P(lle) [D Merja-]] D{N}]]

18.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[T/fin{v,V} [[P(lle) [D Merja-]] D{N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [[antaa [<P(lle) [D Merja-]> <D kirja>]] <P(lle) [D Merja-]>]]] as left branch because it constitutes illicit structure.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [[[P(lle) [D Merja-]] D{N}], D] because the operation breaks up an existing selectional dependency.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [kirja D] due to complement selection.
				Prioritize [[P(lle) [D Merja-]] D{N}] because all solutions were negative.
		Ranking completed:
			1. [[[P(lle) [D Merja-]] D{N}]; D]
			2. [D{N}; D]
			3. [[T/fin{v,V} [[P(lle) [D Merja-]] D{N}]]; D]
		Exploring solution number (1) =[[[P(lle) [D Merja-]] D{N}] D]
			Reconstructing head movement for [[P(lle) [D Merja-]] D{N}].
				Extracted head "kirja" from D and created [[P(lle) [D Merja-]] [D kirja]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				= [[P(lle) [D Merja-]] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[P [D N]]]
				D (D) has a specifier [P(lle) [D Merja-]] but is marked for -EPP behavior.
				Extraposition will be tried on [[P(lle) [D Merja-]] [D kirja]].
				<D kirja> was made adjunct by an extraposition rule.
			=[T/fin{v,V} [[[P(lle) [D Merja-]] <D kirja>] D]]

19.

		Consume "Pekka"

		[T/fin{v,V} [[[P(lle) [D Merja-]] <D kirja>] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T/fin{v,V} [[[P(lle) [D Merja-]] <D kirja>] D{N}]]

20.
	>>>	Trying candidate parse [T/fin{v,V} [[[P(lle) [D Merja-]] <D kirja>] D{N}]] (3.)
		Reconstructing...
			Reconstructing head movement for [T/fin{v,V} [[[P(lle) [D Merja-]] <D kirja>] D{N}]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[[P(lle) [D Merja-]] <D kirja>] D{N}]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[[P(lle) [D Merja-]] <D kirja>] D{N}]]]]
				Extracted head "Pekka" from D and created [T/fin [v [antaa [[[P(lle) [D Merja-]] <D kirja>] [D Pekka]]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:194 [v [antaa [[[P(lle) [D Merja-]] <D kirja>] <D Pekka>:194]]]]]
				= [T/fin [<D Pekka> [v [antaa [[[P(lle) [D Merja-]] <D kirja>] <D Pekka>]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [T/fin [<DP>:194 [v [antaa [[[P(lle) [D Merja-]] <D kirja>] <D Pekka>:194]]]]].
			= [T/fin [<D Pekka> [v [antaa [[[P(lle) [D Merja-]] <D kirja>] <D Pekka>]]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} D]
			D was opened.
			=[T/fin{v,V} [[P(lle) [D Merja-]] [[D kirja] D]]]

21.

		Consume "Pekka"

		[T/fin{v,V} [[P(lle) [D Merja-]] [[D kirja] D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[T/fin{v,V} [[P(lle) [D Merja-]] [[D kirja] D{N}]]]

22.
	>>>	Trying candidate parse [T/fin{v,V} [[P(lle) [D Merja-]] [[D kirja] D{N}]]] (4.)
		Reconstructing...
			Reconstructing head movement for [T/fin{v,V} [[P(lle) [D Merja-]] [[D kirja] D{N}]]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[P(lle) [D Merja-]] [[D kirja] D{N}]]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[P(lle) [D Merja-]] [[D kirja] D{N}]]]]]
				Extracted head "Pekka" from D and created [T/fin [v [antaa [[P(lle) [D Merja-]] [[D kirja] [D Pekka]]]]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [T/fin [<DP>:195 [v [antaa [[P(lle) [D Merja-]] [[D kirja] <D Pekka>:195]]]]]]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [T/fin [<DP>:195 [v [[antaa [<P(lle) [D Merja-]>:196 [[D kirja] <D Pekka>:195]]] <PP>:196]]]]
				[D kirja] cannot be made an adjunct because its sister is an adjunct.
				Floater [D kirja] dropped: [T/fin [<DP>:195 [v [(DP):197 [[antaa [<P(lle) [D Merja-]>:196 [[D kirja]:197 <D Pekka>:195]]] <PP>:196]]]]]
				= [T/fin [<D Pekka> [v [[D kirja] [[antaa [<P(lle) [D Merja-]> [[D kirja] <D Pekka>]]] <P(lle) [D Merja-]>]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [T/fin [<DP>:195 [v [(DP):197 [[antaa [<P(lle) [D Merja-]>:196 [[D kirja]:197 <D Pekka>:195]]] <PP>:196]]]]].
				<D kirja>:197 was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
			= [T/fin [<D Pekka> [v [[D kirja] [[antaa [<P(lle) [D Merja-]> [<D kirja> <D Pekka>]]] <P(lle) [D Merja-]>]]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
(P): [P, v, T/fin]
(D): [D, P, v, T/fin]
(N): [N, D, P, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (3) =[[T/fin{v,V} [[P(lle) [D Merja-]] D{N}]] D]
			Reconstructing head movement for [T/fin{v,V} [[P(lle) [D Merja-]] D{N}]].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} [[P(lle) [D Merja-]] D{N}]]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa [[P(lle) [D Merja-]] D{N}]]]]
				Extracted head "kirja" from D and created [T/fin [v [antaa [[P(lle) [D Merja-]] [D kirja]]]]]
			Dropping floaters...
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [T/fin [v [[antaa [<P(lle) [D Merja-]>:198 [D kirja]]] <PP>:198]]]
				= [T/fin [v [[antaa [<P(lle) [D Merja-]> [D kirja]]] <P(lle) [D Merja-]>]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [T/fin [v [[antaa [<P(lle) [D Merja-]>:198 [D kirja]]] <PP>:198]]].
				<D kirja> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
			=[[T/fin [v [[antaa [<P(lle) [D Merja-]>:198 <D kirja>]] <PP>:198]]] D]

23.

		Consume "Pekka"

		[[T/fin [v [[antaa [<P(lle) [D Merja-]> <D kirja>]] <P(lle) [D Merja-]>]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[T/fin [v [[antaa [<P(lle) [D Merja-]>:198 <D kirja>]] <PP>:198]]] D{N}]

24.
	>>>	Trying candidate parse [[T/fin [v [[antaa [<P(lle) [D Merja-]> <D kirja>]] <P(lle) [D Merja-]>]]] D{N}] (5.)
		Reconstructing...
			Reconstructing head movement for [[T/fin [v [[antaa [<P(lle) [D Merja-]>:198 <D kirja>]] <PP>:198]]] D{N}].
				Extracted head "Pekka" from D and created [[T/fin [v [[antaa [<P(lle) [D Merja-]>:198 <D kirja>]] <PP>:198]]] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [[T/fin [<DP>:199 [v [[antaa [<P(lle) [D Merja-]>:198 <D kirja>]] <PP>:198]]]] <D Pekka>:199]
				= [[T/fin [<D Pekka> [v [[antaa [<P(lle) [D Merja-]> <D kirja>]] <P(lle) [D Merja-]>]]]] <D Pekka>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				Extraposition will be tried on [[T/fin [<DP>:199 [v [[antaa [<P(lle) [D Merja-]>:198 <D kirja>]] <PP>:198]]]] <D Pekka>:199].
			= [[T/fin [<D Pekka> [v [[antaa [<P(lle) [D Merja-]> <D kirja>]] <P(lle) [D Merja-]>]]]] <D Pekka>]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
(P): [P, v, T/fin]
(D): [D, P, v, T/fin]
(N): [N, D, P, v, T/fin]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 40
['antoi#foc', 'Merjalle', 'kirjan', 'Pekka']


			=None

1.
				Prosodic feature [foc] interpreted as a C morpheme
		Next word contains multiple morphemes ['$C/fin', 'antoi']
			=C

2.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		C + T/fin
			Filtering out impossible merge sites...
			Sink "T/fin" into C because they are inside the same phonological word.
		Exploring solution number (1) =[C*T/fin]
			=C{T/fin}

3.

		Consume "v"

		C{T/fin} + v
			Filtering out impossible merge sites...
			Sink "v" into C{T/fin} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin}*v]
			=C{T/fin,v}

4.

		Consume "antaa"

		C{T/fin,v} + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into C{T/fin,v} because they are inside the same phonological word.
		Exploring solution number (1) =[C{T/fin,v}*antaa]
			=C{T/fin,v,V}

5.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		C{T/fin,v,V} + P(lle)
			Filtering out impossible merge sites...
		Exploring solution number (1) =[C{T/fin,v,V} P(lle)]
			C{T/fin,v,V} cannot be opened.
			=[C{T/fin,v,V} P(lle)]

6.

		Consume "D"

		[C{T/fin,v,V} P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[C{T/fin,v,V} P(lle){D}]

7.

		Consume "Merja-"

		[C{T/fin,v,V} P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[C{T/fin,v,V} P(lle){D,N}]

8.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[C{T/fin,v,V} P(lle){D,N}]

9.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[C{T/fin,v,V} P(lle){D,N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid C/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
				Avoid P(lle){D,N} because it could break words.
		Ranking completed:
			1. [[C{T/fin,v,V} P(lle){D,N}]; D]
			2. [P(lle){D,N}; D]
		Exploring solution number (1) =[[C{T/fin,v,V} P(lle){D,N}] D]
			Reconstructing head movement for [C{T/fin,v,V} P(lle){D,N}].
				Head reconstruction failed for T/fin{v,V}, merged locally as a last resort.
				Extracted head "T/fin{v,V}" and reconstructed it = [C [T/fin{v,V} P(lle){D,N}]]
				Extracted head "v{V}" and reconstructed it = [C [T/fin [v{V} P(lle){D,N}]]]
				Extracted head "antaa" and reconstructed it = [C [T/fin [v [antaa P(lle){D,N}]]]]
				Extracted head "D{N}" from P(lle) and created [C [T/fin [v [antaa [P(lle) D{N}]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [C [T/fin [v [antaa [P(lle) [D Merja-]]]]]]
			Dropping floaters...
				= [C [T/fin [v [antaa [P(lle) [D Merja-]]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [C [T/fin [v [antaa [P(lle) [D Merja-]]]]]].
			=[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] D]

10.

		Consume "kirja"

		[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] D{N}]

11.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] D{N}]

12.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid DP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [[C [T/fin [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]] <D kirja>] as left branch because it constitutes illicit structure.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [kirja D] due to complement selection.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; D]
			2. [[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] D{N}]; D]
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [[D kirja] D]]

13.

		Consume "Pekka"

		[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [[D kirja] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [[D kirja] D{N}]]

14.
	>>>	Trying candidate parse [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [[D kirja] D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [[D kirja] D{N}]].
				Extracted head "Pekka" from D and created [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [[D kirja] [D Pekka]]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				[D kirja] failed to tail [!COMP:*][CAT:v]
				= [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [[D kirja] <D Pekka>]]
			Dropping A-/A-bar movement.
				Moving "C T/fin v antaa P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[C/fin [T/fin [v [V [P [D N]]]]]]]
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				D (D) has a specifier [C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] but is marked for -EPP behavior.
				Extraposition will be tried on [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [[D kirja] <D Pekka>]].
				<D kirja> was made adjunct by an extraposition rule.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
			= [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [<D kirja> <D Pekka>]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
			LF-interface condition(s) violated
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C: [C/fin]
T/fin: [T/fin, C/fin]
v: [v, T/fin, C/fin]
antaa: [V, v, T/fin, C/fin]
P(lle): [P, V, v, T/fin, C/fin]
D: [D, P, V, v, T/fin, C/fin]
Merja-: [N, D, P, V, v, T/fin, C/fin]
D: [D]
kirja: [N, D]
D: [D]
Pekka: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] D{N}] D]
			Reconstructing head movement for [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] D{N}].
				Extracted head "kirja" from D and created [[C [T/fin [v [antaa [P(lle) [D Merja-]]]]]] [D kirja]]
			Dropping floaters...
				D failed to tail.
				<D kirja> was made an adjunct.
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [[C [T/fin [v [<DP>:202 [antaa [P(lle) [D Merja-]]]]]]] <D kirja>:202]
				= [[C [T/fin [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]] <D kirja>]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[C [T/fin [v [<DP>:202 [antaa [P(lle) [D Merja-]]]]]]] <D kirja>:202].
			=[[[C [T/fin [v [<DP>:202 [antaa [P(lle) [D Merja-]]]]]]] <D kirja>:202] D]

15.

		Consume "Pekka"

		[[[C [T/fin [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]] <D kirja>] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[[C [T/fin [v [<DP>:202 [antaa [P(lle) [D Merja-]]]]]]] <D kirja>:202] D{N}]

16.
	>>>	Trying candidate parse [[[C [T/fin [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]] <D kirja>] D{N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[[C [T/fin [v [<DP>:202 [antaa [P(lle) [D Merja-]]]]]]] <D kirja>:202] D{N}].
				Extracted head "Pekka" from D and created [[[C [T/fin [v [<DP>:202 [antaa [P(lle) [D Merja-]]]]]]] <D kirja>:202] [D Pekka]]
			Dropping floaters...
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [[[C [<DP>:203 [T/fin [v [<DP>:202 [antaa [P(lle) [D Merja-]]]]]]]] <D kirja>:202] <D Pekka>:203]
				<D Pekka> is in an EPP SPEC position.
				<DP>:203 was made an adjunct.
				Floater <D Pekka> dropped: [[[C [<DP>:203 [T/fin [<DP>:203 [v [<DP>:202 [antaa [P(lle) [D Merja-]]]]]]]]] <D kirja>:202] <D Pekka>:203]
				= [[[C [<D Pekka> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]] <D kirja>] <D Pekka>]
			Dropping A-/A-bar movement.
			= [[[C [<D Pekka> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]] <D kirja>] <D Pekka>]
		Checking LF-interface conditions.
			Trying to transfer [[[C [<DP>:203 [T/fin [<DP>:203 [v [<DP>:202 [antaa [P(lle) [D Merja-]]]]]]]]] <D kirja>:202] <D Pekka>:203] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 16/199 operations) <------------------------------------
		Solution:
		[[[C [<D Pekka> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]] <D kirja>] <D Pekka>]
		Grammar: [[[C [<DP>:1 [T/fin [<DP>:1 [v [<DP>:2 [antaa [P(lle) [D Merja-]]]]]]]]] <D kirja>:2] <D Pekka>:1]
		Spellout C/finP = [[[C/fin [__:1 [T/fin [__:1 [v [__:2 [V [P [D N]]]]]]]]] DP:2] DP:1]
C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C:['!COMP:*', '!PROBE:CAT:FIN', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', 'A/HEAD', 'CAT:C/fin', 'CAT:C/fin/FIN', 'CAT:FIN', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:FI', 'LF:C/fin', 'PF:C', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

C: [C/fin]
(D): [D, C/fin]
(N): [N, D, C/fin]
T/fin: [T/fin, C/fin]
(D): [D, T/fin, C/fin]
(N): [N, D, T/fin, C/fin]
v: [v, T/fin, C/fin]
(D): [D, v, T/fin, C/fin]
(N): [N, D, v, T/fin, C/fin]
antaa: [V, v, T/fin, C/fin]
P(lle): [P, V, v, T/fin, C/fin]
D: [D, P, V, v, T/fin, C/fin]
Merja-: [N, D, P, V, v, T/fin, C/fin]
D: [D]
kirja: [N, D]
D: [D]
Pekka: [N, D]

			Checking if the sentence is ambiguous...


\========================================================================
# 41
['kirjan', 'Pekka', 'antoi', 'Merjalle']


			=None

1.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
			=D

3.

		Consume "kirja"

		D + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=D{N}

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=D{N}

5.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D kirja] D]

6.

		Consume "Pekka"

		[[D kirja] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D kirja] D{N}]

7.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[D kirja] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [Pekka T/fin] due to complement selection.
		Ranking completed:
			1. [[[D kirja] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[D kirja] D{N}] T/fin]
			Reconstructing head movement for [[D kirja] D{N}].
				Extracted head "Pekka" from D and created [[D kirja] [D Pekka]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				= [[D kirja] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "D".
				Memory buffer: [[D N]]
				D (D) has a specifier [D kirja] but is marked for -EPP behavior.
				Extraposition will be tried on [[D kirja] [D Pekka]].
				<D Pekka> was made adjunct by an extraposition rule.
			=[[[D kirja] <D Pekka>] T/fin]

8.

		Consume "v"

		[[[D kirja] <D Pekka>] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[D kirja] <D Pekka>] T/fin{v}]

9.

		Consume "antaa"

		[[[D kirja] <D Pekka>] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[D kirja] <D Pekka>] T/fin{v,V}]

10.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[[D kirja] <D Pekka>] T/fin{v,V}] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				Avoid [<[D kirja] <D Pekka>> [T/fin [v [<[D kirja] <D Pekka>> antaa]]]] as left branch because it constitutes illicit structure.
				Prioritize [antaa P(lle)] due to complement selection.
		Ranking completed:
			1. [T/fin{v,V}; P(lle)]
			2. [[[[D kirja] <D Pekka>] T/fin{v,V}]; P(lle)]
		Exploring solution number (1) =[T/fin{v,V} P(lle)]
			T/fin{v,V} cannot be opened.
			=[[[D kirja] <D Pekka>] [T/fin{v,V} P(lle)]]

11.

		Consume "D"

		[[[D kirja] <D Pekka>] [T/fin{v,V} P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[[D kirja] <D Pekka>] [T/fin{v,V} P(lle){D}]]

12.

		Consume "Merja-"

		[[[D kirja] <D Pekka>] [T/fin{v,V} P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[[D kirja] <D Pekka>] [T/fin{v,V} P(lle){D,N}]]

13.
	>>>	Trying candidate parse [[[D kirja] <D Pekka>] [T/fin{v,V} P(lle){D,N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[[D kirja] <D Pekka>] [T/fin{v,V} P(lle){D,N}]].
				Extracted head "v{V}" and reconstructed it = [[[D kirja] <D Pekka>] [T/fin [v{V} P(lle){D,N}]]]
				Extracted head "antaa" and reconstructed it = [[[D kirja] <D Pekka>] [T/fin [v [antaa P(lle){D,N}]]]]
				Extracted head "D{N}" from P(lle) and created [[[D kirja] <D Pekka>] [T/fin [v [antaa [P(lle) D{N}]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[[D kirja] <D Pekka>] [T/fin [v [antaa [P(lle) [D Merja-]]]]]]
			Dropping floaters...
				[[D kirja] <D Pekka>] failed to tail [!COMP:*][CAT:v]
				<[D kirja] <D Pekka>> was made an adjunct.
				Floater <[D kirja] <D Pekka>> dropped: [<[D kirja] <D Pekka>>:207 [T/fin [v [<DP>:207 [antaa [P(lle) [D Merja-]]]]]]]
				= [<[D kirja] <D Pekka>> [T/fin [v [<[D kirja] <D Pekka>> [antaa [P(lle) [D Merja-]]]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [<[D kirja] <D Pekka>>:207 [T/fin [v [<DP>:207 [antaa [P(lle) [D Merja-]]]]]]].
			= [<[D kirja] <D Pekka>> [T/fin [v [<[D kirja] <D Pekka>> [antaa [P(lle) [D Merja-]]]]]]]
		Checking LF-interface conditions.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
kirja: [N, D]
D: [D]
Pekka: [N, D]
T/fin: [T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D kirja] <D Pekka>] T/fin{v,V}] P(lle)]
			Reconstructing head movement for [[[D kirja] <D Pekka>] T/fin{v,V}].
				Extracted head "v{V}" from T/fin and created [[[D kirja] <D Pekka>] [T/fin v{V}]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[[D kirja] <D Pekka>] [T/fin [v antaa]]]
			Dropping floaters...
				[[D kirja] <D Pekka>] failed to tail [!COMP:*][CAT:v]
				<[D kirja] <D Pekka>> was made an adjunct.
				Floater <[D kirja] <D Pekka>> dropped: [<[D kirja] <D Pekka>>:208 [T/fin [v [<DP>:208 antaa]]]]
				= [<[D kirja] <D Pekka>> [T/fin [v [<[D kirja] <D Pekka>> antaa]]]]
			Dropping A-/A-bar movement.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [<[D kirja] <D Pekka>>:208 [T/fin [v [<DP>:208 antaa]]]].
			=[[<[D kirja] <D Pekka>>:208 [T/fin [v [<DP>:208 antaa]]]] P(lle)]

14.

		Consume "D"

		[[<[D kirja] <D Pekka>> [T/fin [v [<[D kirja] <D Pekka>> antaa]]]] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[<[D kirja] <D Pekka>>:208 [T/fin [v [<DP>:208 antaa]]]] P(lle){D}]

15.

		Consume "Merja-"

		[[<[D kirja] <D Pekka>> [T/fin [v [<[D kirja] <D Pekka>> antaa]]]] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[<[D kirja] <D Pekka>>:208 [T/fin [v [<DP>:208 antaa]]]] P(lle){D,N}]

16.
	>>>	Trying candidate parse [[<[D kirja] <D Pekka>> [T/fin [v [<[D kirja] <D Pekka>> antaa]]]] P(lle){D,N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[<[D kirja] <D Pekka>>:208 [T/fin [v [<DP>:208 antaa]]]] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[<[D kirja] <D Pekka>>:208 [T/fin [v [<DP>:208 antaa]]]] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[<[D kirja] <D Pekka>>:208 [T/fin [v [<DP>:208 antaa]]]] [P(lle) [D Merja-]]]
			Dropping floaters...
				P(lle) failed to tail.
				<P(lle) [D Merja-]> was made an adjunct.
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [[<[D kirja] <D Pekka>>:208 [T/fin [v [[<DP>:208 antaa] <PP>:209]]]] <P(lle) [D Merja-]>:209]
				= [[<[D kirja] <D Pekka>> [T/fin [v [[<[D kirja] <D Pekka>> antaa] <P(lle) [D Merja-]>]]]] <P(lle) [D Merja-]>]
			Dropping A-/A-bar movement.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [[<[D kirja] <D Pekka>>:208 [T/fin [v [[<DP>:208 antaa] <PP>:209]]]] <P(lle) [D Merja-]>:209].
			= [[<[D kirja] <D Pekka>> [T/fin [v [[<[D kirja] <D Pekka>> antaa] <P(lle) [D Merja-]>]]]] <P(lle) [D Merja-]>]
		Checking LF-interface conditions.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
kirja: [N, D]
D: [D]
Pekka: [N, D]
T/fin: [T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
antaa: [V, v, T/fin]
(P): [P, v, T/fin]
(D): [D, P, v, T/fin]
(N): [N, D, P, v, T/fin]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[D kirja] [[D Pekka] T/fin]]

17.

		Consume "v"

		[[D kirja] [[D Pekka] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D kirja] [[D Pekka] T/fin{v}]]

18.

		Consume "antaa"

		[[D kirja] [[D Pekka] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D kirja] [[D Pekka] T/fin{v,V}]]

19.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D kirja] [[D Pekka] T/fin{v,V}]] + P(lle)
			Filtering out impossible merge sites...
				Reject [[<D kirja> [? [<D Pekka> [T/fin [<D Pekka> [v [<D kirja> antaa]]]]]]] P(lle)] due to bad left branch.
				Reject [[<D Pekka> [T/fin [<D Pekka> [v antaa]]]] P(lle)] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} P(lle)]
			T/fin{v,V} cannot be opened.
			=[[D kirja] [[D Pekka] [T/fin{v,V} P(lle)]]]

20.

		Consume "D"

		[[D kirja] [[D Pekka] [T/fin{v,V} P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D kirja] [[D Pekka] [T/fin{v,V} P(lle){D}]]]

21.

		Consume "Merja-"

		[[D kirja] [[D Pekka] [T/fin{v,V} P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D kirja] [[D Pekka] [T/fin{v,V} P(lle){D,N}]]]

22.
	>>>	Trying candidate parse [[D kirja] [[D Pekka] [T/fin{v,V} P(lle){D,N}]]] (3.)
		Reconstructing...
			Reconstructing head movement for [[D kirja] [[D Pekka] [T/fin{v,V} P(lle){D,N}]]].
				Extracted head "v{V}" and reconstructed it = [[D kirja] [[D Pekka] [T/fin [v{V} P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [[D kirja] [[D Pekka] [T/fin [v [antaa P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [[D kirja] [[D Pekka] [T/fin [v [antaa [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D kirja] [[D Pekka] [T/fin [v [antaa [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D kirja>:213 [[D Pekka] [T/fin [v [<DP>:213 [antaa [P(lle) [D Merja-]]]]]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D kirja>:213 [<D Pekka>:214 [T/fin [<DP>:214 [v [<DP>:213 [antaa [P(lle) [D Merja-]]]]]]]]]
				= [<D kirja> [<D Pekka> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<D kirja>:213 [? [<D Pekka>:214 [T/fin [<DP>:214 [v [<DP>:213 [antaa [P(lle) [D Merja-]]]]]]]]]].
			= [<D kirja> [? [<D Pekka> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
kirja: [N, D]
?: [?]
D: [D, ?]
Pekka: [N, D, ?]
T/fin: [T/fin, ?]
(D): [D, T/fin, ?]
(N): [N, D, T/fin, ?]
v: [v, T/fin, ?]
(D): [D, v, T/fin, ?]
(N): [N, D, v, T/fin, ?]
antaa: [V, v, T/fin, ?]
P(lle): [P, V, v, T/fin, ?]
D: [D, P, V, v, T/fin, ?]
Merja-: [N, D, P, V, v, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 42
['kirjan#foc', 'Pekka', 'antoi', 'Merjalle']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'kirjan']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "kirjan"

			=None

2.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'TAIL:CAT:v,!COMP:*', 'LANG:FI', 'ABAR:FOC'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
			=D

4.

		Consume "kirja"

		D + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=D{N}

5.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D kirja] D]

7.

		Consume "Pekka"

		[[D kirja] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D kirja] D{N}]

8.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[D kirja] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [Pekka T/fin] due to complement selection.
		Ranking completed:
			1. [[[D kirja] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[D kirja] D{N}] T/fin]
			Reconstructing head movement for [[D kirja] D{N}].
				Extracted head "Pekka" from D and created [[D kirja] [D Pekka]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				= [[D kirja] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "D".
				Criterial features {'FOC'} copied to {'D'}
				Tail features [A/HEAD][CAT:FIN] were detected at D, this must head an adjunct floater.
				<D Pekka> was made an adjunct.
				Memory buffer: [[D N]]
			=[[[D kirja] <D Pekka>] T/fin]

9.

		Consume "v"

		[[[D kirja] <D Pekka>] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[D kirja] <D Pekka>] T/fin{v}]

10.

		Consume "antaa"

		[[[D kirja] <D Pekka>] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[D kirja] <D Pekka>] T/fin{v,V}]

11.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[[D kirja] <D Pekka>] T/fin{v,V}] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				Avoid [<[D kirja] <D Pekka>> [T/fin [v [<[D kirja] <D Pekka>> antaa]]]] as left branch because it constitutes illicit structure.
				Prioritize [antaa P(lle)] due to complement selection.
		Ranking completed:
			1. [T/fin{v,V}; P(lle)]
			2. [[[[D kirja] <D Pekka>] T/fin{v,V}]; P(lle)]
		Exploring solution number (1) =[T/fin{v,V} P(lle)]
			T/fin{v,V} cannot be opened.
			=[[[D kirja] <D Pekka>] [T/fin{v,V} P(lle)]]

12.

		Consume "D"

		[[[D kirja] <D Pekka>] [T/fin{v,V} P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[[D kirja] <D Pekka>] [T/fin{v,V} P(lle){D}]]

13.

		Consume "Merja-"

		[[[D kirja] <D Pekka>] [T/fin{v,V} P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[[D kirja] <D Pekka>] [T/fin{v,V} P(lle){D,N}]]

14.
	>>>	Trying candidate parse [[[D kirja] <D Pekka>] [T/fin{v,V} P(lle){D,N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[[D kirja] <D Pekka>] [T/fin{v,V} P(lle){D,N}]].
				Extracted head "v{V}" and reconstructed it = [[[D kirja] <D Pekka>] [T/fin [v{V} P(lle){D,N}]]]
				Extracted head "antaa" and reconstructed it = [[[D kirja] <D Pekka>] [T/fin [v [antaa P(lle){D,N}]]]]
				Extracted head "D{N}" from P(lle) and created [[[D kirja] <D Pekka>] [T/fin [v [antaa [P(lle) D{N}]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[[D kirja] <D Pekka>] [T/fin [v [antaa [P(lle) [D Merja-]]]]]]
			Dropping floaters...
				[[D kirja] <D Pekka>] failed to tail [!COMP:*][CAT:v]
				<[D kirja] <D Pekka>> was made an adjunct.
				Floater <[D kirja] <D Pekka>> dropped: [<[D kirja] <D Pekka>>:217 [T/fin [v [<DP>:217 [antaa [P(lle) [D Merja-]]]]]]]
				= [<[D kirja] <D Pekka>> [T/fin [v [<[D kirja] <D Pekka>> [antaa [P(lle) [D Merja-]]]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'FIN', 'T/fin', 'FIN/T/fin'}
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [<[D kirja] <D Pekka>>:217 [T/fin [v [<DP>:217 [antaa [P(lle) [D Merja-]]]]]]].
			= [<[D kirja] <D Pekka>> [T/fin [v [<[D kirja] <D Pekka>> [antaa [P(lle) [D Merja-]]]]]]]
		Checking LF-interface conditions.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
kirja: [N, D]
D: [D]
Pekka: [N, D]
T/fin: [T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[D kirja] <D Pekka>] T/fin{v,V}] P(lle)]
			Reconstructing head movement for [[[D kirja] <D Pekka>] T/fin{v,V}].
				Extracted head "v{V}" from T/fin and created [[[D kirja] <D Pekka>] [T/fin v{V}]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[[D kirja] <D Pekka>] [T/fin [v antaa]]]
			Dropping floaters...
				[[D kirja] <D Pekka>] failed to tail [!COMP:*][CAT:v]
				<[D kirja] <D Pekka>> was made an adjunct.
				Floater <[D kirja] <D Pekka>> dropped: [<[D kirja] <D Pekka>>:218 [T/fin [v [<DP>:218 antaa]]]]
				= [<[D kirja] <D Pekka>> [T/fin [v [<[D kirja] <D Pekka>> antaa]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'FIN', 'T/fin', 'FIN/T/fin'}
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [<[D kirja] <D Pekka>>:218 [T/fin [v [<DP>:218 antaa]]]].
			=[[<[D kirja] <D Pekka>>:218 [T/fin [v [<DP>:218 antaa]]]] P(lle)]

15.

		Consume "D"

		[[<[D kirja] <D Pekka>> [T/fin [v [<[D kirja] <D Pekka>> antaa]]]] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[<[D kirja] <D Pekka>>:218 [T/fin [v [<DP>:218 antaa]]]] P(lle){D}]

16.

		Consume "Merja-"

		[[<[D kirja] <D Pekka>> [T/fin [v [<[D kirja] <D Pekka>> antaa]]]] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[<[D kirja] <D Pekka>>:218 [T/fin [v [<DP>:218 antaa]]]] P(lle){D,N}]

17.
	>>>	Trying candidate parse [[<[D kirja] <D Pekka>> [T/fin [v [<[D kirja] <D Pekka>> antaa]]]] P(lle){D,N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[<[D kirja] <D Pekka>>:218 [T/fin [v [<DP>:218 antaa]]]] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[<[D kirja] <D Pekka>>:218 [T/fin [v [<DP>:218 antaa]]]] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[<[D kirja] <D Pekka>>:218 [T/fin [v [<DP>:218 antaa]]]] [P(lle) [D Merja-]]]
			Dropping floaters...
				P(lle) failed to tail.
				<P(lle) [D Merja-]> was made an adjunct.
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [[<[D kirja] <D Pekka>>:218 [T/fin [v [[<DP>:218 antaa] <PP>:219]]]] <P(lle) [D Merja-]>:219]
				= [[<[D kirja] <D Pekka>> [T/fin [v [[<[D kirja] <D Pekka>> antaa] <P(lle) [D Merja-]>]]]] <P(lle) [D Merja-]>]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'T/fin', 'uFOC', 'iFOC', 'FIN/T/fin', 'FIN', 'FIN/FIN/T/fin/T/fin/iFOC/uFOC'}
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [[<[D kirja] <D Pekka>>:218 [T/fin [v [[<DP>:218 antaa] <PP>:219]]]] <P(lle) [D Merja-]>:219].
			= [[<[D kirja] <D Pekka>> [T/fin [v [[<[D kirja] <D Pekka>> antaa] <P(lle) [D Merja-]>]]]] <P(lle) [D Merja-]>]
		Checking LF-interface conditions.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/FIN/T/fin/T/fin/iFOC/uFOC/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
kirja: [N, D]
D: [D]
Pekka: [N, D]
T/fin: [T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
antaa: [V, v, T/fin]
(P): [P, v, T/fin]
(D): [D, P, v, T/fin]
(N): [N, D, P, v, T/fin]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]


		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[D kirja] [[D Pekka] T/fin]]

18.

		Consume "v"

		[[D kirja] [[D Pekka] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D kirja] [[D Pekka] T/fin{v}]]

19.

		Consume "antaa"

		[[D kirja] [[D Pekka] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D kirja] [[D Pekka] T/fin{v,V}]]

20.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D kirja] [[D Pekka] T/fin{v,V}]] + P(lle)
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v antaa]]]] P(lle)] due to bad left branch.
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				Prioritize [antaa P(lle)] due to complement selection.
		Ranking completed:
			1. [T/fin{v,V}; P(lle)]
			2. [[[D kirja] [[D Pekka] T/fin{v,V}]]; P(lle)]
		Exploring solution number (1) =[T/fin{v,V} P(lle)]
			T/fin{v,V} cannot be opened.
			=[[D kirja] [[D Pekka] [T/fin{v,V} P(lle)]]]

21.

		Consume "D"

		[[D kirja] [[D Pekka] [T/fin{v,V} P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D kirja] [[D Pekka] [T/fin{v,V} P(lle){D}]]]

22.

		Consume "Merja-"

		[[D kirja] [[D Pekka] [T/fin{v,V} P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D kirja] [[D Pekka] [T/fin{v,V} P(lle){D,N}]]]

23.
	>>>	Trying candidate parse [[D kirja] [[D Pekka] [T/fin{v,V} P(lle){D,N}]]] (3.)
		Reconstructing...
			Reconstructing head movement for [[D kirja] [[D Pekka] [T/fin{v,V} P(lle){D,N}]]].
				Extracted head "v{V}" and reconstructed it = [[D kirja] [[D Pekka] [T/fin [v{V} P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [[D kirja] [[D Pekka] [T/fin [v [antaa P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [[D kirja] [[D Pekka] [T/fin [v [antaa [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D kirja] [[D Pekka] [T/fin [v [antaa [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D kirja>:225 [[D Pekka] [T/fin [v [<DP>:225 [antaa [P(lle) [D Merja-]]]]]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D kirja>:225 [<D Pekka>:226 [T/fin [<DP>:226 [v [<DP>:225 [antaa [P(lle) [D Merja-]]]]]]]]]
				= [<D kirja> [<D Pekka> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]]
			Dropping A-/A-bar movement.
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
			= [<D kirja> [uFOC [<D Pekka> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D kirja>:225 [uFOC [<D Pekka>:226 [T/fin [<DP>:226 [v [<DP>:225 [antaa [P(lle) [D Merja-]]]]]]]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 23/279 operations) <------------------------------------
		Solution:
		[<D kirja> [uFOC [<D Pekka> [T/fin [<D Pekka> [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]]]]]
		Grammar: [<D kirja>:1 [uFOC [<D Pekka>:2 [T/fin [<DP>:2 [v [<DP>:1 [antaa [P(lle) [D Merja-]]]]]]]]]]
		Spellout P = [DP:1 [ [DP:2 [T/fin [__:2 [v [__:1 [V [P [D N]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
kirja: [N, D]
uFOC: []
D: [D, ]
Pekka: [N, D, ]
T/fin: [T/fin, ]
(D): [D, T/fin, ]
(N): [N, D, T/fin, ]
v: [v, T/fin, ]
(D): [D, v, T/fin, ]
(N): [N, D, v, T/fin, ]
antaa: [V, v, T/fin, ]
P(lle): [P, V, v, T/fin, ]
D: [D, P, V, v, T/fin, ]
Merja-: [N, D, P, V, v, T/fin, ]

			Checking if the sentence is ambiguous...


\========================================================================
# 43
['kirjan', 'Pekka', 'Merjalle', 'antoi']


			=None

1.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
			=D

3.

		Consume "kirja"

		D + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=D{N}

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=D{N}

5.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D kirja] D]

6.

		Consume "Pekka"

		[[D kirja] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D kirja] D{N}]

7.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D kirja] D{N}] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [Pekka P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
		Ranking completed:
			1. [[[D kirja] D{N}]; P(lle)]
			2. [D{N}; P(lle)]
		Exploring solution number (1) =[[[D kirja] D{N}] P(lle)]
			Reconstructing head movement for [[D kirja] D{N}].
				Extracted head "Pekka" from D and created [[D kirja] [D Pekka]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				= [[D kirja] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "D".
				Memory buffer: [[D N]]
				D (D) has a specifier [D kirja] but is marked for -EPP behavior.
				Extraposition will be tried on [[D kirja] [D Pekka]].
				<D Pekka> was made adjunct by an extraposition rule.
			=[[[D kirja] <D Pekka>] P(lle)]

8.

		Consume "D"

		[[[D kirja] <D Pekka>] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[[D kirja] <D Pekka>] P(lle){D}]

9.

		Consume "Merja-"

		[[[D kirja] <D Pekka>] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[[D kirja] <D Pekka>] P(lle){D,N}]

10.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[[D kirja] <D Pekka>] P(lle){D,N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[[D kirja] <D Pekka>] [P(lle) [D Merja-]]] T/fin] due to bad left branch.
		Exploring solution number (1) =[P(lle){D,N} T/fin]
			P(lle) was opened.
			=[[[D kirja] <D Pekka>] [[P(lle) [D Merja-]] T/fin]]

11.

		Consume "v"

		[[[D kirja] <D Pekka>] [[P(lle) [D Merja-]] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[D kirja] <D Pekka>] [[P(lle) [D Merja-]] T/fin{v}]]

12.

		Consume "antaa"

		[[[D kirja] <D Pekka>] [[P(lle) [D Merja-]] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[D kirja] <D Pekka>] [[P(lle) [D Merja-]] T/fin{v,V}]]

13.
	>>>	Trying candidate parse [[[D kirja] <D Pekka>] [[P(lle) [D Merja-]] T/fin{v,V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[[D kirja] <D Pekka>] [[P(lle) [D Merja-]] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[[D kirja] <D Pekka>] [[P(lle) [D Merja-]] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[[D kirja] <D Pekka>] [[P(lle) [D Merja-]] [T/fin [v antaa]]]]
			Dropping floaters...
				[[D kirja] <D Pekka>] failed to tail [!COMP:*][CAT:v]
				<[D kirja] <D Pekka>> was made an adjunct.
				Floater <[D kirja] <D Pekka>> dropped: [<[D kirja] <D Pekka>>:227 [[P(lle) [D Merja-]] [T/fin [v [<DP>:227 antaa]]]]]
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<[D kirja] <D Pekka>>:227 [<P(lle) [D Merja-]>:228 [T/fin [v [[<DP>:227 antaa] <PP>:228]]]]]
				= [<[D kirja] <D Pekka>> [<P(lle) [D Merja-]> [T/fin [v [[<[D kirja] <D Pekka>> antaa] <P(lle) [D Merja-]>]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [<[D kirja] <D Pekka>>:227 [? [<P(lle) [D Merja-]>:228 [T/fin [v [[<DP>:227 antaa] <PP>:228]]]]]].
			= [<[D kirja] <D Pekka>> [? [<P(lle) [D Merja-]> [T/fin [v [[<[D kirja] <D Pekka>> antaa] <P(lle) [D Merja-]>]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
kirja: [N, D]
D: [D]
Pekka: [N, D]
?: [?]
P(lle): [P, ?]
D: [D, P, ?]
Merja-: [N, D, P, ?]
T/fin: [T/fin, ?]
v: [v, T/fin, ?]
(D): [D, v, T/fin, ?]
(N): [N, D, v, T/fin, ?]
(D): [D, v, T/fin, ?]
(N): [N, D, v, T/fin, ?]
antaa: [V, v, T/fin, ?]
(P): [P, v, T/fin, ?]
(D): [D, P, v, T/fin, ?]
(N): [N, D, P, v, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} P(lle)]
			D was opened.
			=[[D kirja] [[D Pekka] P(lle)]]

14.

		Consume "D"

		[[D kirja] [[D Pekka] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D kirja] [[D Pekka] P(lle){D}]]

15.

		Consume "Merja-"

		[[D kirja] [[D Pekka] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D kirja] [[D Pekka] P(lle){D,N}]]

16.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[D kirja] [[D Pekka] P(lle){D,N}]] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D kirja] [? [[D Pekka] [P(lle) [D Merja-]]]]] T/fin] due to bad left branch.
				Reject [[[D Pekka] [P(lle) [D Merja-]]] T/fin] due to bad left branch.
		Exploring solution number (1) =[P(lle){D,N} T/fin]
			P(lle) was opened.
			=[[D kirja] [[D Pekka] [[P(lle) [D Merja-]] T/fin]]]

17.

		Consume "v"

		[[D kirja] [[D Pekka] [[P(lle) [D Merja-]] T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D kirja] [[D Pekka] [[P(lle) [D Merja-]] T/fin{v}]]]

18.

		Consume "antaa"

		[[D kirja] [[D Pekka] [[P(lle) [D Merja-]] T/fin{v}]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D kirja] [[D Pekka] [[P(lle) [D Merja-]] T/fin{v,V}]]]

19.
	>>>	Trying candidate parse [[D kirja] [[D Pekka] [[P(lle) [D Merja-]] T/fin{v,V}]]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D kirja] [[D Pekka] [[P(lle) [D Merja-]] T/fin{v,V}]]].
				Extracted head "v{V}" from T/fin and created [[D kirja] [[D Pekka] [[P(lle) [D Merja-]] [T/fin v{V}]]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[D kirja] [[D Pekka] [[P(lle) [D Merja-]] [T/fin [v antaa]]]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D kirja>:229 [[D Pekka] [[P(lle) [D Merja-]] [T/fin [v [<DP>:229 antaa]]]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D kirja>:229 [<D Pekka>:230 [[P(lle) [D Merja-]] [T/fin [<DP>:230 [v [<DP>:229 antaa]]]]]]]
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<D kirja>:229 [<D Pekka>:230 [<P(lle) [D Merja-]>:231 [T/fin [<DP>:230 [v [[<DP>:229 antaa] <PP>:231]]]]]]]
				= [<D kirja> [<D Pekka> [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[<D kirja> antaa] <P(lle) [D Merja-]>]]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<D kirja>:229 [? [<D Pekka>:230 [? [<P(lle) [D Merja-]>:231 [T/fin [<DP>:230 [v [[<DP>:229 antaa] <PP>:231]]]]]]]]].
			= [<D kirja> [? [<D Pekka> [? [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[<D kirja> antaa] <P(lle) [D Merja-]>]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
kirja: [N, D]
?: [?]
D: [D, ?]
Pekka: [N, D, ?]
?: [?, ?]
P(lle): [P, ?, ?]
D: [D, P, ?, ?]
Merja-: [N, D, P, ?, ?]
T/fin: [T/fin, ?, ?]
(D): [D, T/fin, ?, ?]
(N): [N, D, T/fin, ?, ?]
v: [v, T/fin, ?, ?]
(D): [D, v, T/fin, ?, ?]
(N): [N, D, v, T/fin, ?, ?]
antaa: [V, v, T/fin, ?, ?]
(P): [P, v, T/fin, ?, ?]
(D): [D, P, v, T/fin, ?, ?]
(N): [N, D, P, v, T/fin, ?, ?]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 44
['kirjan#foc', 'Pekka', 'Merjalle', 'antoi']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'kirjan']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "kirjan"

			=None

2.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'TAIL:CAT:v,!COMP:*', 'LANG:FI', 'ABAR:FOC'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
			=D

4.

		Consume "kirja"

		D + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=D{N}

5.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=D{N}

6.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[D kirja] D]

7.

		Consume "Pekka"

		[[D kirja] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D kirja] D{N}]

8.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D kirja] D{N}] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [Pekka P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
		Ranking completed:
			1. [[[D kirja] D{N}]; P(lle)]
			2. [D{N}; P(lle)]
		Exploring solution number (1) =[[[D kirja] D{N}] P(lle)]
			Reconstructing head movement for [[D kirja] D{N}].
				Extracted head "Pekka" from D and created [[D kirja] [D Pekka]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				= [[D kirja] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "D".
				Criterial features {'FOC'} copied to {'D'}
				Tail features [A/HEAD][CAT:FIN] were detected at D, this must head an adjunct floater.
				<D Pekka> was made an adjunct.
				Memory buffer: [[D N]]
			=[[[D kirja] <D Pekka>] P(lle)]

9.

		Consume "D"

		[[[D kirja] <D Pekka>] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[[D kirja] <D Pekka>] P(lle){D}]

10.

		Consume "Merja-"

		[[[D kirja] <D Pekka>] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[[D kirja] <D Pekka>] P(lle){D,N}]

11.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[[D kirja] <D Pekka>] P(lle){D,N}] + T/fin
			Filtering out impossible merge sites...
				Reject [<[[D kirja] <D Pekka>] [P(lle) [D Merja-]]> T/fin] due to bad left branch.
		Exploring solution number (1) =[P(lle){D,N} T/fin]
			P(lle) was opened.
			=[[[D kirja] <D Pekka>] [[P(lle) [D Merja-]] T/fin]]

12.

		Consume "v"

		[[[D kirja] <D Pekka>] [[P(lle) [D Merja-]] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[D kirja] <D Pekka>] [[P(lle) [D Merja-]] T/fin{v}]]

13.

		Consume "antaa"

		[[[D kirja] <D Pekka>] [[P(lle) [D Merja-]] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[D kirja] <D Pekka>] [[P(lle) [D Merja-]] T/fin{v,V}]]

14.
	>>>	Trying candidate parse [[[D kirja] <D Pekka>] [[P(lle) [D Merja-]] T/fin{v,V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[[D kirja] <D Pekka>] [[P(lle) [D Merja-]] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[[D kirja] <D Pekka>] [[P(lle) [D Merja-]] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[[D kirja] <D Pekka>] [[P(lle) [D Merja-]] [T/fin [v antaa]]]]
			Dropping floaters...
				[[D kirja] <D Pekka>] failed to tail [!COMP:*][CAT:v]
				<[D kirja] <D Pekka>> was made an adjunct.
				Floater <[D kirja] <D Pekka>> dropped: [<[D kirja] <D Pekka>>:232 [[P(lle) [D Merja-]] [T/fin [v [<DP>:232 antaa]]]]]
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<[D kirja] <D Pekka>>:232 [<P(lle) [D Merja-]>:233 [T/fin [v [[<DP>:232 antaa] <PP>:233]]]]]
				= [<[D kirja] <D Pekka>> [<P(lle) [D Merja-]> [T/fin [v [[<[D kirja] <D Pekka>> antaa] <P(lle) [D Merja-]>]]]]]
			Dropping A-/A-bar movement.
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [<[D kirja] <D Pekka>>:232 [uFOC [<P(lle) [D Merja-]>:233 [T/fin [v [[<DP>:232 antaa] <PP>:233]]]]]].
			= [<[D kirja] <D Pekka>> [uFOC [<P(lle) [D Merja-]> [T/fin [v [[<[D kirja] <D Pekka>> antaa] <P(lle) [D Merja-]>]]]]]]
		Checking LF-interface conditions.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
kirja: [N, D]
D: [D]
Pekka: [N, D]
uFOC: []
P(lle): [P, ]
D: [D, P, ]
Merja-: [N, D, P, ]
T/fin: [T/fin, ]
v: [v, T/fin, ]
(D): [D, v, T/fin, ]
(N): [N, D, v, T/fin, ]
(D): [D, v, T/fin, ]
(N): [N, D, v, T/fin, ]
antaa: [V, v, T/fin, ]
(P): [P, v, T/fin, ]
(D): [D, P, v, T/fin, ]
(N): [N, D, P, v, T/fin, ]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} P(lle)]
			D was opened.
			=[[D kirja] [[D Pekka] P(lle)]]

15.

		Consume "D"

		[[D kirja] [[D Pekka] P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D kirja] [[D Pekka] P(lle){D}]]

16.

		Consume "Merja-"

		[[D kirja] [[D Pekka] P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D kirja] [[D Pekka] P(lle){D,N}]]

17.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[D kirja] [[D Pekka] P(lle){D,N}]] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D kirja] [uFOC [[D Pekka] [P(lle) [D Merja-]]]]] T/fin] due to bad left branch.
				Reject [[[D Pekka] [P(lle) [D Merja-]]] T/fin] due to bad left branch.
		Exploring solution number (1) =[P(lle){D,N} T/fin]
			P(lle) was opened.
			=[[D kirja] [[D Pekka] [[P(lle) [D Merja-]] T/fin]]]

18.

		Consume "v"

		[[D kirja] [[D Pekka] [[P(lle) [D Merja-]] T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D kirja] [[D Pekka] [[P(lle) [D Merja-]] T/fin{v}]]]

19.

		Consume "antaa"

		[[D kirja] [[D Pekka] [[P(lle) [D Merja-]] T/fin{v}]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D kirja] [[D Pekka] [[P(lle) [D Merja-]] T/fin{v,V}]]]

20.
	>>>	Trying candidate parse [[D kirja] [[D Pekka] [[P(lle) [D Merja-]] T/fin{v,V}]]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D kirja] [[D Pekka] [[P(lle) [D Merja-]] T/fin{v,V}]]].
				Extracted head "v{V}" from T/fin and created [[D kirja] [[D Pekka] [[P(lle) [D Merja-]] [T/fin v{V}]]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[D kirja] [[D Pekka] [[P(lle) [D Merja-]] [T/fin [v antaa]]]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D kirja>:234 [[D Pekka] [[P(lle) [D Merja-]] [T/fin [v [<DP>:234 antaa]]]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D kirja>:234 [<D Pekka>:235 [[P(lle) [D Merja-]] [T/fin [<DP>:235 [v [<DP>:234 antaa]]]]]]]
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<D kirja>:234 [<D Pekka>:235 [<P(lle) [D Merja-]>:236 [T/fin [<DP>:235 [v [[<DP>:234 antaa] <PP>:236]]]]]]]
				= [<D kirja> [<D Pekka> [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[<D kirja> antaa] <P(lle) [D Merja-]>]]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<D kirja>:234 [uFOC [<D Pekka>:235 [? [<P(lle) [D Merja-]>:236 [T/fin [<DP>:235 [v [[<DP>:234 antaa] <PP>:236]]]]]]]]].
			= [<D kirja> [uFOC [<D Pekka> [? [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[<D kirja> antaa] <P(lle) [D Merja-]>]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
kirja: [N, D]
uFOC: []
D: [D, ]
Pekka: [N, D, ]
?: [?, ]
P(lle): [P, ?, ]
D: [D, P, ?, ]
Merja-: [N, D, P, ?, ]
T/fin: [T/fin, ?, ]
(D): [D, T/fin, ?, ]
(N): [N, D, T/fin, ?, ]
v: [v, T/fin, ?, ]
(D): [D, v, T/fin, ?, ]
(N): [N, D, v, T/fin, ?, ]
antaa: [V, v, T/fin, ?, ]
(P): [P, v, T/fin, ?, ]
(D): [D, P, v, T/fin, ?, ]
(N): [N, D, P, v, T/fin, ?, ]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan#foc".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 45
['kirjan', 'antoi', 'Pekka', 'Merjalle']


			=None

1.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
			=D

3.

		Consume "kirja"

		D + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D kirja] T/fin]

5.

		Consume "v"

		[[D kirja] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D kirja] T/fin{v}]

6.

		Consume "antaa"

		[[D kirja] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D kirja] T/fin{v,V}]

7.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[D kirja] T/fin{v,V}]

8.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[D kirja] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [<D kirja> [T/fin [v [<D kirja> antaa]]]] as left branch because it constitutes illicit structure.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [antaa D] due to complement selection.
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D kirja] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[D kirja] [T/fin{v,V} D]]

9.

		Consume "Pekka"

		[[D kirja] [T/fin{v,V} D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D kirja] [T/fin{v,V} D{N}]]

10.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D kirja] [T/fin{v,V} D{N}]] + P(lle)
			Filtering out impossible merge sites...
				Reject [[T/fin [<D Pekka> [v [antaa <D Pekka>]]]] P(lle)] due to bad left branch.
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				Avoid [Pekka P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D kirja] [T/fin{v,V} D{N}]]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D kirja] [T/fin{v,V} [[D Pekka] P(lle)]]]

11.

		Consume "D"

		[[D kirja] [T/fin{v,V} [[D Pekka] P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D kirja] [T/fin{v,V} [[D Pekka] P(lle){D}]]]

12.

		Consume "Merja-"

		[[D kirja] [T/fin{v,V} [[D Pekka] P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D kirja] [T/fin{v,V} [[D Pekka] P(lle){D,N}]]]

13.
	>>>	Trying candidate parse [[D kirja] [T/fin{v,V} [[D Pekka] P(lle){D,N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kirja] [T/fin{v,V} [[D Pekka] P(lle){D,N}]]].
				Extracted head "v{V}" and reconstructed it = [[D kirja] [T/fin [v{V} [[D Pekka] P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [[D kirja] [T/fin [v [antaa [[D Pekka] P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [[D kirja] [T/fin [v [antaa [[D Pekka] [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D kirja] [T/fin [v [antaa [[D Pekka] [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D kirja>:244 [T/fin [v [<DP>:244 [antaa [[D Pekka] [P(lle) [D Merja-]]]]]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D kirja>:244 [T/fin [<DP>:245 [v [<DP>:244 [antaa [<D Pekka>:245 [P(lle) [D Merja-]]]]]]]]]
				= [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [<D Pekka> [P(lle) [D Merja-]]]]]]]]]
			Dropping A-/A-bar movement.
			= [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [<D Pekka> [P(lle) [D Merja-]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D kirja>:244 [T/fin [<DP>:245 [v [<DP>:244 [antaa [<D Pekka>:245 [P(lle) [D Merja-]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 13/125 operations) <------------------------------------
		Solution:
		[<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [<D Pekka> [P(lle) [D Merja-]]]]]]]]]
		Grammar: [<D kirja>:1 [T/fin [<DP>:2 [v [<DP>:1 [antaa [<D Pekka>:2 [P(lle) [D Merja-]]]]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:2 [v [__:1 [V [DP:2 [P [D N]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
kirja: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 46
['kirjan#foc', 'antoi', 'Pekka', 'Merjalle']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'kirjan']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "kirjan"

			=None

2.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'TAIL:CAT:v,!COMP:*', 'LANG:FI', 'ABAR:FOC'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
			=D

4.

		Consume "kirja"

		D + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=D{N}

5.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D kirja] T/fin]

6.

		Consume "v"

		[[D kirja] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D kirja] T/fin{v}]

7.

		Consume "antaa"

		[[D kirja] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D kirja] T/fin{v,V}]

8.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[D kirja] T/fin{v,V}]

9.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[D kirja] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [<D kirja> [T/fin [v [<D kirja> antaa]]]] as left branch because it constitutes illicit structure.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [antaa D] due to complement selection.
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D kirja] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[D kirja] [T/fin{v,V} D]]

10.

		Consume "Pekka"

		[[D kirja] [T/fin{v,V} D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D kirja] [T/fin{v,V} D{N}]]

11.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D kirja] [T/fin{v,V} D{N}]] + P(lle)
			Filtering out impossible merge sites...
				Reject [[T/fin [<D Pekka> [v [antaa <D Pekka>]]]] P(lle)] due to bad left branch.
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				Avoid [Pekka P(lle)] due to complement selection.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D kirja] [T/fin{v,V} D{N}]]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D kirja] [T/fin{v,V} [[D Pekka] P(lle)]]]

12.

		Consume "D"

		[[D kirja] [T/fin{v,V} [[D Pekka] P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D kirja] [T/fin{v,V} [[D Pekka] P(lle){D}]]]

13.

		Consume "Merja-"

		[[D kirja] [T/fin{v,V} [[D Pekka] P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D kirja] [T/fin{v,V} [[D Pekka] P(lle){D,N}]]]

14.
	>>>	Trying candidate parse [[D kirja] [T/fin{v,V} [[D Pekka] P(lle){D,N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kirja] [T/fin{v,V} [[D Pekka] P(lle){D,N}]]].
				Extracted head "v{V}" and reconstructed it = [[D kirja] [T/fin [v{V} [[D Pekka] P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [[D kirja] [T/fin [v [antaa [[D Pekka] P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [[D kirja] [T/fin [v [antaa [[D Pekka] [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D kirja] [T/fin [v [antaa [[D Pekka] [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D kirja>:253 [T/fin [v [<DP>:253 [antaa [[D Pekka] [P(lle) [D Merja-]]]]]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D kirja>:253 [T/fin [<DP>:254 [v [<DP>:253 [antaa [<D Pekka>:254 [P(lle) [D Merja-]]]]]]]]]
				= [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [<D Pekka> [P(lle) [D Merja-]]]]]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'FIN', 'T/fin', 'FIN/T/fin'}
			= [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [<D Pekka> [P(lle) [D Merja-]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D kirja>:253 [T/fin [<DP>:254 [v [<DP>:253 [antaa [<D Pekka>:254 [P(lle) [D Merja-]]]]]]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 14/132 operations) <------------------------------------
		Solution:
		[<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa [<D Pekka> [P(lle) [D Merja-]]]]]]]]]
		Grammar: [<D kirja>:1 [T/fin [<DP>:2 [v [<DP>:1 [antaa [<D Pekka>:2 [P(lle) [D Merja-]]]]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:2 [v [__:1 [V [DP:2 [P [D N]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
kirja: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 47
['kirjan', 'antoi', 'Merjalle', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
			=D

3.

		Consume "kirja"

		D + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D kirja] T/fin]

5.

		Consume "v"

		[[D kirja] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D kirja] T/fin{v}]

6.

		Consume "antaa"

		[[D kirja] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D kirja] T/fin{v,V}]

7.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D kirja] T/fin{v,V}] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [<D kirja> [T/fin [v [<D kirja> antaa]]]] as left branch because it constitutes illicit structure.
				Prioritize [antaa P(lle)] due to complement selection.
		Ranking completed:
			1. [T/fin{v,V}; P(lle)]
			2. [[[D kirja] T/fin{v,V}]; P(lle)]
		Exploring solution number (1) =[T/fin{v,V} P(lle)]
			T/fin{v,V} cannot be opened.
			=[[D kirja] [T/fin{v,V} P(lle)]]

8.

		Consume "D"

		[[D kirja] [T/fin{v,V} P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D kirja] [T/fin{v,V} P(lle){D}]]

9.

		Consume "Merja-"

		[[D kirja] [T/fin{v,V} P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D kirja] [T/fin{v,V} P(lle){D,N}]]

10.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[D kirja] [T/fin{v,V} P(lle){D,N}]]

11.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[D kirja] [T/fin{v,V} P(lle){D,N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [<D kirja> [T/fin [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]] as left branch because it constitutes illicit structure.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [P(lle) [D Merja-]]]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
				Avoid P(lle){D,N} because it could break words.
		Ranking completed:
			1. [[T/fin{v,V} P(lle){D,N}]; D]
			2. [[[D kirja] [T/fin{v,V} P(lle){D,N}]]; D]
			3. [P(lle){D,N}; D]
		Exploring solution number (1) =[[T/fin{v,V} P(lle){D,N}] D]
			Reconstructing head movement for [T/fin{v,V} P(lle){D,N}].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} P(lle){D,N}]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa P(lle){D,N}]]]
				Extracted head "D{N}" from P(lle) and created [T/fin [v [antaa [P(lle) D{N}]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [T/fin [v [antaa [P(lle) [D Merja-]]]]]
			Dropping floaters...
				= [T/fin [v [antaa [P(lle) [D Merja-]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [T/fin [v [antaa [P(lle) [D Merja-]]]]].
			=[[D kirja] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] D]]

12.

		Consume "Pekka"

		[[D kirja] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D kirja] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}]]

13.
	>>>	Trying candidate parse [[D kirja] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kirja] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}]].
				Extracted head "Pekka" from D and created [[D kirja] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [D Pekka]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [[D kirja] [[T/fin [<DP>:259 [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>:259]]
				= [[D kirja] [[T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "T/fin".
				Memory buffer: [[D N]]
				Dropping constituent [D kirja]:260 from memory buffer into Spec of antaa
			= [[D kirja] [[T/fin [<D Pekka> [v [[D kirja] [antaa [P(lle) [D Merja-]]]]]]] <D Pekka>]]
		Checking LF-interface conditions.
			Trying to transfer [[D kirja]:260 [[T/fin [<DP>:259 [v [(DP):260 [antaa [P(lle) [D Merja-]]]]]]] <D Pekka>:259]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 13/138 operations) <------------------------------------
		Solution:
		[[D kirja] [[T/fin [<D Pekka> [v [[D kirja] [antaa [P(lle) [D Merja-]]]]]]] <D Pekka>]]
		Grammar: [[D kirja]:1 [[T/fin [<DP>:2 [v [(DP):1 [antaa [P(lle) [D Merja-]]]]]]] <D Pekka>:2]]
		Spellout T/finP = [DP:1 [[T/fin [__:2 [v [__:1 [V [P [D N]]]]]]] DP:2]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

D: [D]
kirja: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D]
Pekka: [N, D]

			Checking if the sentence is ambiguous...


\========================================================================
# 48
['kirjan#foc', 'antoi', 'Merjalle', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'kirjan']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "kirjan"

			=None

2.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'TAIL:CAT:v,!COMP:*', 'LANG:FI', 'ABAR:FOC'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
			=D

4.

		Consume "kirja"

		D + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=D{N}

5.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D kirja] T/fin]

6.

		Consume "v"

		[[D kirja] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D kirja] T/fin{v}]

7.

		Consume "antaa"

		[[D kirja] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D kirja] T/fin{v,V}]

8.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D kirja] T/fin{v,V}] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [<D kirja> [T/fin [v [<D kirja> antaa]]]] as left branch because it constitutes illicit structure.
				Prioritize [antaa P(lle)] due to complement selection.
		Ranking completed:
			1. [T/fin{v,V}; P(lle)]
			2. [[[D kirja] T/fin{v,V}]; P(lle)]
		Exploring solution number (1) =[T/fin{v,V} P(lle)]
			T/fin{v,V} cannot be opened.
			=[[D kirja] [T/fin{v,V} P(lle)]]

9.

		Consume "D"

		[[D kirja] [T/fin{v,V} P(lle)]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D kirja] [T/fin{v,V} P(lle){D}]]

10.

		Consume "Merja-"

		[[D kirja] [T/fin{v,V} P(lle){D}]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D kirja] [T/fin{v,V} P(lle){D,N}]]

11.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[D kirja] [T/fin{v,V} P(lle){D,N}]]

12.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[D kirja] [T/fin{v,V} P(lle){D,N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [<D kirja> [T/fin [v [<D kirja> [antaa [P(lle) [D Merja-]]]]]]] as left branch because it constitutes illicit structure.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [P(lle) [D Merja-]]]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
				Avoid P(lle){D,N} because it could break words.
		Ranking completed:
			1. [[T/fin{v,V} P(lle){D,N}]; D]
			2. [[[D kirja] [T/fin{v,V} P(lle){D,N}]]; D]
			3. [P(lle){D,N}; D]
		Exploring solution number (1) =[[T/fin{v,V} P(lle){D,N}] D]
			Reconstructing head movement for [T/fin{v,V} P(lle){D,N}].
				Extracted head "v{V}" and reconstructed it = [T/fin [v{V} P(lle){D,N}]]
				Extracted head "antaa" and reconstructed it = [T/fin [v [antaa P(lle){D,N}]]]
				Extracted head "D{N}" from P(lle) and created [T/fin [v [antaa [P(lle) D{N}]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [T/fin [v [antaa [P(lle) [D Merja-]]]]]
			Dropping floaters...
				= [T/fin [v [antaa [P(lle) [D Merja-]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [T/fin [v [antaa [P(lle) [D Merja-]]]]].
			=[[D kirja] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] D]]

13.

		Consume "Pekka"

		[[D kirja] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D kirja] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}]]

14.
	>>>	Trying candidate parse [[D kirja] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kirja] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] D{N}]].
				Extracted head "Pekka" from D and created [[D kirja] [[T/fin [v [antaa [P(lle) [D Merja-]]]]] [D Pekka]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [[D kirja] [[T/fin [<DP>:265 [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>:265]]
				= [[D kirja] [[T/fin [<D Pekka> [v [antaa [P(lle) [D Merja-]]]]]] <D Pekka>]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "T/fin".
				Criterial features {'FOC'} copied to {'FIN', 'T/fin', 'FIN/T/fin'}
				Memory buffer: [[D N]]
				Dropping constituent [D kirja]:266 from memory buffer into Spec of antaa
			= [[D kirja] [[T/fin [<D Pekka> [v [[D kirja] [antaa [P(lle) [D Merja-]]]]]]] <D Pekka>]]
		Checking LF-interface conditions.
			Trying to transfer [[D kirja]:266 [[T/fin [<DP>:265 [v [(DP):266 [antaa [P(lle) [D Merja-]]]]]]] <D Pekka>:265]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 14/145 operations) <------------------------------------
		Solution:
		[[D kirja] [[T/fin [<D Pekka> [v [[D kirja] [antaa [P(lle) [D Merja-]]]]]]] <D Pekka>]]
		Grammar: [[D kirja]:1 [[T/fin [<DP>:2 [v [(DP):1 [antaa [P(lle) [D Merja-]]]]]]] <D Pekka>:2]]
		Spellout T/finP = [DP:1 [[T/fin [__:2 [v [__:1 [V [P [D N]]]]]]] DP:2]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

D: [D]
kirja: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
antaa: [V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
D: [D]
Pekka: [N, D]

			Checking if the sentence is ambiguous...


\========================================================================
# 49
['kirjan', 'Merjalle', 'Pekka', 'antoi']


			=None

1.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
			=D

3.

		Consume "kirja"

		D + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=D{N}

4.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		D{N} + P(lle)
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D kirja] P(lle)]

5.

		Consume "D"

		[[D kirja] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D kirja] P(lle){D}]

6.

		Consume "Merja-"

		[[D kirja] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D kirja] P(lle){D,N}]

7.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[D kirja] P(lle){D,N}]

8.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[D kirja] P(lle){D,N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid PP as SPEC for D due to unselective SPEC feature.
				[D kirja]" has no thematic role
				Avoid [[D kirja] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
		Ranking completed:
			1. [P(lle){D,N}; D]
			2. [[[D kirja] P(lle){D,N}]; D]
		Exploring solution number (1) =[P(lle){D,N} D]
			P(lle) was opened.
			=[[D kirja] [[P(lle) [D Merja-]] D]]

9.

		Consume "Pekka"

		[[D kirja] [[P(lle) [D Merja-]] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D kirja] [[P(lle) [D Merja-]] D{N}]]

10.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[D kirja] [[P(lle) [D Merja-]] D{N}]] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D kirja] [? [[P(lle) [D Merja-]] [D Pekka]]]] T/fin] due to bad left branch.
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [Pekka T/fin] due to complement selection.
		Ranking completed:
			1. [[[P(lle) [D Merja-]] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[P(lle) [D Merja-]] D{N}] T/fin]
			Reconstructing head movement for [[P(lle) [D Merja-]] D{N}].
				Extracted head "Pekka" from D and created [[P(lle) [D Merja-]] [D Pekka]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				= [[P(lle) [D Merja-]] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[P [D N]]]
				D (D) has a specifier [P(lle) [D Merja-]] but is marked for -EPP behavior.
				Extraposition will be tried on [[P(lle) [D Merja-]] [D Pekka]].
				<D Pekka> was made adjunct by an extraposition rule.
			=[[D kirja] [[[P(lle) [D Merja-]] <D Pekka>] T/fin]]

11.

		Consume "v"

		[[D kirja] [[[P(lle) [D Merja-]] <D Pekka>] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D kirja] [[[P(lle) [D Merja-]] <D Pekka>] T/fin{v}]]

12.

		Consume "antaa"

		[[D kirja] [[[P(lle) [D Merja-]] <D Pekka>] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D kirja] [[[P(lle) [D Merja-]] <D Pekka>] T/fin{v,V}]]

13.
	>>>	Trying candidate parse [[D kirja] [[[P(lle) [D Merja-]] <D Pekka>] T/fin{v,V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kirja] [[[P(lle) [D Merja-]] <D Pekka>] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[D kirja] [[[P(lle) [D Merja-]] <D Pekka>] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[D kirja] [[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v antaa]]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D kirja>:267 [[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v [<DP>:267 antaa]]]]]
				[[P(lle) [D Merja-]] <D Pekka>] failed to tail [CAT:V]
				<[P(lle) [D Merja-]] <D Pekka>> was made an adjunct.
				Floater <[P(lle) [D Merja-]] <D Pekka>> dropped: [<D kirja>:267 [<[P(lle) [D Merja-]] <D Pekka>>:268 [T/fin [v [<DP>:267 [antaa <PP>:268]]]]]]
				= [<D kirja> [<[P(lle) [D Merja-]] <D Pekka>> [T/fin [v [<D kirja> [antaa <[P(lle) [D Merja-]] <D Pekka>>]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [<D kirja>:267 [? [<[P(lle) [D Merja-]] <D Pekka>>:268 [T/fin [v [<DP>:267 [antaa <PP>:268]]]]]]].
			= [<D kirja> [? [<[P(lle) [D Merja-]] <D Pekka>> [T/fin [v [<D kirja> [antaa <[P(lle) [D Merja-]] <D Pekka>>]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']

D: [D]
kirja: [N, D]
?: [?]
P(lle): [P, ?]
D: [D, P, ?]
Merja-: [N, D, P, ?]
D: [D, ?]
Pekka: [N, D, ?]
T/fin: [T/fin, ?]
v: [v, T/fin, ?]
(D): [D, v, T/fin, ?]
(N): [N, D, v, T/fin, ?]
antaa: [V, v, T/fin, ?]
(P): [P, V, v, T/fin, ?]
(D): [D, P, V, v, T/fin, ?]
(N): [N, D, P, V, v, T/fin, ?]
(D): [D, V, v, T/fin, ?]
(N): [N, D, V, v, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[D kirja] [[P(lle) [D Merja-]] [[D Pekka] T/fin]]]

14.

		Consume "v"

		[[D kirja] [[P(lle) [D Merja-]] [[D Pekka] T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D kirja] [[P(lle) [D Merja-]] [[D Pekka] T/fin{v}]]]

15.

		Consume "antaa"

		[[D kirja] [[P(lle) [D Merja-]] [[D Pekka] T/fin{v}]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D kirja] [[P(lle) [D Merja-]] [[D Pekka] T/fin{v,V}]]]

16.
	>>>	Trying candidate parse [[D kirja] [[P(lle) [D Merja-]] [[D Pekka] T/fin{v,V}]]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D kirja] [[P(lle) [D Merja-]] [[D Pekka] T/fin{v,V}]]].
				Extracted head "v{V}" from T/fin and created [[D kirja] [[P(lle) [D Merja-]] [[D Pekka] [T/fin v{V}]]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[D kirja] [[P(lle) [D Merja-]] [[D Pekka] [T/fin [v antaa]]]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D kirja>:269 [[P(lle) [D Merja-]] [[D Pekka] [T/fin [v [<DP>:269 antaa]]]]]]
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<D kirja>:269 [<P(lle) [D Merja-]>:270 [[D Pekka] [T/fin [v [[<DP>:269 antaa] <PP>:270]]]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D kirja>:269 [<P(lle) [D Merja-]>:270 [<D Pekka>:271 [T/fin [<DP>:271 [v [[<DP>:269 antaa] <PP>:270]]]]]]]
				= [<D kirja> [<P(lle) [D Merja-]> [<D Pekka> [T/fin [<D Pekka> [v [[<D kirja> antaa] <P(lle) [D Merja-]>]]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<D kirja>:269 [? [<P(lle) [D Merja-]>:270 [? [<D Pekka>:271 [T/fin [<DP>:271 [v [[<DP>:269 antaa] <PP>:270]]]]]]]]].
			= [<D kirja> [? [<P(lle) [D Merja-]> [? [<D Pekka> [T/fin [<D Pekka> [v [[<D kirja> antaa] <P(lle) [D Merja-]>]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
kirja: [N, D]
?: [?]
P(lle): [P, ?]
D: [D, P, ?]
Merja-: [N, D, P, ?]
?: [?, ?]
D: [D, ?, ?]
Pekka: [N, D, ?, ?]
T/fin: [T/fin, ?, ?]
(D): [D, T/fin, ?, ?]
(N): [N, D, T/fin, ?, ?]
v: [v, T/fin, ?, ?]
(D): [D, v, T/fin, ?, ?]
(N): [N, D, v, T/fin, ?, ?]
antaa: [V, v, T/fin, ?, ?]
(P): [P, v, T/fin, ?, ?]
(D): [D, P, v, T/fin, ?, ?]
(N): [N, D, P, v, T/fin, ?, ?]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D kirja] P(lle){D,N}] D]
			Reconstructing head movement for [[D kirja] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[D kirja] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D kirja] [P(lle) [D Merja-]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				= [[D kirja] [P(lle) [D Merja-]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
			=[[[D kirja] [P(lle) [D Merja-]]] D]

17.

		Consume "Pekka"

		[[[D kirja] [P(lle) [D Merja-]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[[D kirja] [P(lle) [D Merja-]]] D{N}]

18.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[[D kirja] [P(lle) [D Merja-]]] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[[D kirja] [P(lle) [D Merja-]]] <D Pekka>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[[D kirja] [P(lle) [D Merja-]]] [[D Pekka] T/fin]]

19.

		Consume "v"

		[[[D kirja] [P(lle) [D Merja-]]] [[D Pekka] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[D kirja] [P(lle) [D Merja-]]] [[D Pekka] T/fin{v}]]

20.

		Consume "antaa"

		[[[D kirja] [P(lle) [D Merja-]]] [[D Pekka] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[D kirja] [P(lle) [D Merja-]]] [[D Pekka] T/fin{v,V}]]

21.
	>>>	Trying candidate parse [[[D kirja] [P(lle) [D Merja-]]] [[D Pekka] T/fin{v,V}]] (3.)
		Reconstructing...
			Reconstructing head movement for [[[D kirja] [P(lle) [D Merja-]]] [[D Pekka] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[[D kirja] [P(lle) [D Merja-]]] [[D Pekka] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[[D kirja] [P(lle) [D Merja-]]] [[D Pekka] [T/fin [v antaa]]]]
			Dropping floaters...
				[[D kirja] [P(lle) [D Merja-]]] failed to tail [CAT:V]
				<[D kirja] [P(lle) [D Merja-]]> was made an adjunct.
				Floater <[D kirja] [P(lle) [D Merja-]]> dropped: [<[D kirja] [P(lle) [D Merja-]]>:272 [[D Pekka] [T/fin [v [antaa <PP>:272]]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<[D kirja] [P(lle) [D Merja-]]>:272 [<D Pekka>:273 [T/fin [<DP>:273 [v [antaa <PP>:272]]]]]]
				= [<[D kirja] [P(lle) [D Merja-]]> [<D Pekka> [T/fin [<D Pekka> [v [antaa <[D kirja] [P(lle) [D Merja-]]>]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				v probing for CAT:D failed.
				(DP)" has no thematic role
				Extraposition will be tried on [<[D kirja] [P(lle) [D Merja-]]>:272 [? [<D Pekka>:273 [T/fin [<DP>:273 [v [antaa <PP>:272]]]]]]].
			= [<[D kirja] [P(lle) [D Merja-]]> [? [<D Pekka> [T/fin [<D Pekka> [v [antaa <[D kirja] [P(lle) [D Merja-]]>]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				v probing for CAT:D failed.
				(DP)" has no thematic role
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
kirja: [N, D]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
?: [?]
D: [D, ?]
Pekka: [N, D, ?]
T/fin: [T/fin, ?]
(D): [D, T/fin, ?]
(N): [N, D, T/fin, ?]
v: [v, T/fin, ?]
antaa: [V, v, T/fin, ?]
(D): [D, V, v, T/fin, ?]
(N): [N, D, V, v, T/fin, ?]
(P): [P, V, v, T/fin, ?]
(D): [D, P, V, v, T/fin, ?]
(N): [N, D, P, V, v, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 50
['kirjan#foc', 'Merjalle', 'Pekka', 'antoi']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'kirjan']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "kirjan"

			=None

2.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'TAIL:CAT:v,!COMP:*', 'LANG:FI', 'ABAR:FOC'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
			=D

4.

		Consume "kirja"

		D + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=D{N}

5.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		D{N} + P(lle)
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D kirja] P(lle)]

6.

		Consume "D"

		[[D kirja] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D kirja] P(lle){D}]

7.

		Consume "Merja-"

		[[D kirja] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D kirja] P(lle){D,N}]

8.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[D kirja] P(lle){D,N}]

9.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[D kirja] P(lle){D,N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid PP as SPEC for D due to unselective SPEC feature.
				[D kirja]" has no thematic role
				Avoid <[D kirja] [P(lle) [D Merja-]]> as left branch because it constitutes illicit structure.
				Avoid PP as SPEC for D due to unselective SPEC feature.
				Avoid [P(lle){D,N} D] due to local agreement failure.
				Prioritize [P(lle){D,N} D] due to complement selection.
				Avoid [Merja- D] due to complement selection.
		Ranking completed:
			1. [P(lle){D,N}; D]
			2. [[[D kirja] P(lle){D,N}]; D]
		Exploring solution number (1) =[P(lle){D,N} D]
			P(lle) was opened.
			=[[D kirja] [[P(lle) [D Merja-]] D]]

10.

		Consume "Pekka"

		[[D kirja] [[P(lle) [D Merja-]] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D kirja] [[P(lle) [D Merja-]] D{N}]]

11.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[D kirja] [[P(lle) [D Merja-]] D{N}]] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D kirja] [uFOC [[P(lle) [D Merja-]] [D Pekka]]]] T/fin] due to bad left branch.
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [Pekka T/fin] due to complement selection.
		Ranking completed:
			1. [[[P(lle) [D Merja-]] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[P(lle) [D Merja-]] D{N}] T/fin]
			Reconstructing head movement for [[P(lle) [D Merja-]] D{N}].
				Extracted head "Pekka" from D and created [[P(lle) [D Merja-]] [D Pekka]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				= [[P(lle) [D Merja-]] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[P [D N]]]
				D (D) has a specifier [P(lle) [D Merja-]] but is marked for -EPP behavior.
				Extraposition will be tried on [[P(lle) [D Merja-]] [D Pekka]].
				<D Pekka> was made adjunct by an extraposition rule.
			=[[D kirja] [[[P(lle) [D Merja-]] <D Pekka>] T/fin]]

12.

		Consume "v"

		[[D kirja] [[[P(lle) [D Merja-]] <D Pekka>] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D kirja] [[[P(lle) [D Merja-]] <D Pekka>] T/fin{v}]]

13.

		Consume "antaa"

		[[D kirja] [[[P(lle) [D Merja-]] <D Pekka>] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D kirja] [[[P(lle) [D Merja-]] <D Pekka>] T/fin{v,V}]]

14.
	>>>	Trying candidate parse [[D kirja] [[[P(lle) [D Merja-]] <D Pekka>] T/fin{v,V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kirja] [[[P(lle) [D Merja-]] <D Pekka>] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[D kirja] [[[P(lle) [D Merja-]] <D Pekka>] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[D kirja] [[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v antaa]]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D kirja>:274 [[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v [<DP>:274 antaa]]]]]
				[[P(lle) [D Merja-]] <D Pekka>] failed to tail [CAT:V]
				<[P(lle) [D Merja-]] <D Pekka>> was made an adjunct.
				Floater <[P(lle) [D Merja-]] <D Pekka>> dropped: [<D kirja>:274 [<[P(lle) [D Merja-]] <D Pekka>>:275 [T/fin [v [<DP>:274 [antaa <PP>:275]]]]]]
				= [<D kirja> [<[P(lle) [D Merja-]] <D Pekka>> [T/fin [v [<D kirja> [antaa <[P(lle) [D Merja-]] <D Pekka>>]]]]]]
			Dropping A-/A-bar movement.
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [<D kirja>:274 [uFOC [<[P(lle) [D Merja-]] <D Pekka>>:275 [T/fin [v [<DP>:274 [antaa <PP>:275]]]]]]].
			= [<D kirja> [uFOC [<[P(lle) [D Merja-]] <D Pekka>> [T/fin [v [<D kirja> [antaa <[P(lle) [D Merja-]] <D Pekka>>]]]]]]]
		Checking LF-interface conditions.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']

D: [D]
kirja: [N, D]
uFOC: []
P(lle): [P, ]
D: [D, P, ]
Merja-: [N, D, P, ]
D: [D, ]
Pekka: [N, D, ]
T/fin: [T/fin, ]
v: [v, T/fin, ]
(D): [D, v, T/fin, ]
(N): [N, D, v, T/fin, ]
antaa: [V, v, T/fin, ]
(P): [P, V, v, T/fin, ]
(D): [D, P, V, v, T/fin, ]
(N): [N, D, P, V, v, T/fin, ]
(D): [D, V, v, T/fin, ]
(N): [N, D, V, v, T/fin, ]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[D kirja] [[P(lle) [D Merja-]] [[D Pekka] T/fin]]]

15.

		Consume "v"

		[[D kirja] [[P(lle) [D Merja-]] [[D Pekka] T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D kirja] [[P(lle) [D Merja-]] [[D Pekka] T/fin{v}]]]

16.

		Consume "antaa"

		[[D kirja] [[P(lle) [D Merja-]] [[D Pekka] T/fin{v}]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D kirja] [[P(lle) [D Merja-]] [[D Pekka] T/fin{v,V}]]]

17.
	>>>	Trying candidate parse [[D kirja] [[P(lle) [D Merja-]] [[D Pekka] T/fin{v,V}]]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D kirja] [[P(lle) [D Merja-]] [[D Pekka] T/fin{v,V}]]].
				Extracted head "v{V}" from T/fin and created [[D kirja] [[P(lle) [D Merja-]] [[D Pekka] [T/fin v{V}]]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[D kirja] [[P(lle) [D Merja-]] [[D Pekka] [T/fin [v antaa]]]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D kirja>:276 [[P(lle) [D Merja-]] [[D Pekka] [T/fin [v [<DP>:276 antaa]]]]]]
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<D kirja>:276 [<P(lle) [D Merja-]>:277 [[D Pekka] [T/fin [v [[<DP>:276 antaa] <PP>:277]]]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D kirja>:276 [<P(lle) [D Merja-]>:277 [<D Pekka>:278 [T/fin [<DP>:278 [v [[<DP>:276 antaa] <PP>:277]]]]]]]
				= [<D kirja> [<P(lle) [D Merja-]> [<D Pekka> [T/fin [<D Pekka> [v [[<D kirja> antaa] <P(lle) [D Merja-]>]]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<D kirja>:276 [uFOC [<P(lle) [D Merja-]>:277 [? [<D Pekka>:278 [T/fin [<DP>:278 [v [[<DP>:276 antaa] <PP>:277]]]]]]]]].
			= [<D kirja> [uFOC [<P(lle) [D Merja-]> [? [<D Pekka> [T/fin [<D Pekka> [v [[<D kirja> antaa] <P(lle) [D Merja-]>]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
kirja: [N, D]
uFOC: []
P(lle): [P, ]
D: [D, P, ]
Merja-: [N, D, P, ]
?: [?, ]
D: [D, ?, ]
Pekka: [N, D, ?, ]
T/fin: [T/fin, ?, ]
(D): [D, T/fin, ?, ]
(N): [N, D, T/fin, ?, ]
v: [v, T/fin, ?, ]
(D): [D, v, T/fin, ?, ]
(N): [N, D, v, T/fin, ?, ]
antaa: [V, v, T/fin, ?, ]
(P): [P, v, T/fin, ?, ]
(D): [D, P, v, T/fin, ?, ]
(N): [N, D, P, v, T/fin, ?, ]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D kirja] P(lle){D,N}] D]
			Reconstructing head movement for [[D kirja] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[D kirja] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D kirja] [P(lle) [D Merja-]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				= [[D kirja] [P(lle) [D Merja-]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Criterial features {'FOC'} copied to {'P'}
				Tail features [CAT:V] were detected at P(lle), this must head an adjunct floater.
				<[D kirja] [P(lle) [D Merja-]]> was made an adjunct.
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
			=[<[D kirja] [P(lle) [D Merja-]]> D]

18.

		Consume "Pekka"

		[<[D kirja] [P(lle) [D Merja-]]> D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[<[D kirja] [P(lle) [D Merja-]]> D{N}]

19.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[<[D kirja] [P(lle) [D Merja-]]> D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[<[D kirja] [P(lle) [D Merja-]]> <D Pekka>] T/fin] due to bad left branch.
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[<[D kirja] [P(lle) [D Merja-]]> [[D Pekka] T/fin]]

20.

		Consume "v"

		[<[D kirja] [P(lle) [D Merja-]]> [[D Pekka] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[<[D kirja] [P(lle) [D Merja-]]> [[D Pekka] T/fin{v}]]

21.

		Consume "antaa"

		[<[D kirja] [P(lle) [D Merja-]]> [[D Pekka] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[<[D kirja] [P(lle) [D Merja-]]> [[D Pekka] T/fin{v,V}]]

22.
	>>>	Trying candidate parse [<[D kirja] [P(lle) [D Merja-]]> [[D Pekka] T/fin{v,V}]] (3.)
		Reconstructing...
			Reconstructing head movement for [<[D kirja] [P(lle) [D Merja-]]> [[D Pekka] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [<[D kirja] [P(lle) [D Merja-]]> [[D Pekka] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [<[D kirja] [P(lle) [D Merja-]]> [[D Pekka] [T/fin [v antaa]]]]
			Dropping floaters...
				<[D kirja] [P(lle) [D Merja-]]> failed to tail [CAT:V]
				<[D kirja] [P(lle) [D Merja-]]> was made an adjunct.
				Floater <[D kirja] [P(lle) [D Merja-]]> dropped: [<[D kirja] [P(lle) [D Merja-]]>:279 [[D Pekka] [T/fin [v [antaa <PP>:279]]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<[D kirja] [P(lle) [D Merja-]]>:279 [<D Pekka>:280 [T/fin [<DP>:280 [v [antaa <PP>:279]]]]]]
				= [<[D kirja] [P(lle) [D Merja-]]> [<D Pekka> [T/fin [<D Pekka> [v [antaa <[D kirja] [P(lle) [D Merja-]]>]]]]]]
			Dropping A-/A-bar movement.
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
				v probing for CAT:D failed.
				(DP)" has no thematic role
				Extraposition will be tried on [<[D kirja] [P(lle) [D Merja-]]>:279 [uFOC [<D Pekka>:280 [T/fin [<DP>:280 [v [antaa <PP>:279]]]]]]].
			= [<[D kirja] [P(lle) [D Merja-]]> [uFOC [<D Pekka> [T/fin [<D Pekka> [v [antaa <[D kirja] [P(lle) [D Merja-]]>]]]]]]]
		Checking LF-interface conditions.
				v probing for CAT:D failed.
				(DP)" has no thematic role
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'CAT:P/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'CAT:P/uFOC', 'CAT:uFOC', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
kirja: [N, D]
P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
uFOC: []
D: [D, ]
Pekka: [N, D, ]
T/fin: [T/fin, ]
(D): [D, T/fin, ]
(N): [N, D, T/fin, ]
v: [v, T/fin, ]
antaa: [V, v, T/fin, ]
(D): [D, V, v, T/fin, ]
(N): [N, D, V, v, T/fin, ]
(P): [P, V, v, T/fin, ]
(D): [D, P, V, v, T/fin, ]
(N): [N, D, P, V, v, T/fin, ]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan#foc".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 51
['kirjan', 'Merjalle', 'antoi', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
			=D

3.

		Consume "kirja"

		D + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=D{N}

4.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		D{N} + P(lle)
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D kirja] P(lle)]

5.

		Consume "D"

		[[D kirja] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D kirja] P(lle){D}]

6.

		Consume "Merja-"

		[[D kirja] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D kirja] P(lle){D,N}]

7.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[D kirja] P(lle){D,N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D kirja] [P(lle) [D Merja-]]] T/fin] due to bad left branch.
		Exploring solution number (1) =[P(lle){D,N} T/fin]
			P(lle) was opened.
			=[[D kirja] [[P(lle) [D Merja-]] T/fin]]

8.

		Consume "v"

		[[D kirja] [[P(lle) [D Merja-]] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D kirja] [[P(lle) [D Merja-]] T/fin{v}]]

9.

		Consume "antaa"

		[[D kirja] [[P(lle) [D Merja-]] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D kirja] [[P(lle) [D Merja-]] T/fin{v,V}]]

10.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[D kirja] [[P(lle) [D Merja-]] T/fin{v,V}]]

11.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[D kirja] [[P(lle) [D Merja-]] T/fin{v,V}]] + D
			Filtering out impossible merge sites...
				Reject [[<D kirja> [? [<P(lle) [D Merja-]> [T/fin [v [[<D kirja> antaa] <P(lle) [D Merja-]>]]]]]] D] due to bad left branch.
				Reject [[<P(lle) [D Merja-]> [T/fin [v [antaa <P(lle) [D Merja-]>]]]] D] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[D kirja] [[P(lle) [D Merja-]] [T/fin{v,V} D]]]

12.

		Consume "Pekka"

		[[D kirja] [[P(lle) [D Merja-]] [T/fin{v,V} D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D kirja] [[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]]

13.
	>>>	Trying candidate parse [[D kirja] [[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kirja] [[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]].
				Extracted head "v{V}" and reconstructed it = [[D kirja] [[P(lle) [D Merja-]] [T/fin [v{V} D{N}]]]]
				Extracted head "antaa" and reconstructed it = [[D kirja] [[P(lle) [D Merja-]] [T/fin [v [antaa D{N}]]]]]
				Extracted head "Pekka" from D and created [[D kirja] [[P(lle) [D Merja-]] [T/fin [v [antaa [D Pekka]]]]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D kirja>:284 [[P(lle) [D Merja-]] [T/fin [v [<DP>:284 [antaa [D Pekka]]]]]]]
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<D kirja>:284 [<P(lle) [D Merja-]>:285 [T/fin [v [[<DP>:284 [antaa [D Pekka]]] <PP>:285]]]]]
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D kirja>:284 [<P(lle) [D Merja-]>:285 [T/fin [<DP>:286 [v [[<DP>:284 [antaa <D Pekka>:286]] <PP>:285]]]]]]
				= [<D kirja> [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[<D kirja> [antaa <D Pekka>]] <P(lle) [D Merja-]>]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<D kirja>:284 [? [<P(lle) [D Merja-]>:285 [T/fin [<DP>:286 [v [[<DP>:284 [antaa <D Pekka>:286]] <PP>:285]]]]]]].
			= [<D kirja> [? [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[<D kirja> [antaa <D Pekka>]] <P(lle) [D Merja-]>]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
:['LANG:FI']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
kirja: [N, D]
?: [?]
P(lle): [P, ?]
D: [D, P, ?]
Merja-: [N, D, P, ?]
T/fin: [T/fin, ?]
(D): [D, T/fin, ?]
(N): [N, D, T/fin, ?]
v: [v, T/fin, ?]
(D): [D, v, T/fin, ?]
(N): [N, D, v, T/fin, ?]
antaa: [V, v, T/fin, ?]
D: [D, V, v, T/fin, ?]
Pekka: [N, D, V, v, T/fin, ?]
(P): [P, v, T/fin, ?]
(D): [D, P, v, T/fin, ?]
(N): [N, D, P, v, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 52
['kirjan#foc', 'Merjalle', 'antoi', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'kirjan']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "kirjan"

			=None

2.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=None

3.

		Adding inflectional features {'-', 'TAIL:CAT:v,!COMP:*', 'LANG:FI', 'ABAR:FOC'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
			=D

4.

		Consume "kirja"

		D + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=D{N}

5.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		D{N} + P(lle)
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D kirja] P(lle)]

6.

		Consume "D"

		[[D kirja] P(lle)] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D kirja] P(lle){D}]

7.

		Consume "Merja-"

		[[D kirja] P(lle){D}] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D kirja] P(lle){D,N}]

8.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[D kirja] P(lle){D,N}] + T/fin
			Filtering out impossible merge sites...
				Reject [<[D kirja] [P(lle) [D Merja-]]> T/fin] due to bad left branch.
		Exploring solution number (1) =[P(lle){D,N} T/fin]
			P(lle) was opened.
			=[[D kirja] [[P(lle) [D Merja-]] T/fin]]

9.

		Consume "v"

		[[D kirja] [[P(lle) [D Merja-]] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D kirja] [[P(lle) [D Merja-]] T/fin{v}]]

10.

		Consume "antaa"

		[[D kirja] [[P(lle) [D Merja-]] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D kirja] [[P(lle) [D Merja-]] T/fin{v,V}]]

11.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[D kirja] [[P(lle) [D Merja-]] T/fin{v,V}]]

12.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[D kirja] [[P(lle) [D Merja-]] T/fin{v,V}]] + D
			Filtering out impossible merge sites...
				Reject [[<P(lle) [D Merja-]> [T/fin [v [antaa <P(lle) [D Merja-]>]]]] D] due to bad left branch.
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [<D kirja> [uFOC [<P(lle) [D Merja-]> [T/fin [v [[<D kirja> antaa] <P(lle) [D Merja-]>]]]]]] as left branch because it constitutes illicit structure.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [antaa D] due to complement selection.
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D kirja] [[P(lle) [D Merja-]] T/fin{v,V}]]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[D kirja] [[P(lle) [D Merja-]] [T/fin{v,V} D]]]

13.

		Consume "Pekka"

		[[D kirja] [[P(lle) [D Merja-]] [T/fin{v,V} D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[D kirja] [[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]]

14.
	>>>	Trying candidate parse [[D kirja] [[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D kirja] [[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]].
				Extracted head "v{V}" and reconstructed it = [[D kirja] [[P(lle) [D Merja-]] [T/fin [v{V} D{N}]]]]
				Extracted head "antaa" and reconstructed it = [[D kirja] [[P(lle) [D Merja-]] [T/fin [v [antaa D{N}]]]]]
				Extracted head "Pekka" from D and created [[D kirja] [[P(lle) [D Merja-]] [T/fin [v [antaa [D Pekka]]]]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<D kirja>:292 [[P(lle) [D Merja-]] [T/fin [v [<DP>:292 [antaa [D Pekka]]]]]]]
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<D kirja>:292 [<P(lle) [D Merja-]>:293 [T/fin [v [[<DP>:292 [antaa [D Pekka]]] <PP>:293]]]]]
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D kirja>:292 [<P(lle) [D Merja-]>:293 [T/fin [<DP>:294 [v [[<DP>:292 [antaa <D Pekka>:294]] <PP>:293]]]]]]
				= [<D kirja> [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[<D kirja> [antaa <D Pekka>]] <P(lle) [D Merja-]>]]]]]]
			Dropping A-/A-bar movement.
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
			= [<D kirja> [uFOC [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[<D kirja> [antaa <D Pekka>]] <P(lle) [D Merja-]>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D kirja>:292 [uFOC [<P(lle) [D Merja-]>:293 [T/fin [<DP>:294 [v [[<DP>:292 [antaa <D Pekka>:294]] <PP>:293]]]]]]] into LF...
				(D)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 14/125 operations) <------------------------------------
		Solution:
		[<D kirja> [uFOC [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[<D kirja> [antaa <D Pekka>]] <P(lle) [D Merja-]>]]]]]]]
		Grammar: [<D kirja>:1 [uFOC [<P(lle) [D Merja-]>:2 [T/fin [<DP>:3 [v [[<DP>:1 [antaa <D Pekka>:3]] <PP>:2]]]]]]]
		Spellout P = [DP:1 [ [PP:2 [T/fin [__:3 [v [[__:1 [V DP:3]] __:2]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'ABAR:FOC', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

D: [D]
kirja: [N, D]
uFOC: []
P(lle): [P, ]
D: [D, P, ]
Merja-: [N, D, P, ]
T/fin: [T/fin, ]
(D): [D, T/fin, ]
(N): [N, D, T/fin, ]
v: [v, T/fin, ]
(D): [D, v, T/fin, ]
(N): [N, D, v, T/fin, ]
antaa: [V, v, T/fin, ]
D: [D, V, v, T/fin, ]
Pekka: [N, D, V, v, T/fin, ]
(P): [P, v, T/fin, ]
(D): [D, P, v, T/fin, ]
(N): [N, D, P, v, T/fin, ]

			Checking if the sentence is ambiguous...


\========================================================================
# 53
['Merjalle', 'Pekka', 'antoi', 'kirjan']


			=None

1.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']
			=P(lle)

2.

		Consume "D"

		P(lle) + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=P(lle){D}

3.

		Consume "Merja-"

		P(lle){D} + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=P(lle){D,N}

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=P(lle){D,N}

5.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		P(lle){D,N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[P(lle){D,N} D]
			P(lle) was opened.
			=[[P(lle) [D Merja-]] D]

6.

		Consume "Pekka"

		[[P(lle) [D Merja-]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[P(lle) [D Merja-]] D{N}]

7.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[P(lle) [D Merja-]] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [Pekka T/fin] due to complement selection.
		Ranking completed:
			1. [[[P(lle) [D Merja-]] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[P(lle) [D Merja-]] D{N}] T/fin]
			Reconstructing head movement for [[P(lle) [D Merja-]] D{N}].
				Extracted head "Pekka" from D and created [[P(lle) [D Merja-]] [D Pekka]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				= [[P(lle) [D Merja-]] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[P [D N]]]
				D (D) has a specifier [P(lle) [D Merja-]] but is marked for -EPP behavior.
				Extraposition will be tried on [[P(lle) [D Merja-]] [D Pekka]].
				<D Pekka> was made adjunct by an extraposition rule.
			=[[[P(lle) [D Merja-]] <D Pekka>] T/fin]

8.

		Consume "v"

		[[[P(lle) [D Merja-]] <D Pekka>] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[P(lle) [D Merja-]] <D Pekka>] T/fin{v}]

9.

		Consume "antaa"

		[[[P(lle) [D Merja-]] <D Pekka>] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[P(lle) [D Merja-]] <D Pekka>] T/fin{v,V}]

10.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[[P(lle) [D Merja-]] <D Pekka>] T/fin{v,V}]

11.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[[P(lle) [D Merja-]] <D Pekka>] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]] as left branch because it constitutes illicit structure.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [antaa D] due to complement selection.
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[[P(lle) [D Merja-]] <D Pekka>] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[[P(lle) [D Merja-]] <D Pekka>] [T/fin{v,V} D]]

12.

		Consume "kirja"

		[[[P(lle) [D Merja-]] <D Pekka>] [T/fin{v,V} D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[[P(lle) [D Merja-]] <D Pekka>] [T/fin{v,V} D{N}]]

13.
	>>>	Trying candidate parse [[[P(lle) [D Merja-]] <D Pekka>] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[[P(lle) [D Merja-]] <D Pekka>] [T/fin{v,V} D{N}]].
				Extracted head "v{V}" and reconstructed it = [[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v{V} D{N}]]]
				Extracted head "antaa" and reconstructed it = [[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v [antaa D{N}]]]]
				Extracted head "kirja" from D and created [[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v [antaa [D kirja]]]]]
			Dropping floaters...
				[[P(lle) [D Merja-]] <D Pekka>] failed to tail [CAT:V]
				<[P(lle) [D Merja-]] <D Pekka>> was made an adjunct.
				Floater <[P(lle) [D Merja-]] <D Pekka>> dropped: [<[P(lle) [D Merja-]] <D Pekka>>:299 [T/fin [v [antaa [[D kirja] <PP>:299]]]]]
				[D kirja] cannot be made an adjunct because its sister is an adjunct.
				Floater [D kirja] dropped: [<[P(lle) [D Merja-]] <D Pekka>>:299 [T/fin [v [(DP):300 [antaa [[D kirja]:300 <PP>:299]]]]]]
				= [<[P(lle) [D Merja-]] <D Pekka>> [T/fin [v [[D kirja] [antaa [[D kirja] <[P(lle) [D Merja-]] <D Pekka>>]]]]]]
			Dropping A-/A-bar movement.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [<[P(lle) [D Merja-]] <D Pekka>>:299 [T/fin [v [(DP):300 [antaa [[D kirja]:300 <PP>:299]]]]]].
			= [<[P(lle) [D Merja-]] <D Pekka>> [T/fin [v [[D kirja] [antaa [[D kirja] <[P(lle) [D Merja-]] <D Pekka>>]]]]]]
		Checking LF-interface conditions.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
			LF-interface condition(s) violated
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
D: [D]
Pekka: [N, D]
T/fin: [T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
(P): [P, V, v, T/fin]
(D): [D, P, V, v, T/fin]
(N): [N, D, P, V, v, T/fin]
(D): [D, V, v, T/fin]
(N): [N, D, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[P(lle) [D Merja-]] <D Pekka>] T/fin{v,V}] D]
			Reconstructing head movement for [[[P(lle) [D Merja-]] <D Pekka>] T/fin{v,V}].
				Extracted head "v{V}" from T/fin and created [[[P(lle) [D Merja-]] <D Pekka>] [T/fin v{V}]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v antaa]]]
			Dropping floaters...
				[[P(lle) [D Merja-]] <D Pekka>] failed to tail [CAT:V]
				= [[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v antaa]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- D Pekka " into memory buffer from SPEC of "T/fin".
				Memory buffer: [[[P [D N]] [D N]]]
				Dropping [[P [D N]] [D N]](=P(lle) D Merja- D Pekka ) from memory buffer into Comp of {'V'}.
				Result [[[P(lle) [D Merja-]] <D Pekka>]:301 [T/fin [v [antaa (PP):301]]]]
				Remaining items in memory buffer: []
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[[P(lle) [D Merja-]] <D Pekka>]:301 [T/fin [v [antaa (PP):301]]]].
			=[[[[P(lle) [D Merja-]] <D Pekka>]:301 [T/fin [v [antaa (PP):301]]]] D]

14.

		Consume "kirja"

		[[[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[[[P(lle) [D Merja-]] <D Pekka>]:301 [T/fin [v [antaa (PP):301]]]] D{N}]

15.
	>>>	Trying candidate parse [[[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]] D{N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[[[P(lle) [D Merja-]] <D Pekka>]:301 [T/fin [v [antaa (PP):301]]]] D{N}].
				Extracted head "kirja" from D and created [[[[P(lle) [D Merja-]] <D Pekka>]:301 [T/fin [v [antaa (PP):301]]]] [D kirja]]
			Dropping floaters...
				D failed to tail.
				<D kirja> was made an adjunct.
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [[[[P(lle) [D Merja-]] <D Pekka>]:301 [T/fin [v [<DP>:303 [antaa (PP):301]]]]] <D kirja>:303]
				= [[[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v [<D kirja> [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]]] <D kirja>]
			Dropping A-/A-bar movement.
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[[[P(lle) [D Merja-]] <D Pekka>]:301 [T/fin [v [<DP>:303 [antaa (PP):301]]]]] <D kirja>:303].
			= [[[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v [<D kirja> [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]]] <D kirja>]
		Checking LF-interface conditions.
				An EPP-head "v" lacks specifier D that it requires.
			LF-interface condition(s) violated
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
D: [D]
Pekka: [N, D]
T/fin: [T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
antaa: [V, v, T/fin]
(P): [P, V, v, T/fin]
(D): [D, P, V, v, T/fin]
(N): [N, D, P, V, v, T/fin]
(D): [D, V, v, T/fin]
(N): [N, D, V, v, T/fin]
D: [D]
kirja: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[P(lle) [D Merja-]] [[D Pekka] T/fin]]

16.

		Consume "v"

		[[P(lle) [D Merja-]] [[D Pekka] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[P(lle) [D Merja-]] [[D Pekka] T/fin{v}]]

17.

		Consume "antaa"

		[[P(lle) [D Merja-]] [[D Pekka] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[P(lle) [D Merja-]] [[D Pekka] T/fin{v,V}]]

18.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[P(lle) [D Merja-]] [[D Pekka] T/fin{v,V}]]

19.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[P(lle) [D Merja-]] [[D Pekka] T/fin{v,V}]] + D
			Filtering out impossible merge sites...
				Reject [[<P(lle) [D Merja-]> [? [<D Pekka> [T/fin [<D Pekka> [v [antaa <P(lle) [D Merja-]>]]]]]]] D] due to bad left branch.
				Reject [[<D Pekka> [T/fin [<D Pekka> [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[P(lle) [D Merja-]] [[D Pekka] [T/fin{v,V} D]]]

20.

		Consume "kirja"

		[[P(lle) [D Merja-]] [[D Pekka] [T/fin{v,V} D]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[P(lle) [D Merja-]] [[D Pekka] [T/fin{v,V} D{N}]]]

21.
	>>>	Trying candidate parse [[P(lle) [D Merja-]] [[D Pekka] [T/fin{v,V} D{N}]]] (3.)
		Reconstructing...
			Reconstructing head movement for [[P(lle) [D Merja-]] [[D Pekka] [T/fin{v,V} D{N}]]].
				Extracted head "v{V}" and reconstructed it = [[P(lle) [D Merja-]] [[D Pekka] [T/fin [v{V} D{N}]]]]
				Extracted head "antaa" and reconstructed it = [[P(lle) [D Merja-]] [[D Pekka] [T/fin [v [antaa D{N}]]]]]
				Extracted head "kirja" from D and created [[P(lle) [D Merja-]] [[D Pekka] [T/fin [v [antaa [D kirja]]]]]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<P(lle) [D Merja-]>:307 [[D Pekka] [T/fin [v [[antaa [D kirja]] <PP>:307]]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<P(lle) [D Merja-]>:307 [<D Pekka>:308 [T/fin [<DP>:308 [v [[antaa [D kirja]] <PP>:307]]]]]]
				= [<P(lle) [D Merja-]> [<D Pekka> [T/fin [<D Pekka> [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<P(lle) [D Merja-]>:307 [? [<D Pekka>:308 [T/fin [<DP>:308 [v [[antaa [D kirja]] <PP>:307]]]]]]].
			= [<P(lle) [D Merja-]> [? [<D Pekka> [T/fin [<D Pekka> [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
?: [?]
D: [D, ?]
Pekka: [N, D, ?]
T/fin: [T/fin, ?]
(D): [D, T/fin, ?]
(N): [N, D, T/fin, ?]
v: [v, T/fin, ?]
antaa: [V, v, T/fin, ?]
D: [D, V, v, T/fin, ?]
kirja: [N, D, V, v, T/fin, ?]
(P): [P, v, T/fin, ?]
(D): [D, P, v, T/fin, ?]
(N): [N, D, P, v, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 54
['Merjalle#foc', 'Pekka', 'antoi', 'kirjan']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Merjalle']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Merjalle"

			=None

2.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Adding inflectional features {'-', 'LANG:FI', 'ABAR:FOC'} to P(lle)
		= ['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
			=P(lle)

3.

		Consume "D"

		P(lle) + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=P(lle){D}

4.

		Consume "Merja-"

		P(lle){D} + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=P(lle){D,N}

5.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=P(lle){D,N}

6.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		P(lle){D,N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[P(lle){D,N} D]
			P(lle) was opened.
			=[[P(lle) [D Merja-]] D]

7.

		Consume "Pekka"

		[[P(lle) [D Merja-]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[P(lle) [D Merja-]] D{N}]

8.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[P(lle) [D Merja-]] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [Pekka T/fin] due to complement selection.
		Ranking completed:
			1. [[[P(lle) [D Merja-]] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[P(lle) [D Merja-]] D{N}] T/fin]
			Reconstructing head movement for [[P(lle) [D Merja-]] D{N}].
				Extracted head "Pekka" from D and created [[P(lle) [D Merja-]] [D Pekka]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				= [[P(lle) [D Merja-]] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "D".
				Criterial features {'FOC'} copied to {'D'}
				Tail features [A/HEAD][CAT:FIN] were detected at D, this must head an adjunct floater.
				<D Pekka> was made an adjunct.
				Memory buffer: [[P [D N]]]
			=[[[P(lle) [D Merja-]] <D Pekka>] T/fin]

9.

		Consume "v"

		[[[P(lle) [D Merja-]] <D Pekka>] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[P(lle) [D Merja-]] <D Pekka>] T/fin{v}]

10.

		Consume "antaa"

		[[[P(lle) [D Merja-]] <D Pekka>] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[P(lle) [D Merja-]] <D Pekka>] T/fin{v,V}]

11.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[[P(lle) [D Merja-]] <D Pekka>] T/fin{v,V}]

12.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[[P(lle) [D Merja-]] <D Pekka>] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]] as left branch because it constitutes illicit structure.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [antaa D] due to complement selection.
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[[P(lle) [D Merja-]] <D Pekka>] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[[P(lle) [D Merja-]] <D Pekka>] [T/fin{v,V} D]]

13.

		Consume "kirja"

		[[[P(lle) [D Merja-]] <D Pekka>] [T/fin{v,V} D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[[P(lle) [D Merja-]] <D Pekka>] [T/fin{v,V} D{N}]]

14.
	>>>	Trying candidate parse [[[P(lle) [D Merja-]] <D Pekka>] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[[P(lle) [D Merja-]] <D Pekka>] [T/fin{v,V} D{N}]].
				Extracted head "v{V}" and reconstructed it = [[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v{V} D{N}]]]
				Extracted head "antaa" and reconstructed it = [[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v [antaa D{N}]]]]
				Extracted head "kirja" from D and created [[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v [antaa [D kirja]]]]]
			Dropping floaters...
				[[P(lle) [D Merja-]] <D Pekka>] failed to tail [CAT:V]
				<[P(lle) [D Merja-]] <D Pekka>> was made an adjunct.
				Floater <[P(lle) [D Merja-]] <D Pekka>> dropped: [<[P(lle) [D Merja-]] <D Pekka>>:313 [T/fin [v [antaa [[D kirja] <PP>:313]]]]]
				[D kirja] cannot be made an adjunct because its sister is an adjunct.
				Floater [D kirja] dropped: [<[P(lle) [D Merja-]] <D Pekka>>:313 [T/fin [v [(DP):314 [antaa [[D kirja]:314 <PP>:313]]]]]]
				= [<[P(lle) [D Merja-]] <D Pekka>> [T/fin [v [[D kirja] [antaa [[D kirja] <[P(lle) [D Merja-]] <D Pekka>>]]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'FIN', 'T/fin', 'FIN/T/fin'}
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [<[P(lle) [D Merja-]] <D Pekka>>:313 [T/fin [v [(DP):314 [antaa [[D kirja]:314 <PP>:313]]]]]].
			= [<[P(lle) [D Merja-]] <D Pekka>> [T/fin [v [[D kirja] [antaa [[D kirja] <[P(lle) [D Merja-]] <D Pekka>>]]]]]]
		Checking LF-interface conditions.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
			LF-interface condition(s) violated
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
D: [D]
Pekka: [N, D]
T/fin: [T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
(P): [P, V, v, T/fin]
(D): [D, P, V, v, T/fin]
(N): [N, D, P, V, v, T/fin]
(D): [D, V, v, T/fin]
(N): [N, D, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[[P(lle) [D Merja-]] <D Pekka>] T/fin{v,V}] D]
			Reconstructing head movement for [[[P(lle) [D Merja-]] <D Pekka>] T/fin{v,V}].
				Extracted head "v{V}" from T/fin and created [[[P(lle) [D Merja-]] <D Pekka>] [T/fin v{V}]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v antaa]]]
			Dropping floaters...
				[[P(lle) [D Merja-]] <D Pekka>] failed to tail [CAT:V]
				= [[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v antaa]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- D Pekka " into memory buffer from SPEC of "T/fin".
				Criterial features {'FOC'} copied to {'FIN', 'T/fin', 'FIN/T/fin'}
				Memory buffer: [[[P [D N]] [D N]]]
				Dropping [[P [D N]] [D N]](=P(lle) D Merja- D Pekka ) from memory buffer into Comp of {'V'}.
				Result [[[P(lle) [D Merja-]] <D Pekka>]:315 [T/fin [v [antaa (PP):315]]]]
				Remaining items in memory buffer: []
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[[P(lle) [D Merja-]] <D Pekka>]:315 [T/fin [v [antaa (PP):315]]]].
			=[[[[P(lle) [D Merja-]] <D Pekka>]:315 [T/fin [v [antaa (PP):315]]]] D]

15.

		Consume "kirja"

		[[[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[[[P(lle) [D Merja-]] <D Pekka>]:315 [T/fin [v [antaa (PP):315]]]] D{N}]

16.
	>>>	Trying candidate parse [[[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]] D{N}] (2.)
		Reconstructing...
			Reconstructing head movement for [[[[P(lle) [D Merja-]] <D Pekka>]:315 [T/fin [v [antaa (PP):315]]]] D{N}].
				Extracted head "kirja" from D and created [[[[P(lle) [D Merja-]] <D Pekka>]:315 [T/fin [v [antaa (PP):315]]]] [D kirja]]
			Dropping floaters...
				D failed to tail.
				<D kirja> was made an adjunct.
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [[[[P(lle) [D Merja-]] <D Pekka>]:315 [T/fin [v [<DP>:317 [antaa (PP):315]]]]] <D kirja>:317]
				= [[[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v [<D kirja> [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]]] <D kirja>]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'T/fin', 'uFOC', 'iFOC', 'FIN/T/fin', 'FIN', 'FIN/FIN/T/fin/T/fin/iFOC/uFOC'}
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[[[P(lle) [D Merja-]] <D Pekka>]:315 [T/fin [v [<DP>:317 [antaa (PP):315]]]]] <D kirja>:317].
			= [[[[P(lle) [D Merja-]] <D Pekka>] [T/fin [v [<D kirja> [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]]] <D kirja>]
		Checking LF-interface conditions.
				An EPP-head "v" lacks specifier D that it requires.
			LF-interface condition(s) violated
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/FIN/T/fin/T/fin/iFOC/uFOC/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
D: [D]
Pekka: [N, D]
T/fin: [T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
antaa: [V, v, T/fin]
(P): [P, V, v, T/fin]
(D): [D, P, V, v, T/fin]
(N): [N, D, P, V, v, T/fin]
(D): [D, V, v, T/fin]
(N): [N, D, V, v, T/fin]
D: [D]
kirja: [N, D]


		Trying to find other solutions...
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[P(lle) [D Merja-]] [[D Pekka] T/fin]]

17.

		Consume "v"

		[[P(lle) [D Merja-]] [[D Pekka] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[P(lle) [D Merja-]] [[D Pekka] T/fin{v}]]

18.

		Consume "antaa"

		[[P(lle) [D Merja-]] [[D Pekka] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[P(lle) [D Merja-]] [[D Pekka] T/fin{v,V}]]

19.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[P(lle) [D Merja-]] [[D Pekka] T/fin{v,V}]]

20.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[P(lle) [D Merja-]] [[D Pekka] T/fin{v,V}]] + D
			Filtering out impossible merge sites...
				Reject [[<P(lle) [D Merja-]> [uFOC [<D Pekka> [T/fin [<D Pekka> [v [antaa <P(lle) [D Merja-]>]]]]]]] D] due to bad left branch.
				Reject [[<D Pekka> [T/fin [<D Pekka> [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[P(lle) [D Merja-]] [[D Pekka] [T/fin{v,V} D]]]

21.

		Consume "kirja"

		[[P(lle) [D Merja-]] [[D Pekka] [T/fin{v,V} D]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[P(lle) [D Merja-]] [[D Pekka] [T/fin{v,V} D{N}]]]

22.
	>>>	Trying candidate parse [[P(lle) [D Merja-]] [[D Pekka] [T/fin{v,V} D{N}]]] (3.)
		Reconstructing...
			Reconstructing head movement for [[P(lle) [D Merja-]] [[D Pekka] [T/fin{v,V} D{N}]]].
				Extracted head "v{V}" and reconstructed it = [[P(lle) [D Merja-]] [[D Pekka] [T/fin [v{V} D{N}]]]]
				Extracted head "antaa" and reconstructed it = [[P(lle) [D Merja-]] [[D Pekka] [T/fin [v [antaa D{N}]]]]]
				Extracted head "kirja" from D and created [[P(lle) [D Merja-]] [[D Pekka] [T/fin [v [antaa [D kirja]]]]]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<P(lle) [D Merja-]>:321 [[D Pekka] [T/fin [v [[antaa [D kirja]] <PP>:321]]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<P(lle) [D Merja-]>:321 [<D Pekka>:322 [T/fin [<DP>:322 [v [[antaa [D kirja]] <PP>:321]]]]]]
				= [<P(lle) [D Merja-]> [<D Pekka> [T/fin [<D Pekka> [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]]]]]
			Dropping A-/A-bar movement.
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
			= [<P(lle) [D Merja-]> [uFOC [<D Pekka> [T/fin [<D Pekka> [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<P(lle) [D Merja-]>:321 [uFOC [<D Pekka>:322 [T/fin [<DP>:322 [v [[antaa [D kirja]] <PP>:321]]]]]]] into LF...
				(P)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 22/264 operations) <------------------------------------
		Solution:
		[<P(lle) [D Merja-]> [uFOC [<D Pekka> [T/fin [<D Pekka> [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]]]]]]
		Grammar: [<P(lle) [D Merja-]>:1 [uFOC [<D Pekka>:2 [T/fin [<DP>:2 [v [[antaa [D kirja]] <PP>:1]]]]]]]
		Spellout P = [PP:1 [ [DP:2 [T/fin [__:2 [v [[V [D N]] __:1]]]]]]]
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
uFOC: []
D: [D, ]
Pekka: [N, D, ]
T/fin: [T/fin, ]
(D): [D, T/fin, ]
(N): [N, D, T/fin, ]
v: [v, T/fin, ]
antaa: [V, v, T/fin, ]
D: [D, V, v, T/fin, ]
kirja: [N, D, V, v, T/fin, ]
(P): [P, v, T/fin, ]
(D): [D, P, v, T/fin, ]
(N): [N, D, P, v, T/fin, ]

			Checking if the sentence is ambiguous...


\========================================================================
# 55
['Merjalle', 'Pekka', 'kirjan', 'antoi']


			=None

1.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']
			=P(lle)

2.

		Consume "D"

		P(lle) + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=P(lle){D}

3.

		Consume "Merja-"

		P(lle){D} + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=P(lle){D,N}

4.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=P(lle){D,N}

5.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		P(lle){D,N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[P(lle){D,N} D]
			P(lle) was opened.
			=[[P(lle) [D Merja-]] D]

6.

		Consume "Pekka"

		[[P(lle) [D Merja-]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[P(lle) [D Merja-]] D{N}]

7.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[P(lle) [D Merja-]] D{N}]

8.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[P(lle) [D Merja-]] D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [D{N} D] due to local agreement failure.
				Avoid [Pekka D] due to complement selection.
				Prioritize [[P(lle) [D Merja-]] D{N}] because all solutions were negative.
		Ranking completed:
			1. [[[P(lle) [D Merja-]] D{N}]; D]
			2. [D{N}; D]
		Exploring solution number (1) =[[[P(lle) [D Merja-]] D{N}] D]
			Reconstructing head movement for [[P(lle) [D Merja-]] D{N}].
				Extracted head "Pekka" from D and created [[P(lle) [D Merja-]] [D Pekka]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				= [[P(lle) [D Merja-]] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[P [D N]]]
				D (D) has a specifier [P(lle) [D Merja-]] but is marked for -EPP behavior.
				Extraposition will be tried on [[P(lle) [D Merja-]] [D Pekka]].
				<D Pekka> was made adjunct by an extraposition rule.
			=[[[P(lle) [D Merja-]] <D Pekka>] D]

9.

		Consume "kirja"

		[[[P(lle) [D Merja-]] <D Pekka>] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[[P(lle) [D Merja-]] <D Pekka>] D{N}]

10.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[[P(lle) [D Merja-]] <D Pekka>] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [kirja T/fin] due to complement selection.
		Ranking completed:
			1. [[[[P(lle) [D Merja-]] <D Pekka>] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[[P(lle) [D Merja-]] <D Pekka>] D{N}] T/fin]
			Reconstructing head movement for [[[P(lle) [D Merja-]] <D Pekka>] D{N}].
				Extracted head "kirja" from D and created [[[P(lle) [D Merja-]] <D Pekka>] [D kirja]]
			Dropping floaters...
				[[P(lle) [D Merja-]] <D Pekka>] failed to tail [CAT:V]
				= [[[P(lle) [D Merja-]] <D Pekka>] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- D Pekka " into memory buffer from SPEC of "D".
				Memory buffer: [[[P [D N]] [D N]]]
				D (D) has a specifier [[P(lle) [D Merja-]] <D Pekka>] but is marked for -EPP behavior.
				Extraposition will be tried on [[[P(lle) [D Merja-]] <D Pekka>] [D kirja]].
				<D kirja> was made adjunct by an extraposition rule.
			=[[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>] T/fin]

11.

		Consume "v"

		[[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>] T/fin{v}]

12.

		Consume "antaa"

		[[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>] T/fin{v,V}]

13.
	>>>	Trying candidate parse [[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>] T/fin{v,V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>] T/fin{v,V}].
				Extracted head "v{V}" from T/fin and created [[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>] [T/fin v{V}]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>] [T/fin [v antaa]]]
			Dropping floaters...
				[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>] failed to tail [CAT:V]
				= [[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>] [T/fin [v antaa]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- D Pekka D kirja " into memory buffer from SPEC of "T/fin".
				Memory buffer: [[[[P [D N]] [D N]] [D N]]]
				Dropping [[[P [D N]] [D N]] [D N]](=P(lle) D Merja- D Pekka D kirja ) from memory buffer into Comp of {'V'}.
				Result [[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>]:323 [T/fin [v [antaa (PP):323]]]]
				Remaining items in memory buffer: []
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>]:323 [T/fin [v [antaa (PP):323]]]].
			= [[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>] [T/fin [v [antaa [[[P(lle) [D Merja-]] <D Pekka>] <D kirja>]]]]]
		Checking LF-interface conditions.
				An EPP-head "v" lacks specifier D that it requires.
			LF-interface condition(s) violated
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
D: [D]
Pekka: [N, D]
D: [D]
kirja: [N, D]
T/fin: [T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
(P): [P, V, v, T/fin]
(D): [D, P, V, v, T/fin]
(N): [N, D, P, V, v, T/fin]
(D): [D, V, v, T/fin]
(N): [N, D, V, v, T/fin]
(D): [D, V, v, T/fin]
(N): [N, D, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[[P(lle) [D Merja-]] <D Pekka>] [[D kirja] T/fin]]

14.

		Consume "v"

		[[[P(lle) [D Merja-]] <D Pekka>] [[D kirja] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[P(lle) [D Merja-]] <D Pekka>] [[D kirja] T/fin{v}]]

15.

		Consume "antaa"

		[[[P(lle) [D Merja-]] <D Pekka>] [[D kirja] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[P(lle) [D Merja-]] <D Pekka>] [[D kirja] T/fin{v,V}]]

16.
	>>>	Trying candidate parse [[[P(lle) [D Merja-]] <D Pekka>] [[D kirja] T/fin{v,V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [[[P(lle) [D Merja-]] <D Pekka>] [[D kirja] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[[P(lle) [D Merja-]] <D Pekka>] [[D kirja] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[[P(lle) [D Merja-]] <D Pekka>] [[D kirja] [T/fin [v antaa]]]]
			Dropping floaters...
				[[P(lle) [D Merja-]] <D Pekka>] failed to tail [CAT:V]
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [[[P(lle) [D Merja-]] <D Pekka>] [<D kirja>:325 [T/fin [v [<DP>:325 antaa]]]]]
				= [[[P(lle) [D Merja-]] <D Pekka>] [<D kirja> [T/fin [v [<D kirja> antaa]]]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- D Pekka " into memory buffer from SPEC of "T/fin".
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				Memory buffer: [[[P [D N]] [D N]]]
				Dropping [[P [D N]] [D N]](=P(lle) D Merja- D Pekka ) from memory buffer into Comp of {'V'}.
				Result [[[P(lle) [D Merja-]] <D Pekka>]:326 [? [<D kirja>:325 [T/fin [v [<DP>:325 [antaa (PP):326]]]]]]]
				Remaining items in memory buffer: []
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [[[P(lle) [D Merja-]] <D Pekka>]:326 [? [<D kirja>:325 [T/fin [v [<DP>:325 [antaa (PP):326]]]]]]].
			= [[[P(lle) [D Merja-]] <D Pekka>] [? [<D kirja> [T/fin [v [<D kirja> [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
			LF-interface condition(s) violated
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
D: [D]
Pekka: [N, D]
?: [?]
D: [D, ?]
kirja: [N, D, ?]
T/fin: [T/fin, ?]
v: [v, T/fin, ?]
(D): [D, v, T/fin, ?]
(N): [N, D, v, T/fin, ?]
antaa: [V, v, T/fin, ?]
(P): [P, V, v, T/fin, ?]
(D): [D, P, V, v, T/fin, ?]
(N): [N, D, P, V, v, T/fin, ?]
(D): [D, V, v, T/fin, ?]
(N): [N, D, V, v, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} D]
			D was opened.
			=[[P(lle) [D Merja-]] [[D Pekka] D]]

17.

		Consume "kirja"

		[[P(lle) [D Merja-]] [[D Pekka] D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[P(lle) [D Merja-]] [[D Pekka] D{N}]]

18.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[P(lle) [D Merja-]] [[D Pekka] D{N}]] + T/fin
			Filtering out impossible merge sites...
				Reject [[[P(lle) [D Merja-]] [? [[D Pekka] [D kirja]]]] T/fin] due to bad left branch.
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [kirja T/fin] due to complement selection.
		Ranking completed:
			1. [[[D Pekka] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[D Pekka] D{N}] T/fin]
			Reconstructing head movement for [[D Pekka] D{N}].
				Extracted head "kirja" from D and created [[D Pekka] [D kirja]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[D Pekka] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "D".
				Memory buffer: [[D N]]
				D (D) has a specifier [D Pekka] but is marked for -EPP behavior.
				Extraposition will be tried on [[D Pekka] [D kirja]].
				<D kirja> was made adjunct by an extraposition rule.
			=[[P(lle) [D Merja-]] [[[D Pekka] <D kirja>] T/fin]]

19.

		Consume "v"

		[[P(lle) [D Merja-]] [[[D Pekka] <D kirja>] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[P(lle) [D Merja-]] [[[D Pekka] <D kirja>] T/fin{v}]]

20.

		Consume "antaa"

		[[P(lle) [D Merja-]] [[[D Pekka] <D kirja>] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[P(lle) [D Merja-]] [[[D Pekka] <D kirja>] T/fin{v,V}]]

21.
	>>>	Trying candidate parse [[P(lle) [D Merja-]] [[[D Pekka] <D kirja>] T/fin{v,V}]] (3.)
		Reconstructing...
			Reconstructing head movement for [[P(lle) [D Merja-]] [[[D Pekka] <D kirja>] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[P(lle) [D Merja-]] [[[D Pekka] <D kirja>] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[P(lle) [D Merja-]] [[[D Pekka] <D kirja>] [T/fin [v antaa]]]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<P(lle) [D Merja-]>:327 [[[D Pekka] <D kirja>] [T/fin [v [antaa <PP>:327]]]]]
				[[D Pekka] <D kirja>] failed to tail [A/HEAD][CAT:FIN]
				<[D Pekka] <D kirja>> was made an adjunct.
				Floater <[D Pekka] <D kirja>> dropped: [<P(lle) [D Merja-]>:327 [<[D Pekka] <D kirja>>:328 [T/fin [<DP>:328 [v [antaa <PP>:327]]]]]]
				= [<P(lle) [D Merja-]> [<[D Pekka] <D kirja>> [T/fin [<[D Pekka] <D kirja>> [v [antaa <P(lle) [D Merja-]>]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				(D) failed internal tail test.
				v probing for CAT:D failed.
				Extraposition will be tried on [<P(lle) [D Merja-]>:327 [? [<[D Pekka] <D kirja>>:328 [T/fin [<DP>:328 [v [antaa <PP>:327]]]]]]].
			= [<P(lle) [D Merja-]> [? [<[D Pekka] <D kirja>> [T/fin [<[D Pekka] <D kirja>> [v [antaa <P(lle) [D Merja-]>]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				(D) failed internal tail test.
				v probing for CAT:D failed.
			LF-interface condition(s) violated
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
?: [?]
D: [D, ?]
Pekka: [N, D, ?]
D: [D, ?]
kirja: [N, D, ?]
T/fin: [T/fin, ?]
(D): [D, T/fin, ?]
(N): [N, D, T/fin, ?]
(D): [D, T/fin, ?]
(N): [N, D, T/fin, ?]
v: [v, T/fin, ?]
antaa: [V, v, T/fin, ?]
(P): [P, V, v, T/fin, ?]
(D): [D, P, V, v, T/fin, ?]
(N): [N, D, P, V, v, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[P(lle) [D Merja-]] [[D Pekka] [[D kirja] T/fin]]]

22.

		Consume "v"

		[[P(lle) [D Merja-]] [[D Pekka] [[D kirja] T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[P(lle) [D Merja-]] [[D Pekka] [[D kirja] T/fin{v}]]]

23.

		Consume "antaa"

		[[P(lle) [D Merja-]] [[D Pekka] [[D kirja] T/fin{v}]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[P(lle) [D Merja-]] [[D Pekka] [[D kirja] T/fin{v,V}]]]

24.
	>>>	Trying candidate parse [[P(lle) [D Merja-]] [[D Pekka] [[D kirja] T/fin{v,V}]]] (4.)
		Reconstructing...
			Reconstructing head movement for [[P(lle) [D Merja-]] [[D Pekka] [[D kirja] T/fin{v,V}]]].
				Extracted head "v{V}" from T/fin and created [[P(lle) [D Merja-]] [[D Pekka] [[D kirja] [T/fin v{V}]]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[P(lle) [D Merja-]] [[D Pekka] [[D kirja] [T/fin [v antaa]]]]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<P(lle) [D Merja-]>:329 [[D Pekka] [[D kirja] [T/fin [v [antaa <PP>:329]]]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<P(lle) [D Merja-]>:329 [<D Pekka>:330 [[D kirja] [T/fin [<DP>:330 [v [antaa <PP>:329]]]]]]]
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<P(lle) [D Merja-]>:329 [<D Pekka>:330 [<D kirja>:331 [T/fin [<DP>:330 [v [<DP>:331 [antaa <PP>:329]]]]]]]]
				= [<P(lle) [D Merja-]> [<D Pekka> [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa <P(lle) [D Merja-]>]]]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<P(lle) [D Merja-]>:329 [? [<D Pekka>:330 [? [<D kirja>:331 [T/fin [<DP>:330 [v [<DP>:331 [antaa <PP>:329]]]]]]]]]].
			= [<P(lle) [D Merja-]> [? [<D Pekka> [? [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa <P(lle) [D Merja-]>]]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
?: [?]
D: [D, ?]
Pekka: [N, D, ?]
?: [?, ?]
D: [D, ?, ?]
kirja: [N, D, ?, ?]
T/fin: [T/fin, ?, ?]
(D): [D, T/fin, ?, ?]
(N): [N, D, T/fin, ?, ?]
v: [v, T/fin, ?, ?]
(D): [D, v, T/fin, ?, ?]
(N): [N, D, v, T/fin, ?, ?]
antaa: [V, v, T/fin, ?, ?]
(P): [P, V, v, T/fin, ?, ?]
(D): [D, P, V, v, T/fin, ?, ?]
(N): [N, D, P, V, v, T/fin, ?, ?]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 56
['Merjalle#foc', 'Pekka', 'kirjan', 'antoi']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Merjalle']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Merjalle"

			=None

2.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Adding inflectional features {'-', 'LANG:FI', 'ABAR:FOC'} to P(lle)
		= ['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
			=P(lle)

3.

		Consume "D"

		P(lle) + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=P(lle){D}

4.

		Consume "Merja-"

		P(lle){D} + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=P(lle){D,N}

5.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=P(lle){D,N}

6.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		P(lle){D,N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[P(lle){D,N} D]
			P(lle) was opened.
			=[[P(lle) [D Merja-]] D]

7.

		Consume "Pekka"

		[[P(lle) [D Merja-]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[P(lle) [D Merja-]] D{N}]

8.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[P(lle) [D Merja-]] D{N}]

9.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[P(lle) [D Merja-]] D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [D{N} D] due to local agreement failure.
				Avoid [Pekka D] due to complement selection.
				Prioritize [[P(lle) [D Merja-]] D{N}] because all solutions were negative.
		Ranking completed:
			1. [[[P(lle) [D Merja-]] D{N}]; D]
			2. [D{N}; D]
		Exploring solution number (1) =[[[P(lle) [D Merja-]] D{N}] D]
			Reconstructing head movement for [[P(lle) [D Merja-]] D{N}].
				Extracted head "Pekka" from D and created [[P(lle) [D Merja-]] [D Pekka]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				= [[P(lle) [D Merja-]] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "D".
				Criterial features {'FOC'} copied to {'D'}
				Tail features [A/HEAD][CAT:FIN] were detected at D, this must head an adjunct floater.
				<D Pekka> was made an adjunct.
				Memory buffer: [[P [D N]]]
			=[[[P(lle) [D Merja-]] <D Pekka>] D]

10.

		Consume "kirja"

		[[[P(lle) [D Merja-]] <D Pekka>] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[[P(lle) [D Merja-]] <D Pekka>] D{N}]

11.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[[P(lle) [D Merja-]] <D Pekka>] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [kirja T/fin] due to complement selection.
		Ranking completed:
			1. [[[[P(lle) [D Merja-]] <D Pekka>] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[[P(lle) [D Merja-]] <D Pekka>] D{N}] T/fin]
			Reconstructing head movement for [[[P(lle) [D Merja-]] <D Pekka>] D{N}].
				Extracted head "kirja" from D and created [[[P(lle) [D Merja-]] <D Pekka>] [D kirja]]
			Dropping floaters...
				[[P(lle) [D Merja-]] <D Pekka>] failed to tail [CAT:V]
				= [[[P(lle) [D Merja-]] <D Pekka>] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- D Pekka " into memory buffer from SPEC of "D".
				Criterial features {'FOC'} copied to {'D'}
				Tail features [!COMP:*][CAT:v] were detected at D, this must head an adjunct floater.
				<D kirja> was made an adjunct.
				Memory buffer: [[[P [D N]] [D N]]]
			=[[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>] T/fin]

12.

		Consume "v"

		[[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>] T/fin{v}]

13.

		Consume "antaa"

		[[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>] T/fin{v,V}]

14.
	>>>	Trying candidate parse [[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>] T/fin{v,V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>] T/fin{v,V}].
				Extracted head "v{V}" from T/fin and created [[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>] [T/fin v{V}]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>] [T/fin [v antaa]]]
			Dropping floaters...
				[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>] failed to tail [CAT:V]
				= [[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>] [T/fin [v antaa]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- D Pekka D kirja " into memory buffer from SPEC of "T/fin".
				Criterial features {'FOC'} copied to {'FIN', 'T/fin', 'FIN/T/fin'}
				Memory buffer: [[[[P [D N]] [D N]] [D N]]]
				Dropping [[[P [D N]] [D N]] [D N]](=P(lle) D Merja- D Pekka D kirja ) from memory buffer into Comp of {'V'}.
				Result [[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>]:332 [T/fin [v [antaa (PP):332]]]]
				Remaining items in memory buffer: []
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>]:332 [T/fin [v [antaa (PP):332]]]].
			= [[[[P(lle) [D Merja-]] <D Pekka>] <D kirja>] [T/fin [v [antaa [[[P(lle) [D Merja-]] <D Pekka>] <D kirja>]]]]]
		Checking LF-interface conditions.
				An EPP-head "v" lacks specifier D that it requires.
			LF-interface condition(s) violated
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
D: [D]
Pekka: [N, D]
D: [D]
kirja: [N, D]
T/fin: [T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
(P): [P, V, v, T/fin]
(D): [D, P, V, v, T/fin]
(N): [N, D, P, V, v, T/fin]
(D): [D, V, v, T/fin]
(N): [N, D, V, v, T/fin]
(D): [D, V, v, T/fin]
(N): [N, D, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[[P(lle) [D Merja-]] <D Pekka>] [[D kirja] T/fin]]

15.

		Consume "v"

		[[[P(lle) [D Merja-]] <D Pekka>] [[D kirja] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[P(lle) [D Merja-]] <D Pekka>] [[D kirja] T/fin{v}]]

16.

		Consume "antaa"

		[[[P(lle) [D Merja-]] <D Pekka>] [[D kirja] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[P(lle) [D Merja-]] <D Pekka>] [[D kirja] T/fin{v,V}]]

17.
	>>>	Trying candidate parse [[[P(lle) [D Merja-]] <D Pekka>] [[D kirja] T/fin{v,V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [[[P(lle) [D Merja-]] <D Pekka>] [[D kirja] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[[P(lle) [D Merja-]] <D Pekka>] [[D kirja] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[[P(lle) [D Merja-]] <D Pekka>] [[D kirja] [T/fin [v antaa]]]]
			Dropping floaters...
				[[P(lle) [D Merja-]] <D Pekka>] failed to tail [CAT:V]
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [[[P(lle) [D Merja-]] <D Pekka>] [<D kirja>:334 [T/fin [v [<DP>:334 antaa]]]]]
				= [[[P(lle) [D Merja-]] <D Pekka>] [<D kirja> [T/fin [v [<D kirja> antaa]]]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- D Pekka " into memory buffer from SPEC of "T/fin".
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
				Memory buffer: [[[P [D N]] [D N]]]
				Dropping [[P [D N]] [D N]](=P(lle) D Merja- D Pekka ) from memory buffer into Comp of {'V'}.
				Result [[[P(lle) [D Merja-]] <D Pekka>]:335 [uFOC [<D kirja>:334 [T/fin [v [<DP>:334 [antaa (PP):335]]]]]]]
				Remaining items in memory buffer: []
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [[[P(lle) [D Merja-]] <D Pekka>]:335 [uFOC [<D kirja>:334 [T/fin [v [<DP>:334 [antaa (PP):335]]]]]]].
			= [[[P(lle) [D Merja-]] <D Pekka>] [uFOC [<D kirja> [T/fin [v [<D kirja> [antaa [[P(lle) [D Merja-]] <D Pekka>]]]]]]]]
		Checking LF-interface conditions.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
			LF-interface condition(s) violated
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
D: [D]
Pekka: [N, D]
uFOC: []
D: [D, ]
kirja: [N, D, ]
T/fin: [T/fin, ]
v: [v, T/fin, ]
(D): [D, v, T/fin, ]
(N): [N, D, v, T/fin, ]
antaa: [V, v, T/fin, ]
(P): [P, V, v, T/fin, ]
(D): [D, P, V, v, T/fin, ]
(N): [N, D, P, V, v, T/fin, ]
(D): [D, V, v, T/fin, ]
(N): [N, D, V, v, T/fin, ]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} D]
			D was opened.
			=[[P(lle) [D Merja-]] [[D Pekka] D]]

18.

		Consume "kirja"

		[[P(lle) [D Merja-]] [[D Pekka] D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[P(lle) [D Merja-]] [[D Pekka] D{N}]]

19.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[P(lle) [D Merja-]] [[D Pekka] D{N}]] + T/fin
			Filtering out impossible merge sites...
				Reject [[[P(lle) [D Merja-]] [uFOC [[D Pekka] [D kirja]]]] T/fin] due to bad left branch.
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [kirja T/fin] due to complement selection.
		Ranking completed:
			1. [[[D Pekka] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[D Pekka] D{N}] T/fin]
			Reconstructing head movement for [[D Pekka] D{N}].
				Extracted head "kirja" from D and created [[D Pekka] [D kirja]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				= [[D Pekka] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "D Pekka " into memory buffer from SPEC of "D".
				Memory buffer: [[D N]]
				D (D) has a specifier [D Pekka] but is marked for -EPP behavior.
				Extraposition will be tried on [[D Pekka] [D kirja]].
				<D kirja> was made adjunct by an extraposition rule.
			=[[P(lle) [D Merja-]] [[[D Pekka] <D kirja>] T/fin]]

20.

		Consume "v"

		[[P(lle) [D Merja-]] [[[D Pekka] <D kirja>] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[P(lle) [D Merja-]] [[[D Pekka] <D kirja>] T/fin{v}]]

21.

		Consume "antaa"

		[[P(lle) [D Merja-]] [[[D Pekka] <D kirja>] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[P(lle) [D Merja-]] [[[D Pekka] <D kirja>] T/fin{v,V}]]

22.
	>>>	Trying candidate parse [[P(lle) [D Merja-]] [[[D Pekka] <D kirja>] T/fin{v,V}]] (3.)
		Reconstructing...
			Reconstructing head movement for [[P(lle) [D Merja-]] [[[D Pekka] <D kirja>] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[P(lle) [D Merja-]] [[[D Pekka] <D kirja>] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[P(lle) [D Merja-]] [[[D Pekka] <D kirja>] [T/fin [v antaa]]]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<P(lle) [D Merja-]>:336 [[[D Pekka] <D kirja>] [T/fin [v [antaa <PP>:336]]]]]
				[[D Pekka] <D kirja>] failed to tail [A/HEAD][CAT:FIN]
				<[D Pekka] <D kirja>> was made an adjunct.
				Floater <[D Pekka] <D kirja>> dropped: [<P(lle) [D Merja-]>:336 [<[D Pekka] <D kirja>>:337 [T/fin [<DP>:337 [v [antaa <PP>:336]]]]]]
				= [<P(lle) [D Merja-]> [<[D Pekka] <D kirja>> [T/fin [<[D Pekka] <D kirja>> [v [antaa <P(lle) [D Merja-]>]]]]]]
			Dropping A-/A-bar movement.
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
				(D) failed internal tail test.
				v probing for CAT:D failed.
				Extraposition will be tried on [<P(lle) [D Merja-]>:336 [uFOC [<[D Pekka] <D kirja>>:337 [T/fin [<DP>:337 [v [antaa <PP>:336]]]]]]].
			= [<P(lle) [D Merja-]> [uFOC [<[D Pekka] <D kirja>> [T/fin [<[D Pekka] <D kirja>> [v [antaa <P(lle) [D Merja-]>]]]]]]]
		Checking LF-interface conditions.
				(D) failed internal tail test.
				v probing for CAT:D failed.
			LF-interface condition(s) violated
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
uFOC: []
D: [D, ]
Pekka: [N, D, ]
D: [D, ]
kirja: [N, D, ]
T/fin: [T/fin, ]
(D): [D, T/fin, ]
(N): [N, D, T/fin, ]
(D): [D, T/fin, ]
(N): [N, D, T/fin, ]
v: [v, T/fin, ]
antaa: [V, v, T/fin, ]
(P): [P, V, v, T/fin, ]
(D): [D, P, V, v, T/fin, ]
(N): [N, D, P, V, v, T/fin, ]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[P(lle) [D Merja-]] [[D Pekka] [[D kirja] T/fin]]]

23.

		Consume "v"

		[[P(lle) [D Merja-]] [[D Pekka] [[D kirja] T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[P(lle) [D Merja-]] [[D Pekka] [[D kirja] T/fin{v}]]]

24.

		Consume "antaa"

		[[P(lle) [D Merja-]] [[D Pekka] [[D kirja] T/fin{v}]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[P(lle) [D Merja-]] [[D Pekka] [[D kirja] T/fin{v,V}]]]

25.
	>>>	Trying candidate parse [[P(lle) [D Merja-]] [[D Pekka] [[D kirja] T/fin{v,V}]]] (4.)
		Reconstructing...
			Reconstructing head movement for [[P(lle) [D Merja-]] [[D Pekka] [[D kirja] T/fin{v,V}]]].
				Extracted head "v{V}" from T/fin and created [[P(lle) [D Merja-]] [[D Pekka] [[D kirja] [T/fin v{V}]]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[P(lle) [D Merja-]] [[D Pekka] [[D kirja] [T/fin [v antaa]]]]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<P(lle) [D Merja-]>:338 [[D Pekka] [[D kirja] [T/fin [v [antaa <PP>:338]]]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<P(lle) [D Merja-]>:338 [<D Pekka>:339 [[D kirja] [T/fin [<DP>:339 [v [antaa <PP>:338]]]]]]]
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<P(lle) [D Merja-]>:338 [<D Pekka>:339 [<D kirja>:340 [T/fin [<DP>:339 [v [<DP>:340 [antaa <PP>:338]]]]]]]]
				= [<P(lle) [D Merja-]> [<D Pekka> [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa <P(lle) [D Merja-]>]]]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<P(lle) [D Merja-]>:338 [uFOC [<D Pekka>:339 [? [<D kirja>:340 [T/fin [<DP>:339 [v [<DP>:340 [antaa <PP>:338]]]]]]]]]].
			= [<P(lle) [D Merja-]> [uFOC [<D Pekka> [? [<D kirja> [T/fin [<D Pekka> [v [<D kirja> [antaa <P(lle) [D Merja-]>]]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
uFOC: []
D: [D, ]
Pekka: [N, D, ]
?: [?, ]
D: [D, ?, ]
kirja: [N, D, ?, ]
T/fin: [T/fin, ?, ]
(D): [D, T/fin, ?, ]
(N): [N, D, T/fin, ?, ]
v: [v, T/fin, ?, ]
(D): [D, v, T/fin, ?, ]
(N): [N, D, v, T/fin, ?, ]
antaa: [V, v, T/fin, ?, ]
(P): [P, V, v, T/fin, ?, ]
(D): [D, P, V, v, T/fin, ?, ]
(N): [N, D, P, V, v, T/fin, ?, ]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle#foc".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 57
['Merjalle', 'antoi', 'Pekka', 'kirjan']


			=None

1.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']
			=P(lle)

2.

		Consume "D"

		P(lle) + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=P(lle){D}

3.

		Consume "Merja-"

		P(lle){D} + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=P(lle){D,N}

4.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		P(lle){D,N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[P(lle){D,N} T/fin]
			P(lle) was opened.
			=[[P(lle) [D Merja-]] T/fin]

5.

		Consume "v"

		[[P(lle) [D Merja-]] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[P(lle) [D Merja-]] T/fin{v}]

6.

		Consume "antaa"

		[[P(lle) [D Merja-]] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[P(lle) [D Merja-]] T/fin{v,V}]

7.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[P(lle) [D Merja-]] T/fin{v,V}]

8.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[P(lle) [D Merja-]] T/fin{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[<P(lle) [D Merja-]> [T/fin [v [antaa <P(lle) [D Merja-]>]]]] D] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[P(lle) [D Merja-]] [T/fin{v,V} D]]

9.

		Consume "Pekka"

		[[P(lle) [D Merja-]] [T/fin{v,V} D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]

10.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]

11.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[P(lle) [D Merja-]] [T/fin{v,V} D{N}]] + D
			Filtering out impossible merge sites...
				Reject [[<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[antaa <D Pekka>] <P(lle) [D Merja-]>]]]]] D] due to bad left branch.
				Reject [[T/fin [<D Pekka> [v [antaa <D Pekka>]]]] D] due to bad left branch.
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[P(lle) [D Merja-]] [T/fin{v,V} [[D Pekka] D]]]

12.

		Consume "kirja"

		[[P(lle) [D Merja-]] [T/fin{v,V} [[D Pekka] D]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[P(lle) [D Merja-]] [T/fin{v,V} [[D Pekka] D{N}]]]

13.
	>>>	Trying candidate parse [[P(lle) [D Merja-]] [T/fin{v,V} [[D Pekka] D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[P(lle) [D Merja-]] [T/fin{v,V} [[D Pekka] D{N}]]].
				Extracted head "v{V}" and reconstructed it = [[P(lle) [D Merja-]] [T/fin [v{V} [[D Pekka] D{N}]]]]
				Extracted head "antaa" and reconstructed it = [[P(lle) [D Merja-]] [T/fin [v [antaa [[D Pekka] D{N}]]]]]
				Extracted head "kirja" from D and created [[P(lle) [D Merja-]] [T/fin [v [antaa [[D Pekka] [D kirja]]]]]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<P(lle) [D Merja-]>:345 [T/fin [v [[antaa [[D Pekka] [D kirja]]] <PP>:345]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<P(lle) [D Merja-]>:345 [T/fin [<DP>:346 [v [[antaa [<D Pekka>:346 [D kirja]]] <PP>:345]]]]]
				= [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[antaa [<D Pekka> [D kirja]]] <P(lle) [D Merja-]>]]]]]
			Dropping A-/A-bar movement.
			= [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[antaa [<D Pekka> [D kirja]]] <P(lle) [D Merja-]>]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<P(lle) [D Merja-]>:345 [T/fin [<DP>:346 [v [[antaa [<D Pekka>:346 [D kirja]]] <PP>:345]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 13/105 operations) <------------------------------------
		Solution:
		[<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[antaa [<D Pekka> [D kirja]]] <P(lle) [D Merja-]>]]]]]
		Grammar: [<P(lle) [D Merja-]>:1 [T/fin [<DP>:2 [v [[antaa [<D Pekka>:2 [D kirja]]] <PP>:1]]]]]
		Spellout T/finP = [PP:1 [T/fin [__:2 [v [[V [DP:2 [D N]]] __:1]]]]]
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
(P): [P, v, T/fin]
(D): [D, P, v, T/fin]
(N): [N, D, P, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 58
['Merjalle#foc', 'antoi', 'Pekka', 'kirjan']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Merjalle']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Merjalle"

			=None

2.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Adding inflectional features {'-', 'LANG:FI', 'ABAR:FOC'} to P(lle)
		= ['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
			=P(lle)

3.

		Consume "D"

		P(lle) + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=P(lle){D}

4.

		Consume "Merja-"

		P(lle){D} + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=P(lle){D,N}

5.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		P(lle){D,N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[P(lle){D,N} T/fin]
			P(lle) was opened.
			=[[P(lle) [D Merja-]] T/fin]

6.

		Consume "v"

		[[P(lle) [D Merja-]] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[P(lle) [D Merja-]] T/fin{v}]

7.

		Consume "antaa"

		[[P(lle) [D Merja-]] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[P(lle) [D Merja-]] T/fin{v,V}]

8.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[P(lle) [D Merja-]] T/fin{v,V}]

9.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[P(lle) [D Merja-]] T/fin{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[<P(lle) [D Merja-]> [T/fin [v [antaa <P(lle) [D Merja-]>]]]] D] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[P(lle) [D Merja-]] [T/fin{v,V} D]]

10.

		Consume "Pekka"

		[[P(lle) [D Merja-]] [T/fin{v,V} D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]

11.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]

12.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[P(lle) [D Merja-]] [T/fin{v,V} D{N}]] + D
			Filtering out impossible merge sites...
				Reject [[<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[antaa <D Pekka>] <P(lle) [D Merja-]>]]]]] D] due to bad left branch.
				Reject [[T/fin [<D Pekka> [v [antaa <D Pekka>]]]] D] due to bad left branch.
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[P(lle) [D Merja-]] [T/fin{v,V} [[D Pekka] D]]]

13.

		Consume "kirja"

		[[P(lle) [D Merja-]] [T/fin{v,V} [[D Pekka] D]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[P(lle) [D Merja-]] [T/fin{v,V} [[D Pekka] D{N}]]]

14.
	>>>	Trying candidate parse [[P(lle) [D Merja-]] [T/fin{v,V} [[D Pekka] D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[P(lle) [D Merja-]] [T/fin{v,V} [[D Pekka] D{N}]]].
				Extracted head "v{V}" and reconstructed it = [[P(lle) [D Merja-]] [T/fin [v{V} [[D Pekka] D{N}]]]]
				Extracted head "antaa" and reconstructed it = [[P(lle) [D Merja-]] [T/fin [v [antaa [[D Pekka] D{N}]]]]]
				Extracted head "kirja" from D and created [[P(lle) [D Merja-]] [T/fin [v [antaa [[D Pekka] [D kirja]]]]]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<P(lle) [D Merja-]>:351 [T/fin [v [[antaa [[D Pekka] [D kirja]]] <PP>:351]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<P(lle) [D Merja-]>:351 [T/fin [<DP>:352 [v [[antaa [<D Pekka>:352 [D kirja]]] <PP>:351]]]]]
				= [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[antaa [<D Pekka> [D kirja]]] <P(lle) [D Merja-]>]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'FIN', 'T/fin', 'FIN/T/fin'}
			= [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[antaa [<D Pekka> [D kirja]]] <P(lle) [D Merja-]>]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<P(lle) [D Merja-]>:351 [T/fin [<DP>:352 [v [[antaa [<D Pekka>:352 [D kirja]]] <PP>:351]]]]] into LF...
				(P)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 14/114 operations) <------------------------------------
		Solution:
		[<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[antaa [<D Pekka> [D kirja]]] <P(lle) [D Merja-]>]]]]]
		Grammar: [<P(lle) [D Merja-]>:1 [T/fin [<DP>:2 [v [[antaa [<D Pekka>:2 [D kirja]]] <PP>:1]]]]]
		Spellout T/finP = [PP:1 [T/fin [__:2 [v [[V [DP:2 [D N]]] __:1]]]]]
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
(P): [P, v, T/fin]
(D): [D, P, v, T/fin]
(N): [N, D, P, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 59
['Merjalle', 'antoi', 'kirjan', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']
			=P(lle)

2.

		Consume "D"

		P(lle) + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=P(lle){D}

3.

		Consume "Merja-"

		P(lle){D} + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=P(lle){D,N}

4.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		P(lle){D,N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[P(lle){D,N} T/fin]
			P(lle) was opened.
			=[[P(lle) [D Merja-]] T/fin]

5.

		Consume "v"

		[[P(lle) [D Merja-]] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[P(lle) [D Merja-]] T/fin{v}]

6.

		Consume "antaa"

		[[P(lle) [D Merja-]] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[P(lle) [D Merja-]] T/fin{v,V}]

7.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[P(lle) [D Merja-]] T/fin{v,V}]

8.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[P(lle) [D Merja-]] T/fin{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[<P(lle) [D Merja-]> [T/fin [v [antaa <P(lle) [D Merja-]>]]]] D] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[P(lle) [D Merja-]] [T/fin{v,V} D]]

9.

		Consume "kirja"

		[[P(lle) [D Merja-]] [T/fin{v,V} D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]

10.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]

11.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[P(lle) [D Merja-]] [T/fin{v,V} D{N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [<P(lle) [D Merja-]> [T/fin [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]]] as left branch because it constitutes illicit structure.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [kirja D] due to complement selection.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; D]
			2. [[T/fin{v,V} D{N}]; D]
			3. [[[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]; D]
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[P(lle) [D Merja-]] [T/fin{v,V} [[D kirja] D]]]

12.

		Consume "Pekka"

		[[P(lle) [D Merja-]] [T/fin{v,V} [[D kirja] D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[P(lle) [D Merja-]] [T/fin{v,V} [[D kirja] D{N}]]]

13.
	>>>	Trying candidate parse [[P(lle) [D Merja-]] [T/fin{v,V} [[D kirja] D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[P(lle) [D Merja-]] [T/fin{v,V} [[D kirja] D{N}]]].
				Extracted head "v{V}" and reconstructed it = [[P(lle) [D Merja-]] [T/fin [v{V} [[D kirja] D{N}]]]]
				Extracted head "antaa" and reconstructed it = [[P(lle) [D Merja-]] [T/fin [v [antaa [[D kirja] D{N}]]]]]
				Extracted head "Pekka" from D and created [[P(lle) [D Merja-]] [T/fin [v [antaa [[D kirja] [D Pekka]]]]]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<P(lle) [D Merja-]>:356 [T/fin [v [[antaa [[D kirja] [D Pekka]]] <PP>:356]]]]
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<P(lle) [D Merja-]>:356 [T/fin [<DP>:357 [v [[antaa [[D kirja] <D Pekka>:357]] <PP>:356]]]]]
				[D kirja] cannot be made an adjunct because its sister is an adjunct.
				Floater [D kirja] dropped: [<P(lle) [D Merja-]>:356 [T/fin [<DP>:357 [v [(DP):358 [[antaa [[D kirja]:358 <D Pekka>:357]] <PP>:356]]]]]]
				= [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[D kirja] [[antaa [[D kirja] <D Pekka>]] <P(lle) [D Merja-]>]]]]]]
			Dropping A-/A-bar movement.
			= [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[D kirja] [[antaa [[D kirja] <D Pekka>]] <P(lle) [D Merja-]>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<P(lle) [D Merja-]>:356 [T/fin [<DP>:357 [v [(DP):358 [[antaa [[D kirja]:358 <D Pekka>:357]] <PP>:356]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 13/123 operations) <------------------------------------
		Solution:
		[<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[D kirja] [[antaa [[D kirja] <D Pekka>]] <P(lle) [D Merja-]>]]]]]]
		Grammar: [<P(lle) [D Merja-]>:1 [T/fin [<DP>:2 [v [(DP):3 [[antaa [[D kirja]:3 <D Pekka>:2]] <PP>:1]]]]]]
		Spellout T/finP = [PP:1 [T/fin [__:2 [v [__:3 [[V [[D N]:3 DP:2]] __:1]]]]]]
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
(P): [P, v, T/fin]
(D): [D, P, v, T/fin]
(N): [N, D, P, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 60
['Merjalle#foc', 'antoi', 'kirjan', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Merjalle']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Merjalle"

			=None

2.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Adding inflectional features {'-', 'LANG:FI', 'ABAR:FOC'} to P(lle)
		= ['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
			=P(lle)

3.

		Consume "D"

		P(lle) + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=P(lle){D}

4.

		Consume "Merja-"

		P(lle){D} + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=P(lle){D,N}

5.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		P(lle){D,N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[P(lle){D,N} T/fin]
			P(lle) was opened.
			=[[P(lle) [D Merja-]] T/fin]

6.

		Consume "v"

		[[P(lle) [D Merja-]] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[P(lle) [D Merja-]] T/fin{v}]

7.

		Consume "antaa"

		[[P(lle) [D Merja-]] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[P(lle) [D Merja-]] T/fin{v,V}]

8.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[P(lle) [D Merja-]] T/fin{v,V}]

9.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[P(lle) [D Merja-]] T/fin{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[<P(lle) [D Merja-]> [T/fin [v [antaa <P(lle) [D Merja-]>]]]] D] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[P(lle) [D Merja-]] [T/fin{v,V} D]]

10.

		Consume "kirja"

		[[P(lle) [D Merja-]] [T/fin{v,V} D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]

11.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]

12.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[P(lle) [D Merja-]] [T/fin{v,V} D{N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [<P(lle) [D Merja-]> [T/fin [v [[antaa [D kirja]] <P(lle) [D Merja-]>]]]] as left branch because it constitutes illicit structure.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [kirja D] due to complement selection.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
		Ranking completed:
			1. [D{N}; D]
			2. [[T/fin{v,V} D{N}]; D]
			3. [[[P(lle) [D Merja-]] [T/fin{v,V} D{N}]]; D]
		Exploring solution number (1) =[D{N} D]
			D was opened.
			=[[P(lle) [D Merja-]] [T/fin{v,V} [[D kirja] D]]]

13.

		Consume "Pekka"

		[[P(lle) [D Merja-]] [T/fin{v,V} [[D kirja] D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[P(lle) [D Merja-]] [T/fin{v,V} [[D kirja] D{N}]]]

14.
	>>>	Trying candidate parse [[P(lle) [D Merja-]] [T/fin{v,V} [[D kirja] D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[P(lle) [D Merja-]] [T/fin{v,V} [[D kirja] D{N}]]].
				Extracted head "v{V}" and reconstructed it = [[P(lle) [D Merja-]] [T/fin [v{V} [[D kirja] D{N}]]]]
				Extracted head "antaa" and reconstructed it = [[P(lle) [D Merja-]] [T/fin [v [antaa [[D kirja] D{N}]]]]]
				Extracted head "Pekka" from D and created [[P(lle) [D Merja-]] [T/fin [v [antaa [[D kirja] [D Pekka]]]]]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<P(lle) [D Merja-]>:362 [T/fin [v [[antaa [[D kirja] [D Pekka]]] <PP>:362]]]]
				D failed to tail.
				<D Pekka> was made an adjunct.
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<P(lle) [D Merja-]>:362 [T/fin [<DP>:363 [v [[antaa [[D kirja] <D Pekka>:363]] <PP>:362]]]]]
				[D kirja] cannot be made an adjunct because its sister is an adjunct.
				Floater [D kirja] dropped: [<P(lle) [D Merja-]>:362 [T/fin [<DP>:363 [v [(DP):364 [[antaa [[D kirja]:364 <D Pekka>:363]] <PP>:362]]]]]]
				= [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[D kirja] [[antaa [[D kirja] <D Pekka>]] <P(lle) [D Merja-]>]]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'FIN', 'T/fin', 'FIN/T/fin'}
			= [<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[D kirja] [[antaa [[D kirja] <D Pekka>]] <P(lle) [D Merja-]>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<P(lle) [D Merja-]>:362 [T/fin [<DP>:363 [v [(DP):364 [[antaa [[D kirja]:364 <D Pekka>:363]] <PP>:362]]]]]] into LF...
				(P)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 14/132 operations) <------------------------------------
		Solution:
		[<P(lle) [D Merja-]> [T/fin [<D Pekka> [v [[D kirja] [[antaa [[D kirja] <D Pekka>]] <P(lle) [D Merja-]>]]]]]]
		Grammar: [<P(lle) [D Merja-]>:1 [T/fin [<DP>:2 [v [(DP):3 [[antaa [[D kirja]:3 <D Pekka>:2]] <PP>:1]]]]]]
		Spellout T/finP = [PP:1 [T/fin [__:2 [v [__:3 [[V [[D N]:3 DP:2]] __:1]]]]]]
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
(P): [P, v, T/fin]
(D): [D, P, v, T/fin]
(N): [N, D, P, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 61
['Merjalle', 'kirjan', 'Pekka', 'antoi']


			=None

1.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']
			=P(lle)

2.

		Consume "D"

		P(lle) + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=P(lle){D}

3.

		Consume "Merja-"

		P(lle){D} + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=P(lle){D,N}

4.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=P(lle){D,N}

5.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		P(lle){D,N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[P(lle){D,N} D]
			P(lle) was opened.
			=[[P(lle) [D Merja-]] D]

6.

		Consume "kirja"

		[[P(lle) [D Merja-]] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[P(lle) [D Merja-]] D{N}]

7.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[P(lle) [D Merja-]] D{N}]

8.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[P(lle) [D Merja-]] D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [kirja D] due to complement selection.
				Prioritize [[P(lle) [D Merja-]] D{N}] because all solutions were negative.
		Ranking completed:
			1. [[[P(lle) [D Merja-]] D{N}]; D]
			2. [D{N}; D]
		Exploring solution number (1) =[[[P(lle) [D Merja-]] D{N}] D]
			Reconstructing head movement for [[P(lle) [D Merja-]] D{N}].
				Extracted head "kirja" from D and created [[P(lle) [D Merja-]] [D kirja]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				= [[P(lle) [D Merja-]] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[P [D N]]]
				D (D) has a specifier [P(lle) [D Merja-]] but is marked for -EPP behavior.
				Extraposition will be tried on [[P(lle) [D Merja-]] [D kirja]].
				<D kirja> was made adjunct by an extraposition rule.
			=[[[P(lle) [D Merja-]] <D kirja>] D]

9.

		Consume "Pekka"

		[[[P(lle) [D Merja-]] <D kirja>] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[[P(lle) [D Merja-]] <D kirja>] D{N}]

10.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[[P(lle) [D Merja-]] <D kirja>] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [Pekka T/fin] due to complement selection.
		Ranking completed:
			1. [[[[P(lle) [D Merja-]] <D kirja>] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[[P(lle) [D Merja-]] <D kirja>] D{N}] T/fin]
			Reconstructing head movement for [[[P(lle) [D Merja-]] <D kirja>] D{N}].
				Extracted head "Pekka" from D and created [[[P(lle) [D Merja-]] <D kirja>] [D Pekka]]
			Dropping floaters...
				[[P(lle) [D Merja-]] <D kirja>] failed to tail [CAT:V]
				= [[[P(lle) [D Merja-]] <D kirja>] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- D kirja " into memory buffer from SPEC of "D".
				Memory buffer: [[[P [D N]] [D N]]]
				D (D) has a specifier [[P(lle) [D Merja-]] <D kirja>] but is marked for -EPP behavior.
				Extraposition will be tried on [[[P(lle) [D Merja-]] <D kirja>] [D Pekka]].
				<D Pekka> was made adjunct by an extraposition rule.
			=[[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>] T/fin]

11.

		Consume "v"

		[[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>] T/fin{v}]

12.

		Consume "antaa"

		[[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>] T/fin{v,V}]

13.
	>>>	Trying candidate parse [[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>] T/fin{v,V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>] T/fin{v,V}].
				Extracted head "v{V}" from T/fin and created [[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>] [T/fin v{V}]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>] [T/fin [v antaa]]]
			Dropping floaters...
				[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>] failed to tail [CAT:V]
				= [[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>] [T/fin [v antaa]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- D kirja D Pekka " into memory buffer from SPEC of "T/fin".
				Memory buffer: [[[[P [D N]] [D N]] [D N]]]
				Dropping [[[P [D N]] [D N]] [D N]](=P(lle) D Merja- D kirja D Pekka ) from memory buffer into Comp of {'V'}.
				Result [[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>]:365 [T/fin [v [antaa (PP):365]]]]
				Remaining items in memory buffer: []
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>]:365 [T/fin [v [antaa (PP):365]]]].
			= [[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>] [T/fin [v [antaa [[[P(lle) [D Merja-]] <D kirja>] <D Pekka>]]]]]
		Checking LF-interface conditions.
				An EPP-head "v" lacks specifier D that it requires.
			LF-interface condition(s) violated
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
D: [D]
kirja: [N, D]
D: [D]
Pekka: [N, D]
T/fin: [T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
(P): [P, V, v, T/fin]
(D): [D, P, V, v, T/fin]
(N): [N, D, P, V, v, T/fin]
(D): [D, V, v, T/fin]
(N): [N, D, V, v, T/fin]
(D): [D, V, v, T/fin]
(N): [N, D, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[[P(lle) [D Merja-]] <D kirja>] [[D Pekka] T/fin]]

14.

		Consume "v"

		[[[P(lle) [D Merja-]] <D kirja>] [[D Pekka] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[P(lle) [D Merja-]] <D kirja>] [[D Pekka] T/fin{v}]]

15.

		Consume "antaa"

		[[[P(lle) [D Merja-]] <D kirja>] [[D Pekka] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[P(lle) [D Merja-]] <D kirja>] [[D Pekka] T/fin{v,V}]]

16.
	>>>	Trying candidate parse [[[P(lle) [D Merja-]] <D kirja>] [[D Pekka] T/fin{v,V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [[[P(lle) [D Merja-]] <D kirja>] [[D Pekka] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[[P(lle) [D Merja-]] <D kirja>] [[D Pekka] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[[P(lle) [D Merja-]] <D kirja>] [[D Pekka] [T/fin [v antaa]]]]
			Dropping floaters...
				[[P(lle) [D Merja-]] <D kirja>] failed to tail [CAT:V]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [[[P(lle) [D Merja-]] <D kirja>] [<D Pekka>:367 [T/fin [<DP>:367 [v antaa]]]]]
				= [[[P(lle) [D Merja-]] <D kirja>] [<D Pekka> [T/fin [<D Pekka> [v antaa]]]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- D kirja " into memory buffer from SPEC of "T/fin".
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				Memory buffer: [[[P [D N]] [D N]]]
				Dropping [[P [D N]] [D N]](=P(lle) D Merja- D kirja ) from memory buffer into Comp of {'V'}.
				Result [[[P(lle) [D Merja-]] <D kirja>]:368 [? [<D Pekka>:367 [T/fin [<DP>:367 [v [antaa (PP):368]]]]]]]
				Remaining items in memory buffer: []
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [[[P(lle) [D Merja-]] <D kirja>]:368 [? [<D Pekka>:367 [T/fin [<DP>:367 [v [antaa (PP):368]]]]]]].
			= [[[P(lle) [D Merja-]] <D kirja>] [? [<D Pekka> [T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] <D kirja>]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
D: [D]
kirja: [N, D]
?: [?]
D: [D, ?]
Pekka: [N, D, ?]
T/fin: [T/fin, ?]
(D): [D, T/fin, ?]
(N): [N, D, T/fin, ?]
v: [v, T/fin, ?]
antaa: [V, v, T/fin, ?]
(P): [P, V, v, T/fin, ?]
(D): [D, P, V, v, T/fin, ?]
(N): [N, D, P, V, v, T/fin, ?]
(D): [D, V, v, T/fin, ?]
(N): [N, D, V, v, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} D]
			D was opened.
			=[[P(lle) [D Merja-]] [[D kirja] D]]

17.

		Consume "Pekka"

		[[P(lle) [D Merja-]] [[D kirja] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[P(lle) [D Merja-]] [[D kirja] D{N}]]

18.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[P(lle) [D Merja-]] [[D kirja] D{N}]] + T/fin
			Filtering out impossible merge sites...
				Reject [[[P(lle) [D Merja-]] [? [[D kirja] [D Pekka]]]] T/fin] due to bad left branch.
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [Pekka T/fin] due to complement selection.
		Ranking completed:
			1. [[[D kirja] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[D kirja] D{N}] T/fin]
			Reconstructing head movement for [[D kirja] D{N}].
				Extracted head "Pekka" from D and created [[D kirja] [D Pekka]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				= [[D kirja] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "D".
				Memory buffer: [[D N]]
				D (D) has a specifier [D kirja] but is marked for -EPP behavior.
				Extraposition will be tried on [[D kirja] [D Pekka]].
				<D Pekka> was made adjunct by an extraposition rule.
			=[[P(lle) [D Merja-]] [[[D kirja] <D Pekka>] T/fin]]

19.

		Consume "v"

		[[P(lle) [D Merja-]] [[[D kirja] <D Pekka>] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[P(lle) [D Merja-]] [[[D kirja] <D Pekka>] T/fin{v}]]

20.

		Consume "antaa"

		[[P(lle) [D Merja-]] [[[D kirja] <D Pekka>] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[P(lle) [D Merja-]] [[[D kirja] <D Pekka>] T/fin{v,V}]]

21.
	>>>	Trying candidate parse [[P(lle) [D Merja-]] [[[D kirja] <D Pekka>] T/fin{v,V}]] (3.)
		Reconstructing...
			Reconstructing head movement for [[P(lle) [D Merja-]] [[[D kirja] <D Pekka>] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[P(lle) [D Merja-]] [[[D kirja] <D Pekka>] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[P(lle) [D Merja-]] [[[D kirja] <D Pekka>] [T/fin [v antaa]]]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<P(lle) [D Merja-]>:370 [[[D kirja] <D Pekka>] [T/fin [v [antaa <PP>:370]]]]]
				[[D kirja] <D Pekka>] failed to tail [!COMP:*][CAT:v]
				<[D kirja] <D Pekka>> was made an adjunct.
				Floater <[D kirja] <D Pekka>> dropped: [<P(lle) [D Merja-]>:370 [<[D kirja] <D Pekka>>:371 [T/fin [v [<DP>:371 [antaa <PP>:370]]]]]]
				= [<P(lle) [D Merja-]> [<[D kirja] <D Pekka>> [T/fin [v [<[D kirja] <D Pekka>> [antaa <P(lle) [D Merja-]>]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
				Extraposition will be tried on [<P(lle) [D Merja-]>:370 [? [<[D kirja] <D Pekka>>:371 [T/fin [v [<DP>:371 [antaa <PP>:370]]]]]]].
			= [<P(lle) [D Merja-]> [? [<[D kirja] <D Pekka>> [T/fin [v [<[D kirja] <D Pekka>> [antaa <P(lle) [D Merja-]>]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "v" lacks specifier D that it requires.
				(D) failed internal tail test.
			LF-interface condition(s) violated
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
?: [?]
D: [D, ?]
kirja: [N, D, ?]
D: [D, ?]
Pekka: [N, D, ?]
T/fin: [T/fin, ?]
v: [v, T/fin, ?]
(D): [D, v, T/fin, ?]
(N): [N, D, v, T/fin, ?]
(D): [D, v, T/fin, ?]
(N): [N, D, v, T/fin, ?]
antaa: [V, v, T/fin, ?]
(P): [P, V, v, T/fin, ?]
(D): [D, P, V, v, T/fin, ?]
(N): [N, D, P, V, v, T/fin, ?]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[P(lle) [D Merja-]] [[D kirja] [[D Pekka] T/fin]]]

22.

		Consume "v"

		[[P(lle) [D Merja-]] [[D kirja] [[D Pekka] T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[P(lle) [D Merja-]] [[D kirja] [[D Pekka] T/fin{v}]]]

23.

		Consume "antaa"

		[[P(lle) [D Merja-]] [[D kirja] [[D Pekka] T/fin{v}]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[P(lle) [D Merja-]] [[D kirja] [[D Pekka] T/fin{v,V}]]]

24.
	>>>	Trying candidate parse [[P(lle) [D Merja-]] [[D kirja] [[D Pekka] T/fin{v,V}]]] (4.)
		Reconstructing...
			Reconstructing head movement for [[P(lle) [D Merja-]] [[D kirja] [[D Pekka] T/fin{v,V}]]].
				Extracted head "v{V}" from T/fin and created [[P(lle) [D Merja-]] [[D kirja] [[D Pekka] [T/fin v{V}]]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[P(lle) [D Merja-]] [[D kirja] [[D Pekka] [T/fin [v antaa]]]]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				<P(lle) [D Merja-]> was made an adjunct.
				Floater <P(lle) [D Merja-]> dropped: [<P(lle) [D Merja-]>:372 [[D kirja] [[D Pekka] [T/fin [v [antaa <PP>:372]]]]]]
				[D kirja] failed to tail [!COMP:*][CAT:v]
				<D kirja> was made an adjunct.
				Floater <D kirja> dropped: [<P(lle) [D Merja-]>:372 [<D kirja>:373 [[D Pekka] [T/fin [v [<DP>:373 [antaa <PP>:372]]]]]]]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<P(lle) [D Merja-]>:372 [<D kirja>:373 [<D Pekka>:374 [T/fin [<DP>:374 [v [<DP>:373 [antaa <PP>:372]]]]]]]]
				= [<P(lle) [D Merja-]> [<D kirja> [<D Pekka> [T/fin [<D Pekka> [v [<D kirja> [antaa <P(lle) [D Merja-]>]]]]]]]]
			Dropping A-/A-bar movement.
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				New head was spawned due to multiple specifiers at T/fin but its category is unknown!
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
				Extraposition will be tried on [<P(lle) [D Merja-]>:372 [? [<D kirja>:373 [? [<D Pekka>:374 [T/fin [<DP>:374 [v [<DP>:373 [antaa <PP>:372]]]]]]]]]].
			= [<P(lle) [D Merja-]> [? [<D kirja> [? [<D Pekka> [T/fin [<D Pekka> [v [<D kirja> [antaa <P(lle) [D Merja-]>]]]]]]]]]]
		Checking LF-interface conditions.
				An uninterpretable grammatical head without lexical category was detected.
				An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
?: [?]
D: [D, ?]
kirja: [N, D, ?]
?: [?, ?]
D: [D, ?, ?]
Pekka: [N, D, ?, ?]
T/fin: [T/fin, ?, ?]
(D): [D, T/fin, ?, ?]
(N): [N, D, T/fin, ?, ?]
v: [v, T/fin, ?, ?]
(D): [D, v, T/fin, ?, ?]
(N): [N, D, v, T/fin, ?, ?]
antaa: [V, v, T/fin, ?, ?]
(P): [P, V, v, T/fin, ?, ?]
(D): [D, P, V, v, T/fin, ?, ?]
(N): [N, D, P, V, v, T/fin, ?, ?]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "antoi".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "kirjan".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$D".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "Merjalle".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.


\========================================================================
# 62
['Merjalle#foc', 'kirjan', 'Pekka', 'antoi']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Merjalle']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Merjalle"

			=None

2.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Adding inflectional features {'-', 'LANG:FI', 'ABAR:FOC'} to P(lle)
		= ['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
			=P(lle)

3.

		Consume "D"

		P(lle) + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=P(lle){D}

4.

		Consume "Merja-"

		P(lle){D} + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=P(lle){D,N}

5.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=P(lle){D,N}

6.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		P(lle){D,N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[P(lle){D,N} D]
			P(lle) was opened.
			=[[P(lle) [D Merja-]] D]

7.

		Consume "kirja"

		[[P(lle) [D Merja-]] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[P(lle) [D Merja-]] D{N}]

8.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[P(lle) [D Merja-]] D{N}]

9.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[P(lle) [D Merja-]] D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid DP as SPEC for D due to unselective SPEC feature.
				Avoid [kirja D] due to complement selection.
				Prioritize [[P(lle) [D Merja-]] D{N}] because all solutions were negative.
		Ranking completed:
			1. [[[P(lle) [D Merja-]] D{N}]; D]
			2. [D{N}; D]
		Exploring solution number (1) =[[[P(lle) [D Merja-]] D{N}] D]
			Reconstructing head movement for [[P(lle) [D Merja-]] D{N}].
				Extracted head "kirja" from D and created [[P(lle) [D Merja-]] [D kirja]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				= [[P(lle) [D Merja-]] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "D".
				Criterial features {'FOC'} copied to {'D'}
				Tail features [!COMP:*][CAT:v] were detected at D, this must head an adjunct floater.
				<D kirja> was made an adjunct.
				Memory buffer: [[P [D N]]]
			=[[[P(lle) [D Merja-]] <D kirja>] D]

10.

		Consume "Pekka"

		[[[P(lle) [D Merja-]] <D kirja>] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[[P(lle) [D Merja-]] <D kirja>] D{N}]

11.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[[P(lle) [D Merja-]] <D kirja>] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [Pekka T/fin] due to complement selection.
		Ranking completed:
			1. [[[[P(lle) [D Merja-]] <D kirja>] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[[P(lle) [D Merja-]] <D kirja>] D{N}] T/fin]
			Reconstructing head movement for [[[P(lle) [D Merja-]] <D kirja>] D{N}].
				Extracted head "Pekka" from D and created [[[P(lle) [D Merja-]] <D kirja>] [D Pekka]]
			Dropping floaters...
				[[P(lle) [D Merja-]] <D kirja>] failed to tail [CAT:V]
				= [[[P(lle) [D Merja-]] <D kirja>] [D Pekka]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- D kirja " into memory buffer from SPEC of "D".
				Criterial features {'FOC'} copied to {'D'}
				Tail features [A/HEAD][CAT:FIN] were detected at D, this must head an adjunct floater.
				<D Pekka> was made an adjunct.
				Memory buffer: [[[P [D N]] [D N]]]
			=[[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>] T/fin]

12.

		Consume "v"

		[[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>] T/fin{v}]

13.

		Consume "antaa"

		[[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>] T/fin{v,V}]

14.
	>>>	Trying candidate parse [[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>] T/fin{v,V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>] T/fin{v,V}].
				Extracted head "v{V}" from T/fin and created [[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>] [T/fin v{V}]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>] [T/fin [v antaa]]]
			Dropping floaters...
				[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>] failed to tail [CAT:V]
				= [[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>] [T/fin [v antaa]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- D kirja D Pekka " into memory buffer from SPEC of "T/fin".
				Criterial features {'FOC'} copied to {'FIN', 'T/fin', 'FIN/T/fin'}
				Memory buffer: [[[[P [D N]] [D N]] [D N]]]
				Dropping [[[P [D N]] [D N]] [D N]](=P(lle) D Merja- D kirja D Pekka ) from memory buffer into Comp of {'V'}.
				Result [[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>]:375 [T/fin [v [antaa (PP):375]]]]
				Remaining items in memory buffer: []
				An EPP-head "v" lacks specifier D that it requires.
				Extraposition will be tried on [[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>]:375 [T/fin [v [antaa (PP):375]]]].
			= [[[[P(lle) [D Merja-]] <D kirja>] <D Pekka>] [T/fin [v [antaa [[[P(lle) [D Merja-]] <D kirja>] <D Pekka>]]]]]
		Checking LF-interface conditions.
				An EPP-head "v" lacks specifier D that it requires.
			LF-interface condition(s) violated
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
D: [D]
kirja: [N, D]
D: [D]
Pekka: [N, D]
T/fin: [T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
(P): [P, V, v, T/fin]
(D): [D, P, V, v, T/fin]
(N): [N, D, P, V, v, T/fin]
(D): [D, V, v, T/fin]
(N): [N, D, V, v, T/fin]
(D): [D, V, v, T/fin]
(N): [N, D, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "anta-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		I have now explored all solutions for "$v".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[D{N} T/fin]
			D was opened.
			=[[[P(lle) [D Merja-]] <D kirja>] [[D Pekka] T/fin]]

15.

		Consume "v"

		[[[P(lle) [D Merja-]] <D kirja>] [[D Pekka] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[P(lle) [D Merja-]] <D kirja>] [[D Pekka] T/fin{v}]]

16.

		Consume "antaa"

		[[[P(lle) [D Merja-]] <D kirja>] [[D Pekka] T/fin{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[P(lle) [D Merja-]] <D kirja>] [[D Pekka] T/fin{v,V}]]

17.
	>>>	Trying candidate parse [[[P(lle) [D Merja-]] <D kirja>] [[D Pekka] T/fin{v,V}]] (2.)
		Reconstructing...
			Reconstructing head movement for [[[P(lle) [D Merja-]] <D kirja>] [[D Pekka] T/fin{v,V}]].
				Extracted head "v{V}" from T/fin and created [[[P(lle) [D Merja-]] <D kirja>] [[D Pekka] [T/fin v{V}]]]
			Reconstructing head movement for v{V}.
				Extracted head "antaa" from v and created [[[P(lle) [D Merja-]] <D kirja>] [[D Pekka] [T/fin [v antaa]]]]
			Dropping floaters...
				[[P(lle) [D Merja-]] <D kirja>] failed to tail [CAT:V]
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [[[P(lle) [D Merja-]] <D kirja>] [<D Pekka>:377 [T/fin [<DP>:377 [v antaa]]]]]
				= [[[P(lle) [D Merja-]] <D kirja>] [<D Pekka> [T/fin [<D Pekka> [v antaa]]]]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- D kirja " into memory buffer from SPEC of "T/fin".
				New {'FOC'} head was spawned due to the occurrence of multiple specifiers at T/fin
				Memory buffer: [[[P [D N]] [D N]]]
				Dropping [[P [D N]] [D N]](=P(lle) D Merja- D kirja ) from memory buffer into Comp of {'V'}.
				Result [[[P(lle) [D Merja-]] <D kirja>]:378 [uFOC [<D Pekka>:377 [T/fin [<DP>:377 [v [antaa (PP):378]]]]]]]
				Remaining items in memory buffer: []
			= [[[P(lle) [D Merja-]] <D kirja>] [uFOC [<D Pekka> [T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] <D kirja>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [[[P(lle) [D Merja-]] <D kirja>]:378 [uFOC [<D Pekka>:377 [T/fin [<DP>:377 [v [antaa (PP):378]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 17/194 operations) <------------------------------------
		Solution:
		[[[P(lle) [D Merja-]] <D kirja>] [uFOC [<D Pekka> [T/fin [<D Pekka> [v [antaa [[P(lle) [D Merja-]] <D kirja>]]]]]]]]
		Grammar: [[[P(lle) [D Merja-]] <D kirja>]:1 [uFOC [<D Pekka>:2 [T/fin [<DP>:2 [v [antaa (PP):1]]]]]]]
		Spellout P = [PP:1 [ [DP:2 [T/fin [__:2 [v [V __:1]]]]]]]
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']

P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
uFOC:['CAT:iFOC', 'CAT:iFOC/uFOC', 'CAT:uFOC', 'LANG:FI', 'PF:uFOC']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
D: [D]
kirja: [N, D]
uFOC: []
D: [D, ]
Pekka: [N, D, ]
T/fin: [T/fin, ]
(D): [D, T/fin, ]
(N): [N, D, T/fin, ]
v: [v, T/fin, ]
antaa: [V, v, T/fin, ]
(P): [P, V, v, T/fin, ]
(D): [D, P, V, v, T/fin, ]
(N): [N, D, P, V, v, T/fin, ]
(D): [D, V, v, T/fin, ]
(N): [N, D, V, v, T/fin, ]

			Checking if the sentence is ambiguous...


\========================================================================
# 63
['Merjalle', 'kirjan', 'antoi', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']
			=P(lle)

2.

		Consume "D"

		P(lle) + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=P(lle){D}

3.

		Consume "Merja-"

		P(lle){D} + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=P(lle){D,N}

4.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=P(lle){D,N}

5.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		P(lle){D,N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[P(lle){D,N} D]
			P(lle) was opened.
			=[[P(lle) [D Merja-]] D]

6.

		Consume "kirja"

		[[P(lle) [D Merja-]] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[P(lle) [D Merja-]] D{N}]

7.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[P(lle) [D Merja-]] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [kirja T/fin] due to complement selection.
		Ranking completed:
			1. [[[P(lle) [D Merja-]] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[P(lle) [D Merja-]] D{N}] T/fin]
			Reconstructing head movement for [[P(lle) [D Merja-]] D{N}].
				Extracted head "kirja" from D and created [[P(lle) [D Merja-]] [D kirja]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				= [[P(lle) [D Merja-]] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "D".
				Memory buffer: [[P [D N]]]
				D (D) has a specifier [P(lle) [D Merja-]] but is marked for -EPP behavior.
				Extraposition will be tried on [[P(lle) [D Merja-]] [D kirja]].
				<D kirja> was made adjunct by an extraposition rule.
			=[[[P(lle) [D Merja-]] <D kirja>] T/fin]

8.

		Consume "v"

		[[[P(lle) [D Merja-]] <D kirja>] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[P(lle) [D Merja-]] <D kirja>] T/fin{v}]

9.

		Consume "antaa"

		[[[P(lle) [D Merja-]] <D kirja>] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[P(lle) [D Merja-]] <D kirja>] T/fin{v,V}]

10.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[[P(lle) [D Merja-]] <D kirja>] T/fin{v,V}]

11.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[[P(lle) [D Merja-]] <D kirja>] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [[[P(lle) [D Merja-]] <D kirja>] [T/fin [v [antaa [[P(lle) [D Merja-]] <D kirja>]]]]] as left branch because it constitutes illicit structure.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [antaa D] due to complement selection.
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[[P(lle) [D Merja-]] <D kirja>] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[[P(lle) [D Merja-]] <D kirja>] [T/fin{v,V} D]]

12.

		Consume "Pekka"

		[[[P(lle) [D Merja-]] <D kirja>] [T/fin{v,V} D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[[P(lle) [D Merja-]] <D kirja>] [T/fin{v,V} D{N}]]

13.
	>>>	Trying candidate parse [[[P(lle) [D Merja-]] <D kirja>] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[[P(lle) [D Merja-]] <D kirja>] [T/fin{v,V} D{N}]].
				Extracted head "v{V}" and reconstructed it = [[[P(lle) [D Merja-]] <D kirja>] [T/fin [v{V} D{N}]]]
				Extracted head "antaa" and reconstructed it = [[[P(lle) [D Merja-]] <D kirja>] [T/fin [v [antaa D{N}]]]]
				Extracted head "Pekka" from D and created [[[P(lle) [D Merja-]] <D kirja>] [T/fin [v [antaa [D Pekka]]]]]
			Dropping floaters...
				[[P(lle) [D Merja-]] <D kirja>] failed to tail [CAT:V]
				<[P(lle) [D Merja-]] <D kirja>> was made an adjunct.
				Floater <[P(lle) [D Merja-]] <D kirja>> dropped: [<[P(lle) [D Merja-]] <D kirja>>:384 [T/fin [v [antaa [[D Pekka] <PP>:384]]]]]
				D failed to tail.
				[D Pekka] cannot be made an adjunct because its sister is an adjunct.
				[D Pekka] cannot be made an adjunct because its sister is an adjunct.
				Floater [D Pekka] dropped: [<[P(lle) [D Merja-]] <D kirja>>:384 [T/fin [(DP):385 [v [antaa [[D Pekka]:385 <PP>:384]]]]]]
				= [<[P(lle) [D Merja-]] <D kirja>> [T/fin [[D Pekka] [v [antaa [[D Pekka] <[P(lle) [D Merja-]] <D kirja>>]]]]]]
			Dropping A-/A-bar movement.
			= [<[P(lle) [D Merja-]] <D kirja>> [T/fin [[D Pekka] [v [antaa [[D Pekka] <[P(lle) [D Merja-]] <D kirja>>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<[P(lle) [D Merja-]] <D kirja>>:384 [T/fin [(DP):385 [v [antaa [[D Pekka]:385 <PP>:384]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 13/129 operations) <------------------------------------
		Solution:
		[<[P(lle) [D Merja-]] <D kirja>> [T/fin [[D Pekka] [v [antaa [[D Pekka] <[P(lle) [D Merja-]] <D kirja>>]]]]]]
		Grammar: [<[P(lle) [D Merja-]] <D kirja>>:1 [T/fin [(DP):2 [v [antaa [[D Pekka]:2 <PP>:1]]]]]]
		Spellout T/finP = [PP:1 [T/fin [__:2 [v [V [[D N]:2 __:1]]]]]]
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']

P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
D: [D]
kirja: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
(P): [P, V, v, T/fin]
(D): [D, P, V, v, T/fin]
(N): [N, D, P, V, v, T/fin]
(D): [D, V, v, T/fin]
(N): [N, D, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 64
['Merjalle#foc', 'kirjan', 'antoi', 'Pekka']


			=None

1.
		Next word contains multiple morphemes ['$foc', 'Merjalle']
		Storing inflectional feature ['-', 'ABAR:FOC', 'LANG:FI'] into working memory.

		Consume "Merjalle"

			=None

2.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Adding inflectional features {'-', 'LANG:FI', 'ABAR:FOC'} to P(lle)
		= ['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
			=P(lle)

3.

		Consume "D"

		P(lle) + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=P(lle){D}

4.

		Consume "Merja-"

		P(lle){D} + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=P(lle){D,N}

5.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=P(lle){D,N}

6.

		Adding inflectional features {'-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		P(lle){D,N} + D
			Filtering out impossible merge sites...
		Exploring solution number (1) =[P(lle){D,N} D]
			P(lle) was opened.
			=[[P(lle) [D Merja-]] D]

7.

		Consume "kirja"

		[[P(lle) [D Merja-]] D] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[P(lle) [D Merja-]] D{N}]

8.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		[[P(lle) [D Merja-]] D{N}] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [D{N} T/fin] due to complement selection.
				Avoid [kirja T/fin] due to complement selection.
		Ranking completed:
			1. [[[P(lle) [D Merja-]] D{N}]; T/fin]
			2. [D{N}; T/fin]
		Exploring solution number (1) =[[[P(lle) [D Merja-]] D{N}] T/fin]
			Reconstructing head movement for [[P(lle) [D Merja-]] D{N}].
				Extracted head "kirja" from D and created [[P(lle) [D Merja-]] [D kirja]]
			Dropping floaters...
				[P(lle) [D Merja-]] failed to tail [CAT:V]
				= [[P(lle) [D Merja-]] [D kirja]]
			Dropping A-/A-bar movement.
				Moving "P(lle) D Merja- " into memory buffer from SPEC of "D".
				Criterial features {'FOC'} copied to {'D'}
				Tail features [!COMP:*][CAT:v] were detected at D, this must head an adjunct floater.
				<D kirja> was made an adjunct.
				Memory buffer: [[P [D N]]]
			=[[[P(lle) [D Merja-]] <D kirja>] T/fin]

9.

		Consume "v"

		[[[P(lle) [D Merja-]] <D kirja>] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[[P(lle) [D Merja-]] <D kirja>] T/fin{v}]

10.

		Consume "antaa"

		[[[P(lle) [D Merja-]] <D kirja>] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[[P(lle) [D Merja-]] <D kirja>] T/fin{v,V}]

11.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=[[[P(lle) [D Merja-]] <D kirja>] T/fin{v,V}]

12.

		Adding inflectional features {'-', 'TAIL:CAT:FIN,A/HEAD', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']

		Consume "D"

		[[[P(lle) [D Merja-]] <D kirja>] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [[[P(lle) [D Merja-]] <D kirja>] [T/fin [v [antaa [[P(lle) [D Merja-]] <D kirja>]]]]] as left branch because it constitutes illicit structure.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [antaa D] due to complement selection.
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[[P(lle) [D Merja-]] <D kirja>] T/fin{v,V}]; D]
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[[P(lle) [D Merja-]] <D kirja>] [T/fin{v,V} D]]

13.

		Consume "Pekka"

		[[[P(lle) [D Merja-]] <D kirja>] [T/fin{v,V} D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=[[[P(lle) [D Merja-]] <D kirja>] [T/fin{v,V} D{N}]]

14.
	>>>	Trying candidate parse [[[P(lle) [D Merja-]] <D kirja>] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[[P(lle) [D Merja-]] <D kirja>] [T/fin{v,V} D{N}]].
				Extracted head "v{V}" and reconstructed it = [[[P(lle) [D Merja-]] <D kirja>] [T/fin [v{V} D{N}]]]
				Extracted head "antaa" and reconstructed it = [[[P(lle) [D Merja-]] <D kirja>] [T/fin [v [antaa D{N}]]]]
				Extracted head "Pekka" from D and created [[[P(lle) [D Merja-]] <D kirja>] [T/fin [v [antaa [D Pekka]]]]]
			Dropping floaters...
				[[P(lle) [D Merja-]] <D kirja>] failed to tail [CAT:V]
				<[P(lle) [D Merja-]] <D kirja>> was made an adjunct.
				Floater <[P(lle) [D Merja-]] <D kirja>> dropped: [<[P(lle) [D Merja-]] <D kirja>>:390 [T/fin [v [antaa [[D Pekka] <PP>:390]]]]]
				D failed to tail.
				[D Pekka] cannot be made an adjunct because its sister is an adjunct.
				[D Pekka] cannot be made an adjunct because its sister is an adjunct.
				Floater [D Pekka] dropped: [<[P(lle) [D Merja-]] <D kirja>>:390 [T/fin [(DP):391 [v [antaa [[D Pekka]:391 <PP>:390]]]]]]
				= [<[P(lle) [D Merja-]] <D kirja>> [T/fin [[D Pekka] [v [antaa [[D Pekka] <[P(lle) [D Merja-]] <D kirja>>]]]]]]
			Dropping A-/A-bar movement.
				Criterial features {'FOC'} copied to {'FIN', 'T/fin', 'FIN/T/fin'}
			= [<[P(lle) [D Merja-]] <D kirja>> [T/fin [[D Pekka] [v [antaa [[D Pekka] <[P(lle) [D Merja-]] <D kirja>>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<[P(lle) [D Merja-]] <D kirja>>:390 [T/fin [(DP):391 [v [antaa [[D Pekka]:391 <PP>:390]]]]]] into LF...
				(P)[ABAR:FOC] was bound to an operator.
				Transfer to LF successful.
!--->		Tests passed (with 14/138 operations) <------------------------------------
		Solution:
		[<[P(lle) [D Merja-]] <D kirja>> [T/fin [[D Pekka] [v [antaa [[D Pekka] <[P(lle) [D Merja-]] <D kirja>>]]]]]]
		Grammar: [<[P(lle) [D Merja-]] <D kirja>>:1 [T/fin [(DP):2 [v [antaa [[D Pekka]:2 <PP>:1]]]]]]
		Spellout T/finP = [PP:1 [T/fin [__:2 [v [V [[D N]:2 __:1]]]]]]
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']

P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/FIN/T/fin/T/fin/iFOC/uFOC', 'CAT:FIN/T/fin', 'CAT:T/fin', 'CAT:iFOC', 'CAT:uFOC', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-', '-COMP:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'ABAR:FOC', 'CAT:P', 'COMP:D', 'COMP:INF', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A', 'null']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'CAT:D/uFOC', 'CAT:uFOC', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*', 'null']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A', 'null']

P(lle): [P]
D: [D, P]
Merja-: [N, D, P]
D: [D]
kirja: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
Pekka: [N, D, V, v, T/fin]
(P): [P, V, v, T/fin]
(D): [D, P, V, v, T/fin]
(N): [N, D, P, V, v, T/fin]
(D): [D, V, v, T/fin]
(N): [N, D, V, v, T/fin]

			Checking if the sentence is ambiguous...
