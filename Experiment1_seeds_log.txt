

\========================================================================
# 1
['Pekka', 'nukkui']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

5.

		Consume "nukku"

		[[D Pekka] T/fin] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=[[D Pekka] T/fin{V}]

6.
	>>>	Trying candidate parse [[D Pekka] T/fin{V}] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] T/fin{V}].
				Extracted head "nukku" from T/fin and created [[D Pekka] [T/fin nukku]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:1 [T/fin [<DP>:1 nukku]]]
				= [<D Pekka> [T/fin [<D Pekka> nukku]]]
			Dropping A-/A-bar movement.
			= [<D Pekka> [T/fin [<D Pekka> nukku]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:1 [T/fin [<DP>:1 nukku]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 6/47 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> nukku]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 nukku]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 V]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:Neg/fin', '-COMP:T', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:Neg/fin', '-COMP:T', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
nukku: [V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 2
['Pekka', 'ihailee', 'Merjaa']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', '$v', 'ihaile-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

5.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] T/fin{v}]

6.

		Consume "ihailee"

		[[D Pekka] T/fin{v}] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*ihailee]
			=[[D Pekka] T/fin{v,V}]

7.
		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] T/fin{v,V}]

8.

		Adding inflectional features {'TAIL:!COMP:*,-PHI', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v ihailee]]]] D] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[D Pekka] [T/fin{v,V} D]]

9.

		Consume "Merjaa"

		[[D Pekka] [T/fin{v,V} D]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [T/fin{v,V} D{N}]]

10.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} D{N}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T/fin{v,V} D{N}]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T/fin [v{V} D{N}]]]
				Extracted head "ihailee" and reconstructed it = [[D Pekka] [T/fin [v [ihailee D{N}]]]]
				Extracted head "Merjaa" from D and created [[D Pekka] [T/fin [v [ihailee [D Merjaa]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:3 [T/fin [<DP>:3 [v [ihailee [D Merjaa]]]]]]
				= [<D Pekka> [T/fin [<D Pekka> [v [ihailee [D Merjaa]]]]]]
			Dropping A-/A-bar movement.
			= [<D Pekka> [T/fin [<D Pekka> [v [ihailee [D Merjaa]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:3 [T/fin [<DP>:3 [v [ihailee [D Merjaa]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 10/78 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v [ihailee [D Merjaa]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 [v [ihailee [D Merjaa]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [v [V [D N]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
ihailee: [V, v, T/fin]
D: [D, V, v, T/fin]
Merjaa: [N, D, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 3
['Pekka', 'antoi', 'kirjan', 'Merjalle']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

5.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] T/fin{v}]

6.

		Consume "antaa"

		[[D Pekka] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] T/fin{v,V}]

7.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] T/fin{v,V}]

8.

		Adding inflectional features {'-', 'TAIL:CAT:v,!COMP:*', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[D Pekka] [T/fin{v,V} D]]

9.

		Consume "kirja"

		[[D Pekka] [T/fin{v,V} D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [T/fin{v,V} D{N}]]

10.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [T/fin{v,V} D{N}]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				Avoid T/finP as SPEC, P(lle).
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
				[[D Pekka] [T/fin{v,V} D{N}]] + P(lle) = -98]
				[T/fin{v,V} D{N}] + P(lle) = -194]
				D{N} + P(lle) = 9]
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D Pekka] [T/fin{v,V} D{N}]]; P(lle)]
			3. [[T/fin{v,V} D{N}]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [T/fin{v,V} [[D kirja] P(lle)]]]

11.

		Consume "D"

		[[D Pekka] [T/fin{v,V} [[D kirja] P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D}]]]

12.

		Consume "Merja-"

		[[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D,N}]]]

13.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D,N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D,N}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T/fin [v{V} [[D kirja] P(lle){D,N}]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [T/fin [v [antaa [[D kirja] P(lle){D,N}]]]]]
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [T/fin [v [antaa [[D kirja] [P(lle) D{N}]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [T/fin [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:7 [T/fin [<DP>:7 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]
				= [<D Pekka> [T/fin [<D Pekka> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D Pekka>:7 [T/fin [<DP>:7 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [<D Pekka> [T/fin [<D Pekka> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:7 [T/fin [<DP>:7 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 13/124 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [v [V [[D N] PP]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMLANG:FI', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMLANG:FI', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 4
['Pekka', 'ei', 'nukkunut']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "nukku"

		[[D Pekka] [ei T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [ei T{V}]]

7.
	>>>	Trying candidate parse [[D Pekka] [ei T{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei T{V}]].
				Extracted head "nukku" from T and created [[D Pekka] [ei [T nukku]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:8 [ei [<DP>:8 [T nukku]]]]
				= [<D Pekka> [ei [<D Pekka> [T nukku]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:8 from memory buffer into Spec of nukku
			= [<D Pekka> [ei [<D Pekka> [T [<D Pekka> nukku]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:8 [ei [<DP>:8 [T [<DP>:8 nukku]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 7/64 operations) <------------------------------------
		Solution:
		[<D Pekka> [ei [<D Pekka> [T [<D Pekka> nukku]]]]]
		Grammar: [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 nukku]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [__:1 [T [__:1 V]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:Neg/fin', '-COMP:T', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:Neg/fin', '-COMP:T', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
nukku: [V, T, Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 5
['Pekka', 'ei', 'ihaile', 'Merjaa']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.
		Next word contains multiple morphemes ['$T', '$v', 'ihaile-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "v"

		[[D Pekka] [ei T]] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D Pekka] [ei T{v}]]

7.

		Consume "ihailee"

		[[D Pekka] [ei T{v}]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*ihailee]
			=[[D Pekka] [ei T{v,V}]]

8.
		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{v,V}]]

9.

		Adding inflectional features {'TAIL:!COMP:*,-PHI', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [ei T{v,V}]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [v ihailee]]]]]] D] due to bad left branch.
				Reject [[ei [T [v ihailee]]] D] due to bad left branch.
		Exploring solution number (1) =[T{v,V} D]
			T{v,V} cannot be opened.
			=[[D Pekka] [ei [T{v,V} D]]]

10.

		Consume "Merjaa"

		[[D Pekka] [ei [T{v,V} D]]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [ei [T{v,V} D{N}]]]

11.
	>>>	Trying candidate parse [[D Pekka] [ei [T{v,V} D{N}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{v,V} D{N}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [v{V} D{N}]]]]
				Extracted head "ihailee" and reconstructed it = [[D Pekka] [ei [T [v [ihailee D{N}]]]]]
				Extracted head "Merjaa" from D and created [[D Pekka] [ei [T [v [ihailee [D Merjaa]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:12 [ei [<DP>:12 [T [v [ihailee [D Merjaa]]]]]]]
				= [<D Pekka> [ei [<D Pekka> [T [v [ihailee [D Merjaa]]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:12 from memory buffer into Spec of v
			= [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [v [ihailee [D Merjaa]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:12 [ei [<DP>:12 [T [<DP>:12 [v [ihailee [D Merjaa]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 11/96 operations) <------------------------------------
		Solution:
		[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [v [ihailee [D Merjaa]]]]]]]]
		Grammar: [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 [v [ihailee [D Merjaa]]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [__:1 [T [__:1 [v [V [D N]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
v: [v, T, Neg/fin]
ihailee: [V, v, T, Neg/fin]
D: [D, V, v, T, Neg/fin]
Merjaa: [N, D, V, v, T, Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 6
['Pekka', 'ei', 'antanut', 'kirjaa', 'Merjalle']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.
		Next word contains multiple morphemes ['$T', '$v', 'anta-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "v"

		[[D Pekka] [ei T]] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D Pekka] [ei T{v}]]

7.

		Consume "antaa"

		[[D Pekka] [ei T{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*antaa]
			=[[D Pekka] [ei T{v,V}]]

8.
		Next word contains multiple morphemes ['$par', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{v,V}]]

9.

		Adding inflectional features {'TAIL:!COMP:*,-PHI', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [ei T{v,V}]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [v antaa]]]]]] D] due to bad left branch.
				Reject [[ei [T [v antaa]]] D] due to bad left branch.
		Exploring solution number (1) =[T{v,V} D]
			T{v,V} cannot be opened.
			=[[D Pekka] [ei [T{v,V} D]]]

10.

		Consume "kirja"

		[[D Pekka] [ei [T{v,V} D]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [ei [T{v,V} D{N}]]]

11.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [ei [T{v,V} D{N}]]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, P(lle).
				Avoid Neg/finP as SPEC, P(lle).
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [ei [T [v [antaa [D kirja]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T{v,V} D{N}], P(lle)] because the operation breaks up an existing selectional dependency.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
				[[D Pekka] [ei [T{v,V} D{N}]]] + P(lle) = -98]
				[ei [T{v,V} D{N}]] + P(lle) = -194]
				[T{v,V} D{N}] + P(lle) = -191]
				D{N} + P(lle) = 12]
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D Pekka] [ei [T{v,V} D{N}]]]; P(lle)]
			3. [[T{v,V} D{N}]; P(lle)]
			4. [[ei [T{v,V} D{N}]]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [ei [T{v,V} [[D kirja] P(lle)]]]]

12.

		Consume "D"

		[[D Pekka] [ei [T{v,V} [[D kirja] P(lle)]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D}]]]]

13.

		Consume "Merja-"

		[[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D}]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D,N}]]]]

14.
	>>>	Trying candidate parse [[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D,N}]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D,N}]]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [v{V} [[D kirja] P(lle){D,N}]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [ei [T [v [antaa [[D kirja] P(lle){D,N}]]]]]]
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [ei [T [v [antaa [[D kirja] [P(lle) D{N}]]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [ei [T [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:20 [ei [<DP>:20 [T [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]
				= [<D Pekka> [ei [<D Pekka> [T [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:20 from memory buffer into Spec of v
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D Pekka>:20 [ei [<DP>:20 [T [<DP>:20 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:20 [ei [<DP>:20 [T [<DP>:20 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 14/147 operations) <------------------------------------
		Solution:
		[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]
		Grammar: [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [__:1 [T [__:1 [v [V [[D N] PP]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMLANG:FI', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMLANG:FI', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
v: [v, T, Neg/fin]
antaa: [V, v, T, Neg/fin]
D: [D, V, v, T, Neg/fin]
kirja: [N, D, V, v, T, Neg/fin]
P(lle): [P, V, v, T, Neg/fin]
D: [D, P, V, v, T, Neg/fin]
Merja-: [N, D, P, V, v, T, Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 7
['Pekka', 'kaski', 'heidan', 'nukkua']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', 'kaske-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

5.

		Consume "käske"

		[[D Pekka] T/fin] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*käske]
			=[[D Pekka] T/fin{V}]

6.
		Next word contains multiple morphemes ['$gen', '$D', 'heidan-']
		Storing inflectional feature ['-', '-FLOAT', 'LANG:FI', 'TAIL:CAT:INF,A/HEAD'] into working memory.

		Consume "$D"

			=[[D Pekka] T/fin{V}]

7.

		Adding inflectional features {'-', '-FLOAT', 'LANG:FI', 'TAIL:CAT:INF,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD']

		Consume "D"

		[[D Pekka] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D Pekka] T/fin{V}] + D = -98]
				T/fin{V} + D = -42]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D Pekka] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			T/fin{V} cannot be opened.
			=[[D Pekka] [T/fin{V} D]]

8.

		Consume "heidän"

		[[D Pekka] [T/fin{V} D]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [T/fin{V} D{N}]]

9.
		Next word contains multiple morphemes ['$-ta', 'nukku-']

		Consume "Ainf"

		[[D Pekka] [T/fin{V} D{N}]] + Ainf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [käske <D heidän>]]]] Ainf] due to bad left branch.
				Reject [[T/fin [käske <D heidän>]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [T/fin{V} [[D heidän] Ainf]]]

10.

		Consume "nukku"

		[[D Pekka] [T/fin{V} [[D heidän] Ainf]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*nukku]
			=[[D Pekka] [T/fin{V} [[D heidän] Ainf{V}]]]

11.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [[D heidän] Ainf{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T/fin{V} [[D heidän] Ainf{V}]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [T/fin [käske [[D heidän] Ainf{V}]]]]
				Extracted head "nukku" from Ainf and created [[D Pekka] [T/fin [käske [[D heidän] [Ainf nukku]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:25 [T/fin [<DP>:25 [käske [[D heidän] [Ainf nukku]]]]]]
				[D heidän] failed to tail [A/HEAD][CAT:INF]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped: [<D Pekka>:25 [T/fin [<DP>:25 [käske [<D heidän>:26 [Ainf [<DP>:26 nukku]]]]]]]
				= [<D Pekka> [T/fin [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> nukku]]]]]]]
			Dropping A-/A-bar movement.
			= [<D Pekka> [T/fin [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> nukku]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:25 [T/fin [<DP>:25 [käske [<D heidän>:26 [Ainf [<DP>:26 nukku]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 11/99 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> nukku]]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 nukku]]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V [DP:2 [INF [__:2 V]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:Neg/fin', '-COMP:T', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:Neg/fin', '-COMP:T', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
käske: [V, T/fin]
D: [D, V, T/fin]
heidän: [N, D, V, T/fin]
Ainf: [INF, V, T/fin]
(D): [D, INF, V, T/fin]
(N): [N, D, INF, V, T/fin]
nukku: [V, INF, V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 8
['Pekka', 'kaski', 'heidan', 'ihailla', 'Merjaa']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', 'kaske-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

5.

		Consume "käske"

		[[D Pekka] T/fin] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*käske]
			=[[D Pekka] T/fin{V}]

6.
		Next word contains multiple morphemes ['$gen', '$D', 'heidan-']
		Storing inflectional feature ['-', '-FLOAT', 'LANG:FI', 'TAIL:CAT:INF,A/HEAD'] into working memory.

		Consume "$D"

			=[[D Pekka] T/fin{V}]

7.

		Adding inflectional features {'-', '-FLOAT', 'LANG:FI', 'TAIL:CAT:INF,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD']

		Consume "D"

		[[D Pekka] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D Pekka] T/fin{V}] + D = -98]
				T/fin{V} + D = -42]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D Pekka] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			T/fin{V} cannot be opened.
			=[[D Pekka] [T/fin{V} D]]

8.

		Consume "heidän"

		[[D Pekka] [T/fin{V} D]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [T/fin{V} D{N}]]

9.
		Next word contains multiple morphemes ['$-ta', '$v', 'ihaile-']

		Consume "Ainf"

		[[D Pekka] [T/fin{V} D{N}]] + Ainf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [käske <D heidän>]]]] Ainf] due to bad left branch.
				Reject [[T/fin [käske <D heidän>]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [T/fin{V} [[D heidän] Ainf]]]

10.

		Consume "v"

		[[D Pekka] [T/fin{V} [[D heidän] Ainf]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D Pekka] [T/fin{V} [[D heidän] Ainf{v}]]]

11.

		Consume "ihailee"

		[[D Pekka] [T/fin{V} [[D heidän] Ainf{v}]]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*ihailee]
			=[[D Pekka] [T/fin{V} [[D heidän] Ainf{v,V}]]]

12.
		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [T/fin{V} [[D heidän] Ainf{v,V}]]]

13.

		Adding inflectional features {'TAIL:!COMP:*,-PHI', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [T/fin{V} [[D heidän] Ainf{v,V}]]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v ihailee]]]]]]]] D] due to bad left branch.
				Reject [[T/fin [käske [<D heidän> [Ainf [<D heidän> [v ihailee]]]]]] D] due to bad left branch.
				Reject [[<D heidän> [Ainf [<D heidän> [v ihailee]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} D]]]]

14.

		Consume "Merjaa"

		[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} D]]]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} D{N}]]]]

15.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} D{N}]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} D{N}]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [T/fin [käske [[D heidän] [Ainf{v,V} D{N}]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T/fin [käske [[D heidän] [Ainf [v{V} D{N}]]]]]]
				Extracted head "ihailee" and reconstructed it = [[D Pekka] [T/fin [käske [[D heidän] [Ainf [v [ihailee D{N}]]]]]]]
				Extracted head "Merjaa" from D and created [[D Pekka] [T/fin [käske [[D heidän] [Ainf [v [ihailee [D Merjaa]]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:34 [T/fin [<DP>:34 [käske [[D heidän] [Ainf [v [ihailee [D Merjaa]]]]]]]]]
				[D heidän] failed to tail [A/HEAD][CAT:INF]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped: [<D Pekka>:34 [T/fin [<DP>:34 [käske [<D heidän>:35 [Ainf [<DP>:35 [v [ihailee [D Merjaa]]]]]]]]]]
				= [<D Pekka> [T/fin [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]]]]]]
			Dropping A-/A-bar movement.
			= [<D Pekka> [T/fin [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:34 [T/fin [<DP>:34 [käske [<D heidän>:35 [Ainf [<DP>:35 [v [ihailee [D Merjaa]]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 15/132 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 [v [ihailee [D Merjaa]]]]]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V [DP:2 [INF [__:2 [v [V [D N]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
käske: [V, T/fin]
D: [D, V, T/fin]
heidän: [N, D, V, T/fin]
Ainf: [INF, V, T/fin]
(D): [D, INF, V, T/fin]
(N): [N, D, INF, V, T/fin]
v: [v, INF, V, T/fin]
ihailee: [V, v, INF, V, T/fin]
D: [D, V, v, INF, V, T/fin]
Merjaa: [N, D, V, v, INF, V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 9
['Pekka', 'kaski', 'heidan', 'antaa', 'kirjan', 'Merjalle']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', 'kaske-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

5.

		Consume "käske"

		[[D Pekka] T/fin] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*käske]
			=[[D Pekka] T/fin{V}]

6.
		Next word contains multiple morphemes ['$gen', '$D', 'heidan-']
		Storing inflectional feature ['-', '-FLOAT', 'LANG:FI', 'TAIL:CAT:INF,A/HEAD'] into working memory.

		Consume "$D"

			=[[D Pekka] T/fin{V}]

7.

		Adding inflectional features {'-', '-FLOAT', 'LANG:FI', 'TAIL:CAT:INF,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD']

		Consume "D"

		[[D Pekka] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D Pekka] T/fin{V}] + D = -98]
				T/fin{V} + D = -42]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D Pekka] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			T/fin{V} cannot be opened.
			=[[D Pekka] [T/fin{V} D]]

8.

		Consume "heidän"

		[[D Pekka] [T/fin{V} D]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [T/fin{V} D{N}]]

9.
		Next word contains multiple morphemes ['$-ta', '$v', 'anta-']

		Consume "Ainf"

		[[D Pekka] [T/fin{V} D{N}]] + Ainf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [käske <D heidän>]]]] Ainf] due to bad left branch.
				Reject [[T/fin [käske <D heidän>]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [T/fin{V} [[D heidän] Ainf]]]

10.

		Consume "v"

		[[D Pekka] [T/fin{V} [[D heidän] Ainf]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D Pekka] [T/fin{V} [[D heidän] Ainf{v}]]]

11.

		Consume "antaa"

		[[D Pekka] [T/fin{V} [[D heidän] Ainf{v}]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*antaa]
			=[[D Pekka] [T/fin{V} [[D heidän] Ainf{v,V}]]]

12.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [T/fin{V} [[D heidän] Ainf{v,V}]]]

13.

		Adding inflectional features {'-', 'TAIL:CAT:v,!COMP:*', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] [T/fin{V} [[D heidän] Ainf{v,V}]]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v antaa]]]]]]]] D] due to bad left branch.
				Reject [[T/fin [käske [<D heidän> [Ainf [<D heidän> [v antaa]]]]]] D] due to bad left branch.
				Reject [[<D heidän> [Ainf [<D heidän> [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} D]]]]

14.

		Consume "kirja"

		[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} D]]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} D{N}]]]]

15.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} D{N}]]]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				Avoid T/finP as SPEC, P(lle).
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T/fin [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid INFP as SPEC, P(lle).
				Avoid INFP as SPEC, P(lle).
				An EPP-head "Ainf" lacks specifier D that it requires.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
				[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} D{N}]]]] + P(lle) = -98]
				[T/fin{V} [[D heidän] [Ainf{v,V} D{N}]]] + P(lle) = -194]
				[[D heidän] [Ainf{v,V} D{N}]] + P(lle) = -94]
				[Ainf{v,V} D{N}] + P(lle) = -188]
				D{N} + P(lle) = 15]
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D heidän] [Ainf{v,V} D{N}]]; P(lle)]
			3. [[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} D{N}]]]]; P(lle)]
			4. [[Ainf{v,V} D{N}]; P(lle)]
			5. [[T/fin{V} [[D heidän] [Ainf{v,V} D{N}]]]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]]]

16.

		Consume "D"

		[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]]]

17.

		Consume "Merja-"

		[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]

18.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [T/fin [käske [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T/fin [käske [[D heidän] [Ainf [v{V} [[D kirja] P(lle){D,N}]]]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [T/fin [käske [[D heidän] [Ainf [v [antaa [[D kirja] P(lle){D,N}]]]]]]]]
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [T/fin [käske [[D heidän] [Ainf [v [antaa [[D kirja] [P(lle) D{N}]]]]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [T/fin [käske [[D heidän] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:51 [T/fin [<DP>:51 [käske [[D heidän] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]]]
				[D heidän] failed to tail [A/HEAD][CAT:INF]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped: [<D Pekka>:51 [T/fin [<DP>:51 [käske [<D heidän>:52 [Ainf [<DP>:52 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]]]]
				= [<D Pekka> [T/fin [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D Pekka>:51 [T/fin [<DP>:51 [käske [<D heidän>:52 [Ainf [<DP>:52 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [<D Pekka> [T/fin [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:51 [T/fin [<DP>:51 [käske [<D heidän>:52 [Ainf [<DP>:52 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 18/187 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V [DP:2 [INF [__:2 [v [V [[D N] PP]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMLANG:FI', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMLANG:FI', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
käske: [V, T/fin]
D: [D, V, T/fin]
heidän: [N, D, V, T/fin]
Ainf: [INF, V, T/fin]
(D): [D, INF, V, T/fin]
(N): [N, D, INF, V, T/fin]
v: [v, INF, V, T/fin]
antaa: [V, v, INF, V, T/fin]
D: [D, V, v, INF, V, T/fin]
kirja: [N, D, V, v, INF, V, T/fin]
P(lle): [P, V, v, INF, V, T/fin]
D: [D, P, V, v, INF, V, T/fin]
Merja-: [N, D, P, V, v, INF, V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 10
['Pekka', 'nukkui', 'kuorsaamalla']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', 'nukku-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

5.

		Consume "nukku"

		[[D Pekka] T/fin] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*nukku]
			=[[D Pekka] T/fin{V}]

6.
		Next word contains multiple morphemes ['$malla', 'kuorsaa_pro-']

		Consume "malla"

		[[D Pekka] T/fin{V}] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla.
				Considering T/fin{V} due to legitimate tail-head configuration.
				[[D Pekka] T/fin{V}] + malla = -98]
				T/fin{V} + malla = 206]
		Ranking completed:
			1. [T/fin{V}; malla]
			2. [[[D Pekka] T/fin{V}]; malla]
		Exploring solution number (1) =[T/fin{V} malla]
			T/fin{V} cannot be opened.
			=[[D Pekka] [T/fin{V} malla]]

7.

		Consume "kuorsaa"

		[[D Pekka] [T/fin{V} malla]] + kuorsaa
			Filtering out impossible merge sites...
			Sink "kuorsaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*kuorsaa]
			=[[D Pekka] [T/fin{V} malla{V}]]

8.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} malla{V}]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T/fin{V} malla{V}]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T/fin [nukku malla{V}]]]
				Extracted head "kuorsaa" from malla and created [[D Pekka] [T/fin [nukku [malla kuorsaa]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:55 [T/fin [<DP>:55 [nukku [malla kuorsaa]]]]]
				<malla kuorsaa> was made an adjunct.
				= [<D Pekka> [T/fin [<D Pekka> [nukku <malla kuorsaa>]]]]
			Dropping A-/A-bar movement.
			= [<D Pekka> [T/fin [<D Pekka> [nukku <malla kuorsaa>]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:55 [T/fin [<DP>:55 [nukku <malla kuorsaa>]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 8/72 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [nukku <malla kuorsaa>]]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 [nukku <malla kuorsaa>]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V ADVP]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:Neg/fin', '-COMP:T', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
kuorsaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:snore', 'PF:kuorsaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:Neg/fin', '-COMP:T', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
kuorsaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:snore', 'PF:kuorsaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
nukku: [V, T/fin]
malla: [ADV, V, T/fin]
kuorsaa: [V, ADV, V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 11
['Pekka', 'hairitsee', 'Merjaa', 'kuorsaamalla']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', '$v', 'hairitse-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

5.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] T/fin{v}]

6.

		Consume "hairitsee"

		[[D Pekka] T/fin{v}] + hairitsee
			Filtering out impossible merge sites...
			Sink "hairitsee" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*hairitsee]
			=[[D Pekka] T/fin{v,V}]

7.
		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] T/fin{v,V}]

8.

		Adding inflectional features {'TAIL:!COMP:*,-PHI', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v hairitsee]]]] D] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[D Pekka] [T/fin{v,V} D]]

9.

		Consume "Merjaa"

		[[D Pekka] [T/fin{v,V} D]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [T/fin{v,V} D{N}]]

10.
		Next word contains multiple morphemes ['$malla', 'kuorsaa_pro-']

		Consume "malla"

		[[D Pekka] [T/fin{v,V} D{N}]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla.
				Avoid T/finP as SPEC, malla.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [hairitsee [D Merjaa]]]] as left branch because it constitutes illicit structure.
				Considering D{N} due to legitimate tail-head configuration.
				[[D Pekka] [T/fin{v,V} D{N}]] + malla = -98]
				[T/fin{v,V} D{N}] + malla = -194]
				D{N} + malla = 209]
		Ranking completed:
			1. [D{N}; malla]
			2. [[[D Pekka] [T/fin{v,V} D{N}]]; malla]
			3. [[T/fin{v,V} D{N}]; malla]
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[D Pekka] [T/fin{v,V} [[D Merjaa] malla]]]

11.

		Consume "kuorsaa"

		[[D Pekka] [T/fin{v,V} [[D Merjaa] malla]]] + kuorsaa
			Filtering out impossible merge sites...
			Sink "kuorsaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*kuorsaa]
			=[[D Pekka] [T/fin{v,V} [[D Merjaa] malla{V}]]]

12.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} [[D Merjaa] malla{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T/fin{v,V} [[D Merjaa] malla{V}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T/fin [v{V} [[D Merjaa] malla{V}]]]]
				Extracted head "hairitsee" and reconstructed it = [[D Pekka] [T/fin [v [hairitsee [[D Merjaa] malla{V}]]]]]
				Extracted head "kuorsaa" from malla and created [[D Pekka] [T/fin [v [hairitsee [[D Merjaa] [malla kuorsaa]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:59 [T/fin [<DP>:59 [v [hairitsee [[D Merjaa] [malla kuorsaa]]]]]]]
				<malla kuorsaa> was made an adjunct.
				[D Merjaa] cannot be made an adjunct because its sister is an adjunct.
				Floater [D Merjaa] dropped: [<D Pekka>:59 [T/fin [<DP>:59 [v [(DP):60 [hairitsee [[D Merjaa]:60 <malla kuorsaa>]]]]]]]
				= [<D Pekka> [T/fin [<D Pekka> [v [[D Merjaa] [hairitsee [[D Merjaa] <malla kuorsaa>]]]]]]]
			Dropping A-/A-bar movement.
			= [<D Pekka> [T/fin [<D Pekka> [v [[D Merjaa] [hairitsee [[D Merjaa] <malla kuorsaa>]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:59 [T/fin [<DP>:59 [v [(DP):60 [hairitsee [[D Merjaa]:60 <malla kuorsaa>]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 12/110 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v [[D Merjaa] [hairitsee [[D Merjaa] <malla kuorsaa>]]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 [v [(DP):2 [hairitsee [[D Merjaa]:2 <malla kuorsaa>]]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [v [__:2 [V [[D N]:2 ADVP]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
hairitsee:['-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:disturb', 'PF:hairitsee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
kuorsaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:snore', 'PF:kuorsaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
hairitsee:['-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:disturb', 'PF:hairitsee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
kuorsaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:snore', 'PF:kuorsaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
(D): [D, v, T/fin]
(N): [N, D, v, T/fin]
hairitsee: [V, v, T/fin]
D: [D, V, v, T/fin]
Merjaa: [N, D, V, v, T/fin]
malla: [ADV, V, v, T/fin]
kuorsaa: [V, ADV, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 12
['Pekka', 'antoi', 'kirjan', 'Merjalle', 'heittamalla']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', '$v', 'anta-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

5.

		Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*v]
			=[[D Pekka] T/fin{v}]

6.

		Consume "antaa"

		[[D Pekka] T/fin{v}] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T/fin{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin{v}*antaa]
			=[[D Pekka] T/fin{v,V}]

7.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] T/fin{v,V}]

8.

		Adding inflectional features {'-', 'TAIL:CAT:v,!COMP:*', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[T/fin{v,V} D]
			T/fin{v,V} cannot be opened.
			=[[D Pekka] [T/fin{v,V} D]]

9.

		Consume "kirja"

		[[D Pekka] [T/fin{v,V} D]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [T/fin{v,V} D{N}]]

10.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [T/fin{v,V} D{N}]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				Avoid T/finP as SPEC, P(lle).
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
				[[D Pekka] [T/fin{v,V} D{N}]] + P(lle) = -98]
				[T/fin{v,V} D{N}] + P(lle) = -194]
				D{N} + P(lle) = 9]
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D Pekka] [T/fin{v,V} D{N}]]; P(lle)]
			3. [[T/fin{v,V} D{N}]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [T/fin{v,V} [[D kirja] P(lle)]]]

11.

		Consume "D"

		[[D Pekka] [T/fin{v,V} [[D kirja] P(lle)]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D}]]]

12.

		Consume "Merja-"

		[[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D}]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D,N}]]]

13.
		Next word contains multiple morphemes ['$malla', 'heitta_pro-']

		Consume "malla"

		[[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D,N}]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla.
				Avoid T/finP as SPEC, malla.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T/fin [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]] as left branch because it constitutes illicit structure.
				[D kirja]" has no thematic role
				Avoid [[D kirja] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Considering [[D kirja] P(lle){D,N}] due to legitimate tail-head configuration.
				Avoid [P(lle){D,N} malla] due to complement selection.
				Considering P(lle){D,N} due to legitimate tail-head configuration.
				[[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D,N}]]] + malla = -98]
				[T/fin{v,V} [[D kirja] P(lle){D,N}]] + malla = -194]
				[[D kirja] P(lle){D,N}] + malla = 112]
				P(lle){D,N} + malla = 116]
		Ranking completed:
			1. [P(lle){D,N}; malla]
			2. [[[D kirja] P(lle){D,N}]; malla]
			3. [[[D Pekka] [T/fin{v,V} [[D kirja] P(lle){D,N}]]]; malla]
			4. [[T/fin{v,V} [[D kirja] P(lle){D,N}]]; malla]
		Exploring solution number (1) =[P(lle){D,N} malla]
			P(lle) was opened.
			=[[D Pekka] [T/fin{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]]

14.

		Consume "heitta"

		[[D Pekka] [T/fin{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]] + heitta
			Filtering out impossible merge sites...
			Sink "heitta" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*heitta]
			=[[D Pekka] [T/fin{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]

15.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T/fin{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T/fin [v{V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [T/fin [v [antaa [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]
				Extracted head "heitta" from malla and created [[D Pekka] [T/fin [v [antaa [[D kirja] [[P(lle) [D Merja-]] [malla heitta]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:66 [T/fin [<DP>:66 [v [antaa [[D kirja] [[P(lle) [D Merja-]] [malla heitta]]]]]]]]
				<malla heitta> was made an adjunct.
				= [<D Pekka> [T/fin [<D Pekka> [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla heitta>]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D Pekka>:66 [T/fin [<DP>:66 [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla heitta>]]]]]]].
			= [<D Pekka> [T/fin [<D Pekka> [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla heitta>]]]]]]]
		Checking LF-interface conditions.
				[D kirja]" has no thematic role
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMLANG:FI', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
heitta:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:throw', 'PF:heitta', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
malla: [ADV, V, v, T/fin]
heitta: [V, ADV, V, v, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "heitta_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D kirja] P(lle){D,N}] malla]
			Reconstructing head movement for [[D kirja] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[D kirja] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D kirja] [P(lle) [D Merja-]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				= [[D kirja] [P(lle) [D Merja-]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
			=[[D Pekka] [T/fin{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla]]]

16.

		Consume "heitta"

		[[D Pekka] [T/fin{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla]]] + heitta
			Filtering out impossible merge sites...
			Sink "heitta" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*heitta]
			=[[D Pekka] [T/fin{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]

17.
	>>>	Trying candidate parse [[D Pekka] [T/fin{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T/fin{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T/fin [v{V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [T/fin [v [antaa [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]]]
				Extracted head "heitta" from malla and created [[D Pekka] [T/fin [v [antaa [[[D kirja] [P(lle) [D Merja-]]] [malla heitta]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:67 [T/fin [<DP>:67 [v [antaa [[[D kirja] [P(lle) [D Merja-]]] [malla heitta]]]]]]]
				<malla heitta> was made an adjunct.
				= [<D Pekka> [T/fin [<D Pekka> [v [antaa [[[D kirja] [P(lle) [D Merja-]]] <malla heitta>]]]]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D Pekka>:67 [T/fin [<DP>:67 [v [antaa [[[D kirja] [P(lle) [D Merja-]]] <malla heitta>]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [<D Pekka> [T/fin [<D Pekka> [v [antaa [[[D kirja] <P(lle) [D Merja-]>] <malla heitta>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:67 [T/fin [<DP>:67 [v [antaa [[[D kirja] <P(lle) [D Merja-]>] <malla heitta>]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 17/205 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v [antaa [[[D kirja] <P(lle) [D Merja-]>] <malla heitta>]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 [v [antaa [[[D kirja] <P(lle) [D Merja-]>] <malla heitta>]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [v [V [[[D N] PP] ADVP]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMLANG:FI', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
heitta:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:throw', 'PF:heitta', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMLANG:FI', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
heitta:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:throw', 'PF:heitta', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
v: [v, T/fin]
antaa: [V, v, T/fin]
D: [D, V, v, T/fin]
kirja: [N, D, V, v, T/fin]
P(lle): [P, V, v, T/fin]
D: [D, P, V, v, T/fin]
Merja-: [N, D, P, V, v, T/fin]
malla: [ADV, V, v, T/fin]
heitta: [V, ADV, V, v, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 13
['Pekka', 'ei', 'nukkunut', 'kuorsaamalla']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.
		Next word contains multiple morphemes ['$T', 'nukku-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "nukku"

		[[D Pekka] [ei T]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*nukku]
			=[[D Pekka] [ei T{V}]]

7.
		Next word contains multiple morphemes ['$malla', 'kuorsaa_pro-']

		Consume "malla"

		[[D Pekka] [ei T{V}]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla.
				Avoid Neg/finP as SPEC, malla.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "nukku" lacks specifier D that it requires.
				Avoid [ei [T nukku]] as left branch because it constitutes illicit structure.
				[[D Pekka] [ei T{V}]] + malla = -98]
				[ei T{V}] + malla = -194]
				T{V} + malla = 3]
		Ranking completed:
			1. [T{V}; malla]
			2. [[[D Pekka] [ei T{V}]]; malla]
			3. [[ei T{V}]; malla]
		Exploring solution number (1) =[T{V} malla]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} malla]]]

8.

		Consume "kuorsaa"

		[[D Pekka] [ei [T{V} malla]]] + kuorsaa
			Filtering out impossible merge sites...
			Sink "kuorsaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*kuorsaa]
			=[[D Pekka] [ei [T{V} malla{V}]]]

9.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} malla{V}]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{V} malla{V}]]].
				Extracted head "nukku" and reconstructed it = [[D Pekka] [ei [T [nukku malla{V}]]]]
				Extracted head "kuorsaa" from malla and created [[D Pekka] [ei [T [nukku [malla kuorsaa]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:72 [ei [<DP>:72 [T [nukku [malla kuorsaa]]]]]]
				<malla kuorsaa> was made an adjunct.
				= [<D Pekka> [ei [<D Pekka> [T [nukku <malla kuorsaa>]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:72 from memory buffer into Spec of nukku
			= [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <malla kuorsaa>]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:72 [ei [<DP>:72 [T [<DP>:72 [nukku <malla kuorsaa>]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 9/94 operations) <------------------------------------
		Solution:
		[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [nukku <malla kuorsaa>]]]]]]
		Grammar: [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 [nukku <malla kuorsaa>]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [__:1 [T [__:1 [V ADVP]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:Neg/fin', '-COMP:T', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
kuorsaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:snore', 'PF:kuorsaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:Neg/fin', '-COMP:T', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
kuorsaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:snore', 'PF:kuorsaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
nukku: [V, T, Neg/fin]
malla: [ADV, V, T, Neg/fin]
kuorsaa: [V, ADV, V, T, Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 14
['Pekka', 'ei', 'hairitse', 'Merjaa', 'kuorsaamalla']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.
		Next word contains multiple morphemes ['$T', '$v', 'hairitse-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "v"

		[[D Pekka] [ei T]] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D Pekka] [ei T{v}]]

7.

		Consume "hairitsee"

		[[D Pekka] [ei T{v}]] + hairitsee
			Filtering out impossible merge sites...
			Sink "hairitsee" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*hairitsee]
			=[[D Pekka] [ei T{v,V}]]

8.
		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{v,V}]]

9.

		Adding inflectional features {'TAIL:!COMP:*,-PHI', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [ei T{v,V}]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [v hairitsee]]]]]] D] due to bad left branch.
				Reject [[ei [T [v hairitsee]]] D] due to bad left branch.
		Exploring solution number (1) =[T{v,V} D]
			T{v,V} cannot be opened.
			=[[D Pekka] [ei [T{v,V} D]]]

10.

		Consume "Merjaa"

		[[D Pekka] [ei [T{v,V} D]]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [ei [T{v,V} D{N}]]]

11.
		Next word contains multiple morphemes ['$malla', 'kuorsaa_pro-']

		Consume "malla"

		[[D Pekka] [ei [T{v,V} D{N}]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla.
				Avoid Neg/finP as SPEC, malla.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [ei [T [v [hairitsee [D Merjaa]]]]] as left branch because it constitutes illicit structure.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T [v [hairitsee [D Merjaa]]]] as left branch because it constitutes illicit structure.
				[[D Pekka] [ei [T{v,V} D{N}]]] + malla = -98]
				[ei [T{v,V} D{N}]] + malla = -194]
				[T{v,V} D{N}] + malla = -94]
				D{N} + malla = 4]
		Ranking completed:
			1. [D{N}; malla]
			2. [[T{v,V} D{N}]; malla]
			3. [[[D Pekka] [ei [T{v,V} D{N}]]]; malla]
			4. [[ei [T{v,V} D{N}]]; malla]
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[D Pekka] [ei [T{v,V} [[D Merjaa] malla]]]]

12.

		Consume "kuorsaa"

		[[D Pekka] [ei [T{v,V} [[D Merjaa] malla]]]] + kuorsaa
			Filtering out impossible merge sites...
			Sink "kuorsaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*kuorsaa]
			=[[D Pekka] [ei [T{v,V} [[D Merjaa] malla{V}]]]]

13.
	>>>	Trying candidate parse [[D Pekka] [ei [T{v,V} [[D Merjaa] malla{V}]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{v,V} [[D Merjaa] malla{V}]]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [v{V} [[D Merjaa] malla{V}]]]]]
				Extracted head "hairitsee" and reconstructed it = [[D Pekka] [ei [T [v [hairitsee [[D Merjaa] malla{V}]]]]]]
				Extracted head "kuorsaa" from malla and created [[D Pekka] [ei [T [v [hairitsee [[D Merjaa] [malla kuorsaa]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:80 [ei [<DP>:80 [T [v [hairitsee [[D Merjaa] [malla kuorsaa]]]]]]]]
				<malla kuorsaa> was made an adjunct.
				[D Merjaa] cannot be made an adjunct because its sister is an adjunct.
				Floater [D Merjaa] dropped: [<D Pekka>:80 [ei [<DP>:80 [T [v [(DP):81 [hairitsee [[D Merjaa]:81 <malla kuorsaa>]]]]]]]]
				= [<D Pekka> [ei [<D Pekka> [T [v [[D Merjaa] [hairitsee [[D Merjaa] <malla kuorsaa>]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:80 from memory buffer into Spec of v
			= [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [v [[D Merjaa] [hairitsee [[D Merjaa] <malla kuorsaa>]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:80 [ei [<DP>:80 [T [<DP>:80 [v [(DP):81 [hairitsee [[D Merjaa]:81 <malla kuorsaa>]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 13/131 operations) <------------------------------------
		Solution:
		[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [v [[D Merjaa] [hairitsee [[D Merjaa] <malla kuorsaa>]]]]]]]]]
		Grammar: [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 [v [(DP):2 [hairitsee [[D Merjaa]:2 <malla kuorsaa>]]]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [__:1 [T [__:1 [v [__:2 [V [[D N]:2 ADVP]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
hairitsee:['-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:disturb', 'PF:hairitsee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
kuorsaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:snore', 'PF:kuorsaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
hairitsee:['-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:disturb', 'PF:hairitsee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
kuorsaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:snore', 'PF:kuorsaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
v: [v, T, Neg/fin]
(D): [D, v, T, Neg/fin]
(N): [N, D, v, T, Neg/fin]
hairitsee: [V, v, T, Neg/fin]
D: [D, V, v, T, Neg/fin]
Merjaa: [N, D, V, v, T, Neg/fin]
malla: [ADV, V, v, T, Neg/fin]
kuorsaa: [V, ADV, V, v, T, Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 15
['Pekka', 'ei', 'antanut', 'kirjaa', 'Merjalle', 'heittamalla']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.
		Next word contains multiple morphemes ['$T', '$v', 'anta-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "v"

		[[D Pekka] [ei T]] + v
			Filtering out impossible merge sites...
			Sink "v" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*v]
			=[[D Pekka] [ei T{v}]]

7.

		Consume "antaa"

		[[D Pekka] [ei T{v}]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into T{v} because they are inside the same phonological word.
		Exploring solution number (1) =[T{v}*antaa]
			=[[D Pekka] [ei T{v,V}]]

8.
		Next word contains multiple morphemes ['$par', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{v,V}]]

9.

		Adding inflectional features {'TAIL:!COMP:*,-PHI', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [ei T{v,V}]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [v antaa]]]]]] D] due to bad left branch.
				Reject [[ei [T [v antaa]]] D] due to bad left branch.
		Exploring solution number (1) =[T{v,V} D]
			T{v,V} cannot be opened.
			=[[D Pekka] [ei [T{v,V} D]]]

10.

		Consume "kirja"

		[[D Pekka] [ei [T{v,V} D]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [ei [T{v,V} D{N}]]]

11.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [ei [T{v,V} D{N}]]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, P(lle).
				Avoid Neg/finP as SPEC, P(lle).
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [ei [T [v [antaa [D kirja]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T{v,V} D{N}], P(lle)] because the operation breaks up an existing selectional dependency.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [T [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
				[[D Pekka] [ei [T{v,V} D{N}]]] + P(lle) = -98]
				[ei [T{v,V} D{N}]] + P(lle) = -194]
				[T{v,V} D{N}] + P(lle) = -191]
				D{N} + P(lle) = 12]
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D Pekka] [ei [T{v,V} D{N}]]]; P(lle)]
			3. [[T{v,V} D{N}]; P(lle)]
			4. [[ei [T{v,V} D{N}]]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [ei [T{v,V} [[D kirja] P(lle)]]]]

12.

		Consume "D"

		[[D Pekka] [ei [T{v,V} [[D kirja] P(lle)]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D}]]]]

13.

		Consume "Merja-"

		[[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D}]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D,N}]]]]

14.
		Next word contains multiple morphemes ['$malla', 'heitta_pro-']

		Consume "malla"

		[[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D,N}]]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla.
				Avoid Neg/finP as SPEC, malla.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [ei [T [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]] as left branch because it constitutes illicit structure.
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
				Avoid [T [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] as left branch because it constitutes illicit structure.
				[D kirja]" has no thematic role
				Avoid [[D kirja] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid [P(lle){D,N} malla] due to complement selection.
			P(lle) was opened.
				Prioritize P(lle){D,N} because all solutions were negative.
				[[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D,N}]]]] + malla = -98]
				[ei [T{v,V} [[D kirja] P(lle){D,N}]]] + malla = -194]
				[T{v,V} [[D kirja] P(lle){D,N}]] + malla = -94]
				[[D kirja] P(lle){D,N}] + malla = -92]
				P(lle){D,N} + malla = 110]
		Ranking completed:
			1. [P(lle){D,N}; malla]
			2. [[[D kirja] P(lle){D,N}]; malla]
			3. [[T{v,V} [[D kirja] P(lle){D,N}]]; malla]
			4. [[[D Pekka] [ei [T{v,V} [[D kirja] P(lle){D,N}]]]]; malla]
			5. [[ei [T{v,V} [[D kirja] P(lle){D,N}]]]; malla]
		Exploring solution number (1) =[P(lle){D,N} malla]
			P(lle) was opened.
			=[[D Pekka] [ei [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]]]

15.

		Consume "heitta"

		[[D Pekka] [ei [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]]] + heitta
			Filtering out impossible merge sites...
			Sink "heitta" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*heitta]
			=[[D Pekka] [ei [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]

16.
	>>>	Trying candidate parse [[D Pekka] [ei [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [v{V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [ei [T [v [antaa [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]]
				Extracted head "heitta" from malla and created [[D Pekka] [ei [T [v [antaa [[D kirja] [[P(lle) [D Merja-]] [malla heitta]]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:93 [ei [<DP>:93 [T [v [antaa [[D kirja] [[P(lle) [D Merja-]] [malla heitta]]]]]]]]]
				<malla heitta> was made an adjunct.
				= [<D Pekka> [ei [<D Pekka> [T [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla heitta>]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:93 from memory buffer into Spec of v
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D Pekka>:93 [ei [<DP>:93 [T [<DP>:93 [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla heitta>]]]]]]]]].
			= [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla heitta>]]]]]]]]]
		Checking LF-interface conditions.
				[D kirja]" has no thematic role
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMLANG:FI', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
heitta:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:throw', 'PF:heitta', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
v: [v, T, Neg/fin]
antaa: [V, v, T, Neg/fin]
D: [D, V, v, T, Neg/fin]
kirja: [N, D, V, v, T, Neg/fin]
P(lle): [P, V, v, T, Neg/fin]
D: [D, P, V, v, T, Neg/fin]
Merja-: [N, D, P, V, v, T, Neg/fin]
malla: [ADV, V, v, T, Neg/fin]
heitta: [V, ADV, V, v, T, Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "heitta_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D kirja] P(lle){D,N}] malla]
			Reconstructing head movement for [[D kirja] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[D kirja] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D kirja] [P(lle) [D Merja-]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][-PHI]
				= [[D kirja] [P(lle) [D Merja-]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
			=[[D Pekka] [ei [T{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla]]]]

17.

		Consume "heitta"

		[[D Pekka] [ei [T{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla]]]] + heitta
			Filtering out impossible merge sites...
			Sink "heitta" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*heitta]
			=[[D Pekka] [ei [T{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]]

18.
	>>>	Trying candidate parse [[D Pekka] [ei [T{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]].
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [v{V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [ei [T [v [antaa [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]]]]
				Extracted head "heitta" from malla and created [[D Pekka] [ei [T [v [antaa [[[D kirja] [P(lle) [D Merja-]]] [malla heitta]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:95 [ei [<DP>:95 [T [v [antaa [[[D kirja] [P(lle) [D Merja-]]] [malla heitta]]]]]]]]
				<malla heitta> was made an adjunct.
				= [<D Pekka> [ei [<D Pekka> [T [v [antaa [[[D kirja] [P(lle) [D Merja-]]] <malla heitta>]]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:95 from memory buffer into Spec of v
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D Pekka>:95 [ei [<DP>:95 [T [<DP>:95 [v [antaa [[[D kirja] [P(lle) [D Merja-]]] <malla heitta>]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [v [antaa [[[D kirja] <P(lle) [D Merja-]>] <malla heitta>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:95 [ei [<DP>:95 [T [<DP>:95 [v [antaa [[[D kirja] <P(lle) [D Merja-]>] <malla heitta>]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 18/236 operations) <------------------------------------
		Solution:
		[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [v [antaa [[[D kirja] <P(lle) [D Merja-]>] <malla heitta>]]]]]]]]
		Grammar: [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 [v [antaa [[[D kirja] <P(lle) [D Merja-]>] <malla heitta>]]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [__:1 [T [__:1 [v [V [[[D N] PP] ADVP]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMLANG:FI', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
heitta:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:throw', 'PF:heitta', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMLANG:FI', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
heitta:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:throw', 'PF:heitta', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
v: [v, T, Neg/fin]
antaa: [V, v, T, Neg/fin]
D: [D, V, v, T, Neg/fin]
kirja: [N, D, V, v, T, Neg/fin]
P(lle): [P, V, v, T, Neg/fin]
D: [D, P, V, v, T, Neg/fin]
Merja-: [N, D, P, V, v, T, Neg/fin]
malla: [ADV, V, v, T, Neg/fin]
heitta: [V, ADV, V, v, T, Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 16
['Pekka', 'ei', 'kaskenyt', 'heidan', 'nukkua']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.
		Next word contains multiple morphemes ['$T', 'kaske-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "käske"

		[[D Pekka] [ei T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] [ei T{V}]]

7.
		Next word contains multiple morphemes ['$gen', '$D', 'heidan-']
		Storing inflectional feature ['-', '-FLOAT', 'LANG:FI', 'TAIL:CAT:INF,A/HEAD'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{V}]]

8.

		Adding inflectional features {'-', '-FLOAT', 'LANG:FI', 'TAIL:CAT:INF,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD']

		Consume "D"

		[[D Pekka] [ei T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T käske]] as left branch because it constitutes illicit structure.
				Avoid TP as SPEC for D due to unselective SPEC feature.
				Avoid [T{V} D] due to local agreement failure.
				Prioritize [T{V} D] due to complement selection.
				[[D Pekka] [ei T{V}]] + D = -98]
				[ei T{V}] + D = -194]
				T{V} + D = -38]
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] [ei T{V}]]; D]
			3. [[ei T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} D]]]

9.

		Consume "heidän"

		[[D Pekka] [ei [T{V} D]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [ei [T{V} D{N}]]]

10.
		Next word contains multiple morphemes ['$-ta', 'nukku-']

		Consume "Ainf"

		[[D Pekka] [ei [T{V} D{N}]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [käske <D heidän>]]]]]] Ainf] due to bad left branch.
				Reject [[ei [T [käske <D heidän>]]] Ainf] due to bad left branch.
				Reject [[T [käske [D heidän]]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]

11.

		Consume "nukku"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*nukku]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{V}]]]]

12.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} [[D heidän] Ainf{V}]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{V} [[D heidän] Ainf{V}]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] Ainf{V}]]]]]
				Extracted head "nukku" from Ainf and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf nukku]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:103 [ei [<DP>:103 [T [käske [[D heidän] [Ainf nukku]]]]]]]
				[D heidän] failed to tail [A/HEAD][CAT:INF]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped: [<D Pekka>:103 [ei [<DP>:103 [T [käske [<D heidän>:104 [Ainf [<DP>:104 nukku]]]]]]]]
				= [<D Pekka> [ei [<D Pekka> [T [käske [<D heidän> [Ainf [<D heidän> nukku]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:103 from memory buffer into Spec of käske
			= [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> nukku]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:103 [ei [<DP>:103 [T [<DP>:103 [käske [<D heidän>:104 [Ainf [<DP>:104 nukku]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 12/123 operations) <------------------------------------
		Solution:
		[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> nukku]]]]]]]]]
		Grammar: [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 nukku]]]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [__:1 [T [__:1 [V [DP:2 [INF [__:2 V]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:Neg/fin', '-COMP:T', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:Neg/fin', '-COMP:T', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
käske: [V, T, Neg/fin]
D: [D, V, T, Neg/fin]
heidän: [N, D, V, T, Neg/fin]
Ainf: [INF, V, T, Neg/fin]
(D): [D, INF, V, T, Neg/fin]
(N): [N, D, INF, V, T, Neg/fin]
nukku: [V, INF, V, T, Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 17
['Pekka', 'ei', 'kaskenyt', 'heidan', 'ihailla', 'Merjaa']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.
		Next word contains multiple morphemes ['$T', 'kaske-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "käske"

		[[D Pekka] [ei T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] [ei T{V}]]

7.
		Next word contains multiple morphemes ['$gen', '$D', 'heidan-']
		Storing inflectional feature ['-', '-FLOAT', 'LANG:FI', 'TAIL:CAT:INF,A/HEAD'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{V}]]

8.

		Adding inflectional features {'-', '-FLOAT', 'LANG:FI', 'TAIL:CAT:INF,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD']

		Consume "D"

		[[D Pekka] [ei T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T käske]] as left branch because it constitutes illicit structure.
				Avoid TP as SPEC for D due to unselective SPEC feature.
				Avoid [T{V} D] due to local agreement failure.
				Prioritize [T{V} D] due to complement selection.
				[[D Pekka] [ei T{V}]] + D = -98]
				[ei T{V}] + D = -194]
				T{V} + D = -38]
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] [ei T{V}]]; D]
			3. [[ei T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} D]]]

9.

		Consume "heidän"

		[[D Pekka] [ei [T{V} D]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [ei [T{V} D{N}]]]

10.
		Next word contains multiple morphemes ['$-ta', '$v', 'ihaile-']

		Consume "Ainf"

		[[D Pekka] [ei [T{V} D{N}]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [käske <D heidän>]]]]]] Ainf] due to bad left branch.
				Reject [[ei [T [käske <D heidän>]]] Ainf] due to bad left branch.
				Reject [[T [käske [D heidän]]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]

11.

		Consume "v"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]]

12.

		Consume "ihailee"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]] + ihailee
			Filtering out impossible merge sites...
			Sink "ihailee" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*ihailee]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]

13.
		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]

14.

		Adding inflectional features {'TAIL:!COMP:*,-PHI', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v ihailee]]]]]]]]]] D] due to bad left branch.
				Reject [[ei [T [käske [<D heidän> [Ainf [<D heidän> [v ihailee]]]]]]] D] due to bad left branch.
				Reject [[T [käske [<D heidän> [Ainf [<D heidän> [v ihailee]]]]]] D] due to bad left branch.
				Reject [[<D heidän> [Ainf [<D heidän> [v ihailee]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D]]]]]

15.

		Consume "Merjaa"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D]]]]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]]

16.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf{v,V} D{N}]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v{V} D{N}]]]]]]]
				Extracted head "ihailee" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [ihailee D{N}]]]]]]]]
				Extracted head "Merjaa" from D and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [ihailee [D Merjaa]]]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:118 [ei [<DP>:118 [T [käske [[D heidän] [Ainf [v [ihailee [D Merjaa]]]]]]]]]]
				[D heidän] failed to tail [A/HEAD][CAT:INF]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped: [<D Pekka>:118 [ei [<DP>:118 [T [käske [<D heidän>:119 [Ainf [<DP>:119 [v [ihailee [D Merjaa]]]]]]]]]]]
				= [<D Pekka> [ei [<D Pekka> [T [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:118 from memory buffer into Spec of käske
			= [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:118 [ei [<DP>:118 [T [<DP>:118 [käske [<D heidän>:119 [Ainf [<DP>:119 [v [ihailee [D Merjaa]]]]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 16/157 operations) <------------------------------------
		Solution:
		[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [ihailee [D Merjaa]]]]]]]]]]]]
		Grammar: [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 [v [ihailee [D Merjaa]]]]]]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [__:1 [T [__:1 [V [DP:2 [INF [__:2 [v [V [D N]]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
ihailee:['-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihailee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
käske: [V, T, Neg/fin]
D: [D, V, T, Neg/fin]
heidän: [N, D, V, T, Neg/fin]
Ainf: [INF, V, T, Neg/fin]
(D): [D, INF, V, T, Neg/fin]
(N): [N, D, INF, V, T, Neg/fin]
v: [v, INF, V, T, Neg/fin]
ihailee: [V, v, INF, V, T, Neg/fin]
D: [D, V, v, INF, V, T, Neg/fin]
Merjaa: [N, D, V, v, INF, V, T, Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 18
['Pekka', 'ei', 'kaskenyt', 'heidan', 'antaa', 'kirjaa', 'Merjalle']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.
		Next word contains multiple morphemes ['$T', 'kaske-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "käske"

		[[D Pekka] [ei T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] [ei T{V}]]

7.
		Next word contains multiple morphemes ['$gen', '$D', 'heidan-']
		Storing inflectional feature ['-', '-FLOAT', 'LANG:FI', 'TAIL:CAT:INF,A/HEAD'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{V}]]

8.

		Adding inflectional features {'-', '-FLOAT', 'LANG:FI', 'TAIL:CAT:INF,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD']

		Consume "D"

		[[D Pekka] [ei T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T käske]] as left branch because it constitutes illicit structure.
				Avoid TP as SPEC for D due to unselective SPEC feature.
				Avoid [T{V} D] due to local agreement failure.
				Prioritize [T{V} D] due to complement selection.
				[[D Pekka] [ei T{V}]] + D = -98]
				[ei T{V}] + D = -194]
				T{V} + D = -38]
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] [ei T{V}]]; D]
			3. [[ei T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} D]]]

9.

		Consume "heidän"

		[[D Pekka] [ei [T{V} D]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [ei [T{V} D{N}]]]

10.
		Next word contains multiple morphemes ['$-ta', '$v', 'anta-']

		Consume "Ainf"

		[[D Pekka] [ei [T{V} D{N}]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [käske <D heidän>]]]]]] Ainf] due to bad left branch.
				Reject [[ei [T [käske <D heidän>]]] Ainf] due to bad left branch.
				Reject [[T [käske [D heidän]]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]

11.

		Consume "v"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]]

12.

		Consume "antaa"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*antaa]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]

13.
		Next word contains multiple morphemes ['$par', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]

14.

		Adding inflectional features {'TAIL:!COMP:*,-PHI', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v antaa]]]]]]]]]] D] due to bad left branch.
				Reject [[ei [T [käske [<D heidän> [Ainf [<D heidän> [v antaa]]]]]]] D] due to bad left branch.
				Reject [[T [käske [<D heidän> [Ainf [<D heidän> [v antaa]]]]]] D] due to bad left branch.
				Reject [[<D heidän> [Ainf [<D heidän> [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D]]]]]

15.

		Consume "kirja"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D]]]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]]

16.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, P(lle).
				Avoid Neg/finP as SPEC, P(lle).
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T{V} [[D heidän] [Ainf{v,V} D{N}]]], P(lle)] because the operation breaks up an existing selectional dependency.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid INFP as SPEC, P(lle).
				Avoid INFP as SPEC, P(lle).
				An EPP-head "Ainf" lacks specifier D that it requires.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
				[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]] + P(lle) = -98]
				[ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]] + P(lle) = -194]
				[T{V} [[D heidän] [Ainf{v,V} D{N}]]] + P(lle) = -191]
				[[D heidän] [Ainf{v,V} D{N}]] + P(lle) = -92]
				[Ainf{v,V} D{N}] + P(lle) = -185]
				D{N} + P(lle) = 18]
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D heidän] [Ainf{v,V} D{N}]]; P(lle)]
			3. [[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]]; P(lle)]
			4. [[Ainf{v,V} D{N}]; P(lle)]
			5. [[T{V} [[D heidän] [Ainf{v,V} D{N}]]]; P(lle)]
			6. [[ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]]]]

17.

		Consume "D"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]]]]

18.

		Consume "Merja-"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]]

19.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v{V} [[D kirja] P(lle){D,N}]]]]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] P(lle){D,N}]]]]]]]]]
				Extracted head "D{N}" from P(lle) and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] [P(lle) D{N}]]]]]]]]]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:145 [ei [<DP>:145 [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]]]]
				[D heidän] failed to tail [A/HEAD][CAT:INF]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped: [<D Pekka>:145 [ei [<DP>:145 [T [käske [<D heidän>:146 [Ainf [<DP>:146 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]]]]]
				= [<D Pekka> [ei [<D Pekka> [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:145 from memory buffer into Spec of käske
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D Pekka>:145 [ei [<DP>:145 [T [<DP>:145 [käske [<D heidän>:146 [Ainf [<DP>:146 [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:145 [ei [<DP>:145 [T [<DP>:145 [käske [<D heidän>:146 [Ainf [<DP>:146 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 19/217 operations) <------------------------------------
		Solution:
		[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]]]
		Grammar: [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [__:1 [T [__:1 [V [DP:2 [INF [__:2 [v [V [[D N] PP]]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMLANG:FI', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMLANG:FI', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
käske: [V, T, Neg/fin]
D: [D, V, T, Neg/fin]
heidän: [N, D, V, T, Neg/fin]
Ainf: [INF, V, T, Neg/fin]
(D): [D, INF, V, T, Neg/fin]
(N): [N, D, INF, V, T, Neg/fin]
v: [v, INF, V, T, Neg/fin]
antaa: [V, v, INF, V, T, Neg/fin]
D: [D, V, v, INF, V, T, Neg/fin]
kirja: [N, D, V, v, INF, V, T, Neg/fin]
P(lle): [P, V, v, INF, V, T, Neg/fin]
D: [D, P, V, v, INF, V, T, Neg/fin]
Merja-: [N, D, P, V, v, INF, V, T, Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 19
['Pekka', 'kaski', 'heidan', 'nukkua', 'kuorsaamalla']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', 'kaske-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

5.

		Consume "käske"

		[[D Pekka] T/fin] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*käske]
			=[[D Pekka] T/fin{V}]

6.
		Next word contains multiple morphemes ['$gen', '$D', 'heidan-']
		Storing inflectional feature ['-', '-FLOAT', 'LANG:FI', 'TAIL:CAT:INF,A/HEAD'] into working memory.

		Consume "$D"

			=[[D Pekka] T/fin{V}]

7.

		Adding inflectional features {'-', '-FLOAT', 'LANG:FI', 'TAIL:CAT:INF,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD']

		Consume "D"

		[[D Pekka] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D Pekka] T/fin{V}] + D = -98]
				T/fin{V} + D = -42]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D Pekka] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			T/fin{V} cannot be opened.
			=[[D Pekka] [T/fin{V} D]]

8.

		Consume "heidän"

		[[D Pekka] [T/fin{V} D]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [T/fin{V} D{N}]]

9.
		Next word contains multiple morphemes ['$-ta', 'nukku-']

		Consume "Ainf"

		[[D Pekka] [T/fin{V} D{N}]] + Ainf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [käske <D heidän>]]]] Ainf] due to bad left branch.
				Reject [[T/fin [käske <D heidän>]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [T/fin{V} [[D heidän] Ainf]]]

10.

		Consume "nukku"

		[[D Pekka] [T/fin{V} [[D heidän] Ainf]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*nukku]
			=[[D Pekka] [T/fin{V} [[D heidän] Ainf{V}]]]

11.
		Next word contains multiple morphemes ['$malla', 'kuorsaa_pro-']

		Consume "malla"

		[[D Pekka] [T/fin{V} [[D heidän] Ainf{V}]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla.
				Avoid T/finP as SPEC, malla.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T/fin [käske [<D heidän> [Ainf [<D heidän> nukku]]]]] as left branch because it constitutes illicit structure.
				Considering [[D heidän] Ainf{V}] due to legitimate tail-head configuration.
				Considering Ainf{V} due to legitimate tail-head configuration.
				[[D Pekka] [T/fin{V} [[D heidän] Ainf{V}]]] + malla = -98]
				[T/fin{V} [[D heidän] Ainf{V}]] + malla = -194]
				[[D heidän] Ainf{V}] + malla = 209]
				Ainf{V} + malla = 212]
		Ranking completed:
			1. [Ainf{V}; malla]
			2. [[[D heidän] Ainf{V}]; malla]
			3. [[[D Pekka] [T/fin{V} [[D heidän] Ainf{V}]]]; malla]
			4. [[T/fin{V} [[D heidän] Ainf{V}]]; malla]
		Exploring solution number (1) =[Ainf{V} malla]
			Ainf{V} cannot be opened.
			=[[D Pekka] [T/fin{V} [[D heidän] [Ainf{V} malla]]]]

12.

		Consume "kuorsaa"

		[[D Pekka] [T/fin{V} [[D heidän] [Ainf{V} malla]]]] + kuorsaa
			Filtering out impossible merge sites...
			Sink "kuorsaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*kuorsaa]
			=[[D Pekka] [T/fin{V} [[D heidän] [Ainf{V} malla{V}]]]]

13.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [[D heidän] [Ainf{V} malla{V}]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T/fin{V} [[D heidän] [Ainf{V} malla{V}]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [T/fin [käske [[D heidän] [Ainf{V} malla{V}]]]]]
				Extracted head "nukku" and reconstructed it = [[D Pekka] [T/fin [käske [[D heidän] [Ainf [nukku malla{V}]]]]]]
				Extracted head "kuorsaa" from malla and created [[D Pekka] [T/fin [käske [[D heidän] [Ainf [nukku [malla kuorsaa]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:159 [T/fin [<DP>:159 [käske [[D heidän] [Ainf [nukku [malla kuorsaa]]]]]]]]
				[D heidän] failed to tail [A/HEAD][CAT:INF]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped: [<D Pekka>:159 [T/fin [<DP>:159 [käske [<D heidän>:160 [Ainf [<DP>:160 [nukku [malla kuorsaa]]]]]]]]]
				<malla kuorsaa> was made an adjunct.
				= [<D Pekka> [T/fin [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [nukku <malla kuorsaa>]]]]]]]]
			Dropping A-/A-bar movement.
			= [<D Pekka> [T/fin [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [nukku <malla kuorsaa>]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:159 [T/fin [<DP>:159 [käske [<D heidän>:160 [Ainf [<DP>:160 [nukku <malla kuorsaa>]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 13/133 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [nukku <malla kuorsaa>]]]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 [nukku <malla kuorsaa>]]]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V [DP:2 [INF [__:2 [V ADVP]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:Neg/fin', '-COMP:T', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
kuorsaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:snore', 'PF:kuorsaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:Neg/fin', '-COMP:T', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
kuorsaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:snore', 'PF:kuorsaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
käske: [V, T/fin]
D: [D, V, T/fin]
heidän: [N, D, V, T/fin]
Ainf: [INF, V, T/fin]
(D): [D, INF, V, T/fin]
(N): [N, D, INF, V, T/fin]
nukku: [V, INF, V, T/fin]
malla: [ADV, V, INF, V, T/fin]
kuorsaa: [V, ADV, V, INF, V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 20
['Pekka', 'kaski', 'heidan', 'hairita', 'Merjaa', 'kuorsaamalla']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', 'kaske-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

5.

		Consume "käske"

		[[D Pekka] T/fin] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*käske]
			=[[D Pekka] T/fin{V}]

6.
		Next word contains multiple morphemes ['$gen', '$D', 'heidan-']
		Storing inflectional feature ['-', '-FLOAT', 'LANG:FI', 'TAIL:CAT:INF,A/HEAD'] into working memory.

		Consume "$D"

			=[[D Pekka] T/fin{V}]

7.

		Adding inflectional features {'-', '-FLOAT', 'LANG:FI', 'TAIL:CAT:INF,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD']

		Consume "D"

		[[D Pekka] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D Pekka] T/fin{V}] + D = -98]
				T/fin{V} + D = -42]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D Pekka] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			T/fin{V} cannot be opened.
			=[[D Pekka] [T/fin{V} D]]

8.

		Consume "heidän"

		[[D Pekka] [T/fin{V} D]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [T/fin{V} D{N}]]

9.
		Next word contains multiple morphemes ['$-ta', '$v', 'hairitse-']

		Consume "Ainf"

		[[D Pekka] [T/fin{V} D{N}]] + Ainf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [käske <D heidän>]]]] Ainf] due to bad left branch.
				Reject [[T/fin [käske <D heidän>]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [T/fin{V} [[D heidän] Ainf]]]

10.

		Consume "v"

		[[D Pekka] [T/fin{V} [[D heidän] Ainf]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D Pekka] [T/fin{V} [[D heidän] Ainf{v}]]]

11.

		Consume "hairitsee"

		[[D Pekka] [T/fin{V} [[D heidän] Ainf{v}]]] + hairitsee
			Filtering out impossible merge sites...
			Sink "hairitsee" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*hairitsee]
			=[[D Pekka] [T/fin{V} [[D heidän] Ainf{v,V}]]]

12.
		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [T/fin{V} [[D heidän] Ainf{v,V}]]]

13.

		Adding inflectional features {'TAIL:!COMP:*,-PHI', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [T/fin{V} [[D heidän] Ainf{v,V}]]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v hairitsee]]]]]]]] D] due to bad left branch.
				Reject [[T/fin [käske [<D heidän> [Ainf [<D heidän> [v hairitsee]]]]]] D] due to bad left branch.
				Reject [[<D heidän> [Ainf [<D heidän> [v hairitsee]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} D]]]]

14.

		Consume "Merjaa"

		[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} D]]]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} D{N}]]]]

15.
		Next word contains multiple morphemes ['$malla', 'kuorsaa_pro-']

		Consume "malla"

		[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} D{N}]]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla.
				Avoid T/finP as SPEC, malla.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T/fin [käske [<D heidän> [Ainf [<D heidän> [v [hairitsee [D Merjaa]]]]]]]] as left branch because it constitutes illicit structure.
				Considering [[D heidän] [Ainf{v,V} D{N}]] due to legitimate tail-head configuration.
				An EPP-head "Ainf" lacks specifier D that it requires.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [hairitsee [D Merjaa]]]] as left branch because it constitutes illicit structure.
				Considering [Ainf{v,V} D{N}] due to legitimate tail-head configuration.
				Considering D{N} due to legitimate tail-head configuration.
				[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} D{N}]]]] + malla = -98]
				[T/fin{V} [[D heidän] [Ainf{v,V} D{N}]]] + malla = -194]
				[[D heidän] [Ainf{v,V} D{N}]] + malla = 209]
				[Ainf{v,V} D{N}] + malla = 116]
				D{N} + malla = 215]
		Ranking completed:
			1. [D{N}; malla]
			2. [[[D heidän] [Ainf{v,V} D{N}]]; malla]
			3. [[Ainf{v,V} D{N}]; malla]
			4. [[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} D{N}]]]]; malla]
			5. [[T/fin{V} [[D heidän] [Ainf{v,V} D{N}]]]; malla]
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla]]]]]

16.

		Consume "kuorsaa"

		[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla]]]]] + kuorsaa
			Filtering out impossible merge sites...
			Sink "kuorsaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*kuorsaa]
			=[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla{V}]]]]]

17.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla{V}]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla{V}]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [T/fin [käske [[D heidän] [Ainf{v,V} [[D Merjaa] malla{V}]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T/fin [käske [[D heidän] [Ainf [v{V} [[D Merjaa] malla{V}]]]]]]]
				Extracted head "hairitsee" and reconstructed it = [[D Pekka] [T/fin [käske [[D heidän] [Ainf [v [hairitsee [[D Merjaa] malla{V}]]]]]]]]
				Extracted head "kuorsaa" from malla and created [[D Pekka] [T/fin [käske [[D heidän] [Ainf [v [hairitsee [[D Merjaa] [malla kuorsaa]]]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:176 [T/fin [<DP>:176 [käske [[D heidän] [Ainf [v [hairitsee [[D Merjaa] [malla kuorsaa]]]]]]]]]]
				[D heidän] failed to tail [A/HEAD][CAT:INF]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped: [<D Pekka>:176 [T/fin [<DP>:176 [käske [<D heidän>:177 [Ainf [<DP>:177 [v [hairitsee [[D Merjaa] [malla kuorsaa]]]]]]]]]]]
				<malla kuorsaa> was made an adjunct.
				[D Merjaa] cannot be made an adjunct because its sister is an adjunct.
				Floater [D Merjaa] dropped: [<D Pekka>:176 [T/fin [<DP>:176 [käske [<D heidän>:177 [Ainf [<DP>:177 [v [(DP):178 [hairitsee [[D Merjaa]:178 <malla kuorsaa>]]]]]]]]]]]
				= [<D Pekka> [T/fin [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [[D Merjaa] [hairitsee [[D Merjaa] <malla kuorsaa>]]]]]]]]]]]
			Dropping A-/A-bar movement.
			= [<D Pekka> [T/fin [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [[D Merjaa] [hairitsee [[D Merjaa] <malla kuorsaa>]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:176 [T/fin [<DP>:176 [käske [<D heidän>:177 [Ainf [<DP>:177 [v [(DP):178 [hairitsee [[D Merjaa]:178 <malla kuorsaa>]]]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 17/173 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [[D Merjaa] [hairitsee [[D Merjaa] <malla kuorsaa>]]]]]]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 [v [(DP):3 [hairitsee [[D Merjaa]:3 <malla kuorsaa>]]]]]]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V [DP:2 [INF [__:2 [v [__:3 [V [[D N]:3 ADVP]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
hairitsee:['-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:disturb', 'PF:hairitsee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
kuorsaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:snore', 'PF:kuorsaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
hairitsee:['-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:disturb', 'PF:hairitsee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
kuorsaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:snore', 'PF:kuorsaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
käske: [V, T/fin]
D: [D, V, T/fin]
heidän: [N, D, V, T/fin]
Ainf: [INF, V, T/fin]
(D): [D, INF, V, T/fin]
(N): [N, D, INF, V, T/fin]
v: [v, INF, V, T/fin]
(D): [D, v, INF, V, T/fin]
(N): [N, D, v, INF, V, T/fin]
hairitsee: [V, v, INF, V, T/fin]
D: [D, V, v, INF, V, T/fin]
Merjaa: [N, D, V, v, INF, V, T/fin]
malla: [ADV, V, v, INF, V, T/fin]
kuorsaa: [V, ADV, V, v, INF, V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 21
['Pekka', 'kaski', 'heidan', 'antaa', 'kirjan', 'Merjalle', 'heittamalla']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.
		Next word contains multiple morphemes ['$T/fin', 'kaske-']

		Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} T/fin]
			D was opened.
			=[[D Pekka] T/fin]

5.

		Consume "käske"

		[[D Pekka] T/fin] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T/fin because they are inside the same phonological word.
		Exploring solution number (1) =[T/fin*käske]
			=[[D Pekka] T/fin{V}]

6.
		Next word contains multiple morphemes ['$gen', '$D', 'heidan-']
		Storing inflectional feature ['-', '-FLOAT', 'LANG:FI', 'TAIL:CAT:INF,A/HEAD'] into working memory.

		Consume "$D"

			=[[D Pekka] T/fin{V}]

7.

		Adding inflectional features {'-', '-FLOAT', 'LANG:FI', 'TAIL:CAT:INF,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD']

		Consume "D"

		[[D Pekka] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Avoid T/finP as SPEC for D due to unselective SPEC feature.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				[[D Pekka] T/fin{V}] + D = -98]
				T/fin{V} + D = -42]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D Pekka] T/fin{V}]; D]
		Exploring solution number (1) =[T/fin{V} D]
			T/fin{V} cannot be opened.
			=[[D Pekka] [T/fin{V} D]]

8.

		Consume "heidän"

		[[D Pekka] [T/fin{V} D]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [T/fin{V} D{N}]]

9.
		Next word contains multiple morphemes ['$-ta', '$v', 'anta-']

		Consume "Ainf"

		[[D Pekka] [T/fin{V} D{N}]] + Ainf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [käske <D heidän>]]]] Ainf] due to bad left branch.
				Reject [[T/fin [käske <D heidän>]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [T/fin{V} [[D heidän] Ainf]]]

10.

		Consume "v"

		[[D Pekka] [T/fin{V} [[D heidän] Ainf]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D Pekka] [T/fin{V} [[D heidän] Ainf{v}]]]

11.

		Consume "antaa"

		[[D Pekka] [T/fin{V} [[D heidän] Ainf{v}]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*antaa]
			=[[D Pekka] [T/fin{V} [[D heidän] Ainf{v,V}]]]

12.
		Next word contains multiple morphemes ['$asp', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:v,!COMP:*'] into working memory.

		Consume "$D"

			=[[D Pekka] [T/fin{V} [[D heidän] Ainf{v,V}]]]

13.

		Adding inflectional features {'-', 'TAIL:CAT:v,!COMP:*', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']

		Consume "D"

		[[D Pekka] [T/fin{V} [[D heidän] Ainf{v,V}]]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v antaa]]]]]]]] D] due to bad left branch.
				Reject [[T/fin [käske [<D heidän> [Ainf [<D heidän> [v antaa]]]]]] D] due to bad left branch.
				Reject [[<D heidän> [Ainf [<D heidän> [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} D]]]]

14.

		Consume "kirja"

		[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} D]]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} D{N}]]]]

15.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} D{N}]]]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, P(lle).
				Avoid T/finP as SPEC, P(lle).
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T/fin [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid INFP as SPEC, P(lle).
				Avoid INFP as SPEC, P(lle).
				An EPP-head "Ainf" lacks specifier D that it requires.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
				[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} D{N}]]]] + P(lle) = -98]
				[T/fin{V} [[D heidän] [Ainf{v,V} D{N}]]] + P(lle) = -194]
				[[D heidän] [Ainf{v,V} D{N}]] + P(lle) = -94]
				[Ainf{v,V} D{N}] + P(lle) = -188]
				D{N} + P(lle) = 15]
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D heidän] [Ainf{v,V} D{N}]]; P(lle)]
			3. [[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} D{N}]]]]; P(lle)]
			4. [[Ainf{v,V} D{N}]; P(lle)]
			5. [[T/fin{V} [[D heidän] [Ainf{v,V} D{N}]]]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]]]

16.

		Consume "D"

		[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]]]

17.

		Consume "Merja-"

		[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]

18.
		Next word contains multiple morphemes ['$malla', 'heitta_pro-']

		Consume "malla"

		[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid T/finP as SPEC, malla.
				Avoid T/finP as SPEC, malla.
				An EPP-head "T/fin" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T/fin [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]] as left branch because it constitutes illicit structure.
				[D kirja]" has no thematic role
				Avoid [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]] as left branch because it constitutes illicit structure.
				Considering [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]] due to legitimate tail-head configuration.
				An EPP-head "Ainf" lacks specifier D that it requires.
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
				Avoid [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] as left branch because it constitutes illicit structure.
				Considering [Ainf{v,V} [[D kirja] P(lle){D,N}]] due to legitimate tail-head configuration.
				[D kirja]" has no thematic role
				Avoid [[D kirja] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Considering [[D kirja] P(lle){D,N}] due to legitimate tail-head configuration.
				Avoid [P(lle){D,N} malla] due to complement selection.
				Considering P(lle){D,N} due to legitimate tail-head configuration.
				[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]] + malla = -98]
				[T/fin{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]] + malla = -194]
				[[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]] + malla = 112]
				[Ainf{v,V} [[D kirja] P(lle){D,N}]] + malla = 116]
				[[D kirja] P(lle){D,N}] + malla = 120]
				P(lle){D,N} + malla = 124]
		Ranking completed:
			1. [P(lle){D,N}; malla]
			2. [[[D kirja] P(lle){D,N}]; malla]
			3. [[Ainf{v,V} [[D kirja] P(lle){D,N}]]; malla]
			4. [[[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]; malla]
			5. [[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]; malla]
			6. [[T/fin{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]; malla]
		Exploring solution number (1) =[P(lle){D,N} malla]
			P(lle) was opened.
			=[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]]]]

19.

		Consume "heitta"

		[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]]]] + heitta
			Filtering out impossible merge sites...
			Sink "heitta" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*heitta]
			=[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]

20.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [T/fin [käske [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T/fin [käske [[D heidän] [Ainf [v{V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [T/fin [käske [[D heidän] [Ainf [v [antaa [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]]]]
				Extracted head "heitta" from malla and created [[D Pekka] [T/fin [käske [[D heidän] [Ainf [v [antaa [[D kirja] [[P(lle) [D Merja-]] [malla heitta]]]]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:202 [T/fin [<DP>:202 [käske [[D heidän] [Ainf [v [antaa [[D kirja] [[P(lle) [D Merja-]] [malla heitta]]]]]]]]]]]
				[D heidän] failed to tail [A/HEAD][CAT:INF]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped: [<D Pekka>:202 [T/fin [<DP>:202 [käske [<D heidän>:203 [Ainf [<DP>:203 [v [antaa [[D kirja] [[P(lle) [D Merja-]] [malla heitta]]]]]]]]]]]]
				<malla heitta> was made an adjunct.
				= [<D Pekka> [T/fin [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla heitta>]]]]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D Pekka>:202 [T/fin [<DP>:202 [käske [<D heidän>:203 [Ainf [<DP>:203 [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla heitta>]]]]]]]]]]].
			= [<D Pekka> [T/fin [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla heitta>]]]]]]]]]]]
		Checking LF-interface conditions.
				[D kirja]" has no thematic role
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMLANG:FI', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
heitta:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:throw', 'PF:heitta', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
käske: [V, T/fin]
D: [D, V, T/fin]
heidän: [N, D, V, T/fin]
Ainf: [INF, V, T/fin]
(D): [D, INF, V, T/fin]
(N): [N, D, INF, V, T/fin]
v: [v, INF, V, T/fin]
antaa: [V, v, INF, V, T/fin]
D: [D, V, v, INF, V, T/fin]
kirja: [N, D, V, v, INF, V, T/fin]
P(lle): [P, V, v, INF, V, T/fin]
D: [D, P, V, v, INF, V, T/fin]
Merja-: [N, D, P, V, v, INF, V, T/fin]
malla: [ADV, V, v, INF, V, T/fin]
heitta: [V, ADV, V, v, INF, V, T/fin]


		Trying to find other solutions...
		I have now explored all solutions for "heitta_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D kirja] P(lle){D,N}] malla]
			Reconstructing head movement for [[D kirja] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[D kirja] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D kirja] [P(lle) [D Merja-]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][CAT:v]
				= [[D kirja] [P(lle) [D Merja-]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
			=[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla]]]]]

21.

		Consume "heitta"

		[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla]]]]] + heitta
			Filtering out impossible merge sites...
			Sink "heitta" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*heitta]
			=[[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]]]

22.
	>>>	Trying candidate parse [[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [T/fin{V} [[D heidän] [Ainf{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [T/fin [käske [[D heidän] [Ainf{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [T/fin [käske [[D heidän] [Ainf [v{V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [T/fin [käske [[D heidän] [Ainf [v [antaa [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]]]]]]
				Extracted head "heitta" from malla and created [[D Pekka] [T/fin [käske [[D heidän] [Ainf [v [antaa [[[D kirja] [P(lle) [D Merja-]]] [malla heitta]]]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:204 [T/fin [<DP>:204 [käske [[D heidän] [Ainf [v [antaa [[[D kirja] [P(lle) [D Merja-]]] [malla heitta]]]]]]]]]]
				[D heidän] failed to tail [A/HEAD][CAT:INF]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped: [<D Pekka>:204 [T/fin [<DP>:204 [käske [<D heidän>:205 [Ainf [<DP>:205 [v [antaa [[[D kirja] [P(lle) [D Merja-]]] [malla heitta]]]]]]]]]]]
				<malla heitta> was made an adjunct.
				= [<D Pekka> [T/fin [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[[D kirja] [P(lle) [D Merja-]]] <malla heitta>]]]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D Pekka>:204 [T/fin [<DP>:204 [käske [<D heidän>:205 [Ainf [<DP>:205 [v [antaa [[[D kirja] [P(lle) [D Merja-]]] <malla heitta>]]]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [<D Pekka> [T/fin [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[[D kirja] <P(lle) [D Merja-]>] <malla heitta>]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:204 [T/fin [<DP>:204 [käske [<D heidän>:205 [Ainf [<DP>:205 [v [antaa [[[D kirja] <P(lle) [D Merja-]>] <malla heitta>]]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 22/284 operations) <------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[[D kirja] <P(lle) [D Merja-]>] <malla heitta>]]]]]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 [v [antaa [[[D kirja] <P(lle) [D Merja-]>] <malla heitta>]]]]]]]]]]
		Spellout T/finP = [DP:1 [T/fin [__:1 [V [DP:2 [INF [__:2 [v [V [[[D N] PP] ADVP]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMLANG:FI', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
heitta:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:throw', 'PF:heitta', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/T/fin', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'NUM:sg', 'PER:3', 'PF:T/fin']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMLANG:FI', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:v,!COMP:*']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
heitta:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:throw', 'PF:heitta', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
T/fin: [T/fin]
(D): [D, T/fin]
(N): [N, D, T/fin]
käske: [V, T/fin]
D: [D, V, T/fin]
heidän: [N, D, V, T/fin]
Ainf: [INF, V, T/fin]
(D): [D, INF, V, T/fin]
(N): [N, D, INF, V, T/fin]
v: [v, INF, V, T/fin]
antaa: [V, v, INF, V, T/fin]
D: [D, V, v, INF, V, T/fin]
kirja: [N, D, V, v, INF, V, T/fin]
P(lle): [P, V, v, INF, V, T/fin]
D: [D, P, V, v, INF, V, T/fin]
Merja-: [N, D, P, V, v, INF, V, T/fin]
malla: [ADV, V, v, INF, V, T/fin]
heitta: [V, ADV, V, v, INF, V, T/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 22
['Pekka', 'ei', 'kaskenyt', 'heidan', 'nukkua', 'kuorsaamalla']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.
		Next word contains multiple morphemes ['$T', 'kaske-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "käske"

		[[D Pekka] [ei T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] [ei T{V}]]

7.
		Next word contains multiple morphemes ['$gen', '$D', 'heidan-']
		Storing inflectional feature ['-', '-FLOAT', 'LANG:FI', 'TAIL:CAT:INF,A/HEAD'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{V}]]

8.

		Adding inflectional features {'-', '-FLOAT', 'LANG:FI', 'TAIL:CAT:INF,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD']

		Consume "D"

		[[D Pekka] [ei T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T käske]] as left branch because it constitutes illicit structure.
				Avoid TP as SPEC for D due to unselective SPEC feature.
				Avoid [T{V} D] due to local agreement failure.
				Prioritize [T{V} D] due to complement selection.
				[[D Pekka] [ei T{V}]] + D = -98]
				[ei T{V}] + D = -194]
				T{V} + D = -38]
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] [ei T{V}]]; D]
			3. [[ei T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} D]]]

9.

		Consume "heidän"

		[[D Pekka] [ei [T{V} D]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [ei [T{V} D{N}]]]

10.
		Next word contains multiple morphemes ['$-ta', 'nukku-']

		Consume "Ainf"

		[[D Pekka] [ei [T{V} D{N}]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [käske <D heidän>]]]]]] Ainf] due to bad left branch.
				Reject [[ei [T [käske <D heidän>]]] Ainf] due to bad left branch.
				Reject [[T [käske [D heidän]]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]

11.

		Consume "nukku"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]] + nukku
			Filtering out impossible merge sites...
			Sink "nukku" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*nukku]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{V}]]]]

12.
		Next word contains multiple morphemes ['$malla', 'kuorsaa_pro-']

		Consume "malla"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{V}]]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla.
				Avoid Neg/finP as SPEC, malla.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T [käske [<D heidän> [Ainf [<D heidän> nukku]]]]]] as left branch because it constitutes illicit structure.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T [käske [<D heidän> [Ainf [<D heidän> nukku]]]]] as left branch because it constitutes illicit structure.
				[[D Pekka] [ei [T{V} [[D heidän] Ainf{V}]]]] + malla = -98]
				[ei [T{V} [[D heidän] Ainf{V}]]] + malla = -194]
				[T{V} [[D heidän] Ainf{V}]] + malla = -94]
				[[D heidän] Ainf{V}] + malla = 4]
				Ainf{V} + malla = 5]
		Ranking completed:
			1. [Ainf{V}; malla]
			2. [[[D heidän] Ainf{V}]; malla]
			3. [[T{V} [[D heidän] Ainf{V}]]; malla]
			4. [[[D Pekka] [ei [T{V} [[D heidän] Ainf{V}]]]]; malla]
			5. [[ei [T{V} [[D heidän] Ainf{V}]]]; malla]
		Exploring solution number (1) =[Ainf{V} malla]
			Ainf{V} cannot be opened.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{V} malla]]]]]

13.

		Consume "kuorsaa"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{V} malla]]]]] + kuorsaa
			Filtering out impossible merge sites...
			Sink "kuorsaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*kuorsaa]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{V} malla{V}]]]]]

14.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} [[D heidän] [Ainf{V} malla{V}]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{V} [[D heidän] [Ainf{V} malla{V}]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf{V} malla{V}]]]]]]
				Extracted head "nukku" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [nukku malla{V}]]]]]]]
				Extracted head "kuorsaa" from malla and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf [nukku [malla kuorsaa]]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:224 [ei [<DP>:224 [T [käske [[D heidän] [Ainf [nukku [malla kuorsaa]]]]]]]]]
				[D heidän] failed to tail [A/HEAD][CAT:INF]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped: [<D Pekka>:224 [ei [<DP>:224 [T [käske [<D heidän>:225 [Ainf [<DP>:225 [nukku [malla kuorsaa]]]]]]]]]]
				<malla kuorsaa> was made an adjunct.
				= [<D Pekka> [ei [<D Pekka> [T [käske [<D heidän> [Ainf [<D heidän> [nukku <malla kuorsaa>]]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:224 from memory buffer into Spec of käske
			= [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [nukku <malla kuorsaa>]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:224 [ei [<DP>:224 [T [<DP>:224 [käske [<D heidän>:225 [Ainf [<DP>:225 [nukku <malla kuorsaa>]]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 14/159 operations) <------------------------------------
		Solution:
		[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [nukku <malla kuorsaa>]]]]]]]]]]
		Grammar: [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 [nukku <malla kuorsaa>]]]]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [__:1 [T [__:1 [V [DP:2 [INF [__:2 [V ADVP]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:Neg/fin', '-COMP:T', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
kuorsaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:snore', 'PF:kuorsaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
nukku:['!SPEC:D', '-COMP:N', '-COMP:Neg/fin', '-COMP:T', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sleep', 'PF:nukku', 'SPEC:ADV', 'SPEC:P', 'UNERG']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
kuorsaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:snore', 'PF:kuorsaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
käske: [V, T, Neg/fin]
D: [D, V, T, Neg/fin]
heidän: [N, D, V, T, Neg/fin]
Ainf: [INF, V, T, Neg/fin]
(D): [D, INF, V, T, Neg/fin]
(N): [N, D, INF, V, T, Neg/fin]
nukku: [V, INF, V, T, Neg/fin]
malla: [ADV, V, INF, V, T, Neg/fin]
kuorsaa: [V, ADV, V, INF, V, T, Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 23
['Pekka', 'ei', 'kaskenyt', 'heidan', 'hairita', 'Merjaa', 'kuorsaamalla']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.
		Next word contains multiple morphemes ['$T', 'kaske-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "käske"

		[[D Pekka] [ei T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] [ei T{V}]]

7.
		Next word contains multiple morphemes ['$gen', '$D', 'heidan-']
		Storing inflectional feature ['-', '-FLOAT', 'LANG:FI', 'TAIL:CAT:INF,A/HEAD'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{V}]]

8.

		Adding inflectional features {'-', '-FLOAT', 'LANG:FI', 'TAIL:CAT:INF,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD']

		Consume "D"

		[[D Pekka] [ei T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T käske]] as left branch because it constitutes illicit structure.
				Avoid TP as SPEC for D due to unselective SPEC feature.
				Avoid [T{V} D] due to local agreement failure.
				Prioritize [T{V} D] due to complement selection.
				[[D Pekka] [ei T{V}]] + D = -98]
				[ei T{V}] + D = -194]
				T{V} + D = -38]
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] [ei T{V}]]; D]
			3. [[ei T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} D]]]

9.

		Consume "heidän"

		[[D Pekka] [ei [T{V} D]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [ei [T{V} D{N}]]]

10.
		Next word contains multiple morphemes ['$-ta', '$v', 'hairitse-']

		Consume "Ainf"

		[[D Pekka] [ei [T{V} D{N}]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [käske <D heidän>]]]]]] Ainf] due to bad left branch.
				Reject [[ei [T [käske <D heidän>]]] Ainf] due to bad left branch.
				Reject [[T [käske [D heidän]]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]

11.

		Consume "v"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]]

12.

		Consume "hairitsee"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]] + hairitsee
			Filtering out impossible merge sites...
			Sink "hairitsee" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*hairitsee]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]

13.
		Next word contains multiple morphemes ['$par', '$D', 'Merjaa-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]

14.

		Adding inflectional features {'TAIL:!COMP:*,-PHI', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v hairitsee]]]]]]]]]] D] due to bad left branch.
				Reject [[ei [T [käske [<D heidän> [Ainf [<D heidän> [v hairitsee]]]]]]] D] due to bad left branch.
				Reject [[T [käske [<D heidän> [Ainf [<D heidän> [v hairitsee]]]]]] D] due to bad left branch.
				Reject [[<D heidän> [Ainf [<D heidän> [v hairitsee]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D]]]]]

15.

		Consume "Merjaa"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D]]]]] + Merjaa
			Filtering out impossible merge sites...
			Sink "Merjaa" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Merjaa]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]]

16.
		Next word contains multiple morphemes ['$malla', 'kuorsaa_pro-']

		Consume "malla"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla.
				Avoid Neg/finP as SPEC, malla.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T [käske [<D heidän> [Ainf [<D heidän> [v [hairitsee [D Merjaa]]]]]]]]] as left branch because it constitutes illicit structure.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T [käske [<D heidän> [Ainf [<D heidän> [v [hairitsee [D Merjaa]]]]]]]] as left branch because it constitutes illicit structure.
				An EPP-head "Ainf" lacks specifier D that it requires.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [hairitsee [D Merjaa]]]] as left branch because it constitutes illicit structure.
				[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]] + malla = -98]
				[ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]] + malla = -194]
				[T{V} [[D heidän] [Ainf{v,V} D{N}]]] + malla = -94]
				[[D heidän] [Ainf{v,V} D{N}]] + malla = 4]
				[Ainf{v,V} D{N}] + malla = -90]
				D{N} + malla = 6]
		Ranking completed:
			1. [D{N}; malla]
			2. [[[D heidän] [Ainf{v,V} D{N}]]; malla]
			3. [[Ainf{v,V} D{N}]; malla]
			4. [[T{V} [[D heidän] [Ainf{v,V} D{N}]]]; malla]
			5. [[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]]; malla]
			6. [[ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]; malla]
		Exploring solution number (1) =[D{N} malla]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla]]]]]]

17.

		Consume "kuorsaa"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla]]]]]] + kuorsaa
			Filtering out impossible merge sites...
			Sink "kuorsaa" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*kuorsaa]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla{V}]]]]]]

18.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla{V}]]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D Merjaa] malla{V}]]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf{v,V} [[D Merjaa] malla{V}]]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v{V} [[D Merjaa] malla{V}]]]]]]]]
				Extracted head "hairitsee" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [hairitsee [[D Merjaa] malla{V}]]]]]]]]]
				Extracted head "kuorsaa" from malla and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [hairitsee [[D Merjaa] [malla kuorsaa]]]]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:251 [ei [<DP>:251 [T [käske [[D heidän] [Ainf [v [hairitsee [[D Merjaa] [malla kuorsaa]]]]]]]]]]]
				[D heidän] failed to tail [A/HEAD][CAT:INF]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped: [<D Pekka>:251 [ei [<DP>:251 [T [käske [<D heidän>:252 [Ainf [<DP>:252 [v [hairitsee [[D Merjaa] [malla kuorsaa]]]]]]]]]]]]
				<malla kuorsaa> was made an adjunct.
				[D Merjaa] cannot be made an adjunct because its sister is an adjunct.
				Floater [D Merjaa] dropped: [<D Pekka>:251 [ei [<DP>:251 [T [käske [<D heidän>:252 [Ainf [<DP>:252 [v [(DP):253 [hairitsee [[D Merjaa]:253 <malla kuorsaa>]]]]]]]]]]]]
				= [<D Pekka> [ei [<D Pekka> [T [käske [<D heidän> [Ainf [<D heidän> [v [[D Merjaa] [hairitsee [[D Merjaa] <malla kuorsaa>]]]]]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:251 from memory buffer into Spec of käske
			= [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [[D Merjaa] [hairitsee [[D Merjaa] <malla kuorsaa>]]]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:251 [ei [<DP>:251 [T [<DP>:251 [käske [<D heidän>:252 [Ainf [<DP>:252 [v [(DP):253 [hairitsee [[D Merjaa]:253 <malla kuorsaa>]]]]]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 18/199 operations) <------------------------------------
		Solution:
		[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [[D Merjaa] [hairitsee [[D Merjaa] <malla kuorsaa>]]]]]]]]]]]]]
		Grammar: [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 [v [(DP):3 [hairitsee [[D Merjaa]:3 <malla kuorsaa>]]]]]]]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [__:1 [T [__:1 [V [DP:2 [INF [__:2 [v [__:3 [V [[D N]:3 ADVP]]]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
hairitsee:['-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:disturb', 'PF:hairitsee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
kuorsaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:snore', 'PF:kuorsaa', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI', 'null']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A', 'null']
hairitsee:['-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:disturb', 'PF:hairitsee', 'SPEC:ADV', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merjaa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merjaa', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
kuorsaa:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:snore', 'PF:kuorsaa', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
käske: [V, T, Neg/fin]
D: [D, V, T, Neg/fin]
heidän: [N, D, V, T, Neg/fin]
Ainf: [INF, V, T, Neg/fin]
(D): [D, INF, V, T, Neg/fin]
(N): [N, D, INF, V, T, Neg/fin]
v: [v, INF, V, T, Neg/fin]
(D): [D, v, INF, V, T, Neg/fin]
(N): [N, D, v, INF, V, T, Neg/fin]
hairitsee: [V, v, INF, V, T, Neg/fin]
D: [D, V, v, INF, V, T, Neg/fin]
Merjaa: [N, D, V, v, INF, V, T, Neg/fin]
malla: [ADV, V, v, INF, V, T, Neg/fin]
kuorsaa: [V, ADV, V, v, INF, V, T, Neg/fin]

			Checking if the sentence is ambiguous...


\========================================================================
# 24
['Pekka', 'ei', 'kaskenyt', 'heidan', 'antaa', 'kirjaa', 'Merjalle', 'heittamalla']


			=None

1.
		Next word contains multiple morphemes ['$nom', '$D', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:CAT:FIN,A/HEAD'] into working memory.

		Consume "$D"

			=None

2.

		Adding inflectional features {'TAIL:CAT:FIN,A/HEAD', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD']
			=D

3.

		Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*Pekka]
			=D{N}

4.

		Consume "ei"

		D{N} + ei
			Filtering out impossible merge sites...
		Exploring solution number (1) =[D{N} ei]
			D was opened.
			=[[D Pekka] ei]

5.
		Next word contains multiple morphemes ['$T', 'kaske-']

		Consume "T"

		[[D Pekka] ei] + T
			Filtering out impossible merge sites...
				Reject [[[D Pekka] ei] T] due to bad left branch.
		Exploring solution number (1) =[ei T]
			Reconstructing head movement for ei.
			Dropping floaters...
				= ei
			Dropping A-/A-bar movement.
				ei (ei) is missing complement T
				An EPP-head "ei" lacks specifier but needs one.
				Extraposition will be tried on ei.
			=[[D Pekka] [ei T]]

6.

		Consume "käske"

		[[D Pekka] [ei T]] + käske
			Filtering out impossible merge sites...
			Sink "käske" into T because they are inside the same phonological word.
		Exploring solution number (1) =[T*käske]
			=[[D Pekka] [ei T{V}]]

7.
		Next word contains multiple morphemes ['$gen', '$D', 'heidan-']
		Storing inflectional feature ['-', '-FLOAT', 'LANG:FI', 'TAIL:CAT:INF,A/HEAD'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei T{V}]]

8.

		Adding inflectional features {'-', '-FLOAT', 'LANG:FI', 'TAIL:CAT:INF,A/HEAD'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD']

		Consume "D"

		[[D Pekka] [ei T{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				Avoid Neg/finP as SPEC for D due to unselective SPEC feature.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T käske]] as left branch because it constitutes illicit structure.
				Avoid TP as SPEC for D due to unselective SPEC feature.
				Avoid [T{V} D] due to local agreement failure.
				Prioritize [T{V} D] due to complement selection.
				[[D Pekka] [ei T{V}]] + D = -98]
				[ei T{V}] + D = -194]
				T{V} + D = -38]
		Ranking completed:
			1. [T{V}; D]
			2. [[[D Pekka] [ei T{V}]]; D]
			3. [[ei T{V}]; D]
		Exploring solution number (1) =[T{V} D]
			T{V} cannot be opened.
			=[[D Pekka] [ei [T{V} D]]]

9.

		Consume "heidän"

		[[D Pekka] [ei [T{V} D]]] + heidän
			Filtering out impossible merge sites...
			Sink "heidän" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*heidän]
			=[[D Pekka] [ei [T{V} D{N}]]]

10.
		Next word contains multiple morphemes ['$-ta', '$v', 'anta-']

		Consume "Ainf"

		[[D Pekka] [ei [T{V} D{N}]]] + Ainf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [käske <D heidän>]]]]]] Ainf] due to bad left branch.
				Reject [[ei [T [käske <D heidän>]]] Ainf] due to bad left branch.
				Reject [[T [käske [D heidän]]] Ainf] due to bad left branch.
		Exploring solution number (1) =[D{N} Ainf]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]]

11.

		Consume "v"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into Ainf because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf*v]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]]

12.

		Consume "antaa"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{v}]]]] + antaa
			Filtering out impossible merge sites...
			Sink "antaa" into Ainf{v} because they are inside the same phonological word.
		Exploring solution number (1) =[Ainf{v}*antaa]
			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]

13.
		Next word contains multiple morphemes ['$par', '$D', 'kirja-']
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:!COMP:*,-PHI'] into working memory.

		Consume "$D"

			=[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]]

14.

		Adding inflectional features {'TAIL:!COMP:*,-PHI', '-', 'LANG:FI'} to D
		= ['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']

		Consume "D"

		[[D Pekka] [ei [T{V} [[D heidän] Ainf{v,V}]]]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v antaa]]]]]]]]]] D] due to bad left branch.
				Reject [[ei [T [käske [<D heidän> [Ainf [<D heidän> [v antaa]]]]]]] D] due to bad left branch.
				Reject [[T [käske [<D heidän> [Ainf [<D heidän> [v antaa]]]]]] D] due to bad left branch.
				Reject [[<D heidän> [Ainf [<D heidän> [v antaa]]]] D] due to bad left branch.
		Exploring solution number (1) =[Ainf{v,V} D]
			Ainf{v,V} cannot be opened.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D]]]]]

15.

		Consume "kirja"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D]]]]] + kirja
			Filtering out impossible merge sites...
			Sink "kirja" into D because they are inside the same phonological word.
		Exploring solution number (1) =[D*kirja]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]]

16.
		Next word contains multiple morphemes ['$lle', '$D', 'Merja-']

		Consume "P(lle)"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]] + P(lle)
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, P(lle).
				Avoid Neg/finP as SPEC, P(lle).
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid [[T{V} [[D heidän] [Ainf{v,V} D{N}]]], P(lle)] because the operation breaks up an existing selectional dependency.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [D kirja]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid INFP as SPEC, P(lle).
				Avoid INFP as SPEC, P(lle).
				An EPP-head "Ainf" lacks specifier D that it requires.
				An EPP-head "v" lacks specifier D that it requires.
				Avoid [Ainf [v [antaa [D kirja]]]] as left branch because it constitutes illicit structure.
				Avoid [D{N},P(lle)] solution due to semantic mismatch.
				Avoid D{N} because it could break words.
			D was opened.
				Prioritize D{N} because all solutions were negative.
				[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]] + P(lle) = -98]
				[ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]] + P(lle) = -194]
				[T{V} [[D heidän] [Ainf{v,V} D{N}]]] + P(lle) = -191]
				[[D heidän] [Ainf{v,V} D{N}]] + P(lle) = -92]
				[Ainf{v,V} D{N}] + P(lle) = -185]
				D{N} + P(lle) = 18]
		Ranking completed:
			1. [D{N}; P(lle)]
			2. [[[D heidän] [Ainf{v,V} D{N}]]; P(lle)]
			3. [[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]]; P(lle)]
			4. [[Ainf{v,V} D{N}]; P(lle)]
			5. [[T{V} [[D heidän] [Ainf{v,V} D{N}]]]; P(lle)]
			6. [[ei [T{V} [[D heidän] [Ainf{v,V} D{N}]]]]; P(lle)]
		Exploring solution number (1) =[D{N} P(lle)]
			D was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]]]]

17.

		Consume "D"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle)]]]]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P(lle) because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle)*D]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]]]]

18.

		Consume "Merja-"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D}]]]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into P(lle){D} because they are inside the same phonological word.
		Exploring solution number (1) =[P(lle){D}*Merja-]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]]

19.
		Next word contains multiple morphemes ['$malla', 'heitta_pro-']

		Consume "malla"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]] + malla
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid Neg/finP as SPEC, malla.
				Avoid Neg/finP as SPEC, malla.
				An EPP-head "ei" lacks specifier but needs one.
				An EPP-head "käske" lacks specifier D that it requires.
				Avoid [ei [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] <P(lle) [D Merja-]>]]]]]]]]] as left branch because it constitutes illicit structure.
				An EPP-head "käske" lacks specifier D that it requires.
				[D kirja]" has no thematic role
				Avoid [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]]]] as left branch because it constitutes illicit structure.
				[D kirja]" has no thematic role
				Avoid [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]]]] as left branch because it constitutes illicit structure.
				An EPP-head "Ainf" lacks specifier D that it requires.
				An EPP-head "v" lacks specifier D that it requires.
				[D kirja]" has no thematic role
				Avoid [Ainf [v [antaa [[D kirja] [P(lle) [D Merja-]]]]]] as left branch because it constitutes illicit structure.
				[D kirja]" has no thematic role
				Avoid [[D kirja] [P(lle) [D Merja-]]] as left branch because it constitutes illicit structure.
				Avoid [P(lle){D,N} malla] due to complement selection.
			P(lle) was opened.
				Prioritize P(lle){D,N} because all solutions were negative.
				[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]] + malla = -98]
				[ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]] + malla = -194]
				[T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]] + malla = -94]
				[[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]] + malla = -92]
				[Ainf{v,V} [[D kirja] P(lle){D,N}]] + malla = -90]
				[[D kirja] P(lle){D,N}] + malla = -88]
				P(lle){D,N} + malla = 114]
		Ranking completed:
			1. [P(lle){D,N}; malla]
			2. [[[D kirja] P(lle){D,N}]; malla]
			3. [[Ainf{v,V} [[D kirja] P(lle){D,N}]]; malla]
			4. [[[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]; malla]
			5. [[T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]; malla]
			6. [[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]]; malla]
			7. [[ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] P(lle){D,N}]]]]]; malla]
		Exploring solution number (1) =[P(lle){D,N} malla]
			P(lle) was opened.
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]]]]]

20.

		Consume "heitta"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla]]]]]]] + heitta
			Filtering out impossible merge sites...
			Sink "heitta" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*heitta]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]]

21.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]] (1.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf{v,V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v{V} [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] [[P(lle) [D Merja-]] malla{V}]]]]]]]]]]
				Extracted head "heitta" from malla and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] [[P(lle) [D Merja-]] [malla heitta]]]]]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:291 [ei [<DP>:291 [T [käske [[D heidän] [Ainf [v [antaa [[D kirja] [[P(lle) [D Merja-]] [malla heitta]]]]]]]]]]]]
				[D heidän] failed to tail [A/HEAD][CAT:INF]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped: [<D Pekka>:291 [ei [<DP>:291 [T [käske [<D heidän>:292 [Ainf [<DP>:292 [v [antaa [[D kirja] [[P(lle) [D Merja-]] [malla heitta]]]]]]]]]]]]]
				<malla heitta> was made an adjunct.
				= [<D Pekka> [ei [<D Pekka> [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla heitta>]]]]]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:291 from memory buffer into Spec of käske
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D Pekka>:291 [ei [<DP>:291 [T [<DP>:291 [käske [<D heidän>:292 [Ainf [<DP>:292 [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla heitta>]]]]]]]]]]]]].
			= [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[D kirja] [[P(lle) [D Merja-]] <malla heitta>]]]]]]]]]]]]]
		Checking LF-interface conditions.
				[D kirja]" has no thematic role
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMLANG:FI', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
heitta:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:throw', 'PF:heitta', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
käske: [V, T, Neg/fin]
D: [D, V, T, Neg/fin]
heidän: [N, D, V, T, Neg/fin]
Ainf: [INF, V, T, Neg/fin]
(D): [D, INF, V, T, Neg/fin]
(N): [N, D, INF, V, T, Neg/fin]
v: [v, INF, V, T, Neg/fin]
antaa: [V, v, INF, V, T, Neg/fin]
D: [D, V, v, INF, V, T, Neg/fin]
kirja: [N, D, V, v, INF, V, T, Neg/fin]
P(lle): [P, V, v, INF, V, T, Neg/fin]
D: [D, P, V, v, INF, V, T, Neg/fin]
Merja-: [N, D, P, V, v, INF, V, T, Neg/fin]
malla: [ADV, V, v, INF, V, T, Neg/fin]
heitta: [V, ADV, V, v, INF, V, T, Neg/fin]


		Trying to find other solutions...
		I have now explored all solutions for "heitta_pro-".
		Going one step backwards and taking another solution from previous ranking list........
		.
		.
		.
		Exploring solution number (2) =[[[D kirja] P(lle){D,N}] malla]
			Reconstructing head movement for [[D kirja] P(lle){D,N}].
				Extracted head "D{N}" from P(lle) and created [[D kirja] [P(lle) D{N}]]
			Reconstructing head movement for D{N}.
				Extracted head "Merja-" from D and created [[D kirja] [P(lle) [D Merja-]]]
			Dropping floaters...
				[D kirja] failed to tail [!COMP:*][-PHI]
				= [[D kirja] [P(lle) [D Merja-]]]
			Dropping A-/A-bar movement.
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla]]]]]]

22.

		Consume "heitta"

		[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla]]]]]] + heitta
			Filtering out impossible merge sites...
			Sink "heitta" into malla because they are inside the same phonological word.
		Exploring solution number (1) =[malla*heitta]
			=[[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]]]]

23.
	>>>	Trying candidate parse [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]]]] (2.)
		Reconstructing...
			Reconstructing head movement for [[D Pekka] [ei [T{V} [[D heidän] [Ainf{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]]]].
				Extracted head "käske" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf{v,V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]]]]]
				Extracted head "v{V}" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v{V} [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]]]]]]
				Extracted head "antaa" and reconstructed it = [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa [[[D kirja] [P(lle) [D Merja-]]] malla{V}]]]]]]]]]
				Extracted head "heitta" from malla and created [[D Pekka] [ei [T [käske [[D heidän] [Ainf [v [antaa [[[D kirja] [P(lle) [D Merja-]]] [malla heitta]]]]]]]]]]
			Dropping floaters...
				[D Pekka] failed to tail [A/HEAD][CAT:FIN]
				<D Pekka> was made an adjunct.
				Floater <D Pekka> dropped: [<D Pekka>:294 [ei [<DP>:294 [T [käske [[D heidän] [Ainf [v [antaa [[[D kirja] [P(lle) [D Merja-]]] [malla heitta]]]]]]]]]]]
				[D heidän] failed to tail [A/HEAD][CAT:INF]
				<D heidän> was made an adjunct.
				Floater <D heidän> dropped: [<D Pekka>:294 [ei [<DP>:294 [T [käske [<D heidän>:295 [Ainf [<DP>:295 [v [antaa [[[D kirja] [P(lle) [D Merja-]]] [malla heitta]]]]]]]]]]]]
				<malla heitta> was made an adjunct.
				= [<D Pekka> [ei [<D Pekka> [T [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[[D kirja] [P(lle) [D Merja-]]] <malla heitta>]]]]]]]]]]]
			Dropping A-/A-bar movement.
				Moving "____" into memory buffer from SPEC of "T".
				Memory buffer: [[D N]]
				Dropping constituent <DP>:294 from memory buffer into Spec of käske
				Moving "D kirja " into memory buffer from SPEC of "P(lle)".
				Memory buffer: [[D N]]
				[D kirja]" has no thematic role
				Extraposition will be tried on [<D Pekka>:294 [ei [<DP>:294 [T [<DP>:294 [käske [<D heidän>:295 [Ainf [<DP>:295 [v [antaa [[[D kirja] [P(lle) [D Merja-]]] <malla heitta>]]]]]]]]]]]].
				<P(lle) [D Merja-]> was made adjunct by an extraposition rule.
			= [<D Pekka> [ei [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[[D kirja] <P(lle) [D Merja-]>] <malla heitta>]]]]]]]]]]]]
		Checking LF-interface conditions.
			Trying to transfer [<D Pekka>:294 [ei [<DP>:294 [T [<DP>:294 [käske [<D heidän>:295 [Ainf [<DP>:295 [v [antaa [[[D kirja] <P(lle) [D Merja-]>] <malla heitta>]]]]]]]]]]]] into LF...
				Transfer to LF successful.
!--->		Tests passed (with 23/320 operations) <------------------------------------
		Solution:
		[<D Pekka> [ei [<D Pekka> [T [<D Pekka> [käske [<D heidän> [Ainf [<D heidän> [v [antaa [[[D kirja] <P(lle) [D Merja-]>] <malla heitta>]]]]]]]]]]]]
		Grammar: [<D Pekka>:1 [ei [<DP>:1 [T [<DP>:1 [käske [<D heidän>:2 [Ainf [<DP>:2 [v [antaa [[[D kirja] <P(lle) [D Merja-]>] <malla heitta>]]]]]]]]]]]]
		Spellout Neg/finP = [DP:1 [Neg/fin [__:1 [T [__:1 [V [DP:2 [INF [__:2 [v [V [[[D N] PP] ADVP]]]]]]]]]]]]
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMLANG:FI', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
heitta:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:throw', 'PF:heitta', 'SPEC:ADV', 'SPEC:P']

D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
ei:['!COMP:T', '!SPEC:*', '%SPEC:INF', '+PHI', '-SPEC:T', '-SPEC:T/fin', 'A/HEAD', 'CAT:FIN', 'CAT:FIN/NEG/Neg/fin', 'CAT:NEG', 'CAT:Neg/fin', 'COMP:T', 'LANG:FI', 'LF:not', 'PF:ei']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
T:['!COMP:*', '!PROBE:CAT:V', '+PHI', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'CAT:T', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:FIN,A/HEAD', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
käske:['!SPEC:D', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:A/inf', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:käske', 'SPEC:ADV', 'SPEC:P', 'UNERG']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A']
Ainf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '+PHI', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'A/HEAD', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:to', 'PF:Ainf', 'PHI:0', 'SPEC:*', 'SPEC:D']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:CAT:INF,A/HEAD', 'null']
heidän:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:theirs', 'PF:heidän', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:D', '!PROBE:CAT:V', '!SPEC:D', '-PHI', '-SPEC:N', 'A/HEAD', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v']
antaa:['-COMLANG:FI', '-COMP:FIN', '-COMP:N', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:give', 'PF:antaa', 'SPEC:ADV', 'SPEC:D', 'SPEC:P']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'TAIL:!COMP:*,-PHI']
kirja:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:book', 'PF:kirja', 'SPEC:A']
P(lle):['!COMP:*', '+SEM:directional', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', 'A/HEAD', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:for', 'PF:P(lle)', 'SPEC:*', 'TAIL:CAT:V']
D:['!COMP:*', '!PROBE:CAT:N', '+PHI', '-COMP:T/fin', '-COMP:uR', '-SPEC:*', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Merja', 'PF:Merja-', 'SPEC:A']
malla:['!COMP:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'A/HEAD', 'CAT:ADV', 'LANG:FI', 'LF:by', 'OPEN', 'PF:malla', 'SPEC:*', 'TAIL:CAT:V']
heitta:['-COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'A/HEAD', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:throw', 'PF:heitta', 'SPEC:ADV', 'SPEC:P']

D: [D]
Pekka: [N, D]
ei: [Neg/fin]
(D): [D, Neg/fin]
(N): [N, D, Neg/fin]
T: [T, Neg/fin]
(D): [D, T, Neg/fin]
(N): [N, D, T, Neg/fin]
käske: [V, T, Neg/fin]
D: [D, V, T, Neg/fin]
heidän: [N, D, V, T, Neg/fin]
Ainf: [INF, V, T, Neg/fin]
(D): [D, INF, V, T, Neg/fin]
(N): [N, D, INF, V, T, Neg/fin]
v: [v, INF, V, T, Neg/fin]
antaa: [V, v, INF, V, T, Neg/fin]
D: [D, V, v, INF, V, T, Neg/fin]
kirja: [N, D, V, v, INF, V, T, Neg/fin]
P(lle): [P, V, v, INF, V, T, Neg/fin]
D: [D, P, V, v, INF, V, T, Neg/fin]
Merja-: [N, D, P, V, v, INF, V, T, Neg/fin]
malla: [ADV, V, v, INF, V, T, Neg/fin]
heitta: [V, ADV, V, v, INF, V, T, Neg/fin]

			Checking if the sentence is ambiguous...
