dummy          {'LANG:EN', 'dummy'}
a               {'-SPEC:Neg/fin', 'LANG:IT', 'P', '-ARG', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', 'PF:a', '-COMP:T', '-SPEC:C', '-SPEC:*', 'TAIL:V', '-VAL', '-SPEC:INF', '-SPEC:N', '-SPEC:V', '-COMP:uWH', '-SPEC:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:A', 'LF:to', '-SPEC:P', '-SPEC:iR', '-COMP:ADV', 'COMP:ARE/inf', '-SPEC:T/fin', '-SPEC:T/prt', 'adjoinable', '-SPEC:v', 'COMP:φ', '!COMP:*'}
a_D             {'COMP:N', '-SPEC:Neg/fin', '-SPEC:P', 'φ', '-ARG', '-SPEC:T/fin', 'LF:D', '-COMP:uR', '!PROBE:N', '-SPEC:C', '-EDGE:*', 'LANG:EN', 'adjoinable', '-SPEC:INF', '-SPEC:V', 'COMP:n', 'COMP:φ', '-SPEC:MA/lla', '!COMP:*', 'PF:D', '-COMP:P', 'D', '-COMP:T/fin'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'ASP', 'PHI:PER:_', 'CLASS:TR', '-COMP:V', '-COMP:Neg', '-COMP:v', 'LF:admire', '-SPEC:FORCE', '-SPEC:Neg', '-SPEC:T/fin', 'COMP:P', 'PF:admire', 'PHI:GEN:_', 'SPEC:P', 'LANG:EN', '-COMP:N', 'V', '-VAL', 'COMP:D', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:P', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:T/fin', 'SPEC:TO/inf'}
admire*         ['LANG:EN']
T/fin*          {'NO_NUMBER', 'PHI:PER:_', '-adjoinable', '-COMP:INF', 'FIN', 'LF:T', '-SPEC:TO/inf', 'COMP:V', '-SPEC:Neg', '-SPEC:T/fin', 'T/fin', 'SPEC:C/fin', 'PHI:GEN:_', '-SPEC:T/prt', '-SPEC:C', 'LANG:EN', 'SPEC:FORCE', '-SPEC:v', '-VAL', 'T', '!PROBE:V', '-SPEC:N', 'NO_DET', '-SPEC:V', 'COMP:v', '!SPEC:*', '!COMP:*', 'ARG', 'SPEC:φ', '-COMP:T/fin', "PF:T/fin'", 'SPEC:TO/inf', 'COMP:T/prt'}
v*              {'NO_NUMBER', 'LANG:EN', 'v', 'ASP', 'PHI:PER:_', 'LF:v', '-VAL', '!PROBE:V', '-SPEC:N', 'NO_DET', 'COMP:V', '!COMP:*', 'ARG', 'SPEC:φ', 'PHI:GEN:_', 'PF:v'}
admire**        ['LANG:EN']
T/fin**         {'LF:T', '-SPEC:TO/inf', "PF:T/fin''", '-SPEC:C', 'LANG:EN', 'SPEC:FORCE', '-VAL', '!PROBE:V', '-SPEC:N', 'NO_DET', '-SPEC:V', '!SPEC:*', 'ARG', '-COMP:T/fin', 'SPEC:TO/inf', 'COMP:T/prt', 'NO_NUMBER', '-adjoinable', 'FIN', 'COMP:V', '-SPEC:Neg', '-SPEC:T/fin', 'T/fin', 'SPEC:C/fin', 'PHI:GEN:_', '-SPEC:T/prt', '-SPEC:v', 'T', 'COMP:v', '!COMP:*', '-COMP:INF', 'NO_PERSON', 'SPEC:φ', 'PHI:PER:3'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'ASP', 'PHI:PER:_', '-COMP:V', 'PF:adora', 'LANG:IT', '-COMP:v', 'LF:admire', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'V', '-VAL', 'COMP:φ', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:N', 'SPEC:TO/inf'}
antaa           ['LANG:FI']
anta-           {'CLASS:DITR', 'ASP', 'PHI:PER:_', 'LANG:FI', '-COMP:V', '-COMP:FIN', '+SEM:directional', 'LF:give', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'ASP:BOUNDED', 'SPEC:P', 'V', '-VAL', 'PF:antaa', 'COMP:φ', 'PHI:DET:_', '!COMP:*', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'ASP', 'PHI:PER:_', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'PF:ask', 'LANG:EN', 'SPEC:P', 'V', 'SEM:internal', '-VAL', 'COMP:φ', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'LF:ask', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimen_gen     ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-COMP:VA/inf', 'LF:key', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', '-SPEC:INF', 'PF:avain', '-SPEC:V', '-SPEC:N', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', 'LANG:FI', '-COMP:V', '-SPEC:P', '-SEM:directional', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'LF:car', 'COMP:T/prt', '-COMP:A', 'LANG:FI', '-COMP:V', '-SPEC:P', '-SEM:directional', '-SPEC:T/fin', 'COMP:P', 'PF:auto', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
bank            {'-COMP:VA/inf', 'LF:bank_inst', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'LANG:EN', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', '-COMP:V', '-SPEC:P', 'FREQ:1', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', 'PF:bank1', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
bank            {'-COMP:VA/inf', '-COMP:v', 'LF:bank_river', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', 'FREQ:2', '-SPEC:uWH', 'LANG:EN', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', 'PF:bank2', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
barn            {'COMP:uR', '-COMP:A', '-COMP:V', '-COMP:AUX', '-SPEC:P', '-COMP:VA/inf', '-COMP:v', 'LF:barn', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:T/fin', 'COMP:P', 'COMP:D/rel', 'COMP:R/D', '-SPEC:uWH', 'LANG:EN', '-COMP:N', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', '-COMP:D', '-SPEC:ADV', 'COMP:R', 'PF:barn', 'N', 'COMP:T/prt'}
city            {'COMP:uR', '-COMP:A', '-COMP:V', '-COMP:AUX', '-SPEC:P', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', 'LF:city', 'PF:city', '-SPEC:FORCE', 'SPEC:A', '-SPEC:T/fin', 'COMP:P', 'COMP:D/rel', 'COMP:R/D', '-SPEC:uWH', 'LANG:EN', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', '-COMP:D', '-SPEC:ADV', 'COMP:R', '-COMP:N', 'N', 'COMP:T/prt'}
che             ['LANG:IT']
che-            {'LANG:IT', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'PF:che', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'PHI_N', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', 'LF:who', 'N', '-COMP:AUX', '-COMP:N', 'COMP:T/prt', '-COMP:A', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
chiamato        ['LANG:IT']
chiamata-       {'ASP', 'PHI:PER:_', '-COMP:V', 'LANG:IT', 'PF:chiamato', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'V', '-VAL', 'PHI:DET:_', 'SPEC:ADV', 'LF:called', 'ARG', 'PHI:NUM:_', '-COMP:N', 'SPEC:TO/inf'}
claims          ['LANG:EN']
claim-          {'ASP', 'PHI:PER:_', 'LF:claim', '-COMP:V', '-COMP:φ', 'PF:claim', '-COMP:v', '-SPEC:FORCE', 'COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'LANG:EN', 'V', '-VAL', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
danno           {'COMP:uR', '-COMP:A', '-COMP:V', '-COMP:AUX', 'LANG:IT', '-SPEC:P', '-COMP:VA/inf', 'PF:danno', '-COMP:v', '-SPEC:C/fin', 'LF:damage', '-SPEC:FORCE', 'SPEC:A', '-SPEC:T/fin', 'COMP:P', 'COMP:D/rel', 'COMP:R/D', '-SPEC:uWH', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', '-COMP:D', '-SPEC:ADV', 'COMP:R', '-COMP:N', 'N', 'COMP:T/prt'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'ASP', 'PHI:PER:_', '-COMP:V', 'LF:detest', 'LANG:IT', 'COMP:ARE/inf', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'V', 'SEM:internal', '-VAL', 'COMP:φ', 'PHI:DET:_', 'PF:detest', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:N', 'SPEC:TO/inf'}
devono          ['LANG:EN']
deva-           {'PHI:PER:_', '-COMP:V', 'LANG:IT', 'COMP:ARE/inf', '-COMP:v', 'LF:must', '-ASP', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'V', 'SEM:internal', '-VAL', 'PHI:DET:_', 'PF:deva', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
di              {'PHI:PER:_', '-adjoinable', 'LANG:FI', '-COMP:A', 'PF:di', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:iR', '-COMP:ADV', 'P', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', '-SPEC:T/fin', 'SPEC:*', 'PHI:GEN:_', '-COMP:T', '-SPEC:C', '-SPEC:T/prt', '-SPEC:v', '-VAL', '-SPEC:INF', '-SPEC:N', '-SPEC:V', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:uWH', 'LF:of', 'PHI:NUM:_', 'ARG', '-SPEC:ADV', '-COMP:N'}
does            {'PHI:PER:_', 'PHI:GEN:F', '-SPEC:TO/inf', '-SPEC:C', 'LANG:EN', 'SPEC:FORCE', '!PROBE:V', '-SPEC:N', '-SPEC:V', '!SPEC:*', 'VAL', 'PHI:DET:_', 'PHI:NUM:_', 'ARG', '-COMP:T/fin', 'PHI:GEN:M', 'PHI:NUM:SG', 'SPEC:TO/inf', 'COMP:T/prt', 'PF:does', '-adjoinable', 'LF:does', 'FIN', 'COMP:Neg', 'COMP:V', '-SPEC:Neg', '-SPEC:T/fin', 'T/fin', 'SPEC:C/fin', 'PHI:GEN:_', '-SPEC:T/prt', 'SPEC:*', '-SPEC:v', 'T', 'COMP:v', '!COMP:*', '-COMP:INF', 'SPEC:φ', 'PHI:PER:3'}
does_C          ['LANG:EN']
does-           {'PHI:PER:_', 'PHI:GEN:F', '-SPEC:TO/inf', '-SPEC:C', 'LANG:EN', 'SPEC:FORCE', '!PROBE:V', '-SPEC:N', '-SPEC:V', '!SPEC:*', 'VAL', 'PHI:DET:_', 'PHI:NUM:_', 'ARG', '-COMP:T/fin', 'PHI:GEN:M', 'PHI:NUM:SG', 'SPEC:TO/inf', 'COMP:T/prt', 'PF:does', '-adjoinable', 'LF:does', 'FIN', 'COMP:Neg', 'COMP:V', '-SPEC:Neg', '-SPEC:T/fin', 'T/fin', 'SPEC:C/fin', 'PHI:GEN:_', '-SPEC:T/prt', 'SPEC:*', '-SPEC:v', 'T', 'COMP:v', '!COMP:*', '-COMP:INF', 'SPEC:φ', 'PHI:PER:3'}
dorme           ['LANG:IT']
dorme-          {'ASP', 'PHI:PER:_', '-COMP:V', 'PF:dorme', '-COMP:φ', 'LF:sleep', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', '!SPEC:φ', '-COMP:MA/inf', 'SPEC:P', 'LANG:EN', 'V', '-VAL', 'CLASS:INTR', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
disappeared     ['LANG:EN']
disappear-      {'ASP', 'PHI:PER:_', '-COMP:V', '-COMP:φ', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'LF:disappear', '-COMP:MA/inf', 'SPEC:P', 'LANG:EN', 'PF:disappear', 'V', '-VAL', 'CLASS:INTR', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'LANG:EN', 'LF:easy', 'PF:easy', 'SPEC:φ', '0', '2SPEC'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'PHI:PER:_', 'LANG:FI', 'FIN', '%SPEC:INF', 'NEG', '-SPEC:T/fin', 'POL:NEG', '-SPEC:T', 'PHI:GEN:_', 'SPEC:*', 'SEM:internal', 'Neg/fin', '!COMP:T', '!SPEC:*', 'LF:neg', 'VAL', 'PHI:DET:_', '!COMP:*', 'PF:ei', 'PHI:NUM:_', 'ARG', 'COMP:T/prt'}
e-              {'PHI:PER:_', 'LANG:FI', 'FIN', '%SPEC:INF', 'NEG', '-SPEC:T/fin', 'POL:NEG', '-SPEC:T', 'PHI:GEN:_', 'SPEC:*', 'SEM:internal', 'Neg/fin', '!COMP:T', '!SPEC:*', 'LF:neg', 'VAL', 'PHI:DET:_', '!COMP:*', 'PF:ei', 'PHI:NUM:_', 'ARG', 'COMP:T/prt'}
elaa            ['LANG:FI']
ela-            {'ASP', 'PHI:PER:_', 'LANG:FI', '-COMP:V', '-COMP:φ', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', '-COMP:MA/inf', 'PF:elaa', 'SPEC:P', 'V', '-VAL', 'LF:live', 'CLASS:INTR', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
etsii           ['LANG:FI']
etsi-           {'ASP', 'PHI:PER:_', 'LANG:FI', 'CLASS:TR', '-COMP:V', '!COMP:φ', 'LF:search', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'V', '-VAL', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:P', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:N', 'PF:etsi', 'SPEC:TO/inf'}
etta            {'-SPEC:*', '!PROBE:FIN', 'LANG:FI', 'LF:that', '-VAL', 'FIN', '-ARG', '!COMP:*', 'PF:etta', 'COMP:C/fin', 'COMP:T/fin', 'FORCE', '-SPEC:φ'}
fell            ['LANG:EN']
fell-           {'ASP', 'PHI:PER:_', 'PF:fell', '-COMP:V', 'LF:fell', '-COMP:φ', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', '!SPEC:φ', '-COMP:MA/inf', 'SPEC:P', 'LANG:EN', 'V', '-VAL', 'CLASS:INTR', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
flow'           {'ASP', 'PHI:PER:_', '-COMP:V', '-COMP:v', '-SPEC:FORCE', 'LF:flow', 'COMP:P', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:P', 'LANG:EN', 'V', '-VAL', 'PF:flow', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
from            {'PHI:PER:_', 'LF:from', '-SPEC:Neg/fin', 'P', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', '-COMP:T', '-SPEC:C', 'PF:from', 'LANG:EN', '-SPEC:*', '-VAL', '-SPEC:INF', '-SPEC:N', '-SPEC:V', 'PHI:DET:_', '-COMP:uWH', '-float', 'PHI:NUM:_', 'ARG', '-SPEC:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:A', '-SPEC:P', '-SPEC:iR', 'TAIL:V,+SEM:directional', '-COMP:ADV', '-SPEC:T/fin', 'PHI:GEN:_', '-SPEC:T/prt', 'adjoinable', '-SPEC:v', 'COMP:φ', '!COMP:*'}
gave            ['LANG:EN']
give-           {'CLASS:DITR', 'ASP', 'PHI:PER:_', '-COMP:V', '-COMP:FIN', '+SEM:directional', 'LF:give', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PF:give', 'PHI:GEN:_', 'SPEC:P', 'LANG:EN', 'V', '-VAL', 'COMP:φ', 'PHI:DET:_', '!COMP:*', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'LANG:IT', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:D', 'PF:Giuseppe', 'COMP:R', 'COMP:uR', '-SPEC:ADV', 'N', 'D:REF:PROPER_NAME', '-COMP:AUX', '-COMP:N', 'COMP:T/prt', '-COMP:A', '-COMP:V', '-SPEC:P', '-SEM:directional', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', 'LF:Giuseppe', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'ASP', 'PHI:PER:_', 'LANG:FI', 'CLASS:TR', 'COMP:A/inf', '-COMP:V', '-COMP:v', '-SPEC:FORCE', 'PF:haluaa', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'ASP:BOUNDED', '-SPEC:*', 'SPEC:P', 'V', 'SEM:internal', '-VAL', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:P', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:N', 'LF:want', 'SPEC:TO/inf'}
hairitsee       ['LANG:FI']
hairitse-       {'ASP', 'PHI:PER:_', 'LANG:FI', 'CLASS:TR', '-COMP:V', '!COMP:φ', '-COMP:FIN', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'V', '-VAL', 'COMP:φ', 'LF:disturb', 'PF:hairitsee', 'PHI:DET:_', '!COMP:*', '-COMP:P', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'PHI:PER:_', '-COMP:V', 'LANG:IT', 'SPEC:φ', '-COMP:v', '-ASP', '-SPEC:FORCE', '-SPEC:T/fin', 'LF:have', 'COMP:P', 'SPEC:*', 'PHI:GEN:_', 'PF:ha', 'SPEC:P', 'V', 'SEM:internal', '-VAL', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'COMP:T', '-COMP:N', 'SPEC:TO/inf'}
horse           {'COMP:uR', '-COMP:A', '-COMP:V', '-COMP:AUX', '-SPEC:P', '-COMP:VA/inf', '-SPEC:R', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:T/fin', 'COMP:P', 'COMP:D/rel', 'COMP:R/D', '-SPEC:uWH', 'LANG:EN', '-COMP:N', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:C/fin', 'COMP:C', '-COMP:WH', 'PF:horse', '-COMP:D', '-SPEC:ADV', 'COMP:R', 'LF:horse', 'N', 'COMP:T/prt'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'ASP', 'PHI:PER:_', 'LANG:FI', '-COMP:V', '-COMP:φ', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'LF:disappear', '-COMP:MA/inf', 'SPEC:P', 'PF:havia', 'V', '-VAL', 'CLASS:INTR', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
Helsingissa     ['LANG:FI']
Helsinki        ['LANG:FI']
Helsinki-       {'LF:Helsinki', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', '-SPEC:INF', '-SPEC:V', '-SPEC:N', 'PF:Helsinki', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'D:REF:PROPER_NAME', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', 'LANG:FI', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'ASP', 'PHI:PER:_', 'LANG:FI', 'CLASS:TR', '-COMP:V', '!COMP:φ', '-COMP:FIN', '-COMP:v', 'LF:admire', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'V', '-VAL', 'PF:ihaile-', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:P', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
il              {'LF:the', 'COMP:N', '-SPEC:Neg/fin', '-SPEC:P', 'LANG:IT', 'φ', '-ARG', '-SPEC:T/fin', '-COMP:uR', '!PROBE:N', '-SPEC:C', '-EDGE:*', 'adjoinable', '-SPEC:INF', '-SPEC:V', 'COMP:n', 'COMP:φ', '-SPEC:MA/lla', 'PF:il', '!COMP:*', '-COMP:P', 'D', '-COMP:T/fin'}
i               {'LF:the', 'COMP:N', '-SPEC:Neg/fin', '-SPEC:P', 'LANG:IT', 'φ', '-ARG', '-SPEC:T/fin', '-COMP:uR', '!PROBE:N', '-SPEC:C', '-EDGE:*', 'adjoinable', '-SPEC:INF', '-SPEC:V', 'COMP:n', 'COMP:φ', '-SPEC:MA/lla', 'PF:il', '!COMP:*', '-COMP:P', 'D', '-COMP:T/fin'}
in              {'PHI:PER:_', '-COMP:A', '-SPEC:Neg/fin', '-SPEC:P', 'PF:in', 'LANG:IT', '-SPEC:iR', '-COMP:ADV', 'P', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:T', 'LF:in', '-SPEC:C', '-SPEC:T/prt', 'adjoinable', '-SPEC:v', '-VAL', '-SPEC:INF', '-SPEC:N', '-SPEC:V', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:uWH', 'PHI:NUM:_', 'ARG', '-SPEC:ADV', '-COMP:N'}
infermieri      {'COMP:uR', '-COMP:A', '-COMP:V', '-COMP:AUX', 'LANG:IT', '-SPEC:P', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', 'PF:infermieri', '-SPEC:FORCE', 'SPEC:A', '-SPEC:T/fin', 'COMP:P', 'COMP:D/rel', 'COMP:R/D', '-SPEC:uWH', 'LF:nurses', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', '-COMP:D', '-SPEC:ADV', 'COMP:R', '-COMP:N', 'N', 'COMP:T/prt'}
is              ['LANG:EN']
be-             {'ASP', '-COMP:V', 'LF:be', '-ARG', '-COMP:v', 'COPULA', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PF:be', 'SPEC:P', 'LANG:EN', 'V', '-VAL', '-COMP:TO/inf', '!COMP:*', 'SPEC:ADV', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'ASP', 'PHI:PER:_', 'LANG:FI', '-COMP:V', '-COMP:φ', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', '-COMP:MA/inf', 'SPEC:P', 'V', '-VAL', 'LF:sit', 'CLASS:INTR', 'PHI:DET:_', 'SPEC:ADV', 'PF:istuu', 'ARG', 'PHI:NUM:_', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
John            ['LANG:EN']
John-           {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'LANG:EN', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', 'D:REF:PROPER_NAME', '-COMP:N', 'COMP:T/prt', '-adjoinable', '-COMP:A', '-COMP:V', '-SPEC:P', '-SEM:directional', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', 'LF:John', 'PF:John', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'PHI_N', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', 'PF:joka', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', 'LF:who', 'N', '-COMP:AUX', '-COMP:N', 'COMP:T/prt', '-COMP:A', 'LANG:FI', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', 'D:REF:PROPER_NAME', '-COMP:N', 'COMP:T/prt', '-COMP:A', 'LANG:FI', '-COMP:V', '-SPEC:P', 'LF:Jukka', '-SEM:directional', 'PF:Jukka', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'ASP', 'PHI:PER:_', 'LANG:FI', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'V', '-VAL', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'LF:run', '-COMP:N', 'PF:juokse-', 'SPEC:TO/inf'}
kaksi           {'PHI:PER:_', 'COMP:N', 'LANG:FI', 'φ', '-COMP:QN', 'SPEC:*', 'LF:two', 'PHI:GEN:_', 'TAIL:ARG,VAL,FIN', 'NUM', 'PF:kaksi', '-VAL', 'COMP:n', 'COMP:φ', 'PHI:DET:_', '!COMP:*', 'PHI:NUM:_', 'ARG', '-COMP:D', 'PHI:NUM:SG'}
kaksi           {'PHI:PER:_', 'COMP:N', 'φ', 'TAIL:ARG,ASP:BOUNDED', '-COMP:QN', 'SPEC:*', 'LF:two', 'PHI:GEN:_', 'LANG:EN', 'NUM', 'PF:kaksi', '-VAL', 'COMP:n', 'COMP:φ', 'PHI:DET:_', '!COMP:*', 'PHI:NUM:_', 'TAIL:*POL:NEG', 'ARG', '-COMP:D'}
kaksi_1         {'PHI:PER:_', 'COMP:N', 'LANG:FI', 'φ', '-COMP:QN', 'SPEC:*', 'LF:two', 'PHI:GEN:_', 'TAIL:ARG,VAL,FIN', 'NUM', 'PF:kaksi', '-VAL', 'COMP:n', 'COMP:φ', 'PHI:DET:_', '!COMP:*', 'PHI:NUM:_', 'ARG', '-COMP:D', 'PHI:NUM:SG'}
kaksi_2         {'PHI:PER:_', 'COMP:N', 'φ', 'TAIL:ARG,ASP:BOUNDED', '-COMP:QN', 'SPEC:*', 'LF:two', 'PHI:GEN:_', 'LANG:EN', 'NUM', 'PF:kaksi', '-VAL', 'COMP:n', 'COMP:φ', 'PHI:DET:_', '!COMP:*', 'PHI:NUM:_', 'TAIL:*POL:NEG', 'ARG', '-COMP:D'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'COMP:N', 'NUM', 'LANG:FI', 'PF:kaksi', 'COMP:n', 'COMP:φ', 'φ', '-COMP:D', '-COMP:QN', 'SPEC:*', 'LF:two'}
kaupunkia       ['LANG:EN']
kaupunki-       {'COMP:uR', '-COMP:A', 'LANG:FI', '-COMP:V', '-COMP:AUX', '-SPEC:P', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', 'LF:city', '-SPEC:FORCE', 'SPEC:A', '-SPEC:T/fin', 'COMP:D/rel', 'COMP:R/D', '-SPEC:uWH', '-SPEC:INF', '-SPEC:V', '-SPEC:N', 'PF:kaupunki', '-COMP:C/fin', '-COMP:P', 'COMP:C', '-COMP:WH', '-SPEC:R', '-COMP:D', '-SPEC:ADV', 'COMP:R', '-COMP:N', 'N', 'COMP:T/prt'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'ASP', 'PHI:PER:_', 'LANG:FI', '-COMP:V', 'PF:kaske', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', '!COMP:A/inf', '-SPEC:*', 'SPEC:P', 'SEM:external', 'V', '-VAL', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:N', 'SPEC:TO/inf', 'LF:order'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'COMP:uR', '-COMP:A', 'LANG:FI', '-COMP:V', '-COMP:AUX', '-SPEC:P', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'PF:kello', 'SPEC:A', '-SPEC:T/fin', 'COMP:P', 'COMP:D/rel', 'COMP:R/D', '-SPEC:uWH', '-SPEC:INF', 'LF:watch', '-SPEC:V', '-SPEC:N', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', '-COMP:D', '-SPEC:ADV', 'COMP:R', '-COMP:N', 'N', 'COMP:T/prt'}
kello0-         {'LANG:FI', 'PF:kello', 'LF:watch', 'SPEC:φ', '0', '2SPEC'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-COMP:VA/inf', 'LF:key', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'LANG:EN', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', '-COMP:V', '-SPEC:P', '-SEM:directional', 'PF:key', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
kirja           ['LANG:FI']
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'LF:book', 'COMP:D/rel', '-SPEC:uWH', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', 'LANG:FI', '-COMP:V', '-SPEC:P', '-SEM:directional', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', 'PF:kirja'}
knows           ['LANG:EN']
know-           {'ASP', 'PHI:PER:_', 'CLASS:TR', '-COMP:V', '-COMP:v', 'LF:know', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'LANG:EN', 'V', '-VAL', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:P', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'PF:know', '-COMP:N', 'SPEC:TO/inf'}
kohti           {'PHI:PER:_', '-COMP:A', 'LANG:FI', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:iR', '-COMP:ADV', 'P', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', '-SPEC:T/fin', 'SPEC:*', 'PHI:GEN:_', '-COMP:T', '-SPEC:C', '-SPEC:T/prt', 'TAIL:V', 'adjoinable', '-SPEC:v', '-VAL', '-SPEC:INF', '-SPEC:N', '-SPEC:V', 'PF:kohti', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:uWH', 'PHI:NUM:_', 'ARG', '-SPEC:ADV', '-COMP:N', 'LF:towards'}
koko            {'COMP:N', 'LANG:FI', '-SPEC:Neg/fin', '-SPEC:P', 'φ', '-ARG', '-SPEC:T/fin', 'LF:all', '-COMP:uR', '!PROBE:N', '-SPEC:C', '-EDGE:*', 'adjoinable', '-SPEC:INF', '-SPEC:V', 'COMP:n', 'COMP:φ', '-SPEC:MA/lla', 'TAIL:T', '!COMP:*', '-COMP:P', 'D', '-COMP:T/fin', 'PF:koko'}
kuka            ['LANG:FI']
KUKA            ['LANG:FI']
kuka-           {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', '-SPEC:INF', '-SPEC:V', '-SPEC:N', 'PHI', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', 'LF:who', 'N', '-COMP:AUX', '-COMP:N', 'COMP:T/prt', '-COMP:A', 'LANG:FI', '-COMP:V', '-SPEC:P', 'PF:kuka', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'ASP', 'PHI:PER:_', 'LANG:FI', '-COMP:V', '-COMP:φ', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', '-COMP:N', 'LF:snore', 'PF:kuorsaa', 'V', '-VAL', 'PHI:DET:_', '-COMP:WH', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:T/fin', 'SPEC:TO/inf'}
kysyi           ['LANG:EN']
kysy-           {'ASP', 'PHI:PER:_', 'LANG:FI', '-COMP:V', '-COMP:v', '!PROBE:FORCE:OP:WH', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'V', '-VAL', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'LF:ask', 'PF:kysya', '-COMP:N', 'SPEC:TO/inf'}
lahella         {'PHI:PER:_', '-SPEC:Neg/fin', 'P', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', '!SPEC:φ', '-COMP:T', '-SPEC:C', '-SPEC:INF', '-SPEC:N', '-SPEC:V', '-COMP:FORCE', '!SPEC:*', 'VAL', 'PHI:DET:_', '-COMP:uWH', 'PHI:NUM:_', 'ARG', '-SPEC:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:A', 'LANG:FI', '-SPEC:P', '-SPEC:iR', '-COMP:ADV', 'COMP:V', 'LF:near', 'INF', '-SPEC:T/fin', 'SPEC:*', 'PHI:GEN:_', '-SPEC:T/prt', 'adjoinable', '-SPEC:v', 'COMP:v', 'COMP:φ', '-COMP:C/fin', '!COMP:*', 'PF:lahella'}
lahella         {'PHI:PER:_', '-COMP:A', 'LANG:FI', '-SPEC:Neg/fin', '-SPEC:P', '!COMP:φ', '-SPEC:iR', '-COMP:ADV', 'P', '-COMP:T/fin', 'LF:near', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', '-SPEC:T/fin', 'SPEC:*', 'PHI:GEN:_', '-COMP:T', '-SPEC:C', '-SPEC:T/prt', 'adjoinable', '-SPEC:v', '-VAL', '-SPEC:INF', '-SPEC:N', '-SPEC:V', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:uWH', 'PHI:NUM:_', 'ARG', '-SPEC:ADV', '-COMP:N', 'PF:lahella'}
lahella_1       {'PHI:PER:_', '-COMP:A', 'LANG:FI', '-SPEC:Neg/fin', '-SPEC:P', '!COMP:φ', '-SPEC:iR', '-COMP:ADV', 'P', '-COMP:T/fin', 'LF:near', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', '-SPEC:T/fin', 'SPEC:*', 'PHI:GEN:_', '-COMP:T', '-SPEC:C', '-SPEC:T/prt', 'adjoinable', '-SPEC:v', '-VAL', '-SPEC:INF', '-SPEC:N', '-SPEC:V', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:uWH', 'PHI:NUM:_', 'ARG', '-SPEC:ADV', '-COMP:N', 'PF:lahella'}
lahella_2       {'PHI:PER:_', '-SPEC:Neg/fin', 'P', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', '!SPEC:φ', '-COMP:T', '-SPEC:C', '-SPEC:INF', '-SPEC:N', '-SPEC:V', '-COMP:FORCE', '!SPEC:*', 'VAL', 'PHI:DET:_', '-COMP:uWH', 'PHI:NUM:_', 'ARG', '-SPEC:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:A', 'LANG:FI', '-SPEC:P', '-SPEC:iR', '-COMP:ADV', 'COMP:V', 'LF:near', 'INF', '-SPEC:T/fin', 'SPEC:*', 'PHI:GEN:_', '-SPEC:T/prt', 'adjoinable', '-SPEC:v', 'COMP:v', 'COMP:φ', '-COMP:C/fin', '!COMP:*', 'PF:lahella'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'ASP', 'PHI:PER:_', 'LANG:FI', '-COMP:V', 'COMP:PP', 'PF:lahtea', '-COMP:φ', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', '-COMP:MA/inf', 'SPEC:P', 'V', '-VAL', 'CLASS:INTR', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf', 'LF:leave'}
lavano          ['LANG:IT']
lava-           {'ASP', 'PHI:PER:_', '-COMP:V', 'LANG:IT', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'LF:wash', 'PF:lava', 'V', '-VAL', 'COMP:φ', 'PHI:DET:_', '!COMP:*', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:N', 'SPEC:TO/inf'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'COMP:N', '-SPEC:Neg/fin', '-SPEC:P', 'LANG:IT', 'LF:φ', 'φ', '-ARG', '-SPEC:T/fin', '-COMP:uR', '!PROBE:N', '-SPEC:C', '-EDGE:*', 'adjoinable', '-SPEC:INF', '-SPEC:V', 'COMP:n', 'COMP:φ', '-SPEC:MA/lla', '!COMP:*', '-COMP:P', 'D', '-COMP:T/fin', 'PF:le'}
leaves          ['LANG:EN']
leave           {'ASP', 'PHI:PER:_', '-COMP:V', 'PF:leave', '-COMP:T/fin', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', '!SPEC:φ', 'SPEC:P', 'LANG:EN', 'V', '-VAL', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:N', 'SPEC:TO/inf', 'LF:leave'}
leave-          {'ASP', 'PHI:PER:_', '-COMP:V', 'PF:leave', '-COMP:T/fin', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', '!SPEC:φ', 'SPEC:P', 'LANG:EN', 'V', '-VAL', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:N', 'SPEC:TO/inf', 'LF:leave'}
like-           {'ASP', 'PHI:PER:_', '-COMP:V', '!COMP:φ', 'PF:like', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'LANG:EN', 'V', '-VAL', 'LF:like', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:N', 'SPEC:TO/inf'}
likes           ['LANG:EN']
like            {'ASP', 'PHI:PER:_', '-COMP:V', '!COMP:φ', 'PF:like', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'LANG:EN', 'V', '-VAL', 'LF:like', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:N', 'SPEC:TO/inf'}
little          ['LANG:EN']
little-         {'LANG:EN', 'LF:little', 'PF:little-', 'SPEC:φ', '0', '2SPEC'}
lle             {'PHI:PER:_', 'LF:for', '-SPEC:Neg/fin', 'P', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', '-COMP:T', '-SPEC:C', '-SPEC:*', '-VAL', '-SPEC:INF', '-SPEC:N', '-SPEC:V', 'PHI:DET:_', '-COMP:uWH', 'PHI:NUM:_', 'ARG', 'PF:P(lle)', '-SPEC:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:A', 'LANG:FI', '-SPEC:P', '-SPEC:iR', 'TAIL:V,+SEM:directional', '-COMP:ADV', '+SEM:directional', '-SPEC:T/fin', 'PHI:GEN:_', '-SPEC:T/prt', 'adjoinable', '-SPEC:v', 'COMP:φ', '!COMP:*'}
lla             {'PHI:PER:_', '-SPEC:Neg/fin', 'LF:by', 'P', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', '-COMP:T', '-SPEC:C', '-VAL', '-SPEC:INF', '-SPEC:N', '-SPEC:V', 'PHI:DET:_', 'TAIL:T', '-COMP:uWH', 'PHI:NUM:_', 'ARG', '-SPEC:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:A', 'LANG:FI', '-SPEC:P', '-SPEC:iR', '-COMP:ADV', '-SPEC:T/fin', 'SPEC:*', 'PHI:GEN:_', '-SPEC:T/prt', 'adjoinable', 'PF:P(lla)', '-SPEC:v', 'TAIL:*V', 'COMP:φ', '!COMP:*'}
Luisa           ['LANG:IT']
Luisa-          {'LANG:IT', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'PF:Luisa', 'COMP:D/rel', '-SPEC:uWH', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'D:REF:PROPER_NAME', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', '-COMP:V', '-SPEC:P', '-SEM:directional', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', 'LF:Luisa'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'ASP', 'PHI:PER:_', 'LANG:FI', 'CLASS:TR', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'PF:luke', 'SPEC:P', 'V', '-VAL', 'LF:read', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:P', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:N', 'SPEC:TO/inf'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'ASP', 'PHI:PER:_', 'LANG:FI', 'CLASS:TR', '-COMP:V', '!COMP:φ', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'PF:loyta-', 'ASP:BOUNDED', 'SPEC:P', 'V', '-VAL', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:P', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'LF:find', '-COMP:N', 'SPEC:TO/inf'}
Mary            ['LANG:EN']
Mary-           {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', 'LF:Mary', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'LANG:EN', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', 'D:REF:PROPER_NAME', '-COMP:N', 'COMP:T/prt', '-adjoinable', '-COMP:A', '-COMP:V', '-SPEC:P', '-SEM:directional', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', 'PF:Mary', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
Merja           ['LANG:FI']
Merja_nom       ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merjaahan       ['LANG:FI']
Merja-          {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'PF:Merja', 'COMP:D/rel', '-SPEC:uWH', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', 'D:REF:PROPER_NAME', '-COMP:N', 'COMP:T/prt', '-adjoinable', 'LANG:FI', '-COMP:A', '-COMP:V', '-SPEC:P', '-SEM:directional', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', 'LF:Merja', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
meren           ['LANG:FI']
mere-           {'COMP:uR', '-COMP:D', 'LANG:FI', '-COMP:A', '-COMP:V', 'PF:meri', '-COMP:AUX', '-SPEC:P', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:T/fin', 'COMP:P', 'COMP:D/rel', 'COMP:R/D', '-SPEC:uWH', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', 'LF:ocean', '-SPEC:ADV', 'COMP:R', '-COMP:N', 'N', 'COMP:T/prt'}
mies            ['LANG:EN']
mies-           {'COMP:uR', '-COMP:A', 'LANG:FI', '-COMP:V', '-COMP:AUX', '-SPEC:P', 'PF:mies', '-COMP:VA/inf', 'LF:man', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:T/fin', 'COMP:P', 'COMP:D/rel', 'COMP:R/D', '-SPEC:uWH', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', '-COMP:D', '-SPEC:ADV', 'COMP:R', '-COMP:N', 'N', 'COMP:T/prt'}
mistake         {'COMP:uR', '-COMP:A', '-COMP:V', '-COMP:AUX', '-SPEC:P', 'LF:mistake', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:P', 'COMP:D/rel', 'COMP:R/D', '-SPEC:uWH', 'LANG:EN', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', '-COMP:D', '-SPEC:ADV', 'PF:mistake', '-COMP:N', 'N', 'COMP:T/prt'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'COMP:uR', '-COMP:A', 'LANG:FI', '-COMP:V', '-COMP:AUX', '-SPEC:P', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:T/fin', 'PF:mika-', 'COMP:P', 'COMP:D/rel', 'COMP:R/D', '-SPEC:uWH', '-SPEC:INF', '-SPEC:V', 'LF:what', '-SPEC:N', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', '-COMP:D', '-SPEC:ADV', 'COMP:R', '-COMP:N', 'N', 'COMP:T/prt'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'ASP', 'PHI:PER:_', 'CLASS:TR', '-COMP:V', 'LANGN:EN', '+SEM:directional', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'LF:move', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'V', '-VAL', 'PF:move', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:P', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:N', 'SPEC:TO/inf'}
mukavasti       ['LANG:EN']
mukava-         {'LANG:FI', 'PF:mukavasti', 'LF:comfortably', 'SPEC:φ', '0', '2SPEC'}
must            {'PHI:PER:_', '-adjoinable', '-COMP:INF', 'FIN', 'PF:must', 'COMP:Neg', '-SPEC:TO/inf', 'COMP:V', 'LF:must', '-SPEC:Neg', '-SPEC:T/fin', 'MODAL', 'T/fin', 'SPEC:C/fin', 'PHI:GEN:_', '-SPEC:T/prt', '-SPEC:C', 'SPEC:*', 'LANG:EN', 'SPEC:FORCE', '-SPEC:v', 'T', '!PROBE:V', '-SPEC:N', '-SPEC:V', 'COMP:v', '!SPEC:*', 'VAL', 'PHI:DET:_', '!COMP:*', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:T/fin', 'SPEC:TO/inf', 'COMP:T/prt'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'ASP', 'PHI:PER:_', 'LANG:FI', 'CLASS:TR', '-COMP:V', 'LF:sell', '-COMP:v', '-COMP:Neg/fin', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'ASP:BOUNDED', 'SPEC:P', '-COMP:N', 'V', '-VAL', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:P', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'PF:myy', '-COMP:T/fin', 'SPEC:TO/inf'}
nainen          {'COMP:uR', 'LF:woman', 'LANG:FI', '-COMP:A', '-COMP:V', '-COMP:AUX', '-SPEC:P', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:T/fin', 'COMP:P', 'PF:nainen', 'COMP:D/rel', 'COMP:R/D', '-SPEC:uWH', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', '-COMP:D', '-SPEC:ADV', 'COMP:R', '-COMP:N', 'N', 'COMP:T/prt'}
naki            ['LANG:FI']
nakee           ['LANG:FI']
nake-           {'ASP', 'PHI:PER:_', '-COMP:ESSA/inf', 'CLASS:TR', 'LANG:FI', '-COMP:V', '-COMP:MA/ssa', 'LF:see', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', '-COMP:MA/tta', 'PHI:GEN:_', 'ASP:BOUNDED', 'SPEC:P', 'V', '-VAL', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:P', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:N', 'PF:nake', 'SPEC:TO/inf'}
nayttaa         ['LANG:FI']
naytta-         {'ASP', 'LANG:FI', '-COMP:V', '-ARG', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', '!SPEC:φ', 'SPEC:P', 'V', 'SEM:internal', 'LF:seem', '!COMP:VA/inf', 'VAL', 'PF:naytta', 'SPEC:ADV', '-COMP:N', 'SPEC:TO/inf'}
ndo             {'LANG:EN', 'LF:ing', 'PRG', 'COMP:v', '-SPEC:V', '-COMP:FORCE', '-COMP:C/fin', 'COMP:V', 'INF', 'VAL', 'PF:PRG', '!COMP:*', '?ARG', '-SPEC:T/fin', '-COMP:T/fin'}
ne              {'COMP:N', 'LANG:FI', '-SPEC:Neg/fin', '-SPEC:P', 'φ', '-ARG', 'PHI:NUM:PL', '-SPEC:T/fin', 'LF:those', '-COMP:uR', '!PROBE:N', '-SPEC:C', '-EDGE:*', 'adjoinable', '-SPEC:INF', '-SPEC:V', 'COMP:n', 'PF:ne', 'COMP:φ', '-SPEC:MA/lla', '!COMP:*', '-COMP:P', 'D', '-COMP:T/fin', 'PHI:PER:3'}
niiden          ['LANG:EN']
nen             {'LF:ing', 'LANG:FI', 'TAIL:φ', 'COMP:0', '-SPEC:A', 'PF:a', 'SPEC:*', 'A', '-SPEC:φ'}
not             {'-COMP:C', 'LANG:EN', 'PHI:PER:_', '-VAL', '-COMP:FIN', '-COMP:φ', 'PHI:DET:_', 'PF:not', '!COMP:*', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', '-SPEC:T/fin', 'POL:NEG', 'SPEC:*', 'Neg', 'LF:not'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'ASP', 'PHI:PER:_', 'LANG:FI', '-COMP:V', '-COMP:φ', 'LF:sleep', '-COMP:v', '-COMP:Neg/fin', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', '-COMP:MA/inf', '-COMP:T', 'SPEC:P', '-COMP:N', 'V', '-VAL', 'CLASS:INTR', 'PHI:DET:_', 'PF:nukku', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:T/fin', 'SPEC:TO/inf'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'COMP:uR', '-COMP:A', 'LANG:FI', '-COMP:V', '-COMP:AUX', '-SPEC:P', '-COMP:VA/inf', 'PF:omaisuuden', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:T/fin', 'COMP:P', 'COMP:D/rel', 'COMP:R/D', '-SPEC:uWH', 'LF:possessions', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', '-COMP:D', '-SPEC:ADV', 'COMP:R', '-COMP:N', 'N', 'COMP:T/prt'}
operatoria      ['LANG:IT']
operatoria-     {'LF:operation', 'PF:operatoria', 'LANG:IT', 'SPEC:φ', '0', '2SPEC'}
ostaa           ['LANG:FI']
osta-           {'ASP', 'PHI:PER:_', 'PF:osta', 'CLASS:TR', 'LANG:FI', '-COMP:V', 'LF:buy', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'ASP:BOUNDED', 'SPEC:P', 'V', '-VAL', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:P', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:N', 'SPEC:TO/inf'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'LF:day', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', 'SEM:nonreferential', '-SPEC:FORCE', 'PF:paiva', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', 'LANG:FI', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
past            {'PHI:PER:_', '-COMP:A', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:iR', '-COMP:ADV', 'P', '-COMP:T/fin', '-SPEC:C/fin', 'PF:past', '-SPEC:FORCE', 'LF:past', '-SPEC:iWH', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:T', '-SPEC:C', '-SPEC:*', 'LANG:EN', '-SPEC:T/prt', 'adjoinable', '-SPEC:v', '-VAL', '-SPEC:INF', '-SPEC:N', '-SPEC:V', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:uWH', '-float', 'PHI:NUM:_', 'ARG', '-SPEC:ADV', '-COMP:N'}
Pariisia        ['LANG:FI']
Pariisi-        {'COMP:uR', '-COMP:A', 'LANG:FI', '-COMP:V', '-COMP:AUX', '-SPEC:P', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:T/fin', 'COMP:P', 'PF:Pariisi', 'COMP:D/rel', 'COMP:R/D', '-SPEC:uWH', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', '-COMP:D', '-SPEC:ADV', 'COMP:R', '-COMP:N', 'N', 'COMP:T/prt', 'LF:Paris'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekkahan        ['LANG:FI']
PEKKA           ['LANG:EN']
Pekka-          {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', 'D:REF:PROPER_NAME', '-COMP:N', 'COMP:T/prt', '-COMP:A', 'LANG:FI', '-COMP:V', '-SPEC:P', '-SEM:directional', 'PF:Pekka', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'LF:Pekka', 'COMP:C', '-COMP:WH', '-SPEC:R'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'ASP', 'PHI:PER:_', 'LANG:FI', 'CLASS:TR', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PF:pelkaa', 'PHI:GEN:_', 'SPEC:P', 'V', '-VAL', 'LF:fear', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:P', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:N', 'SPEC:TO/inf'}
persuades       ['LANG:EN']
persuade-       {'PF:persuade', 'ASP', 'PHI:PER:_', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'LANG:EN', 'SEM:external', 'V', '-VAL', 'COMP:TO/inf', 'PHI:DET:_', '!COMP:*', 'LF:persuade', 'SPEC:ADV', 'ARG', 'PHI:NUM:_', '-COMP:N', 'SPEC:TO/inf'}
peruuntui       ['LANG:FI']
peruuntu-       {'ASP', 'PHI:PER:_', 'LANG:FI', '-COMP:V', 'LF:cancelled', '-COMP:v', 'PF:peruuntui', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'V', '-VAL', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
pesi            ['LANG:FI']
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'ASP', 'PHI:PER:_', 'LANG:FI', 'CLASS:TR', '-COMP:V', 'PF:pese_asp', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'ASP:BOUNDED', 'SPEC:P', 'LF:wash', 'V', '-VAL', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:P', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:N', 'SPEC:TO/inf'}
pese-           {'ASP', 'PHI:PER:_', 'LANG:FI', 'CLASS:TR', '-COMP:V', '-COMP:v', 'PF:pese', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'LF:wash', 'V', '-VAL', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:P', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:N', 'SPEC:TO/inf'}
petardi         {'COMP:uR', '-COMP:A', '-COMP:V', '-COMP:AUX', 'LANG:IT', 'LF:firecrackers', '-COMP:VA/inf', '-SPEC:P', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:T/fin', 'COMP:P', 'COMP:D/rel', 'COMP:R/D', '-SPEC:uWH', 'COMP:T/prt', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', '-COMP:D', '-SPEC:ADV', 'COMP:R', '-COMP:N', 'N', 'PF:petardi'}
pieni           ['LANG:FI']
pieni-          {'LANG:FI', 'PF:pieni-', 'LF:small', 'SPEC:φ', '0', '2SPEC'}
poikien         ['LANG:FI']
poika-          {'COMP:uR', '-COMP:A', 'LANG:FI', '-COMP:V', '-COMP:AUX', '-SPEC:P', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', 'PF:poika', '-SPEC:FORCE', 'SPEC:A', '-SPEC:T/fin', 'COMP:P', 'COMP:D/rel', 'COMP:R/D', '-SPEC:uWH', 'COMP:T/prt', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', '-COMP:D', '-SPEC:ADV', 'COMP:R', '-COMP:N', 'N', 'LF:boy'}
puhelinta       ['LANG:FI']
puhelin-        {'PF:puhelin', 'LANG:FI', 'LF:phone', 'SPEC:φ', '0', '2SPEC'}
punainen        ['LANG:FI']
puna-           {'LANG:FI', 'SPEC:φ', 'PF:puna-', 'LF:red', '0', '2SPEC'}
presupposto     {'COMP:uR', '-COMP:A', '-COMP:V', '-COMP:AUX', 'LANG:IT', '-SPEC:P', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', 'PF:presupposto', '-SPEC:FORCE', 'SPEC:A', '-SPEC:T/fin', 'COMP:P', 'COMP:D/rel', 'COMP:R/D', '-SPEC:uWH', 'LF:presupposition', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', '-COMP:D', '-SPEC:ADV', 'COMP:R', '-COMP:N', 'N', 'COMP:T/prt'}
primary         {'COMP:uR', '-COMP:A', '-COMP:V', '-COMP:AUX', 'LANG:IT', '-SPEC:P', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:T/fin', 'COMP:P', 'LF:nurse', 'COMP:D/rel', '-SPEC:uWH', 'COMP:R/D', 'PF:primary', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', '-COMP:D', '-SPEC:ADV', 'COMP:R', '-COMP:N', 'N', 'COMP:T/prt'}
promises        ['LANG:EN']
promise-        {'LF:promise', 'ASP', 'PHI:PER:_', '-COMP:V', '-COMP:v', 'PF:promise', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'LANG:EN', 'V', 'SEM:internal', '-VAL', 'COMP:φ', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
problem         {'COMP:uR', '-COMP:A', '-COMP:V', '-COMP:AUX', '-SPEC:P', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', 'LF:problem', '-SPEC:FORCE', 'SPEC:A', '-SPEC:T/fin', 'COMP:P', 'COMP:D/rel', 'COMP:R/D', 'PF:problem', 'LANG:EN', '-SPEC:uWH', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', '-COMP:D', '-SPEC:ADV', 'COMP:R', '-COMP:N', 'N', 'COMP:T/prt'}
pyytaa          ['LANG:FI']
pyyta-          {'ASP', 'PHI:PER:_', 'LANG:FI', 'CLASS:TR', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'SEM:external', 'V', '-VAL', 'PF:pyyda', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:P', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'LF:ask', '-COMP:N', 'SPEC:TO/inf'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'ASP', 'PHI:PER:_', 'LF:race', '-COMP:V', '-COMP:φ', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', '-COMP:MA/inf', 'SPEC:P', 'LANG:EN', '-COMP:N', 'V', '-VAL', 'PF:race', 'CLASS:INTR', 'PHI:DET:_', '!COMP:*', 'SPEC:ADV', 'LAMG:EN', 'ARG', 'PHI:NUM:_', 'SPEC:φ', '-COMP:T/fin', 'SPEC:TO/inf'}
raukesi         ['LANG:FI']
raukea-         {'ASP', 'PHI:PER:_', 'LANG:FI', '-COMP:V', 'PF:raukea', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'LF:terminate', 'V', '-VAL', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:N', 'SPEC:TO/inf'}
red             ['LANG:EN']
red-            {'LANG:EN', 'PF:red', 'SPEC:φ', 'LF:red', '0', '2SPEC'}
saavuttaa       ['LANG:FI']
saavutta-       {'ASP', 'PHI:PER:_', 'LANG:FI', 'CLASS:TR', '-COMP:V', '!COMP:φ', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PF:saavutta-', 'PHI:GEN:_', 'ASP:BOUNDED', 'SPEC:P', 'LF:reach', 'V', '-VAL', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:P', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:N', 'SPEC:TO/inf'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'ASP', 'PHI:PER:_', 'LANG:FI', '-COMP:V', '-COMP:v', 'COMP:FORCE', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'V', '-VAL', 'PF:sano-', 'LF:say', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'COMP:VA/inf', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
said            ['LANG:EN']
say'            {'ASP', 'PHI:PER:_', '-COMP:V', '-COMP:v', '!COMP:FORCE', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'PF:say', 'SPEC:P', 'LANG:EN', 'V', '-VAL', 'LF:say', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
say-            {'ASP', 'PHI:PER:_', '-COMP:V', '-COMP:v', '!COMP:FORCE', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'PF:say', 'SPEC:P', 'LANG:EN', 'V', '-VAL', 'LF:say', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
sala            ['LANG:IT']
sala-           {'COMP:uR', '-COMP:A', '-COMP:V', '-COMP:AUX', 'LANG:IT', '-SPEC:P', '-COMP:VA/inf', 'PF:sala', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:T/fin', 'COMP:P', 'COMP:D/rel', 'COMP:R/D', '-SPEC:uWH', 'COMP:T/prt', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', '-COMP:D', '-SPEC:ADV', 'COMP:R', '-COMP:N', 'N', 'LF:room'}
scoppiati       ['LANG:IT']
scoppia-        {'ASP', 'PHI:PER:_', '-COMP:V', 'LANG:IT', 'PF:scoppia', 'LF:explode', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'V', '-VAL', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:N', 'SPEC:TO/inf'}
sentenza        {'COMP:uR', '-COMP:A', '-COMP:V', 'LF:sentence', '-COMP:AUX', 'LANG:IT', '-SPEC:P', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:T/fin', 'COMP:P', 'COMP:D/rel', 'COMP:R/D', 'PF:sentenza', '-SPEC:uWH', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', '-COMP:D', '-SPEC:ADV', 'COMP:R', '-COMP:N', 'N', 'COMP:T/prt'}
Seine           ['LANG:EN']
Seine-          {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'PF:Seine', 'COMP:D/rel', '-SPEC:uWH', 'LANG:EN', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', 'D:REF:PROPER_NAME', '-COMP:N', 'COMP:T/prt', '-COMP:A', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', 'LF:Seine', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
sembrano        ['LANG:IT']
sembra-         {'!COMP:ARE/inf', '-COMP:V', '-COMP:φ', '-ARG', '-COMP:v', '-ASP', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'SPEC:P', 'LANG:EN', 'V', '-VAL', 'LF:seem', 'PF:sembra', 'SPEC:ADV', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
sleeps          ['LANG:EN']
sleep           {'ASP', 'PHI:PER:_', '-COMP:V', '-COMP:φ', 'LF:sleep', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', '-COMP:MA/inf', 'SPEC:P', 'LANG:EN', 'V', '-VAL', 'PF:sleep', 'CLASS:INTR', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
sleep-          {'ASP', 'PHI:PER:_', '-COMP:V', '-COMP:φ', 'LF:sleep', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', '-COMP:MA/inf', 'SPEC:P', 'LANG:EN', 'V', '-VAL', 'PF:sleep', 'CLASS:INTR', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
solution        {'COMP:uR', '-COMP:A', '-COMP:V', '-COMP:AUX', '-SPEC:P', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'LF:solution', 'SPEC:A', '-SPEC:T/fin', 'COMP:P', 'COMP:D/rel', 'COMP:R/D', '-SPEC:uWH', 'LANG:EN', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:C/fin', 'COMP:C', 'PF:solution', '-COMP:WH', '-SPEC:R', '-COMP:D', '-SPEC:ADV', 'COMP:R', '-COMP:N', 'N', 'COMP:T/prt'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', '-SPEC:INF', 'PF:sopimus', '-SPEC:V', '-SPEC:N', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', 'LANG:FI', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', '!COMP:A/inf', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', 'LF:agreement'}
spinge          ['LANG:IT']
spinge-         {'ASP', 'PHI:PER:_', '-COMP:V', '!COMP:φ', 'LANG:IT', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:P', 'V', '-VAL', 'PHI:DET:_', '-COMP:P', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'LF:push', '-COMP:N', 'SPEC:TO/inf', 'PF:spinge'}
ssa             {'PHI:PER:_', '-SPEC:Neg/fin', 'PF:ssa', 'P', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', 'COMP:n/MA', '-COMP:T', 'LF:in', '-SPEC:C', 'TAIL:V', '-VAL', '-SPEC:INF', '-SPEC:N', '-SPEC:V', 'PHI:DET:_', '-COMP:uWH', 'PHI:NUM:_', 'ARG', '-SPEC:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:A', 'LANG:FI', '-SPEC:P', '-SPEC:iR', '-COMP:ADV', '-SPEC:T/fin', 'SPEC:*', 'PHI:GEN:_', '-SPEC:T/prt', 'adjoinable', '-SPEC:v', 'COMP:φ', '!COMP:*'}
stanno          ['LANG:IT']
sta-            {'PHI:PER:_', '-COMP:V', '-COMP:v', '-ASP', 'PF:sta', '-SPEC:FORCE', 'SPEC:TO/inf', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'LANG:EN', 'V', 'SEM:internal', '-VAL', 'LF:stay', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:N', 'COMP:PRG'}
sti             {'LANG:FI', 'ADV', 'adjoinable', '-SPEC:Neg/fin', 'LF:by', '-SPEC:N', '-ARG', 'TAIL:T', '!COMP:*', 'PF:sti', '-SPEC:FORCE', '-SPEC:T/fin', 'SPEC:*'}
sukka           ['LANG:EN']
sukka_0acc      ['LANG:EN']
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukan_acc       ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'COMP:uR', '-COMP:A', 'LANG:FI', '-COMP:V', '-COMP:AUX', '-SPEC:P', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:T/fin', 'COMP:P', 'LF:socks', 'COMP:D/rel', 'COMP:R/D', '-SPEC:uWH', 'PF:sukka-', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', '-COMP:D', '-SPEC:ADV', 'COMP:R', '-COMP:N', 'N', 'COMP:T/prt'}
surprised       ['LANG:EN']
surprise-       {'ASP', 'PHI:PER:_', 'CLASS:TR', '-COMP:V', 'LF:surprise', '-COMP:v', '-SPEC:FORCE', 'PF:surprise', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'LANG:EN', '-COMP:N', 'V', '-VAL', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:P', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:T/fin', 'SPEC:TO/inf'}
talo            ['LANG:EN']
taloa           ['LANG:EN']
talona          ['LANG:EN']
taloksi         ['LANG:EN']
talo-           {'COMP:uR', '-COMP:A', 'LANG:FI', '-COMP:V', '-COMP:AUX', '-SPEC:P', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:T/fin', 'COMP:P', 'COMP:D/rel', 'COMP:R/D', '-SPEC:uWH', 'LF:house', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:C/fin', 'PF:talo', 'COMP:C', '-COMP:WH', '-SPEC:R', '-COMP:D', '-SPEC:ADV', 'COMP:R', '-COMP:N', 'N', 'COMP:T/prt'}
tama            ['LANG:EN']
tama-           {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'PF:tama', '-SPEC:INF', '-SPEC:V', '-SPEC:N', 'PHI', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', 'LANG:FI', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', 'LF:this', '-SPEC:R'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'PHI:PER:_', 'LANG:FI', '-COMP:V', 'FIN', '-COMP:v', 'LF:must', '-ASP', '-SPEC:FORCE', '-SPEC:T/fin', 'MODAL', 'COMP:P', 'SPEC:*', 'PHI:GEN:_', '!COMP:A/inf', 'PF:taytyy', 'SPEC:P', 'V', '-VAL', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:N', 'SPEC:TO/inf'}
teki            ['LANG:FI']
teke-           {'ASP', 'PHI:PER:_', 'LANG:FI', 'CLASS:TR', 'PF:teke', '-COMP:V', '!COMP:φ', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'ASP:BOUNDED', '-COMP:A/inf', 'SPEC:P', 'V', '-VAL', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:P', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'LF:make', '-COMP:N', 'SPEC:TO/inf'}
that            {'-SPEC:*', 'LANG:EN', '!PROBE:FIN', 'LF:that', '-VAL', 'FIN', '-ARG', '!COMP:*', 'COMP:C/fin', 'FORCE:DECL', 'COMP:T/fin', 'FORCE', 'PF:that'}
the             {'LF:the', 'COMP:N', '-SPEC:Neg/fin', '-SPEC:P', 'φ', '-ARG', '-SPEC:T/fin', '-COMP:uR', '!PROBE:N', 'PF:the', '-SPEC:C', 'LANG:EN', '-EDGE:*', 'adjoinable', 'PHI:DET:DEF', '-SPEC:INF', '-SPEC:V', 'COMP:n', 'COMP:φ', '-SPEC:MA/lla', 'PHI:PER:3', '!COMP:*', '-COMP:P', 'D', '-COMP:T/fin', 'PHI:NUM:SG'}
to              {'PHI:PER:_', '-SPEC:Neg/fin', 'P', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', 'PF:to', '-COMP:T', '-SPEC:C', '-SPEC:*', 'TAIL:V', 'LANG:EN', '-VAL', '-SPEC:INF', '-SPEC:N', '-SPEC:V', 'PHI:DET:_', '-COMP:uWH', '-float', 'PHI:NUM:_', 'ARG', '-SPEC:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:A', 'LF:to', '-SPEC:P', '-SPEC:iR', '-COMP:ADV', '+SEM:directional', '-SPEC:T/fin', 'PHI:GEN:_', '-SPEC:T/prt', 'adjoinable', '-SPEC:v', 'COMP:φ', '!COMP:*'}
to_inf          {'COMP:V', 'INF', '-SPEC:T/fin', 'LF:TO/inf', 'LANG:EN', 'adjoinable', '-SPEC:v', '-VAL', 'COMP:v', '-SPEC:V', '-COMP:FORCE', '-COMP:C/fin', 'TO/inf', 'PF:TO/inf', '!COMP:*', '?ARG', '-COMP:T/fin'}
towards         {'PHI:PER:_', '-SPEC:Neg/fin', 'P', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', '-COMP:T', '-SPEC:C', '-SPEC:*', 'TAIL:V', 'LANG:EN', '-VAL', '-SPEC:INF', '-SPEC:N', '-SPEC:V', 'PHI:DET:_', '-COMP:uWH', '-float', 'PHI:NUM:_', 'ARG', '-SPEC:ADV', '-COMP:N', '-COMP:T/fin', 'LF:towards', '-COMP:A', 'PF:towards', '-SPEC:P', '-SPEC:iR', '-COMP:ADV', '-SPEC:T/fin', 'PHI:GEN:_', '-SPEC:T/prt', 'adjoinable', '-SPEC:v', 'COMP:φ', '!COMP:*'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'ASP', 'PHI:PER:_', 'LANG:FI', 'CLASS:TR', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'LF:nudge', 'SPEC:P', 'V', '-VAL', 'PF:tonaise', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:P', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:N', 'SPEC:TO/inf'}
tta             {'PHI:PER:_', 'ADV', '-SPEC:Neg/fin', 'P', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', 'COMP:n/MA', '-COMP:T', '-SPEC:C', '-VAL', '-SPEC:INF', '-SPEC:N', '-SPEC:V', 'PF:tta', 'PHI:DET:_', '-COMP:uWH', 'PHI:NUM:_', 'ARG', 'LF:without', '-SPEC:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:A', 'LANG:FI', '-SPEC:P', '-SPEC:iR', '-COMP:ADV', '-SPEC:T/fin', 'SPEC:*', 'PHI:GEN:_', '-SPEC:T/prt', 'adjoinable', '-SPEC:v', 'COMP:φ', '!COMP:*'}
tries           ['LANG:EN']
try-            {'ASP', 'PHI:PER:_', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'LF:try', 'LANG:EN', '!COMP:-ARG', 'V', 'SEM:internal', '-VAL', 'PF:try', 'PHI:DET:_', 'SPEC:ADV', '!COMP:TO/inf', 'ARG', 'PHI:NUM:_', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
verifiche       {'COMP:uR', '-COMP:A', '-COMP:V', 'PF:verifiche', '-COMP:AUX', 'LANG:IT', '-SPEC:P', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:T/fin', 'COMP:P', 'COMP:D/rel', 'COMP:R/D', '-SPEC:uWH', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:C/fin', 'LF:verification', 'COMP:C', '-COMP:WH', '-SPEC:R', '-COMP:D', '-SPEC:ADV', 'COMP:R', '-COMP:N', 'N', 'COMP:T/prt'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'ASP', 'PHI:PER:_', 'LANG:FI', '-COMP:V', '-COMP:φ', '-COMP:v', '-SPEC:FORCE', 'LF:flow', '-SPEC:T/fin', 'COMP:P', '!COMP:P', 'PHI:GEN:_', '-COMP:MA/inf', 'SPEC:P', 'PF:virtaa', 'V', '-VAL', 'CLASS:INTR', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'ASP', 'PHI:PER:_', '-COMP:V', 'PF:volu', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', '-SPEC:*', 'LANG:EN', 'SPEC:P', 'V', 'SEM:internal', '-VAL', 'PHI:DET:_', '!COMP:*', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:N', 'LF:want', 'SPEC:TO/inf'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'ASP', 'PHI:PER:_', 'SEM:achievement', 'CLASS:TR', '-COMP:V', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'PF:voitta', 'COMP:P', 'PHI:GEN:_', 'ASP:BOUNDED', 'SPEC:P', 'LANG:EN', 'V', '-VAL', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:P', 'LF:win', 'SPEC:ADV', 'ARG', 'PHI:NUM:_', '-COMP:N', 'SPEC:TO/inf'}
wants           ['LANG:EN']
want-           {'ASP', 'PHI:PER:_', 'CLASS:TR', '-COMP:V', '-SPEC:TO/inf', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'LANG:EN', 'PF:want', 'V', '-VAL', 'COMP:TO/inf', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:P', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', '-COMP:N', 'LF:want'}
what            ['LANG:EN']
what-           {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'LANG:EN', 'PHI_N', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', 'LF:what', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', 'PF:what'}
which           {'COMP:N', '-SPEC:Neg/fin', '-SPEC:P', 'LF:which', 'φ', 'OP:WH', 'PF:which', '-ARG', '-SPEC:T/fin', '-COMP:uR', '!PROBE:N', '-SPEC:C', '-EDGE:*', 'LANG:EN', 'DIS:WH', 'adjoinable', '-SPEC:INF', '-SPEC:V', 'COMP:n', 'COMP:φ', '-SPEC:MA/lla', '!COMP:*', '-COMP:P', 'D', '-COMP:T/fin'}
who             ['LANG:EN']
who-            {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'LANG:EN', 'PHI_N', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', 'LF:who', 'N', '-COMP:AUX', '-COMP:N', 'COMP:T/prt', 'PF:who', '-COMP:A', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
whether         {'-SPEC:*', 'LANG:EN', '!PROBE:FIN', '-VAL', 'FIN', 'OP:Q', 'LF:whether', '-ARG', 'OP:WH', '!COMP:*', 'COMP:T/fin', 'COMP:C/fin', 'FORCE', 'Q', 'PF:whether'}
yrittaa         ['LANG:FI']
yritta-         {'ASP', 'PHI:PER:_', '-COMP:V', 'PF:yritta', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', '!COMP:A/inf', 'SPEC:P', 'LF:try', 'LANG:EN', '!COMP:-ARG', 'V', 'SEM:internal', '-VAL', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
mina            ['LANG:EN']
mina-           {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'PHI_N', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', '-COMP:D', 'COMP:R', 'PF:mina', 'COMP:uR', '-SPEC:ADV', 'N', '-COMP:AUX', '-COMP:N', 'COMP:T/prt', 'LF:I', 'LANG:FI', '-COMP:A', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
sina            ['LANG:EN']
sina-           {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'PHI_N', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', 'LANG:FI', '-COMP:V', '-SPEC:P', 'LF:you', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'PF:sina', 'COMP:C', '-COMP:WH', '-SPEC:R'}
han             ['LANG:EN']
han-            {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'PHI_N', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', 'PF:han', 'LANG:FI', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', 'LF:s/he'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'PF:me', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'PHI_N', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', 'LF:we', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', 'LANG:FI', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
te              ['LANG:EN']
te-             {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'PHI_N', 'PF:te', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', 'LANG:FI', '-COMP:V', '-SPEC:P', 'LF:you', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'PHI_N', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', 'PF:he', 'LANG:FI', '-COMP:A', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', 'LF:they'}
se              ['LANG:EN']
se              ['LANG:EN']
sen             ['LANG:EN']
sita            ['LANG:EN']
se-             {'COMP:N', 'LF:the/that', 'LANG:FI', '-SPEC:Neg/fin', '-SPEC:P', 'φ', '-ARG', '-SPEC:T/fin', '-COMP:uR', '!PROBE:N', '-SPEC:C', '-EDGE:*', 'adjoinable', '-SPEC:INF', '-SPEC:V', 'COMP:n', 'COMP:φ', 'PF:se', '-SPEC:MA/lla', '!COMP:*', '-COMP:P', 'D', '-COMP:T/fin'}
I               ['LANG:EN']
I-              {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'LANG:EN', 'PHI_N', 'PF:I', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', 'LF:I', '-COMP:A', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
you             ['LANG:EN']
you-            {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'LANG:EN', 'PHI_N', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', '-COMP:V', '-SPEC:P', 'LF:you', '-SPEC:T/fin', 'PF:you', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
he              ['LANG:EN']
he-             {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'LANG:EN', 'PHI_N', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', 'PF:he', '-COMP:A', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'LF:he', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
she             ['LANG:EN']
she-            {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'LANG:EN', 'PHI_N', 'PF:she', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', 'LF:she', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
we              ['LANG:EN']
we-             {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'LANG:EN', 'PHI_N', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', 'LF:we', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', 'PF:we', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
you_pl          ['LANG:EN']
you_pl-         {'-COMP:VA/inf', '-COMP:v', 'LF:you_pl', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'LANG:EN', '-SPEC:INF', '-SPEC:V', '-SPEC:N', 'PHI', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', 'PF:you_pl', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
they            ['LANG:EN']
they-           {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'LANG:EN', 'PHI_N', '-SPEC:INF', 'PF:they', '-SPEC:V', '-SPEC:N', '-COMP:*', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', 'LF:they'}
it              ['LANG:EN']
it-             {'COMP:N', '-SPEC:Neg/fin', '-SPEC:P', 'φ', '-ARG', '-SPEC:T/fin', '-COMP:uR', '!PROBE:N', '-SPEC:C', '-EDGE:*', 'LANG:EN', 'adjoinable', '-SPEC:INF', 'PF:it', '-SPEC:V', 'COMP:n', 'COMP:φ', '-SPEC:MA/lla', 'LF:it/that', '!COMP:*', '-COMP:P', 'D', '-COMP:T/fin'}
io              ['LANG:EN']
io-             {'LANG:IT', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'PHI_N', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', 'LF:I', '-COMP:A', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', 'PF:io'}
tu              ['LANG:EN']
tu-             {'LANG:IT', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'PHI_N', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', '-COMP:V', '-SPEC:P', 'LF:you', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'PF:tu', 'COMP:C', '-COMP:WH', '-SPEC:R'}
lui             ['LANG:EN']
lui-            {'PF:lui', 'LANG:IT', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'PHI_N', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'LF:he', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
lei             ['LANG:EN']
lei-            {'LANG:IT', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'PF:lei', 'PHI_N', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', 'LF:she', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
noi             ['LANG:EN']
noi-            {'LANG:IT', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'PHI_N', 'PF:noi', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', 'LF:we', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
voi             ['LANG:EN']
voi-            {'LANG:IT', '-COMP:VA/inf', '-COMP:v', 'LF:you_pl', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'PHI_N', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', 'PF:voi', '-COMP:A', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
loro            ['LANG:EN']
loro-           {'LANG:IT', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'PHI_N', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', 'LF:they', 'PF:loro'}
mi              ['LANG:EN']
mi-             {'LF:me', 'LANG:IT', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'PHI_N', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', 'CL', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', 'PF:mi(cl)', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
la              ['LANG:EN']
la-             {'LANG:IT', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'PHI_N', '-SPEC:INF', 'PF:la(cl)', '-SPEC:V', '-SPEC:N', '-COMP:*', 'CL', 'LF:her', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', 'N', '-COMP:AUX', '-COMP:N', 'COMP:T/prt', '-COMP:A', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
lo              ['LANG:EN']
lo-             {'LANG:IT', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'PHI_N', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', 'CL', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', 'LF:him', '-COMP:N', 'COMP:T/prt', '-COMP:A', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R', 'PF:lo(cl)'}
si              ['LANG:EN']
si-             {'LANG:IT', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'PHI_N', '-SPEC:INF', 'PF:si(cl)', '-SPEC:V', '-SPEC:N', '-COMP:*', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', '-COMP:V', '-SPEC:P', 'CAL:CL', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', 'LF:3sg', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'PF:ci', 'LANG:IT', '-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'PHI_N', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '-COMP:*', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', '-COMP:V', '-SPEC:P', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', 'LF:there', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
[-n]            {'LANG:FI', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:SG', 'PHI:PER:1'}
[-t]            {'LANG:FI', 'PHI:PER:2', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:SG'}
[-V]            {'PHI:PER:3', 'LANG:FI', 'inflectional', 'PHI', 'PHI:NUM:SG'}
[-mme]          {'PHI:NUM:PL', 'LANG:FI', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI', 'PHI:PER:1'}
[-mme]          {'PHI:NUM:PL', 'LANG:FI', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI:PER:1'}
[-tte]          {'PHI:NUM:PL', 'LANG:FI', 'PHI:PER:2', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI'}
[-vat]          {'PHI:NUM:PL', 'LANG:FI', 'inflectional', 'PHI', 'PHI:PER:3'}
[-ni]           {'LANG:FI', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:SG', 'PHI:PER:1'}
[-si]           {'LANG:FI', 'PHI:PER:2', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:SG'}
[-nsa]          {'LANG:FI', 'PHI:NUM:SG', 'inflectional', 'PHI', 'PHI:PER:3'}
[-an]           {'LANG:FI', 'PHI:NUM:SG', 'PHI:DET:DEF', 'inflectional', 'PHI', 'PHI:PER:3'}
[-nne]          {'PHI:NUM:PL', 'LANG:FI', 'PHI:PER:2', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM'}
[-s]            {'LANG:EN', 'PHI:GEN:F', 'PHI:PER:3', 'inflectional', 'PHI', 'PHI:NUM:SG', 'PHI:GEN:M'}
[-0]            {'LANG:EN', 'PHI:DET:DEF', 'inflectional', 'PHI:GEN:N', 'PHI', 'PHI:PER:3', 'PHI:NUM:PL', 'PHI:PER:2', 'PHI:NUM:SG', 'PHI:PER:1'}
[-o]            {'PHI:HUM:HUM', 'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI', 'PHI:NUM:SG', 'PHI:PER:1'}
[-i]            {'PHI:PER:2', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI', 'PHI:NUM:SG'}
[-a]            {'PHI:PER:3', 'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI', 'PHI:NUM:SG'}
[-e]            {'PHI:PER:3', 'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI', 'PHI:NUM:SG'}
[-iamo]         {'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI', 'PHI:PER:1'}
[-te]           {'PHI:NUM:PL', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI'}
[-no]           {'PHI:NUM:PL', 'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI', 'PHI:PER:3'}
[-nom]          {'TAIL:FIN,ARG,VAL', 'LANG:EN', 'NOM', 'adjoinable', 'inflectional'}
[-par]          {'LANG:FI', 'adjoinable', 'TAIL:ARG,-VAL', 'inflectional', 'PAR'}
[-gen]          {'LANG:EN', 'GEN', '-float', 'inflectional', 'TAIL:INF,ARG'}
gen             {'LANG:EN', 'GEN', '-float', 'inflectional', 'TAIL:INF,ARG'}
[-n_acc]        {'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'adjoinable', 'TAIL:*POL:NEG', 'inflectional', 'n-ACC', 'TAIL:PHI'}
[-t_acc]        {'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'adjoinable', 'TAIL:*POL:NEG', 'inflectional', 't-ACC'}
[-0_acc]        {'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'adjoinable', 'TAIL:*PHI', '0_ACC', 'TAIL:*POL:NEG', 'inflectional'}
[-ess]          {'TAIL:V', 'LANG:FI', 'inflectional', 'PF:na', 'LF:as', '#essiivi'}
[-trs]          {'TAIL:V', 'LF:to', 'LANG:FI', 'inflectional', 'PF:ksi', '#translatiivi'}
[-ine]          {'TAIL:V', 'LANG:FI', 'inflectional', 'PF:ssa', 'LF:in', '#inessiivi'}
[-ela]          {'TAIL:V', 'LF:from', 'LANG:FI', 'PF:sta', 'inflectional', '#elatiivi'}
[-ill]          {'PF:an', 'TAIL:V', 'LANG:FI', 'inflectional', '#illatiivi', 'LF:into'}
[-ade]          {'TAIL:V', 'LF:at', 'LANG:FI', '#adessiivi', 'PF:lla', 'inflectional'}
[-abl]          {'TAIL:V', 'LF:from', 'LANG:FI', '#ablatiivi', 'inflectional', 'PF:lta'}
[-all]          {'TAIL:V', 'LF:to', 'LANG:FI', 'inflectional', 'PF:lle', '#allatiivi'}
[-abe]          {'TAIL:V', 'LANG:FI', 'inflectional', 'LF:without', 'PF:tta', '#abessiivi'}
[-kom]          {'TAIL:V', 'LANG:FI', 'LF:together', 'inflectional', 'PF:ine', '#komitatiivi'}
[-ins]          {'TAIL:V', '#instruktiivi', 'LANG:FI', 'PF:n', 'inflectional', 'LF:with'}
asp             {'LANG:EN', 'inflectional', 'ASP:BOUNDED'}
[hAn]           {'DIS:FAM', 'LANG:FI', 'inflectional', 'OP:FAM', 'OVERT_SCOPE'}
[pA]            {'OVERT_SCOPE', 'LANG:FI', 'DIS:POL', 'inflectional', 'OP:POL'}
[kO]            {'DIS:WH', 'OP:WH', 'FORCE:OP:WH', 'LANG:FI', 'inflectional', 'OP:Q', 'OVERT_SCOPE'}
[foc]           {'inflectional', 'OP:FOC', 'LANG:FI', 'DIS:FOC'}
a'              {'a', 'PF:a', 'LF:A', 'LANG:X'}
b'              {'PF:b', 'LF:B', 'LANG:X', 'b'}
b''             {'LANG:EN', 'PF:b', '-COMP:c', 'b', 'LF:B'}
c''             {'LANG:EN', 'SPEC:a', 'LF:C', 'c', 'PF:c'}
c'              {'c', 'LANG:X', 'PF:c', 'LF:C'}
d'              {'PF:d', 'LF:D', 'd', 'LANG:'}
a''             ['LANG:EN']
x'              {'x', 'PF:x', 'LANG:X', 'LF:X'}
y'              {'y', 'PF:y', 'LF:Y', 'LANG:X'}
z'              {'LF:Z', 'z', 'PF:x', 'LANG:X'}
John'           {'LF:John', "N'", 'PF:John', 'LANG:X'}
admires'        {'PF:admires', "V'", 'LF:admires', 'LANG:X'}
admires''       {'ASP', 'PHI:PER:_', '-COMP:V', 'LF:admires', '-COMP:v', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:P', 'LANG:EN', 'V', '-VAL', 'PHI:DET:_', 'SPEC:ADV', 'PHI:NUM:_', 'ARG', 'PF:admires', 'SPEC:φ', '-COMP:N', 'SPEC:TO/inf'}
Mary'           {'LF:mary', "N'", 'LANG:X', 'PF:Mary'}
T/fin           {'PHI:PER:_', '-adjoinable', '-COMP:INF', 'FIN', 'LF:T', '-SPEC:TO/inf', 'COMP:V', 'PF:T', '-SPEC:Neg', '-SPEC:T/fin', 'T/fin', 'SPEC:C/fin', 'PHI:GEN:_', '-SPEC:T/prt', '-SPEC:C', 'SPEC:*', 'LANG:EN', 'SPEC:FORCE', '-SPEC:v', 'T', '!PROBE:V', '-SPEC:N', '-SPEC:V', 'COMP:v', '!SPEC:*', 'VAL', 'PHI:DET:_', '!COMP:*', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:T/fin', 'SPEC:TO/inf', 'COMP:T/prt'}
v               {'ASP', 'LANG:EN', 'v', 'PHI:PER:_', 'LF:v', '-VAL', '!PROBE:V', '-SPEC:N', 'COMP:V', 'PHI:DET:_', '!COMP:*', 'PHI:NUM:_', 'ARG', 'SPEC:φ', 'PHI:GEN:_', 'PF:v'}
C/fin           {'COMP:Neg/fin', '!PROBE:FIN', 'FIN', '-ARG', '-SPEC:C/fin', 'COMP:T/fin', '-SPEC:T/fin', 'SPEC:*', 'LANG:EN', '-SPEC:N', 'C', '-COMP:T/prt', '-COMP:FORCE', '-COMP:C/fin', 'VAL', 'LF:C/fin', '!COMP:*', 'C/fin', 'PF:C'}
T               {'PHI:PER:_', 'FIN', 'LF:T', 'COMP:V', 'PF:T', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', '-SPEC:NEG', 'SPEC:*', 'LANG:EN', 'T', 'COMP:v', '!PROBE:V', '-SPEC:V', '-SPEC:N', '-COMP:NEG', 'VAL', 'PHI:DET:_', '!COMP:*', 'PHI:NUM:_', 'ARG', 'SPEC:φ', 'COMP:T/prt'}
T/prt           {'LF:T/prt', 'PHI:PER:_', 'PF:T/prt', 'FIN', 'T/prt', 'COMP:V', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:T/fin', 'SPEC:*', 'PHI:GEN:_', 'LANG:EN', 'T', 'COMP:v', '!PROBE:V', '-SPEC:N', '-SPEC:V', '-COMP:NEG', 'COMP:φ', 'VAL', 'PHI:DET:_', '!COMP:*', 'PHI:NUM:_', 'ARG', 'SPEC:φ', 'COMP:T/prt'}
a0              {'LANG:EN', '-adjoinable', 'TAIL:φ', 'COMP:0', '-SPEC:A', 'LF:A', 'PF:A', 'A', '-SPEC:φ'}
n               {'PHI:PER:_', '-COMP:VA/inf', 'φ', '-SPEC:R', '-COMP:v', '-SPEC:C/fin', '-SPEC:FORCE', 'SPEC:A', '!SPEC:φ', 'COMP:D/rel', '-SPEC:uWH', 'LANG:EN', '-SPEC:INF', '-SPEC:V', '-SPEC:N', '!SPEC:*', 'VAL', 'LF:n', 'PHI:DET:_', 'PHI:NUM:_', 'ARG', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', '-COMP:V', '-SPEC:P', 'COMP:0', 'COMP:V', 'INF', 'PF:n', '-SPEC:T/fin', 'COMP:P', 'PHI:GEN:_', 'SPEC:*', 'COMP:R/D', 'COMP:v', '-COMP:C/fin', '!COMP:*', 'COMP:C', '-COMP:WH', 'n'}
impass          {'PF:impass', 'LANG:EN', 'v', 'ASP', 'PHI:PER:_', '-VAL', '!PROBE:V', '-SPEC:N', 'LF:impass', 'COMP:V', 'PHI:DET:_', '!COMP:*', 'PHI:NUM:_', 'ARG', 'SPEC:φ', 'PHI:GEN:_'}
cau             {'ASP', 'LANG:EN', 'v', 'PHI:PER:_', 'LF:v/Cause', '-VAL', '!PROBE:V', '-SPEC:N', 'COMP:V', 'PF:Cau', 'PHI:DET:_', '!COMP:*', 'PHI:NUM:_', 'ARG', 'SPEC:φ', 'PHI:GEN:_'}
φ               {'LANG:EN', 'COMP:N', 'LF:φ', '-SPEC:T', 'COMP:D/rel', 'PF:φ', 'φ'}
INF             {'LANG:EN', 'PF:INF', 'COMP:v', '-SPEC:V', '-COMP:FORCE', '-COMP:C/fin', 'COMP:V', 'INF', '!COMP:*', 'LF:INF', '-SPEC:T/fin', '-COMP:T/fin'}
prtcpl          {'LF:T/prt', 'PHI:PER:_', 'PF:T/prt', 'FIN', 'T/prt', 'COMP:V', 'INF', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:T/fin', 'SPEC:*', '-SPEC:NEG', 'PHI:GEN:_', 'LANG:EN', 'T', '!PROBE:V', '-SPEC:N', '-SPEC:V', 'COMP:v', '-COMP:FORCE', '-COMP:NEG', 'COMP:φ', '-COMP:C/fin', 'VAL', 'PHI:DET:_', '!COMP:*', 'PHI:NUM:_', 'ARG', 'SPEC:φ', '-COMP:T/fin', 'COMP:T/prt'}
TO/inf          {'COMP:V', 'INF', '-SPEC:T/fin', 'LF:TO/inf', 'LANG:EN', 'adjoinable', '-SPEC:v', '-VAL', 'COMP:v', '-SPEC:V', '-COMP:FORCE', '-COMP:C/fin', 'TO/inf', 'PF:TO/inf', '!COMP:*', '!COMP:V', '?ARG', '-COMP:T/fin'}
A/inf           {'-SPEC:Neg/fin', 'COMP:V', 'INF', '-SPEC:T/fin', 'SPEC:*', 'LANG:EN', 'LF:A/inf', '-VAL', 'COMP:v', '-SPEC:V', 'A/inf', '-COMP:FORCE', '-COMP:C/fin', '!COMP:*', 'PF:A/inf', '?ARG', '-COMP:T/fin'}
ARE/inf         {'-adjoinable', 'ARE/inf', 'COMP:V', 'INF', '-SPEC:T/fin', 'SPEC:*', 'LF:ARE/inf', 'LANG:EN', 'PF:are', 'COMP:v', '-SPEC:V', '-COMP:FORCE', '-COMP:C/fin', 'VAL', '!COMP:*', '?ARG', '-COMP:T/fin'}
ESSA/inf        {'ADV', 'PF:essa', '-SPEC:Neg/fin', 'LF:while', '-COMP:T/fin', 'COMP:V', 'INF', '-SPEC:FORCE', '-SPEC:T/fin', 'SPEC:*', 'LANG:EN', 'adjoinable', 'COMP:v', '-SPEC:N', '-SPEC:V', '-COMP:FORCE', '-COMP:C/fin', 'TAIL:T', '!COMP:*', '?ARG', '?VAL', 'ESSA/inf'}
TUA/inf         {'PHI:PER:_', 'ADV', 'TUA/inf', 'LF:after', '-SPEC:Neg/fin', 'PF:tua', 'INF', 'COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:*', 'LANG:EN', 'adjoinable', 'COMP:v', '-SPEC:N', '-SPEC:V', '-COMP:FORCE', '!SPEC:*', '-COMP:C/fin', 'VAL', 'TAIL:T', '!COMP:*', 'PHI:DET:_', 'PHI:NUM:_', 'ARG', '-COMP:T/fin'}
VA/inf          {'PHI:PER:_', 'COMP:V', 'INF', 'PF:vAn', '-SPEC:T/fin', 'SPEC:*', 'PHI:GEN:_', 'VA/inf', 'LANG:EN', 'COMP:v', '-SPEC:N', '-SPEC:V', '-COMP:FORCE', '-COMP:C/fin', 'VAL', 'PHI:DET:_', '!COMP:*', 'PHI:NUM:_', 'ARG', '-COMP:T/fin', 'LF:VA'}
MA/ssa          {'PHI:PER:_', 'ADV', '-SPEC:Neg/fin', 'PF:massa', 'MA/inf', 'COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', 'MA/ssa', '-SPEC:*', 'TAIL:V', 'LANG:EN', 'adjoinable', '-VAL', 'COMP:v', '-SPEC:N', 'LF:in_doing', 'PHI:DET:_', 'PHI:NUM:_', 'ARG'}
MA/tta          {'PHI:PER:_', 'LANG:EN', 'ADV', 'adjoinable', '-VAL', 'PF:matta', '-SPEC:Neg/fin', '-SPEC:N', 'MA/inf', 'PHI:DET:_', 'TAIL:T', 'PHI:NUM:_', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:without_doing'}
MA/lla          {'PHI:PER:_', 'ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', 'LF:by_doing', 'LANG:EN', '-SPEC:N', 'VAL', 'TAIL:T', 'PHI:DET:_', 'PHI:NUM:_', 'ARG', 'MA/inf', 'COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:*', 'adjoinable', 'COMP:v', 'PF:malla'}
MA/inf          {'PHI:PER:_', 'ADV', '-SPEC:Neg/fin', 'PF:maan', '-SPEC:FORCE', 'TAIL:V', 'LANG:EN', '-SPEC:N', 'VAL', 'PHI:DET:_', 'PHI:NUM:_', 'ARG', 'MA/inf', 'COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:*', 'adjoinable', 'COMP:v', 'LF:to_do'}
E/inf           {'PF:en', 'LANG:FI', 'ADV', 'adjoinable', '-VAL', '-SPEC:Neg/fin', 'LF:by', '-SPEC:N', '-ARG', 'TAIL:T', '-SPEC:FORCE', '-SPEC:T/fin', 'SPEC:*'}
BE-             {'ASP', '-COMP:V', '-ARG', '-COMP:v', 'COPULA', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:P', 'SPEC:P', 'LANG:EN', '-COMP:N', 'V', '-VAL', 'LF:BE', 'COMP:φ', 'PF:BE', '!COMP:*', 'SPEC:ADV', 'SPEC:φ', '-COMP:T/fin', 'SPEC:TO/inf', 'COMP:T/prt'}
D               {'COMP:N', '-SPEC:Neg/fin', '-SPEC:P', 'φ', '-ARG', '-SPEC:T/fin', 'LF:D', '-COMP:uR', 'COMP:D/rel', '!PROBE:N', '-SPEC:C', 'LANG:EN', '-EDGE:*', 'adjoinable', '-SPEC:INF', '-SPEC:V', 'COMP:n', 'COMP:φ', '-SPEC:MA/lla', '!COMP:*', 'PF:D', '-COMP:P', '-SPEC:T', 'D', '-COMP:T/fin'}
D/rel           {'OP', 'COMP:N', '-SPEC:Neg/fin', '-SPEC:P', '-COMP:φ', 'OP:REL', 'φ', '-ARG', '-SPEC:T/fin', 'PF:D/rel', 'LF:D/rel', '-COMP:uR', 'COMP:D/rel', '!PROBE:N', '-SPEC:C', 'LANG:EN', 'adjoinable', '-SPEC:INF', '-SPEC:V', '-COMP:C/fin', '-SPEC:MA/lla', '!COMP:*', 'OP:_', '-SPEC:T', 'D', '-COMP:T/fin', 'D/rel'}
P               {'PHI:PER:_', '-COMP:A', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:iR', '-COMP:ADV', 'P', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:T', '-SPEC:C', '-SPEC:*', 'LANG:EN', '-SPEC:T/prt', 'adjoinable', '-SPEC:v', '-VAL', '-SPEC:INF', '-SPEC:N', '-SPEC:V', 'COMP:φ', 'PHI:DET:_', '!COMP:*', '-COMP:uWH', 'PF:P', '-float', 'ARG', 'PHI:NUM:_', '-SPEC:ADV', '-COMP:N', 'LF:P'}
pro             ['LANG:EN']
pro-            {'-COMP:VA/inf', '-COMP:v', '-SPEC:C/fin', 'PF:(pro)', '-SPEC:FORCE', 'SPEC:A', 'COMP:D/rel', '-SPEC:uWH', 'LANG:EN', '-SPEC:INF', '-SPEC:V', '-SPEC:N', 'PHI', '-COMP:D', 'COMP:R', 'COMP:uR', '-SPEC:ADV', '-COMP:AUX', 'N', '-COMP:N', 'COMP:T/prt', '-COMP:A', '-COMP:V', '-SPEC:P', 'LF:pro', '-SPEC:T/fin', 'COMP:P', 'COMP:R/D', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:R'}
cl              {'LANG:EN', 'CL', 'LEFT:T/fin', 'LEFT:D,CL', 'inflectional', 'RIGHT:PRG', 'RIGHT:ARE/inf'}
inc             {'inflectional', 'LANG:EN', 'INCORPORATED'}
sg              {'inflectional', 'LANG:EN', 'PHI:NUM:SG'}
pl              {'inflectional', 'LANG:EN', 'PHI:NUM:PL'}
1p              {'inflectional', 'LANG:EN', 'PHI:PER:1'}
2p              {'inflectional', 'LANG:EN', 'PHI:PER:2'}
3p              {'inflectional', 'LANG:EN', 'PHI:PER:3'}
def             {'inflectional', 'LANG:EN', 'PHI:DET:DEF'}
indef           {'inflectional', 'PHI:DET:INDEF', 'LANG:EN'}
hum             {'inflectional', 'PHI:HUM:HUM', 'LANG:EN'}
nonhum          {'inflectional', 'LANG:EN', 'PHI:HUM:NONHUM'}
m               {'inflectional', 'LANG:EN', 'PHI:GEN:M'}
f               {'inflectional', 'LANG:EN', 'PHI:GEN:F'}
proper_name     {'inflectional', 'D:REF:NAME', 'LANG:EN'}
nom             {'inflectional', 'TAIL:FIN,!COMP:*,VAL', 'NOM', 'LANG:EN'}
acc             {'inflectional', 'LANG:EN', 'ACC', 'TAIL:v'}
dat             {'inflectional', 'LANG:EN', 'TAIL:v', 'DAT'}
V1              {'inflectional', 'LANG:EN', '-EDGE:*', '-SPEC:*'}
uC/op           {'inflectional', 'LANG:EN', 'uC/op'}
wh              {'OP:WH', 'LANG:EN', 'DIS:WH', 'OP:_', 'inflectional'}
wh_             {'OP', 'LANG:EN', '-COMP:OP', 'OP:_', 'inflectional'}
top             {'inflectional', 'LANG:EN', 'OP:TOP', 'DIS:TOP'}
foc             {'inflectional', 'LANG:EN', 'OP:FOC', 'DIS:FOC'}
fam             {'inflectional', 'LANG:EN', 'DIS:FAM', 'OP:FAM'}
pol             {'inflectional', 'LANG:EN', 'DIS:POL', 'OP:POL'}
C/op            {'inflectional', 'OP:C/OP', 'LANG:EN', 'DIS:C/OP'}
d/rel           {'LANG:EN', 'adjoinable', 'OP:_', 'inflectional', 'OP:REL', '-COMP:C/fin', 'SPEC:D'}
Q               {'DIS:WH', 'OP', 'LANG:EN', '-COMP:OP', 'OP:WH', 'inflectional', 'OP:Q'}
