ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'-COMP:T/fin', '-SPEC:T/fin', 'COMP:ARE/inf', 'P', '-COMP:uWH', '-SPEC:C', 'COMP:D', '-COMP:N', '-SPEC:v', 'LANG:IT', '-SPEC:C/fin', '-SPEC:*', 'PF:a', '-SPEC:P', '-SPEC:V', 'TAIL:V', '-SPEC:iWH', '-SPEC:Neg/fin', '-ARG', '-SPEC:FORCE', '-VAL', '-COMP:T', 'LF:to', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', '-SPEC:iR', 'adjoinable', '-SPEC:N', '!COMP:*', '-COMP:ADV'}
a_D             {'-COMP:uR', '-COMP:T/fin', '-COMP:D', '-SPEC:T/fin', '!COMP:*', '-COMP:P', '-SPEC:P', 'LANG:EN', '-SPEC:V', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:Neg/fin', '-ARG', 'COMP:N', 'D', '-SPEC:INF', 'adjoinable', 'PF:D', 'LF:D', '-SPEC:C'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-COMP:T/fin', 'COMP:P', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:Neg', 'COMP:D', '-COMP:N', '-COMP:P', '-SPEC:Neg', 'ASP', 'SPEC:P', 'LANG:EN', 'PHI:DET:_', 'ARG', 'SPEC:ADV', '-COMP:V', 'PF:admire', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'LF:admire', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE'}
admire*         ['LANG:EN']
T/fin*          {'COMP:T/prt', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:T/fin', 'NO_DET', "PF:T/fin'", '-adjoinable', '-SPEC:Neg', '-SPEC:v', 'COMP:v', 'T', 'LANG:EN', '!PROBE:V', 'FIN', 'SPEC:D', '-SPEC:V', 'ARG', 'LF:T', '!SPEC:*', 'SPEC:FORCE', '-VAL', 'T/fin', 'NO_NUMBER', '-SPEC:T/prt', '-COMP:INF', 'SPEC:C/fin', 'PHI:PER:_', 'COMP:V', 'SPEC:TO/inf', '-SPEC:N', '!COMP:*', '-SPEC:TO/inf', '-SPEC:C'}
v*              {'v', 'ARG', 'PHI:GEN:_', '!PROBE:V', 'NO_DET', '-VAL', '!COMP:*', 'NO_NUMBER', 'LF:v', 'PHI:PER:_', 'COMP:V', 'ASP', 'LANG:EN', '-SPEC:N', 'SPEC:D', 'PF:v'}
admire**        ['LANG:EN']
T/fin**         {'COMP:T/prt', 'PHI:GEN:_', 'NO_DET', '-adjoinable', '-SPEC:Neg', '-SPEC:v', 'LANG:EN', 'FIN', 'ARG', 'LF:T', 'SPEC:FORCE', 'T/fin', '-VAL', '-SPEC:T/prt', '-COMP:INF', 'COMP:V', "PF:T/fin''", '-SPEC:TO/inf', '-SPEC:C', '-COMP:T/fin', 'PHI:PER:3', '-SPEC:T/fin', 'COMP:v', 'T', '!PROBE:V', 'SPEC:D', 'NO_PERSON', '-SPEC:V', '!SPEC:*', 'NO_NUMBER', 'SPEC:C/fin', 'SPEC:TO/inf', '-SPEC:N', '!COMP:*'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:D', '-COMP:N', 'LANG:IT', 'SPEC:P', 'ASP', 'PHI:DET:_', 'PF:adora', 'ARG', '-COMP:V', '-VAL', '-COMP:v', 'V', 'LF:admire', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE'}
antaa           ['LANG:FI']
anta-           {'PHI:GEN:_', '+SEM:directional', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', 'CLASS:DITR', 'ASP:BOUNDED', '-COMP:N', 'COMP:D', 'ASP', 'SPEC:P', 'SPEC:D', 'PHI:DET:_', 'LF:give', 'ARG', '-COMP:V', 'PF:antaa', '-VAL', '-COMP:v', '-COMP:FIN', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', '!COMP:*', '-SPEC:FORCE'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'PHI:GEN:_', 'COMP:P', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:D', '-COMP:N', 'SEM:internal', 'ASP', 'SPEC:P', 'LANG:EN', 'SPEC:D', 'PHI:DET:_', 'ARG', '-COMP:V', '-VAL', 'PF:ask', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'LF:ask', '-SPEC:FORCE'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', 'LANG:FI', '-SPEC:T/fin', 'LF:key', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:C/fin', 'COMP:D/rel', '-SPEC:V', 'N', '-COMP:V', 'COMP:C', 'PF:avain', '-COMP:AUX', '-SEM:directional', 'COMP:R', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', 'LF:car', '-SPEC:P', '-SPEC:C/fin', 'COMP:D/rel', 'PF:auto', '-SPEC:V', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-SEM:directional', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
bank            {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'PF:bank1', '-COMP:N', 'COMP:R/D', 'LF:bank_inst', '-SPEC:C/fin', 'LANG:EN', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'FREQ:1', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
bank            {'-SPEC:R', 'COMP:uR', 'LF:bank_river', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:C/fin', 'LANG:EN', 'COMP:D/rel', '-SPEC:V', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'FREQ:2', 'SPEC:A', '-SPEC:N', 'PF:bank2', '-SPEC:FORCE'}
barn            {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', 'LF:barn', '-SPEC:uWH', '-COMP:WH', '-SPEC:T/fin', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:C/fin', 'LANG:EN', 'COMP:D/rel', '-SPEC:V', 'N', '-COMP:V', 'PF:barn', 'COMP:C', '-COMP:AUX', 'COMP:R', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
city            {'-SPEC:R', 'COMP:uR', 'LF:city', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:C/fin', 'LANG:EN', 'COMP:D/rel', '-SPEC:V', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', 'PF:city', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
che             ['LANG:IT']
che-            {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', '-COMP:N', 'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', 'PF:che', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'LF:who', 'COMP:uR', '-SPEC:T/fin', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
chiamato        ['LANG:IT']
chiamata-       {'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:chiamato', 'LF:called', '-COMP:N', 'LANG:IT', 'SPEC:P', 'ASP', 'PHI:DET:_', 'ARG', '-COMP:V', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE'}
claims          ['LANG:EN']
claim-          {'PHI:GEN:_', '-COMP:D', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:N', 'LF:claim', 'SPEC:P', 'LANG:EN', 'SPEC:D', 'COMP:T/fin', 'ASP', 'PHI:DET:_', 'ARG', '-COMP:V', 'PF:claim', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE'}
danno           {'-SPEC:R', 'COMP:uR', 'PF:danno', 'COMP:T/prt', 'LF:damage', '-COMP:C/fin', '-SPEC:uWH', '-COMP:WH', '-SPEC:T/fin', 'COMP:P', '-COMP:N', 'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'PHI:GEN:_', 'LF:detest', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:ARE/inf', 'COMP:D', '-COMP:N', 'SEM:internal', 'LANG:IT', 'SPEC:P', 'ASP', 'PHI:DET:_', 'ARG', '-COMP:V', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'PF:detest', '-SPEC:FORCE'}
devono          ['LANG:EN']
deva-           {'PHI:GEN:_', 'COMP:P', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:ARE/inf', '-COMP:N', 'SEM:internal', 'LANG:IT', 'SPEC:P', 'SPEC:D', 'PHI:DET:_', 'PF:deva', 'ARG', '-ASP', '-COMP:V', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'LF:must', '-SPEC:FORCE'}
di              {'LF:of', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', 'P', '-COMP:uWH', '-SPEC:C', 'COMP:D', '-COMP:N', '-adjoinable', 'PF:di', '-SPEC:v', '-SPEC:P', '-SPEC:C/fin', 'SPEC:*', '-SPEC:V', 'PHI:DET:_', '-SPEC:iWH', 'ARG', '-SPEC:Neg/fin', '-SPEC:FORCE', '-VAL', '-COMP:T', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', '-SPEC:iR', 'PHI:PER:_', '-SPEC:N', '!COMP:*', '-COMP:ADV'}
does            {'COMP:T/prt', 'PHI:GEN:_', '-adjoinable', '-SPEC:Neg', '-SPEC:v', 'PF:does', 'LANG:EN', 'FIN', 'ARG', 'VAL', 'SPEC:FORCE', 'T/fin', '-SPEC:T/prt', '-COMP:INF', 'PHI:PER:_', 'COMP:V', '-SPEC:TO/inf', 'PHI:GEN:F', '-SPEC:C', 'COMP:Neg', '-COMP:T/fin', 'PHI:PER:3', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:v', 'T', '!PROBE:V', 'SPEC:D', 'SPEC:*', 'PHI:GEN:M', '-SPEC:V', 'PHI:DET:_', 'LF:does', '!SPEC:*', 'PHI:NUM:SG', 'SPEC:C/fin', 'SPEC:TO/inf', '-SPEC:N', '!COMP:*'}
does_C          ['LANG:EN']
does-           {'COMP:T/prt', 'PHI:GEN:_', '-adjoinable', '-SPEC:Neg', '-SPEC:v', 'PF:does', 'LANG:EN', 'FIN', 'ARG', 'VAL', 'SPEC:FORCE', 'T/fin', '-SPEC:T/prt', '-COMP:INF', 'PHI:PER:_', 'COMP:V', '-SPEC:TO/inf', 'PHI:GEN:F', '-SPEC:C', 'COMP:Neg', '-COMP:T/fin', 'PHI:PER:3', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:v', 'T', '!PROBE:V', 'SPEC:D', 'SPEC:*', 'PHI:GEN:M', '-SPEC:V', 'PHI:DET:_', 'LF:does', '!SPEC:*', 'PHI:NUM:SG', 'SPEC:C/fin', 'SPEC:TO/inf', '-SPEC:N', '!COMP:*'}
dorme           ['LANG:IT']
dorme-          {'PHI:GEN:_', '-COMP:D', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:N', 'ASP', 'SPEC:P', 'LANG:EN', 'SPEC:D', '-COMP:MA/inf', 'PHI:DET:_', 'LF:sleep', 'PF:dorme', 'ARG', '-COMP:V', '-VAL', '!SPEC:D', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'CLASS:INTR', '-SPEC:FORCE'}
disappeared     ['LANG:EN']
disappear-      {'PHI:GEN:_', 'LF:disappear', '-COMP:D', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:disappear', '-COMP:N', 'ASP', 'SPEC:P', 'LANG:EN', 'SPEC:D', '-COMP:MA/inf', 'PHI:DET:_', 'ARG', '-COMP:V', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'CLASS:INTR', '-SPEC:FORCE'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'0', 'LF:easy', 'LANG:EN', '2SPEC', 'SPEC:D', 'PF:easy'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'COMP:T/prt', 'PHI:GEN:_', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', 'SEM:internal', 'LF:neg', 'POL:NEG', '-SPEC:T', 'SPEC:*', 'FIN', 'PHI:DET:_', '!COMP:T', 'ARG', 'Neg/fin', '!SPEC:*', 'VAL', 'NEG', 'PHI:PER:_', 'PF:ei', '!COMP:*', '%SPEC:INF'}
e-              {'COMP:T/prt', 'PHI:GEN:_', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', 'SEM:internal', 'LF:neg', 'POL:NEG', '-SPEC:T', 'SPEC:*', 'FIN', 'PHI:DET:_', '!COMP:T', 'ARG', 'Neg/fin', '!SPEC:*', 'VAL', 'NEG', 'PHI:PER:_', 'PF:ei', '!COMP:*', '%SPEC:INF'}
elaa            ['LANG:FI']
ela-            {'PHI:GEN:_', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', '-COMP:N', 'ASP', 'SPEC:P', 'SPEC:D', '-COMP:MA/inf', 'PHI:DET:_', 'ARG', 'SPEC:ADV', '-COMP:V', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'LF:live', 'COMP:P', 'CLASS:INTR', 'PF:elaa', '-SPEC:FORCE'}
etsii           ['LANG:FI']
etsi-           {'PHI:GEN:_', 'COMP:P', '-SPEC:T/fin', 'LANG:FI', '!COMP:*', 'PHI:NUM:_', 'COMP:D', '-COMP:N', '-COMP:P', 'ASP', 'SPEC:P', 'PHI:DET:_', 'ARG', '-COMP:V', '-VAL', '!COMP:D', '-COMP:v', 'V', 'PHI:PER:_', 'LF:search', 'SPEC:TO/inf', 'SPEC:ADV', 'CLASS:TR', 'PF:etsi', '-SPEC:FORCE'}
etta            {'COMP:C/fin', 'LF:that', '-ARG', 'LANG:FI', '!PROBE:FIN', '-VAL', 'PF:etta', '-SPEC:*', 'COMP:T/fin', 'FIN', '!COMP:*', '-SPEC:D', 'FORCE'}
fell            ['LANG:EN']
fell-           {'PF:fell', 'PHI:GEN:_', '-COMP:D', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:N', 'ASP', 'SPEC:P', 'LANG:EN', 'SPEC:D', '-COMP:MA/inf', 'PHI:DET:_', 'ARG', '-COMP:V', 'LF:fell', '-VAL', '!SPEC:D', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'CLASS:INTR', '-SPEC:FORCE'}
flow'           {'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', 'LF:flow', '-COMP:N', 'ASP', 'SPEC:P', 'LANG:EN', 'SPEC:D', 'PHI:DET:_', 'PF:flow', 'ARG', 'SPEC:ADV', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:V', 'COMP:P', '-SPEC:FORCE'}
from            {'TAIL:V,+SEM:directional', '-float', '-COMP:T/fin', 'PHI:GEN:_', 'PF:from', '-SPEC:T/fin', 'PHI:NUM:_', 'P', '-COMP:uWH', '-SPEC:C', 'COMP:D', '-COMP:N', '-SPEC:v', '-SPEC:P', '-SPEC:C/fin', 'LANG:EN', '-SPEC:*', '-SPEC:V', 'PHI:DET:_', '-SPEC:iWH', 'ARG', '-SPEC:Neg/fin', '-SPEC:FORCE', '-VAL', '-COMP:T', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'LF:from', '-SPEC:iR', 'adjoinable', 'PHI:PER:_', '-SPEC:N', '!COMP:*', '-COMP:ADV'}
gave            ['LANG:EN']
give-           {'PHI:GEN:_', '+SEM:directional', 'COMP:P', '-SPEC:T/fin', 'PHI:NUM:_', 'CLASS:DITR', '-COMP:N', 'COMP:D', 'ASP', 'SPEC:P', 'LANG:EN', 'SPEC:D', 'PHI:DET:_', 'LF:give', 'ARG', '-COMP:V', '-VAL', '-COMP:v', '-COMP:FIN', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'PF:give', '!COMP:*', '-SPEC:FORCE'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', '-SPEC:P', 'COMP:D/rel', 'PF:Giuseppe', '-SPEC:V', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-SEM:directional', '-COMP:VA/inf', '-COMP:v', 'LF:Giuseppe', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'PHI:GEN:_', 'COMP:P', 'COMP:A/inf', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', 'ASP:BOUNDED', 'COMP:D', 'SEM:internal', '-COMP:N', '-COMP:P', 'ASP', 'SPEC:P', '-SPEC:*', 'PHI:DET:_', 'PF:haluaa', 'ARG', 'LF:want', '-COMP:V', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE'}
hairitsee       ['LANG:FI']
hairitse-       {'PHI:GEN:_', 'COMP:P', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', '-COMP:N', 'COMP:D', '-COMP:P', 'ASP', 'PF:hairitsee', 'SPEC:D', 'SPEC:P', 'PHI:DET:_', 'LF:disturb', 'ARG', '-COMP:V', '-VAL', '!COMP:D', '-COMP:v', '-COMP:FIN', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'PHI:GEN:_', 'COMP:P', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:N', 'SEM:internal', 'LF:have', 'LANG:IT', 'SPEC:P', 'SPEC:D', 'SPEC:*', 'PHI:DET:_', 'ARG', '-ASP', '-COMP:V', 'PF:ha', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:T', '-SPEC:FORCE'}
horse           {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', 'PF:horse', '-SPEC:P', '-SPEC:C/fin', 'LANG:EN', 'COMP:D/rel', '-SPEC:V', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', 'LF:horse', '-SPEC:FORCE'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'PHI:GEN:_', 'LF:disappear', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', 'PF:havia', '-COMP:N', 'ASP', 'SPEC:P', 'SPEC:D', '-COMP:MA/inf', 'PHI:DET:_', 'ARG', '-COMP:V', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'CLASS:INTR', '-SPEC:FORCE'}
Helsingissa     ['LANG:FI']
Helsinki        ['LANG:FI']
Helsinki-       {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'PF:Helsinki', '-COMP:WH', 'LANG:FI', 'LF:Helsinki', '-SPEC:T/fin', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:C/fin', 'COMP:D/rel', '-SPEC:V', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'PHI:GEN:_', 'COMP:P', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', '-COMP:N', 'COMP:D', '-COMP:P', 'ASP', 'SPEC:P', 'SPEC:D', 'PHI:DET:_', 'ARG', 'SPEC:ADV', '-COMP:V', '-VAL', '!COMP:D', '-COMP:v', 'PF:ihaile-', 'V', '-COMP:FIN', 'PHI:PER:_', 'SPEC:TO/inf', 'LF:admire', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE'}
il              {'-COMP:uR', '-COMP:T/fin', '-COMP:D', '-SPEC:T/fin', '!COMP:*', '-COMP:P', 'LF:the', 'LANG:IT', '-SPEC:P', '-SPEC:V', '!PROBE:N', '-SPEC:Neg/fin', '-ARG', 'COMP:N', 'D', '-SPEC:INF', 'adjoinable', '-SPEC:MA/lla', 'PF:il', '-SPEC:C'}
i               {'-COMP:uR', '-COMP:T/fin', '-COMP:D', '-SPEC:T/fin', '!COMP:*', '-COMP:P', 'LF:the', 'LANG:IT', '-SPEC:P', '-SPEC:V', '!PROBE:N', '-SPEC:Neg/fin', '-ARG', 'COMP:N', 'D', '-SPEC:INF', 'adjoinable', '-SPEC:MA/lla', 'PF:il', '-SPEC:C'}
in              {'-COMP:T/fin', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', 'P', '-COMP:uWH', '-SPEC:C', 'COMP:D', '-COMP:N', '-SPEC:v', 'LANG:IT', '-SPEC:C/fin', 'LF:in', '-SPEC:P', '-SPEC:V', 'PHI:DET:_', '-SPEC:iWH', 'ARG', '-SPEC:Neg/fin', '-SPEC:FORCE', '-VAL', '-COMP:ADV', '-COMP:T', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', '-SPEC:iR', 'PHI:PER:_', 'adjoinable', '-SPEC:N', '!COMP:*', 'PF:in'}
infermieri      {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', 'PF:infermieri', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', 'LF:nurses', '-SPEC:FORCE'}
is              ['LANG:EN']
be-             {'-SPEC:T/fin', 'COPULA', '-COMP:TO/inf', '-COMP:N', 'ASP', 'SPEC:P', 'LANG:EN', 'SPEC:D', 'SPEC:ADV', '-COMP:V', '-ARG', '-VAL', '-COMP:v', 'V', 'SPEC:TO/inf', 'LF:be', 'PF:be', 'COMP:P', '!COMP:*', '-SPEC:FORCE'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'PHI:GEN:_', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', '-COMP:N', 'ASP', 'SPEC:P', 'SPEC:D', '-COMP:MA/inf', 'PHI:DET:_', 'ARG', '-COMP:V', '-VAL', 'PF:istuu', 'LF:sit', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'CLASS:INTR', '-SPEC:FORCE'}
John            ['LANG:EN']
John-           {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:N', '-adjoinable', 'COMP:R/D', '-SPEC:C/fin', 'LANG:EN', 'LF:John', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-SEM:directional', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'COMP:uR', '-SPEC:T/fin', 'PF:John', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', '-COMP:N', 'COMP:R/D', '-SPEC:C/fin', 'PF:joka', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'LF:who', 'COMP:uR', '-SPEC:T/fin', 'LANG:FI', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:C/fin', 'COMP:D/rel', 'LF:Jukka', '-SPEC:V', 'PF:Jukka', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-SEM:directional', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'PHI:GEN:_', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', '-COMP:N', 'ASP', 'SPEC:P', 'LF:run', 'PF:juokse-', 'PHI:DET:_', 'ARG', '-COMP:V', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE'}
kaksi           {'TAIL:ARG,VAL,FIN', 'NUM', 'LF:two', 'ARG', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:NUM:SG', '-VAL', 'LANG:FI', 'COMP:N', 'COMP:n', 'PHI:PER:_', 'SPEC:*', 'PHI:DET:_', 'PF:kaksi'}
kaksi           {'NUM', 'LF:two', 'TAIL:*POL:NEG', 'COMP:N', 'COMP:n', 'LANG:EN', 'SPEC:*', 'TAIL:ARG,ASP:BOUNDED', 'PF:kaksi'}
kaksi_1         {'TAIL:ARG,VAL,FIN', 'NUM', 'LF:two', 'ARG', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:NUM:SG', '-VAL', 'LANG:FI', 'COMP:N', 'COMP:n', 'PHI:PER:_', 'SPEC:*', 'PHI:DET:_', 'PF:kaksi'}
kaksi_2         {'NUM', 'LF:two', 'TAIL:*POL:NEG', 'COMP:N', 'COMP:n', 'LANG:EN', 'SPEC:*', 'TAIL:ARG,ASP:BOUNDED', 'PF:kaksi'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'NUM', 'LF:two', 'SPEC:*', 'LANG:FI', 'COMP:N', 'COMP:n', 'PF:kaksi'}
kaupunkia       ['LANG:EN']
kaupunki        {'-SPEC:R', 'COMP:uR', 'LF:city', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', '-COMP:WH', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', '-COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:C/fin', 'COMP:D/rel', '-SPEC:V', 'PF:kaupunki', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'LF:order', 'PHI:GEN:_', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', '-COMP:N', 'ASP', 'SPEC:P', '-SPEC:*', '!COMP:A/inf', 'PHI:DET:_', 'SEM:external', 'ARG', '-COMP:V', '-VAL', 'PF:kaske', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:C/fin', 'COMP:D/rel', '-SPEC:V', 'LF:watch', 'N', '-COMP:V', 'COMP:C', 'COMP:R', 'PF:kello', '-COMP:AUX', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
kello0-         {'LF:watch', '0', 'SPEC:D', '2SPEC', 'LANG:FI', 'PF:kello'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'LF:key', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:C/fin', 'LANG:EN', 'COMP:D/rel', '-SPEC:V', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-SEM:directional', 'PF:key', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
kirja           ['LANG:FI']
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-SPEC:R', 'PF:kirja', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:C/fin', 'COMP:D/rel', '-SPEC:V', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-SEM:directional', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'LF:book', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
knows           ['LANG:EN']
know-           {'PHI:GEN:_', 'COMP:P', '-SPEC:T/fin', 'PHI:NUM:_', 'LF:know', '-COMP:N', 'COMP:D', '-COMP:P', 'ASP', 'SPEC:P', 'LANG:EN', 'PF:know', 'PHI:DET:_', 'ARG', '-COMP:V', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE'}
kohti           {'PF:kohti', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:T/fin', 'LANG:FI', '!COMP:*', 'P', '-COMP:uWH', '-SPEC:C', 'PHI:NUM:_', 'COMP:D', '-COMP:N', '-SPEC:v', '-SPEC:P', '-SPEC:C/fin', 'SPEC:*', '-SPEC:V', 'PHI:DET:_', 'TAIL:V', '-SPEC:iWH', 'ARG', '-SPEC:Neg/fin', '-SPEC:FORCE', '-VAL', '-COMP:T', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', '-SPEC:iR', 'PHI:PER:_', 'adjoinable', '-SPEC:N', 'LF:towards', '-COMP:ADV'}
koko            {'-COMP:uR', '-COMP:T/fin', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', '!COMP:*', '-COMP:P', 'PF:koko', '-SPEC:P', '-SPEC:V', '!PROBE:N', '-SPEC:Neg/fin', '-ARG', 'COMP:N', 'TAIL:T', 'D', 'LF:all', '-SPEC:INF', 'adjoinable', '-SPEC:MA/lla', '-SPEC:C'}
kuka            ['LANG:FI']
KUKA            ['LANG:FI']
kuka-           {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:C/fin', 'PF:kuka', 'COMP:D/rel', '-SPEC:V', 'N', '-COMP:V', 'PHI', 'COMP:C', 'COMP:R', '-COMP:AUX', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'LF:who', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'-COMP:T/fin', '-COMP:D', 'PHI:GEN:_', '-COMP:WH', 'LANG:FI', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:N', 'PF:kuorsaa', 'ASP', 'SPEC:P', 'PHI:DET:_', 'LF:snore', 'ARG', '-COMP:V', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE'}
kysyi           ['LANG:EN']
kysy-           {'!PROBE:FORCE:OP:WH', 'LF:ask', 'PHI:GEN:_', '-SPEC:T/fin', 'PF:kysya', 'LANG:FI', 'PHI:NUM:_', '-COMP:N', 'ASP', 'SPEC:P', 'PHI:DET:_', 'ARG', 'SPEC:ADV', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:V', 'COMP:P', '-SPEC:FORCE'}
lahella         {'PHI:GEN:_', '-COMP:C/fin', 'P', '-COMP:uWH', 'COMP:D', '-COMP:N', 'LF:near', '-SPEC:v', '-SPEC:C/fin', 'ARG', '-SPEC:Neg/fin', 'VAL', '!SPEC:D', '-SPEC:ADV', '-COMP:A', 'PHI:PER:_', '-SPEC:iR', 'COMP:V', 'INF', '-COMP:ADV', 'PF:lahella', '-SPEC:C', '-COMP:T/fin', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', 'COMP:v', '-SPEC:P', 'SPEC:*', '-SPEC:V', 'PHI:DET:_', '-COMP:FORCE', '-SPEC:iWH', '!SPEC:*', '-COMP:T', '-SPEC:INF', 'adjoinable', '-SPEC:N', '!COMP:*', '-SPEC:FORCE'}
lahella         {'PF:lahella', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', 'P', '-COMP:uWH', '-SPEC:C', 'COMP:D', '-COMP:N', 'LF:near', '-SPEC:v', '-SPEC:P', '-SPEC:C/fin', 'SPEC:*', '-SPEC:V', 'PHI:DET:_', '-SPEC:iWH', 'ARG', '-SPEC:Neg/fin', '-SPEC:FORCE', '-VAL', '-COMP:T', '!COMP:D', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', '-SPEC:iR', 'PHI:PER:_', 'adjoinable', '-SPEC:N', '!COMP:*', '-COMP:ADV'}
lahella_1       {'PF:lahella', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', 'P', '-COMP:uWH', '-SPEC:C', 'COMP:D', '-COMP:N', 'LF:near', '-SPEC:v', '-SPEC:P', '-SPEC:C/fin', 'SPEC:*', '-SPEC:V', 'PHI:DET:_', '-SPEC:iWH', 'ARG', '-SPEC:Neg/fin', '-SPEC:FORCE', '-VAL', '-COMP:T', '!COMP:D', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', '-SPEC:iR', 'PHI:PER:_', 'adjoinable', '-SPEC:N', '!COMP:*', '-COMP:ADV'}
lahella_2       {'PHI:GEN:_', '-COMP:C/fin', 'P', '-COMP:uWH', 'COMP:D', '-COMP:N', 'LF:near', '-SPEC:v', '-SPEC:C/fin', 'ARG', '-SPEC:Neg/fin', 'VAL', '!SPEC:D', '-SPEC:ADV', '-COMP:A', 'PHI:PER:_', '-SPEC:iR', 'COMP:V', 'INF', '-COMP:ADV', 'PF:lahella', '-SPEC:C', '-COMP:T/fin', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', 'COMP:v', '-SPEC:P', 'SPEC:*', '-SPEC:V', 'PHI:DET:_', '-COMP:FORCE', '-SPEC:iWH', '!SPEC:*', '-COMP:T', '-SPEC:INF', 'adjoinable', '-SPEC:N', '!COMP:*', '-SPEC:FORCE'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'PHI:GEN:_', '-COMP:D', 'LF:leave', 'COMP:PP', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', 'PF:lahtea', '-COMP:N', 'ASP', 'SPEC:P', 'SPEC:D', '-COMP:MA/inf', 'PHI:DET:_', 'ARG', '-COMP:V', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'CLASS:INTR', '-SPEC:FORCE'}
lavano          ['LANG:IT']
lava-           {'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:D', '-COMP:N', 'LANG:IT', 'SPEC:P', 'ASP', 'PHI:DET:_', 'PF:lava', 'ARG', '-COMP:V', '-VAL', 'LF:wash', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', '!COMP:*', '-SPEC:FORCE'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-COMP:uR', '-COMP:T/fin', '-COMP:D', '-SPEC:T/fin', '!COMP:*', '-COMP:P', 'LANG:IT', '-SPEC:P', '-SPEC:V', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:Neg/fin', '-ARG', 'COMP:N', 'D', 'PF:le', '-SPEC:INF', 'adjoinable', 'LF:D', '-SPEC:C'}
leaves          ['LANG:EN']
leave           {'-COMP:T/fin', 'PHI:GEN:_', 'LF:leave', 'PF:leave', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:N', 'ASP', 'SPEC:P', 'LANG:EN', 'PHI:DET:_', 'ARG', '-COMP:V', '-VAL', '!SPEC:D', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE'}
leave-          {'-COMP:T/fin', 'PHI:GEN:_', 'LF:leave', 'PF:leave', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:N', 'ASP', 'SPEC:P', 'LANG:EN', 'PHI:DET:_', 'ARG', '-COMP:V', '-VAL', '!SPEC:D', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE'}
like-           {'LF:like', 'PHI:GEN:_', 'PF:like', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:N', 'ASP', 'SPEC:P', 'LANG:EN', 'PHI:DET:_', 'ARG', 'SPEC:ADV', '-VAL', '!COMP:D', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:V', 'COMP:P', '-SPEC:FORCE'}
likes           ['LANG:EN']
like            {'LF:like', 'PHI:GEN:_', 'PF:like', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:N', 'ASP', 'SPEC:P', 'LANG:EN', 'PHI:DET:_', 'ARG', 'SPEC:ADV', '-VAL', '!COMP:D', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:V', 'COMP:P', '-SPEC:FORCE'}
little          ['LANG:EN']
little-         {'0', '2SPEC', 'LANG:EN', 'PF:little-', 'SPEC:D', 'LF:little'}
lle             {'TAIL:V,+SEM:directional', '-COMP:T/fin', '+SEM:directional', 'PHI:GEN:_', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', 'P', '-COMP:uWH', '-SPEC:C', 'COMP:D', '-COMP:N', '-SPEC:v', '-SPEC:P', '-SPEC:C/fin', '-SPEC:*', '-SPEC:V', 'PHI:DET:_', '-SPEC:iWH', 'ARG', 'PF:P(lle)', '-SPEC:Neg/fin', 'LF:for', '-SPEC:FORCE', '-VAL', '-COMP:T', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', '-SPEC:iR', 'PHI:PER:_', 'adjoinable', '-SPEC:N', '!COMP:*', '-COMP:ADV'}
lla             {'-COMP:T/fin', 'PHI:GEN:_', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', 'P', '-COMP:uWH', '-SPEC:C', 'TAIL:*V', 'COMP:D', '-COMP:N', '-SPEC:v', '-SPEC:P', '-SPEC:C/fin', 'SPEC:*', '-SPEC:V', 'PHI:DET:_', '-SPEC:iWH', 'ARG', 'PF:P(lla)', '-SPEC:Neg/fin', '-SPEC:FORCE', 'LF:by', '-VAL', '-COMP:T', 'TAIL:T', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', '-SPEC:iR', 'PHI:PER:_', 'adjoinable', '-SPEC:N', '!COMP:*', '-COMP:ADV'}
Luisa           ['LANG:IT']
Luisa-          {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-SEM:directional', 'PF:Luisa', 'LF:Luisa', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'PHI:GEN:_', 'COMP:P', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', '-COMP:N', 'COMP:D', '-COMP:P', 'ASP', 'SPEC:P', 'LF:read', 'PHI:DET:_', 'ARG', '-COMP:V', 'PF:luke', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'LF:find', 'PHI:GEN:_', 'COMP:P', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', 'ASP:BOUNDED', '-COMP:N', 'COMP:D', '-COMP:P', 'PF:loyta-', 'ASP', 'SPEC:P', 'PHI:DET:_', 'ARG', '-COMP:V', '-VAL', '!COMP:D', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE'}
Mary            ['LANG:EN']
Mary-           {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:N', '-adjoinable', 'COMP:R/D', '-SPEC:C/fin', 'LANG:EN', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-SEM:directional', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'LF:Mary', 'COMP:uR', 'PF:Mary', '-SPEC:T/fin', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merjaahan       ['LANG:FI']
Merja-          {'-SPEC:R', 'LF:Merja', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'PF:Merja', '-COMP:WH', 'COMP:P', '-COMP:N', '-adjoinable', 'COMP:R/D', '-SPEC:C/fin', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-SEM:directional', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'COMP:uR', '-SPEC:T/fin', 'LANG:FI', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'-SPEC:Neg/fin', '-SPEC:FORCE', 'ADV', 'LF:by', 'LANG:FI', '-SPEC:T/fin', 'TAIL:T', 'COMP:v', 'MA/inf', 'adjoinable', 'SPEC:*', '-SPEC:N', 'PF:malla'}
meren           ['LANG:FI']
mere-           {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:C/fin', 'COMP:D/rel', '-SPEC:V', 'N', '-COMP:V', 'COMP:C', 'COMP:R', 'PF:meri', '-COMP:AUX', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'LF:ocean', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
mies            {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:C/fin', 'COMP:D/rel', '-SPEC:V', 'PF:mies', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-COMP:VA/inf', 'LF:man', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
mistake         {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:C/fin', 'LANG:EN', 'COMP:D/rel', 'LF:mistake', '-SPEC:V', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', 'PF:mistake', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', 'LF:what', '-SPEC:C/fin', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', 'PF:mika-', '-SPEC:FORCE'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'LF:move', '+SEM:directional', 'COMP:P', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', 'LANGN:EN', 'COMP:D', '-COMP:N', '-COMP:P', 'ASP', 'SPEC:P', 'PHI:DET:_', 'ARG', '-COMP:V', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'PF:move', 'SPEC:TO/inf', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE'}
mukavasti       ['LANG:EN']
mukava-         {'PF:mukavasti', '0', 'SPEC:D', '2SPEC', 'LANG:FI', 'LF:comfortably'}
must            {'COMP:Neg', 'COMP:T/prt', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', '!COMP:*', '-SPEC:N', '-adjoinable', '-SPEC:Neg', '-SPEC:v', 'COMP:v', 'T', 'LANG:EN', '!PROBE:V', 'FIN', 'SPEC:D', '-SPEC:V', 'PHI:DET:_', 'SPEC:*', 'ARG', '!SPEC:*', 'VAL', 'SPEC:FORCE', 'T/fin', '-SPEC:T/prt', 'PF:must', '-COMP:INF', 'SPEC:C/fin', 'COMP:V', 'SPEC:TO/inf', 'PHI:PER:_', 'LF:must', 'MODAL', '-SPEC:TO/inf', '-SPEC:C'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'-COMP:T/fin', 'COMP:P', 'PHI:GEN:_', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', 'LF:sell', 'ASP:BOUNDED', 'COMP:D', '-COMP:N', '-COMP:P', 'ASP', 'SPEC:P', 'PHI:DET:_', 'PF:myy', 'ARG', '-COMP:V', '-VAL', '-COMP:Neg/fin', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE'}
naki            ['LANG:FI']
nakee           ['LANG:FI']
nake-           {'PHI:GEN:_', 'COMP:P', '-COMP:MA/tta', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', 'ASP:BOUNDED', '-COMP:N', 'COMP:D', '-COMP:P', 'ASP', 'SPEC:P', '-COMP:ESSA/inf', 'PHI:DET:_', 'ARG', '-COMP:V', '-VAL', '-COMP:v', 'LF:see', 'V', 'PHI:PER:_', 'PF:nake', 'SPEC:TO/inf', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-COMP:MA/ssa', '-SPEC:FORCE'}
nayttaa         ['LANG:FI']
naytta-         {'!COMP:VA/inf', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', 'SEM:internal', 'ASP', 'SPEC:P', '-COMP:V', 'PF:naytta', '-ARG', 'VAL', '!SPEC:D', '-COMP:v', 'LF:seem', 'V', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE'}
ndo             {'LF:ing', '-COMP:T/fin', '-COMP:C/fin', 'VAL', '-SPEC:T/fin', '?ARG', 'PRG', 'COMP:v', 'PF:PRG', 'COMP:V', 'LANG:EN', '!COMP:*', '-SPEC:V', 'INF', '-COMP:FORCE'}
ne              {'-COMP:uR', 'PHI:NUM:PL', '-COMP:T/fin', '-COMP:D', 'PHI:PER:3', '-SPEC:T/fin', 'LANG:FI', '!COMP:*', '-COMP:P', '-SPEC:P', '-SPEC:V', '!PROBE:N', '-SPEC:Neg/fin', '-ARG', 'COMP:N', 'LF:those', 'D', '-SPEC:INF', 'PF:ne', 'adjoinable', '-SPEC:MA/lla', '-SPEC:C'}
niiden          ['LANG:EN']
nen             {'LF:ing', 'A', 'LANG:FI', 'TAIL:D', 'PF:a', 'SPEC:*', '-SPEC:D', '-SPEC:A', 'COMP:0'}
not             {'ARG', 'PHI:GEN:_', '-COMP:D', '-SPEC:T/fin', '-COMP:C', '-VAL', 'SPEC:*', 'PHI:NUM:_', '-COMP:FIN', 'POL:NEG', 'PHI:PER:_', 'LANG:EN', 'Neg', '!COMP:*', 'PHI:DET:_', 'PF:not', 'LF:not'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-COMP:T/fin', '-COMP:D', 'PHI:GEN:_', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', 'PF:nukku', '-COMP:N', 'ASP', 'SPEC:P', 'SPEC:D', '-COMP:MA/inf', 'PHI:DET:_', 'LF:sleep', 'ARG', '-COMP:V', '-VAL', '-COMP:T', '-COMP:Neg/fin', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'CLASS:INTR', '-SPEC:FORCE'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:C/fin', 'COMP:D/rel', 'LF:possessions', '-SPEC:V', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', 'PF:omaisuuden', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
operatoria      ['LANG:IT']
operatoria-     {'0', 'LF:operation', 'PF:operatoria', 'LANG:IT', 'SPEC:D', '2SPEC'}
ostaa           ['LANG:FI']
osta-           {'PF:osta', 'PHI:GEN:_', 'COMP:P', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', 'ASP:BOUNDED', '-COMP:N', 'COMP:D', '-COMP:P', 'ASP', 'SPEC:P', 'PHI:DET:_', 'ARG', '-COMP:V', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'LF:buy', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', 'LANG:FI', '-SPEC:T/fin', 'SEM:nonreferential', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:C/fin', 'COMP:D/rel', 'LF:day', '-SPEC:V', 'N', '-COMP:V', 'PF:paiva', 'COMP:C', 'COMP:R', '-COMP:AUX', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
past            {'-float', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', 'P', '-COMP:uWH', '-SPEC:C', 'COMP:D', 'LF:past', '-COMP:N', 'PF:past', '-SPEC:v', '-SPEC:P', '-SPEC:C/fin', 'LANG:EN', '-SPEC:*', '-SPEC:V', 'PHI:DET:_', '-SPEC:iWH', 'ARG', '-SPEC:Neg/fin', '-SPEC:FORCE', '-VAL', '-COMP:T', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', '-SPEC:iR', 'PHI:PER:_', 'adjoinable', '-SPEC:N', '!COMP:*', '-COMP:ADV'}
Pariisia        ['LANG:FI']
Pariisi-        {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', 'LF:Paris', '-SPEC:P', '-SPEC:C/fin', 'COMP:D/rel', '-SPEC:V', 'N', 'PF:Pariisi', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekkahan        ['LANG:FI']
PEKKA           ['LANG:EN']
Pekka-          {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:C/fin', 'COMP:D/rel', '-SPEC:V', 'PF:Pekka', 'LF:Pekka', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-SEM:directional', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'PF:pelkaa', 'PHI:GEN:_', 'COMP:P', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', '-COMP:N', 'COMP:D', '-COMP:P', 'LF:fear', 'ASP', 'SPEC:P', 'PHI:DET:_', 'ARG', '-COMP:V', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE'}
persuades       ['LANG:EN']
persuade-       {'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:N', 'ASP', 'SPEC:P', 'LANG:EN', 'PHI:DET:_', 'SEM:external', 'ARG', '-COMP:V', '-VAL', '-COMP:v', 'LF:persuade', 'PF:persuade', 'COMP:TO/inf', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', '!COMP:*', '-SPEC:FORCE'}
peruuntui       ['LANG:FI']
peruuntu-       {'PHI:GEN:_', 'LF:cancelled', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', '-COMP:N', 'ASP', 'SPEC:P', 'SPEC:D', 'PHI:DET:_', 'PF:peruuntui', 'ARG', 'SPEC:ADV', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:V', 'COMP:P', '-SPEC:FORCE'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'PHI:GEN:_', 'COMP:P', 'PF:pese_asp', 'LANG:FI', '-SPEC:T/fin', 'PHI:NUM:_', 'ASP:BOUNDED', '-COMP:N', 'COMP:D', '-COMP:P', 'ASP', 'SPEC:P', 'PHI:DET:_', 'ARG', '-COMP:V', '-VAL', 'LF:wash', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE'}
pese-           {'PHI:GEN:_', 'COMP:P', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', '-COMP:N', 'COMP:D', '-COMP:P', 'ASP', 'SPEC:P', 'PHI:DET:_', 'ARG', '-COMP:V', '-VAL', 'PF:pese', 'LF:wash', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE'}
petardi         {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', 'PF:petardi', 'LANG:IT', '-SPEC:C/fin', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'LF:firecrackers', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
pieni           ['LANG:FI']
pieni-          {'0', '2SPEC', 'LF:small', 'SPEC:D', 'PF:pieni-', 'LANG:FI'}
poikien         ['LANG:FI']
poika-          {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', 'LANG:FI', '-SPEC:T/fin', 'PF:poika', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:C/fin', 'COMP:D/rel', '-SPEC:V', 'LF:boy', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
puhelinta       ['LANG:FI']
puhelin-        {'0', 'PF:puhelin', 'SPEC:D', '2SPEC', 'LANG:FI', 'LF:phone'}
punainen        ['LANG:FI']
puna-           {'0', '2SPEC', 'SPEC:D', 'PF:puna-', 'LANG:FI', 'LF:red'}
presupposto     {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'LF:presupposition', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'PF:presupposto', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
primary         {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', 'PF:primary', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', 'LF:nurse', '-SPEC:FORCE'}
promises        ['LANG:EN']
promise-        {'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:D', '-COMP:N', 'SEM:internal', 'ASP', 'SPEC:P', 'LANG:EN', 'SPEC:D', 'PHI:DET:_', 'LF:promise', 'ARG', 'SPEC:ADV', '-COMP:V', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'PF:promise', 'COMP:P', '-SPEC:FORCE'}
problem         {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', 'LF:problem', '-COMP:C/fin', '-SPEC:uWH', '-COMP:WH', '-SPEC:T/fin', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:C/fin', 'LANG:EN', 'COMP:D/rel', '-SPEC:V', 'N', '-COMP:V', 'COMP:C', 'PF:problem', '-COMP:AUX', 'COMP:R', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
pyytaa          ['LANG:FI']
pyyta-          {'LF:ask', 'PHI:GEN:_', 'COMP:P', '-SPEC:T/fin', 'LANG:FI', 'PF:pyyda', 'PHI:NUM:_', '-COMP:N', 'COMP:D', '-COMP:P', 'ASP', 'SPEC:P', 'PHI:DET:_', 'SEM:external', 'ARG', '-COMP:V', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'-COMP:T/fin', '-COMP:D', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:N', 'ASP', 'SPEC:P', 'LANG:EN', 'LAMG:EN', 'SPEC:D', '-COMP:MA/inf', 'PHI:DET:_', 'ARG', 'SPEC:TO/inf', '-COMP:V', '-SPEC:FORCE', 'LF:race', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'PF:race', 'SPEC:ADV', 'COMP:P', '!COMP:*', 'CLASS:INTR'}
raukesi         ['LANG:FI']
raukea-         {'PHI:GEN:_', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', '-COMP:N', 'ASP', 'SPEC:P', 'PHI:DET:_', 'ARG', '-COMP:V', '-VAL', '-COMP:v', 'LF:terminate', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'PF:raukea', '-SPEC:FORCE'}
red             ['LANG:EN']
red-            {'0', 'PF:red', 'LANG:EN', '2SPEC', 'SPEC:D', 'LF:red'}
saavuttaa       ['LANG:FI']
saavutta-       {'PHI:GEN:_', 'COMP:P', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', 'LF:reach', 'ASP:BOUNDED', 'PF:saavutta-', '-COMP:N', 'COMP:D', '-COMP:P', 'ASP', 'SPEC:P', 'PHI:DET:_', 'ARG', '-COMP:V', '-VAL', '!COMP:D', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'-PROBE:FORCE:OP:WH', 'PHI:GEN:_', '-SPEC:T/fin', 'LF:say', 'LANG:FI', 'PHI:NUM:_', '-COMP:N', 'ASP', 'SPEC:P', 'SPEC:D', 'PHI:DET:_', 'ARG', '-COMP:V', 'COMP:VA/inf', 'COMP:FORCE', '-VAL', 'PF:sano-', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE'}
said            ['LANG:EN']
say'            {'PHI:GEN:_', '-SPEC:T/fin', 'LF:say', 'PHI:NUM:_', '-COMP:N', '!COMP:FORCE', 'ASP', 'SPEC:P', 'LANG:EN', 'PF:say', 'SPEC:D', 'PHI:DET:_', 'ARG', 'SPEC:ADV', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:V', 'COMP:P', '-SPEC:FORCE'}
say-            {'PHI:GEN:_', '-SPEC:T/fin', 'LF:say', 'PHI:NUM:_', '-COMP:N', '!COMP:FORCE', 'ASP', 'SPEC:P', 'LANG:EN', 'PF:say', 'SPEC:D', 'PHI:DET:_', 'ARG', 'SPEC:ADV', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:V', 'COMP:P', '-SPEC:FORCE'}
sala            ['LANG:IT']
sala-           {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', 'PF:sala', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'LF:room', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
scoppiati       ['LANG:IT']
scoppia-        {'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:N', 'LANG:IT', 'SPEC:P', 'ASP', 'PHI:DET:_', 'ARG', 'SPEC:ADV', '-COMP:V', 'LF:explode', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'PF:scoppia', 'COMP:P', '-SPEC:FORCE'}
sentenza        {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'LF:sentence', '-COMP:N', 'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'N', '-COMP:V', 'PF:sentenza', 'COMP:C', '-COMP:AUX', 'COMP:R', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
Seine           ['LANG:EN']
Seine-          {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', 'LF:Seine', '-SPEC:P', '-SPEC:C/fin', 'LANG:EN', 'COMP:D/rel', '-SPEC:V', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', 'PF:Seine', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
sembrano        ['LANG:IT']
sembra-         {'-COMP:D', '-SPEC:T/fin', '-COMP:N', 'SPEC:P', '!COMP:ARE/inf', 'LANG:EN', 'SPEC:D', '-ASP', '-COMP:V', '-ARG', '-VAL', '-COMP:v', 'LF:seem', 'PF:sembra', 'V', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE'}
sleeps          ['LANG:EN']
sleep           {'PHI:GEN:_', '-COMP:D', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:N', 'ASP', 'SPEC:P', 'LANG:EN', 'SPEC:D', '-COMP:MA/inf', 'PHI:DET:_', 'LF:sleep', 'ARG', 'SPEC:ADV', '-COMP:V', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'PF:sleep', 'COMP:P', 'CLASS:INTR', '-SPEC:FORCE'}
sleep-          {'PHI:GEN:_', '-COMP:D', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:N', 'ASP', 'SPEC:P', 'LANG:EN', 'SPEC:D', '-COMP:MA/inf', 'PHI:DET:_', 'LF:sleep', 'ARG', 'SPEC:ADV', '-COMP:V', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'PF:sleep', 'COMP:P', 'CLASS:INTR', '-SPEC:FORCE'}
solution        {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'LF:solution', '-COMP:N', 'COMP:R/D', 'PF:solution', '-SPEC:P', '-SPEC:C/fin', 'LANG:EN', 'COMP:D/rel', '-SPEC:V', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'PF:sopimus', '-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:C/fin', 'COMP:D/rel', '!COMP:A/inf', '-SPEC:V', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'LF:agreement', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
spinge          ['LANG:IT']
spinge-         {'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:N', '-COMP:P', 'LF:push', 'LANG:IT', 'SPEC:P', 'ASP', 'PF:spinge', 'PHI:DET:_', 'ARG', '-COMP:V', '-VAL', '!COMP:D', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', '-SPEC:FORCE'}
ssa             {'-COMP:T/fin', 'PHI:GEN:_', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', 'P', '-COMP:uWH', '-SPEC:C', 'COMP:D', '-COMP:N', 'PF:ssa', '-SPEC:v', '-SPEC:P', '-SPEC:C/fin', 'LF:in', 'SPEC:*', '-SPEC:V', 'PHI:DET:_', 'TAIL:V', 'COMP:n/MA', '-SPEC:iWH', 'ARG', '-SPEC:Neg/fin', '-SPEC:FORCE', '-VAL', '-COMP:T', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', '-SPEC:iR', 'PHI:PER:_', 'adjoinable', '-SPEC:N', '!COMP:*', '-COMP:ADV'}
stanno          ['LANG:IT']
sta-            {'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', 'LF:stay', 'COMP:PRG', '-COMP:N', 'SEM:internal', 'SPEC:P', 'LANG:EN', 'SPEC:D', 'PHI:DET:_', 'ARG', '-ASP', '-COMP:V', 'PF:sta', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE'}
sti             {'-SPEC:Neg/fin', '-ARG', 'ADV', 'LF:by', 'LANG:FI', '-SPEC:T/fin', 'TAIL:T', 'PF:sti', 'adjoinable', 'SPEC:*', '-SPEC:N', '!COMP:*', '-SPEC:FORCE'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:C/fin', 'COMP:D/rel', '-SPEC:V', 'LF:socks', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', 'PF:sukka-', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
surprised       ['LANG:EN']
surprise-       {'-COMP:T/fin', 'COMP:P', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:N', 'COMP:D', '-COMP:P', 'ASP', 'SPEC:P', 'LANG:EN', 'PHI:DET:_', 'LF:surprise', 'ARG', '-COMP:V', '-VAL', '-COMP:v', 'PF:surprise', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE'}
talo            {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'PF:talo', '-COMP:WH', 'LANG:FI', '-SPEC:T/fin', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:C/fin', 'COMP:D/rel', '-SPEC:V', 'LF:house', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
taloa           ['LANG:EN']
tama            ['LANG:EN']
tama-           {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', 'LF:this', '-SPEC:P', '-SPEC:C/fin', 'COMP:D/rel', 'PF:tama', '-SPEC:V', 'N', '-COMP:V', 'PHI', 'COMP:C', 'COMP:R', '-COMP:AUX', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'PHI:GEN:_', 'COMP:P', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', '-COMP:N', 'SPEC:P', 'SPEC:*', 'FIN', '!COMP:A/inf', 'PHI:DET:_', 'ARG', '-ASP', '-COMP:V', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'LF:must', 'MODAL', 'PF:taytyy', '-SPEC:FORCE'}
teki            ['LANG:FI']
teke-           {'PHI:GEN:_', 'COMP:P', '-COMP:A/inf', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', 'ASP:BOUNDED', '-COMP:N', 'COMP:D', '-COMP:P', 'ASP', 'SPEC:P', 'PHI:DET:_', 'ARG', '-COMP:V', '-VAL', '!COMP:D', '-COMP:v', 'PF:teke', 'V', 'LF:make', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE'}
that            {'COMP:C/fin', '-SPEC:*', 'LF:that', '-ARG', 'PF:that', '!PROBE:FIN', '-VAL', 'FORCE:DECL', 'LANG:EN', 'COMP:T/fin', 'FIN', '!COMP:*', 'FORCE'}
the             {'-COMP:uR', 'PHI:DET:DEF', '-COMP:T/fin', '-COMP:D', 'PHI:PER:3', '-SPEC:T/fin', '!COMP:*', 'PF:the', '-COMP:P', 'LF:the', '-SPEC:P', 'LANG:EN', '-SPEC:V', '!PROBE:N', '-SPEC:Neg/fin', '-ARG', 'PHI:NUM:SG', 'COMP:N', 'D', '-SPEC:INF', 'adjoinable', '-SPEC:MA/lla', '-SPEC:C'}
to              {'PHI:GEN:_', 'P', '-COMP:uWH', 'COMP:D', '-COMP:N', '-SPEC:v', '-SPEC:C/fin', 'LANG:EN', '-SPEC:*', 'ARG', '-SPEC:Neg/fin', '-VAL', 'LF:to', '-SPEC:ADV', '-COMP:A', 'PHI:PER:_', '-SPEC:iR', '-COMP:ADV', '-SPEC:C', '-float', '+SEM:directional', '-COMP:T/fin', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:to', '-SPEC:P', '-SPEC:V', 'PHI:DET:_', 'TAIL:V', '-SPEC:iWH', '-COMP:T', '-SPEC:INF', 'adjoinable', '-SPEC:N', '!COMP:*', '-SPEC:FORCE'}
to_inf          {'-COMP:T/fin', '-COMP:C/fin', '-SPEC:T/fin', 'COMP:v', '-SPEC:v', 'PF:TO/inf', 'LANG:EN', 'LF:TO/inf', '-SPEC:V', 'TO/inf', '-COMP:FORCE', '-VAL', '?ARG', 'COMP:V', 'adjoinable', '!COMP:*', 'INF'}
towards         {'-float', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', '!COMP:*', 'P', '-COMP:uWH', 'PF:towards', '-SPEC:C', 'COMP:D', '-COMP:N', '-SPEC:v', '-SPEC:P', '-SPEC:C/fin', 'LANG:EN', '-SPEC:*', '-SPEC:V', 'PHI:DET:_', 'TAIL:V', '-SPEC:iWH', 'ARG', '-SPEC:Neg/fin', '-SPEC:FORCE', '-VAL', '-COMP:T', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', '-SPEC:iR', 'PHI:PER:_', 'adjoinable', '-SPEC:N', 'LF:towards', '-COMP:ADV'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'PHI:GEN:_', 'COMP:P', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', '-COMP:N', 'COMP:D', '-COMP:P', 'ASP', 'SPEC:P', 'LF:nudge', 'PHI:DET:_', 'PF:tonaise', 'ARG', '-COMP:V', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE'}
tta             {'-COMP:T/fin', 'PHI:GEN:_', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', 'P', '-COMP:uWH', '-SPEC:C', 'COMP:D', 'LF:without', '-COMP:N', '-SPEC:v', '-SPEC:P', '-SPEC:C/fin', 'SPEC:*', '-SPEC:V', 'PHI:DET:_', 'COMP:n/MA', '-SPEC:iWH', 'ARG', '-SPEC:Neg/fin', '-SPEC:FORCE', 'ADV', '-VAL', '-COMP:T', 'PF:tta', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', '-SPEC:iR', 'PHI:PER:_', 'adjoinable', '-SPEC:N', '!COMP:*', '-COMP:ADV'}
tries           ['LANG:EN']
try-            {'!COMP:TO/inf', 'LF:try', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:N', 'SEM:internal', 'ASP', 'SPEC:P', 'LANG:EN', 'SPEC:D', 'PHI:DET:_', 'ARG', 'PF:try', '-COMP:V', '-VAL', '!COMP:-ARG', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE'}
verifiche       {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'LF:verification', '-COMP:N', 'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'N', '-COMP:V', 'COMP:C', 'COMP:R', '-COMP:AUX', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', 'PF:verifiche', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'PHI:GEN:_', '-COMP:D', 'PF:virtaa', 'LANG:FI', 'LF:flow', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:N', '!COMP:P', 'ASP', 'SPEC:P', 'SPEC:D', '-COMP:MA/inf', 'PHI:DET:_', 'ARG', '-COMP:V', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'CLASS:INTR', '-SPEC:FORCE'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'PF:volu', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:N', 'SEM:internal', 'ASP', 'SPEC:P', 'LANG:EN', '-SPEC:*', 'PHI:DET:_', 'ARG', 'LF:want', '-COMP:V', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', '!COMP:*', '-SPEC:FORCE'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'LF:win', 'PHI:GEN:_', 'COMP:P', '-SPEC:T/fin', 'PHI:NUM:_', 'ASP:BOUNDED', '-COMP:N', 'COMP:D', '-COMP:P', 'ASP', 'SPEC:P', 'LANG:EN', 'SEM:achievement', 'PHI:DET:_', 'ARG', '-COMP:V', 'PF:voitta', '-VAL', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE'}
wants           ['LANG:EN']
want-           {'PHI:GEN:_', 'COMP:P', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:N', 'COMP:D', '-COMP:P', 'ASP', 'SPEC:P', 'LANG:EN', 'PHI:DET:_', 'ARG', 'LF:want', 'SPEC:ADV', 'PF:want', '-VAL', '-COMP:v', 'V', 'COMP:TO/inf', 'PHI:PER:_', '-COMP:V', 'CLASS:TR', '!COMP:*', '-SPEC:TO/inf', '-SPEC:FORCE'}
what            ['LANG:EN']
what-           {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', '-COMP:N', 'COMP:R/D', 'LF:what', '-SPEC:C/fin', 'LANG:EN', 'PF:what', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:T/fin', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
which           {'-COMP:uR', '-COMP:T/fin', '-COMP:D', 'LF:which', '-SPEC:T/fin', 'D:WH', '!COMP:*', 'PF:which', '-COMP:P', '-SPEC:P', 'LANG:EN', '-SPEC:V', '!PROBE:N', '-SPEC:Neg/fin', '-ARG', 'COMP:N', 'D', '-SPEC:INF', 'adjoinable', 'OP:WH', '-SPEC:MA/lla', '-SPEC:C'}
who             ['LANG:EN']
who-            {'PF:who', '-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', '-COMP:N', 'COMP:R/D', '-SPEC:C/fin', 'LANG:EN', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'LF:who', 'COMP:uR', '-SPEC:T/fin', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
whether         {'COMP:C/fin', '-SPEC:*', 'Q', '-ARG', 'PF:whether', '!PROBE:FIN', 'OP:Q', '-VAL', 'OP:WH', 'LANG:EN', 'COMP:T/fin', 'FIN', '!COMP:*', 'FORCE', 'LF:whether'}
yrittaa         ['LANG:FI']
yritta-         {'LF:try', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:N', 'SEM:internal', 'ASP', 'SPEC:P', 'LANG:EN', 'SPEC:D', '!COMP:A/inf', 'PHI:DET:_', 'ARG', 'PF:yritta', '-COMP:V', '-VAL', '!COMP:-ARG', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE'}
mina            ['LANG:EN']
mina-           {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', 'PF:mina', '-COMP:N', 'COMP:R/D', '-SPEC:C/fin', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:T/fin', 'LANG:FI', 'LF:I', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
sina            ['LANG:EN']
sina-           {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', '-COMP:N', 'COMP:R/D', '-SPEC:C/fin', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:T/fin', 'LANG:FI', '-SPEC:P', 'COMP:D/rel', 'LF:you', '-SPEC:V', 'PF:sina', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
han             ['LANG:EN']
han-            {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', 'LF:s/he', '-COMP:*', '-COMP:N', 'COMP:R/D', '-SPEC:C/fin', 'PF:han', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:T/fin', 'LANG:FI', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', '-COMP:N', 'COMP:R/D', '-SPEC:C/fin', 'N', '-COMP:V', 'PF:me', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:T/fin', 'LANG:FI', 'LF:we', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
te              ['LANG:EN']
te-             {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', '-COMP:N', 'COMP:R/D', '-SPEC:C/fin', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:T/fin', 'LANG:FI', '-SPEC:P', 'COMP:D/rel', 'LF:you', '-SPEC:V', 'COMP:R', 'PF:te', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', '-COMP:N', 'COMP:R/D', '-SPEC:C/fin', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:T/fin', 'LANG:FI', 'LF:they', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-COMP:v', '-SPEC:INF', 'PF:he', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
se              ['LANG:EN']
sen             ['LANG:EN']
sita            ['LANG:EN']
se-             {'-COMP:uR', '-COMP:T/fin', 'LF:the/that', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', '!COMP:*', '-COMP:P', '-SPEC:P', '-SPEC:V', '!PROBE:N', '-SPEC:Neg/fin', '-ARG', 'COMP:N', 'PF:se', 'D', '-SPEC:INF', 'adjoinable', '-SPEC:MA/lla', '-SPEC:C'}
I               ['LANG:EN']
I-              {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', '-COMP:N', 'COMP:R/D', '-SPEC:C/fin', 'LANG:EN', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:T/fin', 'LF:I', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-COMP:v', 'PF:I', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
you             ['LANG:EN']
you-            {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', '-COMP:N', 'COMP:R/D', '-SPEC:C/fin', 'LANG:EN', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', 'PF:you', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:T/fin', '-SPEC:P', 'COMP:D/rel', 'LF:you', '-SPEC:V', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
he              ['LANG:EN']
he-             {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', '-COMP:N', 'COMP:R/D', '-SPEC:C/fin', 'LANG:EN', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:T/fin', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'LF:he', 'COMP:R', '-COMP:v', '-SPEC:INF', 'PF:he', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
she             ['LANG:EN']
she-            {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', '-COMP:N', 'COMP:R/D', '-SPEC:C/fin', 'LANG:EN', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:T/fin', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'PF:she', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', 'LF:she', '-SPEC:FORCE'}
we              ['LANG:EN']
we-             {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', '-COMP:N', 'COMP:R/D', '-SPEC:C/fin', 'LANG:EN', 'PF:we', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:T/fin', 'LF:we', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
you_pl          ['LANG:EN']
you_pl-         {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:C/fin', 'LANG:EN', 'COMP:D/rel', '-SPEC:V', 'PF:you_pl', 'N', '-COMP:V', 'PHI', 'COMP:C', 'COMP:R', '-COMP:AUX', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'LF:you_pl', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
they            ['LANG:EN']
they-           {'-SPEC:R', 'COMP:T/prt', 'PF:they', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', '-COMP:N', 'COMP:R/D', '-SPEC:C/fin', 'LANG:EN', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:T/fin', 'LF:they', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
it              ['LANG:EN']
it-             {'-COMP:uR', '-COMP:T/fin', '-COMP:D', '-SPEC:T/fin', '!COMP:*', '-COMP:P', '-SPEC:P', 'LANG:EN', '-SPEC:V', '!PROBE:N', 'PF:it', '-SPEC:Neg/fin', '-ARG', 'COMP:N', 'LF:it/that', 'D', '-SPEC:INF', 'adjoinable', '-SPEC:MA/lla', '-SPEC:C'}
io              ['LANG:EN']
io-             {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', '-COMP:N', 'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', 'PF:io', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:T/fin', 'LF:I', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
tu              ['LANG:EN']
tu-             {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', 'PF:tu', '-COMP:N', 'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:T/fin', '-SPEC:P', 'COMP:D/rel', 'LF:you', '-SPEC:V', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
lui             ['LANG:EN']
lui-            {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', '-COMP:N', 'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:T/fin', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'LF:he', 'COMP:R', 'PF:lui', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
lei             ['LANG:EN']
lei-            {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', '-COMP:N', 'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:T/fin', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'PF:lei', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', 'LF:she', '-SPEC:FORCE'}
noi             ['LANG:EN']
noi-            {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'PF:noi', '-COMP:WH', 'COMP:P', '-COMP:*', '-COMP:N', 'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:T/fin', 'LF:we', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
voi             ['LANG:EN']
voi-            {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', '-COMP:N', 'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', 'PF:voi', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'LF:you_pl', 'PHI_N', 'COMP:uR', '-SPEC:T/fin', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
loro            ['LANG:EN']
loro-           {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', '-COMP:N', 'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'PF:loro', 'COMP:uR', '-SPEC:T/fin', 'LF:they', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
mi              ['LANG:EN']
mi-             {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', '-COMP:N', 'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', 'PF:mi(cl)', 'N', '-COMP:V', 'CL', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:T/fin', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', 'LF:me', '-SPEC:FORCE'}
la              ['LANG:EN']
la-             {'-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', '-COMP:N', 'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', 'N', '-COMP:V', 'CL', 'COMP:C', '-COMP:AUX', 'LF:her', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:T/fin', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'PF:la(cl)', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
lo              ['LANG:EN']
lo-             {'-SPEC:R', 'LF:him', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', '-COMP:N', 'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', 'N', '-COMP:V', 'CL', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'PF:lo(cl)', 'COMP:uR', '-SPEC:T/fin', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
si              ['LANG:EN']
si-             {'-SPEC:R', 'COMP:T/prt', 'LF:3sg', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', '-COMP:N', 'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', 'N', 'SPEC:A', 'CAL:CL', '-COMP:V', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:uR', '-SPEC:T/fin', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-COMP:v', '-SPEC:INF', 'PF:si(cl)', '-SPEC:N', '-SPEC:FORCE'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-SPEC:R', 'LF:there', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:*', '-COMP:N', 'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', 'N', '-COMP:V', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PF:ci', 'PHI_N', 'COMP:uR', '-SPEC:T/fin', '-SPEC:P', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
[-n]            {'PHI:PER:1', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:SG', 'LANG:FI'}
[-t]            {'PHI:DET:DEF', 'inflectional', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:SG', 'LANG:FI'}
[-V]            {'inflectional', 'PHI', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:FI'}
[-mme]          {'PHI:PER:1', 'PHI:DET:DEF', 'inflectional', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI', 'LANG:FI'}
[-mme]          {'PHI:PER:1', 'PHI:DET:DEF', 'inflectional', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'LANG:FI'}
[-tte]          {'PHI:DET:DEF', 'inflectional', 'PHI:NUM:PL', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI', 'LANG:FI'}
[-vat]          {'inflectional', 'PHI:NUM:PL', 'PHI', 'PHI:PER:3', 'LANG:FI'}
[-ni]           {'PHI:PER:1', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:SG', 'LANG:FI'}
[-si]           {'PHI:DET:DEF', 'inflectional', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:SG', 'LANG:FI'}
[-nsa]          {'inflectional', 'PHI', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:FI'}
[-an]           {'PHI:DET:DEF', 'inflectional', 'PHI', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:FI'}
[-nne]          {'PHI:DET:DEF', 'inflectional', 'PHI:NUM:PL', 'PHI:PER:2', 'PHI:HUM:HUM', 'LANG:FI'}
[-s]            {'inflectional', 'PHI', 'PHI:PER:3', 'LANG:EN', 'PHI:NUM:SG', 'PHI:GEN:M', 'PHI:GEN:F'}
[-0]            {'PHI:PER:1', 'PHI:DET:DEF', 'inflectional', 'PHI:NUM:PL', 'PHI', 'PHI:PER:3', 'PHI:NUM:SG', 'PHI:PER:2', 'PHI:GEN:N', 'LANG:EN'}
[-o]            {'PHI:PER:1', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI', 'LANG:IT', 'PHI:NUM:SG'}
[-i]            {'PHI:DET:DEF', 'inflectional', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI', 'LANG:IT', 'PHI:NUM:SG'}
[-a]            {'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI', 'PHI:PER:3', 'PHI:NUM:SG'}
[-e]            {'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI', 'PHI:PER:3', 'PHI:NUM:SG'}
[-iamo]         {'PHI:PER:1', 'PHI:DET:DEF', 'inflectional', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI', 'LANG:IT'}
[-te]           {'PHI:DET:DEF', 'inflectional', 'PHI:NUM:PL', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI', 'LANG:IT'}
[-no]           {'PHI:DET:DEF', 'inflectional', 'PHI:NUM:PL', 'LANG:IT', 'PHI', 'PHI:PER:3'}
[-nom]          {'NOM', 'inflectional', 'LANG:EN', 'adjoinable', 'TAIL:FIN,ARG,VAL'}
[-par]          {'inflectional', 'PAR', 'TAIL:ARG,-VAL,!COMP:*', 'LANG:FI', 'adjoinable'}
[-gen]          {'inflectional', 'TAIL:INF,ARG', '-float', 'LANG:EN', 'GEN'}
gen             {'inflectional', 'TAIL:INF,ARG', '-float', 'LANG:EN', 'GEN'}
[-n_acc]        {'n-ACC', 'inflectional', 'TAIL:PHI', 'TAIL:*POL:NEG', 'LANG:FI', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable'}
[-t_acc]        {'inflectional', 'TAIL:*POL:NEG', 't-ACC', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable', 'LANG:FI'}
[-0_acc]        {'inflectional', '0_ACC', 'TAIL:*POL:NEG', 'LANG:FI', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable', 'TAIL:*PHI'}
asp             {'ASP:BOUNDED', 'inflectional', 'LANG:EN'}
[hAn]           {'inflectional', 'D:FAM', 'LANG:FI', 'OP:FAM', 'OVERT_SCOPE'}
[pA]            {'inflectional', 'OP:POL', 'D:POL', 'LANG:FI', 'OVERT_SCOPE'}
[kO]            {'D:WH', 'OP:WH', 'inflectional', 'FORCE:OP:WH', 'LANG:FI', 'OP:Q', 'OVERT_SCOPE'}
[foc]           {'OP:FOC', 'LANG:FI', 'inflectional'}
a'              {'PF:a', 'LF:A', 'a', 'LANG:X'}
b'              {'LANG:X', 'b', 'PF:b', 'LF:B'}
b''             {'b', '-COMP:c', 'LF:B', 'LANG:EN', 'PF:b'}
c''             {'SPEC:a', 'LANG:EN', 'LF:C', 'c', 'PF:c'}
c'              {'PF:c', 'LF:C', 'c', 'LANG:X'}
d'              {'LANG:', 'LF:D', 'd', 'PF:d'}
a''             ['LANG:EN']
x'              {'LANG:X', 'PF:x', 'LF:X', 'x'}
y'              {'y', 'PF:y', 'LF:Y', 'LANG:X'}
z'              {'LANG:X', 'PF:x', 'z', 'LF:Z'}
John'           {'LF:John', "N'", 'PF:John', 'LANG:X'}
admires'        {'LANG:X', 'PF:admires', 'LF:admires', "V'"}
admires''       {'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:N', 'PF:admires', 'ASP', 'SPEC:P', 'LANG:EN', 'SPEC:D', 'PHI:DET:_', 'ARG', 'SPEC:ADV', '-VAL', 'LF:admires', '-COMP:v', 'V', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:V', 'COMP:P', '-SPEC:FORCE'}
Mary'           {'LANG:X', "N'", 'PF:Mary', 'LF:mary'}
T/fin           {'COMP:T/prt', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', '-adjoinable', '-SPEC:Neg', '-SPEC:v', 'COMP:v', 'T', 'LANG:EN', '!PROBE:V', 'FIN', 'SPEC:D', '-SPEC:V', 'PHI:DET:_', 'SPEC:*', 'ARG', 'LF:T', '!SPEC:*', 'VAL', 'PF:T', 'T/fin', 'SPEC:FORCE', '-SPEC:T/prt', '-COMP:INF', 'SPEC:C/fin', 'PHI:PER:_', 'COMP:V', 'SPEC:TO/inf', '-SPEC:N', '!COMP:*', '-SPEC:TO/inf', '-SPEC:C'}
v               {'v', 'ARG', 'PHI:GEN:_', '!PROBE:V', 'PHI:NUM:_', '-VAL', '!COMP:*', 'LF:v', 'PHI:PER:_', 'COMP:V', 'ASP', 'LANG:EN', '-SPEC:N', 'SPEC:D', 'PHI:DET:_', 'PF:v'}
C/fin           {'C', '-COMP:C/fin', '-SPEC:T/fin', '!PROBE:FIN', '-COMP:T/prt', 'PF:C', '-SPEC:C/fin', 'LANG:EN', 'SPEC:*', 'FIN', 'COMP:T/fin', '-COMP:FORCE', 'C/fin', '-ARG', 'VAL', 'COMP:Neg/fin', 'LF:C/fin', '-SPEC:N', '!COMP:*'}
T               {'COMP:T/prt', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:v', 'T', 'LANG:EN', '!PROBE:V', 'FIN', 'SPEC:D', '-SPEC:V', 'PHI:DET:_', 'SPEC:*', '-SPEC:NEG', 'ARG', 'LF:T', 'VAL', 'PF:T', 'PHI:PER:_', 'COMP:V', '-COMP:NEG', '-SPEC:N', '!COMP:*', '-SPEC:FORCE'}
T/prt           {'COMP:T/prt', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', '!COMP:*', 'COMP:D', 'COMP:v', 'T', 'LANG:EN', '!PROBE:V', '-SPEC:C/fin', 'SPEC:D', 'SPEC:*', 'FIN', '-SPEC:V', 'PHI:DET:_', 'ARG', 'VAL', 'T/prt', 'PHI:PER:_', 'COMP:V', '-COMP:NEG', 'LF:T/prt', '-SPEC:N', 'PF:T/prt', '-SPEC:FORCE'}
a0              {'PF:A', 'LF:A', 'A', 'TAIL:D', '-adjoinable', 'LANG:EN', '-SPEC:D', '-SPEC:A', 'COMP:0'}
n               {'-SPEC:R', 'COMP:T/prt', 'PHI:GEN:_', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-COMP:N', 'COMP:R/D', '-SPEC:C/fin', 'LANG:EN', 'PF:n', 'ARG', 'n', 'N', '-COMP:V', 'COMP:C', 'VAL', '-COMP:AUX', '!SPEC:D', '-COMP:VA/inf', '-SPEC:ADV', '-COMP:A', 'PHI:PER:_', 'COMP:V', 'COMP:0', 'INF', 'COMP:uR', 'LF:n', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:v', '-SPEC:P', 'COMP:D/rel', 'SPEC:*', '-SPEC:V', 'PHI:DET:_', '!SPEC:*', 'COMP:R', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '!COMP:*', '-SPEC:FORCE'}
impass          {'v', 'ARG', 'PHI:GEN:_', '!PROBE:V', 'PF:impass', 'PHI:NUM:_', '-VAL', '!COMP:*', 'LF:impass', 'PHI:PER:_', 'COMP:V', 'ASP', 'LANG:EN', '-SPEC:N', 'SPEC:D', 'PHI:DET:_'}
cau             {'v', 'ARG', 'PHI:GEN:_', '!PROBE:V', 'PHI:NUM:_', '-VAL', '!COMP:*', 'LF:v/Cause', 'PHI:PER:_', 'COMP:V', 'PF:Cau', 'LANG:EN', 'ASP', '-SPEC:N', 'SPEC:D', 'PHI:DET:_'}
INF             {'-COMP:T/fin', '-COMP:C/fin', '-SPEC:T/fin', 'LF:INF', 'COMP:v', 'PF:INF', 'COMP:V', 'LANG:EN', '!COMP:*', '-SPEC:V', 'INF', '-COMP:FORCE'}
prtcpl          {'COMP:T/prt', '-COMP:T/fin', '-COMP:C/fin', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', '!COMP:*', 'COMP:D', 'COMP:v', 'T', 'LANG:EN', '-SPEC:C/fin', 'FIN', '!PROBE:V', 'SPEC:D', 'SPEC:*', '-SPEC:V', '-COMP:FORCE', 'PHI:DET:_', '-SPEC:NEG', 'ARG', 'VAL', 'T/prt', 'PHI:PER:_', 'COMP:V', '-COMP:NEG', 'LF:T/prt', '-SPEC:N', 'PF:T/prt', 'INF', '-SPEC:FORCE'}
TO/inf          {'-COMP:T/fin', '-COMP:C/fin', '-SPEC:T/fin', 'COMP:v', '-SPEC:v', 'PF:TO/inf', 'LANG:EN', 'LF:TO/inf', 'TO/inf', '-SPEC:V', '-COMP:FORCE', '-VAL', '?ARG', 'COMP:V', 'adjoinable', '!COMP:V', '!COMP:*', 'INF'}
A/inf           {'-COMP:T/fin', '-COMP:C/fin', '-SPEC:T/fin', 'LF:A/inf', 'A/inf', 'COMP:v', 'LANG:EN', 'SPEC:*', '-SPEC:V', '-COMP:FORCE', '-SPEC:Neg/fin', 'PF:A/inf', '?ARG', '?VAL', 'COMP:V', '!COMP:*', 'INF'}
ARE/inf         {'-COMP:T/fin', '-COMP:C/fin', '-SPEC:T/fin', '-adjoinable', 'COMP:v', 'PF:are', 'LANG:EN', 'SPEC:*', '-SPEC:V', '-COMP:FORCE', 'VAL', 'ARE/inf', '?ARG', 'LF:ARE/inf', 'COMP:V', '!COMP:*', 'INF'}
ESSA/inf        {'ESSA/inf', '-COMP:T/fin', '-COMP:C/fin', '-SPEC:T/fin', 'COMP:v', 'LANG:EN', 'SPEC:*', '-SPEC:V', '-COMP:FORCE', 'PF:essa', '-SPEC:Neg/fin', 'ADV', '?ARG', 'TAIL:T', '?VAL', 'COMP:V', 'LF:while', 'adjoinable', '-SPEC:N', '!COMP:*', 'INF', '-SPEC:FORCE'}
TUA/inf         {'-COMP:T/fin', '-COMP:C/fin', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:tua', 'COMP:v', 'LANG:EN', 'TUA/inf', 'SPEC:*', '-SPEC:V', 'PHI:DET:_', '-COMP:FORCE', 'ARG', '-SPEC:Neg/fin', '!SPEC:*', 'ADV', 'VAL', 'LF:after', 'TAIL:T', 'PHI:PER:_', 'COMP:V', 'adjoinable', '-SPEC:N', '!COMP:*', 'INF', '-SPEC:FORCE'}
VA/inf          {'-COMP:T/fin', '-COMP:C/fin', 'PHI:GEN:_', 'PF:vAn', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:v', 'LANG:EN', 'LF:VA', 'SPEC:*', '-SPEC:V', 'PHI:DET:_', '-COMP:FORCE', 'ARG', '!SPEC:*', 'VAL', 'VA/inf', 'PHI:PER:_', 'COMP:V', '-SPEC:N', '!COMP:*', 'INF'}
MA/ssa          {'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:v', 'MA/ssa', 'PF:massa', 'LANG:EN', '-SPEC:*', 'PHI:DET:_', 'TAIL:V', 'ARG', '-SPEC:Neg/fin', 'ADV', '-VAL', 'LF:in_doing', 'MA/inf', 'COMP:V', 'PHI:PER:_', 'adjoinable', '-SPEC:N', '-SPEC:FORCE'}
MA/tta          {'ARG', 'PHI:GEN:_', '-SPEC:Neg/fin', 'LF:without_doing', 'ADV', 'LANG:EN', '-VAL', '-SPEC:T/fin', 'PHI:NUM:_', 'TAIL:T', 'PF:matta', 'MA/inf', 'PHI:PER:_', 'adjoinable', '-SPEC:N', 'PHI:DET:_', '-SPEC:FORCE'}
MA/lla          {'PHI:GEN:_', 'LANG:EN', 'PF:malla', 'ARG', '-SPEC:Neg/fin', '-VAL', 'TAIL:T', 'MA/inf', 'COMP:V', 'PHI:PER:_', 'LF:by_doing', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:v', 'PHI:DET:_', 'ADV', 'adjoinable', '-SPEC:N', '-SPEC:FORCE'}
MA/inf          {'PHI:GEN:_', 'LANG:EN', 'ARG', '-SPEC:Neg/fin', '-VAL', 'MA/inf', 'COMP:V', 'PHI:PER:_', 'PF:maan', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:v', 'PHI:DET:_', 'TAIL:V', 'ADV', 'LF:to_do', 'adjoinable', '-SPEC:N', '-SPEC:FORCE'}
E/inf           {'-SPEC:Neg/fin', '-ARG', 'ADV', 'LF:by', '-VAL', 'LANG:FI', '-SPEC:T/fin', '-SPEC:N', 'TAIL:T', 'adjoinable', 'SPEC:*', 'PF:en', '-SPEC:FORCE'}
BE-             {'COMP:T/prt', 'PF:BE', '-COMP:T/fin', '-SPEC:T/fin', 'COPULA', '-COMP:N', 'ASP', 'SPEC:P', 'LANG:EN', 'SPEC:D', '-COMP:V', '-ARG', 'LF:BE', '-VAL', '-COMP:v', 'V', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', '!COMP:*', '-SPEC:FORCE'}
D               {'-COMP:uR', '-COMP:T/fin', '-COMP:D', '-SPEC:T/fin', '!COMP:*', '-COMP:P', '-SPEC:P', 'LANG:EN', '-SPEC:V', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:Neg/fin', '-ARG', 'COMP:N', 'D', '-SPEC:INF', 'adjoinable', 'PF:D', 'LF:D', '-SPEC:C'}
D/rel           {'LF:D/rel', '-COMP:uR', 'OP:REL', '-COMP:T/fin', '-COMP:D', '-COMP:C/fin', '-SPEC:T/fin', '!COMP:*', 'PF:D/rel', '-SPEC:P', 'LANG:EN', 'D/rel', '-SPEC:V', '!PROBE:N', 'OP:_', '-SPEC:Neg/fin', '-ARG', 'COMP:N', 'D', '-SPEC:INF', 'adjoinable', 'OP', '-SPEC:MA/lla', '-SPEC:C'}
P               {'-float', '-COMP:T/fin', 'PHI:GEN:_', 'PF:P', '-SPEC:T/fin', 'PHI:NUM:_', 'P', '-COMP:uWH', '-SPEC:C', 'COMP:D', '-COMP:N', '-SPEC:v', '-SPEC:P', '-SPEC:C/fin', 'LANG:EN', '-SPEC:*', '-SPEC:V', 'PHI:DET:_', '-SPEC:iWH', 'ARG', '-SPEC:Neg/fin', '-SPEC:FORCE', '-VAL', '-COMP:ADV', '-COMP:T', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', '-SPEC:iR', 'PHI:PER:_', 'adjoinable', '-SPEC:N', '!COMP:*', 'LF:P'}
pro             ['LANG:EN']
pro-            {'-SPEC:R', 'COMP:uR', 'COMP:T/prt', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:C/fin', 'LANG:EN', 'COMP:D/rel', '-SPEC:V', 'PF:(pro)', 'LF:pro', 'N', '-COMP:V', 'PHI', 'COMP:C', 'COMP:R', '-COMP:AUX', '-COMP:VA/inf', '-COMP:v', '-SPEC:ADV', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-SPEC:N', '-SPEC:FORCE'}
cl              {'RIGHT:ARE/inf', 'LEFT:D,CL', 'LEFT:T/fin', 'inflectional', 'LANG:EN', 'RIGHT:PRG', 'CL'}
inc             {'LANG:EN', 'inflectional', 'INCORPORATED'}
sg              {'LANG:EN', 'PHI:NUM:SG', 'inflectional'}
pl              {'LANG:EN', 'inflectional', 'PHI:NUM:PL'}
1p              {'LANG:EN', 'PHI:PER:1', 'inflectional'}
2p              {'LANG:EN', 'inflectional', 'PHI:PER:2'}
3p              {'PHI:PER:3', 'LANG:EN', 'inflectional'}
def             {'LANG:EN', 'PHI:DET:DEF', 'inflectional'}
indef           {'LANG:EN', 'inflectional', 'PHI:DET:INDEF'}
hum             {'LANG:EN', 'inflectional', 'PHI:HUM:HUM'}
nonhum          {'LANG:EN', 'inflectional', 'PHI:HUM:NONHUM'}
m               {'LANG:EN', 'PHI:GEN:M', 'inflectional'}
f               {'LANG:EN', 'inflectional', 'PHI:GEN:F'}
nom             {'NOM', 'LANG:EN', 'TAIL:FIN,!COMP:*,VAL', 'inflectional'}
acc             {'LANG:EN', 'inflectional', 'ACC', 'TAIL:v'}
dat             {'LANG:EN', 'inflectional', 'DAT', 'TAIL:v'}
V1              {'-SPEC:*', '-EDGE:*', 'LANG:EN', 'inflectional'}
uC/op           {'LANG:EN', 'inflectional', 'uC/op'}
wh              {'OP:_', 'inflectional', 'LANG:EN', 'OP:WH', 'D:WH'}
wh_             {'OP:_', 'inflectional', '-COMP:OP', 'LANG:EN', 'OP'}
top             {'LANG:EN', 'inflectional', 'D:TOP', 'OP:TOP'}
foc             {'OP:FOC', 'LANG:EN', 'D:FOC', 'inflectional'}
fam             {'LANG:EN', 'inflectional', 'OP:FAM', 'D:FAM'}
pol             {'LANG:EN', 'inflectional', 'OP:POL', 'D:POL'}
C/op            {'D:C/OP', 'LANG:EN', 'inflectional', 'OP:C/OP'}
d/rel           {'OP:_', 'inflectional', '-COMP:C/fin', 'OP:REL', 'LANG:EN', 'SPEC:D', 'adjoinable'}
Q               {'D:WH', 'OP:WH', 'inflectional', '-COMP:OP', 'LANG:EN', 'OP', 'OP:Q'}
