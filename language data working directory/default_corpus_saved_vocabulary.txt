ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'-SPEC:N', 'COMP:D', '-SPEC:iR', '-VAL', 'LANG:IT', '-COMP:A', '-SPEC:iWH', '-SPEC:V', 'PF:a', '-ARG', '-SPEC:C', 'P', '-SPEC:FORCE', '-COMP:N', 'LF:to', '-SPEC:v', 'TAIL:V', '-SPEC:*', 'COMP:ARE/inf', '!COMP:*', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:Neg/fin', '-COMP:ADV', '-COMP:uWH', '-COMP:T', '-SPEC:INF', '-COMP:T/fin', '-SPEC:ADV', 'adjoinable'}
a_D             {'LANG:EN', '-COMP:uR', '-SPEC:V', 'LF:D', '-SPEC:MA/lla', '-ARG', '-SPEC:C', '-COMP:P', '!COMP:*', '-SPEC:P', '-SPEC:T/fin', 'COMP:N', '-SPEC:Neg/fin', 'PF:D', '-COMP:D', '-SPEC:INF', '-COMP:T/fin', 'adjoinable', '!PROBE:N', 'D'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'V', 'COMP:D', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', '-COMP:v', '-COMP:Neg', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:P', '-COMP:N', 'PHI:PER:_', '!COMP:*', 'LF:admire', '-SPEC:Neg', '-SPEC:T/fin', 'SPEC:P', 'CLASS:TR', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:T/fin', 'PF:admire', 'ARG'}
admire*         ['LANG:EN']
T/fin*          {'COMP:v', '-SPEC:N', 'PHI:GEN:_', '-VAL', 'LF:T', 'LANG:EN', 'FIN', '!PROBE:V', '-SPEC:V', '-SPEC:T/prt', '-SPEC:C', 'NO_DET', '-adjoinable', 'COMP:V', 'PHI:PER:_', '-SPEC:v', '!COMP:*', 'COMP:T/prt', '-SPEC:Neg', '-SPEC:T/fin', '-COMP:INF', "PF:T/fin'", 'T/fin', 'SPEC:C/fin', '-SPEC:TO/inf', 'SPEC:D', 'SPEC:TO/inf', 'NO_NUMBER', '-COMP:T/fin', 'SPEC:FORCE', 'T', '!SPEC:*', 'ARG'}
v*              {'-SPEC:N', '!COMP:*', 'PHI:GEN:_', '-VAL', 'LANG:EN', 'ASP', 'v', 'SPEC:D', 'NO_NUMBER', 'ARG', 'LF:v', 'PF:v', 'PHI:PER:_', 'NO_DET', '!PROBE:V', 'COMP:V'}
admire**        ['LANG:EN']
T/fin**         {'COMP:v', 'PHI:GEN:_', '-VAL', 'LF:T', 'LANG:EN', '-SPEC:V', '-SPEC:T/prt', 'NO_DET', '-adjoinable', '-SPEC:v', '-SPEC:Neg', '-COMP:INF', 'NO_PERSON', 'T/fin', 'SPEC:C/fin', 'SPEC:D', 'SPEC:TO/inf', 'SPEC:FORCE', 'T', '!SPEC:*', '-SPEC:N', "PF:T/fin''", 'PHI:PER:3', '-SPEC:C', 'COMP:V', '!COMP:*', 'COMP:T/prt', '-SPEC:T/fin', '-SPEC:TO/inf', 'NO_NUMBER', '-COMP:T/fin', 'FIN', '!PROBE:V', 'ARG'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'V', 'COMP:D', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', 'LANG:IT', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', 'LF:admire', '-SPEC:T/fin', 'SPEC:P', 'PF:adora', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'ARG'}
antaa           ['LANG:FI']
anta-           {'V', 'CLASS:DITR', 'COMP:D', 'PHI:GEN:_', 'COMP:P', '+SEM:directional', 'SPEC:ADV', '-VAL', 'ASP', '-COMP:v', '-COMP:V', '-COMP:FIN', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', '!COMP:*', 'ASP:BOUNDED', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', 'PF:antaa', 'LANG:FI', 'ARG', 'LF:give'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'V', 'COMP:D', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', 'PF:ask', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', 'SEM:internal', '-COMP:N', '-SPEC:T/fin', 'SPEC:P', 'SPEC:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'LF:ask', 'ARG'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', '-SEM:directional', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:A', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', 'PF:avain', 'LF:key', 'COMP:uR', '-SPEC:INF', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV', 'LANG:FI'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', '-SEM:directional', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:A', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'PF:auto', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', 'LF:car', 'COMP:uR', '-SPEC:INF', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV', 'LANG:FI'}
bank            {'-SPEC:N', 'PF:bank1', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', 'LANG:EN', '-COMP:A', '-SPEC:uWH', 'LF:bank_inst', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF', 'COMP:uR', '-SPEC:R', 'FREQ:1', '-COMP:AUX', '-SPEC:ADV'}
bank            {'PF:bank2', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:ADV', 'LANG:EN', '-COMP:A', '-SPEC:uWH', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', 'FREQ:2', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', 'LF:bank_river'}
barn            {'-SPEC:N', 'PF:barn', 'SPEC:A', 'LF:barn', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', 'LANG:EN', '-COMP:A', '-SPEC:uWH', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV'}
city            {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', 'LANG:EN', '-COMP:A', '-SPEC:uWH', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'LF:city', 'PF:city', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV'}
che             ['LANG:IT']
che-            {'PF:che', '-COMP:C/fin', 'COMP:P', '-COMP:A', 'PHI_N', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'COMP:R', 'COMP:R/D', '-SPEC:P', 'COMP:uR', '-COMP:AUX', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', 'LF:who', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'LANG:IT', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
chiamato        ['LANG:IT']
chiamata-       {'V', 'PHI:GEN:_', 'LF:called', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', 'LANG:IT', '-COMP:v', 'PF:chiamato', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'ARG'}
claims          ['LANG:EN']
claim-          {'V', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', 'PF:claim', '-COMP:v', 'COMP:T/fin', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', '-SPEC:T/fin', 'LF:claim', 'SPEC:P', 'SPEC:D', 'SPEC:TO/inf', '-COMP:D', 'PHI:PER:_', 'PHI:NUM:_', 'ARG'}
danno           {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'LANG:IT', '-COMP:A', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'PF:danno', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', 'LF:damage', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'V', 'COMP:D', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', 'LANG:IT', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', 'SEM:internal', '-COMP:N', 'PF:detest', 'COMP:ARE/inf', 'LF:detest', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'ARG'}
devono          ['LANG:EN']
deva-           {'V', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:IT', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', 'PF:deva', 'SEM:internal', '-COMP:N', 'LF:must', 'COMP:ARE/inf', '-SPEC:T/fin', 'SPEC:P', '-ASP', 'SPEC:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'ARG'}
di              {'-SPEC:N', 'COMP:D', 'PHI:GEN:_', '-SPEC:iR', '-VAL', '-COMP:A', '-SPEC:iWH', '-SPEC:V', 'LANG:FI', 'P', '-SPEC:FORCE', '-adjoinable', '-SPEC:C', 'SPEC:*', '-COMP:N', '-SPEC:v', '!COMP:*', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:Neg/fin', '-COMP:ADV', '-COMP:uWH', '-COMP:T', '-SPEC:INF', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:ADV', 'LF:of', 'ARG', 'PF:di'}
does            {'COMP:v', 'PHI:GEN:_', 'LANG:EN', 'FIN', '-SPEC:V', 'PHI:GEN:M', '-SPEC:T/prt', '-adjoinable', 'PHI:DET:_', '-SPEC:v', '-SPEC:Neg', 'VAL', '-COMP:INF', 'T/fin', 'SPEC:C/fin', 'SPEC:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PF:does', 'SPEC:FORCE', 'T', '!SPEC:*', '-SPEC:N', 'PHI:PER:3', 'LF:does', 'COMP:Neg', '-SPEC:C', 'SPEC:*', 'COMP:V', '!COMP:*', 'PHI:NUM:SG', 'COMP:T/prt', '-SPEC:T/fin', '-SPEC:TO/inf', '-COMP:T/fin', 'PHI:NUM:_', 'PHI:GEN:F', '!PROBE:V', 'ARG'}
does_C          ['LANG:EN']
does-           {'COMP:v', 'PHI:GEN:_', 'LANG:EN', 'FIN', '-SPEC:V', 'PHI:GEN:M', '-SPEC:T/prt', '-adjoinable', 'PHI:DET:_', '-SPEC:v', '-SPEC:Neg', 'VAL', '-COMP:INF', 'T/fin', 'SPEC:C/fin', 'SPEC:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PF:does', 'SPEC:FORCE', 'T', '!SPEC:*', '-SPEC:N', 'PHI:PER:3', 'LF:does', 'COMP:Neg', '-SPEC:C', 'SPEC:*', 'COMP:V', '!COMP:*', 'PHI:NUM:SG', 'COMP:T/prt', '-SPEC:T/fin', '-SPEC:TO/inf', '-COMP:T/fin', 'PHI:NUM:_', 'PHI:GEN:F', '!PROBE:V', 'ARG'}
dorme           ['LANG:IT']
dorme-          {'CLASS:INTR', 'V', '-COMP:MA/inf', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', 'PF:dorme', '!SPEC:D', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:D', 'LF:sleep', '-COMP:D', 'PHI:PER:_', 'PHI:NUM:_', 'ARG'}
disappeared     ['LANG:EN']
disappear-      {'CLASS:INTR', 'V', '-COMP:MA/inf', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', 'PF:disappear', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:D', '-COMP:D', 'PHI:PER:_', 'PHI:NUM:_', 'LF:disappear', 'ARG'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'SPEC:D', '2SPEC', 'LF:easy', '0', 'LANG:EN', 'PF:easy'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'PF:ei', 'PHI:GEN:_', 'FIN', '%SPEC:INF', 'PHI:DET:_', 'SPEC:*', 'SEM:internal', 'NEG', 'PHI:PER:_', 'LF:neg', '!COMP:*', 'POL:NEG', 'COMP:T/prt', 'VAL', '-SPEC:T/fin', '!COMP:T', 'Neg/fin', '-SPEC:T', 'PHI:NUM:_', 'LANG:FI', '!SPEC:*', 'ARG'}
e-              {'PF:ei', 'PHI:GEN:_', 'FIN', '%SPEC:INF', 'PHI:DET:_', 'SPEC:*', 'SEM:internal', 'NEG', 'PHI:PER:_', 'LF:neg', '!COMP:*', 'POL:NEG', 'COMP:T/prt', 'VAL', '-SPEC:T/fin', '!COMP:T', 'Neg/fin', '-SPEC:T', 'PHI:NUM:_', 'LANG:FI', '!SPEC:*', 'ARG'}
elaa            ['LANG:FI']
ela-            {'CLASS:INTR', 'V', '-COMP:MA/inf', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', 'PF:elaa', '-SPEC:T/fin', 'SPEC:P', 'LF:live', 'SPEC:D', 'SPEC:TO/inf', '-COMP:D', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', 'ARG'}
etsii           ['LANG:FI']
etsi-           {'V', 'PF:etsi', 'LF:search', 'COMP:D', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:P', '-COMP:N', '!COMP:*', '!COMP:D', '-SPEC:T/fin', 'SPEC:P', 'CLASS:TR', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', 'ARG'}
etta            {'!COMP:*', '-SPEC:*', 'PF:etta', 'LF:that', '-VAL', 'FORCE', 'COMP:C/fin', '-SPEC:D', 'FIN', '!PROBE:FIN', '-ARG', 'LANG:FI', 'COMP:T/fin'}
fell            ['LANG:EN']
fell-           {'CLASS:INTR', 'V', '-COMP:MA/inf', 'PHI:GEN:_', 'PF:fell', 'COMP:P', 'SPEC:ADV', 'LF:fell', 'LANG:EN', '-VAL', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', '!SPEC:D', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:D', '-COMP:D', 'PHI:PER:_', 'PHI:NUM:_', 'ARG'}
flow'           {'V', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', '-COMP:v', 'LF:flow', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', '-SPEC:T/fin', 'PF:flow', 'SPEC:P', 'SPEC:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'ARG'}
from            {'-SPEC:N', 'PF:from', 'TAIL:V,+SEM:directional', '-float', 'COMP:D', 'PHI:GEN:_', '-SPEC:iR', '-VAL', 'LANG:EN', '-COMP:A', '-SPEC:iWH', '-SPEC:V', '-SPEC:C', 'P', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', 'PHI:PER:_', '-SPEC:v', '!COMP:*', '-SPEC:*', 'LF:from', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:Neg/fin', '-COMP:ADV', '-COMP:uWH', '-COMP:T', '-SPEC:INF', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:ADV', 'adjoinable', 'ARG'}
gave            ['LANG:EN']
give-           {'V', 'CLASS:DITR', 'COMP:D', 'PHI:GEN:_', 'COMP:P', '+SEM:directional', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', '-COMP:v', 'PF:give', '-COMP:V', '-COMP:FIN', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', '!COMP:*', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', 'ARG', 'LF:give'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', '-SEM:directional', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'LANG:IT', '-COMP:A', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PF:Giuseppe', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF', 'COMP:uR', '-SPEC:R', 'LF:Giuseppe', '-COMP:AUX', '-SPEC:ADV'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'V', 'LF:want', 'COMP:D', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', 'COMP:A/inf', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:P', 'SEM:internal', '-COMP:N', '!COMP:*', '-SPEC:*', 'ASP:BOUNDED', '-SPEC:T/fin', 'SPEC:P', 'PF:haluaa', 'CLASS:TR', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', 'ARG'}
hairitsee       ['LANG:FI']
hairitse-       {'V', 'COMP:D', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', '-COMP:v', 'LF:disturb', '-COMP:V', '-COMP:FIN', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:P', '-COMP:N', 'PHI:PER:_', '!COMP:*', '!COMP:D', '-SPEC:T/fin', 'SPEC:P', 'CLASS:TR', 'SPEC:D', 'SPEC:TO/inf', 'PF:hairitsee', 'PHI:NUM:_', 'LANG:FI', 'ARG'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'V', 'PF:ha', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:IT', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'SPEC:*', 'PHI:DET:_', 'SEM:internal', '-COMP:N', '-SPEC:T/fin', 'SPEC:P', '-ASP', 'SPEC:D', 'SPEC:TO/inf', 'COMP:T', 'PHI:PER:_', 'PHI:NUM:_', 'LF:have', 'ARG'}
horse           {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', 'LANG:EN', '-COMP:A', '-SPEC:uWH', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PF:horse', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', 'LF:horse', '-SPEC:P', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'CLASS:INTR', 'V', '-COMP:MA/inf', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', '-COMP:v', '-COMP:V', 'LANG:FI', 'PF:havia', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:D', '-COMP:D', 'PHI:PER:_', 'PHI:NUM:_', 'LF:disappear', 'ARG'}
Helsingissa     ['LANG:FI']
Helsinki        ['LANG:FI']
Helsinki-       {'-SPEC:N', 'SPEC:A', 'PF:Helsinki', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:A', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'LF:Helsinki', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV', 'LANG:FI'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'V', 'COMP:D', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', 'PF:ihaile-', '-COMP:v', '-COMP:V', '-COMP:FIN', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:P', '-COMP:N', '!COMP:*', 'LF:admire', '!COMP:D', '-SPEC:T/fin', 'SPEC:P', 'CLASS:TR', 'SPEC:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', 'ARG'}
il              {'-COMP:uR', 'LANG:IT', '-SPEC:V', '-SPEC:MA/lla', '-ARG', '-SPEC:C', '-COMP:P', 'LF:the', '!COMP:*', '-SPEC:P', '-SPEC:T/fin', 'COMP:N', '-SPEC:Neg/fin', 'PF:il', '-COMP:D', '-SPEC:INF', '-COMP:T/fin', 'adjoinable', '!PROBE:N', 'D'}
i               {'-COMP:uR', 'LANG:IT', '-SPEC:V', '-SPEC:MA/lla', '-ARG', '-SPEC:C', '-COMP:P', 'LF:the', '!COMP:*', '-SPEC:P', '-SPEC:T/fin', 'COMP:N', '-SPEC:Neg/fin', 'PF:il', '-COMP:D', '-SPEC:INF', '-COMP:T/fin', 'adjoinable', '!PROBE:N', 'D'}
in              {'-SPEC:N', 'COMP:D', 'PHI:GEN:_', '-SPEC:iR', '-VAL', 'LANG:IT', '-COMP:A', '-SPEC:iWH', '-SPEC:V', 'PF:in', '-SPEC:C', 'P', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', 'PHI:PER:_', '-SPEC:v', '!COMP:*', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:Neg/fin', '-COMP:ADV', '-COMP:uWH', '-COMP:T', '-SPEC:INF', 'LF:in', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:ADV', 'adjoinable', 'ARG'}
infermieri      {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'LANG:IT', 'LF:nurses', '-COMP:A', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', 'PF:infermieri', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV'}
is              ['LANG:EN']
be-             {'V', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', '-COMP:v', '-ARG', '-COMP:V', '-SPEC:FORCE', '-COMP:N', '!COMP:*', '-SPEC:T/fin', 'SPEC:P', 'PF:be', 'SPEC:D', 'SPEC:TO/inf', 'LF:be', 'COPULA', '-COMP:TO/inf'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'CLASS:INTR', 'V', '-COMP:MA/inf', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LF:sit', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:D', '-COMP:D', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', 'ARG', 'PF:istuu'}
John            ['LANG:EN']
John-           {'-COMP:C/fin', 'COMP:P', 'LANG:EN', 'LF:John', '-COMP:A', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', '-adjoinable', 'COMP:R', 'COMP:R/D', '-SPEC:P', 'COMP:uR', '-COMP:AUX', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-SEM:directional', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'PF:John', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'-COMP:C/fin', 'COMP:P', '-COMP:A', 'PHI_N', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'COMP:R', 'COMP:R/D', '-SPEC:P', 'COMP:uR', '-COMP:AUX', 'LANG:FI', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', 'LF:who', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'PF:joka', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', '-SEM:directional', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:A', '-SPEC:V', '-COMP:v', 'PF:Jukka', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF', 'COMP:uR', '-SPEC:R', 'LF:Jukka', '-COMP:AUX', '-SPEC:ADV', 'LANG:FI'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'V', 'PHI:GEN:_', 'LF:run', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', 'PF:juokse-', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', 'ARG'}
kaksi           {'NUM', 'TAIL:ARG,VAL,FIN', 'PHI:NUM:SG', 'PHI:GEN:_', 'LF:two', 'PF:kaksi', 'COMP:N', '-VAL', 'COMP:n', 'PHI:DET:_', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', 'SPEC:*', 'ARG'}
kaksi           {'NUM', 'TAIL:ARG,ASP:BOUNDED', 'LF:two', 'PF:kaksi', 'COMP:N', 'COMP:n', 'LANG:EN', 'TAIL:*POL:NEG', 'SPEC:*'}
kaksi_1         {'NUM', 'TAIL:ARG,VAL,FIN', 'PHI:NUM:SG', 'PHI:GEN:_', 'LF:two', 'PF:kaksi', 'COMP:N', '-VAL', 'COMP:n', 'PHI:DET:_', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', 'SPEC:*', 'ARG'}
kaksi_2         {'NUM', 'TAIL:ARG,ASP:BOUNDED', 'LF:two', 'PF:kaksi', 'COMP:N', 'COMP:n', 'LANG:EN', 'TAIL:*POL:NEG', 'SPEC:*'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'NUM', 'COMP:n', 'LF:two', 'PF:kaksi', 'COMP:N', 'LANG:FI', 'SPEC:*'}
kaupunkia       ['LANG:EN']
kaupunki        {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:A', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', '-COMP:P', 'COMP:R', '-COMP:N', 'COMP:R/D', 'LF:city', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', 'PF:kaupunki', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV', 'LANG:FI'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'V', 'PF:kaske', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', '-COMP:v', '!COMP:A/inf', 'SEM:external', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', 'LF:order', '-COMP:N', '-SPEC:*', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', 'ARG'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-SPEC:N', 'LF:watch', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:A', '-SPEC:V', '-COMP:v', '-COMP:V', 'PF:kello', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV', 'LANG:FI'}
kello0-         {'SPEC:D', 'LF:watch', '2SPEC', 'LANG:FI', '0', 'PF:kello'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', '-SEM:directional', 'COMP:P', '-COMP:WH', 'COMP:C', 'LANG:EN', '-COMP:A', '-SPEC:uWH', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', 'PF:key', '-SPEC:P', '-SPEC:T/fin', 'LF:key', 'COMP:uR', '-SPEC:INF', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV'}
kirja           ['LANG:FI']
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', '-SEM:directional', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:A', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'LF:book', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV', 'LANG:FI', 'PF:kirja'}
knows           ['LANG:EN']
know-           {'V', 'COMP:D', 'PHI:GEN:_', 'PF:know', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:P', '-COMP:N', '!COMP:*', '-SPEC:T/fin', 'SPEC:P', 'CLASS:TR', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'LF:know', 'ARG'}
kohti           {'-SPEC:N', 'COMP:D', 'PHI:GEN:_', '-SPEC:iR', 'LF:towards', '-VAL', '-COMP:A', 'PF:kohti', '-SPEC:iWH', '-SPEC:V', '-SPEC:C', 'P', '-SPEC:FORCE', 'SPEC:*', 'PHI:DET:_', '-COMP:N', 'PHI:PER:_', '-SPEC:v', '!COMP:*', 'TAIL:V', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:Neg/fin', '-COMP:ADV', '-COMP:uWH', '-COMP:T', '-SPEC:INF', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:ADV', 'LANG:FI', 'adjoinable', 'ARG'}
koko            {'-COMP:uR', '-SPEC:V', '-SPEC:MA/lla', '-ARG', '-SPEC:C', '-COMP:P', '!COMP:*', '-SPEC:P', '-SPEC:T/fin', 'LF:all', 'PF:koko', 'COMP:N', 'TAIL:T', '-SPEC:Neg/fin', '-COMP:D', '-SPEC:INF', '-COMP:T/fin', 'LANG:FI', 'adjoinable', '!PROBE:N', 'D'}
kuka            ['LANG:FI']
KUKA            ['LANG:FI']
kuka-           {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', 'LF:who', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:A', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'PF:kuka', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', 'PHI', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV', 'LANG:FI'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'V', 'PHI:GEN:_', 'COMP:P', '-COMP:WH', 'SPEC:ADV', '-VAL', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', '-COMP:D', 'LF:snore', 'PF:kuorsaa', '-COMP:T/fin', 'PHI:NUM:_', 'LANG:FI', 'ARG'}
kysyi           ['LANG:EN']
kysy-           {'V', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', '-COMP:v', '-COMP:V', 'PF:kysya', 'LANG:FI', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', '!PROBE:FORCE:OP:WH', 'PHI:PER:_', 'PHI:NUM:_', 'LF:ask', 'ARG'}
lahella         {'COMP:v', 'COMP:D', 'PHI:GEN:_', '-COMP:C/fin', '-SPEC:iR', '-COMP:A', 'PF:lahella', '-SPEC:V', 'P', '-SPEC:FORCE', 'PHI:DET:_', '-SPEC:v', 'INF', 'LF:near', 'VAL', '-SPEC:P', '-SPEC:Neg/fin', '-COMP:ADV', '-COMP:uWH', 'PHI:PER:_', 'LANG:FI', '!SPEC:*', '-SPEC:N', '-SPEC:iWH', '-SPEC:C', 'SPEC:*', 'COMP:V', '-COMP:N', '!COMP:*', '-SPEC:C/fin', '!SPEC:D', '-SPEC:T/fin', '-COMP:FORCE', '-COMP:T', '-SPEC:INF', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:ADV', 'adjoinable', 'ARG'}
lahella         {'-SPEC:N', 'COMP:D', 'PHI:GEN:_', '-SPEC:iR', '-VAL', '-COMP:A', 'PF:lahella', '-SPEC:iWH', '-SPEC:V', '-SPEC:C', 'P', '-SPEC:FORCE', 'SPEC:*', 'PHI:DET:_', '-COMP:N', 'PHI:PER:_', '-SPEC:v', '!COMP:*', '!COMP:D', 'LF:near', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:Neg/fin', '-COMP:ADV', '-COMP:uWH', '-COMP:T', '-SPEC:INF', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:ADV', 'LANG:FI', 'adjoinable', 'ARG'}
lahella_1       {'-SPEC:N', 'COMP:D', 'PHI:GEN:_', '-SPEC:iR', '-VAL', '-COMP:A', 'PF:lahella', '-SPEC:iWH', '-SPEC:V', '-SPEC:C', 'P', '-SPEC:FORCE', 'SPEC:*', 'PHI:DET:_', '-COMP:N', 'PHI:PER:_', '-SPEC:v', '!COMP:*', '!COMP:D', 'LF:near', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:Neg/fin', '-COMP:ADV', '-COMP:uWH', '-COMP:T', '-SPEC:INF', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:ADV', 'LANG:FI', 'adjoinable', 'ARG'}
lahella_2       {'COMP:v', 'COMP:D', 'PHI:GEN:_', '-COMP:C/fin', '-SPEC:iR', '-COMP:A', 'PF:lahella', '-SPEC:V', 'P', '-SPEC:FORCE', 'PHI:DET:_', '-SPEC:v', 'INF', 'LF:near', 'VAL', '-SPEC:P', '-SPEC:Neg/fin', '-COMP:ADV', '-COMP:uWH', 'PHI:PER:_', 'LANG:FI', '!SPEC:*', '-SPEC:N', '-SPEC:iWH', '-SPEC:C', 'SPEC:*', 'COMP:V', '-COMP:N', '!COMP:*', '-SPEC:C/fin', '!SPEC:D', '-SPEC:T/fin', '-COMP:FORCE', '-COMP:T', '-SPEC:INF', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:ADV', 'adjoinable', 'ARG'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'CLASS:INTR', 'V', '-COMP:MA/inf', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', 'COMP:PP', '-VAL', 'ASP', '-COMP:v', '-COMP:V', 'LF:leave', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', 'PF:lahtea', '-SPEC:T/fin', 'SPEC:P', 'SPEC:D', 'SPEC:TO/inf', '-COMP:D', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', 'ARG'}
lavano          ['LANG:IT']
lava-           {'V', 'COMP:D', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', 'LANG:IT', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', '!COMP:*', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', 'LF:wash', 'PF:lava', 'PHI:PER:_', 'PHI:NUM:_', 'ARG'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'PF:le', '-COMP:uR', 'LANG:IT', '-SPEC:V', 'LF:D', '-SPEC:MA/lla', '-ARG', '-SPEC:C', '-COMP:P', '!COMP:*', '-SPEC:P', '-SPEC:T/fin', 'COMP:N', '-SPEC:Neg/fin', '-COMP:D', '-SPEC:INF', '-COMP:T/fin', 'adjoinable', '!PROBE:N', 'D'}
leaves          ['LANG:EN']
leave           {'V', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', '-COMP:v', '-COMP:V', 'PF:leave', 'LF:leave', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', 'PHI:PER:_', '!SPEC:D', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:NUM:_', 'ARG'}
leave-          {'V', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', '-COMP:v', '-COMP:V', 'PF:leave', 'LF:leave', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', 'PHI:PER:_', '!SPEC:D', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:NUM:_', 'ARG'}
like-           {'V', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', 'PHI:PER:_', '!COMP:D', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', 'PHI:NUM:_', 'PF:like', 'LF:like', 'ARG'}
likes           ['LANG:EN']
like            {'V', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', 'PHI:PER:_', '!COMP:D', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', 'PHI:NUM:_', 'PF:like', 'LF:like', 'ARG'}
little          ['LANG:EN']
little-         {'SPEC:D', '2SPEC', 'PF:little-', 'LF:little', '0', 'LANG:EN'}
lle             {'-SPEC:N', 'TAIL:V,+SEM:directional', 'COMP:D', 'PHI:GEN:_', '-SPEC:iR', '+SEM:directional', '-VAL', '-COMP:A', '-SPEC:iWH', '-SPEC:V', 'LF:for', '-SPEC:C', 'P', '-SPEC:FORCE', 'PHI:DET:_', 'PF:P(lle)', '-COMP:N', '-SPEC:v', '!COMP:*', '-SPEC:*', 'PHI:PER:_', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:Neg/fin', '-COMP:ADV', '-COMP:uWH', '-COMP:T', '-SPEC:INF', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:ADV', 'LANG:FI', 'adjoinable', 'ARG'}
lla             {'-SPEC:N', 'COMP:D', 'PHI:GEN:_', '-SPEC:iR', '-VAL', '-COMP:A', '-SPEC:iWH', 'LF:by', '-SPEC:V', 'TAIL:*V', '-SPEC:C', 'P', '-SPEC:FORCE', 'SPEC:*', 'PHI:DET:_', '-COMP:N', 'PHI:PER:_', '-SPEC:v', '!COMP:*', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:Neg/fin', '-COMP:ADV', 'TAIL:T', '-COMP:uWH', '-COMP:T', '-SPEC:INF', 'PF:P(lla)', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:ADV', 'LANG:FI', 'adjoinable', 'ARG'}
Luisa           ['LANG:IT']
Luisa-          {'-SPEC:N', 'SPEC:A', 'LF:Luisa', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'PF:Luisa', '-SEM:directional', 'COMP:P', '-COMP:WH', 'COMP:C', 'LANG:IT', '-COMP:A', '-SPEC:uWH', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'V', 'COMP:D', 'LF:read', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:P', '-COMP:N', '!COMP:*', '-SPEC:T/fin', 'SPEC:P', 'CLASS:TR', 'PF:luke', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', 'ARG'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'V', 'PF:loyta-', 'COMP:D', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:P', '-COMP:N', '!COMP:*', '!COMP:D', 'ASP:BOUNDED', 'LF:find', '-SPEC:T/fin', 'SPEC:P', 'CLASS:TR', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', 'ARG'}
Mary            ['LANG:EN']
Mary-           {'-COMP:C/fin', 'COMP:P', 'LANG:EN', '-COMP:A', '-SPEC:V', '-COMP:v', 'LF:Mary', '-SPEC:FORCE', '-adjoinable', 'COMP:R', 'COMP:R/D', '-SPEC:P', 'COMP:uR', '-COMP:AUX', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', 'PF:Mary', '-SEM:directional', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merjaahan       ['LANG:FI']
Merja-          {'-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', '-adjoinable', 'COMP:R', 'COMP:R/D', '-SPEC:P', 'COMP:uR', 'PF:Merja', '-COMP:AUX', 'LANG:FI', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-SEM:directional', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', 'LF:Merja', '-SPEC:ADV'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'COMP:v', '-SPEC:N', 'ADV', '-SPEC:FORCE', '-SPEC:T/fin', '-SPEC:Neg/fin', 'TAIL:T', 'LF:by', 'adjoinable', 'PF:malla', 'LANG:FI', 'SPEC:*', 'MA/inf'}
meren           ['LANG:FI']
mere-           {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:A', '-SPEC:V', 'PF:meri', '-COMP:v', 'LF:ocean', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV', 'LANG:FI'}
mies            {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:A', 'PF:mies', '-SPEC:V', '-COMP:v', 'LF:man', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV', 'LANG:FI'}
mistake         {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', 'LANG:EN', '-COMP:A', '-SPEC:uWH', 'LF:mistake', 'PF:mistake', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:A', '-SPEC:V', '-COMP:v', 'LF:what', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'PF:mika-', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV', 'LANG:FI'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'V', 'COMP:D', 'PHI:GEN:_', 'COMP:P', '+SEM:directional', 'SPEC:ADV', '-VAL', 'ASP', '-COMP:v', 'LF:move', '-COMP:V', 'LANGN:EN', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:P', '-COMP:N', '!COMP:*', 'PF:move', '-SPEC:T/fin', 'SPEC:P', 'CLASS:TR', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'ARG'}
mukavasti       ['LANG:EN']
mukava-         {'SPEC:D', '2SPEC', '0', 'PF:mukavasti', 'LF:comfortably', 'LANG:FI'}
must            {'COMP:v', '-SPEC:N', 'PHI:GEN:_', 'LANG:EN', 'COMP:Neg', 'FIN', '!PROBE:V', 'MODAL', '-SPEC:V', '-SPEC:T/prt', '-SPEC:C', '-adjoinable', 'PHI:DET:_', 'COMP:V', 'PHI:PER:_', '-SPEC:v', 'LF:must', '!COMP:*', 'SPEC:*', 'COMP:T/prt', '-SPEC:Neg', 'PF:must', 'VAL', '-SPEC:T/fin', '-COMP:INF', '-SPEC:TO/inf', 'T/fin', 'SPEC:C/fin', 'SPEC:D', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:NUM:_', 'SPEC:FORCE', 'T', '!SPEC:*', 'ARG'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'V', 'COMP:D', 'PHI:GEN:_', 'LF:sell', '-COMP:Neg/fin', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:P', '-COMP:N', 'PHI:PER:_', '!COMP:*', 'PF:myy', 'ASP:BOUNDED', '-SPEC:T/fin', 'SPEC:P', 'CLASS:TR', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:NUM:_', 'LANG:FI', 'ARG'}
naki            ['LANG:FI']
nakee           ['LANG:FI']
nake-           {'V', 'COMP:D', 'PHI:GEN:_', 'PF:nake', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', '-COMP:ESSA/inf', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:P', '-COMP:MA/ssa', '-COMP:N', '!COMP:*', 'LF:see', 'ASP:BOUNDED', '-SPEC:T/fin', 'SPEC:P', 'CLASS:TR', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', '-COMP:MA/tta', 'ARG'}
nayttaa         ['LANG:FI']
naytta-         {'V', 'COMP:P', 'SPEC:ADV', 'ASP', '-COMP:v', '-ARG', 'PF:naytta', '-COMP:V', '-SPEC:FORCE', 'SEM:internal', '-COMP:N', 'LF:seem', '!COMP:VA/inf', 'VAL', '!SPEC:D', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', 'LANG:FI'}
ndo             {'COMP:v', '!COMP:*', 'INF', '-COMP:C/fin', 'PRG', 'VAL', '-SPEC:T/fin', '-COMP:FORCE', 'LANG:EN', '?ARG', '-SPEC:V', '-COMP:T/fin', 'PF:PRG', 'LF:ing', 'COMP:V'}
ne              {'PHI:PER:3', 'LF:those', '-COMP:uR', 'D', '-SPEC:V', '-SPEC:MA/lla', '-ARG', '-SPEC:C', '-COMP:P', '!COMP:*', '-SPEC:P', '-SPEC:T/fin', 'COMP:N', 'PHI:NUM:PL', '-SPEC:Neg/fin', '-COMP:D', '-SPEC:INF', '-COMP:T/fin', 'LANG:FI', 'adjoinable', '!PROBE:N', 'PF:ne'}
niiden          ['LANG:EN']
nen             {'-SPEC:A', '-SPEC:D', 'PF:a', 'COMP:0', 'LANG:FI', 'SPEC:*', 'LF:ing', 'TAIL:D', 'A'}
not             {'-COMP:C', '!COMP:*', 'PHI:GEN:_', 'POL:NEG', '-SPEC:T/fin', 'LF:not', 'PF:not', '-VAL', 'LANG:EN', 'PHI:DET:_', 'ARG', '-COMP:D', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:FIN', 'SPEC:*', 'Neg'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'CLASS:INTR', 'V', '-COMP:MA/inf', 'PHI:GEN:_', 'PF:nukku', '-COMP:Neg/fin', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', 'PHI:PER:_', '-SPEC:T/fin', 'SPEC:P', '-COMP:T', 'SPEC:D', 'SPEC:TO/inf', 'LF:sleep', '-COMP:D', '-COMP:T/fin', 'PHI:NUM:_', 'LANG:FI', 'ARG'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:A', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', 'LF:possessions', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', 'PF:omaisuuden', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV', 'LANG:FI'}
operatoria      ['LANG:IT']
operatoria-     {'SPEC:D', '2SPEC', 'LF:operation', '0', 'LANG:IT', 'PF:operatoria'}
ostaa           ['LANG:FI']
osta-           {'V', 'COMP:D', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', 'LF:buy', 'ARG', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:P', '-COMP:N', '!COMP:*', 'ASP:BOUNDED', '-SPEC:T/fin', 'SPEC:P', 'CLASS:TR', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', 'PF:osta'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:A', '-SPEC:V', '-COMP:v', '-COMP:V', 'LF:day', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', 'PF:paiva', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', 'SEM:nonreferential', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV', 'LANG:FI'}
past            {'-SPEC:N', '-float', 'COMP:D', 'PHI:GEN:_', '-SPEC:iR', '-VAL', 'LANG:EN', '-COMP:A', '-SPEC:iWH', '-SPEC:V', 'LF:past', '-SPEC:C', 'P', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', 'PHI:PER:_', '-SPEC:v', '!COMP:*', '-SPEC:*', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:Neg/fin', '-COMP:ADV', '-COMP:uWH', '-COMP:T', '-SPEC:INF', 'PF:past', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:ADV', 'adjoinable', 'ARG'}
Pariisia        ['LANG:FI']
Pariisi-        {'-SPEC:N', 'LF:Paris', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:A', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', 'PF:Pariisi', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV', 'LANG:FI'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekkahan        ['LANG:FI']
PEKKA           ['LANG:EN']
Pekka-          {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', '-SEM:directional', 'COMP:P', '-COMP:WH', 'COMP:C', 'PF:Pekka', '-COMP:A', '-SPEC:uWH', 'LF:Pekka', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV', 'LANG:FI'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'V', 'COMP:D', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'LF:fear', '-COMP:P', '-COMP:N', 'PHI:DET:_', '!COMP:*', 'PF:pelkaa', '-SPEC:T/fin', 'SPEC:P', 'CLASS:TR', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', 'ARG'}
persuades       ['LANG:EN']
persuade-       {'V', 'PF:persuade', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', 'LF:persuade', '-COMP:v', 'SEM:external', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', '!COMP:*', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', 'COMP:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'ARG'}
peruuntui       ['LANG:FI']
peruuntu-       {'LF:cancelled', 'V', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', '-SPEC:T/fin', 'SPEC:P', 'SPEC:D', 'SPEC:TO/inf', 'PF:peruuntui', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', 'ARG'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'V', 'COMP:D', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:P', '-COMP:N', '!COMP:*', 'ASP:BOUNDED', '-SPEC:T/fin', 'SPEC:P', 'CLASS:TR', 'SPEC:TO/inf', 'LF:wash', 'PHI:PER:_', 'PHI:NUM:_', 'PF:pese_asp', 'LANG:FI', 'ARG'}
pese-           {'V', 'COMP:D', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', 'PF:pese', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:P', '-COMP:N', '!COMP:*', '-SPEC:T/fin', 'SPEC:P', 'CLASS:TR', 'SPEC:TO/inf', 'LF:wash', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', 'ARG'}
petardi         {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', 'LF:firecrackers', 'LANG:IT', '-COMP:A', '-SPEC:uWH', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', 'PF:petardi', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV'}
pieni           ['LANG:FI']
pieni-          {'SPEC:D', 'PF:pieni-', '2SPEC', '0', 'LANG:FI', 'LF:small'}
poikien         ['LANG:FI']
poika-          {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:A', 'LF:boy', '-SPEC:V', 'PF:poika', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV', 'LANG:FI'}
puhelinta       ['LANG:FI']
puhelin-        {'SPEC:D', '2SPEC', 'PF:puhelin', '0', 'LANG:FI', 'LF:phone'}
punainen        ['LANG:FI']
puna-           {'SPEC:D', '2SPEC', 'LF:red', 'PF:puna-', '0', 'LANG:FI'}
presupposto     {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'LANG:IT', '-COMP:A', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', 'LF:presupposition', 'PF:presupposto', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV'}
primary         {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'LANG:IT', '-COMP:A', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', 'LF:nurse', 'PF:primary', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV'}
promises        ['LANG:EN']
promise-        {'V', 'COMP:D', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', 'SEM:internal', '-COMP:N', '-SPEC:T/fin', 'SPEC:P', 'SPEC:D', 'SPEC:TO/inf', 'PF:promise', 'LF:promise', 'PHI:PER:_', 'PHI:NUM:_', 'ARG'}
problem         {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:ADV', 'LANG:EN', '-COMP:A', '-SPEC:uWH', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF', 'COMP:uR', '-SPEC:R', 'PF:problem', '-COMP:AUX', 'LF:problem'}
pyytaa          ['LANG:FI']
pyyta-          {'V', 'COMP:D', 'PHI:GEN:_', 'LF:ask', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', '-COMP:v', 'SEM:external', 'PF:pyyda', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:P', '-COMP:N', '!COMP:*', '-SPEC:T/fin', 'SPEC:P', 'CLASS:TR', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', 'ARG'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'CLASS:INTR', 'V', '-COMP:MA/inf', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', 'LF:race', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', 'PHI:PER:_', '!COMP:*', 'PF:race', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:D', '-COMP:D', 'LAMG:EN', '-COMP:T/fin', 'PHI:NUM:_', 'ARG'}
raukesi         ['LANG:FI']
raukea-         {'V', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', 'LF:terminate', '-SPEC:T/fin', 'SPEC:P', 'PF:raukea', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', 'ARG'}
red             ['LANG:EN']
red-            {'SPEC:D', '2SPEC', 'LF:red', 'PF:red', '0', 'LANG:EN'}
saavuttaa       ['LANG:FI']
saavutta-       {'V', 'COMP:D', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:P', '-COMP:N', '!COMP:*', '!COMP:D', 'ASP:BOUNDED', '-SPEC:T/fin', 'SPEC:P', 'CLASS:TR', 'SPEC:TO/inf', 'PF:saavutta-', 'LF:reach', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', 'ARG'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'V', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', 'LF:say', 'COMP:VA/inf', 'ARG', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', 'COMP:FORCE', '-SPEC:T/fin', 'SPEC:P', 'SPEC:D', 'SPEC:TO/inf', '-PROBE:FORCE:OP:WH', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', 'PF:sano-'}
said            ['LANG:EN']
say'            {'V', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', 'LF:say', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', '!COMP:FORCE', '-SPEC:T/fin', 'SPEC:P', 'SPEC:D', 'PF:say', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'ARG'}
say-            {'V', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', 'LF:say', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', '!COMP:FORCE', '-SPEC:T/fin', 'SPEC:P', 'SPEC:D', 'PF:say', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'ARG'}
sala            ['LANG:IT']
sala-           {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', 'PF:sala', '-SPEC:uWH', 'LANG:IT', '-COMP:A', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', 'LF:room', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV'}
scoppiati       ['LANG:IT']
scoppia-        {'V', 'PHI:GEN:_', 'COMP:P', 'PF:scoppia', 'SPEC:ADV', '-VAL', 'ASP', 'LANG:IT', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', '-SPEC:T/fin', 'SPEC:P', 'LF:explode', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'ARG'}
sentenza        {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'LANG:IT', '-COMP:A', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', 'LF:sentence', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV', 'PF:sentenza'}
Seine           ['LANG:EN']
Seine-          {'-SPEC:N', 'SPEC:A', 'PF:Seine', 'LF:Seine', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', 'LANG:EN', '-COMP:A', '-SPEC:uWH', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV'}
sembrano        ['LANG:IT']
sembra-         {'V', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', '-COMP:v', '!COMP:ARE/inf', '-ARG', '-COMP:V', '-SPEC:FORCE', '-COMP:N', 'LF:seem', '-SPEC:T/fin', 'SPEC:P', '-ASP', 'SPEC:D', 'SPEC:TO/inf', '-COMP:D', 'PF:sembra'}
sleeps          ['LANG:EN']
sleep           {'CLASS:INTR', 'V', '-COMP:MA/inf', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:D', 'LF:sleep', '-COMP:D', 'PHI:PER:_', 'PHI:NUM:_', 'PF:sleep', 'ARG'}
sleep-          {'CLASS:INTR', 'V', '-COMP:MA/inf', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:D', 'LF:sleep', '-COMP:D', 'PHI:PER:_', 'PHI:NUM:_', 'PF:sleep', 'ARG'}
solution        {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', 'PF:solution', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', 'LANG:EN', '-COMP:A', '-SPEC:uWH', '-SPEC:V', 'LF:solution', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', 'PF:sopimus', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:A', '-SPEC:V', '!COMP:A/inf', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV', 'LANG:FI', 'LF:agreement'}
spinge          ['LANG:IT']
spinge-         {'V', 'PHI:GEN:_', 'SPEC:ADV', '-VAL', 'ASP', 'LANG:IT', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:P', '-COMP:N', '!COMP:D', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'PF:spinge', 'LF:push', 'ARG'}
ssa             {'-SPEC:N', 'COMP:D', 'PHI:GEN:_', 'COMP:n/MA', '-SPEC:iR', '-VAL', '-COMP:A', '-SPEC:iWH', '-SPEC:V', '-SPEC:C', 'P', '-SPEC:FORCE', 'SPEC:*', 'PHI:DET:_', '-COMP:N', 'PHI:PER:_', '-SPEC:v', '!COMP:*', 'TAIL:V', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:Neg/fin', '-COMP:ADV', '-COMP:uWH', '-COMP:T', 'PF:ssa', '-SPEC:INF', 'LF:in', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:ADV', 'LANG:FI', 'adjoinable', 'ARG'}
stanno          ['LANG:IT']
sta-            {'V', 'PHI:GEN:_', 'COMP:PRG', 'COMP:P', 'SPEC:ADV', 'PF:sta', '-VAL', 'LANG:EN', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', 'SEM:internal', '-COMP:N', 'LF:stay', '-SPEC:T/fin', 'SPEC:P', '-ASP', 'SPEC:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'ARG'}
sti             {'-SPEC:N', '!COMP:*', 'ADV', 'PF:sti', '-SPEC:FORCE', '-SPEC:T/fin', '-SPEC:Neg/fin', 'TAIL:T', 'LF:by', '-ARG', 'LANG:FI', 'SPEC:*', 'adjoinable'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:A', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', 'LF:socks', '-SPEC:P', '-SPEC:C/fin', '-SPEC:T/fin', 'PF:sukka-', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV', 'LANG:FI'}
surprised       ['LANG:EN']
surprise-       {'V', 'COMP:D', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', 'ARG', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:P', '-COMP:N', 'PHI:PER:_', '!COMP:*', 'PF:surprise', '-SPEC:T/fin', 'SPEC:P', 'CLASS:TR', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:NUM:_', 'LF:surprise'}
talo            {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:A', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', 'PF:talo', 'LF:house', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV', 'LANG:FI'}
taloa           ['LANG:EN']
tama            ['LANG:EN']
tama-           {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:A', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', 'PHI', 'LF:this', 'COMP:uR', '-SPEC:INF', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV', 'LANG:FI', 'PF:tama'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'PF:taytyy', 'V', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'FIN', 'MODAL', '!COMP:A/inf', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'SPEC:*', 'PHI:DET:_', '-COMP:N', 'LF:must', '-SPEC:T/fin', 'SPEC:P', '-ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', 'ARG'}
teki            ['LANG:FI']
teke-           {'V', 'COMP:D', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'LF:make', '-COMP:P', '-COMP:N', 'PHI:DET:_', '!COMP:*', '!COMP:D', 'ASP:BOUNDED', 'PF:teke', '-SPEC:T/fin', '-COMP:A/inf', 'SPEC:P', 'CLASS:TR', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', 'ARG'}
that            {'!COMP:*', '-SPEC:*', 'LF:that', '-VAL', 'LANG:EN', 'FORCE', 'PF:that', 'COMP:C/fin', 'COMP:T/fin', '!PROBE:FIN', '-ARG', 'FIN', 'FORCE:DECL'}
the             {'PHI:PER:3', 'PHI:DET:DEF', 'LANG:EN', '-COMP:uR', 'D', '-SPEC:V', 'PF:the', '-SPEC:MA/lla', '-ARG', '-SPEC:C', '-COMP:P', '!COMP:*', 'PHI:NUM:SG', '-SPEC:P', '-SPEC:T/fin', 'COMP:N', '-SPEC:Neg/fin', '-COMP:D', '-SPEC:INF', '-COMP:T/fin', 'adjoinable', '!PROBE:N', 'LF:the'}
to              {'-float', 'COMP:D', 'PHI:GEN:_', '-SPEC:iR', '-VAL', 'LANG:EN', '-COMP:A', 'PF:to', '-SPEC:V', 'P', '-SPEC:FORCE', 'PHI:DET:_', 'LF:to', '-SPEC:v', 'TAIL:V', '-SPEC:P', '-SPEC:Neg/fin', '-COMP:ADV', '-COMP:uWH', 'PHI:PER:_', '-SPEC:N', '+SEM:directional', '-SPEC:iWH', '-SPEC:C', '-COMP:N', '!COMP:*', '-SPEC:*', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:T', '-SPEC:INF', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:ADV', 'adjoinable', 'ARG'}
to_inf          {'COMP:v', '-COMP:C/fin', 'TO/inf', '-VAL', 'LANG:EN', '-SPEC:V', 'COMP:V', '-SPEC:v', 'LF:TO/inf', 'INF', '!COMP:*', '-SPEC:T/fin', '-COMP:FORCE', '?ARG', '-COMP:T/fin', 'PF:TO/inf', 'adjoinable'}
towards         {'-SPEC:N', '-float', 'COMP:D', 'PHI:GEN:_', '-SPEC:iR', 'LF:towards', 'LANG:EN', '-VAL', '-COMP:A', '-SPEC:iWH', '-SPEC:V', '-SPEC:C', 'P', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', 'PHI:PER:_', '-SPEC:v', '!COMP:*', 'TAIL:V', '-SPEC:*', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:Neg/fin', '-COMP:ADV', '-COMP:uWH', '-COMP:T', 'PF:towards', '-SPEC:INF', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:ADV', 'adjoinable', 'ARG'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'V', 'COMP:D', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', 'PF:tonaise', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:P', '-COMP:N', '!COMP:*', 'LF:nudge', '-SPEC:T/fin', 'SPEC:P', 'CLASS:TR', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', 'ARG'}
tta             {'-SPEC:N', 'PF:tta', 'ADV', 'COMP:D', 'PHI:GEN:_', 'COMP:n/MA', '-SPEC:iR', '-VAL', '-COMP:A', '-SPEC:iWH', '-SPEC:V', '-SPEC:C', 'P', '-SPEC:FORCE', 'SPEC:*', 'PHI:DET:_', '-COMP:N', 'PHI:PER:_', '-SPEC:v', '!COMP:*', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:Neg/fin', '-COMP:ADV', '-COMP:uWH', '-COMP:T', 'LF:without', '-SPEC:INF', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:ADV', 'LANG:FI', 'adjoinable', 'ARG'}
tries           ['LANG:EN']
try-            {'LF:try', 'V', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '!COMP:TO/inf', 'LANG:EN', 'PF:try', '-VAL', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', 'SEM:internal', '-COMP:N', '!COMP:-ARG', '-SPEC:T/fin', 'SPEC:P', 'SPEC:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'ARG'}
verifiche       {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', 'PF:verifiche', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'LANG:IT', '-COMP:A', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', 'LF:verification', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'CLASS:INTR', 'V', '-COMP:MA/inf', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'ASP', 'PF:virtaa', '-COMP:v', 'LF:flow', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', '-SPEC:T/fin', 'SPEC:P', '!COMP:P', 'SPEC:D', 'SPEC:TO/inf', '-COMP:D', 'PHI:PER:_', 'PHI:NUM:_', 'LANG:FI', 'ARG'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'LF:want', 'V', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', 'SEM:internal', '-COMP:N', '!COMP:*', '-SPEC:*', 'PF:volu', '-SPEC:T/fin', 'SPEC:P', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'ARG'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'V', 'COMP:D', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', 'PF:voitta', 'ARG', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:P', '-COMP:N', '!COMP:*', 'ASP:BOUNDED', '-SPEC:T/fin', 'SPEC:P', 'CLASS:TR', 'SPEC:TO/inf', 'SEM:achievement', 'PHI:PER:_', 'PHI:NUM:_', 'LF:win'}
wants           ['LANG:EN']
want-           {'V', 'LF:want', 'COMP:D', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:P', '-COMP:N', '!COMP:*', 'PF:want', '-SPEC:T/fin', '-SPEC:TO/inf', 'SPEC:P', 'CLASS:TR', 'COMP:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'ARG'}
what            ['LANG:EN']
what-           {'-COMP:C/fin', 'COMP:P', 'LANG:EN', '-COMP:A', 'PHI_N', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'COMP:R', 'COMP:R/D', '-SPEC:P', 'PF:what', 'COMP:uR', '-COMP:AUX', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'LF:what', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
which           {'LANG:EN', 'OP:WH', '-COMP:uR', '-SPEC:V', '!PROBE:N', '-SPEC:MA/lla', '-ARG', '-SPEC:C', '-COMP:P', '!COMP:*', '-SPEC:P', '-SPEC:T/fin', 'COMP:N', '-SPEC:Neg/fin', 'D:WH', '-COMP:D', '-SPEC:INF', 'adjoinable', '-COMP:T/fin', 'PF:which', 'LF:which', 'D'}
who             ['LANG:EN']
who-            {'-COMP:C/fin', 'COMP:P', 'LANG:EN', '-COMP:A', 'PHI_N', 'PF:who', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'COMP:R', 'COMP:R/D', '-SPEC:P', 'COMP:uR', '-COMP:AUX', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', 'LF:who', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
whether         {'!COMP:*', '-SPEC:*', 'LF:whether', 'Q', '-VAL', 'LANG:EN', 'FORCE', 'OP:WH', 'COMP:C/fin', '!PROBE:FIN', '-ARG', 'PF:whether', 'FIN', 'COMP:T/fin', 'OP:Q'}
yrittaa         ['LANG:FI']
yritta-         {'LF:try', 'V', 'PF:yritta', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', '-COMP:v', '!COMP:A/inf', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', 'SEM:internal', '-COMP:N', '!COMP:-ARG', '-SPEC:T/fin', 'SPEC:P', 'SPEC:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'ARG'}
mina            ['LANG:EN']
mina-           {'-COMP:C/fin', 'COMP:P', '-COMP:A', 'PHI_N', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'COMP:R', 'COMP:R/D', '-SPEC:P', 'COMP:uR', 'LF:I', '-COMP:AUX', 'LANG:FI', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'PF:mina', 'COMP:C', '-SPEC:uWH', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
sina            ['LANG:EN']
sina-           {'-COMP:C/fin', 'COMP:P', '-COMP:A', 'PHI_N', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'COMP:R', 'COMP:R/D', '-SPEC:P', 'COMP:uR', '-COMP:AUX', 'LANG:FI', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'PF:sina', '-COMP:V', '-COMP:N', 'LF:you', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
han             ['LANG:EN']
han-            {'LF:s/he', '-COMP:C/fin', 'COMP:P', '-COMP:A', 'PHI_N', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'PF:han', 'COMP:R', 'COMP:R/D', '-SPEC:P', 'COMP:uR', '-COMP:AUX', 'LANG:FI', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-COMP:C/fin', 'COMP:P', '-COMP:A', 'PHI_N', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'COMP:R', 'COMP:R/D', '-SPEC:P', 'PF:me', 'COMP:uR', '-COMP:AUX', 'LANG:FI', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:V', '-COMP:N', 'LF:we', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
te              ['LANG:EN']
te-             {'-COMP:C/fin', 'COMP:P', '-COMP:A', 'PHI_N', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'COMP:R', 'COMP:R/D', '-SPEC:P', 'PF:te', 'COMP:uR', '-COMP:AUX', 'LANG:FI', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:V', '-COMP:N', 'LF:you', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'-COMP:C/fin', 'COMP:P', '-COMP:A', 'PHI_N', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'COMP:R', 'LF:they', 'COMP:R/D', '-SPEC:P', 'COMP:uR', '-COMP:AUX', 'LANG:FI', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'PF:he', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
se              ['LANG:EN']
sen             ['LANG:EN']
sita            ['LANG:EN']
se-             {'-COMP:uR', '-SPEC:V', 'PF:se', '-SPEC:MA/lla', '-ARG', '-SPEC:C', '-COMP:P', '!COMP:*', '-SPEC:P', '-SPEC:T/fin', 'COMP:N', '-SPEC:Neg/fin', 'LF:the/that', '-COMP:D', '-SPEC:INF', '-COMP:T/fin', 'LANG:FI', 'adjoinable', '!PROBE:N', 'D'}
I               ['LANG:EN']
I-              {'-COMP:C/fin', 'COMP:P', 'LANG:EN', '-COMP:A', 'PHI_N', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'COMP:R', 'COMP:R/D', '-SPEC:P', 'COMP:uR', 'LF:I', '-COMP:AUX', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'PF:I', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
you             ['LANG:EN']
you-            {'-COMP:C/fin', 'COMP:P', 'LANG:EN', '-COMP:A', 'PHI_N', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'COMP:R', 'COMP:R/D', 'PF:you', '-SPEC:P', 'COMP:uR', '-COMP:AUX', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:V', '-COMP:N', 'LF:you', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
he              ['LANG:EN']
he-             {'-COMP:C/fin', 'COMP:P', 'LANG:EN', '-COMP:A', 'PHI_N', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'COMP:R', 'COMP:R/D', '-SPEC:P', 'COMP:uR', 'LF:he', '-COMP:AUX', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'PF:he', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
she             ['LANG:EN']
she-            {'-COMP:C/fin', 'COMP:P', 'LANG:EN', '-COMP:A', 'PHI_N', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'COMP:R', 'PF:she', 'COMP:R/D', '-SPEC:P', 'LF:she', 'COMP:uR', '-COMP:AUX', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
we              ['LANG:EN']
we-             {'-COMP:C/fin', 'COMP:P', 'LANG:EN', '-COMP:A', 'PHI_N', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'COMP:R', 'COMP:R/D', 'PF:we', '-SPEC:P', 'COMP:uR', '-COMP:AUX', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:V', '-COMP:N', 'LF:we', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
you_pl          ['LANG:EN']
you_pl-         {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', 'LF:you_pl', 'LANG:EN', '-COMP:A', '-SPEC:uWH', '-SPEC:V', '-COMP:v', '-COMP:V', 'PF:you_pl', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', 'PHI', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV'}
they            ['LANG:EN']
they-           {'-COMP:C/fin', 'COMP:P', 'LANG:EN', '-COMP:A', 'PHI_N', 'PF:they', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'COMP:R', 'LF:they', 'COMP:R/D', '-SPEC:P', 'COMP:uR', '-COMP:AUX', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
it              ['LANG:EN']
it-             {'LANG:EN', '-COMP:uR', 'PF:it', '-SPEC:V', '-SPEC:MA/lla', '-ARG', '-SPEC:C', '-COMP:P', '!COMP:*', '-SPEC:P', '-SPEC:T/fin', 'COMP:N', '-SPEC:Neg/fin', '-COMP:D', '-SPEC:INF', 'adjoinable', '-COMP:T/fin', 'LF:it/that', '!PROBE:N', 'D'}
io              ['LANG:EN']
io-             {'-COMP:C/fin', 'COMP:P', '-COMP:A', 'PHI_N', 'PF:io', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'COMP:R', 'COMP:R/D', '-SPEC:P', 'COMP:uR', 'LF:I', '-COMP:AUX', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'LANG:IT', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
tu              ['LANG:EN']
tu-             {'-COMP:C/fin', 'COMP:P', '-COMP:A', 'PHI_N', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'PF:tu', 'COMP:R', 'COMP:R/D', '-SPEC:P', 'COMP:uR', '-COMP:AUX', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'LANG:IT', '-COMP:V', '-COMP:N', 'LF:you', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
lui             ['LANG:EN']
lui-            {'-COMP:C/fin', 'COMP:P', 'PF:lui', '-COMP:A', 'PHI_N', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'COMP:R', 'COMP:R/D', '-SPEC:P', 'COMP:uR', 'LF:he', '-COMP:AUX', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'LANG:IT', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
lei             ['LANG:EN']
lei-            {'-COMP:C/fin', 'COMP:P', '-COMP:A', 'PHI_N', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'COMP:R', 'COMP:R/D', '-SPEC:P', 'PF:lei', 'LF:she', 'COMP:uR', '-COMP:AUX', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'LANG:IT', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
noi             ['LANG:EN']
noi-            {'-COMP:C/fin', 'COMP:P', '-COMP:A', 'PHI_N', '-SPEC:V', 'PF:noi', '-COMP:v', '-SPEC:FORCE', 'COMP:R', 'COMP:R/D', '-SPEC:P', 'COMP:uR', '-COMP:AUX', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'LANG:IT', '-COMP:V', '-COMP:N', 'LF:we', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
voi             ['LANG:EN']
voi-            {'-COMP:C/fin', 'COMP:P', '-COMP:A', 'PHI_N', '-SPEC:V', '-COMP:v', 'PF:voi', '-SPEC:FORCE', 'COMP:R', 'COMP:R/D', '-SPEC:P', 'COMP:uR', '-COMP:AUX', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'COMP:C', 'LF:you_pl', '-SPEC:uWH', 'LANG:IT', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
loro            ['LANG:EN']
loro-           {'-COMP:C/fin', 'COMP:P', '-COMP:A', 'PHI_N', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'COMP:R', 'LF:they', 'COMP:R/D', '-SPEC:P', 'COMP:uR', '-COMP:AUX', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'LANG:IT', '-COMP:V', '-COMP:N', 'PF:loro', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
mi              ['LANG:EN']
mi-             {'-COMP:C/fin', 'COMP:P', '-COMP:A', 'PHI_N', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'LF:me', 'COMP:R', 'COMP:R/D', '-SPEC:P', 'COMP:uR', 'PF:mi(cl)', '-COMP:AUX', 'CL', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'LANG:IT', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
la              ['LANG:EN']
la-             {'LF:her', '-COMP:C/fin', 'COMP:P', '-COMP:A', 'PHI_N', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'COMP:R', 'PF:la(cl)', 'COMP:R/D', '-SPEC:P', 'COMP:uR', '-COMP:AUX', 'CL', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'LANG:IT', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
lo              ['LANG:EN']
lo-             {'-COMP:C/fin', 'COMP:P', '-COMP:A', 'PHI_N', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'COMP:R', 'COMP:R/D', '-SPEC:P', 'COMP:uR', '-COMP:AUX', 'CL', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', 'PF:lo(cl)', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'LANG:IT', 'LF:him', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
si              ['LANG:EN']
si-             {'-COMP:C/fin', 'COMP:P', '-COMP:A', 'PHI_N', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'COMP:R', 'COMP:R/D', '-SPEC:P', 'CAL:CL', 'COMP:uR', '-COMP:AUX', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'COMP:C', 'LF:3sg', '-SPEC:uWH', 'LANG:IT', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', 'PF:si(cl)', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-COMP:C/fin', 'COMP:P', '-COMP:A', 'PHI_N', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'COMP:R', 'COMP:R/D', '-SPEC:P', 'PF:ci', 'COMP:uR', '-COMP:AUX', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'COMP:C', '-SPEC:uWH', 'LANG:IT', 'LF:there', '-COMP:V', '-COMP:N', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', '-SPEC:ADV', '-COMP:*'}
[-n]            {'inflectional', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI', 'LANG:FI'}
[-t]            {'inflectional', 'PHI:PER:2', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI', 'LANG:FI'}
[-V]            {'inflectional', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI', 'LANG:FI'}
[-mme]          {'inflectional', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:FI', 'PHI', 'PHI:NUM:PL'}
[-mme]          {'inflectional', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:FI', 'PHI:NUM:PL'}
[-tte]          {'inflectional', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:FI', 'PHI', 'PHI:NUM:PL'}
[-vat]          {'inflectional', 'PHI:PER:3', 'LANG:FI', 'PHI', 'PHI:NUM:PL'}
[-ni]           {'inflectional', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI', 'LANG:FI'}
[-si]           {'inflectional', 'PHI:PER:2', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI', 'LANG:FI'}
[-nsa]          {'inflectional', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI', 'LANG:FI'}
[-an]           {'inflectional', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI:DET:DEF', 'PHI', 'LANG:FI'}
[-nne]          {'inflectional', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:FI', 'PHI:NUM:PL'}
[-s]            {'inflectional', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI:GEN:M', 'PHI', 'PHI:GEN:F', 'LANG:EN'}
[-0]            {'PHI:NUM:SG', 'PHI:PER:3', 'PHI:DET:DEF', 'PHI', 'PHI:NUM:PL', 'PHI:GEN:N', 'LANG:EN', 'inflectional', 'PHI:PER:2', 'PHI:PER:1'}
[-o]            {'inflectional', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI', 'LANG:IT'}
[-i]            {'inflectional', 'PHI:PER:2', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI', 'LANG:IT'}
[-a]            {'inflectional', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI:DET:DEF', 'PHI', 'LANG:IT'}
[-e]            {'inflectional', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI:DET:DEF', 'PHI', 'LANG:IT'}
[-iamo]         {'inflectional', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI', 'PHI:NUM:PL', 'LANG:IT'}
[-te]           {'inflectional', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI', 'PHI:NUM:PL', 'LANG:IT'}
[-no]           {'inflectional', 'PHI:PER:3', 'PHI:DET:DEF', 'PHI', 'PHI:NUM:PL', 'LANG:IT'}
[-nom]          {'inflectional', 'TAIL:FIN,ARG,VAL', 'NOM', 'LANG:EN', 'adjoinable'}
[-par]          {'inflectional', 'TAIL:ARG,-VAL,!COMP:*', 'PAR', 'LANG:FI', 'adjoinable'}
[-gen]          {'inflectional', '-float', 'TAIL:INF,ARG', 'LANG:EN', 'GEN'}
gen             {'inflectional', '-float', 'TAIL:INF,ARG', 'LANG:EN', 'GEN'}
[-n_acc]        {'inflectional', 'TAIL:*POL:NEG', 'TAIL:PHI', 'n-ACC', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'adjoinable'}
[-t_acc]        {'inflectional', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 't-ACC', 'adjoinable'}
[-0_acc]        {'inflectional', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'adjoinable', '0_ACC', 'TAIL:*PHI'}
asp             {'inflectional', 'ASP:BOUNDED', 'LANG:EN'}
[hAn]           {'inflectional', 'D:FAM', 'OVERT_SCOPE', 'LANG:FI', 'OP:FAM'}
[pA]            {'inflectional', 'OVERT_SCOPE', 'D:POL', 'LANG:FI', 'OP:POL'}
[kO]            {'inflectional', 'OVERT_SCOPE', 'D:WH', 'LANG:FI', 'OP:WH', 'FORCE:OP:WH', 'OP:Q'}
[foc]           {'inflectional', 'LANG:FI', 'OP:FOC'}
a'              {'a', 'LF:A', 'PF:a', 'LANG:X'}
b'              {'b', 'LANG:X', 'PF:b', 'LF:B'}
b''             {'-COMP:c', 'b', 'LANG:EN', 'PF:b', 'LF:B'}
c''             {'c', 'LF:C', 'SPEC:a', 'LANG:EN', 'PF:c'}
c'              {'PF:c', 'LANG:X', 'LF:C', 'c'}
d'              {'d', 'LF:D', 'LANG:', 'PF:d'}
a''             ['LANG:EN']
x'              {'LF:X', 'PF:x', 'x', 'LANG:X'}
y'              {'y', 'PF:y', 'LF:Y', 'LANG:X'}
z'              {'LF:Z', 'PF:x', 'z', 'LANG:X'}
John'           {'PF:John', 'LF:John', "N'", 'LANG:X'}
admires'        {"V'", 'PF:admires', 'LF:admires', 'LANG:X'}
admires''       {'V', 'PF:admires', 'LF:admires', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'ASP', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', '-SPEC:T/fin', 'SPEC:P', 'SPEC:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:NUM:_', 'ARG'}
Mary'           {'LF:mary', 'LANG:X', "N'", 'PF:Mary'}
T/fin           {'COMP:v', '-SPEC:N', 'PHI:GEN:_', 'LF:T', 'LANG:EN', 'FIN', '!PROBE:V', '-SPEC:V', '-SPEC:T/prt', '-SPEC:C', '-adjoinable', 'PHI:DET:_', 'COMP:V', 'PHI:PER:_', '-SPEC:v', '!COMP:*', 'SPEC:*', 'COMP:T/prt', '-SPEC:Neg', 'VAL', '-SPEC:T/fin', '-COMP:INF', '-SPEC:TO/inf', 'T/fin', 'SPEC:C/fin', 'SPEC:D', 'PF:T', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:NUM:_', 'SPEC:FORCE', 'T', '!SPEC:*', 'ARG'}
v               {'-SPEC:N', '!COMP:*', 'PHI:GEN:_', '-VAL', 'LANG:EN', 'ASP', 'v', 'SPEC:D', 'ARG', 'LF:v', 'PF:v', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_', '!PROBE:V', 'COMP:V'}
C/fin           {'-SPEC:N', 'PF:C', '-COMP:C/fin', 'LANG:EN', 'FIN', '!PROBE:FIN', 'COMP:T/fin', '-ARG', 'SPEC:*', 'LF:C/fin', '!COMP:*', '-COMP:T/prt', '-SPEC:C/fin', 'VAL', '-SPEC:T/fin', '-COMP:FORCE', 'C', 'COMP:Neg/fin', 'C/fin'}
T               {'COMP:v', '-SPEC:N', 'PHI:GEN:_', 'LF:T', 'LANG:EN', '-COMP:NEG', '-SPEC:V', 'T', '-SPEC:FORCE', 'PHI:DET:_', 'SPEC:*', 'COMP:V', '!COMP:*', 'COMP:T/prt', 'VAL', '-SPEC:T/fin', 'SPEC:D', 'PF:T', '-SPEC:NEG', 'PHI:PER:_', 'PHI:NUM:_', 'FIN', '!PROBE:V', 'ARG'}
T/prt           {'COMP:v', '-SPEC:N', 'COMP:D', 'PHI:GEN:_', 'PF:T/prt', 'LANG:EN', 'LF:T/prt', 'FIN', '-COMP:NEG', '-SPEC:V', '-SPEC:FORCE', 'SPEC:*', 'PHI:DET:_', 'COMP:V', '!COMP:*', 'T/prt', 'COMP:T/prt', '-SPEC:C/fin', 'VAL', '-SPEC:T/fin', 'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', 'T', '!PROBE:V', 'ARG'}
a0              {'PF:A', '-SPEC:A', '-adjoinable', 'LANG:EN', '-SPEC:D', 'COMP:0', 'LF:A', 'TAIL:D', 'A'}
n               {'COMP:v', 'PHI:GEN:_', '-COMP:C/fin', 'COMP:P', 'LANG:EN', '-COMP:A', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'PHI:DET:_', 'COMP:R', 'COMP:R/D', 'INF', '-SPEC:P', 'VAL', 'COMP:uR', 'PHI:PER:_', '-COMP:AUX', 'COMP:0', '!SPEC:*', 'LF:n', '-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-COMP:V', 'SPEC:*', 'COMP:V', '-COMP:N', '!COMP:*', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:C/fin', 'PF:n', 'n', '-SPEC:T/fin', '!SPEC:D', '-SPEC:INF', '-SPEC:R', 'PHI:NUM:_', '-SPEC:ADV', 'ARG'}
impass          {'-SPEC:N', '!COMP:*', 'LF:impass', 'COMP:V', 'PHI:GEN:_', 'PF:impass', 'LANG:EN', '-VAL', 'ASP', 'v', 'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_', '!PROBE:V', 'ARG'}
cau             {'-SPEC:N', '!COMP:*', 'COMP:V', 'PHI:GEN:_', 'PF:Cau', '-VAL', 'LANG:EN', 'ASP', 'v', 'SPEC:D', 'ARG', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_', '!PROBE:V', 'LF:v/Cause'}
INF             {'COMP:v', '!COMP:*', 'INF', 'PF:INF', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:FORCE', 'LANG:EN', 'LF:INF', '-SPEC:V', '-COMP:T/fin', 'COMP:V'}
prtcpl          {'COMP:v', '-SPEC:N', 'COMP:D', 'PHI:GEN:_', '-COMP:C/fin', 'PF:T/prt', 'LANG:EN', 'LF:T/prt', 'FIN', '-COMP:NEG', '-SPEC:V', '-SPEC:FORCE', 'SPEC:*', 'PHI:DET:_', 'COMP:V', 'PHI:PER:_', '!COMP:*', 'INF', 'T/prt', 'COMP:T/prt', '-SPEC:C/fin', 'VAL', '-SPEC:T/fin', '-COMP:FORCE', 'SPEC:D', '-SPEC:NEG', '-COMP:T/fin', 'PHI:NUM:_', 'T', '!PROBE:V', 'ARG'}
TO/inf          {'COMP:v', '-COMP:C/fin', 'TO/inf', '-VAL', 'LANG:EN', '-SPEC:V', '!COMP:V', 'COMP:V', '-SPEC:v', 'LF:TO/inf', 'INF', '!COMP:*', '-SPEC:T/fin', '-COMP:FORCE', '?ARG', '-COMP:T/fin', 'PF:TO/inf', 'adjoinable'}
A/inf           {'COMP:v', 'A/inf', '?VAL', '-COMP:C/fin', 'LF:A/inf', 'LANG:EN', '-SPEC:V', 'SPEC:*', 'COMP:V', '!COMP:*', 'INF', '-SPEC:T/fin', '-SPEC:Neg/fin', '-COMP:FORCE', '?ARG', 'PF:A/inf', '-COMP:T/fin'}
ARE/inf         {'COMP:v', 'ARE/inf', 'LF:ARE/inf', '-COMP:C/fin', 'LANG:EN', '-SPEC:V', '-adjoinable', 'SPEC:*', 'COMP:V', '!COMP:*', 'INF', 'VAL', '-SPEC:T/fin', '-COMP:FORCE', '?ARG', '-COMP:T/fin', 'PF:are'}
ESSA/inf        {'ESSA/inf', '?VAL', '-SPEC:N', 'ADV', 'COMP:v', '-COMP:C/fin', 'LANG:EN', '-SPEC:V', 'LF:while', '-SPEC:FORCE', 'SPEC:*', 'COMP:V', '!COMP:*', 'INF', '-SPEC:T/fin', '-SPEC:Neg/fin', '-COMP:FORCE', 'TAIL:T', '?ARG', '-COMP:T/fin', 'adjoinable', 'PF:essa'}
TUA/inf         {'-SPEC:N', 'COMP:v', 'ADV', 'PHI:GEN:_', '-COMP:C/fin', 'LANG:EN', 'PF:tua', '-SPEC:V', '-SPEC:FORCE', 'PHI:DET:_', 'SPEC:*', 'COMP:V', 'PHI:PER:_', '!COMP:*', 'INF', 'VAL', '-SPEC:T/fin', '-SPEC:Neg/fin', '-COMP:FORCE', 'TAIL:T', 'TUA/inf', 'adjoinable', 'LF:after', '-COMP:T/fin', 'PHI:NUM:_', '!SPEC:*', 'ARG'}
VA/inf          {'-SPEC:N', 'COMP:v', 'PHI:GEN:_', '-COMP:C/fin', 'LANG:EN', 'VA/inf', '-SPEC:V', 'PHI:DET:_', 'SPEC:*', 'COMP:V', 'PHI:PER:_', '!COMP:*', 'INF', 'VAL', '-SPEC:T/fin', '-COMP:FORCE', 'LF:VA', 'PF:vAn', '-COMP:T/fin', 'PHI:NUM:_', '!SPEC:*', 'ARG'}
MA/ssa          {'COMP:v', '-SPEC:N', 'ADV', 'PHI:GEN:_', '-VAL', 'LANG:EN', 'PF:massa', 'MA/ssa', 'MA/inf', '-SPEC:FORCE', 'PHI:DET:_', 'COMP:V', '-SPEC:*', 'TAIL:V', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LF:in_doing', 'PHI:PER:_', 'PHI:NUM:_', 'adjoinable', 'ARG'}
MA/tta          {'LF:without_doing', '-SPEC:N', 'ADV', 'PHI:GEN:_', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:Neg/fin', '-VAL', 'LANG:EN', 'TAIL:T', 'adjoinable', 'PHI:NUM:_', 'PF:matta', '-SPEC:FORCE', 'PHI:DET:_', 'MA/inf', 'ARG'}
MA/lla          {'COMP:v', 'ADV', 'PHI:GEN:_', '-VAL', 'LANG:EN', 'MA/inf', '-SPEC:FORCE', 'PHI:DET:_', '-SPEC:Neg/fin', 'TAIL:T', 'PHI:PER:_', 'PF:malla', '-SPEC:N', 'COMP:V', 'LF:by_doing', '-SPEC:T/fin', 'PHI:NUM:_', 'adjoinable', 'ARG'}
MA/inf          {'COMP:v', 'ADV', 'LF:to_do', 'PHI:GEN:_', '-VAL', 'LANG:EN', 'MA/inf', '-SPEC:FORCE', 'PHI:DET:_', 'TAIL:V', '-SPEC:Neg/fin', 'PHI:PER:_', '-SPEC:N', 'PF:maan', 'COMP:V', '-SPEC:T/fin', 'PHI:NUM:_', 'adjoinable', 'ARG'}
E/inf           {'-SPEC:N', 'ADV', 'PF:en', '-SPEC:FORCE', '-SPEC:T/fin', '-SPEC:Neg/fin', '-VAL', 'TAIL:T', 'LF:by', '-ARG', 'LANG:FI', 'SPEC:*', 'adjoinable'}
BE-             {'V', 'COMP:P', 'SPEC:ADV', '-VAL', 'PF:BE', 'LANG:EN', 'ASP', '-COMP:v', '-ARG', '-COMP:V', '-SPEC:FORCE', '-COMP:N', '!COMP:*', 'COMP:T/prt', '-SPEC:T/fin', 'SPEC:P', 'SPEC:D', 'SPEC:TO/inf', 'LF:BE', '-COMP:T/fin', 'COPULA'}
D               {'LANG:EN', '-COMP:uR', '-SPEC:V', 'LF:D', '-SPEC:MA/lla', '-ARG', '-SPEC:C', '-COMP:P', '!COMP:*', '-SPEC:P', '-SPEC:T/fin', 'COMP:N', '-SPEC:Neg/fin', 'PF:D', '-COMP:D', '-SPEC:INF', '-COMP:T/fin', 'adjoinable', '!PROBE:N', 'D'}
D/rel           {'LF:D/rel', '-COMP:C/fin', 'OP:REL', 'PF:D/rel', 'LANG:EN', '-COMP:uR', 'D/rel', '-SPEC:V', 'OP:_', '-ARG', '-SPEC:MA/lla', '-SPEC:C', '!COMP:*', '-SPEC:P', '-SPEC:T/fin', '-SPEC:Neg/fin', 'COMP:N', 'OP', '-COMP:D', '-SPEC:INF', '-COMP:T/fin', 'adjoinable', '!PROBE:N', 'D'}
P               {'-SPEC:N', '-float', 'COMP:D', 'PHI:GEN:_', '-SPEC:iR', '-SPEC:ADV', '-VAL', 'LANG:EN', '-COMP:A', '-SPEC:iWH', '-SPEC:V', 'LF:P', '-SPEC:C', 'P', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:N', 'PHI:PER:_', '-SPEC:v', '!COMP:*', '-SPEC:*', '-SPEC:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:Neg/fin', '-COMP:ADV', '-COMP:uWH', '-COMP:T', '-SPEC:INF', '-COMP:T/fin', 'PHI:NUM:_', 'PF:P', 'adjoinable', 'ARG'}
pro             ['LANG:EN']
pro-            {'-SPEC:N', 'SPEC:A', '-COMP:VA/inf', 'N', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:C', 'LANG:EN', 'PF:(pro)', '-COMP:A', '-SPEC:uWH', '-SPEC:V', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:R', '-COMP:N', 'COMP:R/D', 'COMP:D/rel', 'COMP:T/prt', 'LF:pro', '-SPEC:P', '-SPEC:C/fin', 'PHI', '-SPEC:T/fin', '-SPEC:INF', 'COMP:uR', '-SPEC:R', '-COMP:AUX', '-SPEC:ADV'}
cl              {'inflectional', 'RIGHT:ARE/inf', 'LEFT:D,CL', 'LEFT:T/fin', 'RIGHT:PRG', 'LANG:EN', 'CL'}
inc             {'inflectional', 'INCORPORATED', 'LANG:EN'}
sg              {'inflectional', 'PHI:NUM:SG', 'LANG:EN'}
pl              {'inflectional', 'PHI:NUM:PL', 'LANG:EN'}
1p              {'inflectional', 'PHI:PER:1', 'LANG:EN'}
2p              {'inflectional', 'PHI:PER:2', 'LANG:EN'}
3p              {'inflectional', 'LANG:EN', 'PHI:PER:3'}
def             {'inflectional', 'LANG:EN', 'PHI:DET:DEF'}
indef           {'inflectional', 'LANG:EN', 'PHI:DET:INDEF'}
hum             {'inflectional', 'LANG:EN', 'PHI:HUM:HUM'}
nonhum          {'inflectional', 'LANG:EN', 'PHI:HUM:NONHUM'}
m               {'inflectional', 'LANG:EN', 'PHI:GEN:M'}
f               {'inflectional', 'PHI:GEN:F', 'LANG:EN'}
nom             {'inflectional', 'TAIL:FIN,!COMP:*,VAL', 'LANG:EN', 'NOM'}
acc             {'inflectional', 'LANG:EN', 'TAIL:v', 'ACC'}
dat             {'inflectional', 'LANG:EN', 'TAIL:v', 'DAT'}
V1              {'inflectional', '-EDGE:*', 'LANG:EN', '-SPEC:*'}
uC/op           {'inflectional', 'LANG:EN', 'uC/op'}
wh              {'inflectional', 'OP:_', 'D:WH', 'LANG:EN', 'OP:WH'}
wh_             {'inflectional', 'OP', '-COMP:OP', 'OP:_', 'LANG:EN'}
top             {'inflectional', 'OP:TOP', 'D:TOP', 'LANG:EN'}
foc             {'inflectional', 'D:FOC', 'OP:FOC', 'LANG:EN'}
fam             {'inflectional', 'LANG:EN', 'D:FAM', 'OP:FAM'}
pol             {'inflectional', 'LANG:EN', 'OP:POL', 'D:POL'}
C/op            {'inflectional', 'OP:C/OP', 'LANG:EN', 'D:C/OP'}
d/rel           {'inflectional', 'SPEC:D', 'OP:_', '-COMP:C/fin', 'OP:REL', 'LANG:EN', 'adjoinable'}
Q               {'inflectional', 'OP', '-COMP:OP', 'D:WH', 'LANG:EN', 'OP:WH', 'OP:Q'}
