dummy          {'LANG:EN', 'dummy'}
a               {'LF:to', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:A', '-ARG', 'COMP:φ', '-SPEC:v', '-SPEC:P', 'COMP:ARE/inf', '-SPEC:T/prt', 'TAIL:V', '-SPEC:iR', 'P', 'PF:a', 'adjoinable', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:N', '-VAL', '-SPEC:V', '-SPEC:C/fin', '-SPEC:C', '-COMP:uWH', '!COMP:*', '-SPEC:INF', 'LANG:IT', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:*', '-SPEC:iWH', '-COMP:T/fin', '-COMP:T'}
a_D             {'!PROBE:N', '-EDGE:*', '-SPEC:T/fin', 'φ', 'LANG:EN', '-SPEC:MA/lla', '-SPEC:V', 'COMP:N', '-SPEC:C', '-COMP:P', 'COMP:φ', '-ARG', 'adjoinable', '!COMP:*', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:P', 'PF:D', 'D', '-COMP:T/fin', '-COMP:uR', 'COMP:n', 'LF:D'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-SPEC:FORCE', 'PF:admire', '-COMP:v', '-SPEC:T/fin', 'LF:admire', 'PHI:GEN:_', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'CLASS:TR', 'V', 'COMP:D', 'ASP', 'ARG', 'PHI:PER:_', '-SPEC:Neg', '-COMP:P', '!COMP:*', 'SPEC:TO/inf', 'COMP:φ', 'PHI:NUM:_', '-COMP:N', 'SPEC:ADV', 'SPEC:P', '-COMP:Neg', '-COMP:T/fin', 'PHI:DET:_'}
admire*         ['LANG:EN']
T/fin*          {'NO_NUMBER', 'SPEC:C/fin', '-SPEC:T/fin', 'COMP:v', '-SPEC:N', 'PHI:GEN:_', 'LANG:EN', '!SPEC:*', '-VAL', 'PHI:PER:_', 'ARG', '-adjoinable', 'COMP:T/prt', 'T', '-SPEC:Neg', '-SPEC:C', '-SPEC:V', 'SPEC:TO/inf', '!COMP:*', '-SPEC:v', 'COMP:V', '-SPEC:TO/inf', 'SPEC:φ', '-SPEC:T/prt', 'T/fin', '!PROBE:V', 'NO_DET', '-COMP:T/fin', "PF:T/fin'", 'FIN', 'SPEC:FORCE', '-COMP:INF', 'LF:T'}
v*              {'NO_NUMBER', 'COMP:V', 'SPEC:φ', '-SPEC:N', '!COMP:*', '!PROBE:V', 'LANG:EN', 'PHI:GEN:_', 'NO_DET', 'LF:v', 'PF:v', '-VAL', 'ASP', 'PHI:PER:_', 'ARG', 'v'}
admire**        ['LANG:EN']
T/fin**         {'NO_NUMBER', 'SPEC:C/fin', 'T', '-SPEC:Neg', '-SPEC:v', 'COMP:V', 'SPEC:φ', '-SPEC:T/prt', 'T/fin', 'PHI:PER:3', 'SPEC:FORCE', 'LF:T', "PF:T/fin''", '-SPEC:T/fin', 'COMP:v', '-SPEC:N', 'PHI:GEN:_', 'LANG:EN', '!SPEC:*', '-VAL', 'ARG', '-adjoinable', 'COMP:T/prt', '-SPEC:C', '-SPEC:V', 'SPEC:TO/inf', '!COMP:*', '-SPEC:TO/inf', '!PROBE:V', 'NO_DET', '-COMP:T/fin', 'NO_PERSON', 'FIN', '-COMP:INF'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'PF:adora', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'LF:admire', 'PHI:GEN:_', 'COMP:P', '-COMP:V', '-VAL', 'ASP', 'V', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'COMP:φ', 'PHI:NUM:_', 'LANG:IT', '-COMP:N', 'SPEC:ADV', 'SPEC:P', 'PHI:DET:_'}
antaa           ['LANG:FI']
anta-           {'-SPEC:FORCE', 'CLASS:DITR', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', '!COMP:*', 'SPEC:TO/inf', 'ASP:BOUNDED', 'LF:give', 'PF:antaa', 'LANG:FI', '-COMP:N', 'COMP:φ', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', '+SEM:directional', 'PHI:DET:_', '-COMP:FIN'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'-SPEC:FORCE', '-COMP:v', 'LF:ask', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', 'COMP:φ', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:N', 'PF:ask', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', 'SEM:internal', 'PHI:DET:_'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimen_gen     ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-SPEC:FORCE', '-COMP:v', '-SEM:directional', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PF:avain', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:FI', '-COMP:N', 'COMP:C', '-SPEC:uWH', 'LF:key', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-SPEC:FORCE', '-COMP:v', '-SEM:directional', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'LF:car', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'PF:auto', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:FI', '-COMP:N', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
bank            {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', 'PF:bank1', '-COMP:A', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'FREQ:1', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', 'LANG:EN', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', '-COMP:N', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', 'LF:bank_inst'}
bank            {'-SPEC:FORCE', '-COMP:v', 'LF:bank_river', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'COMP:D/rel', 'FREQ:2', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', 'LANG:EN', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', '-COMP:N', 'COMP:C', 'PF:bank2', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
barn            {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'LF:barn', 'SPEC:A', 'N', '-SPEC:N', 'LANG:EN', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:V', '-COMP:A', 'PF:barn', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', 'COMP:D/rel', '-SPEC:V', '-COMP:AUX', '-COMP:D', '-SPEC:INF', '-COMP:N', 'COMP:R', '-SPEC:P', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
Bill            ['LANG:EN']
Bill-           {'-SPEC:FORCE', '-COMP:v', '-SEM:directional', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', 'PF:Bill', '-COMP:A', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', 'LF:Bill', 'LANG:EN', '-COMP:V', 'COMP:T/prt', '-adjoinable', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', '-COMP:N', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', 'D:REF:PROPER_NAME'}
city            {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:N', 'LANG:EN', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:V', '-COMP:A', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', 'COMP:D/rel', '-COMP:D', '-COMP:AUX', '-SPEC:INF', '-COMP:N', 'COMP:R', 'LF:city', '-SPEC:P', 'COMP:C', 'PF:city', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
che             ['LANG:IT']
che-            {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'LF:who', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:IT', '-COMP:N', 'COMP:C', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', 'PF:che', '-COMP:C/fin'}
chiamato        ['LANG:IT']
chiamata-       {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', 'LANG:IT', '-COMP:N', 'LF:called', 'SPEC:ADV', 'SPEC:P', 'PF:chiamato', 'PHI:DET:_'}
claims          ['LANG:EN']
claim-          {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'PF:claim', 'V', 'ASP', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:N', '-COMP:φ', 'LF:claim', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', 'COMP:T/fin', 'PHI:DET:_'}
danno           {'PF:danno', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:V', '-COMP:A', 'COMP:T/prt', 'LF:damage', 'COMP:uR', '-SPEC:C/fin', 'COMP:D/rel', '-SPEC:V', '-COMP:AUX', '-COMP:D', '-SPEC:INF', 'LANG:IT', 'COMP:R', '-COMP:N', '-SPEC:P', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'LF:detest', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', 'COMP:φ', 'SPEC:TO/inf', 'PHI:NUM:_', 'LANG:IT', '-COMP:N', 'SPEC:ADV', 'COMP:ARE/inf', 'PF:detest', 'SPEC:P', 'SEM:internal', 'PHI:DET:_'}
devono          ['LANG:EN']
deva-           {'-SPEC:FORCE', '-COMP:v', 'LF:must', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', '-COMP:V', '-VAL', 'V', 'PHI:PER:_', 'ARG', 'SPEC:TO/inf', 'PHI:NUM:_', 'LANG:IT', '-COMP:N', 'PF:deva', 'COMP:ARE/inf', 'SPEC:φ', 'SPEC:ADV', 'SPEC:P', 'SEM:internal', '-ASP', 'PHI:DET:_'}
di              {'-SPEC:FORCE', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:N', 'PHI:GEN:_', '-SPEC:ADV', '-VAL', 'PHI:PER:_', '-COMP:A', 'ARG', '-adjoinable', '-SPEC:V', 'SPEC:*', '-SPEC:C/fin', '-SPEC:C', 'COMP:φ', '-COMP:uWH', '!COMP:*', 'LF:of', 'LANG:FI', '-SPEC:v', 'PF:di', '-SPEC:P', '-SPEC:INF', '-COMP:N', '-SPEC:Neg/fin', 'PHI:NUM:_', '-SPEC:T/prt', 'PHI:DET:_', '-SPEC:iWH', '-SPEC:iR', '-COMP:T/fin', 'P', '-COMP:T'}
does            {'LF:does', 'SPEC:C/fin', 'PHI:GEN:M', 'T', '-SPEC:Neg', 'SPEC:*', 'PHI:NUM:_', 'VAL', '-SPEC:v', 'COMP:V', 'SPEC:φ', '-SPEC:T/prt', 'PHI:GEN:F', 'T/fin', 'PHI:PER:3', 'PHI:DET:_', 'SPEC:FORCE', 'COMP:Neg', '-SPEC:T/fin', 'COMP:v', '-SPEC:N', 'PHI:GEN:_', 'LANG:EN', '!SPEC:*', 'PHI:NUM:SG', 'PHI:PER:_', 'ARG', '-adjoinable', 'COMP:T/prt', '-SPEC:C', '-SPEC:V', 'SPEC:TO/inf', '!COMP:*', 'PF:does', '-SPEC:TO/inf', '!PROBE:V', '-COMP:T/fin', 'FIN', '-COMP:INF'}
does_C          ['LANG:EN']
does-           {'LF:does', 'SPEC:C/fin', 'PHI:GEN:M', 'T', '-SPEC:Neg', 'SPEC:*', 'PHI:NUM:_', 'VAL', '-SPEC:v', 'COMP:V', 'SPEC:φ', '-SPEC:T/prt', 'PHI:GEN:F', 'T/fin', 'PHI:PER:3', 'PHI:DET:_', 'SPEC:FORCE', 'COMP:Neg', '-SPEC:T/fin', 'COMP:v', '-SPEC:N', 'PHI:GEN:_', 'LANG:EN', '!SPEC:*', 'PHI:NUM:SG', 'PHI:PER:_', 'ARG', '-adjoinable', 'COMP:T/prt', '-SPEC:C', '-SPEC:V', 'SPEC:TO/inf', '!COMP:*', 'PF:does', '-SPEC:TO/inf', '!PROBE:V', '-COMP:T/fin', 'FIN', '-COMP:INF'}
dorme           ['LANG:IT']
dorme-          {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:N', '-COMP:MA/inf', '-COMP:φ', 'SPEC:ADV', 'SPEC:φ', 'LF:sleep', 'SPEC:P', 'CLASS:INTR', 'PF:dorme', '!SPEC:φ', 'PHI:DET:_'}
disappeared     ['LANG:EN']
disappear-      {'-SPEC:FORCE', '-COMP:v', 'PF:disappear', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:disappear', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:N', '-COMP:MA/inf', '-COMP:φ', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', 'CLASS:INTR', 'PHI:DET:_'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'LANG:EN', '2SPEC', 'PF:easy', '0', 'LF:easy', 'SPEC:φ'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'-SPEC:T/fin', 'PHI:GEN:_', '-SPEC:T', '!SPEC:*', 'PHI:PER:_', 'ARG', 'COMP:T/prt', 'SPEC:*', '!COMP:*', 'VAL', '!COMP:T', 'Neg/fin', 'LANG:FI', 'PHI:NUM:_', '%SPEC:INF', 'POL:NEG', 'SEM:internal', 'NEG', 'PF:ei', 'LF:neg', 'FIN', 'PHI:DET:_'}
e-              {'-SPEC:T/fin', 'PHI:GEN:_', '-SPEC:T', '!SPEC:*', 'PHI:PER:_', 'ARG', 'COMP:T/prt', 'SPEC:*', '!COMP:*', 'VAL', '!COMP:T', 'Neg/fin', 'LANG:FI', 'PHI:NUM:_', '%SPEC:INF', 'POL:NEG', 'SEM:internal', 'NEG', 'PF:ei', 'LF:neg', 'FIN', 'PHI:DET:_'}
elaa            ['LANG:FI']
ela-            {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'PF:elaa', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', 'LANG:FI', '-COMP:N', '-COMP:MA/inf', '-COMP:φ', 'LF:live', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', 'CLASS:INTR', 'PHI:DET:_'}
etsii           ['LANG:FI']
etsi-           {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'PF:etsi', 'COMP:P', '-COMP:V', 'CLASS:TR', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', '-COMP:P', 'LF:search', 'COMP:φ', '!COMP:*', 'SPEC:TO/inf', 'PHI:NUM:_', 'LANG:FI', '-COMP:N', 'SPEC:ADV', 'SPEC:P', '!COMP:φ', 'PHI:DET:_'}
etta            {'FORCE', 'LANG:FI', 'COMP:C/fin', '!PROBE:FIN', '-SPEC:*', '-VAL', '-ARG', 'COMP:T/fin', 'LF:that', 'FIN', '-SPEC:φ', 'PF:etta', '!COMP:*'}
fell            ['LANG:EN']
fell-           {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'LF:fell', 'COMP:P', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:N', '-COMP:MA/inf', '-COMP:φ', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', 'CLASS:INTR', '!SPEC:φ', 'PF:fell', 'PHI:DET:_'}
flow'           {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'ASP', 'V', 'ARG', 'LF:flow', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:N', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', 'PHI:DET:_', 'PF:flow'}
from            {'-SPEC:FORCE', 'TAIL:V,+SEM:directional', '-SPEC:ADV', '-COMP:A', 'COMP:φ', 'PHI:NUM:_', '-SPEC:v', '-SPEC:P', '-SPEC:T/prt', '-SPEC:iR', 'P', 'PHI:DET:_', 'adjoinable', '-float', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:N', 'PHI:GEN:_', 'LANG:EN', '-VAL', 'PF:from', 'PHI:PER:_', 'ARG', '-SPEC:V', '-SPEC:C/fin', '-SPEC:C', '-COMP:uWH', '!COMP:*', '-SPEC:INF', 'LF:from', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:*', '-SPEC:iWH', '-COMP:T/fin', '-COMP:T'}
gave            ['LANG:EN']
give-           {'-SPEC:FORCE', 'PF:give', 'CLASS:DITR', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', '!COMP:*', 'SPEC:TO/inf', 'COMP:φ', 'LF:give', '-COMP:N', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', '+SEM:directional', 'PHI:DET:_', '-COMP:FIN'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SPEC:FORCE', '-COMP:v', '-SEM:directional', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', 'PF:Giuseppe', '-COMP:D', '-SPEC:INF', 'LANG:IT', '-COMP:N', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', 'LF:Giuseppe', '-COMP:C/fin', 'D:REF:PROPER_NAME'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:A/inf', 'COMP:P', '-COMP:V', 'PF:haluaa', 'CLASS:TR', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', '-COMP:P', 'COMP:φ', '!COMP:*', 'ASP:BOUNDED', 'SPEC:TO/inf', 'LANG:FI', '-COMP:N', 'PHI:NUM:_', 'SPEC:ADV', '-SPEC:*', 'SPEC:P', 'SEM:internal', 'LF:want', 'PHI:DET:_'}
hairitsee       ['LANG:FI']
hairitse-       {'-SPEC:FORCE', 'LF:disturb', '-COMP:v', 'PF:hairitsee', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', '-COMP:V', '-VAL', 'CLASS:TR', 'V', 'ASP', 'ARG', 'PHI:PER:_', '-COMP:P', '!COMP:*', 'SPEC:TO/inf', 'COMP:φ', 'PHI:NUM:_', 'LANG:FI', '-COMP:N', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', '!COMP:φ', 'PHI:DET:_', '-COMP:FIN'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', 'PF:ha', 'LF:have', '-COMP:V', '-VAL', 'V', 'PHI:PER:_', 'ARG', 'SPEC:*', 'SPEC:TO/inf', 'PHI:NUM:_', 'LANG:IT', '-COMP:N', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', 'COMP:T', 'SEM:internal', '-ASP', 'PHI:DET:_'}
horse           {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:N', 'LANG:EN', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:V', '-COMP:A', 'COMP:T/prt', 'LF:horse', 'COMP:uR', '-SPEC:C/fin', 'COMP:D/rel', '-SPEC:V', '-COMP:AUX', '-COMP:D', '-SPEC:INF', 'PF:horse', 'COMP:R', '-COMP:N', '-SPEC:P', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'-SPEC:FORCE', '-COMP:v', 'PF:havia', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:disappear', 'COMP:P', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', 'LANG:FI', '-COMP:N', '-COMP:MA/inf', '-COMP:φ', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', 'CLASS:INTR', 'PHI:DET:_'}
Helsingissa     ['LANG:FI']
Helsinki        ['LANG:FI']
Helsinki-       {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'PF:Helsinki', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', 'LF:Helsinki', '-COMP:D', '-SPEC:INF', 'LANG:FI', '-COMP:N', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', 'D:REF:PROPER_NAME'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'-SPEC:FORCE', 'PF:ihaile-', '-COMP:v', '-SPEC:T/fin', 'LF:admire', 'PHI:GEN:_', 'COMP:P', '-COMP:V', '-VAL', 'CLASS:TR', 'V', 'ASP', 'ARG', 'PHI:PER:_', '-COMP:P', '!COMP:*', 'SPEC:TO/inf', 'COMP:φ', 'PHI:NUM:_', 'LANG:FI', '-COMP:N', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', '!COMP:φ', 'PHI:DET:_', '-COMP:FIN'}
il              {'LF:the', '!PROBE:N', '-EDGE:*', '-SPEC:T/fin', 'φ', '-SPEC:MA/lla', '-SPEC:V', 'PF:il', 'COMP:N', '-SPEC:C', '-COMP:P', 'COMP:φ', '-ARG', '!COMP:*', '-SPEC:INF', 'LANG:IT', '-SPEC:Neg/fin', '-SPEC:P', 'D', '-COMP:T/fin', '-COMP:uR', 'COMP:n', 'adjoinable'}
i               {'LF:the', '!PROBE:N', '-EDGE:*', '-SPEC:T/fin', 'φ', '-SPEC:MA/lla', '-SPEC:V', 'PF:il', 'COMP:N', '-SPEC:C', '-COMP:P', 'COMP:φ', '-ARG', '!COMP:*', '-SPEC:INF', 'LANG:IT', '-SPEC:Neg/fin', '-SPEC:P', 'D', '-COMP:T/fin', '-COMP:uR', 'COMP:n', 'adjoinable'}
in              {'-SPEC:FORCE', 'LF:in', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:N', 'PHI:GEN:_', '-SPEC:ADV', '-VAL', '-COMP:A', 'ARG', '-SPEC:V', '-SPEC:C/fin', '-SPEC:C', '-COMP:uWH', 'PHI:PER:_', 'COMP:φ', '!COMP:*', '-SPEC:INF', '-SPEC:v', 'LANG:IT', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:P', 'PHI:NUM:_', 'PF:in', '-SPEC:T/prt', 'PHI:DET:_', '-SPEC:iWH', '-SPEC:iR', '-COMP:T/fin', 'P', '-COMP:T', 'adjoinable'}
infermieri      {'PF:infermieri', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:V', '-COMP:A', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', 'COMP:D/rel', '-COMP:D', '-COMP:AUX', '-SPEC:INF', 'LANG:IT', 'COMP:R', '-COMP:N', '-SPEC:P', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', 'LF:nurses', '-SPEC:R', '-COMP:C/fin'}
is              ['LANG:EN']
be-             {'-COMP:TO/inf', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'V', 'ASP', '!COMP:*', '-ARG', 'SPEC:TO/inf', '-COMP:N', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', 'COPULA', 'LF:be', 'PF:be'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', 'LANG:FI', '-COMP:N', '-COMP:MA/inf', '-COMP:φ', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', 'PF:istuu', 'CLASS:INTR', 'LF:sit', 'PHI:DET:_'}
John            ['LANG:EN']
John-           {'-SPEC:FORCE', '-COMP:v', '-SEM:directional', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'COMP:D/rel', 'PF:John', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'LF:John', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', 'LANG:EN', '-COMP:V', 'COMP:T/prt', '-adjoinable', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', '-COMP:N', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', 'D:REF:PROPER_NAME'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'PF:joka', 'LF:who', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:FI', '-COMP:N', 'COMP:C', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-SPEC:FORCE', '-COMP:v', '-SEM:directional', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', 'PF:Jukka', '-SPEC:P', 'LF:Jukka', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:FI', '-COMP:N', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', 'D:REF:PROPER_NAME'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:run', 'COMP:P', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', 'LANG:FI', '-COMP:N', 'SPEC:ADV', 'SPEC:P', 'PHI:DET:_', 'PF:juokse-'}
kaksi           {'NUM', 'PHI:GEN:_', 'φ', 'PF:kaksi', 'PHI:NUM:SG', '-VAL', 'PHI:PER:_', 'ARG', 'COMP:N', '-COMP:D', 'SPEC:*', 'COMP:φ', '!COMP:*', 'PHI:NUM:_', 'LANG:FI', 'LF:two', 'TAIL:ARG,VAL,FIN', 'PHI:DET:_', '-COMP:QN', 'COMP:n'}
kaksi           {'NUM', 'TAIL:*POL:NEG', 'PHI:GEN:_', 'φ', 'LANG:EN', 'PF:kaksi', '-VAL', 'PHI:PER:_', 'ARG', 'TAIL:ARG,ASP:BOUNDED', 'COMP:N', '-COMP:D', 'SPEC:*', 'COMP:φ', '!COMP:*', 'PHI:NUM:_', 'LF:two', 'PHI:DET:_', '-COMP:QN', 'COMP:n'}
kaksi_1         {'NUM', 'PHI:GEN:_', 'φ', 'PF:kaksi', 'PHI:NUM:SG', '-VAL', 'PHI:PER:_', 'ARG', 'COMP:N', '-COMP:D', 'SPEC:*', 'COMP:φ', '!COMP:*', 'PHI:NUM:_', 'LANG:FI', 'LF:two', 'TAIL:ARG,VAL,FIN', 'PHI:DET:_', '-COMP:QN', 'COMP:n'}
kaksi_2         {'NUM', 'TAIL:*POL:NEG', 'PHI:GEN:_', 'φ', 'LANG:EN', 'PF:kaksi', '-VAL', 'PHI:PER:_', 'ARG', 'TAIL:ARG,ASP:BOUNDED', 'COMP:N', '-COMP:D', 'SPEC:*', 'COMP:φ', '!COMP:*', 'PHI:NUM:_', 'LF:two', 'PHI:DET:_', '-COMP:QN', 'COMP:n'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'LANG:FI', 'NUM', '-COMP:QN', 'LF:two', 'φ', 'PF:kaksi', 'COMP:N', '-COMP:D', 'SPEC:*', 'COMP:n', 'COMP:φ'}
kaupunkia       ['LANG:EN']
kaupunki-       {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', '-COMP:V', '-COMP:A', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:P', 'COMP:D/rel', '-COMP:AUX', '-COMP:D', '-SPEC:INF', 'LANG:FI', 'COMP:R', '-COMP:N', 'LF:city', '-SPEC:P', 'COMP:C', 'PF:kaupunki', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', 'PF:kaske', 'LANG:FI', '-COMP:N', 'SPEC:ADV', '-SPEC:*', 'SPEC:P', 'SEM:external', 'LF:order', 'PHI:DET:_', '!COMP:A/inf'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'PF:kello', 'LF:watch', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:V', '-COMP:A', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', 'COMP:D/rel', '-COMP:D', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', 'COMP:R', '-COMP:N', '-SPEC:P', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
kello0-         {'PF:kello', 'LF:watch', '2SPEC', 'LANG:FI', '0', 'SPEC:φ'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-SPEC:FORCE', '-COMP:v', '-SEM:directional', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'PF:key', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', 'LANG:EN', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', '-COMP:N', 'COMP:C', '-SPEC:uWH', 'LF:key', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
kirja           ['LANG:FI']
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-SPEC:FORCE', '-COMP:v', '-SEM:directional', 'N', 'LF:book', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'PF:kirja', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:FI', '-COMP:N', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
knows           ['LANG:EN']
know-           {'-SPEC:FORCE', 'PF:know', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:know', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'CLASS:TR', 'V', 'ASP', 'ARG', 'PHI:PER:_', '-COMP:P', '!COMP:*', 'SPEC:TO/inf', 'COMP:φ', 'PHI:NUM:_', '-COMP:N', 'SPEC:ADV', 'SPEC:P', 'PHI:DET:_'}
kohti           {'-SPEC:FORCE', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:N', 'PHI:GEN:_', '-SPEC:ADV', '-VAL', 'PHI:PER:_', '-COMP:A', 'ARG', '-SPEC:V', '-SPEC:C/fin', 'SPEC:*', '-SPEC:C', '-COMP:uWH', 'COMP:φ', '!COMP:*', '-SPEC:INF', '-SPEC:v', 'LANG:FI', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:P', 'PHI:NUM:_', '-SPEC:T/prt', 'PHI:DET:_', 'TAIL:V', '-SPEC:iWH', '-SPEC:iR', '-COMP:T/fin', 'PF:kohti', 'P', '-COMP:T', 'LF:towards', 'adjoinable'}
koko            {'TAIL:T', '!PROBE:N', '-EDGE:*', '-SPEC:T/fin', 'φ', '-SPEC:MA/lla', 'PF:koko', 'LF:all', '-SPEC:V', 'COMP:N', '-SPEC:C', '-COMP:P', 'COMP:φ', '-ARG', '!COMP:*', '-SPEC:INF', 'LANG:FI', '-SPEC:Neg/fin', '-SPEC:P', 'D', '-COMP:T/fin', '-COMP:uR', 'COMP:n', 'adjoinable'}
kuka            ['LANG:FI']
KUKA            ['LANG:FI']
kuka-           {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', 'PF:kuka', '-COMP:A', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'LF:who', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:FI', '-COMP:N', 'COMP:C', 'PHI', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'LF:snore', 'PHI:GEN:_', 'COMP:P', '-COMP:WH', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', 'LANG:FI', '-COMP:N', '-COMP:φ', 'SPEC:ADV', 'PF:kuorsaa', 'SPEC:P', '-COMP:T/fin', 'PHI:DET:_'}
kysyi           ['LANG:EN']
kysy-           {'-SPEC:FORCE', '-COMP:v', 'LF:ask', '-SPEC:T/fin', 'PHI:GEN:_', 'PF:kysya', 'COMP:P', '-COMP:V', '-VAL', 'ASP', 'V', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', 'LANG:FI', '-COMP:N', '!PROBE:FORCE:OP:WH', 'SPEC:ADV', 'SPEC:P', 'PHI:DET:_'}
lahella         {'-SPEC:FORCE', 'PF:lahella', '-SPEC:ADV', '-COMP:A', 'SPEC:*', 'COMP:φ', 'VAL', 'PHI:NUM:_', '-SPEC:v', '-SPEC:P', 'COMP:V', '-SPEC:T/prt', '-SPEC:iR', '!SPEC:φ', '-COMP:FORCE', 'P', 'PHI:DET:_', 'adjoinable', '-COMP:ADV', '-SPEC:T/fin', 'COMP:v', '-SPEC:N', 'PHI:GEN:_', '!SPEC:*', 'PHI:PER:_', 'ARG', 'INF', '-SPEC:V', '-SPEC:C/fin', '-SPEC:C', '-COMP:uWH', '!COMP:*', '-SPEC:INF', 'LANG:FI', '-COMP:N', '-SPEC:Neg/fin', 'LF:near', '-SPEC:iWH', '-COMP:T/fin', '-COMP:C/fin', '-COMP:T'}
lahella         {'-SPEC:FORCE', 'PF:lahella', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:N', 'PHI:GEN:_', '-SPEC:ADV', '-VAL', 'PHI:PER:_', '-COMP:A', 'ARG', '-SPEC:V', '-SPEC:C/fin', 'SPEC:*', '-SPEC:C', '-COMP:uWH', 'COMP:φ', '!COMP:*', '-SPEC:INF', '-SPEC:v', 'LANG:FI', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:P', 'PHI:NUM:_', '-SPEC:T/prt', 'LF:near', 'PHI:DET:_', '-SPEC:iWH', '!COMP:φ', '-SPEC:iR', '-COMP:T/fin', 'P', '-COMP:T', 'adjoinable'}
lahella_1       {'-SPEC:FORCE', 'PF:lahella', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:N', 'PHI:GEN:_', '-SPEC:ADV', '-VAL', 'PHI:PER:_', '-COMP:A', 'ARG', '-SPEC:V', '-SPEC:C/fin', 'SPEC:*', '-SPEC:C', '-COMP:uWH', 'COMP:φ', '!COMP:*', '-SPEC:INF', '-SPEC:v', 'LANG:FI', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:P', 'PHI:NUM:_', '-SPEC:T/prt', 'LF:near', 'PHI:DET:_', '-SPEC:iWH', '!COMP:φ', '-SPEC:iR', '-COMP:T/fin', 'P', '-COMP:T', 'adjoinable'}
lahella_2       {'-SPEC:FORCE', 'PF:lahella', '-SPEC:ADV', '-COMP:A', 'SPEC:*', 'COMP:φ', 'VAL', 'PHI:NUM:_', '-SPEC:v', '-SPEC:P', 'COMP:V', '-SPEC:T/prt', '-SPEC:iR', '!SPEC:φ', '-COMP:FORCE', 'P', 'PHI:DET:_', 'adjoinable', '-COMP:ADV', '-SPEC:T/fin', 'COMP:v', '-SPEC:N', 'PHI:GEN:_', '!SPEC:*', 'PHI:PER:_', 'ARG', 'INF', '-SPEC:V', '-SPEC:C/fin', '-SPEC:C', '-COMP:uWH', '!COMP:*', '-SPEC:INF', 'LANG:FI', '-COMP:N', '-SPEC:Neg/fin', 'LF:near', '-SPEC:iWH', '-COMP:T/fin', '-COMP:C/fin', '-COMP:T'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'COMP:PP', 'PHI:GEN:_', 'PF:lahtea', 'COMP:P', '-COMP:V', '-VAL', 'V', 'LF:leave', 'ASP', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', 'LANG:FI', '-COMP:N', '-COMP:φ', '-COMP:MA/inf', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', 'CLASS:INTR', 'PHI:DET:_'}
lavano          ['LANG:IT']
lava-           {'-SPEC:FORCE', '-COMP:v', 'LF:wash', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', '!COMP:*', 'COMP:φ', 'SPEC:TO/inf', 'PHI:NUM:_', 'PF:lava', 'LANG:IT', '-COMP:N', 'SPEC:ADV', 'SPEC:P', 'PHI:DET:_'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'!PROBE:N', '-EDGE:*', '-SPEC:T/fin', 'φ', '-SPEC:MA/lla', 'PF:le', '-SPEC:V', 'COMP:N', '-SPEC:C', '-COMP:P', 'COMP:φ', 'LF:φ', '-ARG', '!COMP:*', 'LANG:IT', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:P', 'D', '-COMP:T/fin', '-COMP:uR', 'COMP:n', 'adjoinable'}
leaves          ['LANG:EN']
leave           {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'ASP', 'V', 'LF:leave', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:N', 'SPEC:ADV', 'PF:leave', 'SPEC:P', '-COMP:T/fin', '!SPEC:φ', 'PHI:DET:_'}
leave-          {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'ASP', 'V', 'LF:leave', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:N', 'SPEC:ADV', 'PF:leave', 'SPEC:P', '-COMP:T/fin', '!SPEC:φ', 'PHI:DET:_'}
like-           {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'ASP', 'V', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:N', 'SPEC:ADV', 'LF:like', 'SPEC:P', '!COMP:φ', 'PHI:DET:_', 'PF:like'}
likes           ['LANG:EN']
like            {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'ASP', 'V', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:N', 'SPEC:ADV', 'LF:like', 'SPEC:P', '!COMP:φ', 'PHI:DET:_', 'PF:like'}
little          ['LANG:EN']
little-         {'LANG:EN', '2SPEC', '0', 'LF:little', 'SPEC:φ', 'PF:little-'}
lle             {'-SPEC:FORCE', 'TAIL:V,+SEM:directional', '-SPEC:ADV', '-COMP:A', 'COMP:φ', 'PHI:NUM:_', '-SPEC:v', 'LF:for', '-SPEC:P', '-SPEC:T/prt', '-SPEC:iR', 'P', 'PHI:DET:_', 'adjoinable', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:N', 'PHI:GEN:_', '-VAL', 'PF:P(lle)', 'PHI:PER:_', 'ARG', '-SPEC:V', '-SPEC:C/fin', '-SPEC:C', '-COMP:uWH', '!COMP:*', '-SPEC:INF', 'LANG:FI', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:*', '-SPEC:iWH', '+SEM:directional', '-COMP:T/fin', '-COMP:T'}
lla             {'-SPEC:FORCE', '-SPEC:ADV', '-COMP:A', 'SPEC:*', 'TAIL:*V', 'COMP:φ', 'PHI:NUM:_', '-SPEC:v', '-SPEC:P', '-SPEC:T/prt', 'LF:by', '-SPEC:iR', 'P', 'PHI:DET:_', 'adjoinable', 'TAIL:T', '-COMP:ADV', 'PF:P(lla)', '-SPEC:T/fin', '-SPEC:N', 'PHI:GEN:_', '-VAL', 'PHI:PER:_', 'ARG', '-SPEC:V', '-SPEC:C/fin', '-SPEC:C', '-COMP:uWH', '!COMP:*', '-SPEC:INF', 'LANG:FI', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:iWH', '-COMP:T/fin', '-COMP:T'}
Luisa           ['LANG:IT']
Luisa-          {'-SPEC:FORCE', '-COMP:v', '-SEM:directional', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'COMP:D/rel', 'LF:Luisa', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'PF:Luisa', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:IT', '-COMP:N', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', 'D:REF:PROPER_NAME'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'-SPEC:FORCE', 'PF:luke', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', '-COMP:V', '-VAL', 'CLASS:TR', 'V', 'ASP', 'ARG', 'PHI:PER:_', '-COMP:P', '!COMP:*', 'SPEC:TO/inf', 'COMP:φ', 'PHI:NUM:_', 'LANG:FI', '-COMP:N', 'SPEC:ADV', 'SPEC:P', 'LF:read', 'PHI:DET:_'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'PF:loyta-', 'COMP:P', '-COMP:V', '-VAL', 'CLASS:TR', 'V', 'ASP', 'ARG', 'PHI:PER:_', '-COMP:P', '!COMP:*', 'SPEC:TO/inf', 'ASP:BOUNDED', 'COMP:φ', 'LANG:FI', '-COMP:N', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:P', '!COMP:φ', 'LF:find', 'PHI:DET:_'}
Mary            ['LANG:EN']
Mary-           {'-SPEC:FORCE', '-COMP:v', '-SEM:directional', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'LF:Mary', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', 'LANG:EN', '-COMP:V', 'COMP:T/prt', '-adjoinable', 'COMP:uR', '-SPEC:C/fin', 'PF:Mary', '-SPEC:V', '-COMP:D', '-SPEC:INF', '-COMP:N', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', 'D:REF:PROPER_NAME'}
Merja           ['LANG:FI']
Merja_nom       ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merjaahan       ['LANG:FI']
Merja-          {'-SPEC:FORCE', 'LF:Merja', '-SEM:directional', '-COMP:v', 'PF:Merja', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:T/prt', '-adjoinable', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:FI', '-COMP:N', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', 'D:REF:PROPER_NAME'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
meren           ['LANG:FI']
mere-           {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:N', 'LF:ocean', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:V', '-COMP:A', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', 'COMP:D/rel', '-COMP:D', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', 'COMP:R', '-COMP:N', '-SPEC:P', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', 'PF:meri'}
mies            ['LANG:EN']
mies-           {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:V', '-COMP:A', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', 'COMP:D/rel', '-COMP:D', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', 'COMP:R', '-COMP:N', '-SPEC:P', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', 'PF:mies', 'LF:man'}
mistake         {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:N', 'LANG:EN', 'LF:mistake', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:V', '-COMP:A', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', 'COMP:D/rel', '-COMP:D', '-COMP:AUX', '-SPEC:INF', '-COMP:N', 'COMP:R', '-SPEC:P', 'COMP:C', '-SPEC:uWH', 'PF:mistake', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-SPEC:FORCE', 'LF:what', '-COMP:v', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:V', '-COMP:A', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', 'COMP:D/rel', '-COMP:D', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', 'COMP:R', '-COMP:N', '-SPEC:P', 'COMP:C', 'PF:mika-', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'LF:move', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', '-COMP:V', '-VAL', 'CLASS:TR', 'V', 'ASP', 'ARG', 'PHI:PER:_', '-COMP:P', 'COMP:φ', '!COMP:*', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:N', 'SPEC:ADV', 'SPEC:P', '+SEM:directional', 'LANGN:EN', 'PF:move', 'PHI:DET:_'}
mukavasti       ['LANG:EN']
mukava-         {'2SPEC', 'LANG:FI', '0', 'SPEC:φ', 'PF:mukavasti', 'LF:comfortably'}
must            {'PF:must', 'SPEC:C/fin', 'MODAL', 'LF:must', 'COMP:Neg', '-SPEC:T/fin', 'COMP:v', '-SPEC:N', 'PHI:GEN:_', 'LANG:EN', '!SPEC:*', 'PHI:PER:_', 'ARG', '-adjoinable', 'COMP:T/prt', 'T', '-SPEC:Neg', '-SPEC:C', '-SPEC:V', 'VAL', 'SPEC:TO/inf', '-SPEC:v', '!COMP:*', 'PHI:NUM:_', 'SPEC:*', 'COMP:V', '-SPEC:TO/inf', 'SPEC:φ', '-SPEC:T/prt', 'T/fin', '!PROBE:V', '-COMP:T/fin', 'FIN', 'PHI:DET:_', 'SPEC:FORCE', '-COMP:INF'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'-SPEC:FORCE', 'LF:sell', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', '-COMP:V', '-VAL', 'CLASS:TR', 'V', 'ASP', 'ARG', 'PHI:PER:_', '-COMP:P', 'COMP:φ', '!COMP:*', 'ASP:BOUNDED', 'SPEC:TO/inf', 'LANG:FI', '-COMP:N', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:P', 'PF:myy', '-COMP:T/fin', '-COMP:Neg/fin', 'PHI:DET:_'}
nainen          {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', 'COMP:D/rel', 'PF:nainen', '-COMP:AUX', '-COMP:D', '-SPEC:INF', 'LANG:FI', 'COMP:R', '-COMP:N', '-SPEC:P', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', 'LF:woman'}
naki            ['LANG:FI']
nakee           ['LANG:FI']
nake-           {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'PF:nake', 'COMP:P', '-COMP:V', '-VAL', 'CLASS:TR', 'V', 'ASP', 'ARG', 'PHI:PER:_', '-COMP:P', 'LF:see', '!COMP:*', 'SPEC:TO/inf', 'ASP:BOUNDED', 'COMP:φ', 'LANG:FI', '-COMP:N', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:P', '-COMP:ESSA/inf', 'PHI:DET:_', '-COMP:MA/ssa', '-COMP:MA/tta'}
nayttaa         ['LANG:FI']
naytta-         {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'COMP:P', '-COMP:V', 'V', 'ASP', 'LF:seem', '-ARG', 'VAL', 'SPEC:TO/inf', 'LANG:FI', '!COMP:VA/inf', '-COMP:N', 'SPEC:ADV', 'SPEC:P', 'SEM:internal', '!SPEC:φ', 'PF:naytta'}
ndo             {'VAL', 'COMP:V', '-SPEC:T/fin', 'PF:PRG', 'COMP:v', 'LF:ing', 'LANG:EN', 'INF', '-COMP:C/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:FORCE', '?ARG', 'PRG', '!COMP:*'}
ne              {'!PROBE:N', '-EDGE:*', 'LF:those', 'PF:ne', '-SPEC:T/fin', 'φ', 'PHI:NUM:PL', '-SPEC:MA/lla', '-SPEC:V', 'COMP:N', '-SPEC:C', '-COMP:P', 'COMP:φ', '-ARG', '!COMP:*', '-SPEC:INF', 'LANG:FI', '-SPEC:Neg/fin', '-SPEC:P', 'D', '-COMP:T/fin', 'PHI:PER:3', '-COMP:uR', 'COMP:n', 'adjoinable'}
niiden          ['LANG:EN']
nen             {'TAIL:φ', 'COMP:0', 'LANG:FI', 'A', '-SPEC:A', 'LF:ing', '-SPEC:φ', 'SPEC:*', 'PF:a'}
not             {'-COMP:C', '-COMP:φ', 'POL:NEG', 'PF:not', '-SPEC:T/fin', 'PHI:GEN:_', '!COMP:*', 'ARG', 'LANG:EN', '-VAL', 'PHI:PER:_', 'PHI:NUM:_', 'Neg', 'PHI:DET:_', 'SPEC:*', 'LF:not', '-COMP:FIN'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:MA/inf', 'LANG:FI', '-COMP:N', '-COMP:φ', 'SPEC:ADV', 'SPEC:φ', 'LF:sleep', 'SPEC:P', 'CLASS:INTR', 'PF:nukku', '-COMP:T/fin', '-COMP:Neg/fin', 'PHI:DET:_', '-COMP:T'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:V', '-COMP:A', 'COMP:T/prt', 'PF:omaisuuden', 'COMP:uR', '-SPEC:C/fin', 'COMP:D/rel', '-SPEC:V', '-COMP:AUX', '-COMP:D', '-SPEC:INF', 'LANG:FI', 'COMP:R', '-COMP:N', '-SPEC:P', 'COMP:C', 'LF:possessions', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
operatoria      ['LANG:IT']
operatoria-     {'2SPEC', 'LANG:IT', '0', 'PF:operatoria', 'SPEC:φ', 'LF:operation'}
ostaa           ['LANG:FI']
osta-           {'-SPEC:FORCE', 'LF:buy', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'PF:osta', 'COMP:P', '-COMP:V', '-VAL', 'CLASS:TR', 'V', 'ASP', 'ARG', 'PHI:PER:_', '-COMP:P', '!COMP:*', 'SPEC:TO/inf', 'ASP:BOUNDED', 'COMP:φ', 'LANG:FI', '-COMP:N', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:P', 'PHI:DET:_'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'LF:day', 'SEM:nonreferential', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:FI', '-COMP:N', 'COMP:C', '-SPEC:uWH', 'PF:paiva', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
past            {'PF:past', '-SPEC:FORCE', '-float', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:N', 'PHI:GEN:_', 'LANG:EN', '-SPEC:ADV', '-VAL', '-COMP:A', 'ARG', '-SPEC:V', '-SPEC:C/fin', '-SPEC:C', '-COMP:uWH', 'PHI:PER:_', 'COMP:φ', '!COMP:*', '-SPEC:INF', '-SPEC:v', '-COMP:N', '-SPEC:Neg/fin', 'PHI:NUM:_', '-SPEC:P', '-SPEC:T/prt', '-SPEC:*', 'PHI:DET:_', '-SPEC:iWH', 'LF:past', '-SPEC:iR', '-COMP:T/fin', 'P', '-COMP:T', 'adjoinable'}
Pariisia        ['LANG:FI']
Pariisi-        {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:N', 'LF:Paris', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:V', '-COMP:A', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', 'COMP:D/rel', '-COMP:D', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', 'COMP:R', '-COMP:N', '-SPEC:P', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', 'PF:Pariisi', '-COMP:C/fin'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekkahan        ['LANG:FI']
PEKKA           ['LANG:EN']
Pekka-          {'-SPEC:FORCE', '-COMP:v', '-SEM:directional', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', 'LF:Pekka', '-COMP:A', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:FI', 'PF:Pekka', '-COMP:N', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', 'D:REF:PROPER_NAME'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', '-COMP:V', '-VAL', 'CLASS:TR', 'V', 'ASP', 'ARG', 'PHI:PER:_', '-COMP:P', '!COMP:*', 'LF:fear', 'SPEC:TO/inf', 'COMP:φ', 'LANG:FI', '-COMP:N', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:P', 'PHI:DET:_', 'PF:pelkaa'}
persuades       ['LANG:EN']
persuade-       {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:persuade', 'LANG:EN', 'COMP:P', 'PF:persuade', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', '!COMP:*', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:N', 'SPEC:ADV', 'SPEC:P', 'SEM:external', 'COMP:TO/inf', 'PHI:DET:_'}
peruuntui       ['LANG:FI']
peruuntu-       {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'PF:peruuntui', 'COMP:P', '-COMP:V', '-VAL', 'ASP', 'V', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', 'LANG:FI', 'LF:cancelled', '-COMP:N', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', 'PHI:DET:_'}
pesi            ['LANG:FI']
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'-SPEC:FORCE', '-COMP:v', 'LF:wash', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', '-COMP:V', '-VAL', 'CLASS:TR', 'V', 'ASP', 'ARG', 'PHI:PER:_', 'PF:pese_asp', '-COMP:P', '!COMP:*', 'SPEC:TO/inf', 'ASP:BOUNDED', 'COMP:φ', 'LANG:FI', '-COMP:N', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:P', 'PHI:DET:_'}
pese-           {'-SPEC:FORCE', '-COMP:v', 'LF:wash', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', '-COMP:V', '-VAL', 'CLASS:TR', 'V', 'ASP', 'ARG', 'PHI:PER:_', '-COMP:P', '!COMP:*', 'SPEC:TO/inf', 'COMP:φ', 'PHI:NUM:_', 'LANG:FI', '-COMP:N', 'SPEC:ADV', 'PF:pese', 'SPEC:P', 'PHI:DET:_'}
petardi         {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:V', 'LF:firecrackers', '-COMP:A', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', 'COMP:D/rel', '-SPEC:V', '-COMP:AUX', '-COMP:D', '-SPEC:INF', 'LANG:IT', 'COMP:R', '-COMP:N', '-SPEC:P', 'COMP:C', 'PF:petardi', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
pieni           ['LANG:FI']
pieni-          {'LF:small', '2SPEC', 'LANG:FI', '0', 'PF:pieni-', 'SPEC:φ'}
poikien         ['LANG:FI']
poika-          {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SPEC:A', 'N', 'LF:boy', '-SPEC:N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:V', '-COMP:A', 'PF:poika', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', 'COMP:D/rel', '-SPEC:V', '-COMP:AUX', '-COMP:D', '-SPEC:INF', 'LANG:FI', 'COMP:R', '-COMP:N', '-SPEC:P', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
puhelinta       ['LANG:FI']
puhelin-        {'PF:puhelin', '2SPEC', 'LANG:FI', '0', 'SPEC:φ', 'LF:phone'}
punainen        ['LANG:FI']
puna-           {'LF:red', '2SPEC', 'SPEC:φ', 'LANG:FI', '0', 'PF:puna-'}
presupposto     {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:V', 'LF:presupposition', '-COMP:A', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', 'COMP:D/rel', '-SPEC:V', '-COMP:AUX', '-COMP:D', '-SPEC:INF', 'LANG:IT', 'COMP:R', '-COMP:N', '-SPEC:P', 'COMP:C', 'PF:presupposto', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
primary         {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:V', 'PF:primary', '-COMP:A', 'COMP:T/prt', 'COMP:uR', 'LF:nurse', '-SPEC:C/fin', 'COMP:D/rel', '-SPEC:V', '-COMP:AUX', '-COMP:D', '-SPEC:INF', 'LANG:IT', 'COMP:R', '-COMP:N', '-SPEC:P', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
promises        ['LANG:EN']
promise-        {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', 'COMP:φ', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:N', 'LF:promise', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', 'SEM:internal', 'PHI:DET:_', 'PF:promise'}
problem         {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:N', 'LANG:EN', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:V', '-COMP:A', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', 'COMP:D/rel', '-COMP:D', '-COMP:AUX', '-SPEC:INF', '-COMP:N', 'COMP:R', 'PF:problem', '-SPEC:P', 'COMP:C', 'LF:problem', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
pyytaa          ['LANG:FI']
pyyta-          {'-SPEC:FORCE', 'PF:pyyda', '-COMP:v', 'LF:ask', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', '-COMP:V', '-VAL', 'CLASS:TR', 'V', 'ASP', 'ARG', 'PHI:PER:_', '-COMP:P', '!COMP:*', 'SPEC:TO/inf', 'COMP:φ', 'PHI:NUM:_', 'LANG:FI', '-COMP:N', 'SPEC:ADV', 'SPEC:P', 'SEM:external', 'PHI:DET:_'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'V', 'PF:race', 'ASP', 'ARG', 'PHI:PER:_', '!COMP:*', 'SPEC:TO/inf', 'PHI:NUM:_', 'LAMG:EN', '-COMP:N', '-COMP:MA/inf', '-COMP:φ', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', 'CLASS:INTR', '-COMP:T/fin', 'LF:race', 'PHI:DET:_'}
raukesi         ['LANG:FI']
raukea-         {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', '-COMP:V', '-VAL', 'V', 'LF:terminate', 'ASP', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', 'LANG:FI', '-COMP:N', 'SPEC:ADV', 'SPEC:P', 'PF:raukea', 'PHI:DET:_'}
red             ['LANG:EN']
red-            {'LF:red', 'LANG:EN', '2SPEC', '0', 'PF:red', 'SPEC:φ'}
saavuttaa       ['LANG:FI']
saavutta-       {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', '-COMP:V', '-VAL', 'CLASS:TR', 'V', 'ASP', 'ARG', 'PHI:PER:_', '-COMP:P', '!COMP:*', 'SPEC:TO/inf', 'ASP:BOUNDED', 'COMP:φ', 'LANG:FI', '-COMP:N', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:P', 'LF:reach', 'PF:saavutta-', '!COMP:φ', 'PHI:DET:_'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'-SPEC:FORCE', '-COMP:v', 'PF:sano-', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:say', 'COMP:P', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'COMP:VA/inf', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', 'LANG:FI', '-COMP:N', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', 'PHI:DET:_', 'COMP:FORCE'}
said            ['LANG:EN']
say'            {'-SPEC:FORCE', 'PF:say', '-COMP:v', '!COMP:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:say', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'ASP', 'V', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:N', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', 'PHI:DET:_'}
say-            {'-SPEC:FORCE', 'PF:say', '-COMP:v', '!COMP:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:say', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'ASP', 'V', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:N', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', 'PHI:DET:_'}
sala            ['LANG:IT']
sala-           {'-SPEC:FORCE', 'PF:sala', '-COMP:v', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:N', 'COMP:P', '-COMP:WH', 'LF:room', '-SPEC:ADV', '-COMP:V', '-COMP:A', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', 'COMP:D/rel', '-COMP:D', '-COMP:AUX', '-SPEC:INF', 'LANG:IT', 'COMP:R', '-COMP:N', '-SPEC:P', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
scoppiati       ['LANG:IT']
scoppia-        {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', 'LF:explode', 'LANG:IT', '-COMP:N', 'PF:scoppia', 'SPEC:ADV', 'SPEC:P', 'PHI:DET:_'}
sentenza        {'-SPEC:FORCE', 'LF:sentence', '-COMP:v', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:V', '-COMP:A', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', 'COMP:D/rel', '-COMP:D', '-COMP:AUX', '-SPEC:INF', 'LANG:IT', 'COMP:R', '-COMP:N', '-SPEC:P', 'COMP:C', 'PF:sentenza', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
Seine           ['LANG:EN']
Seine-          {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'PF:Seine', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', 'LANG:EN', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', '-COMP:N', 'COMP:C', 'LF:Seine', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', 'D:REF:PROPER_NAME'}
sembrano        ['LANG:IT']
sembra-         {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'V', 'LF:seem', '-ARG', 'SPEC:TO/inf', '-COMP:N', '-COMP:φ', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', '!COMP:ARE/inf', '-ASP', 'PF:sembra'}
sleeps          ['LANG:EN']
sleep           {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:N', '-COMP:MA/inf', '-COMP:φ', 'SPEC:ADV', 'SPEC:φ', 'LF:sleep', 'SPEC:P', 'PF:sleep', 'CLASS:INTR', 'PHI:DET:_'}
sleep-          {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:N', '-COMP:MA/inf', '-COMP:φ', 'SPEC:ADV', 'SPEC:φ', 'LF:sleep', 'SPEC:P', 'PF:sleep', 'CLASS:INTR', 'PHI:DET:_'}
solution        {'-SPEC:FORCE', '-COMP:v', 'LF:solution', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:N', 'LANG:EN', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:V', '-COMP:A', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', 'COMP:D/rel', '-COMP:D', '-COMP:AUX', '-SPEC:INF', '-COMP:N', 'COMP:R', '-SPEC:P', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', 'PF:solution', '-COMP:C/fin'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', 'LF:agreement', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:FI', '-COMP:N', 'COMP:C', '-SPEC:uWH', 'PF:sopimus', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', '!COMP:A/inf'}
spinge          ['LANG:IT']
spinge-         {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:push', '-COMP:V', '-VAL', 'ASP', 'V', 'ARG', 'PHI:PER:_', '-COMP:P', 'SPEC:TO/inf', 'PHI:NUM:_', 'LANG:IT', '-COMP:N', 'SPEC:ADV', 'SPEC:P', '!COMP:φ', 'PF:spinge', 'PHI:DET:_'}
ssa             {'-SPEC:FORCE', 'LF:in', '-SPEC:ADV', '-COMP:A', 'SPEC:*', 'COMP:φ', 'PHI:NUM:_', '-SPEC:v', '-SPEC:P', '-SPEC:T/prt', 'TAIL:V', '-SPEC:iR', 'P', 'PHI:DET:_', 'adjoinable', 'COMP:n/MA', 'PF:ssa', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:N', 'PHI:GEN:_', '-VAL', 'PHI:PER:_', 'ARG', '-SPEC:V', '-SPEC:C/fin', '-SPEC:C', '-COMP:uWH', '!COMP:*', '-SPEC:INF', 'LANG:FI', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:iWH', '-COMP:T/fin', '-COMP:T'}
stanno          ['LANG:IT']
sta-            {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'PF:sta', 'COMP:P', '-COMP:V', 'COMP:PRG', '-VAL', 'V', 'PHI:PER:_', 'ARG', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:N', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', 'SEM:internal', '-ASP', 'LF:stay', 'PHI:DET:_'}
sti             {'TAIL:T', '-SPEC:FORCE', 'LANG:FI', '-SPEC:Neg/fin', 'adjoinable', '-SPEC:T/fin', 'LF:by', '-SPEC:N', 'ADV', '-ARG', 'PF:sti', 'SPEC:*', '!COMP:*'}
sukka           ['LANG:EN']
sukka_0acc      ['LANG:EN']
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukan_acc       ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:V', '-COMP:A', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', 'COMP:D/rel', '-COMP:D', '-COMP:AUX', '-SPEC:INF', 'LF:socks', 'LANG:FI', 'COMP:R', '-SPEC:P', '-COMP:N', 'COMP:C', 'PF:sukka-', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
surprised       ['LANG:EN']
surprise-       {'PF:surprise', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'LF:surprise', 'COMP:P', '-COMP:V', '-VAL', 'CLASS:TR', 'V', 'ASP', 'ARG', 'PHI:PER:_', '-COMP:P', '!COMP:*', 'SPEC:TO/inf', 'COMP:φ', 'PHI:NUM:_', '-COMP:N', 'SPEC:ADV', 'SPEC:P', '-COMP:T/fin', 'PHI:DET:_'}
talo            ['LANG:EN']
taloa           ['LANG:EN']
talona          ['LANG:EN']
taloksi         ['LANG:EN']
talo-           {'-SPEC:FORCE', '-COMP:v', 'PF:talo', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:V', '-COMP:A', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', 'LF:house', 'COMP:D/rel', '-COMP:AUX', '-COMP:D', '-SPEC:INF', 'LANG:FI', 'COMP:R', '-COMP:N', '-SPEC:P', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
tama            ['LANG:EN']
tama-           {'-SPEC:FORCE', '-COMP:v', 'LF:this', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', 'PF:tama', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:FI', '-COMP:N', 'COMP:C', 'PHI', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'-SPEC:FORCE', '-COMP:v', 'MODAL', 'LF:must', 'PF:taytyy', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', '-COMP:V', '-VAL', 'V', 'PHI:PER:_', 'ARG', 'SPEC:*', 'SPEC:TO/inf', 'PHI:NUM:_', 'LANG:FI', '-COMP:N', 'SPEC:ADV', 'SPEC:P', '-ASP', 'FIN', 'PHI:DET:_', '!COMP:A/inf'}
teki            ['LANG:FI']
teke-           {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'LF:make', 'PHI:GEN:_', 'COMP:P', '-COMP:V', '-VAL', 'CLASS:TR', 'PF:teke', 'V', 'ASP', 'ARG', 'PHI:PER:_', '-COMP:A/inf', '-COMP:P', '!COMP:*', 'SPEC:TO/inf', 'ASP:BOUNDED', 'COMP:φ', 'LANG:FI', '-COMP:N', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:P', '!COMP:φ', 'PHI:DET:_'}
that            {'FORCE', 'COMP:C/fin', '!PROBE:FIN', '-SPEC:*', '!COMP:*', 'LANG:EN', '-VAL', '-ARG', 'COMP:T/fin', 'LF:that', 'FIN', 'PF:that', 'FORCE:DECL'}
the             {'LF:the', '!PROBE:N', '-EDGE:*', 'PHI:DET:DEF', '-SPEC:T/fin', 'φ', 'LANG:EN', '-SPEC:MA/lla', 'PHI:NUM:SG', '-SPEC:V', 'COMP:N', '-SPEC:C', '-COMP:P', 'COMP:φ', '-ARG', '!COMP:*', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:P', 'PF:the', 'D', '-COMP:T/fin', 'PHI:PER:3', '-COMP:uR', 'COMP:n', 'adjoinable'}
to              {'PF:to', 'LF:to', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:A', 'COMP:φ', 'PHI:NUM:_', '-SPEC:v', '-SPEC:P', '-SPEC:T/prt', 'TAIL:V', '-SPEC:iR', 'P', 'PHI:DET:_', 'adjoinable', '-float', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:N', 'PHI:GEN:_', 'LANG:EN', '-VAL', 'PHI:PER:_', 'ARG', '-SPEC:V', '-SPEC:C/fin', '-SPEC:C', '-COMP:uWH', '!COMP:*', '-SPEC:INF', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:*', '-SPEC:iWH', '+SEM:directional', '-COMP:T/fin', '-COMP:T'}
to_inf          {'-SPEC:T/fin', 'COMP:v', 'TO/inf', 'LANG:EN', 'LF:TO/inf', '-VAL', '?ARG', '-SPEC:V', 'INF', '!COMP:*', '-SPEC:v', 'PF:TO/inf', 'COMP:V', '-COMP:T/fin', '-COMP:FORCE', '-COMP:C/fin', 'adjoinable'}
towards         {'-SPEC:FORCE', '-SPEC:ADV', '-COMP:A', 'COMP:φ', 'PHI:NUM:_', '-SPEC:v', '-SPEC:P', '-SPEC:T/prt', 'TAIL:V', '-SPEC:iR', 'P', 'PHI:DET:_', 'adjoinable', '-float', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:N', 'PHI:GEN:_', 'LANG:EN', 'PF:towards', '-VAL', 'PHI:PER:_', 'ARG', '-SPEC:V', '-SPEC:C/fin', '-SPEC:C', '-COMP:uWH', '!COMP:*', '-SPEC:INF', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:*', '-SPEC:iWH', '-COMP:T/fin', '-COMP:T', 'LF:towards'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'-SPEC:FORCE', '-COMP:v', 'PF:tonaise', '-SPEC:T/fin', 'LF:nudge', 'PHI:GEN:_', 'COMP:P', '-COMP:V', '-VAL', 'CLASS:TR', 'V', 'ASP', 'ARG', 'PHI:PER:_', '-COMP:P', '!COMP:*', 'SPEC:TO/inf', 'COMP:φ', 'PHI:NUM:_', 'LANG:FI', '-COMP:N', 'SPEC:ADV', 'SPEC:P', 'PHI:DET:_'}
tta             {'-SPEC:FORCE', '-SPEC:ADV', '-COMP:A', 'LF:without', 'SPEC:*', 'COMP:φ', 'PHI:NUM:_', '-SPEC:v', 'PF:tta', '-SPEC:P', '-SPEC:T/prt', 'ADV', '-SPEC:iR', 'P', 'PHI:DET:_', 'adjoinable', 'COMP:n/MA', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:N', 'PHI:GEN:_', '-VAL', 'PHI:PER:_', 'ARG', '-SPEC:V', '-SPEC:C/fin', '-SPEC:C', '-COMP:uWH', '!COMP:*', '-SPEC:INF', 'LANG:FI', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:iWH', '-COMP:T/fin', '-COMP:T'}
tries           ['LANG:EN']
try-            {'-SPEC:FORCE', 'LF:try', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'COMP:P', '-COMP:V', 'PF:try', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:N', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', 'SEM:internal', '!COMP:-ARG', 'PHI:DET:_', '!COMP:TO/inf'}
verifiche       {'-SPEC:FORCE', 'LF:verification', '-COMP:v', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', 'COMP:D/rel', '-COMP:D', '-COMP:AUX', '-SPEC:INF', 'LANG:IT', 'COMP:R', '-COMP:N', '-SPEC:P', 'COMP:C', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', 'PF:verifiche'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:P', '!COMP:P', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', 'PF:virtaa', 'SPEC:TO/inf', 'PHI:NUM:_', 'LANG:FI', '-COMP:N', '-COMP:φ', '-COMP:MA/inf', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', 'CLASS:INTR', 'PHI:DET:_', 'LF:flow'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', '!COMP:*', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:N', 'SPEC:ADV', '-SPEC:*', 'PF:volu', 'SPEC:P', 'SEM:internal', 'LF:want', 'PHI:DET:_'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'PF:voitta', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'CLASS:TR', 'V', 'ASP', 'ARG', 'PHI:PER:_', '-COMP:P', 'LF:win', '!COMP:*', 'ASP:BOUNDED', 'SPEC:TO/inf', '-COMP:N', 'COMP:φ', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:P', 'PHI:DET:_', 'SEM:achievement'}
wants           ['LANG:EN']
want-           {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'CLASS:TR', 'V', 'ASP', 'ARG', 'PHI:PER:_', '-COMP:P', '!COMP:*', 'COMP:φ', 'PHI:NUM:_', '-COMP:N', 'PF:want', '-SPEC:TO/inf', 'SPEC:ADV', 'SPEC:P', 'LF:want', 'COMP:TO/inf', 'PHI:DET:_'}
what            ['LANG:EN']
what-           {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'LF:what', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', 'LANG:EN', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', 'PF:what', '-SPEC:INF', '-COMP:N', 'COMP:C', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
which           {'!PROBE:N', '-EDGE:*', '-SPEC:T/fin', 'φ', 'LANG:EN', '-SPEC:MA/lla', '-SPEC:V', 'COMP:N', '-SPEC:C', '-COMP:P', 'COMP:φ', '-ARG', '!COMP:*', '-SPEC:INF', 'OP:WH', '-SPEC:Neg/fin', '-SPEC:P', 'LF:which', 'D', '-COMP:T/fin', 'PF:which', '-COMP:uR', 'DIS:WH', 'COMP:n', 'adjoinable'}
who             ['LANG:EN']
who-            {'PF:who', '-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'LF:who', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', 'LANG:EN', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', '-COMP:N', 'COMP:C', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
whether         {'Q', 'LF:whether', 'FORCE', 'OP:WH', 'COMP:C/fin', '!PROBE:FIN', 'PF:whether', 'OP:Q', '-SPEC:*', 'LANG:EN', '-VAL', '-ARG', 'COMP:T/fin', 'FIN', '!COMP:*'}
yrittaa         ['LANG:FI']
yritta-         {'-SPEC:FORCE', 'LF:try', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'V', 'ASP', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:N', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', 'SEM:internal', 'PF:yritta', '!COMP:-ARG', 'PHI:DET:_', '!COMP:A/inf'}
mina            ['LANG:EN']
mina-           {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'PF:mina', 'COMP:R', '-SPEC:P', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'LF:I', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:FI', '-COMP:N', 'COMP:C', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
sina            ['LANG:EN']
sina-           {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'LF:you', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:FI', '-COMP:N', 'COMP:C', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', 'PF:sina', '-COMP:C/fin'}
han             ['LANG:EN']
han-            {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'PF:han', 'COMP:R', '-SPEC:P', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:FI', 'LF:s/he', '-COMP:N', 'COMP:C', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', 'PF:me', 'LF:we', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:FI', '-COMP:N', 'COMP:C', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
te              ['LANG:EN']
te-             {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'LF:you', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', 'PF:te', '-SPEC:INF', 'LANG:FI', '-COMP:N', 'COMP:C', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', 'LF:they', '-SPEC:P', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'PF:he', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:FI', '-COMP:N', 'COMP:C', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
se              ['LANG:EN']
se              ['LANG:EN']
sen             ['LANG:EN']
sita            ['LANG:EN']
se-             {'!PROBE:N', '-EDGE:*', 'LF:the/that', '-SPEC:T/fin', 'φ', '-SPEC:MA/lla', '-SPEC:V', 'COMP:N', '-SPEC:C', '-COMP:P', 'COMP:φ', '-ARG', '!COMP:*', '-SPEC:INF', 'LANG:FI', '-SPEC:Neg/fin', '-SPEC:P', 'PF:se', 'D', '-COMP:T/fin', '-COMP:uR', 'COMP:n', 'adjoinable'}
I               ['LANG:EN']
I-              {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'PF:I', 'COMP:R', '-SPEC:P', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', 'LANG:EN', '-COMP:V', 'LF:I', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', '-COMP:N', 'COMP:C', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
you             ['LANG:EN']
you-            {'-SPEC:FORCE', '-COMP:v', 'N', 'PF:you', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'LF:you', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', 'LANG:EN', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', '-COMP:N', 'COMP:C', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
he              ['LANG:EN']
he-             {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', 'LANG:EN', '-COMP:V', 'PF:he', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', '-COMP:N', 'COMP:C', 'LF:he', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
she             ['LANG:EN']
she-            {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'PF:she', 'COMP:R', '-SPEC:P', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', 'LANG:EN', 'LF:she', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', '-COMP:N', 'COMP:C', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
we              ['LANG:EN']
we-             {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', 'PF:we', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', 'LANG:EN', 'LF:we', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', '-COMP:N', 'COMP:C', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
you_pl          ['LANG:EN']
you_pl-         {'PF:you_pl', '-SPEC:FORCE', '-COMP:v', 'N', 'LF:you_pl', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', 'LANG:EN', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', '-COMP:N', 'COMP:C', 'PHI', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
they            ['LANG:EN']
they-           {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', 'LF:they', '-SPEC:P', 'PF:they', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', 'LANG:EN', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', '-COMP:N', 'COMP:C', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
it              ['LANG:EN']
it-             {'!PROBE:N', '-EDGE:*', '-SPEC:T/fin', 'φ', 'LANG:EN', '-SPEC:MA/lla', '-SPEC:V', 'COMP:N', '-SPEC:C', 'LF:it/that', '-COMP:P', 'COMP:φ', '-ARG', '!COMP:*', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:P', 'PF:it', 'D', '-COMP:T/fin', '-COMP:uR', 'COMP:n', 'adjoinable'}
io              ['LANG:EN']
io-             {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', 'PF:io', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'LF:I', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:IT', '-COMP:N', 'COMP:C', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
tu              ['LANG:EN']
tu-             {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'LF:you', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:IT', '-COMP:N', 'COMP:C', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', 'PF:tu'}
lui             ['LANG:EN']
lui-            {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'PF:lui', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:IT', '-COMP:N', 'COMP:C', 'LF:he', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
lei             ['LANG:EN']
lei-            {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', 'LF:she', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:IT', '-COMP:N', 'COMP:C', '-COMP:*', 'PF:lei', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
noi             ['LANG:EN']
noi-            {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'PF:noi', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', 'LF:we', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:IT', '-COMP:N', 'COMP:C', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
voi             ['LANG:EN']
voi-            {'-SPEC:FORCE', '-COMP:v', 'N', 'LF:you_pl', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'PF:voi', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:IT', '-COMP:N', 'COMP:C', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
loro            ['LANG:EN']
loro-           {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', 'LF:they', '-SPEC:P', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:IT', '-COMP:N', 'COMP:C', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', 'PF:loro', '-COMP:C/fin'}
mi              ['LANG:EN']
mi-             {'-SPEC:FORCE', 'LF:me', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'PF:mi(cl)', 'CL', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:IT', '-COMP:N', 'COMP:C', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
la              ['LANG:EN']
la-             {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'LF:her', 'CL', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:IT', '-COMP:N', 'PF:la(cl)', 'COMP:C', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
lo              ['LANG:EN']
lo-             {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'PF:lo(cl)', 'LF:him', 'CL', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:IT', '-COMP:N', 'COMP:C', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
si              ['LANG:EN']
si-             {'-SPEC:FORCE', '-COMP:v', 'LF:3sg', 'N', 'PF:si(cl)', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', 'LANG:IT', '-COMP:N', 'COMP:C', 'CAL:CL', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'PHI_N', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'PF:ci', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', 'LF:there', '-SPEC:INF', 'LANG:IT', '-COMP:N', 'COMP:C', '-COMP:*', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
[-n]            {'inflectional', 'PHI:PER:1', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI', 'PHI:DET:DEF'}
[-t]            {'inflectional', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:NUM:SG', 'PHI', 'PHI:DET:DEF'}
[-V]            {'inflectional', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI'}
[-mme]          {'inflectional', 'PHI:PER:1', 'PHI:NUM:PL', 'LANG:FI', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF'}
[-mme]          {'inflectional', 'PHI:PER:1', 'PHI:NUM:PL', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-tte]          {'inflectional', 'PHI:NUM:PL', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI', 'PHI:DET:DEF'}
[-vat]          {'inflectional', 'PHI:NUM:PL', 'LANG:FI', 'PHI:PER:3', 'PHI'}
[-ni]           {'inflectional', 'PHI:PER:1', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI', 'PHI:DET:DEF'}
[-si]           {'inflectional', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:NUM:SG', 'PHI', 'PHI:DET:DEF'}
[-nsa]          {'inflectional', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI'}
[-an]           {'inflectional', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI', 'PHI:DET:DEF'}
[-nne]          {'inflectional', 'PHI:NUM:PL', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:DET:DEF'}
[-s]            {'inflectional', 'PHI:GEN:M', 'LANG:EN', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI', 'PHI:GEN:F'}
[-0]            {'inflectional', 'PHI:PER:1', 'PHI:PER:2', 'PHI', 'PHI:DET:DEF', 'PHI:NUM:PL', 'LANG:EN', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI:GEN:N'}
[-o]            {'inflectional', 'PHI:PER:1', 'LANG:IT', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI', 'PHI:DET:DEF'}
[-i]            {'inflectional', 'LANG:IT', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:NUM:SG', 'PHI', 'PHI:DET:DEF'}
[-a]            {'inflectional', 'LANG:IT', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI', 'PHI:DET:DEF'}
[-e]            {'inflectional', 'LANG:IT', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI', 'PHI:DET:DEF'}
[-iamo]         {'inflectional', 'PHI:PER:1', 'PHI:NUM:PL', 'LANG:IT', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF'}
[-te]           {'inflectional', 'PHI:NUM:PL', 'LANG:IT', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI', 'PHI:DET:DEF'}
[-no]           {'inflectional', 'PHI:NUM:PL', 'LANG:IT', 'PHI:PER:3', 'PHI', 'PHI:DET:DEF'}
[-nom]          {'inflectional', 'LANG:EN', 'adjoinable', 'NOM', 'TAIL:FIN,ARG,VAL'}
[-par]          {'inflectional', 'adjoinable', 'LANG:FI', 'PAR', 'TAIL:ARG,-VAL'}
[-gen]          {'inflectional', 'LANG:EN', '-float', 'GEN', 'TAIL:INF,ARG'}
gen             {'inflectional', 'LANG:EN', '-float', 'GEN', 'TAIL:INF,ARG'}
[-n_acc]        {'inflectional', 'TAIL:PHI', 'LANG:FI', 'n-ACC', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'adjoinable'}
[-t_acc]        {'inflectional', 'LANG:FI', 't-ACC', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'adjoinable'}
[-0_acc]        {'inflectional', 'LANG:FI', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'TAIL:*PHI', '0_ACC', 'adjoinable'}
[-ess]          {'inflectional', 'LF:as', 'LANG:FI', '#essiivi', 'TAIL:V', 'PF:na'}
[-trs]          {'inflectional', 'LF:to', '#translatiivi', 'LANG:FI', 'PF:ksi', 'TAIL:V'}
[-ine]          {'inflectional', 'LANG:FI', 'PF:ssa', '#inessiivi', 'LF:in', 'TAIL:V'}
[-ela]          {'inflectional', 'LF:from', 'LANG:FI', 'PF:sta', '#elatiivi', 'TAIL:V'}
[-ill]          {'inflectional', 'LF:into', 'LANG:FI', '#illatiivi', 'PF:an', 'TAIL:V'}
[-ade]          {'inflectional', 'PF:lla', 'LF:at', 'LANG:FI', '#adessiivi', 'TAIL:V'}
[-abl]          {'inflectional', 'LF:from', 'LANG:FI', 'PF:lta', '#ablatiivi', 'TAIL:V'}
[-all]          {'inflectional', 'LF:to', 'LANG:FI', 'PF:lle', '#allatiivi', 'TAIL:V'}
[-abe]          {'inflectional', 'LANG:FI', 'PF:tta', '#abessiivi', 'LF:without', 'TAIL:V'}
[-kom]          {'inflectional', '#komitatiivi', 'LANG:FI', 'PF:ine', 'LF:together', 'TAIL:V'}
[-ins]          {'inflectional', 'LF:with', 'LANG:FI', 'PF:n', '#instruktiivi', 'TAIL:V'}
asp             {'inflectional', 'ASP:BOUNDED', 'LANG:EN'}
[hAn]           {'inflectional', 'OP:FAM', 'OVERT_SCOPE', 'LANG:FI', 'DIS:FAM'}
[pA]            {'inflectional', 'OVERT_SCOPE', 'OP:POL', 'LANG:FI', 'DIS:POL'}
[kO]            {'inflectional', 'OVERT_SCOPE', 'OP:WH', 'LANG:FI', 'DIS:WH', 'OP:Q', 'FORCE:OP:WH'}
[foc]           {'inflectional', 'DIS:FOC', 'LANG:FI', 'OP:FOC'}
a'              {'a', 'PF:a', 'LANG:X', 'LF:A'}
b'              {'b', 'LANG:X', 'PF:b', 'LF:B'}
b''             {'LANG:EN', 'PF:b', '-COMP:c', 'LF:B', 'b'}
c''             {'LANG:EN', 'c', 'LF:C', 'PF:c', 'SPEC:a'}
c'              {'LF:C', 'PF:c', 'LANG:X', 'c'}
d'              {'d', 'PF:d', 'LANG:', 'LF:D'}
a''             ['LANG:EN']
x'              {'LF:X', 'x', 'LANG:X', 'PF:x'}
y'              {'LF:Y', 'PF:y', 'y', 'LANG:X'}
z'              {'z', 'LANG:X', 'LF:Z', 'PF:x'}
John'           {"N'", 'LF:John', 'LANG:X', 'PF:John'}
admires'        {'PF:admires', 'LF:admires', "V'", 'LANG:X'}
admires''       {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'ASP', 'V', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:N', 'SPEC:ADV', 'SPEC:φ', 'PF:admires', 'SPEC:P', 'LF:admires', 'PHI:DET:_'}
Mary'           {"N'", 'LF:mary', 'PF:Mary', 'LANG:X'}
T/fin           {'SPEC:C/fin', '-SPEC:T/fin', 'COMP:v', '-SPEC:N', 'PHI:GEN:_', 'LANG:EN', '!SPEC:*', 'SPEC:*', 'PHI:PER:_', 'ARG', '-adjoinable', 'COMP:T/prt', 'T', '-SPEC:Neg', '-SPEC:C', '-SPEC:V', 'VAL', 'PF:T', '-SPEC:v', 'SPEC:TO/inf', '!COMP:*', 'PHI:NUM:_', 'COMP:V', '-SPEC:TO/inf', 'SPEC:φ', '-SPEC:T/prt', 'T/fin', '!PROBE:V', '-COMP:T/fin', 'FIN', 'PHI:DET:_', 'SPEC:FORCE', '-COMP:INF', 'LF:T'}
v               {'COMP:V', 'SPEC:φ', 'PHI:PER:_', '-SPEC:N', '!COMP:*', '!PROBE:V', 'LANG:EN', 'PHI:GEN:_', 'LF:v', 'PF:v', '-VAL', 'ASP', 'PHI:NUM:_', 'ARG', 'PHI:DET:_', 'v'}
C/fin           {'PF:C', '-SPEC:T/fin', 'C/fin', 'C', 'COMP:Neg/fin', '-SPEC:N', 'LF:C/fin', 'LANG:EN', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:*', '-ARG', 'VAL', '!COMP:*', '-COMP:T/prt', '!PROBE:FIN', '-COMP:FORCE', 'COMP:T/fin', 'FIN'}
T               {'-SPEC:FORCE', '-SPEC:NEG', 'COMP:v', '-SPEC:T/fin', '-SPEC:N', 'PHI:GEN:_', 'LANG:EN', 'PHI:PER:_', 'ARG', 'COMP:T/prt', '-SPEC:V', 'T', 'SPEC:*', '!COMP:*', 'VAL', 'PF:T', 'PHI:NUM:_', 'COMP:V', 'SPEC:φ', '!PROBE:V', '-COMP:NEG', 'FIN', 'PHI:DET:_', 'LF:T'}
T/prt           {'-SPEC:FORCE', 'COMP:v', '-SPEC:T/fin', 'T/prt', '-SPEC:N', 'PHI:GEN:_', 'LANG:EN', 'LF:T/prt', 'PHI:PER:_', 'ARG', 'COMP:T/prt', '-SPEC:V', 'T', '-SPEC:C/fin', 'SPEC:*', '!COMP:*', 'VAL', 'COMP:φ', 'PHI:NUM:_', 'COMP:V', 'SPEC:φ', '!PROBE:V', 'PF:T/prt', '-COMP:NEG', 'FIN', 'PHI:DET:_'}
a0              {'TAIL:φ', 'PF:A', 'COMP:0', 'A', 'LF:A', '-SPEC:A', 'LANG:EN', '-adjoinable', '-SPEC:φ'}
n               {'-SPEC:FORCE', '-COMP:v', 'N', 'φ', 'COMP:P', '-COMP:WH', '-SPEC:ADV', 'n', '-COMP:A', 'SPEC:*', 'COMP:D/rel', '-COMP:AUX', 'VAL', 'PHI:NUM:_', 'COMP:R', 'PF:n', '-SPEC:P', 'COMP:V', '!SPEC:φ', 'PHI:DET:_', 'COMP:0', 'COMP:v', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', 'PHI:GEN:_', 'LANG:EN', '!SPEC:*', '-COMP:V', 'PHI:PER:_', 'COMP:T/prt', '-SPEC:V', '-SPEC:C/fin', 'INF', '-COMP:D', 'COMP:uR', 'ARG', '!COMP:*', '-SPEC:INF', '-COMP:N', 'COMP:C', 'LF:n', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
impass          {'COMP:V', 'SPEC:φ', 'PHI:PER:_', '-SPEC:N', '!COMP:*', '!PROBE:V', 'LANG:EN', 'PHI:GEN:_', 'LF:impass', '-VAL', 'ASP', 'PHI:NUM:_', 'ARG', 'PHI:DET:_', 'PF:impass', 'v'}
cau             {'LF:v/Cause', 'PF:Cau', 'COMP:V', 'SPEC:φ', 'PHI:PER:_', '-SPEC:N', '!COMP:*', '!PROBE:V', 'LANG:EN', 'PHI:GEN:_', '-VAL', 'ASP', 'PHI:NUM:_', 'ARG', 'PHI:DET:_', 'v'}
φ               {'LF:φ', 'LANG:EN', '-SPEC:T', 'COMP:N', 'PF:φ', 'COMP:D/rel', 'φ'}
INF             {'COMP:V', '-SPEC:T/fin', 'COMP:v', 'PF:INF', 'LANG:EN', '-SPEC:V', '-COMP:C/fin', '-COMP:T/fin', '-COMP:FORCE', 'INF', 'LF:INF', '!COMP:*'}
prtcpl          {'-SPEC:FORCE', '-SPEC:NEG', 'COMP:v', '-SPEC:T/fin', 'T/prt', '-SPEC:N', 'PHI:GEN:_', 'LANG:EN', '-COMP:C/fin', 'LF:T/prt', 'PHI:PER:_', 'ARG', 'INF', '-SPEC:V', 'T', 'SPEC:*', 'COMP:T/prt', 'COMP:φ', 'VAL', '-SPEC:C/fin', '!COMP:*', 'PHI:NUM:_', 'COMP:V', 'SPEC:φ', '!PROBE:V', '-COMP:FORCE', 'PF:T/prt', '-COMP:T/fin', '-COMP:NEG', 'FIN', 'PHI:DET:_'}
TO/inf          {'!COMP:V', '-SPEC:T/fin', 'COMP:v', 'TO/inf', 'LANG:EN', 'LF:TO/inf', '-VAL', '?ARG', 'INF', '-SPEC:V', '!COMP:*', '-SPEC:v', 'PF:TO/inf', 'COMP:V', '-COMP:T/fin', '-COMP:FORCE', '-COMP:C/fin', 'adjoinable'}
A/inf           {'-SPEC:T/fin', 'COMP:v', 'PF:A/inf', 'LANG:EN', '-VAL', 'LF:A/inf', '?ARG', '-SPEC:V', 'INF', 'SPEC:*', '!COMP:*', '-SPEC:Neg/fin', 'COMP:V', 'A/inf', '-COMP:T/fin', '-COMP:FORCE', '-COMP:C/fin'}
ARE/inf         {'LF:ARE/inf', '-SPEC:T/fin', 'COMP:v', 'LANG:EN', 'INF', '-SPEC:V', '?ARG', 'SPEC:*', '-adjoinable', 'PF:are', 'ARE/inf', 'VAL', '!COMP:*', 'COMP:V', '-COMP:T/fin', '-COMP:FORCE', '-COMP:C/fin'}
ESSA/inf        {'TAIL:T', '-SPEC:FORCE', 'COMP:v', '-SPEC:T/fin', '?VAL', '-SPEC:N', 'LANG:EN', 'LF:while', '-COMP:C/fin', 'INF', '?ARG', 'SPEC:*', '-SPEC:V', '!COMP:*', '-SPEC:Neg/fin', 'COMP:V', 'ADV', '-COMP:T/fin', '-COMP:FORCE', 'ESSA/inf', 'PF:essa', 'adjoinable'}
TUA/inf         {'TAIL:T', '-SPEC:FORCE', 'COMP:v', '-SPEC:T/fin', '-SPEC:N', 'PHI:GEN:_', 'LANG:EN', '!SPEC:*', 'PHI:PER:_', 'ARG', 'INF', '-SPEC:V', 'SPEC:*', '!COMP:*', 'VAL', 'LF:after', 'PHI:NUM:_', '-SPEC:Neg/fin', 'COMP:V', 'ADV', 'PF:tua', '-COMP:T/fin', '-COMP:FORCE', '-COMP:C/fin', 'PHI:DET:_', 'TUA/inf', 'adjoinable'}
VA/inf          {'-SPEC:T/fin', 'COMP:v', '-SPEC:N', 'PHI:GEN:_', 'LANG:EN', 'VA/inf', 'PHI:PER:_', 'ARG', '-SPEC:V', 'INF', 'SPEC:*', '!COMP:*', 'VAL', 'PHI:NUM:_', 'COMP:V', '-COMP:T/fin', 'PF:vAn', '-COMP:FORCE', 'LF:VA', '-COMP:C/fin', 'PHI:DET:_'}
MA/ssa          {'-SPEC:FORCE', 'MA/inf', 'COMP:v', '-SPEC:T/fin', '-SPEC:N', 'PHI:GEN:_', 'LANG:EN', 'MA/ssa', '-VAL', 'PHI:PER:_', 'ARG', 'PHI:NUM:_', '-SPEC:Neg/fin', 'COMP:V', 'PF:massa', 'LF:in_doing', '-SPEC:*', 'TAIL:V', 'ADV', 'PHI:DET:_', 'adjoinable'}
MA/tta          {'TAIL:T', '-SPEC:FORCE', '-SPEC:Neg/fin', 'MA/inf', '-SPEC:T/fin', 'PHI:PER:_', '-SPEC:N', 'PHI:GEN:_', 'ADV', 'LANG:EN', '-VAL', 'LF:without_doing', 'PF:matta', 'PHI:NUM:_', 'ARG', 'PHI:DET:_', 'adjoinable'}
MA/lla          {'-SPEC:FORCE', 'MA/inf', 'LF:by_doing', 'SPEC:*', 'PHI:NUM:_', 'VAL', 'COMP:V', 'ADV', 'PHI:DET:_', 'adjoinable', 'TAIL:T', 'COMP:v', '-SPEC:T/fin', '-SPEC:N', 'PHI:GEN:_', 'LANG:EN', 'PHI:PER:_', 'ARG', '-SPEC:Neg/fin', 'PF:malla'}
MA/inf          {'-SPEC:FORCE', 'MA/inf', 'LF:to_do', 'SPEC:*', 'PHI:NUM:_', 'VAL', 'PF:maan', 'COMP:V', 'TAIL:V', 'ADV', 'PHI:DET:_', 'adjoinable', 'COMP:v', '-SPEC:T/fin', '-SPEC:N', 'PHI:GEN:_', 'LANG:EN', 'PHI:PER:_', 'ARG', '-SPEC:Neg/fin'}
E/inf           {'TAIL:T', '-SPEC:FORCE', 'LANG:FI', '-SPEC:Neg/fin', 'adjoinable', '-SPEC:T/fin', 'PF:en', 'LF:by', '-SPEC:N', 'ADV', '-VAL', 'SPEC:*', '-ARG'}
BE-             {'-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'LF:BE', 'LANG:EN', 'COMP:P', '-COMP:V', '-VAL', 'PF:BE', 'V', 'ASP', 'COMP:T/prt', 'COMP:φ', '!COMP:*', '-ARG', 'SPEC:TO/inf', '-COMP:N', 'SPEC:ADV', 'SPEC:φ', 'SPEC:P', 'COPULA', '-COMP:T/fin'}
D               {'!PROBE:N', '-EDGE:*', '-SPEC:T/fin', 'φ', 'LANG:EN', '-SPEC:T', '-SPEC:MA/lla', '-SPEC:V', 'COMP:N', '-SPEC:C', 'COMP:D/rel', '-COMP:P', 'COMP:φ', '-ARG', 'adjoinable', '!COMP:*', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:P', 'PF:D', 'D', '-COMP:T/fin', '-COMP:uR', 'COMP:n', 'LF:D'}
D/rel           {'!PROBE:N', '-SPEC:T/fin', 'φ', 'LANG:EN', '-SPEC:T', '-SPEC:MA/lla', '-COMP:uR', 'COMP:N', '-SPEC:V', '-SPEC:C', 'LF:D/rel', 'COMP:D/rel', '-ARG', '!COMP:*', '-SPEC:INF', 'D/rel', '-SPEC:Neg/fin', 'OP', '-COMP:φ', '-SPEC:P', 'OP:_', 'D', '-COMP:T/fin', 'OP:REL', 'PF:D/rel', '-COMP:C/fin', 'adjoinable'}
P               {'-SPEC:FORCE', '-float', 'PF:P', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:N', 'PHI:GEN:_', 'LANG:EN', '-SPEC:ADV', '-VAL', '-COMP:A', 'ARG', '-SPEC:V', '-SPEC:C/fin', '-SPEC:C', '-COMP:uWH', 'PHI:PER:_', 'COMP:φ', '!COMP:*', '-SPEC:INF', '-SPEC:v', '-COMP:N', '-SPEC:Neg/fin', 'PHI:NUM:_', '-SPEC:P', 'LF:P', '-SPEC:T/prt', '-SPEC:*', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:iR', '-COMP:T/fin', 'P', '-COMP:T', 'adjoinable'}
pro             ['LANG:EN']
pro-            {'-SPEC:FORCE', '-COMP:v', 'N', 'COMP:P', '-COMP:WH', '-SPEC:ADV', '-COMP:A', 'COMP:D/rel', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'LF:pro', 'PF:(pro)', '-SPEC:T/fin', 'SPEC:A', '-SPEC:N', 'LANG:EN', '-COMP:V', 'COMP:T/prt', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-SPEC:INF', '-COMP:N', 'COMP:C', 'PHI', '-SPEC:uWH', 'COMP:R/D', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin'}
cl              {'inflectional', 'LANG:EN', 'LEFT:T/fin', 'LEFT:D,CL', 'RIGHT:ARE/inf', 'RIGHT:PRG', 'CL'}
inc             {'inflectional', 'INCORPORATED', 'LANG:EN'}
sg              {'inflectional', 'PHI:NUM:SG', 'LANG:EN'}
pl              {'inflectional', 'PHI:NUM:PL', 'LANG:EN'}
1p              {'inflectional', 'PHI:PER:1', 'LANG:EN'}
2p              {'inflectional', 'PHI:PER:2', 'LANG:EN'}
3p              {'inflectional', 'PHI:PER:3', 'LANG:EN'}
def             {'inflectional', 'PHI:DET:DEF', 'LANG:EN'}
indef           {'inflectional', 'PHI:DET:INDEF', 'LANG:EN'}
hum             {'inflectional', 'PHI:HUM:HUM', 'LANG:EN'}
nonhum          {'inflectional', 'PHI:HUM:NONHUM', 'LANG:EN'}
m               {'inflectional', 'PHI:GEN:M', 'LANG:EN'}
f               {'inflectional', 'PHI:GEN:F', 'LANG:EN'}
proper_name     {'inflectional', 'LANG:EN', 'D:REF:NAME'}
nom             {'inflectional', 'TAIL:FIN,!COMP:*,VAL', 'NOM', 'LANG:EN'}
acc             {'inflectional', 'ACC', 'TAIL:v', 'LANG:EN'}
dat             {'inflectional', 'LANG:EN', 'TAIL:v', 'DAT'}
V1              {'inflectional', 'LANG:EN', '-SPEC:*', '-EDGE:*'}
uC/op           {'inflectional', 'uC/op', 'LANG:EN'}
wh              {'inflectional', 'LANG:EN', 'OP:WH', 'DIS:WH', 'OP:_'}
wh_             {'inflectional', 'LANG:EN', 'OP', '-COMP:OP', 'OP:_'}
top             {'inflectional', 'DIS:TOP', 'OP:TOP', 'LANG:EN'}
foc             {'inflectional', 'DIS:FOC', 'OP:FOC', 'LANG:EN'}
fam             {'inflectional', 'OP:FAM', 'LANG:EN', 'DIS:FAM'}
pol             {'inflectional', 'OP:POL', 'DIS:POL', 'LANG:EN'}
C/op            {'inflectional', 'OP:C/OP', 'DIS:C/OP', 'LANG:EN'}
d/rel           {'inflectional', 'LANG:EN', 'OP:REL', 'SPEC:D', '-COMP:C/fin', 'OP:_', 'adjoinable'}
Q               {'inflectional', 'LANG:EN', 'OP:WH', 'OP', '-COMP:OP', 'DIS:WH', 'OP:Q'}
