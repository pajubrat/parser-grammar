

\========================================================================
# 1
['John', 'wants', 'to_inf', 'leave']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'v$', 'want-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin]

	10. Consume "v"

		[[D John] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D John] T/fin{v}]

	11. Consume "want"

		[[D John] T/fin{v}] + want
			Filtering out impossible merge sites...
			Sink "want" into v because they are inside the same phonological word.
			=[[D John] T/fin{v,V}]

	12. Consume "to"

		[[D John] T/fin{v,V}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				"want" lacks complement.
				Avoid [[D John] [T/fin [[D John] [v want]]]] as left branch because it constitutes illicit structure.
				[[D John] T/fin{v,V}] + to = -197]
				T/fin{v,V} + to = 2]
		Ranking completed:
			1. [T/fin{v,V}; to]
			2. [[[D John] T/fin{v,V}]; to]
			Exploring solution number (1) =[T/fin{v,V} to]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
				An EPP-head "T/fin{v,V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} to]]

	13. Consume "leave"

		[[D John] [T/fin{v,V} to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [v [want to]]]]] leave] due to bad left branch.
				Reject [[T/fin [v [want to]]] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} [to leave]]]

	>>>	Trying candidate spellout structure [[D John] [T/fin{v,V} [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D John] [T/fin [v{V} [to leave]]]]
					Target want in v
					=[[D John] [T/fin [v [want [to leave]]]]]
				=[[D John] [T/fin [v [want [to leave]]]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[D John] [T/fin [v [want [to leave]]]]]
				3. Extraposition:
				=[[D John] [T/fin [v [want [to leave]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v [want [to leave]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:4 [T/fin [__:4 [v [want [to leave]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[D John]:4 [T/fin [__:4 [v [want [to leave]]]]]]
				7. Last resort extraposition:
			= [[D John] [T/fin [[D John] [v [want [to leave]]]]]]
		Checking LF-interface conditions.
			Transferring [[D John]:4 [T/fin [__:4 [v [want [to leave]]]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				want with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				to with ['PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'leave([D John])', 'to([D John])', 'v([D John])', 'want([D John])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [v [want [to leave]]]]]]
		Grammar: [[D John]:1 [T/fin [__:1 [v [want [to leave]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [INF V]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  want: [V, v, TT/fin];  to: [INF, V, v, TT/fin];  leave: [V, INF, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin{v,V}] to]
				1. Head movement reconstruction:
				=[[D John] [T/fin [v want]]]
				2. Feature processing:
				=[[D John] [T/fin [v want]]]
				3. Extraposition:
				=[[D John] [T/fin [v want]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v want]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:5 [T/fin [__:5 [v want]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:5 [T/fin [__:5 [v want]]]]
				7. Last resort extraposition:
				"want" lacks complement.
					Last resort extraposition will be tried on [[D John]:5 [T/fin [__:5 [v want]]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:5 [T/fin [__:5 [v want]]]] to]

	14. Consume "leave"

		[[[D John] [T/fin [[D John] [v want]]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [v want]]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:5 [T/fin [__:5 [v want]]]] [to leave]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [v want]]]] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:5 [T/fin [__:5 [v want]]]] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:5 [T/fin [__:5 [v want]]]] [to leave]]
				3. Extraposition:
				=[[[D John]:5 [T/fin [__:5 [v want]]]] [to leave]]
				4. Floater movement reconstruction:
				=[[[D John]:5 [T/fin [__:5 [v want]]]] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[D John]:5 [T/fin [__:5 [v want]]]] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[D John]:5 [T/fin [__:5 [v want]]]] [to leave]]
				7. Last resort extraposition:
				"want" lacks complement.
				to has unacceptable specifier [[D John]:5 [T/fin [__:5 [v want]]]].
					Last resort extraposition will be tried on [[[D John]:5 [T/fin [__:5 [v want]]]] [to leave]].
			= [[[D John] [T/fin [[D John] [v want]]]] [to leave]]
		Checking LF-interface conditions.
				"want" lacks complement.
				to has unacceptable specifier [[D John]:5 [T/fin [__:5 [v want]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  want: [V, v, TT/fin];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "want-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "wants".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 2
['John', 'wants', 'Mary', 'to_inf', 'leave']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'v$', 'want-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin]

	10. Consume "v"

		[[D John] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D John] T/fin{v}]

	11. Consume "want"

		[[D John] T/fin{v}] + want
			Filtering out impossible merge sites...
			Sink "want" into v because they are inside the same phonological word.
			=[[D John] T/fin{v,V}]

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

	12. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	13. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	14. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	15. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	16. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	17. Consume "D"

		[[D John] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"want" lacks complement.
				Avoid [[D John] [T/fin [[D John] [v want]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				[[D John] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 104]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D John] T/fin{v,V}]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
				An EPP-head "T/fin{v,V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} D]]

	18. Consume "Mary"

		[[D John] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[D John] [T/fin{v,V} D{N}]]

	19. Consume "to"

		[[D John] [T/fin{v,V} D{N}]] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				Avoid TT/finP as SPEC, to.
				An EPP-head "T/fin" lacks specifier.
				Avoid [T/fin [v [want [D Mary]]]] as left branch because it constitutes illicit structure.
				Avoid D{N} because it could break words.
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
				Prioritize D{N} because all solutions were negative.
				[[D John] [T/fin{v,V} D{N}]] + to = -98]
				[T/fin{v,V} D{N}] + to = -194]
				D{N} + to = 106]
		Ranking completed:
			1. [D{N}; to]
			2. [[[D John] [T/fin{v,V} D{N}]]; to]
			3. [[T/fin{v,V} D{N}]; to]
			Exploring solution number (1) =[D{N} to]
				1. Head movement reconstruction:
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
			=[[D John] [T/fin{v,V} [[D Mary] to]]]

	20. Consume "leave"

		[[D John] [T/fin{v,V} [[D Mary] to]]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [v [want [[D Mary] to]]]]]] leave] due to bad left branch.
				Reject [[T/fin [v [want [[D Mary] to]]]] leave] due to bad left branch.
				Reject [[[D Mary] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} [[D Mary] [to leave]]]]

	>>>	Trying candidate spellout structure [[D John] [T/fin{v,V} [[D Mary] [to leave]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D John] [T/fin [v{V} [[D Mary] [to leave]]]]]
					Target want in v
					=[[D John] [T/fin [v [want [[D Mary] [to leave]]]]]]
				=[[D John] [T/fin [v [want [[D Mary] [to leave]]]]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[D John] [T/fin [v [want [[D Mary] [to leave]]]]]]
				3. Extraposition:
				=[[D John] [T/fin [v [want [[D Mary] [to leave]]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v [want [[D Mary] [to leave]]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
					[D Mary] will undergo A-reconstruction.
				=[[D John]:11 [T/fin [__:11 [v [want [[D Mary]:12 [to [__:12 leave]]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG from the edge of to.
						to acquired PHI:PER:3 from the edge of to.
				=[[D John]:11 [T/fin [__:11 [v [want [[D Mary]:12 [to [__:12 leave]]]]]]]]
				7. Last resort extraposition:
			= [[D John] [T/fin [[D John] [v [want [[D Mary] [to [[D Mary] leave]]]]]]]]
		Checking LF-interface conditions.
			Transferring [[D John]:11 [T/fin [__:11 [v [want [[D Mary]:12 [to [__:12 leave]]]]]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				want with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: 2. [D John] 3. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'leave([D Mary])', 'v([D John])', 'want([D John])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [v [want [[D Mary] [to [[D Mary] leave]]]]]]]]
		Grammar: [[D John]:1 [T/fin [__:1 [v [want [[D Mary]:2 [to [__:2 leave]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [DP:2 [INF [__:2 V]]]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  want: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Mary: [N, D, V, v, TT/fin];  to: [INF, V, v, TT/fin];  __: [D, INF, V, v, TT/fin];  __: [N, D, INF, V, v, TT/fin];  leave: [V, INF, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] [T/fin{v,V} D{N}]] to]
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D John] [T/fin [v{V} D{N}]]]
					Target want in v
					=[[D John] [T/fin [v [want D{N}]]]]
				=[[D John] [T/fin [v [want [D Mary]]]]]
				2. Feature processing:
				=[[D John] [T/fin [v [want [D Mary]]]]]
				3. Extraposition:
				=[[D John] [T/fin [v [want [D Mary]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v [want [D Mary]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:13 [T/fin [__:13 [v [want [D Mary]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:13 [T/fin [__:13 [v [want [D Mary]]]]]]
				7. Last resort extraposition:
			=[[[D John]:13 [T/fin [__:13 [v [want [D Mary]]]]]] to]

	21. Consume "leave"

		[[[D John] [T/fin [[D John] [v [want [D Mary]]]]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [v [want [D Mary]]]]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:13 [T/fin [__:13 [v [want [D Mary]]]]]] [to leave]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [v [want [D Mary]]]]]] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:13 [T/fin [__:13 [v [want [D Mary]]]]]] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:13 [T/fin [__:13 [v [want [D Mary]]]]]] [to leave]]
				3. Extraposition:
				=[[[D John]:13 [T/fin [__:13 [v [want [D Mary]]]]]] [to leave]]
				4. Floater movement reconstruction:
				=[[[D John]:13 [T/fin [__:13 [v [want [D Mary]]]]]] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[D John]:13 [T/fin [__:13 [v [want [D Mary]]]]]] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[D John]:13 [T/fin [__:13 [v [want [D Mary]]]]]] [to leave]]
				7. Last resort extraposition:
				to has unacceptable specifier [[D John]:13 [T/fin [__:13 [v [want [D Mary]]]]]].
					Last resort extraposition will be tried on [[[D John]:13 [T/fin [__:13 [v [want [D Mary]]]]]] [to leave]].
			= [[[D John] [T/fin [[D John] [v [want [D Mary]]]]]] [to leave]]
		Checking LF-interface conditions.
				to has unacceptable specifier [[D John]:13 [T/fin [__:13 [v [want [D Mary]]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  want: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Mary: [N, D, V, v, TT/fin];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[T/fin{v,V} D{N}] to]
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[T/fin [v{V} D{N}]]
					Target want in v
					=[T/fin [v [want D{N}]]]
				=[T/fin [v [want [D Mary]]]]
				2. Feature processing:
				=[T/fin [v [want [D Mary]]]]
				3. Extraposition:
				=[T/fin [v [want [D Mary]]]]
				4. Floater movement reconstruction:
				=[T/fin [v [want [D Mary]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [v [want [D Mary]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[T/fin [v [want [D Mary]]]]
				7. Last resort extraposition:
				An EPP-head "T/fin" lacks specifier.
					Last resort extraposition will be tried on [T/fin [v [want [D Mary]]]].
					No suitable node for extraposition found. No action was taken.
			=[[D John] [[T/fin [v [want [D Mary]]]] to]]

	22. Consume "leave"

		[[D John] [[T/fin [v [want [D Mary]]]] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [[[T/fin [v [want [D Mary]]]] [D John]] to]] leave] due to bad left branch.
				Reject [[[T/fin [v [want [D Mary]]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [[T/fin [v [want [D Mary]]]] [to leave]]]

	>>>	Trying candidate spellout structure [[D John] [[T/fin [v [want [D Mary]]]] [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[D John] [[T/fin [v [want [D Mary]]]] [to leave]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[D John] [[T/fin [v [want [D Mary]]]] [to leave]]]
				3. Extraposition:
				=[[D John] [[T/fin [v [want [D Mary]]]] [to leave]]]
				4. Floater movement reconstruction:
				=[[D John] [[T/fin [v [want [D Mary]]]] [to leave]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
					New head was spawned due to multiple specifiers at to but its category is unknown!
				=[[D John]:15 [? [[T/fin [v [want [D Mary]]]] [to [__:15 leave]]]]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG by phi-Agree from __:15.
						to acquired PHI:PER:3 by phi-Agree from __:15.
				=[[D John]:15 [? [[T/fin [v [want [D Mary]]]] [to [__:15 leave]]]]]
				7. Last resort extraposition:
					An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier.
				to has unacceptable specifier [T/fin [v [want [D Mary]]]].
					Last resort extraposition will be tried on [[D John]:15 [? [[T/fin [v [want [D Mary]]]] [to [__:15 leave]]]]].
			= [[D John] [? [[T/fin [v [want [D Mary]]]] [to [[D John] leave]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier.
				to has unacceptable specifier [T/fin [v [want [D Mary]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI_CHECKED', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  ?: [?];  T/fin: [TT/fin, ?];  v: [v, TT/fin, ?];  want: [V, v, TT/fin, ?];  D: [D, V, v, TT/fin, ?];  Mary: [N, D, V, v, TT/fin, ?];  to: [INF, ?];  __: [D, INF, ?];  __: [N, D, INF, ?];  leave: [V, INF, ?];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[[D John] [T/fin [v want]]]
				2. Feature processing:
				=[[D John] [T/fin [v want]]]
				3. Extraposition:
				=[[D John] [T/fin [v want]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v want]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:16 [T/fin [__:16 [v want]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:16 [T/fin [__:16 [v want]]]]
				7. Last resort extraposition:
				"want" lacks complement.
					Last resort extraposition will be tried on [[D John]:16 [T/fin [__:16 [v want]]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:16 [T/fin [__:16 [v want]]]] D]

	23. Consume "Mary"

		[[[D John] [T/fin [[D John] [v want]]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[[D John]:16 [T/fin [__:16 [v want]]]] D{N}]

	24. Consume "to"

		[[[D John] [T/fin [[D John] [v want]]]] D{N}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				"want" lacks complement.
				Avoid [[[D John] [T/fin [[D John] [v want]]]] <D Mary>] as left branch because it constitutes illicit structure.
				[[[D John]:16 [T/fin [__:16 [v want]]]] D{N}] + to = -98]
				D{N} + to = 2]
		Ranking completed:
			1. [D{N}; to]
			2. [[[[D John]:16 [T/fin [__:16 [v want]]]] D{N}]; to]
			Exploring solution number (1) =[D{N} to]
				1. Head movement reconstruction:
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
			=[[[D John]:16 [T/fin [__:16 [v want]]]] [[D Mary] to]]

	25. Consume "leave"

		[[[D John] [T/fin [[D John] [v want]]]] [[D Mary] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [v want]]]] [[D Mary] to]] leave] due to bad left branch.
				Reject [[[D Mary] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:16 [T/fin [__:16 [v want]]]] [[D Mary] [to leave]]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [v want]]]] [[D Mary] [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:16 [T/fin [__:16 [v want]]]] [[D Mary] [to leave]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:16 [T/fin [__:16 [v want]]]] [[D Mary] [to leave]]]
				3. Extraposition:
				=[[[D John]:16 [T/fin [__:16 [v want]]]] [[D Mary] [to leave]]]
				4. Floater movement reconstruction:
				=[[[D John]:16 [T/fin [__:16 [v want]]]] [[D Mary] [to leave]]]
				5. Phrasal movement reconstruction:
					[D Mary] will undergo A-reconstruction.
					New head was spawned due to multiple specifiers at to but its category is unknown!
				=[[[D John]:16 [T/fin [__:16 [v want]]]] [? [[D Mary]:17 [to [__:17 leave]]]]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG from the edge of to.
						to acquired PHI:PER:3 from the edge of to.
				=[[[D John]:16 [T/fin [__:16 [v want]]]] [? [[D Mary]:17 [to [__:17 leave]]]]]
				7. Last resort extraposition:
				"want" lacks complement.
					An uninterpretable grammatical head without lexical category was detected.
					Last resort extraposition will be tried on [[[D John]:16 [T/fin [__:16 [v want]]]] [? [[D Mary]:17 [to [__:17 leave]]]]].
			= [[[D John] [T/fin [[D John] [v want]]]] [? [[D Mary] [to [[D Mary] leave]]]]]
		Checking LF-interface conditions.
				"want" lacks complement.
					An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  want: [V, v, TT/fin];  ?: [?];  D: [D, ?];  Mary: [N, D, ?];  to: [INF, ?];  __: [D, INF, ?];  __: [N, D, INF, ?];  leave: [V, INF, ?];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[[D John]:16 [T/fin [__:16 [v want]]]] D{N}] to]
				1. Head movement reconstruction:
				=[[[D John]:16 [T/fin [__:16 [v want]]]] [D Mary]]
				2. Feature processing:
				=[[[D John]:16 [T/fin [__:16 [v want]]]] [D Mary]]
				3. Extraposition:
				=[[[D John]:16 [T/fin [__:16 [v want]]]] [D Mary]]
				4. Floater movement reconstruction:
				=[[[D John]:16 [T/fin [__:16 [v want]]]] [D Mary]]
				5. Phrasal movement reconstruction:
				=[[[D John]:16 [T/fin [__:16 [v want]]]] [D Mary]]
				6. Agreement reconstruction:
				=[[[D John]:16 [T/fin [__:16 [v want]]]] [D Mary]]
				7. Last resort extraposition:
				"want" lacks complement.
				D has unacceptable specifier [[D John]:16 [T/fin [__:16 [v want]]]].
					Last resort extraposition will be tried on [[[D John]:16 [T/fin [__:16 [v want]]]] [D Mary]].
					<D Mary> was made an adjunct.
					<D Mary> is transferred to LF as a phase.
				"want" lacks complement.
					Something is still wrong. The structure is still uninterpretable.
			=[[[[D John]:16 [T/fin [__:16 [v want]]]] <D Mary>] to]

	26. Consume "leave"

		[[[[D John] [T/fin [[D John] [v want]]]] <D Mary>] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[[D John] [T/fin [[D John] [v want]]]] <D Mary>] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[[D John]:16 [T/fin [__:16 [v want]]]] <D Mary>] [to leave]]

	>>>	Trying candidate spellout structure [[[[D John] [T/fin [[D John] [v want]]]] <D Mary>] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[[D John]:16 [T/fin [__:16 [v want]]]] <D Mary>] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[[D John]:16 [T/fin [__:16 [v want]]]] <D Mary>] [to leave]]
				3. Extraposition:
				=[[[[D John]:16 [T/fin [__:16 [v want]]]] <D Mary>] [to leave]]
				4. Floater movement reconstruction:
				=[[[[D John]:16 [T/fin [__:16 [v want]]]] <D Mary>] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[[D John]:16 [T/fin [__:16 [v want]]]] <D Mary>] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[[D John]:16 [T/fin [__:16 [v want]]]] <D Mary>] [to leave]]
				7. Last resort extraposition:
				"want" lacks complement.
				to has unacceptable specifier [[[D John]:16 [T/fin [__:16 [v want]]]] <D Mary>].
					Last resort extraposition will be tried on [[[[D John]:16 [T/fin [__:16 [v want]]]] <D Mary>] [to leave]].
			= [[[[D John] [T/fin [[D John] [v want]]]] <D Mary>] [to leave]]
		Checking LF-interface conditions.
				"want" lacks complement.
				to has unacceptable specifier [[[D John]:16 [T/fin [__:16 [v want]]]] <D Mary>].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  want: [V, v, TT/fin];  D: [D];  Mary: [N, D];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "want-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "wants".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 3
['John', 'asks', 'to_inf', 'leave']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'v$', 'ask-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin]

	10. Consume "v"

		[[D John] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D John] T/fin{v}]

	11. Consume "ask"

		[[D John] T/fin{v}] + ask
			Filtering out impossible merge sites...
			Sink "ask" into v because they are inside the same phonological word.
			=[[D John] T/fin{v,V}]

	12. Consume "to"

		[[D John] T/fin{v,V}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				ask (ask) is missing complement TO/inf
				Avoid [[D John] [T/fin [[D John] [v ask]]]] as left branch because it constitutes illicit structure.
				Prioritize [ask to] due to complement selection.
				[[D John] T/fin{v,V}] + to = -197]
				T/fin{v,V} + to = 104]
		Ranking completed:
			1. [T/fin{v,V}; to]
			2. [[[D John] T/fin{v,V}]; to]
			Exploring solution number (1) =[T/fin{v,V} to]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
				An EPP-head "T/fin{v,V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} to]]

	13. Consume "leave"

		[[D John] [T/fin{v,V} to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [v [ask to]]]]] leave] due to bad left branch.
				Reject [[T/fin [v [ask to]]] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} [to leave]]]

	>>>	Trying candidate spellout structure [[D John] [T/fin{v,V} [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D John] [T/fin [v{V} [to leave]]]]
					Target ask in v
					=[[D John] [T/fin [v [ask [to leave]]]]]
				=[[D John] [T/fin [v [ask [to leave]]]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
					to has neutralized PHI-feature, will be resolved into +ARG due to ask
				=[[D John] [T/fin [v [ask [to leave]]]]]
				3. Extraposition:
				=[[D John] [T/fin [v [ask [to leave]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v [ask [to leave]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:21 [T/fin [__:21 [v [ask [to leave]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:21 [T/fin [__:21 [v [ask [to leave]]]]]]
				7. Last resort extraposition:
				An EPP-head "to" lacks specifier.
					Last resort extraposition will be tried on [[D John]:21 [T/fin [__:21 [v [ask [to leave]]]]]].
					No suitable node for extraposition found. No action was taken.
			= [[D John] [T/fin [[D John] [v [ask [to leave]]]]]]
		Checking LF-interface conditions.
				An EPP-head "to" lacks specifier.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
ask:['!COMP:TO/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:ask', 'PF:ask', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'SPEC:*', 'VAL']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  ask: [V, v, TT/fin];  to: [INF, V, v, TT/fin];  leave: [V, INF, V, v, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin{v,V}] to]
				1. Head movement reconstruction:
				=[[D John] [T/fin [v ask]]]
				2. Feature processing:
				=[[D John] [T/fin [v ask]]]
				3. Extraposition:
				=[[D John] [T/fin [v ask]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v ask]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:22 [T/fin [__:22 [v ask]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:22 [T/fin [__:22 [v ask]]]]
				7. Last resort extraposition:
				ask (ask) is missing complement TO/inf
					Last resort extraposition will be tried on [[D John]:22 [T/fin [__:22 [v ask]]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:22 [T/fin [__:22 [v ask]]]] to]

	14. Consume "leave"

		[[[D John] [T/fin [[D John] [v ask]]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [v ask]]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:22 [T/fin [__:22 [v ask]]]] [to leave]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [v ask]]]] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:22 [T/fin [__:22 [v ask]]]] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:22 [T/fin [__:22 [v ask]]]] [to leave]]
				3. Extraposition:
				=[[[D John]:22 [T/fin [__:22 [v ask]]]] [to leave]]
				4. Floater movement reconstruction:
				=[[[D John]:22 [T/fin [__:22 [v ask]]]] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[D John]:22 [T/fin [__:22 [v ask]]]] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[D John]:22 [T/fin [__:22 [v ask]]]] [to leave]]
				7. Last resort extraposition:
				ask (ask) is missing complement TO/inf
				to has unacceptable specifier [[D John]:22 [T/fin [__:22 [v ask]]]].
					Last resort extraposition will be tried on [[[D John]:22 [T/fin [__:22 [v ask]]]] [to leave]].
			= [[[D John] [T/fin [[D John] [v ask]]]] [to leave]]
		Checking LF-interface conditions.
				ask (ask) is missing complement TO/inf
				to has unacceptable specifier [[D John]:22 [T/fin [__:22 [v ask]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
ask:['!COMP:TO/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:ask', 'PF:ask', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  ask: [V, v, TT/fin];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ask-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "asks".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 4
['John', 'asks', 'Mary', 'to_inf', 'leave']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'v$', 'ask-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin]

	10. Consume "v"

		[[D John] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D John] T/fin{v}]

	11. Consume "ask"

		[[D John] T/fin{v}] + ask
			Filtering out impossible merge sites...
			Sink "ask" into v because they are inside the same phonological word.
			=[[D John] T/fin{v,V}]

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

	12. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	13. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	14. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	15. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	16. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	17. Consume "D"

		[[D John] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				ask (ask) is missing complement TO/inf
				Avoid [[D John] [T/fin [[D John] [v ask]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				[[D John] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 104]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D John] T/fin{v,V}]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
				An EPP-head "T/fin{v,V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} D]]

	18. Consume "Mary"

		[[D John] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[D John] [T/fin{v,V} D{N}]]

	19. Consume "to"

		[[D John] [T/fin{v,V} D{N}]] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				ask (ask) is missing complement TO/inf
				Avoid [[D John] [T/fin [[D John] [v [ask <D Mary>]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, to.
				An EPP-head "T/fin" lacks specifier.
				ask (ask) is missing complement TO/inf
				Avoid [T/fin [v [ask <D Mary>]]] as left branch because it constitutes illicit structure.
				Avoid D{N} because it could break words.
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
				Prioritize D{N} because all solutions were negative.
				[[D John] [T/fin{v,V} D{N}]] + to = -197]
				[T/fin{v,V} D{N}] + to = -194]
				D{N} + to = 106]
		Ranking completed:
			1. [D{N}; to]
			2. [[T/fin{v,V} D{N}]; to]
			3. [[[D John] [T/fin{v,V} D{N}]]; to]
			Exploring solution number (1) =[D{N} to]
				1. Head movement reconstruction:
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
			=[[D John] [T/fin{v,V} [[D Mary] to]]]

	20. Consume "leave"

		[[D John] [T/fin{v,V} [[D Mary] to]]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [v [ask [[D Mary] to]]]]]] leave] due to bad left branch.
				Reject [[T/fin [v [ask [[D Mary] to]]]] leave] due to bad left branch.
				Reject [[[D Mary] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} [[D Mary] [to leave]]]]

	>>>	Trying candidate spellout structure [[D John] [T/fin{v,V} [[D Mary] [to leave]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D John] [T/fin [v{V} [[D Mary] [to leave]]]]]
					Target ask in v
					=[[D John] [T/fin [v [ask [[D Mary] [to leave]]]]]]
				=[[D John] [T/fin [v [ask [[D Mary] [to leave]]]]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
					to has neutralized PHI-feature, will be resolved into +ARG due to ask
				=[[D John] [T/fin [v [ask [[D Mary] [to leave]]]]]]
				3. Extraposition:
				=[[D John] [T/fin [v [ask [[D Mary] [to leave]]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v [ask [[D Mary] [to leave]]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
					[D Mary] will undergo A-reconstruction.
				=[[D John]:28 [T/fin [__:28 [v [ask [[D Mary]:29 [to [__:29 leave]]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:28 [T/fin [__:28 [v [ask [[D Mary]:29 [to [__:29 leave]]]]]]]]
				7. Last resort extraposition:
			= [[D John] [T/fin [[D John] [v [ask [[D Mary] [to [[D Mary] leave]]]]]]]]
		Checking LF-interface conditions.
			Transferring [[D John]:28 [T/fin [__:28 [v [ask [[D Mary]:29 [to [__:29 leave]]]]]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				ask with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'ask([D John])', 'leave([D Mary])', 'v([D John])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [v [ask [[D Mary] [to [[D Mary] leave]]]]]]]]
		Grammar: [[D John]:1 [T/fin [__:1 [v [ask [[D Mary]:2 [to [__:2 leave]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [DP:2 [INF [__:2 V]]]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
ask:['!COMP:TO/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:ask', 'PF:ask', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  ask: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Mary: [N, D, V, v, TT/fin];  to: [INF, V, v, TT/fin];  __: [D, INF, V, v, TT/fin];  __: [N, D, INF, V, v, TT/fin];  leave: [V, INF, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[T/fin{v,V} D{N}] to]
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[T/fin [v{V} D{N}]]
					Target ask in v
					=[T/fin [v [ask D{N}]]]
				=[T/fin [v [ask [D Mary]]]]
				2. Feature processing:
				=[T/fin [v [ask [D Mary]]]]
				3. Extraposition:
					ask cannot select D
					Extraposition will be tried on [D Mary].
					<D Mary> was made an adjunct.
					<D Mary> is transferred to LF as a phase.
				=[T/fin [v [ask <D Mary>]]]
				4. Floater movement reconstruction:
				=[T/fin [v [ask <D Mary>]]]
				5. Phrasal movement reconstruction:
				=[T/fin [v [ask <D Mary>]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[T/fin [v [ask <D Mary>]]]
				7. Last resort extraposition:
				An EPP-head "T/fin" lacks specifier.
				ask (ask) is missing complement TO/inf
					Last resort extraposition will be tried on [T/fin [v [ask <D Mary>]]].
					No suitable node for extraposition found. No action was taken.
			=[[D John] [[T/fin [v [ask <D Mary>]]] to]]

	21. Consume "leave"

		[[D John] [[T/fin [v [ask <D Mary>]]] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [[[T/fin [v [ask <D Mary>]]] [D John]] to]] leave] due to bad left branch.
				Reject [[[T/fin [v [ask <D Mary>]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [[T/fin [v [ask <D Mary>]]] [to leave]]]

	>>>	Trying candidate spellout structure [[D John] [[T/fin [v [ask <D Mary>]]] [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[D John] [[T/fin [v [ask <D Mary>]]] [to leave]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[D John] [[T/fin [v [ask <D Mary>]]] [to leave]]]
				3. Extraposition:
				=[[D John] [[T/fin [v [ask <D Mary>]]] [to leave]]]
				4. Floater movement reconstruction:
				=[[D John] [[T/fin [v [ask <D Mary>]]] [to leave]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
					New head was spawned due to multiple specifiers at to but its category is unknown!
				=[[D John]:31 [? [[T/fin [v [ask <D Mary>]]] [to [__:31 leave]]]]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG by phi-Agree from __:31.
						to acquired PHI:PER:3 by phi-Agree from __:31.
				=[[D John]:31 [? [[T/fin [v [ask <D Mary>]]] [to [__:31 leave]]]]]
				7. Last resort extraposition:
					An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier.
				ask (ask) is missing complement TO/inf
				to has unacceptable specifier [T/fin [v [ask <D Mary>]]].
					Last resort extraposition will be tried on [[D John]:31 [? [[T/fin [v [ask <D Mary>]]] [to [__:31 leave]]]]].
			= [[D John] [? [[T/fin [v [ask <D Mary>]]] [to [[D John] leave]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier.
				ask (ask) is missing complement TO/inf
				to has unacceptable specifier [T/fin [v [ask <D Mary>]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
ask:['!COMP:TO/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:ask', 'PF:ask', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI_CHECKED', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  ?: [?];  T/fin: [TT/fin, ?];  v: [v, TT/fin, ?];  ask: [V, v, TT/fin, ?];  D: [D, V, v, TT/fin, ?];  Mary: [N, D, V, v, TT/fin, ?];  to: [INF, ?];  __: [D, INF, ?];  __: [N, D, INF, ?];  leave: [V, INF, ?];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[[D John] [T/fin{v,V} D{N}]] to]
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D John] [T/fin [v{V} D{N}]]]
					Target ask in v
					=[[D John] [T/fin [v [ask D{N}]]]]
				=[[D John] [T/fin [v [ask [D Mary]]]]]
				2. Feature processing:
				=[[D John] [T/fin [v [ask [D Mary]]]]]
				3. Extraposition:
					ask cannot select D
					Extraposition will be tried on [D Mary].
					<D Mary> was made an adjunct.
					<D Mary> is transferred to LF as a phase.
				=[[D John] [T/fin [v [ask <D Mary>]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v [ask <D Mary>]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:32 [T/fin [__:32 [v [ask <D Mary>]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:32 [T/fin [__:32 [v [ask <D Mary>]]]]]
				7. Last resort extraposition:
				ask (ask) is missing complement TO/inf
					Last resort extraposition will be tried on [[D John]:32 [T/fin [__:32 [v [ask <D Mary>]]]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:32 [T/fin [__:32 [v [ask <D Mary>]]]]] to]

	22. Consume "leave"

		[[[D John] [T/fin [[D John] [v [ask <D Mary>]]]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [v [ask <D Mary>]]]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:32 [T/fin [__:32 [v [ask <D Mary>]]]]] [to leave]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [v [ask <D Mary>]]]]] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:32 [T/fin [__:32 [v [ask <D Mary>]]]]] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:32 [T/fin [__:32 [v [ask <D Mary>]]]]] [to leave]]
				3. Extraposition:
				=[[[D John]:32 [T/fin [__:32 [v [ask <D Mary>]]]]] [to leave]]
				4. Floater movement reconstruction:
				=[[[D John]:32 [T/fin [__:32 [v [ask <D Mary>]]]]] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[D John]:32 [T/fin [__:32 [v [ask <D Mary>]]]]] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[D John]:32 [T/fin [__:32 [v [ask <D Mary>]]]]] [to leave]]
				7. Last resort extraposition:
				ask (ask) is missing complement TO/inf
				to has unacceptable specifier [[D John]:32 [T/fin [__:32 [v [ask <D Mary>]]]]].
					Last resort extraposition will be tried on [[[D John]:32 [T/fin [__:32 [v [ask <D Mary>]]]]] [to leave]].
			= [[[D John] [T/fin [[D John] [v [ask <D Mary>]]]]] [to leave]]
		Checking LF-interface conditions.
				ask (ask) is missing complement TO/inf
				to has unacceptable specifier [[D John]:32 [T/fin [__:32 [v [ask <D Mary>]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
ask:['!COMP:TO/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:ask', 'PF:ask', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  ask: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Mary: [N, D, V, v, TT/fin];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[[D John] [T/fin [v ask]]]
				2. Feature processing:
				=[[D John] [T/fin [v ask]]]
				3. Extraposition:
				=[[D John] [T/fin [v ask]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v ask]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:33 [T/fin [__:33 [v ask]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:33 [T/fin [__:33 [v ask]]]]
				7. Last resort extraposition:
				ask (ask) is missing complement TO/inf
					Last resort extraposition will be tried on [[D John]:33 [T/fin [__:33 [v ask]]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:33 [T/fin [__:33 [v ask]]]] D]

	23. Consume "Mary"

		[[[D John] [T/fin [[D John] [v ask]]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[[D John]:33 [T/fin [__:33 [v ask]]]] D{N}]

	24. Consume "to"

		[[[D John] [T/fin [[D John] [v ask]]]] D{N}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				ask (ask) is missing complement TO/inf
				Avoid [[[D John] [T/fin [[D John] [v ask]]]] <D Mary>] as left branch because it constitutes illicit structure.
				[[[D John]:33 [T/fin [__:33 [v ask]]]] D{N}] + to = -98]
				D{N} + to = 2]
		Ranking completed:
			1. [D{N}; to]
			2. [[[[D John]:33 [T/fin [__:33 [v ask]]]] D{N}]; to]
			Exploring solution number (1) =[D{N} to]
				1. Head movement reconstruction:
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
			=[[[D John]:33 [T/fin [__:33 [v ask]]]] [[D Mary] to]]

	25. Consume "leave"

		[[[D John] [T/fin [[D John] [v ask]]]] [[D Mary] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [v ask]]]] [[D Mary] to]] leave] due to bad left branch.
				Reject [[[D Mary] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:33 [T/fin [__:33 [v ask]]]] [[D Mary] [to leave]]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [v ask]]]] [[D Mary] [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:33 [T/fin [__:33 [v ask]]]] [[D Mary] [to leave]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:33 [T/fin [__:33 [v ask]]]] [[D Mary] [to leave]]]
				3. Extraposition:
				=[[[D John]:33 [T/fin [__:33 [v ask]]]] [[D Mary] [to leave]]]
				4. Floater movement reconstruction:
				=[[[D John]:33 [T/fin [__:33 [v ask]]]] [[D Mary] [to leave]]]
				5. Phrasal movement reconstruction:
					[D Mary] will undergo A-reconstruction.
					New head was spawned due to multiple specifiers at to but its category is unknown!
				=[[[D John]:33 [T/fin [__:33 [v ask]]]] [? [[D Mary]:34 [to [__:34 leave]]]]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG from the edge of to.
						to acquired PHI:PER:3 from the edge of to.
				=[[[D John]:33 [T/fin [__:33 [v ask]]]] [? [[D Mary]:34 [to [__:34 leave]]]]]
				7. Last resort extraposition:
				ask (ask) is missing complement TO/inf
					An uninterpretable grammatical head without lexical category was detected.
					Last resort extraposition will be tried on [[[D John]:33 [T/fin [__:33 [v ask]]]] [? [[D Mary]:34 [to [__:34 leave]]]]].
			= [[[D John] [T/fin [[D John] [v ask]]]] [? [[D Mary] [to [[D Mary] leave]]]]]
		Checking LF-interface conditions.
				ask (ask) is missing complement TO/inf
					An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
ask:['!COMP:TO/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:ask', 'PF:ask', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  ask: [V, v, TT/fin];  ?: [?];  D: [D, ?];  Mary: [N, D, ?];  to: [INF, ?];  __: [D, INF, ?];  __: [N, D, INF, ?];  leave: [V, INF, ?];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[[D John]:33 [T/fin [__:33 [v ask]]]] D{N}] to]
				1. Head movement reconstruction:
				=[[[D John]:33 [T/fin [__:33 [v ask]]]] [D Mary]]
				2. Feature processing:
				=[[[D John]:33 [T/fin [__:33 [v ask]]]] [D Mary]]
				3. Extraposition:
				=[[[D John]:33 [T/fin [__:33 [v ask]]]] [D Mary]]
				4. Floater movement reconstruction:
				=[[[D John]:33 [T/fin [__:33 [v ask]]]] [D Mary]]
				5. Phrasal movement reconstruction:
				=[[[D John]:33 [T/fin [__:33 [v ask]]]] [D Mary]]
				6. Agreement reconstruction:
				=[[[D John]:33 [T/fin [__:33 [v ask]]]] [D Mary]]
				7. Last resort extraposition:
				ask (ask) is missing complement TO/inf
				D has unacceptable specifier [[D John]:33 [T/fin [__:33 [v ask]]]].
					Last resort extraposition will be tried on [[[D John]:33 [T/fin [__:33 [v ask]]]] [D Mary]].
					<D Mary> was made an adjunct.
					<D Mary> is transferred to LF as a phase.
				ask (ask) is missing complement TO/inf
					Something is still wrong. The structure is still uninterpretable.
			=[[[[D John]:33 [T/fin [__:33 [v ask]]]] <D Mary>] to]

	26. Consume "leave"

		[[[[D John] [T/fin [[D John] [v ask]]]] <D Mary>] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[[D John] [T/fin [[D John] [v ask]]]] <D Mary>] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[[D John]:33 [T/fin [__:33 [v ask]]]] <D Mary>] [to leave]]

	>>>	Trying candidate spellout structure [[[[D John] [T/fin [[D John] [v ask]]]] <D Mary>] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[[D John]:33 [T/fin [__:33 [v ask]]]] <D Mary>] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[[D John]:33 [T/fin [__:33 [v ask]]]] <D Mary>] [to leave]]
				3. Extraposition:
				=[[[[D John]:33 [T/fin [__:33 [v ask]]]] <D Mary>] [to leave]]
				4. Floater movement reconstruction:
				=[[[[D John]:33 [T/fin [__:33 [v ask]]]] <D Mary>] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[[D John]:33 [T/fin [__:33 [v ask]]]] <D Mary>] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[[D John]:33 [T/fin [__:33 [v ask]]]] <D Mary>] [to leave]]
				7. Last resort extraposition:
				ask (ask) is missing complement TO/inf
				to has unacceptable specifier [[[D John]:33 [T/fin [__:33 [v ask]]]] <D Mary>].
					Last resort extraposition will be tried on [[[[D John]:33 [T/fin [__:33 [v ask]]]] <D Mary>] [to leave]].
			= [[[[D John] [T/fin [[D John] [v ask]]]] <D Mary>] [to leave]]
		Checking LF-interface conditions.
				ask (ask) is missing complement TO/inf
				to has unacceptable specifier [[[D John]:33 [T/fin [__:33 [v ask]]]] <D Mary>].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
ask:['!COMP:TO/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:ask', 'PF:ask', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  ask: [V, v, TT/fin];  D: [D];  Mary: [N, D];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ask-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "asks".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 5
['adoro', 'Luisa']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['[-o]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

	1. Consume "T/fin$"
		Adding inflectional features {'LANG:IT', 'PHI:HUM:HUM', 'PHI:PER:1', 'PHI:DET:DEF', 'PHI:NUM:SG', '-'} to T/fin
			=T/fin

	3. Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=T/fin{v}

	4. Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
			=T/fin{v,V}

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

	5. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

	6. Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

	7. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

	8. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

	9. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'LANG:IT', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	10. Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[T/fin{v,V} D]

	11. Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
			=[T/fin{v,V} D{N}]

	>>>	Trying candidate spellout structure [T/fin{v,V} D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[T/fin [v{V} D{N}]]
					Target adora in v
					=[T/fin [v [adora D{N}]]]
				=[T/fin [v [adora [D Luisa]]]]
				2. Feature processing:
				=[T/fin [v [adora [D Luisa]]]]
				3. Extraposition:
				=[T/fin [v [adora [D Luisa]]]]
				4. Floater movement reconstruction:
				=[T/fin [v [adora [D Luisa]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [v [adora [D Luisa]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:1 from the edge of T/fin.
				=[T/fin [v [adora [D Luisa]]]]
				7. Last resort extraposition:
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Transferring [T/fin [v [adora [D Luisa]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'adora([D Luisa])', 'v(T/fin)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [T/fin [v [adora [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
----------------------------------------------------------------------------------------------------------
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin: [TT/fin];  v: [v, TT/fin];  adora: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Luisa: [N, D, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "adora-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "adoro".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 6
['ihailen', 'Merjaa']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['[-n]$', 'T/fin$', 'v$', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

	1. Consume "T/fin$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:PER:1', 'PHI:DET:DEF', 'LANG:FI', 'PHI:NUM:SG', '-'} to T/fin
			=T/fin

	3. Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=T/fin{v}

	4. Consume "ihaile-"

		T/fin{v} + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into v because they are inside the same phonological word.
			=T/fin{v,V}

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'par$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	5. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	6. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	7. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	8. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	9. Consume "par$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

	10. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'LANG:FI', 'PHI:NUM:SG'} to D

	11. Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[T/fin{v,V} D]

	12. Consume "Merja-"

		[T/fin{v,V} D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[T/fin{v,V} D{N}]

	>>>	Trying candidate spellout structure [T/fin{v,V} D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[T/fin [v{V} D{N}]]
					Target ihaile- in v
					=[T/fin [v [ihaile- D{N}]]]
				=[T/fin [v [ihaile- [D Merja-]]]]
				2. Feature processing:
				=[T/fin [v [ihaile- [D Merja-]]]]
				3. Extraposition:
				=[T/fin [v [ihaile- [D Merja-]]]]
				4. Floater movement reconstruction:
				=[T/fin [v [ihaile- [D Merja-]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [v [ihaile- [D Merja-]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:1 from the edge of T/fin.
				=[T/fin [v [ihaile- [D Merja-]]]]
				7. Last resort extraposition:
			= [T/fin [v [ihaile- [D Merja-]]]]
		Checking LF-interface conditions.
			Transferring [T/fin [v [ihaile- [D Merja-]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'ihaile-([D Merja-])', 'v(T/fin)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[T/fin [v [ihaile- [D Merja-]]]]
		Grammar: [T/fin [v [ihaile- [D Merja-]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
----------------------------------------------------------------------------------------------------------
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

T/fin: [TT/fin];  v: [v, TT/fin];  ihaile-: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Merja-: [N, D, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "par$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihailen".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 7
['admire', 'Mary']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['[-0]$', 'T/fin$', 'v$', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

	1. Consume "T/fin$"
		Adding inflectional features {'PHI:NUM:PL', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:2', 'PHI:PER:1', 'PHI:PER:3', 'PHI:GEN:N', 'PHI:NUM:SG'} to T/fin
			=T/fin

	3. Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=T/fin{v}

	4. Consume "admire"

		T/fin{v} + admire
			Filtering out impossible merge sites...
			Sink "admire" into v because they are inside the same phonological word.
			=T/fin{v,V}

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

	5. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	6. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	7. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	8. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	9. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	10. Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
				An EPP-head "T/fin{v,V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[T/fin{v,V} D]

	11. Consume "Mary"

		[T/fin{v,V} D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[T/fin{v,V} D{N}]

	>>>	Trying candidate spellout structure [T/fin{v,V} D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[T/fin [v{V} D{N}]]
					Target admire in v
					=[T/fin [v [admire D{N}]]]
				=[T/fin [v [admire [D Mary]]]]
				2. Feature processing:
				=[T/fin [v [admire [D Mary]]]]
				3. Extraposition:
				=[T/fin [v [admire [D Mary]]]]
				4. Floater movement reconstruction:
				=[T/fin [v [admire [D Mary]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [v [admire [D Mary]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[T/fin [v [admire [D Mary]]]]
				7. Last resort extraposition:
				An EPP-head "T/fin" lacks specifier.
					Last resort extraposition will be tried on [T/fin [v [admire [D Mary]]]].
					No suitable node for extraposition found. No action was taken.
			= [T/fin [v [admire [D Mary]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['!COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

T/fin: [TT/fin];  v: [v, TT/fin];  admire: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Mary: [N, D, V, v, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "admire-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "admire".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 8
['tassa', 'kaskee', 'Merjan', 'lahtea', 'Pekka']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['P$', 'tama']
			=P

		Next word contains multiple morphemes ['def$', '3p$', 'sg$', 'D$', 'tama-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	2. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	3. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	4. Consume "D$"
		Adding inflectional features {'-', 'PHI:PER:3', 'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:FI'} to D

	5. Consume "D"

		P + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
			=P{D}

	6. Consume "tama"

		P{D} + tama
			Filtering out impossible merge sites...
			Sink "tama" into D because they are inside the same phonological word.
			=P{D,N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v*$', 'kaske-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	7. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	8. Consume "T/fin"

		P{D,N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[P{D,N} T/fin]
				1. Head movement reconstruction:
					P was opened into [P [D tama]].
				=[P [D tama]]
				2. Feature processing:
				=[P [D tama]]
				3. Extraposition:
				=[P [D tama]]
				4. Floater movement reconstruction:
				=[P [D tama]]
				5. Phrasal movement reconstruction:
				=[P [D tama]]
				6. Agreement reconstruction:
				=[P [D tama]]
				7. Last resort extraposition:
			=[[P [D tama]] T/fin]

	9. Consume "v*"

		[[P [D tama]] T/fin] + v*
			Filtering out impossible merge sites...
			Sink "v*" into T/fin because they are inside the same phonological word.
			=[[P [D tama]] T/fin{v}]

	10. Consume "kaske"

		[[P [D tama]] T/fin{v}] + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into v* because they are inside the same phonological word.
			=[[P [D tama]] T/fin{v,V}]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'gen$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	11. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	12. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	13. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	14. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	15. Consume "gen$"
		Storing inflectional feature ['-', '-FLOAT', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

	16. Consume "D$"
		Adding inflectional features {'TAIL:ARG,VAL,CAT:INF', 'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', '-FLOAT', 'LANG:FI', 'PHI:NUM:SG'} to D

	17. Consume "D"

		[[P [D tama]] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				kaske (kaske) is missing complement A/inf
				Avoid [[P [D tama]] [T/fin [v* kaske]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				[[P [D tama]] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 56]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[P [D tama]] T/fin{v,V}]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[P [D tama]] [T/fin{v,V} D]]

	18. Consume "Merja-"

		[[P [D tama]] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[P [D tama]] [T/fin{v,V} D{N}]]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	19. Consume "A/inf"

		[[P [D tama]] [T/fin{v,V} D{N}]] + A/inf
			Filtering out impossible merge sites...
				Reject [[[P [D tama]] [T/fin [v* [kaske <D Merja->]]]] A/inf] due to bad left branch.
				Reject [[T/fin [v* [kaske <D Merja->]]] A/inf] due to bad left branch.
			Exploring solution number (1) =[D{N} A/inf]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[P [D tama]] [T/fin{v,V} [[D Merja-] A/inf]]]

	20. Consume "lahtea"

		[[P [D tama]] [T/fin{v,V} [[D Merja-] A/inf]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[P [D tama]] [T/fin{v,V} [[D Merja-] A/inf{V}]]]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	21. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	22. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	23. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	24. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	25. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	26. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D

	27. Consume "D"

		[[P [D tama]] [T/fin{v,V} [[D Merja-] A/inf{V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				[D Merja-] has no thematic role at the SPEC of A/inf
				Avoid [[D Merja-] [A/inf lahtea]] as left branch because it constitutes illicit structure.
				[[P [D tama]] [T/fin{v,V} [[D Merja-] A/inf{V}]]] + D = -98]
				[T/fin{v,V} [[D Merja-] A/inf{V}]] + D = -96]
				[[D Merja-] A/inf{V}] + D = -94]
				A/inf{V} + D = 4]
		Ranking completed:
			1. [A/inf{V}; D]
			2. [[[D Merja-] A/inf{V}]; D]
			3. [[T/fin{v,V} [[D Merja-] A/inf{V}]]; D]
			4. [[[P [D tama]] [T/fin{v,V} [[D Merja-] A/inf{V}]]]; D]
			Exploring solution number (1) =[A/inf{V} D]
				1. Head movement reconstruction:
				=A/inf{V}
				2. Feature processing:
				=A/inf{V}
				3. Extraposition:
				=A/inf{V}
				4. Floater movement reconstruction:
				=A/inf{V}
				5. Phrasal movement reconstruction:
				=A/inf{V}
				6. Agreement reconstruction:
				=A/inf{V}
				7. Last resort extraposition:
				A/inf{V} probing for CAT:V failed.
				"A/inf{V}" lacks complement.
					Last resort extraposition will be tried on A/inf{V}.
					No suitable node for extraposition found. No action was taken.
			=[[P [D tama]] [T/fin{v,V} [[D Merja-] [A/inf{V} D]]]]

	28. Consume "Pekka"

		[[P [D tama]] [T/fin{v,V} [[D Merja-] [A/inf{V} D]]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=[[P [D tama]] [T/fin{v,V} [[D Merja-] [A/inf{V} D{N}]]]]

	>>>	Trying candidate spellout structure [[P [D tama]] [T/fin{v,V} [[D Merja-] [A/inf{V} D{N}]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[[P [D tama]] [T/fin [v*{V} [[D Merja-] [A/inf{V} D{N}]]]]]
					Target kaske in v*
					=[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [A/inf{V} D{N}]]]]]]
					Target lahtea in A/inf
					=[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [A/inf [lahtea D{N}]]]]]]]
				=[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [A/inf [lahtea [D Pekka]]]]]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
					A/inf has neutralized PHI-feature, will be resolved into +ARG due to kaske
				=[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [A/inf [lahtea [D Pekka]]]]]]]]
				3. Extraposition:
				=[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [A/inf [lahtea [D Pekka]]]]]]]]
				4. Floater movement reconstruction:
					D at the right failed to tail [ARG][CAT:FIN][VAL]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					Dropping <D Pekka>
					 = [[P [D tama]] [T/fin [<__>:1 [v* [kaske [[D Merja-] [A/inf [lahtea <D Pekka>:1]]]]]]]]
				=[[P [D tama]] [T/fin [<__>:1 [v* [kaske [[D Merja-] [A/inf [lahtea <D Pekka>:1]]]]]]]]
				5. Phrasal movement reconstruction:
					[D Merja-] will undergo A-reconstruction.
				=[[P [D tama]] [T/fin [<__>:1 [v* [kaske [[D Merja-]:5 [A/inf [__:5 [lahtea <D Pekka>:1]]]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[P [D tama]] [T/fin [<__>:1 [v* [kaske [[D Merja-]:5 [A/inf [__:5 [lahtea <D Pekka>:1]]]]]]]]]
				7. Last resort extraposition:
			= [[P [D tama]] [T/fin [<D Pekka> [v* [kaske [[D Merja-] [A/inf [[D Merja-] [lahtea <D Pekka>]]]]]]]]]
		Checking LF-interface conditions.
			Transferring [[P [D tama]] [T/fin [<__>:1 [v* [kaske [[D Merja-]:5 [A/inf [__:5 [lahtea <D Pekka>:1]]]]]]]]] into the conceptual-intentional system...
				P with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				v* with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: )
				kaske with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. [D Merja-] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'P([D tama])', 'T/fin(Generic)', 'T/fin([P [D tama]])', 'kaske(clausal argument)', 'lahtea([D Merja-])', 'v*(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[P [D tama]] [T/fin [<D Pekka> [v* [kaske [[D Merja-] [A/inf [[D Merja-] [lahtea <D Pekka>]]]]]]]]]
		Grammar: [[P [D tama]] [T/fin [<__>:1 [v* [kaske [[D Merja-]:2 [A/inf [__:2 [lahtea <D Pekka>:1]]]]]]]]]
		Spellout TT/finP = [PP [TT/fin [__:1 [v [V [DP:2 [INF [__:2 [V DP:1]]]]]]]]]
----------------------------------------------------------------------------------------------------------
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Merja-: [N, D, V, v, TT/fin];  A/inf: [INF, V, v, TT/fin];  __: [D, INF, V, v, TT/fin];  __: [N, D, INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  D: [D, V, INF, V, v, TT/fin];  Pekka: [N, D, V, INF, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D Merja-] A/inf{V}] D]
				1. Head movement reconstruction:
				=[[D Merja-] [A/inf lahtea]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
				=[[D Merja-] [A/inf lahtea]]
				3. Extraposition:
				=[[D Merja-] [A/inf lahtea]]
				4. Floater movement reconstruction:
				=[[D Merja-] [A/inf lahtea]]
				5. Phrasal movement reconstruction:
				=[[D Merja-] [A/inf lahtea]]
				6. Agreement reconstruction:
					Head A/inf, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						A/inf acquired PHI:NUM:SG from the edge of A/inf.
						A/inf acquired PHI:PER:3 from the edge of A/inf.
				=[[D Merja-] [A/inf lahtea]]
				7. Last resort extraposition:
				[D Merja-] has no thematic role at the SPEC of A/inf
					Last resort extraposition will be tried on [[D Merja-] [A/inf lahtea]].
					No suitable node for extraposition found. No action was taken.
			=[[P [D tama]] [T/fin{v,V} [[[D Merja-] [A/inf lahtea]] D]]]

	29. Consume "Pekka"

		[[P [D tama]] [T/fin{v,V} [[[D Merja-] [A/inf lahtea]] D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=[[P [D tama]] [T/fin{v,V} [[[D Merja-] [A/inf lahtea]] D{N}]]]

	>>>	Trying candidate spellout structure [[P [D tama]] [T/fin{v,V} [[[D Merja-] [A/inf lahtea]] D{N}]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[[P [D tama]] [T/fin [v*{V} [[[D Merja-] [A/inf lahtea]] D{N}]]]]
					Target kaske in v*
					=[[P [D tama]] [T/fin [v* [kaske [[[D Merja-] [A/inf lahtea]] D{N}]]]]]
				=[[P [D tama]] [T/fin [v* [kaske [[[D Merja-] [A/inf lahtea]] [D Pekka]]]]]]
				2. Feature processing:
				=[[P [D tama]] [T/fin [v* [kaske [[[D Merja-] [A/inf lahtea]] [D Pekka]]]]]]
				3. Extraposition:
					kaske cannot select D
					Extraposition will be tried on [D Pekka].
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
				=[[P [D tama]] [T/fin [v* [kaske [[[D Merja-] [A/inf lahtea]] <D Pekka>]]]]]
				4. Floater movement reconstruction:
					D at the right failed to tail [ARG][CAT:FIN][VAL]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					Dropping <D Pekka>
					 = [[P [D tama]] [T/fin [<__>:2 [v* [kaske [[[D Merja-] [A/inf lahtea]] <D Pekka>:2]]]]]]
				=[[P [D tama]] [T/fin [<__>:2 [v* [kaske [[[D Merja-] [A/inf lahtea]] <D Pekka>:2]]]]]]
				5. Phrasal movement reconstruction:
				=[[P [D tama]] [T/fin [<__>:2 [v* [kaske [[[D Merja-] [A/inf lahtea]] <D Pekka>:2]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[P [D tama]] [T/fin [<__>:2 [v* [kaske [[[D Merja-] [A/inf lahtea]] <D Pekka>:2]]]]]]
				7. Last resort extraposition:
				D([D Merja-]) failed internal tail test for {frozenset({'CAT:INF', 'ARG', 'VAL'})}.
				[D Merja-] has no thematic role at the SPEC of A/inf
					Last resort extraposition will be tried on [[P [D tama]] [T/fin [<__>:2 [v* [kaske [[[D Merja-] [A/inf lahtea]] <D Pekka>:2]]]]]].
					No suitable node for extraposition found. No action was taken.
			= [[P [D tama]] [T/fin [<D Pekka> [v* [kaske [[[D Merja-] [A/inf lahtea]] <D Pekka>]]]]]]
		Checking LF-interface conditions.
				D([D Merja-]) failed internal tail test for {frozenset({'CAT:INF', 'ARG', 'VAL'})}.
				[D Merja-] has no thematic role at the SPEC of A/inf
			LF-interface condition(s) violated
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'PHI:NUM:SG', 'PHI:PER:3']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Merja-: [N, D, V, v, TT/fin];  A/inf: [INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  D: [D, V, v, TT/fin];  Pekka: [N, D, V, v, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[T/fin{v,V} [[D Merja-] A/inf{V}]] D]
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[T/fin [v*{V} [[D Merja-] A/inf{V}]]]
					Target kaske in v*
					=[T/fin [v* [kaske [[D Merja-] A/inf{V}]]]]
				=[T/fin [v* [kaske [[D Merja-] [A/inf lahtea]]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
					A/inf has neutralized PHI-feature, will be resolved into +ARG due to kaske
				=[T/fin [v* [kaske [[D Merja-] [A/inf lahtea]]]]]
				3. Extraposition:
				=[T/fin [v* [kaske [[D Merja-] [A/inf lahtea]]]]]
				4. Floater movement reconstruction:
				=[T/fin [v* [kaske [[D Merja-] [A/inf lahtea]]]]]
				5. Phrasal movement reconstruction:
					[D Merja-] will undergo A-reconstruction.
				=[T/fin [v* [kaske [[D Merja-]:6 [A/inf [__:6 lahtea]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[T/fin [v* [kaske [[D Merja-]:6 [A/inf [__:6 lahtea]]]]]]
				7. Last resort extraposition:
			=[[P [D tama]] [[T/fin [v* [kaske [[D Merja-]:6 [A/inf [__:6 lahtea]]]]]] D]]

	30. Consume "Pekka"

		[[P [D tama]] [[T/fin [v* [kaske [[D Merja-] [A/inf [[D Merja-] lahtea]]]]]] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=[[P [D tama]] [[T/fin [v* [kaske [[D Merja-]:6 [A/inf [__:6 lahtea]]]]]] D{N}]]

	>>>	Trying candidate spellout structure [[P [D tama]] [[T/fin [v* [kaske [[D Merja-] [A/inf [[D Merja-] lahtea]]]]]] D{N}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[P [D tama]] [[T/fin [v* [kaske [[D Merja-]:6 [A/inf [__:6 lahtea]]]]]] [D Pekka]]]
				2. Feature processing:
				=[[P [D tama]] [[T/fin [v* [kaske [[D Merja-]:6 [A/inf [__:6 lahtea]]]]]] [D Pekka]]]
				3. Extraposition:
				=[[P [D tama]] [[T/fin [v* [kaske [[D Merja-]:6 [A/inf [__:6 lahtea]]]]]] [D Pekka]]]
				4. Floater movement reconstruction:
					D at the right failed to tail [ARG][CAT:FIN][VAL]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					Dropping <D Pekka>
					 = [[P [D tama]] [[T/fin [<__>:3 [v* [kaske [[D Merja-]:6 [A/inf [__:6 lahtea]]]]]]] <D Pekka>:3]]
				=[[P [D tama]] [[T/fin [<__>:3 [v* [kaske [[D Merja-]:6 [A/inf [__:6 lahtea]]]]]]] <D Pekka>:3]]
				5. Phrasal movement reconstruction:
				=[[P [D tama]] [[T/fin [<__>:3 [v* [kaske [[D Merja-]:6 [A/inf [__:6 lahtea]]]]]]] <D Pekka>:3]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[P [D tama]] [[T/fin [<__>:3 [v* [kaske [[D Merja-]:6 [A/inf [__:6 lahtea]]]]]]] <D Pekka>:3]]
				7. Last resort extraposition:
			= [[P [D tama]] [[T/fin [<D Pekka> [v* [kaske [[D Merja-] [A/inf [[D Merja-] lahtea]]]]]]] <D Pekka>]]
		Checking LF-interface conditions.
			Transferring [[P [D tama]] [[T/fin [<__>:3 [v* [kaske [[D Merja-]:6 [A/inf [__:6 lahtea]]]]]]] <D Pekka>:3]] into the conceptual-intentional system...
				P with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				v* with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: )
				kaske with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'P([D tama])', 'T/fin(Generic)', 'T/fin([P [D tama]])', 'kaske(clausal argument)', 'lahtea([D Merja-])', 'v*(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[P [D tama]] [[T/fin [<D Pekka> [v* [kaske [[D Merja-] [A/inf [[D Merja-] lahtea]]]]]]] <D Pekka>]]
		Grammar: [[P [D tama]] [[T/fin [<__>:1 [v* [kaske [[D Merja-]:2 [A/inf [__:2 lahtea]]]]]]] <D Pekka>:1]]
		Spellout TT/finP = [PP [[TT/fin [__:1 [v [V [DP:2 [INF [__:2 V]]]]]]] DP:1]]
----------------------------------------------------------------------------------------------------------
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Merja-: [N, D, V, v, TT/fin];  A/inf: [INF, V, v, TT/fin];  __: [D, INF, V, v, TT/fin];  __: [N, D, INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  D: [D];  Pekka: [N, D];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (4) =[[[P [D tama]] [T/fin{v,V} [[D Merja-] A/inf{V}]]] D]
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[[P [D tama]] [T/fin [v*{V} [[D Merja-] A/inf{V}]]]]
					Target kaske in v*
					=[[P [D tama]] [T/fin [v* [kaske [[D Merja-] A/inf{V}]]]]]
				=[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [A/inf lahtea]]]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
					A/inf has neutralized PHI-feature, will be resolved into +ARG due to kaske
				=[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [A/inf lahtea]]]]]]
				3. Extraposition:
				=[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [A/inf lahtea]]]]]]
				4. Floater movement reconstruction:
				=[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [A/inf lahtea]]]]]]
				5. Phrasal movement reconstruction:
					[D Merja-] will undergo A-reconstruction.
				=[[P [D tama]] [T/fin [v* [kaske [[D Merja-]:7 [A/inf [__:7 lahtea]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[P [D tama]] [T/fin [v* [kaske [[D Merja-]:7 [A/inf [__:7 lahtea]]]]]]]
				7. Last resort extraposition:
			=[[[P [D tama]] [T/fin [v* [kaske [[D Merja-]:7 [A/inf [__:7 lahtea]]]]]]] D]

	31. Consume "Pekka"

		[[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [A/inf [[D Merja-] lahtea]]]]]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=[[[P [D tama]] [T/fin [v* [kaske [[D Merja-]:7 [A/inf [__:7 lahtea]]]]]]] D{N}]

	>>>	Trying candidate spellout structure [[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [A/inf [[D Merja-] lahtea]]]]]]] D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[P [D tama]] [T/fin [v* [kaske [[D Merja-]:7 [A/inf [__:7 lahtea]]]]]]] [D Pekka]]
				2. Feature processing:
				=[[[P [D tama]] [T/fin [v* [kaske [[D Merja-]:7 [A/inf [__:7 lahtea]]]]]]] [D Pekka]]
				3. Extraposition:
				=[[[P [D tama]] [T/fin [v* [kaske [[D Merja-]:7 [A/inf [__:7 lahtea]]]]]]] [D Pekka]]
				4. Floater movement reconstruction:
					D at the right failed to tail [ARG][CAT:FIN][VAL]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					Dropping <D Pekka>
					 = [[[P [D tama]] [T/fin [<__>:4 [v* [kaske [[D Merja-]:7 [A/inf [__:7 lahtea]]]]]]]] <D Pekka>:4]
				=[[[P [D tama]] [T/fin [<__>:4 [v* [kaske [[D Merja-]:7 [A/inf [__:7 lahtea]]]]]]]] <D Pekka>:4]
				5. Phrasal movement reconstruction:
				=[[[P [D tama]] [T/fin [<__>:4 [v* [kaske [[D Merja-]:7 [A/inf [__:7 lahtea]]]]]]]] <D Pekka>:4]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[P [D tama]] [T/fin [<__>:4 [v* [kaske [[D Merja-]:7 [A/inf [__:7 lahtea]]]]]]]] <D Pekka>:4]
				7. Last resort extraposition:
			= [[[P [D tama]] [T/fin [<D Pekka> [v* [kaske [[D Merja-] [A/inf [[D Merja-] lahtea]]]]]]]] <D Pekka>]
		Checking LF-interface conditions.
			Transferring [[[P [D tama]] [T/fin [<__>:4 [v* [kaske [[D Merja-]:7 [A/inf [__:7 lahtea]]]]]]]] <D Pekka>:4] into the conceptual-intentional system...
				P with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				v* with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: )
				kaske with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'P([D tama])', 'T/fin(Generic)', 'T/fin([P [D tama]])', 'kaske(clausal argument)', 'lahtea([D Merja-])', 'v*(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[[P [D tama]] [T/fin [<D Pekka> [v* [kaske [[D Merja-] [A/inf [[D Merja-] lahtea]]]]]]]] <D Pekka>]
		Grammar: [[[P [D tama]] [T/fin [<__>:1 [v* [kaske [[D Merja-]:2 [A/inf [__:2 lahtea]]]]]]]] <D Pekka>:1]
		Spellout TT/finP = [[PP [TT/fin [__:1 [v [V [DP:2 [INF [__:2 V]]]]]]]] DP:1]
----------------------------------------------------------------------------------------------------------
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Merja-: [N, D, V, v, TT/fin];  A/inf: [INF, V, v, TT/fin];  __: [D, INF, V, v, TT/fin];  __: [N, D, INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  D: [D];  Pekka: [N, D];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[P [D tama]] T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[[P [D tama]] [T/fin [v* kaske]]]
				2. Feature processing:
				=[[P [D tama]] [T/fin [v* kaske]]]
				3. Extraposition:
				=[[P [D tama]] [T/fin [v* kaske]]]
				4. Floater movement reconstruction:
				=[[P [D tama]] [T/fin [v* kaske]]]
				5. Phrasal movement reconstruction:
				=[[P [D tama]] [T/fin [v* kaske]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[P [D tama]] [T/fin [v* kaske]]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
					Last resort extraposition will be tried on [[P [D tama]] [T/fin [v* kaske]]].
					No suitable node for extraposition found. No action was taken.
			=[[[P [D tama]] [T/fin [v* kaske]]] D]

	32. Consume "Merja-"

		[[[P [D tama]] [T/fin [v* kaske]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[[P [D tama]] [T/fin [v* kaske]]] D{N}]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	33. Consume "A/inf"

		[[[P [D tama]] [T/fin [v* kaske]]] D{N}] + A/inf
			Filtering out impossible merge sites...
				Reject [[[[P [D tama]] [T/fin [v* kaske]]] <D Merja->] A/inf] due to bad left branch.
			Exploring solution number (1) =[D{N} A/inf]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] A/inf]]

	34. Consume "lahtea"

		[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] A/inf{V}]]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	35. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	36. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	37. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	38. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	39. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	40. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D

	41. Consume "D"

		[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] A/inf{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [[P [D tama]] [T/fin [v* kaske]]].
				Avoid [[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] as left branch because it constitutes illicit structure.
				[D Merja-] has no thematic role at the SPEC of A/inf
				Avoid [[D Merja-] [A/inf lahtea]] as left branch because it constitutes illicit structure.
				[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] A/inf{V}]] + D = -98]
				[[D Merja-] A/inf{V}] + D = -96]
				A/inf{V} + D = 3]
		Ranking completed:
			1. [A/inf{V}; D]
			2. [[[D Merja-] A/inf{V}]; D]
			3. [[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] A/inf{V}]]; D]
			Exploring solution number (1) =[A/inf{V} D]
				1. Head movement reconstruction:
				=A/inf{V}
				2. Feature processing:
				=A/inf{V}
				3. Extraposition:
				=A/inf{V}
				4. Floater movement reconstruction:
				=A/inf{V}
				5. Phrasal movement reconstruction:
				=A/inf{V}
				6. Agreement reconstruction:
				=A/inf{V}
				7. Last resort extraposition:
				A/inf{V} probing for CAT:V failed.
				"A/inf{V}" lacks complement.
					Last resort extraposition will be tried on A/inf{V}.
					No suitable node for extraposition found. No action was taken.
			=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf{V} D]]]

	42. Consume "Pekka"

		[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf{V} D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf{V} D{N}]]]

	>>>	Trying candidate spellout structure [[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf{V} D{N}]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target lahtea in A/inf
					=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf [lahtea D{N}]]]]
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf [lahtea [D Pekka]]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf [lahtea [D Pekka]]]]]
				3. Extraposition:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf [lahtea [D Pekka]]]]]
				4. Floater movement reconstruction:
					D at the right failed to tail [ARG][CAT:FIN][VAL]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					Dropping <D Pekka>
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf [lahtea <D Pekka>]]]]
				5. Phrasal movement reconstruction:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf [lahtea <D Pekka>]]]]
				6. Agreement reconstruction:
					Head A/inf, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						A/inf acquired PHI:NUM:SG from the edge of A/inf.
						A/inf acquired PHI:PER:3 from the edge of A/inf.
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf [lahtea <D Pekka>]]]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [[P [D tama]] [T/fin [v* kaske]]].
				D(<D Pekka>) failed internal tail test for {frozenset({'CAT:FIN', 'ARG', 'VAL'})}.
					Last resort extraposition will be tried on [[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf [lahtea <D Pekka>]]]].
					No suitable node for extraposition found. No action was taken.
			= [[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf [lahtea <D Pekka>]]]]
		Checking LF-interface conditions.
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [[P [D tama]] [T/fin [v* kaske]]].
				D(<D Pekka>) failed internal tail test for {frozenset({'CAT:FIN', 'ARG', 'VAL'})}.
			LF-interface condition(s) violated
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'PHI:NUM:SG', 'PHI:PER:3']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D];  Merja-: [N, D];  A/inf: [INF];  lahtea: [V, INF];  D: [D, V, INF];  Pekka: [N, D, V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D Merja-] A/inf{V}] D]
				1. Head movement reconstruction:
				=[[D Merja-] [A/inf lahtea]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
				=[[D Merja-] [A/inf lahtea]]
				3. Extraposition:
				=[[D Merja-] [A/inf lahtea]]
				4. Floater movement reconstruction:
				=[[D Merja-] [A/inf lahtea]]
				5. Phrasal movement reconstruction:
				=[[D Merja-] [A/inf lahtea]]
				6. Agreement reconstruction:
					Head A/inf, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						A/inf acquired PHI:NUM:SG from the edge of A/inf.
						A/inf acquired PHI:PER:3 from the edge of A/inf.
				=[[D Merja-] [A/inf lahtea]]
				7. Last resort extraposition:
				[D Merja-] has no thematic role at the SPEC of A/inf
					Last resort extraposition will be tried on [[D Merja-] [A/inf lahtea]].
					No suitable node for extraposition found. No action was taken.
			=[[[P [D tama]] [T/fin [v* kaske]]] [[[D Merja-] [A/inf lahtea]] D]]

	43. Consume "Pekka"

		[[[P [D tama]] [T/fin [v* kaske]]] [[[D Merja-] [A/inf lahtea]] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=[[[P [D tama]] [T/fin [v* kaske]]] [[[D Merja-] [A/inf lahtea]] D{N}]]

	>>>	Trying candidate spellout structure [[[P [D tama]] [T/fin [v* kaske]]] [[[D Merja-] [A/inf lahtea]] D{N}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[[D Merja-] [A/inf lahtea]] [D Pekka]]]
				2. Feature processing:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[[D Merja-] [A/inf lahtea]] [D Pekka]]]
				3. Extraposition:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[[D Merja-] [A/inf lahtea]] [D Pekka]]]
				4. Floater movement reconstruction:
					D at the right failed to tail [ARG][CAT:FIN][VAL]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					Dropping <D Pekka>
					D at the right failed to tail [ARG][CAT:FIN][VAL]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					Dropping <D Pekka>
				=[[[P [D tama]] [T/fin [v* kaske]]] [[[D Merja-] [A/inf lahtea]] <D Pekka>]]
				5. Phrasal movement reconstruction:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[[D Merja-] [A/inf lahtea]] <D Pekka>]]
				6. Agreement reconstruction:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[[D Merja-] [A/inf lahtea]] <D Pekka>]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [[P [D tama]] [T/fin [v* kaske]]].
					Last resort extraposition will be tried on [[[P [D tama]] [T/fin [v* kaske]]] [[[D Merja-] [A/inf lahtea]] <D Pekka>]].
					No suitable node for extraposition found. No action was taken.
			= [[[P [D tama]] [T/fin [v* kaske]]] [[[D Merja-] [A/inf lahtea]] <D Pekka>]]
		Checking LF-interface conditions.
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [[P [D tama]] [T/fin [v* kaske]]].
			LF-interface condition(s) violated
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'PHI:NUM:SG', 'PHI:PER:3']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D];  Merja-: [N, D];  A/inf: [INF];  lahtea: [V, INF];  D: [D];  Pekka: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] A/inf{V}]] D]
				1. Head movement reconstruction:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]]
				3. Extraposition:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]]
				4. Floater movement reconstruction:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]]
				5. Phrasal movement reconstruction:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]]
				6. Agreement reconstruction:
					Head A/inf, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						A/inf acquired PHI:NUM:SG from the edge of A/inf.
						A/inf acquired PHI:PER:3 from the edge of A/inf.
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [[P [D tama]] [T/fin [v* kaske]]].
					Last resort extraposition will be tried on [[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]].
					No suitable node for extraposition found. No action was taken.
			=[[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] D]

	44. Consume "Pekka"

		[[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=[[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] D{N}]

	>>>	Trying candidate spellout structure [[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] [D Pekka]]
				2. Feature processing:
				=[[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] [D Pekka]]
				3. Extraposition:
				=[[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] [D Pekka]]
				4. Floater movement reconstruction:
					D at the right failed to tail [ARG][CAT:FIN][VAL]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					Dropping <D Pekka>
				=[[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] <D Pekka>]
				5. Phrasal movement reconstruction:
				=[[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] <D Pekka>]
				6. Agreement reconstruction:
				=[[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] <D Pekka>]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [[P [D tama]] [T/fin [v* kaske]]].
					Last resort extraposition will be tried on [[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] <D Pekka>].
					No suitable node for extraposition found. No action was taken.
			= [[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] <D Pekka>]
		Checking LF-interface conditions.
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [[P [D tama]] [T/fin [v* kaske]]].
			LF-interface condition(s) violated
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'PHI:NUM:SG', 'PHI:PER:3']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D];  Merja-: [N, D];  A/inf: [INF];  lahtea: [V, INF];  D: [D];  Pekka: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "gen$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merjan".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "kaske-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v*$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "kaskee".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tama-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tama".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tassa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 9
['ihailee', 'Merjaa']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v$', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	1. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
			=T/fin

	3. Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=T/fin{v}

	4. Consume "ihaile-"

		T/fin{v} + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into v because they are inside the same phonological word.
			=T/fin{v,V}

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'par$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	5. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	6. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	7. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	8. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	9. Consume "par$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

	10. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'LANG:FI', 'PHI:NUM:SG'} to D

	11. Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[T/fin{v,V} D]

	12. Consume "Merja-"

		[T/fin{v,V} D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[T/fin{v,V} D{N}]

	>>>	Trying candidate spellout structure [T/fin{v,V} D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[T/fin [v{V} D{N}]]
					Target ihaile- in v
					=[T/fin [v [ihaile- D{N}]]]
				=[T/fin [v [ihaile- [D Merja-]]]]
				2. Feature processing:
				=[T/fin [v [ihaile- [D Merja-]]]]
				3. Extraposition:
				=[T/fin [v [ihaile- [D Merja-]]]]
				4. Floater movement reconstruction:
				=[T/fin [v [ihaile- [D Merja-]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [v [ihaile- [D Merja-]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[T/fin [v [ihaile- [D Merja-]]]]
				7. Last resort extraposition:
			= [T/fin [v [ihaile- [D Merja-]]]]
		Checking LF-interface conditions.
			Transferring [T/fin [v [ihaile- [D Merja-]]]] into the conceptual-intentional system...
				T/fin with ['PHI:DET:_'] was associated at LF with:
					No antecedent found, LF-object crashes.
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Semantic interpretation failed, transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "par$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihailee".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 10
['ihailen', 'Merjaa']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['[-n]$', 'T/fin$', 'v$', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

	1. Consume "T/fin$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:PER:1', 'PHI:DET:DEF', 'LANG:FI', 'PHI:NUM:SG', '-'} to T/fin
			=T/fin

	3. Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=T/fin{v}

	4. Consume "ihaile-"

		T/fin{v} + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into v because they are inside the same phonological word.
			=T/fin{v,V}

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'par$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	5. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	6. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	7. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	8. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	9. Consume "par$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

	10. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'LANG:FI', 'PHI:NUM:SG'} to D

	11. Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[T/fin{v,V} D]

	12. Consume "Merja-"

		[T/fin{v,V} D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[T/fin{v,V} D{N}]

	>>>	Trying candidate spellout structure [T/fin{v,V} D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[T/fin [v{V} D{N}]]
					Target ihaile- in v
					=[T/fin [v [ihaile- D{N}]]]
				=[T/fin [v [ihaile- [D Merja-]]]]
				2. Feature processing:
				=[T/fin [v [ihaile- [D Merja-]]]]
				3. Extraposition:
				=[T/fin [v [ihaile- [D Merja-]]]]
				4. Floater movement reconstruction:
				=[T/fin [v [ihaile- [D Merja-]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [v [ihaile- [D Merja-]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:1 from the edge of T/fin.
				=[T/fin [v [ihaile- [D Merja-]]]]
				7. Last resort extraposition:
			= [T/fin [v [ihaile- [D Merja-]]]]
		Checking LF-interface conditions.
			Transferring [T/fin [v [ihaile- [D Merja-]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'ihaile-([D Merja-])', 'v(T/fin)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[T/fin [v [ihaile- [D Merja-]]]]
		Grammar: [T/fin [v [ihaile- [D Merja-]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
----------------------------------------------------------------------------------------------------------
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

T/fin: [TT/fin];  v: [v, TT/fin];  ihaile-: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Merja-: [N, D, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "par$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihailen".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 11
['Pekka', 'sanoi', 'etta', 'ihailee', 'Merjaa']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	5. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	8. Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[D Pekka] T/fin]

	11. Consume "sano-"

		[[D Pekka] T/fin] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
			=[[D Pekka] T/fin{V}]

	12. Consume "etta"

		[[D Pekka] T/fin{V}] + etta
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> sano-]]] etta] due to bad left branch.
			Exploring solution number (1) =[T/fin{V} etta]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} etta]]

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v$', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	13. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	14. Consume "T/fin"

		[[D Pekka] [T/fin{V} etta]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- etta]]]] T/fin] due to bad left branch.
				Reject [[T/fin [sano- etta]] T/fin] due to bad left branch.
			Exploring solution number (1) =[etta T/fin]
				1. Head movement reconstruction:
				=etta
				2. Feature processing:
				=etta
				3. Extraposition:
				=etta
				4. Floater movement reconstruction:
				=etta
				5. Phrasal movement reconstruction:
				=etta
				6. Agreement reconstruction:
				=etta
				7. Last resort extraposition:
				etta probing for CAT:T/fin failed.
				"etta" lacks complement.
					Last resort extraposition will be tried on etta.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} [etta T/fin]]]

	15. Consume "v"

		[[D Pekka] [T/fin{V} [etta T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta T/fin{v}]]]

	16. Consume "ihaile-"

		[[D Pekka] [T/fin{V} [etta T/fin{v}]]] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into v because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta T/fin{v,V}]]]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'par$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	17. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	18. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	19. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	20. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	21. Consume "par$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

	22. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'LANG:FI', 'PHI:NUM:SG'} to D

	23. Consume "D"

		[[D Pekka] [T/fin{V} [etta T/fin{v,V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				ihaile- (ihaile-) is missing complement D
				Avoid [<D Pekka> [T/fin [<D Pekka> [sano- [etta [T/fin [v ihaile-]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				ihaile- (ihaile-) is missing complement D
				Avoid [T/fin [sano- [etta [T/fin [v ihaile-]]]]] as left branch because it constitutes illicit structure.
				ihaile- (ihaile-) is missing complement D
				Avoid [etta [T/fin [v ihaile-]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D Pekka] [T/fin{V} [etta T/fin{v,V}]]] + D = -197]
				[T/fin{V} [etta T/fin{v,V}]] + D = -194]
				[etta T/fin{v,V}] + D = -94]
				T/fin{v,V} + D = 166]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[etta T/fin{v,V}]; D]
			3. [[T/fin{V} [etta T/fin{v,V}]]; D]
			4. [[[D Pekka] [T/fin{V} [etta T/fin{v,V}]]]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} [etta [T/fin{v,V} D]]]]

	24. Consume "Merja-"

		[[D Pekka] [T/fin{V} [etta [T/fin{v,V} D]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta [T/fin{v,V} D{N}]]]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{V} [etta [T/fin{v,V} D{N}]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [etta [T/fin{v,V} D{N}]]]]]
					Target v{V} in T/fin
					=[[D Pekka] [T/fin [sano- [etta [T/fin [v{V} D{N}]]]]]]
					Target ihaile- in v
					=[[D Pekka] [T/fin [sano- [etta [T/fin [v [ihaile- D{N}]]]]]]]
				=[[D Pekka] [T/fin [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:9 [T/fin [<__>:9 [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]
				=[<D Pekka>:9 [T/fin [<__>:9 [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:9 [T/fin [<__>:9 [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:9 [T/fin [<__>:9 [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]
				7. Last resort extraposition:
			= [<D Pekka> [T/fin [<D Pekka> [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]
		Checking LF-interface conditions.
			Transferring [<D Pekka>:9 [T/fin [<__>:9 [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]] into the conceptual-intentional system...
				sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. <D Pekka> 3. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'T/fin(<D Pekka>)', 'ihaile-([D Merja-])', 'sano-(<D Pekka>)', 'v(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<__>:1 [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [ [TT/fin [v [V [D N]]]]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  etta: [, V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  v: [v, TT/fin, , V, TT/fin];  ihaile-: [V, v, TT/fin, , V, TT/fin];  D: [D, V, v, TT/fin, , V, TT/fin];  Merja-: [N, D, V, v, TT/fin, , V, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[etta T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[etta [T/fin [v ihaile-]]]
				2. Feature processing:
				=[etta [T/fin [v ihaile-]]]
				3. Extraposition:
				=[etta [T/fin [v ihaile-]]]
				4. Floater movement reconstruction:
				=[etta [T/fin [v ihaile-]]]
				5. Phrasal movement reconstruction:
				=[etta [T/fin [v ihaile-]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[etta [T/fin [v ihaile-]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [etta [T/fin [v ihaile-]]].
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} [[etta [T/fin [v ihaile-]]] D]]]

	25. Consume "Merja-"

		[[D Pekka] [T/fin{V} [[etta [T/fin [v ihaile-]]] D]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [[etta [T/fin [v ihaile-]]] D{N}]]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{V} [[etta [T/fin [v ihaile-]]] D{N}]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [[etta [T/fin [v ihaile-]]] D{N}]]]]
				=[[D Pekka] [T/fin [sano- [[etta [T/fin [v ihaile-]]] [D Merja-]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [sano- [[etta [T/fin [v ihaile-]]] [D Merja-]]]]]
				3. Extraposition:
					sano- cannot select D
					Extraposition will be tried on [D Merja-].
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
				=[[D Pekka] [T/fin [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:10 [T/fin [<__>:10 [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]]
				=[<D Pekka>:10 [T/fin [<__>:10 [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:10 [T/fin [<__>:10 [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[<D Pekka>:10 [T/fin [<__>:10 [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [<D Pekka>:10 [T/fin [<__>:10 [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]].
					No suitable node for extraposition found. No action was taken.
			= [<D Pekka> [T/fin [<D Pekka> [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]]
		Checking LF-interface conditions.
				ihaile- (ihaile-) is missing complement D
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  etta: [, V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  v: [v, TT/fin, , V, TT/fin];  ihaile-: [V, v, TT/fin, , V, TT/fin];  D: [D, V, TT/fin];  Merja-: [N, D, V, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[T/fin{V} [etta T/fin{v,V}]] D]
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[T/fin [sano- [etta T/fin{v,V}]]]
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				2. Feature processing:
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				3. Extraposition:
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				4. Floater movement reconstruction:
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [T/fin [sano- [etta [T/fin [v ihaile-]]]]].
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] D]]

	26. Consume "Merja-"

		[[D Pekka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[D Pekka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] D{N}]]

	>>>	Trying candidate spellout structure [[D Pekka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] D{N}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[D Pekka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] [D Merja-]]]
				2. Feature processing:
				=[[D Pekka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] [D Merja-]]]
				3. Extraposition:
				=[[D Pekka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] [D Merja-]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					D at the right failed to tail [-VAL][ARG]
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
					Dropping <D Merja->
					 = [[D Pekka] [[T/fin [sano- [<__>:11 [etta [T/fin [v ihaile-]]]]]] <D Merja->:11]]
					Dropping <__>:11
					 = [[D Pekka] [[T/fin [sano- [<__>:11 [etta [T/fin [v [<__>:11 ihaile-]]]]]]] <D Merja->:11]]
				=[[D Pekka] [[T/fin [sano- [<__>:11 [etta [T/fin [v [<__>:11 ihaile-]]]]]]] <D Merja->:11]]
				5. Phrasal movement reconstruction:
					[D Pekka] will undergo A-reconstruction.
				=[[D Pekka]:8 [[T/fin [__:8 [sano- [<__>:11 [etta [T/fin [v [<__>:11 ihaile-]]]]]]]] <D Merja->:11]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[D Pekka]:8 [[T/fin [__:8 [sano- [<__>:11 [etta [T/fin [v [<__>:11 ihaile-]]]]]]]] <D Merja->:11]]
				7. Last resort extraposition:
				<__>:11 has no thematic role at the SPEC of ihaile-
					Last resort extraposition will be tried on [[D Pekka]:8 [[T/fin [__:8 [sano- [<__>:11 [etta [T/fin [v [<__>:11 ihaile-]]]]]]]] <D Merja->:11]].
					No suitable node for extraposition found. No action was taken.
			= [[D Pekka] [[T/fin [[D Pekka] [sano- [<D Merja-> [etta [T/fin [v [<D Merja-> ihaile-]]]]]]]] <D Merja->]]
		Checking LF-interface conditions.
				<__>:11 has no thematic role at the SPEC of ihaile-
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  __: [D, V, TT/fin];  __: [N, D, V, TT/fin];  etta: [, V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  v: [v, TT/fin, , V, TT/fin];  __: [D, v, TT/fin, , V, TT/fin];  __: [N, D, v, TT/fin, , V, TT/fin];  ihaile-: [V, v, TT/fin, , V, TT/fin];  D: [D];  Merja-: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (4) =[[[D Pekka] [T/fin{V} [etta T/fin{v,V}]]] D]
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [etta T/fin{v,V}]]]]
				=[[D Pekka] [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:13 [T/fin [<__>:13 [sano- [etta [T/fin [v ihaile-]]]]]]]
				=[<D Pekka>:13 [T/fin [<__>:13 [sano- [etta [T/fin [v ihaile-]]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:13 [T/fin [<__>:13 [sano- [etta [T/fin [v ihaile-]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:13 [T/fin [<__>:13 [sano- [etta [T/fin [v ihaile-]]]]]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [<D Pekka>:13 [T/fin [<__>:13 [sano- [etta [T/fin [v ihaile-]]]]]]].
					No suitable node for extraposition found. No action was taken.
			=[[<D Pekka>:13 [T/fin [<__>:13 [sano- [etta [T/fin [v ihaile-]]]]]]] D]

	27. Consume "Merja-"

		[[<D Pekka> [T/fin [<D Pekka> [sano- [etta [T/fin [v ihaile-]]]]]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[<D Pekka>:13 [T/fin [<__>:13 [sano- [etta [T/fin [v ihaile-]]]]]]] D{N}]

	>>>	Trying candidate spellout structure [[<D Pekka> [T/fin [<D Pekka> [sano- [etta [T/fin [v ihaile-]]]]]]] D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[<D Pekka>:13 [T/fin [<__>:13 [sano- [etta [T/fin [v ihaile-]]]]]]] [D Merja-]]
				2. Feature processing:
				=[[<D Pekka>:13 [T/fin [<__>:13 [sano- [etta [T/fin [v ihaile-]]]]]]] [D Merja-]]
				3. Extraposition:
				=[[<D Pekka>:13 [T/fin [<__>:13 [sano- [etta [T/fin [v ihaile-]]]]]]] [D Merja-]]
				4. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
					Dropping <D Merja->
					 = [[<D Pekka>:13 [T/fin [<__>:13 [sano- [<__>:14 [etta [T/fin [v ihaile-]]]]]]]] <D Merja->:14]
					Dropping <__>:14
					 = [[<D Pekka>:13 [T/fin [<__>:13 [sano- [<__>:14 [etta [T/fin [v [<__>:14 ihaile-]]]]]]]]] <D Merja->:14]
				=[[<D Pekka>:13 [T/fin [<__>:13 [sano- [<__>:14 [etta [T/fin [v [<__>:14 ihaile-]]]]]]]]] <D Merja->:14]
				5. Phrasal movement reconstruction:
				=[[<D Pekka>:13 [T/fin [<__>:13 [sano- [<__>:14 [etta [T/fin [v [<__>:14 ihaile-]]]]]]]]] <D Merja->:14]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[<D Pekka>:13 [T/fin [<__>:13 [sano- [<__>:14 [etta [T/fin [v [<__>:14 ihaile-]]]]]]]]] <D Merja->:14]
				7. Last resort extraposition:
				<__>:14 has no thematic role at the SPEC of ihaile-
					Last resort extraposition will be tried on [[<D Pekka>:13 [T/fin [<__>:13 [sano- [<__>:14 [etta [T/fin [v [<__>:14 ihaile-]]]]]]]]] <D Merja->:14].
					No suitable node for extraposition found. No action was taken.
			= [[<D Pekka> [T/fin [<D Pekka> [sano- [<D Merja-> [etta [T/fin [v [<D Merja-> ihaile-]]]]]]]]] <D Merja->]
		Checking LF-interface conditions.
				<__>:14 has no thematic role at the SPEC of ihaile-
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  __: [D, V, TT/fin];  __: [N, D, V, TT/fin];  etta: [, V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  v: [v, TT/fin, , V, TT/fin];  __: [D, v, TT/fin, , V, TT/fin];  __: [N, D, v, TT/fin, , V, TT/fin];  ihaile-: [V, v, TT/fin, , V, TT/fin];  D: [D];  Merja-: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "par$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihailee".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "etta".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sano-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sanoi".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 12
['John', 'wants', 'to_inf', 'leave']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'v$', 'want-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin]

	10. Consume "v"

		[[D John] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D John] T/fin{v}]

	11. Consume "want"

		[[D John] T/fin{v}] + want
			Filtering out impossible merge sites...
			Sink "want" into v because they are inside the same phonological word.
			=[[D John] T/fin{v,V}]

	12. Consume "to"

		[[D John] T/fin{v,V}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				"want" lacks complement.
				Avoid [[D John] [T/fin [[D John] [v want]]]] as left branch because it constitutes illicit structure.
				[[D John] T/fin{v,V}] + to = -197]
				T/fin{v,V} + to = 2]
		Ranking completed:
			1. [T/fin{v,V}; to]
			2. [[[D John] T/fin{v,V}]; to]
			Exploring solution number (1) =[T/fin{v,V} to]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
				An EPP-head "T/fin{v,V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} to]]

	13. Consume "leave"

		[[D John] [T/fin{v,V} to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [v [want to]]]]] leave] due to bad left branch.
				Reject [[T/fin [v [want to]]] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} [to leave]]]

	>>>	Trying candidate spellout structure [[D John] [T/fin{v,V} [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D John] [T/fin [v{V} [to leave]]]]
					Target want in v
					=[[D John] [T/fin [v [want [to leave]]]]]
				=[[D John] [T/fin [v [want [to leave]]]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[D John] [T/fin [v [want [to leave]]]]]
				3. Extraposition:
				=[[D John] [T/fin [v [want [to leave]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v [want [to leave]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:38 [T/fin [__:38 [v [want [to leave]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[D John]:38 [T/fin [__:38 [v [want [to leave]]]]]]
				7. Last resort extraposition:
			= [[D John] [T/fin [[D John] [v [want [to leave]]]]]]
		Checking LF-interface conditions.
			Transferring [[D John]:38 [T/fin [__:38 [v [want [to leave]]]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				want with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				to with ['PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'leave([D John])', 'to([D John])', 'v([D John])', 'want([D John])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [v [want [to leave]]]]]]
		Grammar: [[D John]:1 [T/fin [__:1 [v [want [to leave]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [INF V]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  want: [V, v, TT/fin];  to: [INF, V, v, TT/fin];  leave: [V, INF, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin{v,V}] to]
				1. Head movement reconstruction:
				=[[D John] [T/fin [v want]]]
				2. Feature processing:
				=[[D John] [T/fin [v want]]]
				3. Extraposition:
				=[[D John] [T/fin [v want]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v want]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:39 [T/fin [__:39 [v want]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:39 [T/fin [__:39 [v want]]]]
				7. Last resort extraposition:
				"want" lacks complement.
					Last resort extraposition will be tried on [[D John]:39 [T/fin [__:39 [v want]]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:39 [T/fin [__:39 [v want]]]] to]

	14. Consume "leave"

		[[[D John] [T/fin [[D John] [v want]]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [v want]]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:39 [T/fin [__:39 [v want]]]] [to leave]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [v want]]]] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:39 [T/fin [__:39 [v want]]]] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:39 [T/fin [__:39 [v want]]]] [to leave]]
				3. Extraposition:
				=[[[D John]:39 [T/fin [__:39 [v want]]]] [to leave]]
				4. Floater movement reconstruction:
				=[[[D John]:39 [T/fin [__:39 [v want]]]] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[D John]:39 [T/fin [__:39 [v want]]]] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[D John]:39 [T/fin [__:39 [v want]]]] [to leave]]
				7. Last resort extraposition:
				"want" lacks complement.
				to has unacceptable specifier [[D John]:39 [T/fin [__:39 [v want]]]].
					Last resort extraposition will be tried on [[[D John]:39 [T/fin [__:39 [v want]]]] [to leave]].
			= [[[D John] [T/fin [[D John] [v want]]]] [to leave]]
		Checking LF-interface conditions.
				"want" lacks complement.
				to has unacceptable specifier [[D John]:39 [T/fin [__:39 [v want]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  want: [V, v, TT/fin];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "want-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "wants".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 13
['John', 'asks', 'to_inf', 'leave']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'v$', 'ask-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin]

	10. Consume "v"

		[[D John] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D John] T/fin{v}]

	11. Consume "ask"

		[[D John] T/fin{v}] + ask
			Filtering out impossible merge sites...
			Sink "ask" into v because they are inside the same phonological word.
			=[[D John] T/fin{v,V}]

	12. Consume "to"

		[[D John] T/fin{v,V}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				ask (ask) is missing complement TO/inf
				Avoid [[D John] [T/fin [[D John] [v ask]]]] as left branch because it constitutes illicit structure.
				Prioritize [ask to] due to complement selection.
				[[D John] T/fin{v,V}] + to = -197]
				T/fin{v,V} + to = 104]
		Ranking completed:
			1. [T/fin{v,V}; to]
			2. [[[D John] T/fin{v,V}]; to]
			Exploring solution number (1) =[T/fin{v,V} to]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
				An EPP-head "T/fin{v,V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} to]]

	13. Consume "leave"

		[[D John] [T/fin{v,V} to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [v [ask to]]]]] leave] due to bad left branch.
				Reject [[T/fin [v [ask to]]] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} [to leave]]]

	>>>	Trying candidate spellout structure [[D John] [T/fin{v,V} [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D John] [T/fin [v{V} [to leave]]]]
					Target ask in v
					=[[D John] [T/fin [v [ask [to leave]]]]]
				=[[D John] [T/fin [v [ask [to leave]]]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
					to has neutralized PHI-feature, will be resolved into +ARG due to ask
				=[[D John] [T/fin [v [ask [to leave]]]]]
				3. Extraposition:
				=[[D John] [T/fin [v [ask [to leave]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v [ask [to leave]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:43 [T/fin [__:43 [v [ask [to leave]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:43 [T/fin [__:43 [v [ask [to leave]]]]]]
				7. Last resort extraposition:
				An EPP-head "to" lacks specifier.
					Last resort extraposition will be tried on [[D John]:43 [T/fin [__:43 [v [ask [to leave]]]]]].
					No suitable node for extraposition found. No action was taken.
			= [[D John] [T/fin [[D John] [v [ask [to leave]]]]]]
		Checking LF-interface conditions.
				An EPP-head "to" lacks specifier.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
ask:['!COMP:TO/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:ask', 'PF:ask', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'SPEC:*', 'VAL']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  ask: [V, v, TT/fin];  to: [INF, V, v, TT/fin];  leave: [V, INF, V, v, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin{v,V}] to]
				1. Head movement reconstruction:
				=[[D John] [T/fin [v ask]]]
				2. Feature processing:
				=[[D John] [T/fin [v ask]]]
				3. Extraposition:
				=[[D John] [T/fin [v ask]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v ask]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:44 [T/fin [__:44 [v ask]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:44 [T/fin [__:44 [v ask]]]]
				7. Last resort extraposition:
				ask (ask) is missing complement TO/inf
					Last resort extraposition will be tried on [[D John]:44 [T/fin [__:44 [v ask]]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:44 [T/fin [__:44 [v ask]]]] to]

	14. Consume "leave"

		[[[D John] [T/fin [[D John] [v ask]]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [v ask]]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:44 [T/fin [__:44 [v ask]]]] [to leave]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [v ask]]]] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:44 [T/fin [__:44 [v ask]]]] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:44 [T/fin [__:44 [v ask]]]] [to leave]]
				3. Extraposition:
				=[[[D John]:44 [T/fin [__:44 [v ask]]]] [to leave]]
				4. Floater movement reconstruction:
				=[[[D John]:44 [T/fin [__:44 [v ask]]]] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[D John]:44 [T/fin [__:44 [v ask]]]] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[D John]:44 [T/fin [__:44 [v ask]]]] [to leave]]
				7. Last resort extraposition:
				ask (ask) is missing complement TO/inf
				to has unacceptable specifier [[D John]:44 [T/fin [__:44 [v ask]]]].
					Last resort extraposition will be tried on [[[D John]:44 [T/fin [__:44 [v ask]]]] [to leave]].
			= [[[D John] [T/fin [[D John] [v ask]]]] [to leave]]
		Checking LF-interface conditions.
				ask (ask) is missing complement TO/inf
				to has unacceptable specifier [[D John]:44 [T/fin [__:44 [v ask]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
ask:['!COMP:TO/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:ask', 'PF:ask', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  ask: [V, v, TT/fin];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ask-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "asks".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 14
['John', 'wants', 'Mary', 'to_inf', 'leave']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'v$', 'want-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin]

	10. Consume "v"

		[[D John] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D John] T/fin{v}]

	11. Consume "want"

		[[D John] T/fin{v}] + want
			Filtering out impossible merge sites...
			Sink "want" into v because they are inside the same phonological word.
			=[[D John] T/fin{v,V}]

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

	12. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	13. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	14. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	15. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	16. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	17. Consume "D"

		[[D John] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"want" lacks complement.
				Avoid [[D John] [T/fin [[D John] [v want]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				[[D John] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 104]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D John] T/fin{v,V}]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
				An EPP-head "T/fin{v,V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} D]]

	18. Consume "Mary"

		[[D John] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[D John] [T/fin{v,V} D{N}]]

	19. Consume "to"

		[[D John] [T/fin{v,V} D{N}]] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				Avoid TT/finP as SPEC, to.
				An EPP-head "T/fin" lacks specifier.
				Avoid [T/fin [v [want [D Mary]]]] as left branch because it constitutes illicit structure.
				Avoid D{N} because it could break words.
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
				Prioritize D{N} because all solutions were negative.
				[[D John] [T/fin{v,V} D{N}]] + to = -98]
				[T/fin{v,V} D{N}] + to = -194]
				D{N} + to = 106]
		Ranking completed:
			1. [D{N}; to]
			2. [[[D John] [T/fin{v,V} D{N}]]; to]
			3. [[T/fin{v,V} D{N}]; to]
			Exploring solution number (1) =[D{N} to]
				1. Head movement reconstruction:
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
			=[[D John] [T/fin{v,V} [[D Mary] to]]]

	20. Consume "leave"

		[[D John] [T/fin{v,V} [[D Mary] to]]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [v [want [[D Mary] to]]]]]] leave] due to bad left branch.
				Reject [[T/fin [v [want [[D Mary] to]]]] leave] due to bad left branch.
				Reject [[[D Mary] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} [[D Mary] [to leave]]]]

	>>>	Trying candidate spellout structure [[D John] [T/fin{v,V} [[D Mary] [to leave]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D John] [T/fin [v{V} [[D Mary] [to leave]]]]]
					Target want in v
					=[[D John] [T/fin [v [want [[D Mary] [to leave]]]]]]
				=[[D John] [T/fin [v [want [[D Mary] [to leave]]]]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[D John] [T/fin [v [want [[D Mary] [to leave]]]]]]
				3. Extraposition:
				=[[D John] [T/fin [v [want [[D Mary] [to leave]]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v [want [[D Mary] [to leave]]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
					[D Mary] will undergo A-reconstruction.
				=[[D John]:50 [T/fin [__:50 [v [want [[D Mary]:51 [to [__:51 leave]]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG from the edge of to.
						to acquired PHI:PER:3 from the edge of to.
				=[[D John]:50 [T/fin [__:50 [v [want [[D Mary]:51 [to [__:51 leave]]]]]]]]
				7. Last resort extraposition:
			= [[D John] [T/fin [[D John] [v [want [[D Mary] [to [[D Mary] leave]]]]]]]]
		Checking LF-interface conditions.
			Transferring [[D John]:50 [T/fin [__:50 [v [want [[D Mary]:51 [to [__:51 leave]]]]]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				want with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: 2. [D John] 3. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'leave([D Mary])', 'v([D John])', 'want([D John])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [v [want [[D Mary] [to [[D Mary] leave]]]]]]]]
		Grammar: [[D John]:1 [T/fin [__:1 [v [want [[D Mary]:2 [to [__:2 leave]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [DP:2 [INF [__:2 V]]]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  want: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Mary: [N, D, V, v, TT/fin];  to: [INF, V, v, TT/fin];  __: [D, INF, V, v, TT/fin];  __: [N, D, INF, V, v, TT/fin];  leave: [V, INF, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] [T/fin{v,V} D{N}]] to]
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D John] [T/fin [v{V} D{N}]]]
					Target want in v
					=[[D John] [T/fin [v [want D{N}]]]]
				=[[D John] [T/fin [v [want [D Mary]]]]]
				2. Feature processing:
				=[[D John] [T/fin [v [want [D Mary]]]]]
				3. Extraposition:
				=[[D John] [T/fin [v [want [D Mary]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v [want [D Mary]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:52 [T/fin [__:52 [v [want [D Mary]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:52 [T/fin [__:52 [v [want [D Mary]]]]]]
				7. Last resort extraposition:
			=[[[D John]:52 [T/fin [__:52 [v [want [D Mary]]]]]] to]

	21. Consume "leave"

		[[[D John] [T/fin [[D John] [v [want [D Mary]]]]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [v [want [D Mary]]]]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:52 [T/fin [__:52 [v [want [D Mary]]]]]] [to leave]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [v [want [D Mary]]]]]] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:52 [T/fin [__:52 [v [want [D Mary]]]]]] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:52 [T/fin [__:52 [v [want [D Mary]]]]]] [to leave]]
				3. Extraposition:
				=[[[D John]:52 [T/fin [__:52 [v [want [D Mary]]]]]] [to leave]]
				4. Floater movement reconstruction:
				=[[[D John]:52 [T/fin [__:52 [v [want [D Mary]]]]]] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[D John]:52 [T/fin [__:52 [v [want [D Mary]]]]]] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[D John]:52 [T/fin [__:52 [v [want [D Mary]]]]]] [to leave]]
				7. Last resort extraposition:
				to has unacceptable specifier [[D John]:52 [T/fin [__:52 [v [want [D Mary]]]]]].
					Last resort extraposition will be tried on [[[D John]:52 [T/fin [__:52 [v [want [D Mary]]]]]] [to leave]].
			= [[[D John] [T/fin [[D John] [v [want [D Mary]]]]]] [to leave]]
		Checking LF-interface conditions.
				to has unacceptable specifier [[D John]:52 [T/fin [__:52 [v [want [D Mary]]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  want: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Mary: [N, D, V, v, TT/fin];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[T/fin{v,V} D{N}] to]
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[T/fin [v{V} D{N}]]
					Target want in v
					=[T/fin [v [want D{N}]]]
				=[T/fin [v [want [D Mary]]]]
				2. Feature processing:
				=[T/fin [v [want [D Mary]]]]
				3. Extraposition:
				=[T/fin [v [want [D Mary]]]]
				4. Floater movement reconstruction:
				=[T/fin [v [want [D Mary]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [v [want [D Mary]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[T/fin [v [want [D Mary]]]]
				7. Last resort extraposition:
				An EPP-head "T/fin" lacks specifier.
					Last resort extraposition will be tried on [T/fin [v [want [D Mary]]]].
					No suitable node for extraposition found. No action was taken.
			=[[D John] [[T/fin [v [want [D Mary]]]] to]]

	22. Consume "leave"

		[[D John] [[T/fin [v [want [D Mary]]]] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [[[T/fin [v [want [D Mary]]]] [D John]] to]] leave] due to bad left branch.
				Reject [[[T/fin [v [want [D Mary]]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [[T/fin [v [want [D Mary]]]] [to leave]]]

	>>>	Trying candidate spellout structure [[D John] [[T/fin [v [want [D Mary]]]] [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[D John] [[T/fin [v [want [D Mary]]]] [to leave]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[D John] [[T/fin [v [want [D Mary]]]] [to leave]]]
				3. Extraposition:
				=[[D John] [[T/fin [v [want [D Mary]]]] [to leave]]]
				4. Floater movement reconstruction:
				=[[D John] [[T/fin [v [want [D Mary]]]] [to leave]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
					New head was spawned due to multiple specifiers at to but its category is unknown!
				=[[D John]:54 [? [[T/fin [v [want [D Mary]]]] [to [__:54 leave]]]]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG by phi-Agree from __:54.
						to acquired PHI:PER:3 by phi-Agree from __:54.
				=[[D John]:54 [? [[T/fin [v [want [D Mary]]]] [to [__:54 leave]]]]]
				7. Last resort extraposition:
					An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier.
				to has unacceptable specifier [T/fin [v [want [D Mary]]]].
					Last resort extraposition will be tried on [[D John]:54 [? [[T/fin [v [want [D Mary]]]] [to [__:54 leave]]]]].
			= [[D John] [? [[T/fin [v [want [D Mary]]]] [to [[D John] leave]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier.
				to has unacceptable specifier [T/fin [v [want [D Mary]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI_CHECKED', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  ?: [?];  T/fin: [TT/fin, ?];  v: [v, TT/fin, ?];  want: [V, v, TT/fin, ?];  D: [D, V, v, TT/fin, ?];  Mary: [N, D, V, v, TT/fin, ?];  to: [INF, ?];  __: [D, INF, ?];  __: [N, D, INF, ?];  leave: [V, INF, ?];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[[D John] [T/fin [v want]]]
				2. Feature processing:
				=[[D John] [T/fin [v want]]]
				3. Extraposition:
				=[[D John] [T/fin [v want]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v want]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:55 [T/fin [__:55 [v want]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:55 [T/fin [__:55 [v want]]]]
				7. Last resort extraposition:
				"want" lacks complement.
					Last resort extraposition will be tried on [[D John]:55 [T/fin [__:55 [v want]]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:55 [T/fin [__:55 [v want]]]] D]

	23. Consume "Mary"

		[[[D John] [T/fin [[D John] [v want]]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[[D John]:55 [T/fin [__:55 [v want]]]] D{N}]

	24. Consume "to"

		[[[D John] [T/fin [[D John] [v want]]]] D{N}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				"want" lacks complement.
				Avoid [[[D John] [T/fin [[D John] [v want]]]] <D Mary>] as left branch because it constitutes illicit structure.
				[[[D John]:55 [T/fin [__:55 [v want]]]] D{N}] + to = -98]
				D{N} + to = 2]
		Ranking completed:
			1. [D{N}; to]
			2. [[[[D John]:55 [T/fin [__:55 [v want]]]] D{N}]; to]
			Exploring solution number (1) =[D{N} to]
				1. Head movement reconstruction:
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
			=[[[D John]:55 [T/fin [__:55 [v want]]]] [[D Mary] to]]

	25. Consume "leave"

		[[[D John] [T/fin [[D John] [v want]]]] [[D Mary] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [v want]]]] [[D Mary] to]] leave] due to bad left branch.
				Reject [[[D Mary] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:55 [T/fin [__:55 [v want]]]] [[D Mary] [to leave]]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [v want]]]] [[D Mary] [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:55 [T/fin [__:55 [v want]]]] [[D Mary] [to leave]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:55 [T/fin [__:55 [v want]]]] [[D Mary] [to leave]]]
				3. Extraposition:
				=[[[D John]:55 [T/fin [__:55 [v want]]]] [[D Mary] [to leave]]]
				4. Floater movement reconstruction:
				=[[[D John]:55 [T/fin [__:55 [v want]]]] [[D Mary] [to leave]]]
				5. Phrasal movement reconstruction:
					[D Mary] will undergo A-reconstruction.
					New head was spawned due to multiple specifiers at to but its category is unknown!
				=[[[D John]:55 [T/fin [__:55 [v want]]]] [? [[D Mary]:56 [to [__:56 leave]]]]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG from the edge of to.
						to acquired PHI:PER:3 from the edge of to.
				=[[[D John]:55 [T/fin [__:55 [v want]]]] [? [[D Mary]:56 [to [__:56 leave]]]]]
				7. Last resort extraposition:
				"want" lacks complement.
					An uninterpretable grammatical head without lexical category was detected.
					Last resort extraposition will be tried on [[[D John]:55 [T/fin [__:55 [v want]]]] [? [[D Mary]:56 [to [__:56 leave]]]]].
			= [[[D John] [T/fin [[D John] [v want]]]] [? [[D Mary] [to [[D Mary] leave]]]]]
		Checking LF-interface conditions.
				"want" lacks complement.
					An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  want: [V, v, TT/fin];  ?: [?];  D: [D, ?];  Mary: [N, D, ?];  to: [INF, ?];  __: [D, INF, ?];  __: [N, D, INF, ?];  leave: [V, INF, ?];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[[D John]:55 [T/fin [__:55 [v want]]]] D{N}] to]
				1. Head movement reconstruction:
				=[[[D John]:55 [T/fin [__:55 [v want]]]] [D Mary]]
				2. Feature processing:
				=[[[D John]:55 [T/fin [__:55 [v want]]]] [D Mary]]
				3. Extraposition:
				=[[[D John]:55 [T/fin [__:55 [v want]]]] [D Mary]]
				4. Floater movement reconstruction:
				=[[[D John]:55 [T/fin [__:55 [v want]]]] [D Mary]]
				5. Phrasal movement reconstruction:
				=[[[D John]:55 [T/fin [__:55 [v want]]]] [D Mary]]
				6. Agreement reconstruction:
				=[[[D John]:55 [T/fin [__:55 [v want]]]] [D Mary]]
				7. Last resort extraposition:
				"want" lacks complement.
				D has unacceptable specifier [[D John]:55 [T/fin [__:55 [v want]]]].
					Last resort extraposition will be tried on [[[D John]:55 [T/fin [__:55 [v want]]]] [D Mary]].
					<D Mary> was made an adjunct.
					<D Mary> is transferred to LF as a phase.
				"want" lacks complement.
					Something is still wrong. The structure is still uninterpretable.
			=[[[[D John]:55 [T/fin [__:55 [v want]]]] <D Mary>] to]

	26. Consume "leave"

		[[[[D John] [T/fin [[D John] [v want]]]] <D Mary>] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[[D John] [T/fin [[D John] [v want]]]] <D Mary>] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[[D John]:55 [T/fin [__:55 [v want]]]] <D Mary>] [to leave]]

	>>>	Trying candidate spellout structure [[[[D John] [T/fin [[D John] [v want]]]] <D Mary>] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[[D John]:55 [T/fin [__:55 [v want]]]] <D Mary>] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[[D John]:55 [T/fin [__:55 [v want]]]] <D Mary>] [to leave]]
				3. Extraposition:
				=[[[[D John]:55 [T/fin [__:55 [v want]]]] <D Mary>] [to leave]]
				4. Floater movement reconstruction:
				=[[[[D John]:55 [T/fin [__:55 [v want]]]] <D Mary>] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[[D John]:55 [T/fin [__:55 [v want]]]] <D Mary>] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[[D John]:55 [T/fin [__:55 [v want]]]] <D Mary>] [to leave]]
				7. Last resort extraposition:
				"want" lacks complement.
				to has unacceptable specifier [[[D John]:55 [T/fin [__:55 [v want]]]] <D Mary>].
					Last resort extraposition will be tried on [[[[D John]:55 [T/fin [__:55 [v want]]]] <D Mary>] [to leave]].
			= [[[[D John] [T/fin [[D John] [v want]]]] <D Mary>] [to leave]]
		Checking LF-interface conditions.
				"want" lacks complement.
				to has unacceptable specifier [[[D John]:55 [T/fin [__:55 [v want]]]] <D Mary>].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  want: [V, v, TT/fin];  D: [D];  Mary: [N, D];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "want-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "wants".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 15
['John', 'promises', 'Mary', 'to_inf', 'leave']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'promise-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin]

	10. Consume "promise"

		[[D John] T/fin] + promise
			Filtering out impossible merge sites...
			Sink "promise" into T/fin because they are inside the same phonological word.
			=[[D John] T/fin{V}]

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

	11. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	12. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	13. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	14. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	15. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	16. Consume "D"

		[[D John] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{V} D] due to complement selection.
				Prioritize [promise D] due to complement selection.
				[[D John] T/fin{V}] + D = -98]
				T/fin{V} + D = 206]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D John] T/fin{V}]; D]
			Exploring solution number (1) =[T/fin{V} D]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
				An EPP-head "T/fin{V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{V} D]]

	17. Consume "Mary"

		[[D John] [T/fin{V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[D John] [T/fin{V} D{N}]]

	18. Consume "to"

		[[D John] [T/fin{V} D{N}]] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				Avoid TT/finP as SPEC, to.
				An EPP-head "T/fin" lacks specifier.
				Avoid [T/fin [promise [D Mary]]] as left branch because it constitutes illicit structure.
				Avoid D{N} because it could break words.
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
				Prioritize D{N} because all solutions were negative.
				[[D John] [T/fin{V} D{N}]] + to = -98]
				[T/fin{V} D{N}] + to = -194]
				D{N} + to = 106]
		Ranking completed:
			1. [D{N}; to]
			2. [[[D John] [T/fin{V} D{N}]]; to]
			3. [[T/fin{V} D{N}]; to]
			Exploring solution number (1) =[D{N} to]
				1. Head movement reconstruction:
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
			=[[D John] [T/fin{V} [[D Mary] to]]]

	19. Consume "leave"

		[[D John] [T/fin{V} [[D Mary] to]]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [promise [[D Mary] to]]]]] leave] due to bad left branch.
				Reject [[T/fin [promise [[D Mary] to]]] leave] due to bad left branch.
				Reject [[[D Mary] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{V} [[D Mary] [to leave]]]]

	>>>	Trying candidate spellout structure [[D John] [T/fin{V} [[D Mary] [to leave]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target promise in T/fin
					=[[D John] [T/fin [promise [[D Mary] [to leave]]]]]
				=[[D John] [T/fin [promise [[D Mary] [to leave]]]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
					to has neutralized PHI-feature, will be resolved into -ARG due to promise
				=[[D John] [T/fin [promise [[D Mary] [to leave]]]]]
				3. Extraposition:
				=[[D John] [T/fin [promise [[D Mary] [to leave]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [promise [[D Mary] [to leave]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:62 [T/fin [__:62 [promise [[D Mary] [to leave]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:62 [T/fin [__:62 [promise [[D Mary] [to leave]]]]]]
				7. Last resort extraposition:
				[D Mary] has no thematic role at the SPEC of to
				to (to) has a specifier [D Mary](set()) but is marked for -EPP behavior.
					Last resort extraposition will be tried on [[D John]:62 [T/fin [__:62 [promise [[D Mary] [to leave]]]]]].
					<to leave> was made an adjunct.
					<to leave> is transferred to LF as a phase.
			= [[D John] [T/fin [[D John] [promise [[D Mary] <to leave>]]]]]
		Checking LF-interface conditions.
			Transferring [[D John]:62 [T/fin [__:62 [promise [[D Mary] <to leave>]]]]] into the conceptual-intentional system...
				promise with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D Mary] <to leave>]    (alternatives: 2. [D John] 3. T/fin )
				leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'leave([D John])', 'promise([[D Mary] <to leave>])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [promise [[D Mary] <to leave>]]]]]
		Grammar: [[D John]:1 [T/fin [__:1 [promise [[D Mary] <to leave>]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [[D N] INFP]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
promise:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  promise: [V, TT/fin];  D: [D, V, TT/fin];  Mary: [N, D, V, TT/fin];  to: [INF, V, TT/fin];  leave: [V, INF, V, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] [T/fin{V} D{N}]] to]
				1. Head movement reconstruction:
					Target promise in T/fin
					=[[D John] [T/fin [promise D{N}]]]
				=[[D John] [T/fin [promise [D Mary]]]]
				2. Feature processing:
				=[[D John] [T/fin [promise [D Mary]]]]
				3. Extraposition:
				=[[D John] [T/fin [promise [D Mary]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [promise [D Mary]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:63 [T/fin [__:63 [promise [D Mary]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:63 [T/fin [__:63 [promise [D Mary]]]]]
				7. Last resort extraposition:
			=[[[D John]:63 [T/fin [__:63 [promise [D Mary]]]]] to]

	20. Consume "leave"

		[[[D John] [T/fin [[D John] [promise [D Mary]]]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [promise [D Mary]]]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:63 [T/fin [__:63 [promise [D Mary]]]]] [to leave]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [promise [D Mary]]]]] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:63 [T/fin [__:63 [promise [D Mary]]]]] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:63 [T/fin [__:63 [promise [D Mary]]]]] [to leave]]
				3. Extraposition:
				=[[[D John]:63 [T/fin [__:63 [promise [D Mary]]]]] [to leave]]
				4. Floater movement reconstruction:
				=[[[D John]:63 [T/fin [__:63 [promise [D Mary]]]]] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[D John]:63 [T/fin [__:63 [promise [D Mary]]]]] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[D John]:63 [T/fin [__:63 [promise [D Mary]]]]] [to leave]]
				7. Last resort extraposition:
				to has unacceptable specifier [[D John]:63 [T/fin [__:63 [promise [D Mary]]]]].
					Last resort extraposition will be tried on [[[D John]:63 [T/fin [__:63 [promise [D Mary]]]]] [to leave]].
			= [[[D John] [T/fin [[D John] [promise [D Mary]]]]] [to leave]]
		Checking LF-interface conditions.
				to has unacceptable specifier [[D John]:63 [T/fin [__:63 [promise [D Mary]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
promise:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  promise: [V, TT/fin];  D: [D, V, TT/fin];  Mary: [N, D, V, TT/fin];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[T/fin{V} D{N}] to]
				1. Head movement reconstruction:
					Target promise in T/fin
					=[T/fin [promise D{N}]]
				=[T/fin [promise [D Mary]]]
				2. Feature processing:
				=[T/fin [promise [D Mary]]]
				3. Extraposition:
				=[T/fin [promise [D Mary]]]
				4. Floater movement reconstruction:
				=[T/fin [promise [D Mary]]]
				5. Phrasal movement reconstruction:
				=[T/fin [promise [D Mary]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:GEN:F by phi-Agree from [D Mary].
						T/fin acquired PHI:NUM:SG by phi-Agree from [D Mary].
						T/fin acquired PHI:PER:3 by phi-Agree from [D Mary].
				=[T/fin [promise [D Mary]]]
				7. Last resort extraposition:
				An EPP-head "T/fin" lacks specifier.
					Last resort extraposition will be tried on [T/fin [promise [D Mary]]].
					No suitable node for extraposition found. No action was taken.
			=[[D John] [[T/fin [promise [D Mary]]] to]]

	21. Consume "leave"

		[[D John] [[T/fin [promise [D Mary]]] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [[[T/fin [promise [D Mary]]] [D John]] to]] leave] due to bad left branch.
				Reject [[[T/fin [promise [D Mary]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [[T/fin [promise [D Mary]]] [to leave]]]

	>>>	Trying candidate spellout structure [[D John] [[T/fin [promise [D Mary]]] [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[D John] [[T/fin [promise [D Mary]]] [to leave]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[D John] [[T/fin [promise [D Mary]]] [to leave]]]
				3. Extraposition:
				=[[D John] [[T/fin [promise [D Mary]]] [to leave]]]
				4. Floater movement reconstruction:
				=[[D John] [[T/fin [promise [D Mary]]] [to leave]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
					New head was spawned due to multiple specifiers at to but its category is unknown!
				=[[D John]:65 [? [[T/fin [promise [D Mary]]] [to [__:65 leave]]]]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG by phi-Agree from __:65.
						to acquired PHI:PER:3 by phi-Agree from __:65.
				=[[D John]:65 [? [[T/fin [promise [D Mary]]] [to [__:65 leave]]]]]
				7. Last resort extraposition:
					An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier.
				to has unacceptable specifier [T/fin [promise [D Mary]]].
					Last resort extraposition will be tried on [[D John]:65 [? [[T/fin [promise [D Mary]]] [to [__:65 leave]]]]].
			= [[D John] [? [[T/fin [promise [D Mary]]] [to [[D John] leave]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier.
				to has unacceptable specifier [T/fin [promise [D Mary]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI_CHECKED', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
promise:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI_CHECKED', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  ?: [?];  T/fin: [TT/fin, ?];  promise: [V, TT/fin, ?];  D: [D, V, TT/fin, ?];  Mary: [N, D, V, TT/fin, ?];  to: [INF, ?];  __: [D, INF, ?];  __: [N, D, INF, ?];  leave: [V, INF, ?];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin{V}] D]
				1. Head movement reconstruction:
				=[[D John] [T/fin promise]]
				2. Feature processing:
				=[[D John] [T/fin promise]]
				3. Extraposition:
				=[[D John] [T/fin promise]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin promise]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:66 [T/fin [__:66 promise]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:66 [T/fin [__:66 promise]]]
				7. Last resort extraposition:
			=[[[D John]:66 [T/fin [__:66 promise]]] D]

	22. Consume "Mary"

		[[[D John] [T/fin [[D John] promise]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[[D John]:66 [T/fin [__:66 promise]]] D{N}]

	23. Consume "to"

		[[[D John] [T/fin [[D John] promise]]] D{N}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [[[D John] [T/fin [[D John] promise]]] <D Mary>] as left branch because it constitutes illicit structure.
				[[[D John]:66 [T/fin [__:66 promise]]] D{N}] + to = -98]
				D{N} + to = 2]
		Ranking completed:
			1. [D{N}; to]
			2. [[[[D John]:66 [T/fin [__:66 promise]]] D{N}]; to]
			Exploring solution number (1) =[D{N} to]
				1. Head movement reconstruction:
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
			=[[[D John]:66 [T/fin [__:66 promise]]] [[D Mary] to]]

	24. Consume "leave"

		[[[D John] [T/fin [[D John] promise]]] [[D Mary] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] promise]]] [[D Mary] to]] leave] due to bad left branch.
				Reject [[[D Mary] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:66 [T/fin [__:66 promise]]] [[D Mary] [to leave]]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] promise]]] [[D Mary] [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:66 [T/fin [__:66 promise]]] [[D Mary] [to leave]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:66 [T/fin [__:66 promise]]] [[D Mary] [to leave]]]
				3. Extraposition:
				=[[[D John]:66 [T/fin [__:66 promise]]] [[D Mary] [to leave]]]
				4. Floater movement reconstruction:
				=[[[D John]:66 [T/fin [__:66 promise]]] [[D Mary] [to leave]]]
				5. Phrasal movement reconstruction:
					[D Mary] will undergo A-reconstruction.
					New head was spawned due to multiple specifiers at to but its category is unknown!
				=[[[D John]:66 [T/fin [__:66 promise]]] [? [[D Mary]:67 [to [__:67 leave]]]]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG from the edge of to.
						to acquired PHI:PER:3 from the edge of to.
				=[[[D John]:66 [T/fin [__:66 promise]]] [? [[D Mary]:67 [to [__:67 leave]]]]]
				7. Last resort extraposition:
					An uninterpretable grammatical head without lexical category was detected.
					Last resort extraposition will be tried on [[[D John]:66 [T/fin [__:66 promise]]] [? [[D Mary]:67 [to [__:67 leave]]]]].
			= [[[D John] [T/fin [[D John] promise]]] [? [[D Mary] [to [[D Mary] leave]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
promise:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  promise: [V, TT/fin];  ?: [?];  D: [D, ?];  Mary: [N, D, ?];  to: [INF, ?];  __: [D, INF, ?];  __: [N, D, INF, ?];  leave: [V, INF, ?];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[[D John]:66 [T/fin [__:66 promise]]] D{N}] to]
				1. Head movement reconstruction:
				=[[[D John]:66 [T/fin [__:66 promise]]] [D Mary]]
				2. Feature processing:
				=[[[D John]:66 [T/fin [__:66 promise]]] [D Mary]]
				3. Extraposition:
				=[[[D John]:66 [T/fin [__:66 promise]]] [D Mary]]
				4. Floater movement reconstruction:
				=[[[D John]:66 [T/fin [__:66 promise]]] [D Mary]]
				5. Phrasal movement reconstruction:
				=[[[D John]:66 [T/fin [__:66 promise]]] [D Mary]]
				6. Agreement reconstruction:
				=[[[D John]:66 [T/fin [__:66 promise]]] [D Mary]]
				7. Last resort extraposition:
				D has unacceptable specifier [[D John]:66 [T/fin [__:66 promise]]].
					Last resort extraposition will be tried on [[[D John]:66 [T/fin [__:66 promise]]] [D Mary]].
					<D Mary> was made an adjunct.
					<D Mary> is transferred to LF as a phase.
					Something is still wrong. The structure is still uninterpretable.
			=[[[[D John]:66 [T/fin [__:66 promise]]] <D Mary>] to]

	25. Consume "leave"

		[[[[D John] [T/fin [[D John] promise]]] <D Mary>] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[[D John] [T/fin [[D John] promise]]] <D Mary>] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[[D John]:66 [T/fin [__:66 promise]]] <D Mary>] [to leave]]

	>>>	Trying candidate spellout structure [[[[D John] [T/fin [[D John] promise]]] <D Mary>] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[[D John]:66 [T/fin [__:66 promise]]] <D Mary>] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[[D John]:66 [T/fin [__:66 promise]]] <D Mary>] [to leave]]
				3. Extraposition:
				=[[[[D John]:66 [T/fin [__:66 promise]]] <D Mary>] [to leave]]
				4. Floater movement reconstruction:
				=[[[[D John]:66 [T/fin [__:66 promise]]] <D Mary>] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[[D John]:66 [T/fin [__:66 promise]]] <D Mary>] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[[D John]:66 [T/fin [__:66 promise]]] <D Mary>] [to leave]]
				7. Last resort extraposition:
				to has unacceptable specifier [[[D John]:66 [T/fin [__:66 promise]]] <D Mary>].
					Last resort extraposition will be tried on [[[[D John]:66 [T/fin [__:66 promise]]] <D Mary>] [to leave]].
			= [[[[D John] [T/fin [[D John] promise]]] <D Mary>] [to leave]]
		Checking LF-interface conditions.
				to has unacceptable specifier [[[D John]:66 [T/fin [__:66 promise]]] <D Mary>].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
promise:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  promise: [V, TT/fin];  D: [D];  Mary: [N, D];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "promise-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "promises".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 16
['Pekka', 'pyytaa', 'lahtemaan']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	5. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	8. Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v*$', 'pyyta-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[D Pekka] T/fin]

	11. Consume "v*"

		[[D Pekka] T/fin] + v*
			Filtering out impossible merge sites...
			Sink "v*" into T/fin because they are inside the same phonological word.
			=[[D Pekka] T/fin{v}]

	12. Consume "pyyda"

		[[D Pekka] T/fin{v}] + pyyda
			Filtering out impossible merge sites...
			Sink "pyyda" into v* because they are inside the same phonological word.
			=[[D Pekka] T/fin{v,V}]

		Next word contains multiple morphemes ['MA/inf$', 'lahte-']

	13. Consume "ma"

		[[D Pekka] T/fin{v,V}] + ma
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, ma.
				[[D Pekka] T/fin{v,V}] + ma = -98]
				T/fin{v,V} + ma = 2]
		Ranking completed:
			1. [T/fin{v,V}; ma]
			2. [[[D Pekka] T/fin{v,V}]; ma]
			Exploring solution number (1) =[T/fin{v,V} ma]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{v,V} ma]]

	14. Consume "lahtea"

		[[D Pekka] [T/fin{v,V} ma]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into ma because they are inside the same phonological word.
			=[[D Pekka] [T/fin{v,V} ma{V}]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{v,V} ma{V}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[[D Pekka] [T/fin [v*{V} ma{V}]]]
					Target pyyda in v*
					=[[D Pekka] [T/fin [v* [pyyda ma{V}]]]]
				=[[D Pekka] [T/fin [v* [pyyda [ma lahtea]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [v* [pyyda [ma lahtea]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [v* [pyyda [ma lahtea]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:18 [T/fin [<__>:18 [v* [pyyda [ma lahtea]]]]]]
				=[<D Pekka>:18 [T/fin [<__>:18 [v* [pyyda [ma lahtea]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:18 [T/fin [<__>:18 [v* [pyyda [ma lahtea]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:18 [T/fin [<__>:18 [v* [pyyda [ma lahtea]]]]]]
				7. Last resort extraposition:
			= [<D Pekka> [T/fin [<D Pekka> [v* [pyyda [ma lahtea]]]]]]
		Checking LF-interface conditions.
			Transferring [<D Pekka>:18 [T/fin [<__>:18 [v* [pyyda [ma lahtea]]]]]] into the conceptual-intentional system...
				v* with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				pyyda with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'lahtea(generic)', 'pyyda(clausal argument)', 'v*(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v* [pyyda [ma lahtea]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<__>:1 [v* [pyyda [ma lahtea]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [INF V]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
pyyda:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:pyyda', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
ma:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '-VAL', 'CAT:-ARG', 'CAT:-ARG/INF/MA/inf', 'CAT:INF', 'CAT:MA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:MA/inf', 'PF:ma']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  pyyda: [V, v, TT/fin];  ma: [INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D Pekka] T/fin{v,V}] ma]
				1. Head movement reconstruction:
				=[[D Pekka] [T/fin [v* pyyda]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [v* pyyda]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [v* pyyda]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:19 [T/fin [<__>:19 [v* pyyda]]]]
				=[<D Pekka>:19 [T/fin [<__>:19 [v* pyyda]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:19 [T/fin [<__>:19 [v* pyyda]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:19 [T/fin [<__>:19 [v* pyyda]]]]
				7. Last resort extraposition:
			=[[<D Pekka>:19 [T/fin [<__>:19 [v* pyyda]]]] ma]

	15. Consume "lahtea"

		[[<D Pekka> [T/fin [<D Pekka> [v* pyyda]]]] ma] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into ma because they are inside the same phonological word.
			=[[<D Pekka>:19 [T/fin [<__>:19 [v* pyyda]]]] ma{V}]

	>>>	Trying candidate spellout structure [[<D Pekka> [T/fin [<D Pekka> [v* pyyda]]]] ma{V}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[<D Pekka>:19 [T/fin [<__>:19 [v* pyyda]]]] [ma lahtea]]
				2. Feature processing:
				=[[<D Pekka>:19 [T/fin [<__>:19 [v* pyyda]]]] [ma lahtea]]
				3. Extraposition:
				=[[<D Pekka>:19 [T/fin [<__>:19 [v* pyyda]]]] [ma lahtea]]
				4. Floater movement reconstruction:
				=[[<D Pekka>:19 [T/fin [<__>:19 [v* pyyda]]]] [ma lahtea]]
				5. Phrasal movement reconstruction:
				=[[<D Pekka>:19 [T/fin [<__>:19 [v* pyyda]]]] [ma lahtea]]
				6. Agreement reconstruction:
				=[[<D Pekka>:19 [T/fin [<__>:19 [v* pyyda]]]] [ma lahtea]]
				7. Last resort extraposition:
				ma has unacceptable specifier [<D Pekka>:19 [T/fin [<__>:19 [v* pyyda]]]].
					Last resort extraposition will be tried on [[<D Pekka>:19 [T/fin [<__>:19 [v* pyyda]]]] [ma lahtea]].
					No suitable node for extraposition found. No action was taken.
			= [[<D Pekka> [T/fin [<D Pekka> [v* pyyda]]]] [ma lahtea]]
		Checking LF-interface conditions.
				ma has unacceptable specifier [<D Pekka>:19 [T/fin [<__>:19 [v* pyyda]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
pyyda:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:pyyda', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
ma:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '-VAL', 'CAT:-ARG', 'CAT:-ARG/INF/MA/inf', 'CAT:INF', 'CAT:MA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:MA/inf', 'PF:ma']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  pyyda: [V, v, TT/fin];  ma: [INF];  lahtea: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtemaan".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "pyyta-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v*$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "pyytaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 17
['to_inf', 'leave', 'is', 'a', 'mistake']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None
			=to

	2. Consume "leave"

		to + leave
			Filtering out impossible merge sites...
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[to leave]

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'be-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	3. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	4. Consume "T/fin"

		[to leave] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Prioritize INFP as SPEC,T/fin.
				Avoid [leave T/fin] due to complement selection.
				[to leave] + T/fin = 102]
				leave + T/fin = -96]
		Ranking completed:
			1. [[to leave]; T/fin]
			2. [leave; T/fin]
			Exploring solution number (1) =[[to leave] T/fin]
				1. Head movement reconstruction:
				=[to leave]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[to leave]
				3. Extraposition:
				=[to leave]
				4. Floater movement reconstruction:
				=[to leave]
				5. Phrasal movement reconstruction:
				=[to leave]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[to leave]
				7. Last resort extraposition:
			=[[to leave] T/fin]

	5. Consume "be"

		[[to leave] T/fin] + be
			Filtering out impossible merge sites...
			Sink "be" into T/fin because they are inside the same phonological word.
			=[[to leave] T/fin{V}]

	6. Consume "a"

		[[to leave] T/fin{V}] + a
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, a.
				"be" lacks complement.
				Avoid [[to leave] [T/fin be]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{V} a] due to complement selection.
				[[to leave] T/fin{V}] + a = -197]
				T/fin{V} + a = 104]
		Ranking completed:
			1. [T/fin{V}; a]
			2. [[[to leave] T/fin{V}]; a]
			Exploring solution number (1) =[T/fin{V} a]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
				An EPP-head "T/fin{V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[to leave] [T/fin{V} a]]

	7. Consume "mistake"

		[[to leave] [T/fin{V} a]] + mistake
			Filtering out impossible merge sites...
				Reject [[[to leave] [T/fin [be a]]] mistake] due to bad left branch.
				Reject [[T/fin [be a]] mistake] due to bad left branch.
			Exploring solution number (1) =[a mistake]
				1. Head movement reconstruction:
				=a
				2. Feature processing:
				=a
				3. Extraposition:
				=a
				4. Floater movement reconstruction:
				=a
				5. Phrasal movement reconstruction:
				=a
				6. Agreement reconstruction:
				=a
				7. Last resort extraposition:
			=[[to leave] [T/fin{V} [a mistake]]]

	>>>	Trying candidate spellout structure [[to leave] [T/fin{V} [a mistake]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target be in T/fin
					=[[to leave] [T/fin [be [a mistake]]]]
				=[[to leave] [T/fin [be [a mistake]]]]
				2. Feature processing:
				=[[to leave] [T/fin [be [a mistake]]]]
				3. Extraposition:
				=[[to leave] [T/fin [be [a mistake]]]]
				4. Floater movement reconstruction:
				=[[to leave] [T/fin [be [a mistake]]]]
				5. Phrasal movement reconstruction:
				=[[to leave] [T/fin [be [a mistake]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[to leave] [T/fin [be [a mistake]]]]
				7. Last resort extraposition:
			= [[to leave] [T/fin [be [a mistake]]]]
		Checking LF-interface conditions.
			Transferring [[to leave] [T/fin [be [a mistake]]]] into the conceptual-intentional system...
				to with ['PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [T/fin [be [a mistake]]]    (alternatives: )
				leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				T/fin with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'T/fin(generic)', 'leave(generic)', 'to([T/fin [be [a mistake]]])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[to leave] [T/fin [be [a mistake]]]]
		Grammar: [[to leave] [T/fin [be [a mistake]]]]
		Spellout TT/finP = [INFP [TT/fin [V [D N]]]]
----------------------------------------------------------------------------------------------------------
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
be:['!COMP:*', '-ARG', '-COMP:N', '-COMP:T/fin', '-COMP:TO/inf', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'CAT:-ARG', 'CAT:-ARG/COPULA/V', 'CAT:COPULA', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:be', 'PF:be', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
a:['!COMP:*', '!PROBE:CAT:N', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:a', 'PF:a', 'PHI:DET:INDEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
mistake:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:mistake', 'PF:mistake', 'SPEC:A']

to: [INF];  leave: [V, INF];  T/fin: [TT/fin];  be: [V, TT/fin];  a: [D, V, TT/fin];  mistake: [N, D, V, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "mistake".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[to leave] T/fin{V}] a]
				1. Head movement reconstruction:
				=[[to leave] [T/fin be]]
				2. Feature processing:
				=[[to leave] [T/fin be]]
				3. Extraposition:
				=[[to leave] [T/fin be]]
				4. Floater movement reconstruction:
				=[[to leave] [T/fin be]]
				5. Phrasal movement reconstruction:
				=[[to leave] [T/fin be]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[to leave] [T/fin be]]
				7. Last resort extraposition:
				"be" lacks complement.
					Last resort extraposition will be tried on [[to leave] [T/fin be]].
					No suitable node for extraposition found. No action was taken.
			=[[[to leave] [T/fin be]] a]

	8. Consume "mistake"

		[[[to leave] [T/fin be]] a] + mistake
			Filtering out impossible merge sites...
				Reject [[[[to leave] [T/fin be]] a] mistake] due to bad left branch.
			Exploring solution number (1) =[a mistake]
				1. Head movement reconstruction:
				=a
				2. Feature processing:
				=a
				3. Extraposition:
				=a
				4. Floater movement reconstruction:
				=a
				5. Phrasal movement reconstruction:
				=a
				6. Agreement reconstruction:
				=a
				7. Last resort extraposition:
			=[[[to leave] [T/fin be]] [a mistake]]

	>>>	Trying candidate spellout structure [[[to leave] [T/fin be]] [a mistake]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[to leave] [T/fin be]] [a mistake]]
				2. Feature processing:
				=[[[to leave] [T/fin be]] [a mistake]]
				3. Extraposition:
				=[[[to leave] [T/fin be]] [a mistake]]
				4. Floater movement reconstruction:
				=[[[to leave] [T/fin be]] [a mistake]]
				5. Phrasal movement reconstruction:
				=[[[to leave] [T/fin be]] [a mistake]]
				6. Agreement reconstruction:
				=[[[to leave] [T/fin be]] [a mistake]]
				7. Last resort extraposition:
				"be" lacks complement.
				a has unacceptable specifier [[to leave] [T/fin be]].
					Last resort extraposition will be tried on [[[to leave] [T/fin be]] [a mistake]].
					<a mistake> was made an adjunct.
					<a mistake> is transferred to LF as a phase.
				"be" lacks complement.
					Something is still wrong. The structure is still uninterpretable.
			= [[[to leave] [T/fin be]] <a mistake>]
		Checking LF-interface conditions.
				"be" lacks complement.
			LF-interface condition(s) violated
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
be:['!COMP:*', '-ARG', '-COMP:N', '-COMP:T/fin', '-COMP:TO/inf', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'CAT:-ARG', 'CAT:-ARG/COPULA/V', 'CAT:COPULA', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:be', 'PF:be', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
a:['!COMP:*', '!PROBE:CAT:N', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:a', 'PF:a', 'PHI:DET:INDEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
mistake:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:mistake', 'PF:mistake', 'SPEC:A']

to: [INF];  leave: [V, INF];  T/fin: [TT/fin];  be: [V, TT/fin];  a: [D];  mistake: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "mistake".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "a".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "be-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[leave T/fin]
				1. Head movement reconstruction:
				=leave
				2. Feature processing:
				=leave
				3. Extraposition:
				=leave
				4. Floater movement reconstruction:
				=leave
				5. Phrasal movement reconstruction:
				=leave
				6. Agreement reconstruction:
				=leave
				7. Last resort extraposition:
			=[to [leave T/fin]]

	9. Consume "be"

		[to [leave T/fin]] + be
			Filtering out impossible merge sites...
			Sink "be" into T/fin because they are inside the same phonological word.
			=[to [leave T/fin{V}]]

	10. Consume "a"

		[to [leave T/fin{V}]] + a
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "T/fin" lacks specifier.
				"be" lacks complement.
				Avoid [to [leave <T/fin be>]] as left branch because it constitutes illicit structure.
				Avoid VP as SPEC, a.
				Avoid [[leave T/fin{V}], a] because the operation breaks up an existing selectional dependency.
				An EPP-head "T/fin" lacks specifier.
				"be" lacks complement.
				Avoid [leave <T/fin be>] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{V} a] due to complement selection.
				[to [leave T/fin{V}]] + a = -98]
				[leave T/fin{V}] + a = -292]
				T/fin{V} + a = 106]
		Ranking completed:
			1. [T/fin{V}; a]
			2. [[to [leave T/fin{V}]]; a]
			3. [[leave T/fin{V}]; a]
			Exploring solution number (1) =[T/fin{V} a]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
				An EPP-head "T/fin{V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[to [leave [T/fin{V} a]]]

	11. Consume "mistake"

		[to [leave [T/fin{V} a]]] + mistake
			Filtering out impossible merge sites...
				Reject [[to [leave <T/fin [be a]>]] mistake] due to bad left branch.
				Reject [[leave <T/fin [be a]>] mistake] due to bad left branch.
				Reject [[T/fin [be a]] mistake] due to bad left branch.
			Exploring solution number (1) =[a mistake]
				1. Head movement reconstruction:
				=a
				2. Feature processing:
				=a
				3. Extraposition:
				=a
				4. Floater movement reconstruction:
				=a
				5. Phrasal movement reconstruction:
				=a
				6. Agreement reconstruction:
				=a
				7. Last resort extraposition:
			=[to [leave [T/fin{V} [a mistake]]]]

	>>>	Trying candidate spellout structure [to [leave [T/fin{V} [a mistake]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target be in T/fin
					=[to [leave [T/fin [be [a mistake]]]]]
				=[to [leave [T/fin [be [a mistake]]]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[to [leave [T/fin [be [a mistake]]]]]
				3. Extraposition:
					leave cannot select T/fin
					Extraposition will be tried on [T/fin [be [a mistake]]].
					<T/fin [be [a mistake]]> was made an adjunct.
					<T/fin [be [a mistake]]> is transferred to LF as a phase.
				=[to [leave <T/fin [be [a mistake]]>]]
				4. Floater movement reconstruction:
				=[to [leave <T/fin [be [a mistake]]>]]
				5. Phrasal movement reconstruction:
				=[to [leave <T/fin [be [a mistake]]>]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[to [leave <T/fin [be [a mistake]]>]]
				7. Last resort extraposition:
				An EPP-head "T/fin" lacks specifier.
					Last resort extraposition will be tried on [to [leave <T/fin [be [a mistake]]>]].
					No suitable node for extraposition found. No action was taken.
			= [to [leave <T/fin [be [a mistake]]>]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier.
			LF-interface condition(s) violated
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
be:['!COMP:*', '-ARG', '-COMP:N', '-COMP:T/fin', '-COMP:TO/inf', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'CAT:-ARG', 'CAT:-ARG/COPULA/V', 'CAT:COPULA', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:be', 'PF:be', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
a:['!COMP:*', '!PROBE:CAT:N', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:a', 'PF:a', 'PHI:DET:INDEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
mistake:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:mistake', 'PF:mistake', 'SPEC:A']

to: [INF];  leave: [V, INF];  T/fin: [TT/fin, V, INF];  be: [V, TT/fin, V, INF];  a: [D, V, TT/fin, V, INF];  mistake: [N, D, V, TT/fin, V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "mistake".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[to [leave T/fin{V}]] a]
				1. Head movement reconstruction:
				=[to [leave [T/fin be]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[to [leave [T/fin be]]]
				3. Extraposition:
					leave cannot select T/fin
					Extraposition will be tried on [T/fin be].
					<T/fin be> was made an adjunct.
					<T/fin be> is transferred to LF as a phase.
				=[to [leave <T/fin be>]]
				4. Floater movement reconstruction:
				=[to [leave <T/fin be>]]
				5. Phrasal movement reconstruction:
				=[to [leave <T/fin be>]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[to [leave <T/fin be>]]
				7. Last resort extraposition:
				An EPP-head "T/fin" lacks specifier.
				"be" lacks complement.
					Last resort extraposition will be tried on [to [leave <T/fin be>]].
					No suitable node for extraposition found. No action was taken.
			=[[to [leave <T/fin be>]] a]

	12. Consume "mistake"

		[[to [leave <T/fin be>]] a] + mistake
			Filtering out impossible merge sites...
				Reject [[[to [leave <T/fin be>]] a] mistake] due to bad left branch.
			Exploring solution number (1) =[a mistake]
				1. Head movement reconstruction:
				=a
				2. Feature processing:
				=a
				3. Extraposition:
				=a
				4. Floater movement reconstruction:
				=a
				5. Phrasal movement reconstruction:
				=a
				6. Agreement reconstruction:
				=a
				7. Last resort extraposition:
			=[[to [leave <T/fin be>]] [a mistake]]

	>>>	Trying candidate spellout structure [[to [leave <T/fin be>]] [a mistake]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[to [leave <T/fin be>]] [a mistake]]
				2. Feature processing:
				=[[to [leave <T/fin be>]] [a mistake]]
				3. Extraposition:
				=[[to [leave <T/fin be>]] [a mistake]]
				4. Floater movement reconstruction:
				=[[to [leave <T/fin be>]] [a mistake]]
				5. Phrasal movement reconstruction:
				=[[to [leave <T/fin be>]] [a mistake]]
				6. Agreement reconstruction:
				=[[to [leave <T/fin be>]] [a mistake]]
				7. Last resort extraposition:
				An EPP-head "T/fin" lacks specifier.
				"be" lacks complement.
					Last resort extraposition will be tried on [[to [leave <T/fin be>]] [a mistake]].
					<a mistake> was made an adjunct.
					<a mistake> is transferred to LF as a phase.
				An EPP-head "T/fin" lacks specifier.
				"be" lacks complement.
					Something is still wrong. The structure is still uninterpretable.
			= [[to [leave <T/fin be>]] <a mistake>]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier.
				"be" lacks complement.
			LF-interface condition(s) violated
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
be:['!COMP:*', '-ARG', '-COMP:N', '-COMP:T/fin', '-COMP:TO/inf', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'CAT:-ARG', 'CAT:-ARG/COPULA/V', 'CAT:COPULA', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:be', 'PF:be', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
a:['!COMP:*', '!PROBE:CAT:N', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:a', 'PF:a', 'PHI:DET:INDEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
mistake:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:mistake', 'PF:mistake', 'SPEC:A']

to: [INF];  leave: [V, INF];  T/fin: [TT/fin, V, INF];  be: [V, TT/fin, V, INF];  a: [D];  mistake: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "mistake".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[leave T/fin{V}] a]
				1. Head movement reconstruction:
				=[leave [T/fin be]]
				2. Feature processing:
				=[leave [T/fin be]]
				3. Extraposition:
					leave cannot select T/fin
					Extraposition will be tried on [T/fin be].
					<T/fin be> was made an adjunct.
					<T/fin be> is transferred to LF as a phase.
				=[leave <T/fin be>]
				4. Floater movement reconstruction:
				=[leave <T/fin be>]
				5. Phrasal movement reconstruction:
				=[leave <T/fin be>]
				6. Agreement reconstruction:
				=[leave <T/fin be>]
				7. Last resort extraposition:
				An EPP-head "T/fin" lacks specifier.
				"be" lacks complement.
					Last resort extraposition will be tried on [leave <T/fin be>].
					No suitable node for extraposition found. No action was taken.
			=[to [[leave <T/fin be>] a]]

	13. Consume "mistake"

		[to [[leave <T/fin be>] a]] + mistake
			Filtering out impossible merge sites...
				Reject [[to [[leave <T/fin be>] a]] mistake] due to bad left branch.
				Reject [[[leave <T/fin be>] a] mistake] due to bad left branch.
			Exploring solution number (1) =[a mistake]
				1. Head movement reconstruction:
				=a
				2. Feature processing:
				=a
				3. Extraposition:
				=a
				4. Floater movement reconstruction:
				=a
				5. Phrasal movement reconstruction:
				=a
				6. Agreement reconstruction:
				=a
				7. Last resort extraposition:
			=[to [[leave <T/fin be>] [a mistake]]]

	>>>	Trying candidate spellout structure [to [[leave <T/fin be>] [a mistake]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[to [[leave <T/fin be>] [a mistake]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[to [[leave <T/fin be>] [a mistake]]]
				3. Extraposition:
				=[to [[leave <T/fin be>] [a mistake]]]
				4. Floater movement reconstruction:
				=[to [[leave <T/fin be>] [a mistake]]]
				5. Phrasal movement reconstruction:
				=[to [[leave <T/fin be>] [a mistake]]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG by phi-Agree from [a mistake].
						to acquired PHI:PER:3 by phi-Agree from [a mistake].
				=[to [[leave <T/fin be>] [a mistake]]]
				7. Last resort extraposition:
				An EPP-head "T/fin" lacks specifier.
				"be" lacks complement.
				a has unacceptable specifier [leave <T/fin be>].
					Last resort extraposition will be tried on [to [[leave <T/fin be>] [a mistake]]].
					<a mistake> was made an adjunct.
					<a mistake> is transferred to LF as a phase.
				An EPP-head "T/fin" lacks specifier.
				"be" lacks complement.
					Something is still wrong. The structure is still uninterpretable.
			= [to [[leave <T/fin be>] <a mistake>]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier.
				"be" lacks complement.
			LF-interface condition(s) violated
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI_CHECKED', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
be:['!COMP:*', '-ARG', '-COMP:N', '-COMP:T/fin', '-COMP:TO/inf', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'CAT:-ARG', 'CAT:-ARG/COPULA/V', 'CAT:COPULA', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:be', 'PF:be', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
a:['!COMP:*', '!PROBE:CAT:N', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:a', 'PF:a', 'PHI:DET:INDEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
mistake:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:mistake', 'PF:mistake', 'SPEC:A']

to: [INF];  leave: [V, INF];  T/fin: [TT/fin, V, INF];  be: [V, TT/fin, V, INF];  a: [D, INF];  mistake: [N, D, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "mistake".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "a".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "be-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "is".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 18
['tassa', 'istuu', 'mukavasti']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['P$', 'tama']
			=P

		Next word contains multiple morphemes ['def$', '3p$', 'sg$', 'D$', 'tama-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	2. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	3. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	4. Consume "D$"
		Adding inflectional features {'-', 'PHI:PER:3', 'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:FI'} to D

	5. Consume "D"

		P + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
			=P{D}

	6. Consume "tama"

		P{D} + tama
			Filtering out impossible merge sites...
			Sink "tama" into D because they are inside the same phonological word.
			=P{D,N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'istu-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	7. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	8. Consume "T/fin"

		P{D,N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[P{D,N} T/fin]
				1. Head movement reconstruction:
					P was opened into [P [D tama]].
				=[P [D tama]]
				2. Feature processing:
				=[P [D tama]]
				3. Extraposition:
				=[P [D tama]]
				4. Floater movement reconstruction:
				=[P [D tama]]
				5. Phrasal movement reconstruction:
				=[P [D tama]]
				6. Agreement reconstruction:
				=[P [D tama]]
				7. Last resort extraposition:
			=[[P [D tama]] T/fin]

	9. Consume "istuu"

		[[P [D tama]] T/fin] + istuu
			Filtering out impossible merge sites...
			Sink "istuu" into T/fin because they are inside the same phonological word.
			=[[P [D tama]] T/fin{V}]

		Next word contains multiple morphemes ['sti$', 'mukava-']

	10. Consume "sti"

		[[P [D tama]] T/fin{V}] + sti
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, sti.
				Considering T/fin{V} due to legitimate tail-head configuration.
				[[P [D tama]] T/fin{V}] + sti = -98]
				T/fin{V} + sti = 204]
		Ranking completed:
			1. [T/fin{V}; sti]
			2. [[[P [D tama]] T/fin{V}]; sti]
			Exploring solution number (1) =[T/fin{V} sti]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[P [D tama]] [T/fin{V} sti]]

	11. Consume "mukavasti"

		[[P [D tama]] [T/fin{V} sti]] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
			=[[P [D tama]] [T/fin{V} sti{A}]]

	>>>	Trying candidate spellout structure [[P [D tama]] [T/fin{V} sti{A}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target istuu in T/fin
					=[[P [D tama]] [T/fin [istuu sti{A}]]]
				=[[P [D tama]] [T/fin [istuu [sti mukavasti]]]]
				2. Feature processing:
				=[[P [D tama]] [T/fin [istuu [sti mukavasti]]]]
				3. Extraposition:
				=[[P [D tama]] [T/fin [istuu [sti mukavasti]]]]
				4. Floater movement reconstruction:
					sti at the right failed to tail [CAT:T]
					<sti mukavasti> was made an adjunct.
					<sti mukavasti> is transferred to LF as a phase.
				=[[P [D tama]] [T/fin [istuu <sti mukavasti>]]]
				5. Phrasal movement reconstruction:
				=[[P [D tama]] [T/fin [istuu <sti mukavasti>]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[P [D tama]] [T/fin [istuu <sti mukavasti>]]]
				7. Last resort extraposition:
			= [[P [D tama]] [T/fin [istuu <sti mukavasti>]]]
		Checking LF-interface conditions.
			Transferring [[P [D tama]] [T/fin [istuu <sti mukavasti>]]] into the conceptual-intentional system...
				P with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				istuu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				Transfer to C-I successful.
			sti<[ADV, V, TT/fin]> failed to tail features [CAT:T]
			Final tail-head check failed.
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  istuu: [V, TT/fin];  sti: [ADV, V, TT/fin];  mukavasti: [A, ADV, V, TT/fin];  
			Let's find another solution...
.
.
.
		I have now explored all solutions for "mukava-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[P [D tama]] T/fin{V}] sti]
				1. Head movement reconstruction:
				=[[P [D tama]] [T/fin istuu]]
				2. Feature processing:
				=[[P [D tama]] [T/fin istuu]]
				3. Extraposition:
				=[[P [D tama]] [T/fin istuu]]
				4. Floater movement reconstruction:
				=[[P [D tama]] [T/fin istuu]]
				5. Phrasal movement reconstruction:
				=[[P [D tama]] [T/fin istuu]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[P [D tama]] [T/fin istuu]]
				7. Last resort extraposition:
			=[[[P [D tama]] [T/fin istuu]] sti]

	12. Consume "mukavasti"

		[[[P [D tama]] [T/fin istuu]] sti] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
			=[[[P [D tama]] [T/fin istuu]] sti{A}]

	>>>	Trying candidate spellout structure [[[P [D tama]] [T/fin istuu]] sti{A}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[P [D tama]] [T/fin istuu]] [sti mukavasti]]
				2. Feature processing:
				=[[[P [D tama]] [T/fin istuu]] [sti mukavasti]]
				3. Extraposition:
				=[[[P [D tama]] [T/fin istuu]] [sti mukavasti]]
				4. Floater movement reconstruction:
					sti at the right failed to tail [CAT:T]
					<sti mukavasti> was made an adjunct.
					<sti mukavasti> is transferred to LF as a phase.
				=[[[P [D tama]] [T/fin istuu]] <sti mukavasti>]
				5. Phrasal movement reconstruction:
				=[[[P [D tama]] [T/fin istuu]] <sti mukavasti>]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[P [D tama]] [T/fin istuu]] <sti mukavasti>]
				7. Last resort extraposition:
			= [[[P [D tama]] [T/fin istuu]] <sti mukavasti>]
		Checking LF-interface conditions.
			Transferring [[[P [D tama]] [T/fin istuu]] <sti mukavasti>] into the conceptual-intentional system...
				P with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				istuu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'P([D tama])', 'T/fin(Generic)', 'T/fin([P [D tama]])', 'istuu(generic)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[[P [D tama]] [T/fin istuu]] <sti mukavasti>]
		Grammar: [[[P [D tama]] [T/fin istuu]] <sti mukavasti>]
		Spellout TT/finP = [[PP [TT/fin V]] ADVP]
----------------------------------------------------------------------------------------------------------
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  istuu: [V, TT/fin];  sti: [ADV];  mukavasti: [A, ADV];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "mukava-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "mukavasti".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "istu-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "istuu".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tama-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tama".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tassa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 19
['Pekka', 'haluaa', 'lahtea']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	5. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	8. Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v$', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[D Pekka] T/fin]

	11. Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D Pekka] T/fin{v}]

	12. Consume "haluaa"

		[[D Pekka] T/fin{v}] + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into v because they are inside the same phonological word.
			=[[D Pekka] T/fin{v,V}]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	13. Consume "A/inf"

		[[D Pekka] T/fin{v,V}] + A/inf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] A/inf] due to bad left branch.
			Exploring solution number (1) =[T/fin{v,V} A/inf]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{v,V} A/inf]]

	14. Consume "lahtea"

		[[D Pekka] [T/fin{v,V} A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[D Pekka] [T/fin{v,V} A/inf{V}]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{v,V} A/inf{V}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D Pekka] [T/fin [v{V} A/inf{V}]]]
					Target haluaa in v
					=[[D Pekka] [T/fin [v [haluaa A/inf{V}]]]]
				=[[D Pekka] [T/fin [v [haluaa [A/inf lahtea]]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
					A/inf has neutralized PHI-feature, will be resolved into -ARG due to haluaa
				=[[D Pekka] [T/fin [v [haluaa [A/inf lahtea]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [v [haluaa [A/inf lahtea]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:21 [T/fin [<__>:21 [v [haluaa [A/inf lahtea]]]]]]
				=[<D Pekka>:21 [T/fin [<__>:21 [v [haluaa [A/inf lahtea]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:21 [T/fin [<__>:21 [v [haluaa [A/inf lahtea]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:21 [T/fin [<__>:21 [v [haluaa [A/inf lahtea]]]]]]
				7. Last resort extraposition:
			= [<D Pekka> [T/fin [<D Pekka> [v [haluaa [A/inf lahtea]]]]]]
		Checking LF-interface conditions.
			Transferring [<D Pekka>:21 [T/fin [<__>:21 [v [haluaa [A/inf lahtea]]]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				haluaa with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'haluaa(<D Pekka>)', 'lahtea(<D Pekka>)', 'v(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v [haluaa [A/inf lahtea]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<__>:1 [v [haluaa [A/inf lahtea]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [INF V]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  haluaa: [V, v, TT/fin];  A/inf: [INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "halua-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "haluaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 20
['Pekka', 'haluaa', 'Merjan', 'lahtea']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	5. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	8. Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v$', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[D Pekka] T/fin]

	11. Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D Pekka] T/fin{v}]

	12. Consume "haluaa"

		[[D Pekka] T/fin{v}] + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into v because they are inside the same phonological word.
			=[[D Pekka] T/fin{v,V}]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'gen$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	13. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	14. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	15. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	16. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	17. Consume "gen$"
		Storing inflectional feature ['-', '-FLOAT', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

	18. Consume "D$"
		Adding inflectional features {'TAIL:ARG,VAL,CAT:INF', 'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', '-FLOAT', 'LANG:FI', 'PHI:NUM:SG'} to D

	19. Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"haluaa" lacks complement.
				Avoid [<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [haluaa D] due to complement selection.
				[[D Pekka] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 158]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D Pekka] T/fin{v,V}]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{v,V} D]]

	20. Consume "Merja-"

		[[D Pekka] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[D Pekka] [T/fin{v,V} D{N}]]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	21. Consume "A/inf"

		[[D Pekka] [T/fin{v,V} D{N}]] + A/inf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v [haluaa [D Merja-]]]]]] A/inf] due to bad left branch.
				Reject [[T/fin [v [haluaa [D Merja-]]]] A/inf] due to bad left branch.
			Exploring solution number (1) =[D{N} A/inf]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[D Pekka] [T/fin{v,V} [[D Merja-] A/inf]]]

	22. Consume "lahtea"

		[[D Pekka] [T/fin{v,V} [[D Merja-] A/inf]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[D Pekka] [T/fin{v,V} [[D Merja-] A/inf{V}]]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{v,V} [[D Merja-] A/inf{V}]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D Pekka] [T/fin [v{V} [[D Merja-] A/inf{V}]]]]
					Target haluaa in v
					=[[D Pekka] [T/fin [v [haluaa [[D Merja-] A/inf{V}]]]]]
				=[[D Pekka] [T/fin [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
					A/inf has neutralized PHI-feature, will be resolved into -ARG due to haluaa
				=[[D Pekka] [T/fin [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:25 [T/fin [<__>:25 [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]]
				=[<D Pekka>:25 [T/fin [<__>:25 [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:25 [T/fin [<__>:25 [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:25 [T/fin [<__>:25 [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]]
				7. Last resort extraposition:
				D([D Merja-]) failed internal tail test for {frozenset({'CAT:INF', 'ARG', 'VAL'})}.
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf (A/inf) has a specifier [D Merja-](set()) but is marked for -EPP behavior.
					Last resort extraposition will be tried on [<D Pekka>:25 [T/fin [<__>:25 [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]].
					No suitable node for extraposition found. No action was taken.
			= [<D Pekka> [T/fin [<D Pekka> [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]]
		Checking LF-interface conditions.
				D([D Merja-]) failed internal tail test for {frozenset({'CAT:INF', 'ARG', 'VAL'})}.
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf (A/inf) has a specifier [D Merja-](set()) but is marked for -EPP behavior.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  haluaa: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Merja-: [N, D, V, v, TT/fin];  A/inf: [INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D Pekka] T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[[D Pekka] [T/fin [v haluaa]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [v haluaa]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [v haluaa]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:26 [T/fin [<__>:26 [v haluaa]]]]
				=[<D Pekka>:26 [T/fin [<__>:26 [v haluaa]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:26 [T/fin [<__>:26 [v haluaa]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:26 [T/fin [<__>:26 [v haluaa]]]]
				7. Last resort extraposition:
				"haluaa" lacks complement.
					Last resort extraposition will be tried on [<D Pekka>:26 [T/fin [<__>:26 [v haluaa]]]].
					No suitable node for extraposition found. No action was taken.
			=[[<D Pekka>:26 [T/fin [<__>:26 [v haluaa]]]] D]

	23. Consume "Merja-"

		[[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[<D Pekka>:26 [T/fin [<__>:26 [v haluaa]]]] D{N}]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	24. Consume "A/inf"

		[[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] D{N}] + A/inf
			Filtering out impossible merge sites...
				Reject [[[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] <D Merja->] A/inf] due to bad left branch.
			Exploring solution number (1) =[D{N} A/inf]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[<D Pekka>:26 [T/fin [<__>:26 [v haluaa]]]] [[D Merja-] A/inf]]

	25. Consume "lahtea"

		[[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] [[D Merja-] A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[<D Pekka>:26 [T/fin [<__>:26 [v haluaa]]]] [[D Merja-] A/inf{V}]]

	>>>	Trying candidate spellout structure [[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] [[D Merja-] A/inf{V}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[<D Pekka>:26 [T/fin [<__>:26 [v haluaa]]]] [[D Merja-] [A/inf lahtea]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
				=[[<D Pekka>:26 [T/fin [<__>:26 [v haluaa]]]] [[D Merja-] [A/inf lahtea]]]
				3. Extraposition:
				=[[<D Pekka>:26 [T/fin [<__>:26 [v haluaa]]]] [[D Merja-] [A/inf lahtea]]]
				4. Floater movement reconstruction:
				=[[<D Pekka>:26 [T/fin [<__>:26 [v haluaa]]]] [[D Merja-] [A/inf lahtea]]]
				5. Phrasal movement reconstruction:
				=[[<D Pekka>:26 [T/fin [<__>:26 [v haluaa]]]] [[D Merja-] [A/inf lahtea]]]
				6. Agreement reconstruction:
					Head A/inf, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						A/inf acquired PHI:NUM:SG from the edge of A/inf.
						A/inf acquired PHI:PER:3 from the edge of A/inf.
				=[[<D Pekka>:26 [T/fin [<__>:26 [v haluaa]]]] [[D Merja-] [A/inf lahtea]]]
				7. Last resort extraposition:
				"haluaa" lacks complement.
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [<D Pekka>:26 [T/fin [<__>:26 [v haluaa]]]].
					Last resort extraposition will be tried on [[<D Pekka>:26 [T/fin [<__>:26 [v haluaa]]]] [[D Merja-] [A/inf lahtea]]].
					No suitable node for extraposition found. No action was taken.
			= [[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] [[D Merja-] [A/inf lahtea]]]
		Checking LF-interface conditions.
				"haluaa" lacks complement.
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [<D Pekka>:26 [T/fin [<__>:26 [v haluaa]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'PHI:NUM:SG', 'PHI:PER:3']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  haluaa: [V, v, TT/fin];  D: [D];  Merja-: [N, D];  A/inf: [INF];  lahtea: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "gen$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merjan".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "halua-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "haluaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 21
['Pekka', 'haluaa', 'lahtevan']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	5. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	8. Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v$', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[D Pekka] T/fin]

	11. Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D Pekka] T/fin{v}]

	12. Consume "haluaa"

		[[D Pekka] T/fin{v}] + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into v because they are inside the same phonological word.
			=[[D Pekka] T/fin{v,V}]

		Next word contains multiple morphemes ['VA/inf$', 'lahte-']

	13. Consume "vAn"

		[[D Pekka] T/fin{v,V}] + vAn
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] vAn] due to bad left branch.
			Exploring solution number (1) =[T/fin{v,V} vAn]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{v,V} vAn]]

	14. Consume "lahtea"

		[[D Pekka] [T/fin{v,V} vAn]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into vAn because they are inside the same phonological word.
			=[[D Pekka] [T/fin{v,V} vAn{V}]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{v,V} vAn{V}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D Pekka] [T/fin [v{V} vAn{V}]]]
					Target haluaa in v
					=[[D Pekka] [T/fin [v [haluaa vAn{V}]]]]
				=[[D Pekka] [T/fin [v [haluaa [vAn lahtea]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [v [haluaa [vAn lahtea]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [v [haluaa [vAn lahtea]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:28 [T/fin [<__>:28 [v [haluaa [vAn lahtea]]]]]]
				=[<D Pekka>:28 [T/fin [<__>:28 [v [haluaa [vAn lahtea]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:28 [T/fin [<__>:28 [v [haluaa [vAn lahtea]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head vAn, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[<D Pekka>:28 [T/fin [<__>:28 [v [haluaa [vAn lahtea]]]]]]
				7. Last resort extraposition:
				An EPP-head "vAn" lacks specifier.
					Last resort extraposition will be tried on [<D Pekka>:28 [T/fin [<__>:28 [v [haluaa [vAn lahtea]]]]]].
					No suitable node for extraposition found. No action was taken.
			= [<D Pekka> [T/fin [<D Pekka> [v [haluaa [vAn lahtea]]]]]]
		Checking LF-interface conditions.
				An EPP-head "vAn" lacks specifier.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
vAn:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/VA/inf', 'CAT:INF', 'CAT:VA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:VA', 'PF:vAn', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  haluaa: [V, v, TT/fin];  vAn: [INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtevan".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "halua-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "haluaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 22
['Pekka', 'haluaa', 'Merjan', 'lahtevan']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	5. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	8. Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v$', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[D Pekka] T/fin]

	11. Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D Pekka] T/fin{v}]

	12. Consume "haluaa"

		[[D Pekka] T/fin{v}] + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into v because they are inside the same phonological word.
			=[[D Pekka] T/fin{v,V}]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'gen$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	13. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	14. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	15. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	16. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	17. Consume "gen$"
		Storing inflectional feature ['-', '-FLOAT', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

	18. Consume "D$"
		Adding inflectional features {'TAIL:ARG,VAL,CAT:INF', 'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', '-FLOAT', 'LANG:FI', 'PHI:NUM:SG'} to D

	19. Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"haluaa" lacks complement.
				Avoid [<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [haluaa D] due to complement selection.
				[[D Pekka] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 158]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D Pekka] T/fin{v,V}]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{v,V} D]]

	20. Consume "Merja-"

		[[D Pekka] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[D Pekka] [T/fin{v,V} D{N}]]

		Next word contains multiple morphemes ['VA/inf$', 'lahte-']

	21. Consume "vAn"

		[[D Pekka] [T/fin{v,V} D{N}]] + vAn
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v [haluaa [D Merja-]]]]]] vAn] due to bad left branch.
				Reject [[T/fin [v [haluaa [D Merja-]]]] vAn] due to bad left branch.
			Exploring solution number (1) =[D{N} vAn]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[D Pekka] [T/fin{v,V} [[D Merja-] vAn]]]

	22. Consume "lahtea"

		[[D Pekka] [T/fin{v,V} [[D Merja-] vAn]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into vAn because they are inside the same phonological word.
			=[[D Pekka] [T/fin{v,V} [[D Merja-] vAn{V}]]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{v,V} [[D Merja-] vAn{V}]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D Pekka] [T/fin [v{V} [[D Merja-] vAn{V}]]]]
					Target haluaa in v
					=[[D Pekka] [T/fin [v [haluaa [[D Merja-] vAn{V}]]]]]
				=[[D Pekka] [T/fin [v [haluaa [[D Merja-] [vAn lahtea]]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [v [haluaa [[D Merja-] [vAn lahtea]]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [v [haluaa [[D Merja-] [vAn lahtea]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:32 [T/fin [<__>:32 [v [haluaa [[D Merja-] [vAn lahtea]]]]]]]
				=[<D Pekka>:32 [T/fin [<__>:32 [v [haluaa [[D Merja-] [vAn lahtea]]]]]]]
				5. Phrasal movement reconstruction:
					[D Merja-] will undergo A-reconstruction.
				=[<D Pekka>:32 [T/fin [<__>:32 [v [haluaa [[D Merja-]:9 [vAn [__:9 lahtea]]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head vAn, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						vAn acquired PHI:DET:DEF from the edge of vAn.
						vAn acquired PHI:NUM:SG from the edge of vAn.
						vAn acquired PHI:PER:3 from the edge of vAn.
				=[<D Pekka>:32 [T/fin [<__>:32 [v [haluaa [[D Merja-]:9 [vAn [__:9 lahtea]]]]]]]]
				7. Last resort extraposition:
			= [<D Pekka> [T/fin [<D Pekka> [v [haluaa [[D Merja-] [vAn [[D Merja-] lahtea]]]]]]]]
		Checking LF-interface conditions.
			Transferring [<D Pekka>:32 [T/fin [<__>:32 [v [haluaa [[D Merja-]:9 [vAn [__:9 lahtea]]]]]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				haluaa with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D Merja-] [vAn [[D Merja-] lahtea]]]    (alternatives: 2. <D Pekka> 3. T/fin )
				lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. vAn 3. <D Pekka> 4. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'haluaa([[D Merja-] [vAn [[D Merja-] lahtea]]])', 'lahtea([D Merja-])', 'v(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v [haluaa [[D Merja-] [vAn [[D Merja-] lahtea]]]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<__>:1 [v [haluaa [[D Merja-]:2 [vAn [__:2 lahtea]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [DP:2 [INF [__:2 V]]]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
vAn:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/VA/inf', 'CAT:INF', 'CAT:VA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:VA', 'PF:vAn', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  haluaa: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Merja-: [N, D, V, v, TT/fin];  vAn: [INF, V, v, TT/fin];  __: [D, INF, V, v, TT/fin];  __: [N, D, INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtevan".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D Pekka] T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[[D Pekka] [T/fin [v haluaa]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [v haluaa]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [v haluaa]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:33 [T/fin [<__>:33 [v haluaa]]]]
				=[<D Pekka>:33 [T/fin [<__>:33 [v haluaa]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:33 [T/fin [<__>:33 [v haluaa]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:33 [T/fin [<__>:33 [v haluaa]]]]
				7. Last resort extraposition:
				"haluaa" lacks complement.
					Last resort extraposition will be tried on [<D Pekka>:33 [T/fin [<__>:33 [v haluaa]]]].
					No suitable node for extraposition found. No action was taken.
			=[[<D Pekka>:33 [T/fin [<__>:33 [v haluaa]]]] D]

	23. Consume "Merja-"

		[[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[<D Pekka>:33 [T/fin [<__>:33 [v haluaa]]]] D{N}]

		Next word contains multiple morphemes ['VA/inf$', 'lahte-']

	24. Consume "vAn"

		[[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] D{N}] + vAn
			Filtering out impossible merge sites...
				Reject [[[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] <D Merja->] vAn] due to bad left branch.
			Exploring solution number (1) =[D{N} vAn]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[<D Pekka>:33 [T/fin [<__>:33 [v haluaa]]]] [[D Merja-] vAn]]

	25. Consume "lahtea"

		[[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] [[D Merja-] vAn]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into vAn because they are inside the same phonological word.
			=[[<D Pekka>:33 [T/fin [<__>:33 [v haluaa]]]] [[D Merja-] vAn{V}]]

	>>>	Trying candidate spellout structure [[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] [[D Merja-] vAn{V}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[<D Pekka>:33 [T/fin [<__>:33 [v haluaa]]]] [[D Merja-] [vAn lahtea]]]
				2. Feature processing:
				=[[<D Pekka>:33 [T/fin [<__>:33 [v haluaa]]]] [[D Merja-] [vAn lahtea]]]
				3. Extraposition:
				=[[<D Pekka>:33 [T/fin [<__>:33 [v haluaa]]]] [[D Merja-] [vAn lahtea]]]
				4. Floater movement reconstruction:
				=[[<D Pekka>:33 [T/fin [<__>:33 [v haluaa]]]] [[D Merja-] [vAn lahtea]]]
				5. Phrasal movement reconstruction:
					[D Merja-] will undergo A-reconstruction.
					New head was spawned due to multiple specifiers at vAn but its category is unknown!
				=[[<D Pekka>:33 [T/fin [<__>:33 [v haluaa]]]] [? [[D Merja-]:10 [vAn [__:10 lahtea]]]]]
				6. Agreement reconstruction:
					Head vAn, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						vAn acquired PHI:DET:DEF from the edge of vAn.
						vAn acquired PHI:NUM:SG from the edge of vAn.
						vAn acquired PHI:PER:3 from the edge of vAn.
				=[[<D Pekka>:33 [T/fin [<__>:33 [v haluaa]]]] [? [[D Merja-]:10 [vAn [__:10 lahtea]]]]]
				7. Last resort extraposition:
				"haluaa" lacks complement.
					An uninterpretable grammatical head without lexical category was detected.
					Last resort extraposition will be tried on [[<D Pekka>:33 [T/fin [<__>:33 [v haluaa]]]] [? [[D Merja-]:10 [vAn [__:10 lahtea]]]]].
					No suitable node for extraposition found. No action was taken.
			= [[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] [? [[D Merja-] [vAn [[D Merja-] lahtea]]]]]
		Checking LF-interface conditions.
				"haluaa" lacks complement.
					An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
vAn:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/VA/inf', 'CAT:INF', 'CAT:VA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:VA', 'PF:vAn', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  haluaa: [V, v, TT/fin];  ?: [?];  D: [D, ?];  Merja-: [N, D, ?];  vAn: [INF, ?];  __: [D, INF, ?];  __: [N, D, INF, ?];  lahtea: [V, INF, ?];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtevan".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "gen$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merjan".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "halua-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "haluaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 23
['John', 'admires', 'Mary']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'v$', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin]

	10. Consume "v"

		[[D John] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D John] T/fin{v}]

	11. Consume "admire"

		[[D John] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into v because they are inside the same phonological word.
			=[[D John] T/fin{v,V}]

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

	12. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	13. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	14. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	15. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	16. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	17. Consume "D"

		[[D John] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				admire (admire) is missing complement D
				Avoid [[D John] [T/fin [[D John] [v admire]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[D John] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D John] T/fin{v,V}]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
				An EPP-head "T/fin{v,V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} D]]

	18. Consume "Mary"

		[[D John] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[D John] [T/fin{v,V} D{N}]]

	>>>	Trying candidate spellout structure [[D John] [T/fin{v,V} D{N}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D John] [T/fin [v{V} D{N}]]]
					Target admire in v
					=[[D John] [T/fin [v [admire D{N}]]]]
				=[[D John] [T/fin [v [admire [D Mary]]]]]
				2. Feature processing:
				=[[D John] [T/fin [v [admire [D Mary]]]]]
				3. Extraposition:
				=[[D John] [T/fin [v [admire [D Mary]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v [admire [D Mary]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:70 [T/fin [__:70 [v [admire [D Mary]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:70 [T/fin [__:70 [v [admire [D Mary]]]]]]
				7. Last resort extraposition:
			= [[D John] [T/fin [[D John] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Transferring [[D John]:70 [T/fin [__:70 [v [admire [D Mary]]]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				admire with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: 2. [D John] 3. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'admire([D Mary])', 'v([D John])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [v [admire [D Mary]]]]]]
		Grammar: [[D John]:1 [T/fin [__:1 [v [admire [D Mary]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['!COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  admire: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Mary: [N, D, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[[D John] [T/fin [v admire]]]
				2. Feature processing:
				=[[D John] [T/fin [v admire]]]
				3. Extraposition:
				=[[D John] [T/fin [v admire]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v admire]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:71 [T/fin [__:71 [v admire]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:71 [T/fin [__:71 [v admire]]]]
				7. Last resort extraposition:
				admire (admire) is missing complement D
					Last resort extraposition will be tried on [[D John]:71 [T/fin [__:71 [v admire]]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:71 [T/fin [__:71 [v admire]]]] D]

	19. Consume "Mary"

		[[[D John] [T/fin [[D John] [v admire]]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[[D John]:71 [T/fin [__:71 [v admire]]]] D{N}]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [v admire]]]] D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:71 [T/fin [__:71 [v admire]]]] [D Mary]]
				2. Feature processing:
				=[[[D John]:71 [T/fin [__:71 [v admire]]]] [D Mary]]
				3. Extraposition:
				=[[[D John]:71 [T/fin [__:71 [v admire]]]] [D Mary]]
				4. Floater movement reconstruction:
				=[[[D John]:71 [T/fin [__:71 [v admire]]]] [D Mary]]
				5. Phrasal movement reconstruction:
				=[[[D John]:71 [T/fin [__:71 [v admire]]]] [D Mary]]
				6. Agreement reconstruction:
				=[[[D John]:71 [T/fin [__:71 [v admire]]]] [D Mary]]
				7. Last resort extraposition:
				admire (admire) is missing complement D
				D has unacceptable specifier [[D John]:71 [T/fin [__:71 [v admire]]]].
					Last resort extraposition will be tried on [[[D John]:71 [T/fin [__:71 [v admire]]]] [D Mary]].
					<D Mary> was made an adjunct.
					<D Mary> is transferred to LF as a phase.
				admire (admire) is missing complement D
					Something is still wrong. The structure is still uninterpretable.
			= [[[D John] [T/fin [[D John] [v admire]]]] <D Mary>]
		Checking LF-interface conditions.
				admire (admire) is missing complement D
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['!COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  admire: [V, v, TT/fin];  D: [D];  Mary: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "admire-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "admires".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 24
['ihailen', 'Merjaa']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['[-n]$', 'T/fin$', 'v$', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

	1. Consume "T/fin$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:PER:1', 'PHI:DET:DEF', 'LANG:FI', 'PHI:NUM:SG', '-'} to T/fin
			=T/fin

	3. Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=T/fin{v}

	4. Consume "ihaile-"

		T/fin{v} + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into v because they are inside the same phonological word.
			=T/fin{v,V}

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'par$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	5. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	6. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	7. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	8. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	9. Consume "par$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

	10. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'LANG:FI', 'PHI:NUM:SG'} to D

	11. Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[T/fin{v,V} D]

	12. Consume "Merja-"

		[T/fin{v,V} D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[T/fin{v,V} D{N}]

	>>>	Trying candidate spellout structure [T/fin{v,V} D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[T/fin [v{V} D{N}]]
					Target ihaile- in v
					=[T/fin [v [ihaile- D{N}]]]
				=[T/fin [v [ihaile- [D Merja-]]]]
				2. Feature processing:
				=[T/fin [v [ihaile- [D Merja-]]]]
				3. Extraposition:
				=[T/fin [v [ihaile- [D Merja-]]]]
				4. Floater movement reconstruction:
				=[T/fin [v [ihaile- [D Merja-]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [v [ihaile- [D Merja-]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:1 from the edge of T/fin.
				=[T/fin [v [ihaile- [D Merja-]]]]
				7. Last resort extraposition:
			= [T/fin [v [ihaile- [D Merja-]]]]
		Checking LF-interface conditions.
			Transferring [T/fin [v [ihaile- [D Merja-]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'ihaile-([D Merja-])', 'v(T/fin)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[T/fin [v [ihaile- [D Merja-]]]]
		Grammar: [T/fin [v [ihaile- [D Merja-]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
----------------------------------------------------------------------------------------------------------
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

T/fin: [TT/fin];  v: [v, TT/fin];  ihaile-: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Merja-: [N, D, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "par$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihailen".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 25
['Pekka', 'sanoo', 'etta', 'ihailee', 'Merjaa']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	5. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	8. Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[D Pekka] T/fin]

	11. Consume "sano-"

		[[D Pekka] T/fin] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
			=[[D Pekka] T/fin{V}]

	12. Consume "etta"

		[[D Pekka] T/fin{V}] + etta
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> sano-]]] etta] due to bad left branch.
			Exploring solution number (1) =[T/fin{V} etta]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} etta]]

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v$', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	13. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	14. Consume "T/fin"

		[[D Pekka] [T/fin{V} etta]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- etta]]]] T/fin] due to bad left branch.
				Reject [[T/fin [sano- etta]] T/fin] due to bad left branch.
			Exploring solution number (1) =[etta T/fin]
				1. Head movement reconstruction:
				=etta
				2. Feature processing:
				=etta
				3. Extraposition:
				=etta
				4. Floater movement reconstruction:
				=etta
				5. Phrasal movement reconstruction:
				=etta
				6. Agreement reconstruction:
				=etta
				7. Last resort extraposition:
				etta probing for CAT:T/fin failed.
				"etta" lacks complement.
					Last resort extraposition will be tried on etta.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} [etta T/fin]]]

	15. Consume "v"

		[[D Pekka] [T/fin{V} [etta T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta T/fin{v}]]]

	16. Consume "ihaile-"

		[[D Pekka] [T/fin{V} [etta T/fin{v}]]] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into v because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta T/fin{v,V}]]]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'par$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	17. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	18. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	19. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	20. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	21. Consume "par$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

	22. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'LANG:FI', 'PHI:NUM:SG'} to D

	23. Consume "D"

		[[D Pekka] [T/fin{V} [etta T/fin{v,V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				ihaile- (ihaile-) is missing complement D
				Avoid [<D Pekka> [T/fin [<D Pekka> [sano- [etta [T/fin [v ihaile-]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				ihaile- (ihaile-) is missing complement D
				Avoid [T/fin [sano- [etta [T/fin [v ihaile-]]]]] as left branch because it constitutes illicit structure.
				ihaile- (ihaile-) is missing complement D
				Avoid [etta [T/fin [v ihaile-]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D Pekka] [T/fin{V} [etta T/fin{v,V}]]] + D = -197]
				[T/fin{V} [etta T/fin{v,V}]] + D = -194]
				[etta T/fin{v,V}] + D = -94]
				T/fin{v,V} + D = 166]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[etta T/fin{v,V}]; D]
			3. [[T/fin{V} [etta T/fin{v,V}]]; D]
			4. [[[D Pekka] [T/fin{V} [etta T/fin{v,V}]]]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} [etta [T/fin{v,V} D]]]]

	24. Consume "Merja-"

		[[D Pekka] [T/fin{V} [etta [T/fin{v,V} D]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta [T/fin{v,V} D{N}]]]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{V} [etta [T/fin{v,V} D{N}]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [etta [T/fin{v,V} D{N}]]]]]
					Target v{V} in T/fin
					=[[D Pekka] [T/fin [sano- [etta [T/fin [v{V} D{N}]]]]]]
					Target ihaile- in v
					=[[D Pekka] [T/fin [sano- [etta [T/fin [v [ihaile- D{N}]]]]]]]
				=[[D Pekka] [T/fin [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:38 [T/fin [<__>:38 [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]
				=[<D Pekka>:38 [T/fin [<__>:38 [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:38 [T/fin [<__>:38 [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:38 [T/fin [<__>:38 [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]
				7. Last resort extraposition:
			= [<D Pekka> [T/fin [<D Pekka> [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]
		Checking LF-interface conditions.
			Transferring [<D Pekka>:38 [T/fin [<__>:38 [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]] into the conceptual-intentional system...
				sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. <D Pekka> 3. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'T/fin(<D Pekka>)', 'ihaile-([D Merja-])', 'sano-(<D Pekka>)', 'v(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<__>:1 [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [ [TT/fin [v [V [D N]]]]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  etta: [, V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  v: [v, TT/fin, , V, TT/fin];  ihaile-: [V, v, TT/fin, , V, TT/fin];  D: [D, V, v, TT/fin, , V, TT/fin];  Merja-: [N, D, V, v, TT/fin, , V, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[etta T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[etta [T/fin [v ihaile-]]]
				2. Feature processing:
				=[etta [T/fin [v ihaile-]]]
				3. Extraposition:
				=[etta [T/fin [v ihaile-]]]
				4. Floater movement reconstruction:
				=[etta [T/fin [v ihaile-]]]
				5. Phrasal movement reconstruction:
				=[etta [T/fin [v ihaile-]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[etta [T/fin [v ihaile-]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [etta [T/fin [v ihaile-]]].
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} [[etta [T/fin [v ihaile-]]] D]]]

	25. Consume "Merja-"

		[[D Pekka] [T/fin{V} [[etta [T/fin [v ihaile-]]] D]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [[etta [T/fin [v ihaile-]]] D{N}]]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{V} [[etta [T/fin [v ihaile-]]] D{N}]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [[etta [T/fin [v ihaile-]]] D{N}]]]]
				=[[D Pekka] [T/fin [sano- [[etta [T/fin [v ihaile-]]] [D Merja-]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [sano- [[etta [T/fin [v ihaile-]]] [D Merja-]]]]]
				3. Extraposition:
					sano- cannot select D
					Extraposition will be tried on [D Merja-].
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
				=[[D Pekka] [T/fin [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:39 [T/fin [<__>:39 [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]]
				=[<D Pekka>:39 [T/fin [<__>:39 [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:39 [T/fin [<__>:39 [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[<D Pekka>:39 [T/fin [<__>:39 [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [<D Pekka>:39 [T/fin [<__>:39 [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]].
					No suitable node for extraposition found. No action was taken.
			= [<D Pekka> [T/fin [<D Pekka> [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]]
		Checking LF-interface conditions.
				ihaile- (ihaile-) is missing complement D
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  etta: [, V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  v: [v, TT/fin, , V, TT/fin];  ihaile-: [V, v, TT/fin, , V, TT/fin];  D: [D, V, TT/fin];  Merja-: [N, D, V, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[T/fin{V} [etta T/fin{v,V}]] D]
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[T/fin [sano- [etta T/fin{v,V}]]]
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				2. Feature processing:
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				3. Extraposition:
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				4. Floater movement reconstruction:
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [T/fin [sano- [etta [T/fin [v ihaile-]]]]].
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] D]]

	26. Consume "Merja-"

		[[D Pekka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[D Pekka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] D{N}]]

	>>>	Trying candidate spellout structure [[D Pekka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] D{N}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[D Pekka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] [D Merja-]]]
				2. Feature processing:
				=[[D Pekka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] [D Merja-]]]
				3. Extraposition:
				=[[D Pekka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] [D Merja-]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					D at the right failed to tail [-VAL][ARG]
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
					Dropping <D Merja->
					 = [[D Pekka] [[T/fin [sano- [<__>:40 [etta [T/fin [v ihaile-]]]]]] <D Merja->:40]]
					Dropping <__>:40
					 = [[D Pekka] [[T/fin [sano- [<__>:40 [etta [T/fin [v [<__>:40 ihaile-]]]]]]] <D Merja->:40]]
				=[[D Pekka] [[T/fin [sano- [<__>:40 [etta [T/fin [v [<__>:40 ihaile-]]]]]]] <D Merja->:40]]
				5. Phrasal movement reconstruction:
					[D Pekka] will undergo A-reconstruction.
				=[[D Pekka]:11 [[T/fin [__:11 [sano- [<__>:40 [etta [T/fin [v [<__>:40 ihaile-]]]]]]]] <D Merja->:40]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[D Pekka]:11 [[T/fin [__:11 [sano- [<__>:40 [etta [T/fin [v [<__>:40 ihaile-]]]]]]]] <D Merja->:40]]
				7. Last resort extraposition:
				<__>:40 has no thematic role at the SPEC of ihaile-
					Last resort extraposition will be tried on [[D Pekka]:11 [[T/fin [__:11 [sano- [<__>:40 [etta [T/fin [v [<__>:40 ihaile-]]]]]]]] <D Merja->:40]].
					No suitable node for extraposition found. No action was taken.
			= [[D Pekka] [[T/fin [[D Pekka] [sano- [<D Merja-> [etta [T/fin [v [<D Merja-> ihaile-]]]]]]]] <D Merja->]]
		Checking LF-interface conditions.
				<__>:40 has no thematic role at the SPEC of ihaile-
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  __: [D, V, TT/fin];  __: [N, D, V, TT/fin];  etta: [, V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  v: [v, TT/fin, , V, TT/fin];  __: [D, v, TT/fin, , V, TT/fin];  __: [N, D, v, TT/fin, , V, TT/fin];  ihaile-: [V, v, TT/fin, , V, TT/fin];  D: [D];  Merja-: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (4) =[[[D Pekka] [T/fin{V} [etta T/fin{v,V}]]] D]
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [etta T/fin{v,V}]]]]
				=[[D Pekka] [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:42 [T/fin [<__>:42 [sano- [etta [T/fin [v ihaile-]]]]]]]
				=[<D Pekka>:42 [T/fin [<__>:42 [sano- [etta [T/fin [v ihaile-]]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:42 [T/fin [<__>:42 [sano- [etta [T/fin [v ihaile-]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:42 [T/fin [<__>:42 [sano- [etta [T/fin [v ihaile-]]]]]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [<D Pekka>:42 [T/fin [<__>:42 [sano- [etta [T/fin [v ihaile-]]]]]]].
					No suitable node for extraposition found. No action was taken.
			=[[<D Pekka>:42 [T/fin [<__>:42 [sano- [etta [T/fin [v ihaile-]]]]]]] D]

	27. Consume "Merja-"

		[[<D Pekka> [T/fin [<D Pekka> [sano- [etta [T/fin [v ihaile-]]]]]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[<D Pekka>:42 [T/fin [<__>:42 [sano- [etta [T/fin [v ihaile-]]]]]]] D{N}]

	>>>	Trying candidate spellout structure [[<D Pekka> [T/fin [<D Pekka> [sano- [etta [T/fin [v ihaile-]]]]]]] D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[<D Pekka>:42 [T/fin [<__>:42 [sano- [etta [T/fin [v ihaile-]]]]]]] [D Merja-]]
				2. Feature processing:
				=[[<D Pekka>:42 [T/fin [<__>:42 [sano- [etta [T/fin [v ihaile-]]]]]]] [D Merja-]]
				3. Extraposition:
				=[[<D Pekka>:42 [T/fin [<__>:42 [sano- [etta [T/fin [v ihaile-]]]]]]] [D Merja-]]
				4. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
					Dropping <D Merja->
					 = [[<D Pekka>:42 [T/fin [<__>:42 [sano- [<__>:43 [etta [T/fin [v ihaile-]]]]]]]] <D Merja->:43]
					Dropping <__>:43
					 = [[<D Pekka>:42 [T/fin [<__>:42 [sano- [<__>:43 [etta [T/fin [v [<__>:43 ihaile-]]]]]]]]] <D Merja->:43]
				=[[<D Pekka>:42 [T/fin [<__>:42 [sano- [<__>:43 [etta [T/fin [v [<__>:43 ihaile-]]]]]]]]] <D Merja->:43]
				5. Phrasal movement reconstruction:
				=[[<D Pekka>:42 [T/fin [<__>:42 [sano- [<__>:43 [etta [T/fin [v [<__>:43 ihaile-]]]]]]]]] <D Merja->:43]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[<D Pekka>:42 [T/fin [<__>:42 [sano- [<__>:43 [etta [T/fin [v [<__>:43 ihaile-]]]]]]]]] <D Merja->:43]
				7. Last resort extraposition:
				<__>:43 has no thematic role at the SPEC of ihaile-
					Last resort extraposition will be tried on [[<D Pekka>:42 [T/fin [<__>:42 [sano- [<__>:43 [etta [T/fin [v [<__>:43 ihaile-]]]]]]]]] <D Merja->:43].
					No suitable node for extraposition found. No action was taken.
			= [[<D Pekka> [T/fin [<D Pekka> [sano- [<D Merja-> [etta [T/fin [v [<D Merja-> ihaile-]]]]]]]]] <D Merja->]
		Checking LF-interface conditions.
				<__>:43 has no thematic role at the SPEC of ihaile-
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  __: [D, V, TT/fin];  __: [N, D, V, TT/fin];  etta: [, V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  v: [v, TT/fin, , V, TT/fin];  __: [D, v, TT/fin, , V, TT/fin];  __: [N, D, v, TT/fin, , V, TT/fin];  ihaile-: [V, v, TT/fin, , V, TT/fin];  D: [D];  Merja-: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "par$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihailee".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "etta".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sano-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sanoo".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 26
['John', 'wants', 'to_inf', 'leave']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'v$', 'want-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin]

	10. Consume "v"

		[[D John] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D John] T/fin{v}]

	11. Consume "want"

		[[D John] T/fin{v}] + want
			Filtering out impossible merge sites...
			Sink "want" into v because they are inside the same phonological word.
			=[[D John] T/fin{v,V}]

	12. Consume "to"

		[[D John] T/fin{v,V}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				"want" lacks complement.
				Avoid [[D John] [T/fin [[D John] [v want]]]] as left branch because it constitutes illicit structure.
				[[D John] T/fin{v,V}] + to = -197]
				T/fin{v,V} + to = 2]
		Ranking completed:
			1. [T/fin{v,V}; to]
			2. [[[D John] T/fin{v,V}]; to]
			Exploring solution number (1) =[T/fin{v,V} to]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
				An EPP-head "T/fin{v,V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} to]]

	13. Consume "leave"

		[[D John] [T/fin{v,V} to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [v [want to]]]]] leave] due to bad left branch.
				Reject [[T/fin [v [want to]]] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} [to leave]]]

	>>>	Trying candidate spellout structure [[D John] [T/fin{v,V} [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D John] [T/fin [v{V} [to leave]]]]
					Target want in v
					=[[D John] [T/fin [v [want [to leave]]]]]
				=[[D John] [T/fin [v [want [to leave]]]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[D John] [T/fin [v [want [to leave]]]]]
				3. Extraposition:
				=[[D John] [T/fin [v [want [to leave]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v [want [to leave]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:75 [T/fin [__:75 [v [want [to leave]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[D John]:75 [T/fin [__:75 [v [want [to leave]]]]]]
				7. Last resort extraposition:
			= [[D John] [T/fin [[D John] [v [want [to leave]]]]]]
		Checking LF-interface conditions.
			Transferring [[D John]:75 [T/fin [__:75 [v [want [to leave]]]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				want with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				to with ['PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'leave([D John])', 'to([D John])', 'v([D John])', 'want([D John])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [v [want [to leave]]]]]]
		Grammar: [[D John]:1 [T/fin [__:1 [v [want [to leave]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [INF V]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  want: [V, v, TT/fin];  to: [INF, V, v, TT/fin];  leave: [V, INF, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin{v,V}] to]
				1. Head movement reconstruction:
				=[[D John] [T/fin [v want]]]
				2. Feature processing:
				=[[D John] [T/fin [v want]]]
				3. Extraposition:
				=[[D John] [T/fin [v want]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v want]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:76 [T/fin [__:76 [v want]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:76 [T/fin [__:76 [v want]]]]
				7. Last resort extraposition:
				"want" lacks complement.
					Last resort extraposition will be tried on [[D John]:76 [T/fin [__:76 [v want]]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:76 [T/fin [__:76 [v want]]]] to]

	14. Consume "leave"

		[[[D John] [T/fin [[D John] [v want]]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [v want]]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:76 [T/fin [__:76 [v want]]]] [to leave]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [v want]]]] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:76 [T/fin [__:76 [v want]]]] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:76 [T/fin [__:76 [v want]]]] [to leave]]
				3. Extraposition:
				=[[[D John]:76 [T/fin [__:76 [v want]]]] [to leave]]
				4. Floater movement reconstruction:
				=[[[D John]:76 [T/fin [__:76 [v want]]]] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[D John]:76 [T/fin [__:76 [v want]]]] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[D John]:76 [T/fin [__:76 [v want]]]] [to leave]]
				7. Last resort extraposition:
				"want" lacks complement.
				to has unacceptable specifier [[D John]:76 [T/fin [__:76 [v want]]]].
					Last resort extraposition will be tried on [[[D John]:76 [T/fin [__:76 [v want]]]] [to leave]].
			= [[[D John] [T/fin [[D John] [v want]]]] [to leave]]
		Checking LF-interface conditions.
				"want" lacks complement.
				to has unacceptable specifier [[D John]:76 [T/fin [__:76 [v want]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  want: [V, v, TT/fin];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "want-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "wants".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 27
['John', 'tries', 'to_inf', 'leave']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'try-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin]

	10. Consume "try"

		[[D John] T/fin] + try
			Filtering out impossible merge sites...
			Sink "try" into T/fin because they are inside the same phonological word.
			=[[D John] T/fin{V}]

	11. Consume "to"

		[[D John] T/fin{V}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
					try (try) is missing a mandatory complement TO/inf
				Avoid [[D John] [T/fin [[D John] try]]] as left branch because it constitutes illicit structure.
				Prioritize [try to] due to complement selection.
				[[D John] T/fin{V}] + to = -197]
				T/fin{V} + to = 104]
		Ranking completed:
			1. [T/fin{V}; to]
			2. [[[D John] T/fin{V}]; to]
			Exploring solution number (1) =[T/fin{V} to]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
				An EPP-head "T/fin{V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{V} to]]

	12. Consume "leave"

		[[D John] [T/fin{V} to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [try [[D John] to]]]]] leave] due to bad left branch.
				Reject [[T/fin [try to]] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{V} [to leave]]]

	>>>	Trying candidate spellout structure [[D John] [T/fin{V} [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target try in T/fin
					=[[D John] [T/fin [try [to leave]]]]
				=[[D John] [T/fin [try [to leave]]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
					to has neutralized PHI-feature, will be resolved into -ARG due to try
				=[[D John] [T/fin [try [to leave]]]]
				3. Extraposition:
				=[[D John] [T/fin [try [to leave]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [try [to leave]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:81 [T/fin [__:81 [try [to leave]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:81 [T/fin [__:81 [try [to leave]]]]]
				7. Last resort extraposition:
			= [[D John] [T/fin [[D John] [try [to leave]]]]]
		Checking LF-interface conditions.
			Transferring [[D John]:81 [T/fin [__:81 [try [to leave]]]]] into the conceptual-intentional system...
				try with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'leave([D John])', 'try([D John])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [try [to leave]]]]]
		Grammar: [[D John]:1 [T/fin [__:1 [try [to leave]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [INF V]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
try:['!COMP:-ARG', '!COMP:TO/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:try', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  try: [V, TT/fin];  to: [INF, V, TT/fin];  leave: [V, INF, V, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin{V}] to]
				1. Head movement reconstruction:
				=[[D John] [T/fin try]]
				2. Feature processing:
				=[[D John] [T/fin try]]
				3. Extraposition:
				=[[D John] [T/fin try]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin try]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:82 [T/fin [__:82 try]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:82 [T/fin [__:82 try]]]
				7. Last resort extraposition:
					try (try) is missing a mandatory complement TO/inf
					Last resort extraposition will be tried on [[D John]:82 [T/fin [__:82 try]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:82 [T/fin [__:82 try]]] to]

	13. Consume "leave"

		[[[D John] [T/fin [[D John] try]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] try]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:82 [T/fin [__:82 try]]] [to leave]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] try]]] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:82 [T/fin [__:82 try]]] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:82 [T/fin [__:82 try]]] [to leave]]
				3. Extraposition:
				=[[[D John]:82 [T/fin [__:82 try]]] [to leave]]
				4. Floater movement reconstruction:
				=[[[D John]:82 [T/fin [__:82 try]]] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[D John]:82 [T/fin [__:82 try]]] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[D John]:82 [T/fin [__:82 try]]] [to leave]]
				7. Last resort extraposition:
					try (try) is missing a mandatory complement TO/inf
				to has unacceptable specifier [[D John]:82 [T/fin [__:82 try]]].
					Last resort extraposition will be tried on [[[D John]:82 [T/fin [__:82 try]]] [to leave]].
			= [[[D John] [T/fin [[D John] try]]] [to leave]]
		Checking LF-interface conditions.
					try (try) is missing a mandatory complement TO/inf
				to has unacceptable specifier [[D John]:82 [T/fin [__:82 try]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
try:['!COMP:-ARG', '!COMP:TO/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:try', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  try: [V, TT/fin];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "try-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tries".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 28
['John', 'tries', 'Mary', 'to_inf', 'leave']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'try-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin]

	10. Consume "try"

		[[D John] T/fin] + try
			Filtering out impossible merge sites...
			Sink "try" into T/fin because they are inside the same phonological word.
			=[[D John] T/fin{V}]

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

	11. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	12. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	13. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	14. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	15. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	16. Consume "D"

		[[D John] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
					try (try) is missing a mandatory complement TO/inf
				Avoid [[D John] [T/fin [[D John] try]]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{V} D] due to complement selection.
				Prioritize [try D] due to complement selection.
				[[D John] T/fin{V}] + D = -197]
				T/fin{V} + D = 206]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D John] T/fin{V}]; D]
			Exploring solution number (1) =[T/fin{V} D]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
				An EPP-head "T/fin{V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{V} D]]

	17. Consume "Mary"

		[[D John] [T/fin{V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[D John] [T/fin{V} D{N}]]

	18. Consume "to"

		[[D John] [T/fin{V} D{N}]] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
					try (try) is missing a mandatory complement TO/inf
				Avoid [[D John] [T/fin [[D John] [try [D Mary]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, to.
				An EPP-head "T/fin" lacks specifier.
					try (try) is missing a mandatory complement TO/inf
				Avoid [T/fin [try [D Mary]]] as left branch because it constitutes illicit structure.
				Avoid D{N} because it could break words.
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
				Prioritize D{N} because all solutions were negative.
				[[D John] [T/fin{V} D{N}]] + to = -197]
				[T/fin{V} D{N}] + to = -194]
				D{N} + to = 106]
		Ranking completed:
			1. [D{N}; to]
			2. [[T/fin{V} D{N}]; to]
			3. [[[D John] [T/fin{V} D{N}]]; to]
			Exploring solution number (1) =[D{N} to]
				1. Head movement reconstruction:
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
			=[[D John] [T/fin{V} [[D Mary] to]]]

	19. Consume "leave"

		[[D John] [T/fin{V} [[D Mary] to]]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [try [[D Mary] to]]]]] leave] due to bad left branch.
				Reject [[T/fin [try [[D Mary] to]]] leave] due to bad left branch.
				Reject [[[D Mary] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{V} [[D Mary] [to leave]]]]

	>>>	Trying candidate spellout structure [[D John] [T/fin{V} [[D Mary] [to leave]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target try in T/fin
					=[[D John] [T/fin [try [[D Mary] [to leave]]]]]
				=[[D John] [T/fin [try [[D Mary] [to leave]]]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
					to has neutralized PHI-feature, will be resolved into -ARG due to try
				=[[D John] [T/fin [try [[D Mary] [to leave]]]]]
				3. Extraposition:
				=[[D John] [T/fin [try [[D Mary] [to leave]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [try [[D Mary] [to leave]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:88 [T/fin [__:88 [try [[D Mary] [to leave]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:88 [T/fin [__:88 [try [[D Mary] [to leave]]]]]]
				7. Last resort extraposition:
				[D Mary] has no thematic role at the SPEC of to
				to (to) has a specifier [D Mary](set()) but is marked for -EPP behavior.
					Last resort extraposition will be tried on [[D John]:88 [T/fin [__:88 [try [[D Mary] [to leave]]]]]].
					<to leave> was made an adjunct.
					<to leave> is transferred to LF as a phase.
					try (try) is missing a mandatory complement TO/inf
					Something is still wrong. The structure is still uninterpretable.
			= [[D John] [T/fin [[D John] [try [[D Mary] <to leave>]]]]]
		Checking LF-interface conditions.
					try (try) is missing a mandatory complement TO/inf
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
try:['!COMP:-ARG', '!COMP:TO/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:try', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  try: [V, TT/fin];  D: [D, V, TT/fin];  Mary: [N, D, V, TT/fin];  to: [INF, V, TT/fin];  leave: [V, INF, V, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[T/fin{V} D{N}] to]
				1. Head movement reconstruction:
					Target try in T/fin
					=[T/fin [try D{N}]]
				=[T/fin [try [D Mary]]]
				2. Feature processing:
				=[T/fin [try [D Mary]]]
				3. Extraposition:
				=[T/fin [try [D Mary]]]
				4. Floater movement reconstruction:
				=[T/fin [try [D Mary]]]
				5. Phrasal movement reconstruction:
				=[T/fin [try [D Mary]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:GEN:F by phi-Agree from [D Mary].
						T/fin acquired PHI:NUM:SG by phi-Agree from [D Mary].
						T/fin acquired PHI:PER:3 by phi-Agree from [D Mary].
				=[T/fin [try [D Mary]]]
				7. Last resort extraposition:
				An EPP-head "T/fin" lacks specifier.
					try (try) is missing a mandatory complement TO/inf
					Last resort extraposition will be tried on [T/fin [try [D Mary]]].
					No suitable node for extraposition found. No action was taken.
			=[[D John] [[T/fin [try [D Mary]]] to]]

	20. Consume "leave"

		[[D John] [[T/fin [try [D Mary]]] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [[[T/fin [try [D Mary]]] [D John]] to]] leave] due to bad left branch.
				Reject [[[T/fin [try [D Mary]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [[T/fin [try [D Mary]]] [to leave]]]

	>>>	Trying candidate spellout structure [[D John] [[T/fin [try [D Mary]]] [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[D John] [[T/fin [try [D Mary]]] [to leave]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[D John] [[T/fin [try [D Mary]]] [to leave]]]
				3. Extraposition:
				=[[D John] [[T/fin [try [D Mary]]] [to leave]]]
				4. Floater movement reconstruction:
				=[[D John] [[T/fin [try [D Mary]]] [to leave]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
					New head was spawned due to multiple specifiers at to but its category is unknown!
				=[[D John]:90 [? [[T/fin [try [D Mary]]] [to [__:90 leave]]]]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG by phi-Agree from __:90.
						to acquired PHI:PER:3 by phi-Agree from __:90.
				=[[D John]:90 [? [[T/fin [try [D Mary]]] [to [__:90 leave]]]]]
				7. Last resort extraposition:
					An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier.
					try (try) is missing a mandatory complement TO/inf
				to has unacceptable specifier [T/fin [try [D Mary]]].
					Last resort extraposition will be tried on [[D John]:90 [? [[T/fin [try [D Mary]]] [to [__:90 leave]]]]].
			= [[D John] [? [[T/fin [try [D Mary]]] [to [[D John] leave]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier.
					try (try) is missing a mandatory complement TO/inf
				to has unacceptable specifier [T/fin [try [D Mary]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI_CHECKED', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
try:['!COMP:-ARG', '!COMP:TO/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:try', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI_CHECKED', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  ?: [?];  T/fin: [TT/fin, ?];  try: [V, TT/fin, ?];  D: [D, V, TT/fin, ?];  Mary: [N, D, V, TT/fin, ?];  to: [INF, ?];  __: [D, INF, ?];  __: [N, D, INF, ?];  leave: [V, INF, ?];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[[D John] [T/fin{V} D{N}]] to]
				1. Head movement reconstruction:
					Target try in T/fin
					=[[D John] [T/fin [try D{N}]]]
				=[[D John] [T/fin [try [D Mary]]]]
				2. Feature processing:
				=[[D John] [T/fin [try [D Mary]]]]
				3. Extraposition:
				=[[D John] [T/fin [try [D Mary]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [try [D Mary]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:91 [T/fin [__:91 [try [D Mary]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:91 [T/fin [__:91 [try [D Mary]]]]]
				7. Last resort extraposition:
					try (try) is missing a mandatory complement TO/inf
					Last resort extraposition will be tried on [[D John]:91 [T/fin [__:91 [try [D Mary]]]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:91 [T/fin [__:91 [try [D Mary]]]]] to]

	21. Consume "leave"

		[[[D John] [T/fin [[D John] [try [D Mary]]]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [try [D Mary]]]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:91 [T/fin [__:91 [try [D Mary]]]]] [to leave]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [try [D Mary]]]]] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:91 [T/fin [__:91 [try [D Mary]]]]] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:91 [T/fin [__:91 [try [D Mary]]]]] [to leave]]
				3. Extraposition:
				=[[[D John]:91 [T/fin [__:91 [try [D Mary]]]]] [to leave]]
				4. Floater movement reconstruction:
				=[[[D John]:91 [T/fin [__:91 [try [D Mary]]]]] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[D John]:91 [T/fin [__:91 [try [D Mary]]]]] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[D John]:91 [T/fin [__:91 [try [D Mary]]]]] [to leave]]
				7. Last resort extraposition:
					try (try) is missing a mandatory complement TO/inf
				to has unacceptable specifier [[D John]:91 [T/fin [__:91 [try [D Mary]]]]].
					Last resort extraposition will be tried on [[[D John]:91 [T/fin [__:91 [try [D Mary]]]]] [to leave]].
			= [[[D John] [T/fin [[D John] [try [D Mary]]]]] [to leave]]
		Checking LF-interface conditions.
					try (try) is missing a mandatory complement TO/inf
				to has unacceptable specifier [[D John]:91 [T/fin [__:91 [try [D Mary]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
try:['!COMP:-ARG', '!COMP:TO/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:try', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  try: [V, TT/fin];  D: [D, V, TT/fin];  Mary: [N, D, V, TT/fin];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin{V}] D]
				1. Head movement reconstruction:
				=[[D John] [T/fin try]]
				2. Feature processing:
				=[[D John] [T/fin try]]
				3. Extraposition:
				=[[D John] [T/fin try]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin try]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:92 [T/fin [__:92 try]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:92 [T/fin [__:92 try]]]
				7. Last resort extraposition:
					try (try) is missing a mandatory complement TO/inf
					Last resort extraposition will be tried on [[D John]:92 [T/fin [__:92 try]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:92 [T/fin [__:92 try]]] D]

	22. Consume "Mary"

		[[[D John] [T/fin [[D John] try]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[[D John]:92 [T/fin [__:92 try]]] D{N}]

	23. Consume "to"

		[[[D John] [T/fin [[D John] try]]] D{N}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
					try (try) is missing a mandatory complement TO/inf
				Avoid [[[D John] [T/fin [[D John] try]]] <D Mary>] as left branch because it constitutes illicit structure.
				[[[D John]:92 [T/fin [__:92 try]]] D{N}] + to = -98]
				D{N} + to = 2]
		Ranking completed:
			1. [D{N}; to]
			2. [[[[D John]:92 [T/fin [__:92 try]]] D{N}]; to]
			Exploring solution number (1) =[D{N} to]
				1. Head movement reconstruction:
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
			=[[[D John]:92 [T/fin [__:92 try]]] [[D Mary] to]]

	24. Consume "leave"

		[[[D John] [T/fin [[D John] try]]] [[D Mary] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] try]]] [[D Mary] to]] leave] due to bad left branch.
				Reject [[[D Mary] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:92 [T/fin [__:92 try]]] [[D Mary] [to leave]]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] try]]] [[D Mary] [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:92 [T/fin [__:92 try]]] [[D Mary] [to leave]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:92 [T/fin [__:92 try]]] [[D Mary] [to leave]]]
				3. Extraposition:
				=[[[D John]:92 [T/fin [__:92 try]]] [[D Mary] [to leave]]]
				4. Floater movement reconstruction:
				=[[[D John]:92 [T/fin [__:92 try]]] [[D Mary] [to leave]]]
				5. Phrasal movement reconstruction:
					[D Mary] will undergo A-reconstruction.
					New head was spawned due to multiple specifiers at to but its category is unknown!
				=[[[D John]:92 [T/fin [__:92 try]]] [? [[D Mary]:93 [to [__:93 leave]]]]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG from the edge of to.
						to acquired PHI:PER:3 from the edge of to.
				=[[[D John]:92 [T/fin [__:92 try]]] [? [[D Mary]:93 [to [__:93 leave]]]]]
				7. Last resort extraposition:
					try (try) is missing a mandatory complement TO/inf
					An uninterpretable grammatical head without lexical category was detected.
					Last resort extraposition will be tried on [[[D John]:92 [T/fin [__:92 try]]] [? [[D Mary]:93 [to [__:93 leave]]]]].
			= [[[D John] [T/fin [[D John] try]]] [? [[D Mary] [to [[D Mary] leave]]]]]
		Checking LF-interface conditions.
					try (try) is missing a mandatory complement TO/inf
					An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
try:['!COMP:-ARG', '!COMP:TO/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:try', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  try: [V, TT/fin];  ?: [?];  D: [D, ?];  Mary: [N, D, ?];  to: [INF, ?];  __: [D, INF, ?];  __: [N, D, INF, ?];  leave: [V, INF, ?];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[[D John]:92 [T/fin [__:92 try]]] D{N}] to]
				1. Head movement reconstruction:
				=[[[D John]:92 [T/fin [__:92 try]]] [D Mary]]
				2. Feature processing:
				=[[[D John]:92 [T/fin [__:92 try]]] [D Mary]]
				3. Extraposition:
				=[[[D John]:92 [T/fin [__:92 try]]] [D Mary]]
				4. Floater movement reconstruction:
				=[[[D John]:92 [T/fin [__:92 try]]] [D Mary]]
				5. Phrasal movement reconstruction:
				=[[[D John]:92 [T/fin [__:92 try]]] [D Mary]]
				6. Agreement reconstruction:
				=[[[D John]:92 [T/fin [__:92 try]]] [D Mary]]
				7. Last resort extraposition:
					try (try) is missing a mandatory complement TO/inf
				D has unacceptable specifier [[D John]:92 [T/fin [__:92 try]]].
					Last resort extraposition will be tried on [[[D John]:92 [T/fin [__:92 try]]] [D Mary]].
					<D Mary> was made an adjunct.
					<D Mary> is transferred to LF as a phase.
					try (try) is missing a mandatory complement TO/inf
					Something is still wrong. The structure is still uninterpretable.
			=[[[[D John]:92 [T/fin [__:92 try]]] <D Mary>] to]

	25. Consume "leave"

		[[[[D John] [T/fin [[D John] try]]] <D Mary>] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[[D John] [T/fin [[D John] try]]] <D Mary>] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[[D John]:92 [T/fin [__:92 try]]] <D Mary>] [to leave]]

	>>>	Trying candidate spellout structure [[[[D John] [T/fin [[D John] try]]] <D Mary>] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[[D John]:92 [T/fin [__:92 try]]] <D Mary>] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[[D John]:92 [T/fin [__:92 try]]] <D Mary>] [to leave]]
				3. Extraposition:
				=[[[[D John]:92 [T/fin [__:92 try]]] <D Mary>] [to leave]]
				4. Floater movement reconstruction:
				=[[[[D John]:92 [T/fin [__:92 try]]] <D Mary>] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[[D John]:92 [T/fin [__:92 try]]] <D Mary>] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[[D John]:92 [T/fin [__:92 try]]] <D Mary>] [to leave]]
				7. Last resort extraposition:
					try (try) is missing a mandatory complement TO/inf
				to has unacceptable specifier [[[D John]:92 [T/fin [__:92 try]]] <D Mary>].
					Last resort extraposition will be tried on [[[[D John]:92 [T/fin [__:92 try]]] <D Mary>] [to leave]].
			= [[[[D John] [T/fin [[D John] try]]] <D Mary>] [to leave]]
		Checking LF-interface conditions.
					try (try) is missing a mandatory complement TO/inf
				to has unacceptable specifier [[[D John]:92 [T/fin [__:92 try]]] <D Mary>].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
try:['!COMP:-ARG', '!COMP:TO/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:try', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  try: [V, TT/fin];  D: [D];  Mary: [N, D];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "try-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tries".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 29
['John', 'tries', 'to_inf', 'leave']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'try-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin]

	10. Consume "try"

		[[D John] T/fin] + try
			Filtering out impossible merge sites...
			Sink "try" into T/fin because they are inside the same phonological word.
			=[[D John] T/fin{V}]

	11. Consume "to"

		[[D John] T/fin{V}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
					try (try) is missing a mandatory complement TO/inf
				Avoid [[D John] [T/fin [[D John] try]]] as left branch because it constitutes illicit structure.
				Prioritize [try to] due to complement selection.
				[[D John] T/fin{V}] + to = -197]
				T/fin{V} + to = 104]
		Ranking completed:
			1. [T/fin{V}; to]
			2. [[[D John] T/fin{V}]; to]
			Exploring solution number (1) =[T/fin{V} to]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
				An EPP-head "T/fin{V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{V} to]]

	12. Consume "leave"

		[[D John] [T/fin{V} to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [try [[D John] to]]]]] leave] due to bad left branch.
				Reject [[T/fin [try to]] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{V} [to leave]]]

	>>>	Trying candidate spellout structure [[D John] [T/fin{V} [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target try in T/fin
					=[[D John] [T/fin [try [to leave]]]]
				=[[D John] [T/fin [try [to leave]]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
					to has neutralized PHI-feature, will be resolved into -ARG due to try
				=[[D John] [T/fin [try [to leave]]]]
				3. Extraposition:
				=[[D John] [T/fin [try [to leave]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [try [to leave]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:98 [T/fin [__:98 [try [to leave]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:98 [T/fin [__:98 [try [to leave]]]]]
				7. Last resort extraposition:
			= [[D John] [T/fin [[D John] [try [to leave]]]]]
		Checking LF-interface conditions.
			Transferring [[D John]:98 [T/fin [__:98 [try [to leave]]]]] into the conceptual-intentional system...
				try with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'leave([D John])', 'try([D John])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [try [to leave]]]]]
		Grammar: [[D John]:1 [T/fin [__:1 [try [to leave]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [INF V]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
try:['!COMP:-ARG', '!COMP:TO/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:try', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  try: [V, TT/fin];  to: [INF, V, TT/fin];  leave: [V, INF, V, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin{V}] to]
				1. Head movement reconstruction:
				=[[D John] [T/fin try]]
				2. Feature processing:
				=[[D John] [T/fin try]]
				3. Extraposition:
				=[[D John] [T/fin try]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin try]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:99 [T/fin [__:99 try]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:99 [T/fin [__:99 try]]]
				7. Last resort extraposition:
					try (try) is missing a mandatory complement TO/inf
					Last resort extraposition will be tried on [[D John]:99 [T/fin [__:99 try]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:99 [T/fin [__:99 try]]] to]

	13. Consume "leave"

		[[[D John] [T/fin [[D John] try]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] try]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:99 [T/fin [__:99 try]]] [to leave]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] try]]] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:99 [T/fin [__:99 try]]] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:99 [T/fin [__:99 try]]] [to leave]]
				3. Extraposition:
				=[[[D John]:99 [T/fin [__:99 try]]] [to leave]]
				4. Floater movement reconstruction:
				=[[[D John]:99 [T/fin [__:99 try]]] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[D John]:99 [T/fin [__:99 try]]] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[D John]:99 [T/fin [__:99 try]]] [to leave]]
				7. Last resort extraposition:
					try (try) is missing a mandatory complement TO/inf
				to has unacceptable specifier [[D John]:99 [T/fin [__:99 try]]].
					Last resort extraposition will be tried on [[[D John]:99 [T/fin [__:99 try]]] [to leave]].
			= [[[D John] [T/fin [[D John] try]]] [to leave]]
		Checking LF-interface conditions.
					try (try) is missing a mandatory complement TO/inf
				to has unacceptable specifier [[D John]:99 [T/fin [__:99 try]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
try:['!COMP:-ARG', '!COMP:TO/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:try', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  try: [V, TT/fin];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "try-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tries".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 30
['John', 'persuades', 'Mary', 'to_inf', 'leave']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'v*$', 'persuade-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin]

	10. Consume "v*"

		[[D John] T/fin] + v*
			Filtering out impossible merge sites...
			Sink "v*" into T/fin because they are inside the same phonological word.
			=[[D John] T/fin{v}]

	11. Consume "persuade"

		[[D John] T/fin{v}] + persuade
			Filtering out impossible merge sites...
			Sink "persuade" into v* because they are inside the same phonological word.
			=[[D John] T/fin{v,V}]

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

	12. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	13. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	14. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	15. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	16. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	17. Consume "D"

		[[D John] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"persuade" lacks complement.
				Avoid [[D John] [T/fin [[D John] [v* persuade]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				[[D John] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 104]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D John] T/fin{v,V}]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
				An EPP-head "T/fin{v,V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} D]]

	18. Consume "Mary"

		[[D John] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[D John] [T/fin{v,V} D{N}]]

	19. Consume "to"

		[[D John] [T/fin{v,V} D{N}]] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				Avoid TT/finP as SPEC, to.
				An EPP-head "T/fin" lacks specifier.
				Avoid [T/fin [v* [persuade [D Mary]]]] as left branch because it constitutes illicit structure.
				Avoid D{N} because it could break words.
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
				Prioritize D{N} because all solutions were negative.
				[[D John] [T/fin{v,V} D{N}]] + to = -98]
				[T/fin{v,V} D{N}] + to = -194]
				D{N} + to = 106]
		Ranking completed:
			1. [D{N}; to]
			2. [[[D John] [T/fin{v,V} D{N}]]; to]
			3. [[T/fin{v,V} D{N}]; to]
			Exploring solution number (1) =[D{N} to]
				1. Head movement reconstruction:
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
			=[[D John] [T/fin{v,V} [[D Mary] to]]]

	20. Consume "leave"

		[[D John] [T/fin{v,V} [[D Mary] to]]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [v* [persuade [[D Mary] to]]]]]] leave] due to bad left branch.
				Reject [[T/fin [v* [persuade [[D Mary] to]]]] leave] due to bad left branch.
				Reject [[[D Mary] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} [[D Mary] [to leave]]]]

	>>>	Trying candidate spellout structure [[D John] [T/fin{v,V} [[D Mary] [to leave]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[[D John] [T/fin [v*{V} [[D Mary] [to leave]]]]]
					Target persuade in v*
					=[[D John] [T/fin [v* [persuade [[D Mary] [to leave]]]]]]
				=[[D John] [T/fin [v* [persuade [[D Mary] [to leave]]]]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
					to has neutralized PHI-feature, will be resolved into +ARG due to persuade
				=[[D John] [T/fin [v* [persuade [[D Mary] [to leave]]]]]]
				3. Extraposition:
				=[[D John] [T/fin [v* [persuade [[D Mary] [to leave]]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v* [persuade [[D Mary] [to leave]]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
					[D Mary] will undergo A-reconstruction.
				=[[D John]:105 [T/fin [__:105 [v* [persuade [[D Mary]:106 [to [__:106 leave]]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:105 [T/fin [__:105 [v* [persuade [[D Mary]:106 [to [__:106 leave]]]]]]]]
				7. Last resort extraposition:
			= [[D John] [T/fin [[D John] [v* [persuade [[D Mary] [to [[D Mary] leave]]]]]]]]
		Checking LF-interface conditions.
			Transferring [[D John]:105 [T/fin [__:105 [v* [persuade [[D Mary]:106 [to [__:106 leave]]]]]]]] into the conceptual-intentional system...
				v* with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				persuade with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'leave([D Mary])', 'persuade(clausal argument)', 'v*([D John])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [v* [persuade [[D Mary] [to [[D Mary] leave]]]]]]]]
		Grammar: [[D John]:1 [T/fin [__:1 [v* [persuade [[D Mary]:2 [to [__:2 leave]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [DP:2 [INF [__:2 V]]]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:EN', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
persuade:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  persuade: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Mary: [N, D, V, v, TT/fin];  to: [INF, V, v, TT/fin];  __: [D, INF, V, v, TT/fin];  __: [N, D, INF, V, v, TT/fin];  leave: [V, INF, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] [T/fin{v,V} D{N}]] to]
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[[D John] [T/fin [v*{V} D{N}]]]
					Target persuade in v*
					=[[D John] [T/fin [v* [persuade D{N}]]]]
				=[[D John] [T/fin [v* [persuade [D Mary]]]]]
				2. Feature processing:
				=[[D John] [T/fin [v* [persuade [D Mary]]]]]
				3. Extraposition:
				=[[D John] [T/fin [v* [persuade [D Mary]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v* [persuade [D Mary]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:107 [T/fin [__:107 [v* [persuade [D Mary]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:107 [T/fin [__:107 [v* [persuade [D Mary]]]]]]
				7. Last resort extraposition:
			=[[[D John]:107 [T/fin [__:107 [v* [persuade [D Mary]]]]]] to]

	21. Consume "leave"

		[[[D John] [T/fin [[D John] [v* [persuade [D Mary]]]]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [v* [persuade [D Mary]]]]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:107 [T/fin [__:107 [v* [persuade [D Mary]]]]]] [to leave]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [v* [persuade [D Mary]]]]]] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:107 [T/fin [__:107 [v* [persuade [D Mary]]]]]] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:107 [T/fin [__:107 [v* [persuade [D Mary]]]]]] [to leave]]
				3. Extraposition:
				=[[[D John]:107 [T/fin [__:107 [v* [persuade [D Mary]]]]]] [to leave]]
				4. Floater movement reconstruction:
				=[[[D John]:107 [T/fin [__:107 [v* [persuade [D Mary]]]]]] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[D John]:107 [T/fin [__:107 [v* [persuade [D Mary]]]]]] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[D John]:107 [T/fin [__:107 [v* [persuade [D Mary]]]]]] [to leave]]
				7. Last resort extraposition:
				to has unacceptable specifier [[D John]:107 [T/fin [__:107 [v* [persuade [D Mary]]]]]].
					Last resort extraposition will be tried on [[[D John]:107 [T/fin [__:107 [v* [persuade [D Mary]]]]]] [to leave]].
			= [[[D John] [T/fin [[D John] [v* [persuade [D Mary]]]]]] [to leave]]
		Checking LF-interface conditions.
				to has unacceptable specifier [[D John]:107 [T/fin [__:107 [v* [persuade [D Mary]]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:EN', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
persuade:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  persuade: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Mary: [N, D, V, v, TT/fin];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[T/fin{v,V} D{N}] to]
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[T/fin [v*{V} D{N}]]
					Target persuade in v*
					=[T/fin [v* [persuade D{N}]]]
				=[T/fin [v* [persuade [D Mary]]]]
				2. Feature processing:
				=[T/fin [v* [persuade [D Mary]]]]
				3. Extraposition:
				=[T/fin [v* [persuade [D Mary]]]]
				4. Floater movement reconstruction:
				=[T/fin [v* [persuade [D Mary]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [v* [persuade [D Mary]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[T/fin [v* [persuade [D Mary]]]]
				7. Last resort extraposition:
				An EPP-head "T/fin" lacks specifier.
					Last resort extraposition will be tried on [T/fin [v* [persuade [D Mary]]]].
					No suitable node for extraposition found. No action was taken.
			=[[D John] [[T/fin [v* [persuade [D Mary]]]] to]]

	22. Consume "leave"

		[[D John] [[T/fin [v* [persuade [D Mary]]]] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [[[T/fin [v* [persuade [D Mary]]]] [D John]] to]] leave] due to bad left branch.
				Reject [[[T/fin [v* [persuade [D Mary]]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [[T/fin [v* [persuade [D Mary]]]] [to leave]]]

	>>>	Trying candidate spellout structure [[D John] [[T/fin [v* [persuade [D Mary]]]] [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[D John] [[T/fin [v* [persuade [D Mary]]]] [to leave]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[D John] [[T/fin [v* [persuade [D Mary]]]] [to leave]]]
				3. Extraposition:
				=[[D John] [[T/fin [v* [persuade [D Mary]]]] [to leave]]]
				4. Floater movement reconstruction:
				=[[D John] [[T/fin [v* [persuade [D Mary]]]] [to leave]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
					New head was spawned due to multiple specifiers at to but its category is unknown!
				=[[D John]:109 [? [[T/fin [v* [persuade [D Mary]]]] [to [__:109 leave]]]]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG by phi-Agree from __:109.
						to acquired PHI:PER:3 by phi-Agree from __:109.
				=[[D John]:109 [? [[T/fin [v* [persuade [D Mary]]]] [to [__:109 leave]]]]]
				7. Last resort extraposition:
					An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier.
				to has unacceptable specifier [T/fin [v* [persuade [D Mary]]]].
					Last resort extraposition will be tried on [[D John]:109 [? [[T/fin [v* [persuade [D Mary]]]] [to [__:109 leave]]]]].
			= [[D John] [? [[T/fin [v* [persuade [D Mary]]]] [to [[D John] leave]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier.
				to has unacceptable specifier [T/fin [v* [persuade [D Mary]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:EN', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
persuade:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI_CHECKED', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  ?: [?];  T/fin: [TT/fin, ?];  v*: [v, TT/fin, ?];  persuade: [V, v, TT/fin, ?];  D: [D, V, v, TT/fin, ?];  Mary: [N, D, V, v, TT/fin, ?];  to: [INF, ?];  __: [D, INF, ?];  __: [N, D, INF, ?];  leave: [V, INF, ?];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[[D John] [T/fin [v* persuade]]]
				2. Feature processing:
				=[[D John] [T/fin [v* persuade]]]
				3. Extraposition:
				=[[D John] [T/fin [v* persuade]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v* persuade]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:110 [T/fin [__:110 [v* persuade]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:110 [T/fin [__:110 [v* persuade]]]]
				7. Last resort extraposition:
				"persuade" lacks complement.
					Last resort extraposition will be tried on [[D John]:110 [T/fin [__:110 [v* persuade]]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:110 [T/fin [__:110 [v* persuade]]]] D]

	23. Consume "Mary"

		[[[D John] [T/fin [[D John] [v* persuade]]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[[D John]:110 [T/fin [__:110 [v* persuade]]]] D{N}]

	24. Consume "to"

		[[[D John] [T/fin [[D John] [v* persuade]]]] D{N}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				"persuade" lacks complement.
				Avoid [[[D John] [T/fin [[D John] [v* persuade]]]] <D Mary>] as left branch because it constitutes illicit structure.
				[[[D John]:110 [T/fin [__:110 [v* persuade]]]] D{N}] + to = -98]
				D{N} + to = 2]
		Ranking completed:
			1. [D{N}; to]
			2. [[[[D John]:110 [T/fin [__:110 [v* persuade]]]] D{N}]; to]
			Exploring solution number (1) =[D{N} to]
				1. Head movement reconstruction:
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
			=[[[D John]:110 [T/fin [__:110 [v* persuade]]]] [[D Mary] to]]

	25. Consume "leave"

		[[[D John] [T/fin [[D John] [v* persuade]]]] [[D Mary] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [v* persuade]]]] [[D Mary] to]] leave] due to bad left branch.
				Reject [[[D Mary] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:110 [T/fin [__:110 [v* persuade]]]] [[D Mary] [to leave]]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [v* persuade]]]] [[D Mary] [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:110 [T/fin [__:110 [v* persuade]]]] [[D Mary] [to leave]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:110 [T/fin [__:110 [v* persuade]]]] [[D Mary] [to leave]]]
				3. Extraposition:
				=[[[D John]:110 [T/fin [__:110 [v* persuade]]]] [[D Mary] [to leave]]]
				4. Floater movement reconstruction:
				=[[[D John]:110 [T/fin [__:110 [v* persuade]]]] [[D Mary] [to leave]]]
				5. Phrasal movement reconstruction:
					[D Mary] will undergo A-reconstruction.
					New head was spawned due to multiple specifiers at to but its category is unknown!
				=[[[D John]:110 [T/fin [__:110 [v* persuade]]]] [? [[D Mary]:111 [to [__:111 leave]]]]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG from the edge of to.
						to acquired PHI:PER:3 from the edge of to.
				=[[[D John]:110 [T/fin [__:110 [v* persuade]]]] [? [[D Mary]:111 [to [__:111 leave]]]]]
				7. Last resort extraposition:
				"persuade" lacks complement.
					An uninterpretable grammatical head without lexical category was detected.
					Last resort extraposition will be tried on [[[D John]:110 [T/fin [__:110 [v* persuade]]]] [? [[D Mary]:111 [to [__:111 leave]]]]].
			= [[[D John] [T/fin [[D John] [v* persuade]]]] [? [[D Mary] [to [[D Mary] leave]]]]]
		Checking LF-interface conditions.
				"persuade" lacks complement.
					An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:EN', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
persuade:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  persuade: [V, v, TT/fin];  ?: [?];  D: [D, ?];  Mary: [N, D, ?];  to: [INF, ?];  __: [D, INF, ?];  __: [N, D, INF, ?];  leave: [V, INF, ?];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[[D John]:110 [T/fin [__:110 [v* persuade]]]] D{N}] to]
				1. Head movement reconstruction:
				=[[[D John]:110 [T/fin [__:110 [v* persuade]]]] [D Mary]]
				2. Feature processing:
				=[[[D John]:110 [T/fin [__:110 [v* persuade]]]] [D Mary]]
				3. Extraposition:
				=[[[D John]:110 [T/fin [__:110 [v* persuade]]]] [D Mary]]
				4. Floater movement reconstruction:
				=[[[D John]:110 [T/fin [__:110 [v* persuade]]]] [D Mary]]
				5. Phrasal movement reconstruction:
				=[[[D John]:110 [T/fin [__:110 [v* persuade]]]] [D Mary]]
				6. Agreement reconstruction:
				=[[[D John]:110 [T/fin [__:110 [v* persuade]]]] [D Mary]]
				7. Last resort extraposition:
				"persuade" lacks complement.
				D has unacceptable specifier [[D John]:110 [T/fin [__:110 [v* persuade]]]].
					Last resort extraposition will be tried on [[[D John]:110 [T/fin [__:110 [v* persuade]]]] [D Mary]].
					<D Mary> was made an adjunct.
					<D Mary> is transferred to LF as a phase.
				"persuade" lacks complement.
					Something is still wrong. The structure is still uninterpretable.
			=[[[[D John]:110 [T/fin [__:110 [v* persuade]]]] <D Mary>] to]

	26. Consume "leave"

		[[[[D John] [T/fin [[D John] [v* persuade]]]] <D Mary>] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[[D John] [T/fin [[D John] [v* persuade]]]] <D Mary>] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[[D John]:110 [T/fin [__:110 [v* persuade]]]] <D Mary>] [to leave]]

	>>>	Trying candidate spellout structure [[[[D John] [T/fin [[D John] [v* persuade]]]] <D Mary>] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[[D John]:110 [T/fin [__:110 [v* persuade]]]] <D Mary>] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[[D John]:110 [T/fin [__:110 [v* persuade]]]] <D Mary>] [to leave]]
				3. Extraposition:
				=[[[[D John]:110 [T/fin [__:110 [v* persuade]]]] <D Mary>] [to leave]]
				4. Floater movement reconstruction:
				=[[[[D John]:110 [T/fin [__:110 [v* persuade]]]] <D Mary>] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[[D John]:110 [T/fin [__:110 [v* persuade]]]] <D Mary>] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[[D John]:110 [T/fin [__:110 [v* persuade]]]] <D Mary>] [to leave]]
				7. Last resort extraposition:
				"persuade" lacks complement.
				to has unacceptable specifier [[[D John]:110 [T/fin [__:110 [v* persuade]]]] <D Mary>].
					Last resort extraposition will be tried on [[[[D John]:110 [T/fin [__:110 [v* persuade]]]] <D Mary>] [to leave]].
			= [[[[D John] [T/fin [[D John] [v* persuade]]]] <D Mary>] [to leave]]
		Checking LF-interface conditions.
				"persuade" lacks complement.
				to has unacceptable specifier [[[D John]:110 [T/fin [__:110 [v* persuade]]]] <D Mary>].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:EN', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
persuade:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  persuade: [V, v, TT/fin];  D: [D];  Mary: [N, D];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "persuade-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v*$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "persuades".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 31
['John', 'admires', 'Mary']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'v$', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin]

	10. Consume "v"

		[[D John] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D John] T/fin{v}]

	11. Consume "admire"

		[[D John] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into v because they are inside the same phonological word.
			=[[D John] T/fin{v,V}]

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

	12. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	13. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	14. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	15. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	16. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	17. Consume "D"

		[[D John] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				admire (admire) is missing complement D
				Avoid [[D John] [T/fin [[D John] [v admire]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[D John] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D John] T/fin{v,V}]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
				An EPP-head "T/fin{v,V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} D]]

	18. Consume "Mary"

		[[D John] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[D John] [T/fin{v,V} D{N}]]

	>>>	Trying candidate spellout structure [[D John] [T/fin{v,V} D{N}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D John] [T/fin [v{V} D{N}]]]
					Target admire in v
					=[[D John] [T/fin [v [admire D{N}]]]]
				=[[D John] [T/fin [v [admire [D Mary]]]]]
				2. Feature processing:
				=[[D John] [T/fin [v [admire [D Mary]]]]]
				3. Extraposition:
				=[[D John] [T/fin [v [admire [D Mary]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v [admire [D Mary]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:114 [T/fin [__:114 [v [admire [D Mary]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:114 [T/fin [__:114 [v [admire [D Mary]]]]]]
				7. Last resort extraposition:
			= [[D John] [T/fin [[D John] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Transferring [[D John]:114 [T/fin [__:114 [v [admire [D Mary]]]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				admire with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: 2. [D John] 3. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'admire([D Mary])', 'v([D John])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [v [admire [D Mary]]]]]]
		Grammar: [[D John]:1 [T/fin [__:1 [v [admire [D Mary]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['!COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  admire: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Mary: [N, D, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[[D John] [T/fin [v admire]]]
				2. Feature processing:
				=[[D John] [T/fin [v admire]]]
				3. Extraposition:
				=[[D John] [T/fin [v admire]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v admire]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:115 [T/fin [__:115 [v admire]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:115 [T/fin [__:115 [v admire]]]]
				7. Last resort extraposition:
				admire (admire) is missing complement D
					Last resort extraposition will be tried on [[D John]:115 [T/fin [__:115 [v admire]]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:115 [T/fin [__:115 [v admire]]]] D]

	19. Consume "Mary"

		[[[D John] [T/fin [[D John] [v admire]]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[[D John]:115 [T/fin [__:115 [v admire]]]] D{N}]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [v admire]]]] D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:115 [T/fin [__:115 [v admire]]]] [D Mary]]
				2. Feature processing:
				=[[[D John]:115 [T/fin [__:115 [v admire]]]] [D Mary]]
				3. Extraposition:
				=[[[D John]:115 [T/fin [__:115 [v admire]]]] [D Mary]]
				4. Floater movement reconstruction:
				=[[[D John]:115 [T/fin [__:115 [v admire]]]] [D Mary]]
				5. Phrasal movement reconstruction:
				=[[[D John]:115 [T/fin [__:115 [v admire]]]] [D Mary]]
				6. Agreement reconstruction:
				=[[[D John]:115 [T/fin [__:115 [v admire]]]] [D Mary]]
				7. Last resort extraposition:
				admire (admire) is missing complement D
				D has unacceptable specifier [[D John]:115 [T/fin [__:115 [v admire]]]].
					Last resort extraposition will be tried on [[[D John]:115 [T/fin [__:115 [v admire]]]] [D Mary]].
					<D Mary> was made an adjunct.
					<D Mary> is transferred to LF as a phase.
				admire (admire) is missing complement D
					Something is still wrong. The structure is still uninterpretable.
			= [[[D John] [T/fin [[D John] [v admire]]]] <D Mary>]
		Checking LF-interface conditions.
				admire (admire) is missing complement D
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['!COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  admire: [V, v, TT/fin];  D: [D];  Mary: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "admire-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "admires".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 32
['noi', 'adoriamo', 'Luisa']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'pl$', 'D$', 'noi-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

	3. Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.

	4. Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'LANG:IT', 'PHI:PER:1', 'PHI:GEN:N'} to D
			=D

	7. Consume "noi"

		D + noi
			Filtering out impossible merge sites...
			Sink "noi" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-iamo]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:PER:1', 'PHI:DET:DEF', 'LANG:IT', '-'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D noi].
				=[D noi]
				2. Feature processing:
				=[D noi]
				3. Extraposition:
				=[D noi]
				4. Floater movement reconstruction:
				=[D noi]
				5. Phrasal movement reconstruction:
				=[D noi]
				6. Agreement reconstruction:
				=[D noi]
				7. Last resort extraposition:
			=[[D noi] T/fin]

	10. Consume "v"

		[[D noi] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D noi] T/fin{v}]

	11. Consume "adora"

		[[D noi] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
			=[[D noi] T/fin{v,V}]

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

	12. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

	13. Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

	14. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

	15. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

	16. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'LANG:IT', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	17. Consume "D"

		[[D noi] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D noi] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D noi] T/fin{v,V}]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D noi] [T/fin{v,V} D]]

	18. Consume "Luisa"

		[[D noi] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
			=[[D noi] [T/fin{v,V} D{N}]]

	>>>	Trying candidate spellout structure [[D noi] [T/fin{v,V} D{N}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D noi] [T/fin [v{V} D{N}]]]
					Target adora in v
					=[[D noi] [T/fin [v [adora D{N}]]]]
				=[[D noi] [T/fin [v [adora [D Luisa]]]]]
				2. Feature processing:
				=[[D noi] [T/fin [v [adora [D Luisa]]]]]
				3. Extraposition:
				=[[D noi] [T/fin [v [adora [D Luisa]]]]]
				4. Floater movement reconstruction:
				=[[D noi] [T/fin [v [adora [D Luisa]]]]]
				5. Phrasal movement reconstruction:
					[D noi] will undergo A-reconstruction.
				=[[D noi]:3 [T/fin [__:3 [v [adora [D Luisa]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:N from the edge of T/fin.
						T/fin acquired PHI:NUM:PL from the edge of T/fin.
						T/fin acquired PHI:PER:1 from the edge of T/fin.
				=[[D noi]:3 [T/fin [__:3 [v [adora [D Luisa]]]]]]
				7. Last resort extraposition:
			= [[D noi] [T/fin [[D noi] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Transferring [[D noi]:3 [T/fin [__:3 [v [adora [D Luisa]]]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D noi]    (alternatives: 2. T/fin )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D noi] 3. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'adora([D Luisa])', 'v([D noi])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D noi] [T/fin [[D noi] [v [adora [D Luisa]]]]]]
		Grammar: [[D noi]:1 [T/fin [__:1 [v [adora [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
noi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:we', 'PF:noi', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL', 'null']
noi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:we', 'PF:noi', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D];  noi: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  adora: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Luisa: [N, D, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D noi] T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[[D noi] [T/fin [v adora]]]
				2. Feature processing:
				=[[D noi] [T/fin [v adora]]]
				3. Extraposition:
				=[[D noi] [T/fin [v adora]]]
				4. Floater movement reconstruction:
				=[[D noi] [T/fin [v adora]]]
				5. Phrasal movement reconstruction:
					[D noi] will undergo A-reconstruction.
				=[[D noi]:4 [T/fin [__:4 [v adora]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:N from the edge of T/fin.
						T/fin acquired PHI:NUM:PL from the edge of T/fin.
						T/fin acquired PHI:PER:1 from the edge of T/fin.
				=[[D noi]:4 [T/fin [__:4 [v adora]]]]
				7. Last resort extraposition:
			=[[[D noi]:4 [T/fin [__:4 [v adora]]]] D]

	19. Consume "Luisa"

		[[[D noi] [T/fin [[D noi] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
			=[[[D noi]:4 [T/fin [__:4 [v adora]]]] D{N}]

	>>>	Trying candidate spellout structure [[[D noi] [T/fin [[D noi] [v adora]]]] D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D noi]:4 [T/fin [__:4 [v adora]]]] [D Luisa]]
				2. Feature processing:
				=[[[D noi]:4 [T/fin [__:4 [v adora]]]] [D Luisa]]
				3. Extraposition:
				=[[[D noi]:4 [T/fin [__:4 [v adora]]]] [D Luisa]]
				4. Floater movement reconstruction:
				=[[[D noi]:4 [T/fin [__:4 [v adora]]]] [D Luisa]]
				5. Phrasal movement reconstruction:
				=[[[D noi]:4 [T/fin [__:4 [v adora]]]] [D Luisa]]
				6. Agreement reconstruction:
				=[[[D noi]:4 [T/fin [__:4 [v adora]]]] [D Luisa]]
				7. Last resort extraposition:
				D has unacceptable specifier [[D noi]:4 [T/fin [__:4 [v adora]]]].
					Last resort extraposition will be tried on [[[D noi]:4 [T/fin [__:4 [v adora]]]] [D Luisa]].
					<D Luisa> was made an adjunct.
					<D Luisa> is transferred to LF as a phase.
					Something is still wrong. The structure is still uninterpretable.
			= [[[D noi] [T/fin [[D noi] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
noi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:we', 'PF:noi', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL', 'null']
noi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:we', 'PF:noi', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D];  noi: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  adora: [V, v, TT/fin];  D: [D];  Luisa: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "adora-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "adoriamo".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "noi-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "noi".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 33
['io', 'adorate', 'Luisa']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'sg$', 'D$', 'I-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

	3. Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'LANG:IT', 'PHI:PER:1', 'PHI:GEN:N', 'PHI:NUM:SG'} to D
			=D

	7. Consume "I"

		D + I
			Filtering out impossible merge sites...
			Sink "I" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-te]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:NUM:PL', 'PHI:HUM:HUM', 'LANG:IT', 'PHI:DET:DEF', '-', 'PHI:PER:2'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D I].
				=[D I]
				2. Feature processing:
				=[D I]
				3. Extraposition:
				=[D I]
				4. Floater movement reconstruction:
				=[D I]
				5. Phrasal movement reconstruction:
				=[D I]
				6. Agreement reconstruction:
				=[D I]
				7. Last resort extraposition:
			=[[D I] T/fin]

	10. Consume "v"

		[[D I] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D I] T/fin{v}]

	11. Consume "adora"

		[[D I] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
			=[[D I] T/fin{v,V}]

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

	12. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

	13. Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

	14. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

	15. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

	16. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'LANG:IT', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	17. Consume "D"

		[[D I] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D I] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D I] T/fin{v,V}]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D I] [T/fin{v,V} D]]

	18. Consume "Luisa"

		[[D I] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
			=[[D I] [T/fin{v,V} D{N}]]

	>>>	Trying candidate spellout structure [[D I] [T/fin{v,V} D{N}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D I] [T/fin [v{V} D{N}]]]
					Target adora in v
					=[[D I] [T/fin [v [adora D{N}]]]]
				=[[D I] [T/fin [v [adora [D Luisa]]]]]
				2. Feature processing:
				=[[D I] [T/fin [v [adora [D Luisa]]]]]
				3. Extraposition:
				=[[D I] [T/fin [v [adora [D Luisa]]]]]
				4. Floater movement reconstruction:
				=[[D I] [T/fin [v [adora [D Luisa]]]]]
				5. Phrasal movement reconstruction:
					[D I] will undergo A-reconstruction.
				=[[D I]:7 [T/fin [__:7 [v [adora [D Luisa]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:N from the edge of T/fin.
						Feature PHI:NUM:SG was not matched in T/fin and was marked as bad.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
						T/fin acquired PHI:PER:1 from the edge of T/fin.
				=[[D I]:7 [T/fin [__:7 [v [adora [D Luisa]]]]]]
				7. Last resort extraposition:
			= [[D I] [T/fin [[D I] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Transferring [[D I]:7 [T/fin [__:7 [v [adora [D Luisa]]]]]] into the conceptual-intentional system...
				T/fin induces a phi-feature conflict.
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D I]    (alternatives: 2. T/fin )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D I] 3. T/fin )
				Semantic interpretation failed, transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D I] T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[[D I] [T/fin [v adora]]]
				2. Feature processing:
				=[[D I] [T/fin [v adora]]]
				3. Extraposition:
				=[[D I] [T/fin [v adora]]]
				4. Floater movement reconstruction:
				=[[D I] [T/fin [v adora]]]
				5. Phrasal movement reconstruction:
					[D I] will undergo A-reconstruction.
				=[[D I]:8 [T/fin [__:8 [v adora]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:N from the edge of T/fin.
						Feature PHI:NUM:SG was not matched in T/fin and was marked as bad.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						Feature PHI:PER:1 was not matched in T/fin and was marked as bad.
						T/fin acquired PHI:PER:1 from the edge of T/fin.
				=[[D I]:8 [T/fin [__:8 [v adora]]]]
				7. Last resort extraposition:
			=[[[D I]:8 [T/fin [__:8 [v adora]]]] D]

	19. Consume "Luisa"

		[[[D I] [T/fin [[D I] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
			=[[[D I]:8 [T/fin [__:8 [v adora]]]] D{N}]

	>>>	Trying candidate spellout structure [[[D I] [T/fin [[D I] [v adora]]]] D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D I]:8 [T/fin [__:8 [v adora]]]] [D Luisa]]
				2. Feature processing:
				=[[[D I]:8 [T/fin [__:8 [v adora]]]] [D Luisa]]
				3. Extraposition:
				=[[[D I]:8 [T/fin [__:8 [v adora]]]] [D Luisa]]
				4. Floater movement reconstruction:
				=[[[D I]:8 [T/fin [__:8 [v adora]]]] [D Luisa]]
				5. Phrasal movement reconstruction:
				=[[[D I]:8 [T/fin [__:8 [v adora]]]] [D Luisa]]
				6. Agreement reconstruction:
				=[[[D I]:8 [T/fin [__:8 [v adora]]]] [D Luisa]]
				7. Last resort extraposition:
				D has unacceptable specifier [[D I]:8 [T/fin [__:8 [v adora]]]].
					Last resort extraposition will be tried on [[[D I]:8 [T/fin [__:8 [v adora]]]] [D Luisa]].
					<D Luisa> was made an adjunct.
					<D Luisa> is transferred to LF as a phase.
					Something is still wrong. The structure is still uninterpretable.
			= [[[D I] [T/fin [[D I] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:NUM:SG*', 'PHI:PER:1*', 'PHI:PER:2', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL', 'null']
I:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:I', 'PF:I', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D];  I: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  adora: [V, v, TT/fin];  D: [D];  Luisa: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "adora-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "adorate".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "I-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "io".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 34
['we', 'admire', 'Mary']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'pl$', 'D$', 'we-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:N'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "1p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:1'] into working memory.

	4. Consume "pl$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:PL'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:1', 'PHI:GEN:N'} to D
			=D

	7. Consume "we"

		D + we
			Filtering out impossible merge sites...
			Sink "we" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-0]$', 'T/fin$', 'v$', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:NUM:PL', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:2', 'PHI:PER:1', 'PHI:PER:3', 'PHI:GEN:N', 'PHI:NUM:SG'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D we].
				=[D we]
				2. Feature processing:
				=[D we]
				3. Extraposition:
				=[D we]
				4. Floater movement reconstruction:
				=[D we]
				5. Phrasal movement reconstruction:
				=[D we]
				6. Agreement reconstruction:
				=[D we]
				7. Last resort extraposition:
			=[[D we] T/fin]

	10. Consume "v"

		[[D we] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D we] T/fin{v}]

	11. Consume "admire"

		[[D we] T/fin{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into v because they are inside the same phonological word.
			=[[D we] T/fin{v,V}]

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

	12. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	13. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	14. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	15. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	16. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	17. Consume "D"

		[[D we] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				admire (admire) is missing complement D
				Avoid [[D we] [T/fin [[D we] [v admire]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[D we] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D we] T/fin{v,V}]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
				An EPP-head "T/fin{v,V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D we] [T/fin{v,V} D]]

	18. Consume "Mary"

		[[D we] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[D we] [T/fin{v,V} D{N}]]

	>>>	Trying candidate spellout structure [[D we] [T/fin{v,V} D{N}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D we] [T/fin [v{V} D{N}]]]
					Target admire in v
					=[[D we] [T/fin [v [admire D{N}]]]]
				=[[D we] [T/fin [v [admire [D Mary]]]]]
				2. Feature processing:
				=[[D we] [T/fin [v [admire [D Mary]]]]]
				3. Extraposition:
				=[[D we] [T/fin [v [admire [D Mary]]]]]
				4. Floater movement reconstruction:
				=[[D we] [T/fin [v [admire [D Mary]]]]]
				5. Phrasal movement reconstruction:
					[D we] will undergo A-reconstruction.
				=[[D we]:118 [T/fin [__:118 [v [admire [D Mary]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:N from the edge of T/fin.
						T/fin acquired PHI:NUM:PL from the edge of T/fin.
						T/fin acquired PHI:PER:1 from the edge of T/fin.
				=[[D we]:118 [T/fin [__:118 [v [admire [D Mary]]]]]]
				7. Last resort extraposition:
			= [[D we] [T/fin [[D we] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Transferring [[D we]:118 [T/fin [__:118 [v [admire [D Mary]]]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D we]    (alternatives: 2. T/fin )
				admire with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: 2. [D we] 3. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'admire([D Mary])', 'v([D we])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D we] [T/fin [[D we] [v [admire [D Mary]]]]]]
		Grammar: [[D we]:1 [T/fin [__:1 [v [admire [D Mary]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL', 'null']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['!COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D];  we: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  admire: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Mary: [N, D, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D we] T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[[D we] [T/fin [v admire]]]
				2. Feature processing:
				=[[D we] [T/fin [v admire]]]
				3. Extraposition:
				=[[D we] [T/fin [v admire]]]
				4. Floater movement reconstruction:
				=[[D we] [T/fin [v admire]]]
				5. Phrasal movement reconstruction:
					[D we] will undergo A-reconstruction.
				=[[D we]:119 [T/fin [__:119 [v admire]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:N from the edge of T/fin.
						T/fin acquired PHI:NUM:PL from the edge of T/fin.
						T/fin acquired PHI:PER:1 from the edge of T/fin.
				=[[D we]:119 [T/fin [__:119 [v admire]]]]
				7. Last resort extraposition:
				admire (admire) is missing complement D
					Last resort extraposition will be tried on [[D we]:119 [T/fin [__:119 [v admire]]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D we]:119 [T/fin [__:119 [v admire]]]] D]

	19. Consume "Mary"

		[[[D we] [T/fin [[D we] [v admire]]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[[D we]:119 [T/fin [__:119 [v admire]]]] D{N}]

	>>>	Trying candidate spellout structure [[[D we] [T/fin [[D we] [v admire]]]] D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D we]:119 [T/fin [__:119 [v admire]]]] [D Mary]]
				2. Feature processing:
				=[[[D we]:119 [T/fin [__:119 [v admire]]]] [D Mary]]
				3. Extraposition:
				=[[[D we]:119 [T/fin [__:119 [v admire]]]] [D Mary]]
				4. Floater movement reconstruction:
				=[[[D we]:119 [T/fin [__:119 [v admire]]]] [D Mary]]
				5. Phrasal movement reconstruction:
				=[[[D we]:119 [T/fin [__:119 [v admire]]]] [D Mary]]
				6. Agreement reconstruction:
				=[[[D we]:119 [T/fin [__:119 [v admire]]]] [D Mary]]
				7. Last resort extraposition:
				admire (admire) is missing complement D
				D has unacceptable specifier [[D we]:119 [T/fin [__:119 [v admire]]]].
					Last resort extraposition will be tried on [[[D we]:119 [T/fin [__:119 [v admire]]]] [D Mary]].
					<D Mary> was made an adjunct.
					<D Mary> is transferred to LF as a phase.
				admire (admire) is missing complement D
					Something is still wrong. The structure is still uninterpretable.
			= [[[D we] [T/fin [[D we] [v admire]]]] <D Mary>]
		Checking LF-interface conditions.
				admire (admire) is missing complement D
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL', 'null']
we:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:we', 'PF:we', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['!COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D];  we: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  admire: [V, v, TT/fin];  D: [D];  Mary: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "admire-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "admire".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "we-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "we".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 35
['noi', 'adoriamo', 'Luisa']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['n$', 'hum$', 'def$', '1p$', 'pl$', 'D$', 'noi-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:N'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

	3. Consume "1p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:1'] into working memory.

	4. Consume "pl$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:PL'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'LANG:IT', 'PHI:PER:1', 'PHI:GEN:N'} to D
			=D

	7. Consume "noi"

		D + noi
			Filtering out impossible merge sites...
			Sink "noi" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-iamo]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:PER:1', 'PHI:DET:DEF', 'LANG:IT', '-'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D noi].
				=[D noi]
				2. Feature processing:
				=[D noi]
				3. Extraposition:
				=[D noi]
				4. Floater movement reconstruction:
				=[D noi]
				5. Phrasal movement reconstruction:
				=[D noi]
				6. Agreement reconstruction:
				=[D noi]
				7. Last resort extraposition:
			=[[D noi] T/fin]

	10. Consume "v"

		[[D noi] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D noi] T/fin{v}]

	11. Consume "adora"

		[[D noi] T/fin{v}] + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
			=[[D noi] T/fin{v,V}]

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

	12. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

	13. Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

	14. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

	15. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

	16. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'LANG:IT', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	17. Consume "D"

		[[D noi] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [adora D] due to complement selection.
				[[D noi] T/fin{v,V}] + D = -98]
				T/fin{v,V} + D = 206]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D noi] T/fin{v,V}]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D noi] [T/fin{v,V} D]]

	18. Consume "Luisa"

		[[D noi] [T/fin{v,V} D]] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
			=[[D noi] [T/fin{v,V} D{N}]]

	>>>	Trying candidate spellout structure [[D noi] [T/fin{v,V} D{N}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D noi] [T/fin [v{V} D{N}]]]
					Target adora in v
					=[[D noi] [T/fin [v [adora D{N}]]]]
				=[[D noi] [T/fin [v [adora [D Luisa]]]]]
				2. Feature processing:
				=[[D noi] [T/fin [v [adora [D Luisa]]]]]
				3. Extraposition:
				=[[D noi] [T/fin [v [adora [D Luisa]]]]]
				4. Floater movement reconstruction:
				=[[D noi] [T/fin [v [adora [D Luisa]]]]]
				5. Phrasal movement reconstruction:
					[D noi] will undergo A-reconstruction.
				=[[D noi]:11 [T/fin [__:11 [v [adora [D Luisa]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:N from the edge of T/fin.
						T/fin acquired PHI:NUM:PL from the edge of T/fin.
						T/fin acquired PHI:PER:1 from the edge of T/fin.
				=[[D noi]:11 [T/fin [__:11 [v [adora [D Luisa]]]]]]
				7. Last resort extraposition:
			= [[D noi] [T/fin [[D noi] [v [adora [D Luisa]]]]]]
		Checking LF-interface conditions.
			Transferring [[D noi]:11 [T/fin [__:11 [v [adora [D Luisa]]]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D noi]    (alternatives: 2. T/fin )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. [D noi] 3. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'adora([D Luisa])', 'v([D noi])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D noi] [T/fin [[D noi] [v [adora [D Luisa]]]]]]
		Grammar: [[D noi]:1 [T/fin [__:1 [v [adora [D Luisa]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
noi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:we', 'PF:noi', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL', 'null']
noi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:we', 'PF:noi', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D];  noi: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  adora: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Luisa: [N, D, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D noi] T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[[D noi] [T/fin [v adora]]]
				2. Feature processing:
				=[[D noi] [T/fin [v adora]]]
				3. Extraposition:
				=[[D noi] [T/fin [v adora]]]
				4. Floater movement reconstruction:
				=[[D noi] [T/fin [v adora]]]
				5. Phrasal movement reconstruction:
					[D noi] will undergo A-reconstruction.
				=[[D noi]:12 [T/fin [__:12 [v adora]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:N from the edge of T/fin.
						T/fin acquired PHI:NUM:PL from the edge of T/fin.
						T/fin acquired PHI:PER:1 from the edge of T/fin.
				=[[D noi]:12 [T/fin [__:12 [v adora]]]]
				7. Last resort extraposition:
			=[[[D noi]:12 [T/fin [__:12 [v adora]]]] D]

	19. Consume "Luisa"

		[[[D noi] [T/fin [[D noi] [v adora]]]] D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
			=[[[D noi]:12 [T/fin [__:12 [v adora]]]] D{N}]

	>>>	Trying candidate spellout structure [[[D noi] [T/fin [[D noi] [v adora]]]] D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D noi]:12 [T/fin [__:12 [v adora]]]] [D Luisa]]
				2. Feature processing:
				=[[[D noi]:12 [T/fin [__:12 [v adora]]]] [D Luisa]]
				3. Extraposition:
				=[[[D noi]:12 [T/fin [__:12 [v adora]]]] [D Luisa]]
				4. Floater movement reconstruction:
				=[[[D noi]:12 [T/fin [__:12 [v adora]]]] [D Luisa]]
				5. Phrasal movement reconstruction:
				=[[[D noi]:12 [T/fin [__:12 [v adora]]]] [D Luisa]]
				6. Agreement reconstruction:
				=[[[D noi]:12 [T/fin [__:12 [v adora]]]] [D Luisa]]
				7. Last resort extraposition:
				D has unacceptable specifier [[D noi]:12 [T/fin [__:12 [v adora]]]].
					Last resort extraposition will be tried on [[[D noi]:12 [T/fin [__:12 [v adora]]]] [D Luisa]].
					<D Luisa> was made an adjunct.
					<D Luisa> is transferred to LF as a phase.
					Something is still wrong. The structure is still uninterpretable.
			= [[[D noi] [T/fin [[D noi] [v adora]]]] <D Luisa>]
		Checking LF-interface conditions.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL']
noi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:we', 'PF:noi', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'VAL', 'null']
noi:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:we', 'PF:noi', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

D: [D];  noi: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  adora: [V, v, TT/fin];  D: [D];  Luisa: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "adora-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "adoriamo".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "noi-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "pl$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "noi".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 36
['kuka', 'ihailee', 'Merjaa']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['hum$', 'def$', '3p$', 'sg$', 'nom$', 'wh$', 'D$', 'kuka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	1. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	2. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	3. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	4. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	5. Consume "wh$"
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-COMP:C/fin', 'ABAR:WH', '-', '-COMP:ADV', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN', 'CAT:WH'} to D
			=D

	8. Consume "kuka"

		D + kuka
			Filtering out impossible merge sites...
			Sink "kuka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v$', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D kuka].
				=[D kuka]
				2. Feature processing:
				=[D kuka]
				3. Extraposition:
				=[D kuka]
				4. Floater movement reconstruction:
				=[D kuka]
				5. Phrasal movement reconstruction:
				=[D kuka]
				6. Agreement reconstruction:
				=[D kuka]
				7. Last resort extraposition:
			=[[D kuka] T/fin]

	11. Consume "v"

		[[D kuka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D kuka] T/fin{v}]

	12. Consume "ihaile-"

		[[D kuka] T/fin{v}] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into v because they are inside the same phonological word.
			=[[D kuka] T/fin{v,V}]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'par$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	13. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	14. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	15. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	16. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	17. Consume "par$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

	18. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'LANG:FI', 'PHI:NUM:SG'} to D

	19. Consume "D"

		[[D kuka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				ihaile- (ihaile-) is missing complement D
				Avoid [[D kuka] [T/fin [[D kuka] [v ihaile-]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D kuka] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 158]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D kuka] T/fin{v,V}]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D kuka] [T/fin{v,V} D]]

	20. Consume "Merja-"

		[[D kuka] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[D kuka] [T/fin{v,V} D{N}]]

	>>>	Trying candidate spellout structure [[D kuka] [T/fin{v,V} D{N}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D kuka] [T/fin [v{V} D{N}]]]
					Target ihaile- in v
					=[[D kuka] [T/fin [v [ihaile- D{N}]]]]
				=[[D kuka] [T/fin [v [ihaile- [D Merja-]]]]]
				2. Feature processing:
				=[[D kuka] [T/fin [v [ihaile- [D Merja-]]]]]
				3. Extraposition:
				=[[D kuka] [T/fin [v [ihaile- [D Merja-]]]]]
				4. Floater movement reconstruction:
				=[[D kuka] [T/fin [v [ihaile- [D Merja-]]]]]
				5. Phrasal movement reconstruction:
					Moving "D kuka " into memory buffer from SPEC of "T/fin".
					Criterial features {'WH'} copied to {'T', 'FIN', 'T/fin', 'ARG/FIN/T/T/fin', 'ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'ARG'}
					Memory buffer: [[D N]]
					Dropping constituent [D kuka] from memory buffer into Spec of v
					Result [[D kuka] [T/fin [[D kuka] [v [ihaile- [D Merja-]]]]]]
				=[[D kuka]:14 [T/fin [__:14 [v [ihaile- [D Merja-]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D kuka]:14 [T/fin [__:14 [v [ihaile- [D Merja-]]]]]]
				7. Last resort extraposition:
			= [[D kuka] [T/fin [[D kuka] [v [ihaile- [D Merja-]]]]]]
		Checking LF-interface conditions.
			Transferring [[D kuka]:14 [T/fin [__:14 [v [ihaile- [D Merja-]]]]]] into the conceptual-intentional system...
				__[ABAR:WH] was bound to an operator.
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D kuka]    (alternatives: 2. T/fin )
				ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. [D kuka] 3. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', '__[ABAR:WH] was bound to an operator.', 'ihaile-([D Merja-])', 'v([D kuka])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D kuka] [T/fin [[D kuka] [v [ihaile- [D Merja-]]]]]]
		Grammar: [[D kuka]:1 [T/fin [__:1 [v [ihaile- [D Merja-]]]]]]
		Spellout TT/finiWHP = [DP:1 [TT/finiWH [__:1 [v [V [D N]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D/WH', 'CAT:-ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/ARG/FIN/T/T/fin/FIN/T/T/fin/ARG/FIN/T/T/fin/FIN/T/T/fin/iWH/uWH', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D/WH', 'CAT:-ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D];  kuka: [N, D];  T/fin: [TT/finiWH];  __: [D, TT/finiWH];  __: [N, D, TT/finiWH];  v: [v, TT/finiWH];  ihaile-: [V, v, TT/finiWH];  D: [D, V, v, TT/finiWH];  Merja-: [N, D, V, v, TT/finiWH];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D kuka] T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[[D kuka] [T/fin [v ihaile-]]]
				2. Feature processing:
				=[[D kuka] [T/fin [v ihaile-]]]
				3. Extraposition:
				=[[D kuka] [T/fin [v ihaile-]]]
				4. Floater movement reconstruction:
				=[[D kuka] [T/fin [v ihaile-]]]
				5. Phrasal movement reconstruction:
					Moving "D kuka " into memory buffer from SPEC of "T/fin".
					Criterial features {'WH'} copied to {'T', 'FIN', 'T/fin', 'ARG/FIN/T/T/fin', 'ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'ARG'}
					Memory buffer: [[D N]]
					Dropping constituent [D kuka] from memory buffer into Spec of v
					Result [[D kuka] [T/fin [[D kuka] [v ihaile-]]]]
				=[[D kuka]:15 [T/fin [__:15 [v ihaile-]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D kuka]:15 [T/fin [__:15 [v ihaile-]]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [[D kuka]:15 [T/fin [__:15 [v ihaile-]]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D kuka]:15 [T/fin [__:15 [v ihaile-]]]] D]

	21. Consume "Merja-"

		[[[D kuka] [T/fin [[D kuka] [v ihaile-]]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[[D kuka]:15 [T/fin [__:15 [v ihaile-]]]] D{N}]

	>>>	Trying candidate spellout structure [[[D kuka] [T/fin [[D kuka] [v ihaile-]]]] D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D kuka]:15 [T/fin [__:15 [v ihaile-]]]] [D Merja-]]
				2. Feature processing:
				=[[[D kuka]:15 [T/fin [__:15 [v ihaile-]]]] [D Merja-]]
				3. Extraposition:
				=[[[D kuka]:15 [T/fin [__:15 [v ihaile-]]]] [D Merja-]]
				4. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
					Dropping <D Merja->
					 = [[[D kuka]:15 [T/fin [__:15 [v [<__>:45 ihaile-]]]]] <D Merja->:45]
				=[[[D kuka]:15 [T/fin [__:15 [v [<__>:45 ihaile-]]]]] <D Merja->:45]
				5. Phrasal movement reconstruction:
					Criterial features {'WH'} copied to {'ARG/ARG/ARG/FIN/T/T/fin/FIN/T/T/fin/ARG/FIN/T/T/fin/FIN/T/T/fin/iWH/uWH', 'T', 'FIN', 'T/fin', 'uWH', 'ARG/FIN/T/T/fin', 'ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'ARG', 'iWH'}
				=[[[D kuka]:15 [T/fin [__:15 [v [<__>:45 ihaile-]]]]] <D Merja->:45]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[[D kuka]:15 [T/fin [__:15 [v [<__>:45 ihaile-]]]]] <D Merja->:45]
				7. Last resort extraposition:
				<__>:45 has no thematic role at the SPEC of ihaile-
					Last resort extraposition will be tried on [[[D kuka]:15 [T/fin [__:15 [v [<__>:45 ihaile-]]]]] <D Merja->:45].
					No suitable node for extraposition found. No action was taken.
			= [[[D kuka] [T/fin [[D kuka] [v [<D Merja-> ihaile-]]]]] <D Merja->]
		Checking LF-interface conditions.
				<__>:45 has no thematic role at the SPEC of ihaile-
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D/WH', 'CAT:-ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/ARG/ARG/FIN/T/T/fin/FIN/T/T/fin/ARG/FIN/T/T/fin/FIN/T/T/fin/iWH/uWH/ARG/ARG/FIN/T/T/fin/FIN/T/T/fin/ARG/FIN/T/T/fin/FIN/T/T/fin/iWH/uWH', 'CAT:ARG/ARG/ARG/FIN/T/T/fin/FIN/T/T/fin/ARG/FIN/T/T/fin/FIN/T/T/fin/iWH/uWH', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'CAT:iWH', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D/WH', 'CAT:-ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
kuka:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:kuka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D];  kuka: [N, D];  T/fin: [TT/finiWH];  __: [D, TT/finiWH];  __: [N, D, TT/finiWH];  v: [v, TT/finiWH];  __: [D, v, TT/finiWH];  __: [N, D, v, TT/finiWH];  ihaile-: [V, v, TT/finiWH];  D: [D];  Merja-: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "par$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihailee".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "kuka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "wh$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "kuka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 37
['keta', 'han', 'ihailee']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['hum$', 'def$', '3p$', 'sg$', 'par$', 'wh$', 'D$', 'keta-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	1. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	2. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	3. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	4. Consume "par$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

	5. Consume "wh$"
		Storing inflectional feature ['-', '-COMP:ADV', '-COMP:C/fin', 'ABAR:WH', 'CAT:WH', 'LANG:FI'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'ABAR:WH', '-', '-COMP:ADV', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'LANG:FI', 'PHI:NUM:SG', '-COMP:C/fin', 'CAT:WH'} to D
			=D

	8. Consume "ketÃ¤"

		D + ketÃ¤
			Filtering out impossible merge sites...
			Sink "ketÃ¤" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'han-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	9. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	10. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	11. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	12. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	13. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D

	14. Consume "D"

		D{N} + D
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} D]
				1. Head movement reconstruction:
					D was opened into [D ketÃ¤].
				=[D ketÃ¤]
				2. Feature processing:
				=[D ketÃ¤]
				3. Extraposition:
				=[D ketÃ¤]
				4. Floater movement reconstruction:
				=[D ketÃ¤]
				5. Phrasal movement reconstruction:
				=[D ketÃ¤]
				6. Agreement reconstruction:
				=[D ketÃ¤]
				7. Last resort extraposition:
			=[[D ketÃ¤] D]

	15. Consume "han"

		[[D ketÃ¤] D] + han
			Filtering out impossible merge sites...
			Sink "han" into D because they are inside the same phonological word.
			=[[D ketÃ¤] D{N}]

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v$', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	16. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	17. Consume "T/fin"

		[[D ketÃ¤] D{N}] + T/fin
			Filtering out impossible merge sites...
				Reject [[[D ketÃ¤] [D han]] T/fin] due to bad left branch.
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D han].
				=[D han]
				2. Feature processing:
				=[D han]
				3. Extraposition:
				=[D han]
				4. Floater movement reconstruction:
				=[D han]
				5. Phrasal movement reconstruction:
				=[D han]
				6. Agreement reconstruction:
				=[D han]
				7. Last resort extraposition:
			=[[D ketÃ¤] [[D han] T/fin]]

	18. Consume "v"

		[[D ketÃ¤] [[D han] T/fin]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D ketÃ¤] [[D han] T/fin{v}]]

	19. Consume "ihaile-"

		[[D ketÃ¤] [[D han] T/fin{v}]] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into v because they are inside the same phonological word.
			=[[D ketÃ¤] [[D han] T/fin{v,V}]]

	>>>	Trying candidate spellout structure [[D ketÃ¤] [[D han] T/fin{v,V}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[D ketÃ¤] [[D han] [T/fin [v ihaile-]]]]
				2. Feature processing:
				=[[D ketÃ¤] [[D han] [T/fin [v ihaile-]]]]
				3. Extraposition:
				=[[D ketÃ¤] [[D han] [T/fin [v ihaile-]]]]
				4. Floater movement reconstruction:
					[D han] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D han]
					<D han> was made an adjunct.
					<D han> is transferred to LF as a phase.
					 = [[D ketÃ¤] [<D han>:46 [T/fin [<__>:46 [v ihaile-]]]]]
				=[[D ketÃ¤] [<D han>:46 [T/fin [<__>:46 [v ihaile-]]]]]
				5. Phrasal movement reconstruction:
					Moving "D ketÃ¤ " into memory buffer from SPEC of "T/fin".
					New {'WH'} head was spawned due to the occurrence of multiple specifiers at T/fin
					Memory buffer: [[D N]]
					Dropp   ing [D N](=D ketÃ¤ ) from memory buffer into Comp of {'ARG/V', 'ARG', 'V'}.
					Result [[D ketÃ¤]:16 [uWH [<D han>:46 [T/fin [<__>:46 [v [ihaile- __:16]]]]]]]
					Remaining items in memory buffer: []
				=[[D ketÃ¤]:16 [uWH [<D han>:46 [T/fin [<__>:46 [v [ihaile- __:16]]]]]]]
				6. Agreement reconstruction:
					Head uWH, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						uWH acquired PHI:DET:DEF from the edge of uWH.
						uWH acquired PHI:NUM:SG from the edge of uWH.
						uWH acquired PHI:PER:3 from the edge of uWH.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D ketÃ¤]:16 [uWH [<D han>:46 [T/fin [<__>:46 [v [ihaile- __:16]]]]]]]
				7. Last resort extraposition:
			= [[D ketÃ¤] [uWH [<D han> [T/fin [<D han> [v [ihaile- [D ketÃ¤]]]]]]]]
		Checking LF-interface conditions.
			Transferring [[D ketÃ¤]:16 [uWH [<D han>:46 [T/fin [<__>:46 [v [ihaile- __:16]]]]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D han>    (alternatives: 2. T/fin 3. uWH )
				ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D ketÃ¤]    (alternatives: 2. <D han> 3. T/fin 4. uWH )
				__[ABAR:WH] was bound to an operator.
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', '__[ABAR:WH] was bound to an operator.', 'ihaile-([D ketÃ¤])', 'v(<D han>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D ketÃ¤] [uWH [<D han> [T/fin [<D han> [v [ihaile- [D ketÃ¤]]]]]]]]
		Grammar: [[D ketÃ¤]:1 [uWH [<D han>:2 [T/fin [<__>:2 [v [ihaile- __:1]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [DP:2 [TT/fin [__:2 [v [V __:1]]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D/WH', 'CAT:-ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
ketÃ¤:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:ketÃ¤', 'SPEC:A']
uWH:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '!SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/ARG/FIN/T/T/fin/FIN/T/T/fin/ARG/FIN/T/T/fin/FIN/T/T/fin/uWH', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'CAT:uWH', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'PF:uWH', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
han:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:s/he', 'PF:han', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:ADV', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ABAR:WH', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D/WH', 'CAT:-ARG/D', 'CAT:D', 'CAT:WH', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
ketÃ¤:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:who', 'PF:ketÃ¤', 'SPEC:A', 'null']

D: [D];  ketÃ¤: [N, D];  uWH: [TT/fin];  D: [D, TT/fin];  han: [N, D, TT/fin];  T/fin: [TT/fin, TT/fin];  __: [D, TT/fin, TT/fin];  __: [N, D, TT/fin, TT/fin];  v: [v, TT/fin, TT/fin];  ihaile-: [V, v, TT/fin, TT/fin];  __: [D, V, v, TT/fin, TT/fin];  __: [N, D, V, v, TT/fin, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihailee".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "han-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "han".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "keta-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "wh$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "par$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "keta".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 38
['ihailen', 'Merjaa']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['[-n]$', 'T/fin$', 'v$', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

	1. Consume "T/fin$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:PER:1', 'PHI:DET:DEF', 'LANG:FI', 'PHI:NUM:SG', '-'} to T/fin
			=T/fin

	3. Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=T/fin{v}

	4. Consume "ihaile-"

		T/fin{v} + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into v because they are inside the same phonological word.
			=T/fin{v,V}

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'par$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	5. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	6. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	7. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	8. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	9. Consume "par$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

	10. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'LANG:FI', 'PHI:NUM:SG'} to D

	11. Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[T/fin{v,V} D]

	12. Consume "Merja-"

		[T/fin{v,V} D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[T/fin{v,V} D{N}]

	>>>	Trying candidate spellout structure [T/fin{v,V} D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[T/fin [v{V} D{N}]]
					Target ihaile- in v
					=[T/fin [v [ihaile- D{N}]]]
				=[T/fin [v [ihaile- [D Merja-]]]]
				2. Feature processing:
				=[T/fin [v [ihaile- [D Merja-]]]]
				3. Extraposition:
				=[T/fin [v [ihaile- [D Merja-]]]]
				4. Floater movement reconstruction:
				=[T/fin [v [ihaile- [D Merja-]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [v [ihaile- [D Merja-]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:1 from the edge of T/fin.
				=[T/fin [v [ihaile- [D Merja-]]]]
				7. Last resort extraposition:
			= [T/fin [v [ihaile- [D Merja-]]]]
		Checking LF-interface conditions.
			Transferring [T/fin [v [ihaile- [D Merja-]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'ihaile-([D Merja-])', 'v(T/fin)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[T/fin [v [ihaile- [D Merja-]]]]
		Grammar: [T/fin [v [ihaile- [D Merja-]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
----------------------------------------------------------------------------------------------------------
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

T/fin: [TT/fin];  v: [v, TT/fin];  ihaile-: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Merja-: [N, D, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "par$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihailen".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 39
['ihailee', 'Merjaa']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v$', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	1. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
			=T/fin

	3. Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=T/fin{v}

	4. Consume "ihaile-"

		T/fin{v} + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into v because they are inside the same phonological word.
			=T/fin{v,V}

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'par$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	5. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	6. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	7. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	8. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	9. Consume "par$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

	10. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'LANG:FI', 'PHI:NUM:SG'} to D

	11. Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[T/fin{v,V} D]

	12. Consume "Merja-"

		[T/fin{v,V} D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[T/fin{v,V} D{N}]

	>>>	Trying candidate spellout structure [T/fin{v,V} D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[T/fin [v{V} D{N}]]
					Target ihaile- in v
					=[T/fin [v [ihaile- D{N}]]]
				=[T/fin [v [ihaile- [D Merja-]]]]
				2. Feature processing:
				=[T/fin [v [ihaile- [D Merja-]]]]
				3. Extraposition:
				=[T/fin [v [ihaile- [D Merja-]]]]
				4. Floater movement reconstruction:
				=[T/fin [v [ihaile- [D Merja-]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [v [ihaile- [D Merja-]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[T/fin [v [ihaile- [D Merja-]]]]
				7. Last resort extraposition:
			= [T/fin [v [ihaile- [D Merja-]]]]
		Checking LF-interface conditions.
			Transferring [T/fin [v [ihaile- [D Merja-]]]] into the conceptual-intentional system...
				T/fin with ['PHI:DET:_'] was associated at LF with:
					No antecedent found, LF-object crashes.
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Semantic interpretation failed, transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "par$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihailee".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 40
['adora', 'Luisa']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['[-a]$', 'T/fin$', 'v$', 'adora-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	1. Consume "T/fin$"
		Adding inflectional features {'LANG:IT', 'PHI:PER:3', 'PHI:DET:DEF', 'PHI:NUM:SG', '-'} to T/fin
			=T/fin

	3. Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=T/fin{v}

	4. Consume "adora"

		T/fin{v} + adora
			Filtering out impossible merge sites...
			Sink "adora" into v because they are inside the same phonological word.
			=T/fin{v,V}

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Luisa-']
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:GEN:F'] into working memory.

	5. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:HUM:HUM'] into working memory.

	6. Consume "def$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:DET:DEF'] into working memory.

	7. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:PER:3'] into working memory.

	8. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:IT', 'PHI:NUM:SG'] into working memory.

	9. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'LANG:IT', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	10. Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[T/fin{v,V} D]

	11. Consume "Luisa"

		[T/fin{v,V} D] + Luisa
			Filtering out impossible merge sites...
			Sink "Luisa" into D because they are inside the same phonological word.
			=[T/fin{v,V} D{N}]

	>>>	Trying candidate spellout structure [T/fin{v,V} D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[T/fin [v{V} D{N}]]
					Target adora in v
					=[T/fin [v [adora D{N}]]]
				=[T/fin [v [adora [D Luisa]]]]
				2. Feature processing:
				=[T/fin [v [adora [D Luisa]]]]
				3. Extraposition:
				=[T/fin [v [adora [D Luisa]]]]
				4. Floater movement reconstruction:
				=[T/fin [v [adora [D Luisa]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [v [adora [D Luisa]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[T/fin [v [adora [D Luisa]]]]
				7. Last resort extraposition:
			= [T/fin [v [adora [D Luisa]]]]
		Checking LF-interface conditions.
			Transferring [T/fin [v [adora [D Luisa]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				adora with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Luisa]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'adora([D Luisa])', 'v(T/fin)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[T/fin [v [adora [D Luisa]]]]
		Grammar: [T/fin [v [adora [D Luisa]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
----------------------------------------------------------------------------------------------------------
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:IT', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:IT', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
adora:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:IT', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:IT', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Luisa:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:IT', 'LF:Luisa', 'PF:Luisa', 'SPEC:A']

T/fin: [TT/fin];  v: [v, TT/fin];  adora: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Luisa: [N, D, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Luisa-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Luisa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "adora-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "adora".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 41
['admire', 'Mary']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['[-0]$', 'T/fin$', 'v$', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'] into working memory.

	1. Consume "T/fin$"
		Adding inflectional features {'PHI:NUM:PL', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:2', 'PHI:PER:1', 'PHI:PER:3', 'PHI:GEN:N', 'PHI:NUM:SG'} to T/fin
			=T/fin

	3. Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=T/fin{v}

	4. Consume "admire"

		T/fin{v} + admire
			Filtering out impossible merge sites...
			Sink "admire" into v because they are inside the same phonological word.
			=T/fin{v,V}

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

	5. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	6. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	7. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	8. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	9. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	10. Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
				An EPP-head "T/fin{v,V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[T/fin{v,V} D]

	11. Consume "Mary"

		[T/fin{v,V} D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[T/fin{v,V} D{N}]

	>>>	Trying candidate spellout structure [T/fin{v,V} D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[T/fin [v{V} D{N}]]
					Target admire in v
					=[T/fin [v [admire D{N}]]]
				=[T/fin [v [admire [D Mary]]]]
				2. Feature processing:
				=[T/fin [v [admire [D Mary]]]]
				3. Extraposition:
				=[T/fin [v [admire [D Mary]]]]
				4. Floater movement reconstruction:
				=[T/fin [v [admire [D Mary]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [v [admire [D Mary]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[T/fin [v [admire [D Mary]]]]
				7. Last resort extraposition:
				An EPP-head "T/fin" lacks specifier.
					Last resort extraposition will be tried on [T/fin [v [admire [D Mary]]]].
					No suitable node for extraposition found. No action was taken.
			= [T/fin [v [admire [D Mary]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:DET:_', 'PHI:GEN:N', 'PHI:GEN:_', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['!COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

T/fin: [TT/fin];  v: [v, TT/fin];  admire: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Mary: [N, D, V, v, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "admire-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "admire".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 42
['admires', 'Mary']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'v$', 'admire-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	1. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin
			=T/fin

	3. Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=T/fin{v}

	4. Consume "admire"

		T/fin{v} + admire
			Filtering out impossible merge sites...
			Sink "admire" into v because they are inside the same phonological word.
			=T/fin{v,V}

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

	5. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	6. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	7. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	8. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	9. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	10. Consume "D"

		T/fin{v,V} + D
			Filtering out impossible merge sites...
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
				An EPP-head "T/fin{v,V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[T/fin{v,V} D]

	11. Consume "Mary"

		[T/fin{v,V} D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[T/fin{v,V} D{N}]

	>>>	Trying candidate spellout structure [T/fin{v,V} D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[T/fin [v{V} D{N}]]
					Target admire in v
					=[T/fin [v [admire D{N}]]]
				=[T/fin [v [admire [D Mary]]]]
				2. Feature processing:
				=[T/fin [v [admire [D Mary]]]]
				3. Extraposition:
				=[T/fin [v [admire [D Mary]]]]
				4. Floater movement reconstruction:
				=[T/fin [v [admire [D Mary]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [v [admire [D Mary]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[T/fin [v [admire [D Mary]]]]
				7. Last resort extraposition:
				An EPP-head "T/fin" lacks specifier.
					Last resort extraposition will be tried on [T/fin [v [admire [D Mary]]]].
					No suitable node for extraposition found. No action was taken.
			= [T/fin [v [admire [D Mary]]]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier.
			LF-interface condition(s) violated
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
admire:['!COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

T/fin: [TT/fin];  v: [v, TT/fin];  admire: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Mary: [N, D, V, v, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "admire-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "admires".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 43
['Pekka', 'sanoo', 'etta', 'ihailee', 'Merjaa']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	5. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	8. Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[D Pekka] T/fin]

	11. Consume "sano-"

		[[D Pekka] T/fin] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
			=[[D Pekka] T/fin{V}]

	12. Consume "etta"

		[[D Pekka] T/fin{V}] + etta
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> sano-]]] etta] due to bad left branch.
			Exploring solution number (1) =[T/fin{V} etta]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} etta]]

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v$', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	13. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	14. Consume "T/fin"

		[[D Pekka] [T/fin{V} etta]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- etta]]]] T/fin] due to bad left branch.
				Reject [[T/fin [sano- etta]] T/fin] due to bad left branch.
			Exploring solution number (1) =[etta T/fin]
				1. Head movement reconstruction:
				=etta
				2. Feature processing:
				=etta
				3. Extraposition:
				=etta
				4. Floater movement reconstruction:
				=etta
				5. Phrasal movement reconstruction:
				=etta
				6. Agreement reconstruction:
				=etta
				7. Last resort extraposition:
				etta probing for CAT:T/fin failed.
				"etta" lacks complement.
					Last resort extraposition will be tried on etta.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} [etta T/fin]]]

	15. Consume "v"

		[[D Pekka] [T/fin{V} [etta T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta T/fin{v}]]]

	16. Consume "ihaile-"

		[[D Pekka] [T/fin{V} [etta T/fin{v}]]] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into v because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta T/fin{v,V}]]]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'par$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	17. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	18. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	19. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	20. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	21. Consume "par$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

	22. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'LANG:FI', 'PHI:NUM:SG'} to D

	23. Consume "D"

		[[D Pekka] [T/fin{V} [etta T/fin{v,V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				ihaile- (ihaile-) is missing complement D
				Avoid [<D Pekka> [T/fin [<D Pekka> [sano- [etta [T/fin [v ihaile-]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				ihaile- (ihaile-) is missing complement D
				Avoid [T/fin [sano- [etta [T/fin [v ihaile-]]]]] as left branch because it constitutes illicit structure.
				ihaile- (ihaile-) is missing complement D
				Avoid [etta [T/fin [v ihaile-]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D Pekka] [T/fin{V} [etta T/fin{v,V}]]] + D = -197]
				[T/fin{V} [etta T/fin{v,V}]] + D = -194]
				[etta T/fin{v,V}] + D = -94]
				T/fin{v,V} + D = 166]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[etta T/fin{v,V}]; D]
			3. [[T/fin{V} [etta T/fin{v,V}]]; D]
			4. [[[D Pekka] [T/fin{V} [etta T/fin{v,V}]]]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} [etta [T/fin{v,V} D]]]]

	24. Consume "Merja-"

		[[D Pekka] [T/fin{V} [etta [T/fin{v,V} D]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta [T/fin{v,V} D{N}]]]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{V} [etta [T/fin{v,V} D{N}]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [etta [T/fin{v,V} D{N}]]]]]
					Target v{V} in T/fin
					=[[D Pekka] [T/fin [sano- [etta [T/fin [v{V} D{N}]]]]]]
					Target ihaile- in v
					=[[D Pekka] [T/fin [sano- [etta [T/fin [v [ihaile- D{N}]]]]]]]
				=[[D Pekka] [T/fin [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:51 [T/fin [<__>:51 [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]
				=[<D Pekka>:51 [T/fin [<__>:51 [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:51 [T/fin [<__>:51 [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:51 [T/fin [<__>:51 [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]
				7. Last resort extraposition:
			= [<D Pekka> [T/fin [<D Pekka> [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]
		Checking LF-interface conditions.
			Transferring [<D Pekka>:51 [T/fin [<__>:51 [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]] into the conceptual-intentional system...
				sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. <D Pekka> 3. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'T/fin(<D Pekka>)', 'ihaile-([D Merja-])', 'sano-(<D Pekka>)', 'v(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<__>:1 [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [ [TT/fin [v [V [D N]]]]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  etta: [, V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  v: [v, TT/fin, , V, TT/fin];  ihaile-: [V, v, TT/fin, , V, TT/fin];  D: [D, V, v, TT/fin, , V, TT/fin];  Merja-: [N, D, V, v, TT/fin, , V, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[etta T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[etta [T/fin [v ihaile-]]]
				2. Feature processing:
				=[etta [T/fin [v ihaile-]]]
				3. Extraposition:
				=[etta [T/fin [v ihaile-]]]
				4. Floater movement reconstruction:
				=[etta [T/fin [v ihaile-]]]
				5. Phrasal movement reconstruction:
				=[etta [T/fin [v ihaile-]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[etta [T/fin [v ihaile-]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [etta [T/fin [v ihaile-]]].
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} [[etta [T/fin [v ihaile-]]] D]]]

	25. Consume "Merja-"

		[[D Pekka] [T/fin{V} [[etta [T/fin [v ihaile-]]] D]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [[etta [T/fin [v ihaile-]]] D{N}]]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{V} [[etta [T/fin [v ihaile-]]] D{N}]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [[etta [T/fin [v ihaile-]]] D{N}]]]]
				=[[D Pekka] [T/fin [sano- [[etta [T/fin [v ihaile-]]] [D Merja-]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [sano- [[etta [T/fin [v ihaile-]]] [D Merja-]]]]]
				3. Extraposition:
					sano- cannot select D
					Extraposition will be tried on [D Merja-].
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
				=[[D Pekka] [T/fin [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:52 [T/fin [<__>:52 [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]]
				=[<D Pekka>:52 [T/fin [<__>:52 [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:52 [T/fin [<__>:52 [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[<D Pekka>:52 [T/fin [<__>:52 [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [<D Pekka>:52 [T/fin [<__>:52 [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]].
					No suitable node for extraposition found. No action was taken.
			= [<D Pekka> [T/fin [<D Pekka> [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]]
		Checking LF-interface conditions.
				ihaile- (ihaile-) is missing complement D
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  etta: [, V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  v: [v, TT/fin, , V, TT/fin];  ihaile-: [V, v, TT/fin, , V, TT/fin];  D: [D, V, TT/fin];  Merja-: [N, D, V, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[T/fin{V} [etta T/fin{v,V}]] D]
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[T/fin [sano- [etta T/fin{v,V}]]]
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				2. Feature processing:
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				3. Extraposition:
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				4. Floater movement reconstruction:
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [T/fin [sano- [etta [T/fin [v ihaile-]]]]].
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] D]]

	26. Consume "Merja-"

		[[D Pekka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[D Pekka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] D{N}]]

	>>>	Trying candidate spellout structure [[D Pekka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] D{N}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[D Pekka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] [D Merja-]]]
				2. Feature processing:
				=[[D Pekka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] [D Merja-]]]
				3. Extraposition:
				=[[D Pekka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] [D Merja-]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					D at the right failed to tail [-VAL][ARG]
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
					Dropping <D Merja->
					 = [[D Pekka] [[T/fin [sano- [<__>:53 [etta [T/fin [v ihaile-]]]]]] <D Merja->:53]]
					Dropping <__>:53
					 = [[D Pekka] [[T/fin [sano- [<__>:53 [etta [T/fin [v [<__>:53 ihaile-]]]]]]] <D Merja->:53]]
				=[[D Pekka] [[T/fin [sano- [<__>:53 [etta [T/fin [v [<__>:53 ihaile-]]]]]]] <D Merja->:53]]
				5. Phrasal movement reconstruction:
					[D Pekka] will undergo A-reconstruction.
				=[[D Pekka]:17 [[T/fin [__:17 [sano- [<__>:53 [etta [T/fin [v [<__>:53 ihaile-]]]]]]]] <D Merja->:53]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[D Pekka]:17 [[T/fin [__:17 [sano- [<__>:53 [etta [T/fin [v [<__>:53 ihaile-]]]]]]]] <D Merja->:53]]
				7. Last resort extraposition:
				<__>:53 has no thematic role at the SPEC of ihaile-
					Last resort extraposition will be tried on [[D Pekka]:17 [[T/fin [__:17 [sano- [<__>:53 [etta [T/fin [v [<__>:53 ihaile-]]]]]]]] <D Merja->:53]].
					No suitable node for extraposition found. No action was taken.
			= [[D Pekka] [[T/fin [[D Pekka] [sano- [<D Merja-> [etta [T/fin [v [<D Merja-> ihaile-]]]]]]]] <D Merja->]]
		Checking LF-interface conditions.
				<__>:53 has no thematic role at the SPEC of ihaile-
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  __: [D, V, TT/fin];  __: [N, D, V, TT/fin];  etta: [, V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  v: [v, TT/fin, , V, TT/fin];  __: [D, v, TT/fin, , V, TT/fin];  __: [N, D, v, TT/fin, , V, TT/fin];  ihaile-: [V, v, TT/fin, , V, TT/fin];  D: [D];  Merja-: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (4) =[[[D Pekka] [T/fin{V} [etta T/fin{v,V}]]] D]
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [etta T/fin{v,V}]]]]
				=[[D Pekka] [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:55 [T/fin [<__>:55 [sano- [etta [T/fin [v ihaile-]]]]]]]
				=[<D Pekka>:55 [T/fin [<__>:55 [sano- [etta [T/fin [v ihaile-]]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:55 [T/fin [<__>:55 [sano- [etta [T/fin [v ihaile-]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:55 [T/fin [<__>:55 [sano- [etta [T/fin [v ihaile-]]]]]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [<D Pekka>:55 [T/fin [<__>:55 [sano- [etta [T/fin [v ihaile-]]]]]]].
					No suitable node for extraposition found. No action was taken.
			=[[<D Pekka>:55 [T/fin [<__>:55 [sano- [etta [T/fin [v ihaile-]]]]]]] D]

	27. Consume "Merja-"

		[[<D Pekka> [T/fin [<D Pekka> [sano- [etta [T/fin [v ihaile-]]]]]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[<D Pekka>:55 [T/fin [<__>:55 [sano- [etta [T/fin [v ihaile-]]]]]]] D{N}]

	>>>	Trying candidate spellout structure [[<D Pekka> [T/fin [<D Pekka> [sano- [etta [T/fin [v ihaile-]]]]]]] D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[<D Pekka>:55 [T/fin [<__>:55 [sano- [etta [T/fin [v ihaile-]]]]]]] [D Merja-]]
				2. Feature processing:
				=[[<D Pekka>:55 [T/fin [<__>:55 [sano- [etta [T/fin [v ihaile-]]]]]]] [D Merja-]]
				3. Extraposition:
				=[[<D Pekka>:55 [T/fin [<__>:55 [sano- [etta [T/fin [v ihaile-]]]]]]] [D Merja-]]
				4. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
					Dropping <D Merja->
					 = [[<D Pekka>:55 [T/fin [<__>:55 [sano- [<__>:56 [etta [T/fin [v ihaile-]]]]]]]] <D Merja->:56]
					Dropping <__>:56
					 = [[<D Pekka>:55 [T/fin [<__>:55 [sano- [<__>:56 [etta [T/fin [v [<__>:56 ihaile-]]]]]]]]] <D Merja->:56]
				=[[<D Pekka>:55 [T/fin [<__>:55 [sano- [<__>:56 [etta [T/fin [v [<__>:56 ihaile-]]]]]]]]] <D Merja->:56]
				5. Phrasal movement reconstruction:
				=[[<D Pekka>:55 [T/fin [<__>:55 [sano- [<__>:56 [etta [T/fin [v [<__>:56 ihaile-]]]]]]]]] <D Merja->:56]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[<D Pekka>:55 [T/fin [<__>:55 [sano- [<__>:56 [etta [T/fin [v [<__>:56 ihaile-]]]]]]]]] <D Merja->:56]
				7. Last resort extraposition:
				<__>:56 has no thematic role at the SPEC of ihaile-
					Last resort extraposition will be tried on [[<D Pekka>:55 [T/fin [<__>:55 [sano- [<__>:56 [etta [T/fin [v [<__>:56 ihaile-]]]]]]]]] <D Merja->:56].
					No suitable node for extraposition found. No action was taken.
			= [[<D Pekka> [T/fin [<D Pekka> [sano- [<D Merja-> [etta [T/fin [v [<D Merja-> ihaile-]]]]]]]]] <D Merja->]
		Checking LF-interface conditions.
				<__>:56 has no thematic role at the SPEC of ihaile-
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  __: [D, V, TT/fin];  __: [N, D, V, TT/fin];  etta: [, V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  v: [v, TT/fin, , V, TT/fin];  __: [D, v, TT/fin, , V, TT/fin];  __: [N, D, v, TT/fin, , V, TT/fin];  ihaile-: [V, v, TT/fin, , V, TT/fin];  D: [D];  Merja-: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "par$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihailee".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "etta".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sano-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sanoo".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 44
['Mina', 'sanon', 'etta', 'ihailee', 'Merjaa']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None
			=?

		Next word contains multiple morphemes ['[-n]$', 'T/fin$', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

	2. Consume "T/fin$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:PER:1', 'PHI:DET:DEF', 'LANG:FI', 'PHI:NUM:SG', '-'} to T/fin

	3. Consume "T/fin"

		? + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[? T/fin]
				1. Head movement reconstruction:
				=?
				2. Feature processing:
				=?
				3. Extraposition:
				=?
				4. Floater movement reconstruction:
				=?
				5. Phrasal movement reconstruction:
				=?
				6. Agreement reconstruction:
				=?
				7. Last resort extraposition:
			=[? T/fin]

	4. Consume "sano-"

		[? T/fin] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
			=[? T/fin{V}]

	5. Consume "etta"

		[? T/fin{V}] + etta
			Filtering out impossible merge sites...
				Reject [[? [T/fin sano-]] etta] due to bad left branch.
			Exploring solution number (1) =[T/fin{V} etta]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[? [T/fin{V} etta]]

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v$', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	6. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	7. Consume "T/fin"

		[? [T/fin{V} etta]] + T/fin
			Filtering out impossible merge sites...
				Reject [[? [T/fin [sano- etta]]] T/fin] due to bad left branch.
				Reject [[T/fin [sano- etta]] T/fin] due to bad left branch.
			Exploring solution number (1) =[etta T/fin]
				1. Head movement reconstruction:
				=etta
				2. Feature processing:
				=etta
				3. Extraposition:
				=etta
				4. Floater movement reconstruction:
				=etta
				5. Phrasal movement reconstruction:
				=etta
				6. Agreement reconstruction:
				=etta
				7. Last resort extraposition:
				etta probing for CAT:T/fin failed.
				"etta" lacks complement.
					Last resort extraposition will be tried on etta.
					No suitable node for extraposition found. No action was taken.
			=[? [T/fin{V} [etta T/fin]]]

	8. Consume "v"

		[? [T/fin{V} [etta T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[? [T/fin{V} [etta T/fin{v}]]]

	9. Consume "ihaile-"

		[? [T/fin{V} [etta T/fin{v}]]] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into v because they are inside the same phonological word.
			=[? [T/fin{V} [etta T/fin{v,V}]]]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'par$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	10. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	11. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	12. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	13. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	14. Consume "par$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

	15. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'LANG:FI', 'PHI:NUM:SG'} to D

	16. Consume "D"

		[? [T/fin{V} [etta T/fin{v,V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				ihaile- (ihaile-) is missing complement D
				Avoid [? [T/fin [sano- [etta [T/fin [v ihaile-]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				ihaile- (ihaile-) is missing complement D
				Avoid [T/fin [sano- [etta [T/fin [v ihaile-]]]]] as left branch because it constitutes illicit structure.
				ihaile- (ihaile-) is missing complement D
				Avoid [etta [T/fin [v ihaile-]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[? [T/fin{V} [etta T/fin{v,V}]]] + D = -98]
				[T/fin{V} [etta T/fin{v,V}]] + D = -194]
				[etta T/fin{v,V}] + D = -94]
				T/fin{v,V} + D = 166]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[etta T/fin{v,V}]; D]
			3. [[? [T/fin{V} [etta T/fin{v,V}]]]; D]
			4. [[T/fin{V} [etta T/fin{v,V}]]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[? [T/fin{V} [etta [T/fin{v,V} D]]]]

	17. Consume "Merja-"

		[? [T/fin{V} [etta [T/fin{v,V} D]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[? [T/fin{V} [etta [T/fin{v,V} D{N}]]]]

	>>>	Trying candidate spellout structure [? [T/fin{V} [etta [T/fin{v,V} D{N}]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[? [T/fin [sano- [etta [T/fin{v,V} D{N}]]]]]
					Target v{V} in T/fin
					=[? [T/fin [sano- [etta [T/fin [v{V} D{N}]]]]]]
					Target ihaile- in v
					=[? [T/fin [sano- [etta [T/fin [v [ihaile- D{N}]]]]]]]
				=[? [T/fin [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]
				2. Feature processing:
				=[? [T/fin [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]
				3. Extraposition:
				=[? [T/fin [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]
				4. Floater movement reconstruction:
				=[? [T/fin [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]
				5. Phrasal movement reconstruction:
				=[? [T/fin [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:1 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[? [T/fin [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]
				7. Last resort extraposition:
			= [? [T/fin [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]
		Checking LF-interface conditions.
			Transferring [? [T/fin [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]] into the conceptual-intentional system...
				sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					No antecedent found, LF-object crashes.
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. T/fin )
				Semantic interpretation failed, transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[etta T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[etta [T/fin [v ihaile-]]]
				2. Feature processing:
				=[etta [T/fin [v ihaile-]]]
				3. Extraposition:
				=[etta [T/fin [v ihaile-]]]
				4. Floater movement reconstruction:
				=[etta [T/fin [v ihaile-]]]
				5. Phrasal movement reconstruction:
				=[etta [T/fin [v ihaile-]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[etta [T/fin [v ihaile-]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [etta [T/fin [v ihaile-]]].
					No suitable node for extraposition found. No action was taken.
			=[? [T/fin{V} [[etta [T/fin [v ihaile-]]] D]]]

	18. Consume "Merja-"

		[? [T/fin{V} [[etta [T/fin [v ihaile-]]] D]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[? [T/fin{V} [[etta [T/fin [v ihaile-]]] D{N}]]]

	>>>	Trying candidate spellout structure [? [T/fin{V} [[etta [T/fin [v ihaile-]]] D{N}]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[? [T/fin [sano- [[etta [T/fin [v ihaile-]]] D{N}]]]]
				=[? [T/fin [sano- [[etta [T/fin [v ihaile-]]] [D Merja-]]]]]
				2. Feature processing:
				=[? [T/fin [sano- [[etta [T/fin [v ihaile-]]] [D Merja-]]]]]
				3. Extraposition:
					sano- cannot select D
					Extraposition will be tried on [D Merja-].
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
				=[? [T/fin [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]
				4. Floater movement reconstruction:
				=[? [T/fin [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]
				5. Phrasal movement reconstruction:
				=[? [T/fin [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:1 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[? [T/fin [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [? [T/fin [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]].
					No suitable node for extraposition found. No action was taken.
			= [? [T/fin [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]
		Checking LF-interface conditions.
				ihaile- (ihaile-) is missing complement D
			LF-interface condition(s) violated
?:['CAT:?', 'PF:?']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

?: [];  T/fin: [TT/fin, ];  sano-: [V, TT/fin, ];  etta: [, V, TT/fin, ];  T/fin: [TT/fin, , V, TT/fin, ];  v: [v, TT/fin, , V, TT/fin, ];  ihaile-: [V, v, TT/fin, , V, TT/fin, ];  D: [D, V, TT/fin, ];  Merja-: [N, D, V, TT/fin, ];  

		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[? [T/fin{V} [etta T/fin{v,V}]]] D]
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[? [T/fin [sano- [etta T/fin{v,V}]]]]
				=[? [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]
				2. Feature processing:
				=[? [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]
				3. Extraposition:
				=[? [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]
				4. Floater movement reconstruction:
				=[? [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]
				5. Phrasal movement reconstruction:
				=[? [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:1 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[? [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [? [T/fin [sano- [etta [T/fin [v ihaile-]]]]]].
					No suitable node for extraposition found. No action was taken.
			=[[? [T/fin [sano- [etta [T/fin [v ihaile-]]]]]] D]

	19. Consume "Merja-"

		[[? [T/fin [sano- [etta [T/fin [v ihaile-]]]]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[? [T/fin [sano- [etta [T/fin [v ihaile-]]]]]] D{N}]

	>>>	Trying candidate spellout structure [[? [T/fin [sano- [etta [T/fin [v ihaile-]]]]]] D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[? [T/fin [sano- [etta [T/fin [v ihaile-]]]]]] [D Merja-]]
				2. Feature processing:
				=[[? [T/fin [sano- [etta [T/fin [v ihaile-]]]]]] [D Merja-]]
				3. Extraposition:
				=[[? [T/fin [sano- [etta [T/fin [v ihaile-]]]]]] [D Merja-]]
				4. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
					Dropping <D Merja->
					 = [[? [T/fin [sano- [<__>:58 [etta [T/fin [v ihaile-]]]]]]] <D Merja->:58]
					Dropping <__>:58
					 = [[? [T/fin [sano- [<__>:58 [etta [T/fin [v [<__>:58 ihaile-]]]]]]]] <D Merja->:58]
				=[[? [T/fin [sano- [<__>:58 [etta [T/fin [v [<__>:58 ihaile-]]]]]]]] <D Merja->:58]
				5. Phrasal movement reconstruction:
				=[[? [T/fin [sano- [<__>:58 [etta [T/fin [v [<__>:58 ihaile-]]]]]]]] <D Merja->:58]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[? [T/fin [sano- [<__>:58 [etta [T/fin [v [<__>:58 ihaile-]]]]]]]] <D Merja->:58]
				7. Last resort extraposition:
				<__>:58 has no thematic role at the SPEC of ihaile-
					Last resort extraposition will be tried on [[? [T/fin [sano- [<__>:58 [etta [T/fin [v [<__>:58 ihaile-]]]]]]]] <D Merja->:58].
					No suitable node for extraposition found. No action was taken.
			= [[? [T/fin [sano- [<D Merja-> [etta [T/fin [v [<D Merja-> ihaile-]]]]]]]] <D Merja->]
		Checking LF-interface conditions.
				<__>:58 has no thematic role at the SPEC of ihaile-
			LF-interface condition(s) violated
?:['CAT:?', 'PF:?']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

?: [];  T/fin: [TT/fin, ];  sano-: [V, TT/fin, ];  __: [D, V, TT/fin, ];  __: [N, D, V, TT/fin, ];  etta: [, V, TT/fin, ];  T/fin: [TT/fin, , V, TT/fin, ];  v: [v, TT/fin, , V, TT/fin, ];  __: [D, v, TT/fin, , V, TT/fin, ];  __: [N, D, v, TT/fin, , V, TT/fin, ];  ihaile-: [V, v, TT/fin, , V, TT/fin, ];  D: [D];  Merja-: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (4) =[[T/fin{V} [etta T/fin{v,V}]] D]
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[T/fin [sano- [etta T/fin{v,V}]]]
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				2. Feature processing:
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				3. Extraposition:
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				4. Floater movement reconstruction:
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:1 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [T/fin [sano- [etta [T/fin [v ihaile-]]]]].
					No suitable node for extraposition found. No action was taken.
			=[? [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] D]]

	20. Consume "Merja-"

		[? [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[? [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] D{N}]]

	>>>	Trying candidate spellout structure [? [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] D{N}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[? [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] [D Merja-]]]
				2. Feature processing:
				=[? [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] [D Merja-]]]
				3. Extraposition:
				=[? [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] [D Merja-]]]
				4. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
					Dropping <D Merja->
					 = [? [[T/fin [sano- [<__>:60 [etta [T/fin [v ihaile-]]]]]] <D Merja->:60]]
					Dropping <__>:60
					 = [? [[T/fin [sano- [<__>:60 [etta [T/fin [v [<__>:60 ihaile-]]]]]]] <D Merja->:60]]
				=[? [[T/fin [sano- [<__>:60 [etta [T/fin [v [<__>:60 ihaile-]]]]]]] <D Merja->:60]]
				5. Phrasal movement reconstruction:
				=[? [[T/fin [sano- [<__>:60 [etta [T/fin [v [<__>:60 ihaile-]]]]]]] <D Merja->:60]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[? [[T/fin [sano- [<__>:60 [etta [T/fin [v [<__>:60 ihaile-]]]]]]] <D Merja->:60]]
				7. Last resort extraposition:
				<__>:60 has no thematic role at the SPEC of ihaile-
					Last resort extraposition will be tried on [? [[T/fin [sano- [<__>:60 [etta [T/fin [v [<__>:60 ihaile-]]]]]]] <D Merja->:60]].
					No suitable node for extraposition found. No action was taken.
			= [? [[T/fin [sano- [<D Merja-> [etta [T/fin [v [<D Merja-> ihaile-]]]]]]] <D Merja->]]
		Checking LF-interface conditions.
				<__>:60 has no thematic role at the SPEC of ihaile-
			LF-interface condition(s) violated
?:['CAT:?', 'PF:?']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

?: [];  T/fin: [TT/fin, ];  sano-: [V, TT/fin, ];  __: [D, V, TT/fin, ];  __: [N, D, V, TT/fin, ];  etta: [, V, TT/fin, ];  T/fin: [TT/fin, , V, TT/fin, ];  v: [v, TT/fin, , V, TT/fin, ];  __: [D, v, TT/fin, , V, TT/fin, ];  __: [N, D, v, TT/fin, , V, TT/fin, ];  ihaile-: [V, v, TT/fin, , V, TT/fin, ];  D: [D, ];  Merja-: [N, D, ];  

		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "par$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihailee".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "etta".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sano-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sanon".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mina".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 45
['Pekka', 'sanoo', 'etta', 'Jukka', 'sanoo', 'etta', 'ihailee', 'Merjaa']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	5. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	8. Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[D Pekka] T/fin]

	11. Consume "sano-"

		[[D Pekka] T/fin] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
			=[[D Pekka] T/fin{V}]

	12. Consume "etta"

		[[D Pekka] T/fin{V}] + etta
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> sano-]]] etta] due to bad left branch.
			Exploring solution number (1) =[T/fin{V} etta]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} etta]]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Jukka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	13. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	14. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	15. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	16. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	17. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	18. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D

	19. Consume "D"

		[[D Pekka] [T/fin{V} etta]] + D
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- etta]]]] D] due to bad left branch.
				Reject [[T/fin [sano- etta]] D] due to bad left branch.
			Exploring solution number (1) =[etta D]
				1. Head movement reconstruction:
				=etta
				2. Feature processing:
				=etta
				3. Extraposition:
				=etta
				4. Floater movement reconstruction:
				=etta
				5. Phrasal movement reconstruction:
				=etta
				6. Agreement reconstruction:
				=etta
				7. Last resort extraposition:
				etta probing for CAT:T/fin failed.
				"etta" lacks complement.
					Last resort extraposition will be tried on etta.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} [etta D]]]

	20. Consume "Jukka"

		[[D Pekka] [T/fin{V} [etta D]]] + Jukka
			Filtering out impossible merge sites...
			Sink "Jukka" into D because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta D{N}]]]

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	21. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	22. Consume "T/fin"

		[[D Pekka] [T/fin{V} [etta D{N}]]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- [etta <D Jukka>]]]]] T/fin] due to bad left branch.
				Reject [[T/fin [sano- [etta <D Jukka>]]] T/fin] due to bad left branch.
				Reject [[etta <D Jukka>] T/fin] due to bad left branch.
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Jukka].
				=[D Jukka]
				2. Feature processing:
				=[D Jukka]
				3. Extraposition:
				=[D Jukka]
				4. Floater movement reconstruction:
				=[D Jukka]
				5. Phrasal movement reconstruction:
				=[D Jukka]
				6. Agreement reconstruction:
				=[D Jukka]
				7. Last resort extraposition:
			=[[D Pekka] [T/fin{V} [etta [[D Jukka] T/fin]]]]

	23. Consume "sano-"

		[[D Pekka] [T/fin{V} [etta [[D Jukka] T/fin]]]] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta [[D Jukka] T/fin{V}]]]]

	24. Consume "etta"

		[[D Pekka] [T/fin{V} [etta [[D Jukka] T/fin{V}]]]] + etta
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- [etta [<D Jukka> [T/fin [<D Jukka> sano-]]]]]]]] etta] due to bad left branch.
				Reject [[T/fin [sano- [etta [<D Jukka> [T/fin [<D Jukka> sano-]]]]]] etta] due to bad left branch.
				Reject [[etta [<D Jukka> [T/fin [<D Jukka> sano-]]]] etta] due to bad left branch.
				Reject [[<D Jukka> [T/fin [<D Jukka> sano-]]] etta] due to bad left branch.
			Exploring solution number (1) =[T/fin{V} etta]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} [etta [[D Jukka] [T/fin{V} etta]]]]]

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v$', 'ihaile-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	25. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	26. Consume "T/fin"

		[[D Pekka] [T/fin{V} [etta [[D Jukka] [T/fin{V} etta]]]]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- [etta [<D Jukka> [T/fin [<D Jukka> [sano- etta]]]]]]]]] T/fin] due to bad left branch.
				Reject [[T/fin [sano- [etta [<D Jukka> [T/fin [<D Jukka> [sano- etta]]]]]]] T/fin] due to bad left branch.
				Reject [[etta [<D Jukka> [T/fin [<D Jukka> [sano- etta]]]]] T/fin] due to bad left branch.
				Reject [[<D Jukka> [T/fin [<D Jukka> [sano- etta]]]] T/fin] due to bad left branch.
				Reject [[T/fin [sano- etta]] T/fin] due to bad left branch.
			Exploring solution number (1) =[etta T/fin]
				1. Head movement reconstruction:
				=etta
				2. Feature processing:
				=etta
				3. Extraposition:
				=etta
				4. Floater movement reconstruction:
				=etta
				5. Phrasal movement reconstruction:
				=etta
				6. Agreement reconstruction:
				=etta
				7. Last resort extraposition:
				etta probing for CAT:T/fin failed.
				"etta" lacks complement.
					Last resort extraposition will be tried on etta.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} [etta [[D Jukka] [T/fin{V} [etta T/fin]]]]]]

	27. Consume "v"

		[[D Pekka] [T/fin{V} [etta [[D Jukka] [T/fin{V} [etta T/fin]]]]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta [[D Jukka] [T/fin{V} [etta T/fin{v}]]]]]]

	28. Consume "ihaile-"

		[[D Pekka] [T/fin{V} [etta [[D Jukka] [T/fin{V} [etta T/fin{v}]]]]]] + ihaile-
			Filtering out impossible merge sites...
			Sink "ihaile-" into v because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta [[D Jukka] [T/fin{V} [etta T/fin{v,V}]]]]]]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'par$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	29. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	30. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	31. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	32. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	33. Consume "par$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

	34. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'LANG:FI', 'PHI:NUM:SG'} to D

	35. Consume "D"

		[[D Pekka] [T/fin{V} [etta [[D Jukka] [T/fin{V} [etta T/fin{v,V}]]]]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				ihaile- (ihaile-) is missing complement D
				Avoid [<D Pekka> [T/fin [<D Pekka> [sano- [etta [<D Jukka> [T/fin [<D Jukka> [sano- [etta [T/fin [v ihaile-]]]]]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				ihaile- (ihaile-) is missing complement D
				Avoid [T/fin [sano- [etta [<D Jukka> [T/fin [<D Jukka> [sano- [etta [T/fin [v ihaile-]]]]]]]]]] as left branch because it constitutes illicit structure.
				ihaile- (ihaile-) is missing complement D
				Avoid [etta [<D Jukka> [T/fin [<D Jukka> [sano- [etta [T/fin [v ihaile-]]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				ihaile- (ihaile-) is missing complement D
				Avoid [<D Jukka> [T/fin [<D Jukka> [sano- [etta [T/fin [v ihaile-]]]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				ihaile- (ihaile-) is missing complement D
				Avoid [T/fin [sano- [etta [T/fin [v ihaile-]]]]] as left branch because it constitutes illicit structure.
				ihaile- (ihaile-) is missing complement D
				Avoid [etta [T/fin [v ihaile-]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [ihaile- D] due to complement selection.
				[[D Pekka] [T/fin{V} [etta [[D Jukka] [T/fin{V} [etta T/fin{v,V}]]]]]] + D = -197]
				[T/fin{V} [etta [[D Jukka] [T/fin{V} [etta T/fin{v,V}]]]]] + D = -194]
				[etta [[D Jukka] [T/fin{V} [etta T/fin{v,V}]]]] + D = -94]
				[[D Jukka] [T/fin{V} [etta T/fin{v,V}]]] + D = -188]
				[T/fin{V} [etta T/fin{v,V}]] + D = -185]
				[etta T/fin{v,V}] + D = -88]
				T/fin{v,V} + D = 178]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[etta T/fin{v,V}]; D]
			3. [[etta [[D Jukka] [T/fin{V} [etta T/fin{v,V}]]]]; D]
			4. [[T/fin{V} [etta T/fin{v,V}]]; D]
			5. [[[D Jukka] [T/fin{V} [etta T/fin{v,V}]]]; D]
			6. [[T/fin{V} [etta [[D Jukka] [T/fin{V} [etta T/fin{v,V}]]]]]; D]
			7. [[[D Pekka] [T/fin{V} [etta [[D Jukka] [T/fin{V} [etta T/fin{v,V}]]]]]]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} [etta [[D Jukka] [T/fin{V} [etta [T/fin{v,V} D]]]]]]]

	36. Consume "Merja-"

		[[D Pekka] [T/fin{V} [etta [[D Jukka] [T/fin{V} [etta [T/fin{v,V} D]]]]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta [[D Jukka] [T/fin{V} [etta [T/fin{v,V} D{N}]]]]]]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{V} [etta [[D Jukka] [T/fin{V} [etta [T/fin{v,V} D{N}]]]]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [etta [[D Jukka] [T/fin{V} [etta [T/fin{v,V} D{N}]]]]]]]]
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [etta [[D Jukka] [T/fin [sano- [etta [T/fin{v,V} D{N}]]]]]]]]]
					Target v{V} in T/fin
					=[[D Pekka] [T/fin [sano- [etta [[D Jukka] [T/fin [sano- [etta [T/fin [v{V} D{N}]]]]]]]]]]
					Target ihaile- in v
					=[[D Pekka] [T/fin [sano- [etta [[D Jukka] [T/fin [sano- [etta [T/fin [v [ihaile- D{N}]]]]]]]]]]]
				=[[D Pekka] [T/fin [sano- [etta [[D Jukka] [T/fin [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [sano- [etta [[D Jukka] [T/fin [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [sano- [etta [[D Jukka] [T/fin [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:85 [T/fin [<__>:85 [sano- [etta [[D Jukka] [T/fin [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]]]]]
					[D Jukka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Jukka]
					<D Jukka> was made an adjunct.
					<D Jukka> is transferred to LF as a phase.
					 = [<D Pekka>:85 [T/fin [<__>:85 [sano- [etta [<D Jukka>:86 [T/fin [<__>:86 [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]]]]]]
				=[<D Pekka>:85 [T/fin [<__>:85 [sano- [etta [<D Jukka>:86 [T/fin [<__>:86 [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:85 [T/fin [<__>:85 [sano- [etta [<D Jukka>:86 [T/fin [<__>:86 [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:85 [T/fin [<__>:85 [sano- [etta [<D Jukka>:86 [T/fin [<__>:86 [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]]]]]]
				7. Last resort extraposition:
			= [<D Pekka> [T/fin [<D Pekka> [sano- [etta [<D Jukka> [T/fin [<D Jukka> [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]]]]]]
		Checking LF-interface conditions.
			Transferring [<D Pekka>:85 [T/fin [<__>:85 [sano- [etta [<D Jukka>:86 [T/fin [<__>:86 [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]]]]]] into the conceptual-intentional system...
				sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Jukka>    (alternatives: 2. T/fin 3. <D Pekka> 4. T/fin )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. <D Jukka>    (alternatives: 2. T/fin 3. <D Pekka> 4. T/fin )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Jukka>    (alternatives: 2. T/fin 3. <D Pekka> 4. T/fin )
				ihaile- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. <D Jukka> 3. T/fin 4. <D Pekka> 5. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'T/fin(<D Jukka>)', 'ihaile-([D Merja-])', 'sano-(<D Jukka>)', 'sano-(<D Pekka>)', 'v(<D Jukka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [sano- [etta [<D Jukka> [T/fin [<D Jukka> [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<__>:1 [sano- [etta [<D Jukka>:2 [T/fin [<__>:2 [sano- [etta [T/fin [v [ihaile- [D Merja-]]]]]]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [ [DP:2 [TT/fin [__:2 [V [ [TT/fin [v [V [D N]]]]]]]]]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Jukka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Jukka', 'PF:Jukka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Jukka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Jukka', 'PF:Jukka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  etta: [, V, TT/fin];  D: [D, , V, TT/fin];  Jukka: [N, D, , V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  __: [D, TT/fin, , V, TT/fin];  __: [N, D, TT/fin, , V, TT/fin];  sano-: [V, TT/fin, , V, TT/fin];  etta: [, V, TT/fin, , V, TT/fin];  T/fin: [TT/fin, , V, TT/fin, , V, TT/fin];  v: [v, TT/fin, , V, TT/fin, , V, TT/fin];  ihaile-: [V, v, TT/fin, , V, TT/fin, , V, TT/fin];  D: [D, V, v, TT/fin, , V, TT/fin, , V, TT/fin];  Merja-: [N, D, V, v, TT/fin, , V, TT/fin, , V, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[etta T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[etta [T/fin [v ihaile-]]]
				2. Feature processing:
				=[etta [T/fin [v ihaile-]]]
				3. Extraposition:
				=[etta [T/fin [v ihaile-]]]
				4. Floater movement reconstruction:
				=[etta [T/fin [v ihaile-]]]
				5. Phrasal movement reconstruction:
				=[etta [T/fin [v ihaile-]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[etta [T/fin [v ihaile-]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [etta [T/fin [v ihaile-]]].
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} [etta [[D Jukka] [T/fin{V} [[etta [T/fin [v ihaile-]]] D]]]]]]

	37. Consume "Merja-"

		[[D Pekka] [T/fin{V} [etta [[D Jukka] [T/fin{V} [[etta [T/fin [v ihaile-]]] D]]]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta [[D Jukka] [T/fin{V} [[etta [T/fin [v ihaile-]]] D{N}]]]]]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{V} [etta [[D Jukka] [T/fin{V} [[etta [T/fin [v ihaile-]]] D{N}]]]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [etta [[D Jukka] [T/fin{V} [[etta [T/fin [v ihaile-]]] D{N}]]]]]]]
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [etta [[D Jukka] [T/fin [sano- [[etta [T/fin [v ihaile-]]] D{N}]]]]]]]]
				=[[D Pekka] [T/fin [sano- [etta [[D Jukka] [T/fin [sano- [[etta [T/fin [v ihaile-]]] [D Merja-]]]]]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [sano- [etta [[D Jukka] [T/fin [sano- [[etta [T/fin [v ihaile-]]] [D Merja-]]]]]]]]]
				3. Extraposition:
					sano- cannot select D
					Extraposition will be tried on [D Merja-].
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
				=[[D Pekka] [T/fin [sano- [etta [[D Jukka] [T/fin [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:87 [T/fin [<__>:87 [sano- [etta [[D Jukka] [T/fin [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]]]]]]
					[D Jukka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Jukka]
					<D Jukka> was made an adjunct.
					<D Jukka> is transferred to LF as a phase.
					 = [<D Pekka>:87 [T/fin [<__>:87 [sano- [etta [<D Jukka>:88 [T/fin [<__>:88 [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]]]]]]]
				=[<D Pekka>:87 [T/fin [<__>:87 [sano- [etta [<D Jukka>:88 [T/fin [<__>:88 [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:87 [T/fin [<__>:87 [sano- [etta [<D Jukka>:88 [T/fin [<__>:88 [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[<D Pekka>:87 [T/fin [<__>:87 [sano- [etta [<D Jukka>:88 [T/fin [<__>:88 [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]]]]]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [<D Pekka>:87 [T/fin [<__>:87 [sano- [etta [<D Jukka>:88 [T/fin [<__>:88 [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]]]]]]].
					No suitable node for extraposition found. No action was taken.
			= [<D Pekka> [T/fin [<D Pekka> [sano- [etta [<D Jukka> [T/fin [<D Jukka> [sano- [[etta [T/fin [v ihaile-]]] <D Merja->]]]]]]]]]]
		Checking LF-interface conditions.
				ihaile- (ihaile-) is missing complement D
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Jukka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Jukka', 'PF:Jukka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Jukka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Jukka', 'PF:Jukka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  etta: [, V, TT/fin];  D: [D, , V, TT/fin];  Jukka: [N, D, , V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  __: [D, TT/fin, , V, TT/fin];  __: [N, D, TT/fin, , V, TT/fin];  sano-: [V, TT/fin, , V, TT/fin];  etta: [, V, TT/fin, , V, TT/fin];  T/fin: [TT/fin, , V, TT/fin, , V, TT/fin];  v: [v, TT/fin, , V, TT/fin, , V, TT/fin];  ihaile-: [V, v, TT/fin, , V, TT/fin, , V, TT/fin];  D: [D, V, TT/fin, , V, TT/fin];  Merja-: [N, D, V, TT/fin, , V, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[etta [[D Jukka] [T/fin{V} [etta T/fin{v,V}]]]] D]
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[etta [[D Jukka] [T/fin [sano- [etta T/fin{v,V}]]]]]
				=[etta [[D Jukka] [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]]
				2. Feature processing:
				=[etta [[D Jukka] [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]]
				3. Extraposition:
				=[etta [[D Jukka] [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]]
				4. Floater movement reconstruction:
					[D Jukka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Jukka]
					<D Jukka> was made an adjunct.
					<D Jukka> is transferred to LF as a phase.
					 = [etta [<D Jukka>:89 [T/fin [<__>:89 [sano- [etta [T/fin [v ihaile-]]]]]]]]
				=[etta [<D Jukka>:89 [T/fin [<__>:89 [sano- [etta [T/fin [v ihaile-]]]]]]]]
				5. Phrasal movement reconstruction:
				=[etta [<D Jukka>:89 [T/fin [<__>:89 [sano- [etta [T/fin [v ihaile-]]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[etta [<D Jukka>:89 [T/fin [<__>:89 [sano- [etta [T/fin [v ihaile-]]]]]]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [etta [<D Jukka>:89 [T/fin [<__>:89 [sano- [etta [T/fin [v ihaile-]]]]]]]].
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} [[etta [<D Jukka>:89 [T/fin [<__>:89 [sano- [etta [T/fin [v ihaile-]]]]]]]] D]]]

	38. Consume "Merja-"

		[[D Pekka] [T/fin{V} [[etta [<D Jukka> [T/fin [<D Jukka> [sano- [etta [T/fin [v ihaile-]]]]]]]] D]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [[etta [<D Jukka>:89 [T/fin [<__>:89 [sano- [etta [T/fin [v ihaile-]]]]]]]] D{N}]]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{V} [[etta [<D Jukka> [T/fin [<D Jukka> [sano- [etta [T/fin [v ihaile-]]]]]]]] D{N}]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [[etta [<D Jukka>:89 [T/fin [<__>:89 [sano- [etta [T/fin [v ihaile-]]]]]]]] D{N}]]]]
				=[[D Pekka] [T/fin [sano- [[etta [<D Jukka>:89 [T/fin [<__>:89 [sano- [etta [T/fin [v ihaile-]]]]]]]] [D Merja-]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [sano- [[etta [<D Jukka>:89 [T/fin [<__>:89 [sano- [etta [T/fin [v ihaile-]]]]]]]] [D Merja-]]]]]
				3. Extraposition:
					sano- cannot select D
					Extraposition will be tried on [D Merja-].
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
				=[[D Pekka] [T/fin [sano- [[etta [<D Jukka>:89 [T/fin [<__>:89 [sano- [etta [T/fin [v ihaile-]]]]]]]] <D Merja->]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:90 [T/fin [<__>:90 [sano- [[etta [<D Jukka>:89 [T/fin [<__>:89 [sano- [etta [T/fin [v ihaile-]]]]]]]] <D Merja->]]]]]
				=[<D Pekka>:90 [T/fin [<__>:90 [sano- [[etta [<D Jukka>:89 [T/fin [<__>:89 [sano- [etta [T/fin [v ihaile-]]]]]]]] <D Merja->]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:90 [T/fin [<__>:90 [sano- [[etta [<D Jukka>:89 [T/fin [<__>:89 [sano- [etta [T/fin [v ihaile-]]]]]]]] <D Merja->]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[<D Pekka>:90 [T/fin [<__>:90 [sano- [[etta [<D Jukka>:89 [T/fin [<__>:89 [sano- [etta [T/fin [v ihaile-]]]]]]]] <D Merja->]]]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [<D Pekka>:90 [T/fin [<__>:90 [sano- [[etta [<D Jukka>:89 [T/fin [<__>:89 [sano- [etta [T/fin [v ihaile-]]]]]]]] <D Merja->]]]]].
					No suitable node for extraposition found. No action was taken.
			= [<D Pekka> [T/fin [<D Pekka> [sano- [[etta [<D Jukka> [T/fin [<D Jukka> [sano- [etta [T/fin [v ihaile-]]]]]]]] <D Merja->]]]]]
		Checking LF-interface conditions.
				ihaile- (ihaile-) is missing complement D
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Jukka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Jukka', 'PF:Jukka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Jukka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Jukka', 'PF:Jukka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  etta: [, V, TT/fin];  D: [D, , V, TT/fin];  Jukka: [N, D, , V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  __: [D, TT/fin, , V, TT/fin];  __: [N, D, TT/fin, , V, TT/fin];  sano-: [V, TT/fin, , V, TT/fin];  etta: [, V, TT/fin, , V, TT/fin];  T/fin: [TT/fin, , V, TT/fin, , V, TT/fin];  v: [v, TT/fin, , V, TT/fin, , V, TT/fin];  ihaile-: [V, v, TT/fin, , V, TT/fin, , V, TT/fin];  D: [D, V, TT/fin];  Merja-: [N, D, V, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (4) =[[T/fin{V} [etta T/fin{v,V}]] D]
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[T/fin [sano- [etta T/fin{v,V}]]]
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				2. Feature processing:
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				3. Extraposition:
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				4. Floater movement reconstruction:
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[T/fin [sano- [etta [T/fin [v ihaile-]]]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [T/fin [sano- [etta [T/fin [v ihaile-]]]]].
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} [etta [[D Jukka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] D]]]]]

	39. Consume "Merja-"

		[[D Pekka] [T/fin{V} [etta [[D Jukka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] D]]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta [[D Jukka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] D{N}]]]]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{V} [etta [[D Jukka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] D{N}]]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [etta [[D Jukka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] D{N}]]]]]]
				=[[D Pekka] [T/fin [sano- [etta [[D Jukka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] [D Merja-]]]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [sano- [etta [[D Jukka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] [D Merja-]]]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [sano- [etta [[D Jukka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] [D Merja-]]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:91 [T/fin [<__>:91 [sano- [etta [[D Jukka] [[T/fin [sano- [etta [T/fin [v ihaile-]]]]] [D Merja-]]]]]]]]
					D at the right failed to tail [-VAL][ARG]
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
					Dropping <D Merja->
					 = [<D Pekka>:91 [T/fin [<__>:91 [sano- [etta [[D Jukka] [[T/fin [sano- [<__>:92 [etta [T/fin [v ihaile-]]]]]] <D Merja->:92]]]]]]]
					[D Jukka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Jukka]
					<D Jukka> was made an adjunct.
					<D Jukka> is transferred to LF as a phase.
					 = [<D Pekka>:91 [T/fin [<__>:91 [sano- [etta [<D Jukka>:93 [[T/fin [<__>:93 [sano- [<__>:92 [etta [T/fin [v ihaile-]]]]]]] <D Merja->:92]]]]]]]
					Dropping <__>:92
					 = [<D Pekka>:91 [T/fin [<__>:91 [sano- [etta [<D Jukka>:93 [[T/fin [<__>:93 [sano- [<__>:92 [etta [T/fin [v [<__>:92 ihaile-]]]]]]]] <D Merja->:92]]]]]]]
				=[<D Pekka>:91 [T/fin [<__>:91 [sano- [etta [<D Jukka>:93 [[T/fin [<__>:93 [sano- [<__>:92 [etta [T/fin [v [<__>:92 ihaile-]]]]]]]] <D Merja->:92]]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:91 [T/fin [<__>:91 [sano- [etta [<D Jukka>:93 [[T/fin [<__>:93 [sano- [<__>:92 [etta [T/fin [v [<__>:92 ihaile-]]]]]]]] <D Merja->:92]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[<D Pekka>:91 [T/fin [<__>:91 [sano- [etta [<D Jukka>:93 [[T/fin [<__>:93 [sano- [<__>:92 [etta [T/fin [v [<__>:92 ihaile-]]]]]]]] <D Merja->:92]]]]]]]
				7. Last resort extraposition:
				<__>:92 has no thematic role at the SPEC of ihaile-
					Last resort extraposition will be tried on [<D Pekka>:91 [T/fin [<__>:91 [sano- [etta [<D Jukka>:93 [[T/fin [<__>:93 [sano- [<__>:92 [etta [T/fin [v [<__>:92 ihaile-]]]]]]]] <D Merja->:92]]]]]]].
					No suitable node for extraposition found. No action was taken.
			= [<D Pekka> [T/fin [<D Pekka> [sano- [etta [<D Jukka> [[T/fin [<D Jukka> [sano- [<D Merja-> [etta [T/fin [v [<D Merja-> ihaile-]]]]]]]] <D Merja->]]]]]]]
		Checking LF-interface conditions.
				<__>:92 has no thematic role at the SPEC of ihaile-
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Jukka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Jukka', 'PF:Jukka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Jukka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Jukka', 'PF:Jukka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  etta: [, V, TT/fin];  D: [D, , V, TT/fin];  Jukka: [N, D, , V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  __: [D, TT/fin, , V, TT/fin];  __: [N, D, TT/fin, , V, TT/fin];  sano-: [V, TT/fin, , V, TT/fin];  __: [D, V, TT/fin, , V, TT/fin];  __: [N, D, V, TT/fin, , V, TT/fin];  etta: [, V, TT/fin, , V, TT/fin];  T/fin: [TT/fin, , V, TT/fin, , V, TT/fin];  v: [v, TT/fin, , V, TT/fin, , V, TT/fin];  __: [D, v, TT/fin, , V, TT/fin, , V, TT/fin];  __: [N, D, v, TT/fin, , V, TT/fin, , V, TT/fin];  ihaile-: [V, v, TT/fin, , V, TT/fin, , V, TT/fin];  D: [D, , V, TT/fin];  Merja-: [N, D, , V, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (5) =[[[D Jukka] [T/fin{V} [etta T/fin{v,V}]]] D]
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[[D Jukka] [T/fin [sano- [etta T/fin{v,V}]]]]
				=[[D Jukka] [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]
				2. Feature processing:
				=[[D Jukka] [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]
				3. Extraposition:
				=[[D Jukka] [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]
				4. Floater movement reconstruction:
					[D Jukka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Jukka]
					<D Jukka> was made an adjunct.
					<D Jukka> is transferred to LF as a phase.
					 = [<D Jukka>:95 [T/fin [<__>:95 [sano- [etta [T/fin [v ihaile-]]]]]]]
				=[<D Jukka>:95 [T/fin [<__>:95 [sano- [etta [T/fin [v ihaile-]]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Jukka>:95 [T/fin [<__>:95 [sano- [etta [T/fin [v ihaile-]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Jukka>:95 [T/fin [<__>:95 [sano- [etta [T/fin [v ihaile-]]]]]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [<D Jukka>:95 [T/fin [<__>:95 [sano- [etta [T/fin [v ihaile-]]]]]]].
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} [etta [[<D Jukka>:95 [T/fin [<__>:95 [sano- [etta [T/fin [v ihaile-]]]]]]] D]]]]

	40. Consume "Merja-"

		[[D Pekka] [T/fin{V} [etta [[<D Jukka> [T/fin [<D Jukka> [sano- [etta [T/fin [v ihaile-]]]]]]] D]]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta [[<D Jukka>:95 [T/fin [<__>:95 [sano- [etta [T/fin [v ihaile-]]]]]]] D{N}]]]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{V} [etta [[<D Jukka> [T/fin [<D Jukka> [sano- [etta [T/fin [v ihaile-]]]]]]] D{N}]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [etta [[<D Jukka>:95 [T/fin [<__>:95 [sano- [etta [T/fin [v ihaile-]]]]]]] D{N}]]]]]
				=[[D Pekka] [T/fin [sano- [etta [[<D Jukka>:95 [T/fin [<__>:95 [sano- [etta [T/fin [v ihaile-]]]]]]] [D Merja-]]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [sano- [etta [[<D Jukka>:95 [T/fin [<__>:95 [sano- [etta [T/fin [v ihaile-]]]]]]] [D Merja-]]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [sano- [etta [[<D Jukka>:95 [T/fin [<__>:95 [sano- [etta [T/fin [v ihaile-]]]]]]] [D Merja-]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:96 [T/fin [<__>:96 [sano- [etta [[<D Jukka>:95 [T/fin [<__>:95 [sano- [etta [T/fin [v ihaile-]]]]]]] [D Merja-]]]]]]]
					D at the right failed to tail [-VAL][ARG]
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
					Dropping <D Merja->
					 = [<D Pekka>:96 [T/fin [<__>:96 [sano- [etta [[<D Jukka>:95 [T/fin [<__>:95 [sano- [<__>:97 [etta [T/fin [v ihaile-]]]]]]]] <D Merja->:97]]]]]]
					Dropping <__>:97
					 = [<D Pekka>:96 [T/fin [<__>:96 [sano- [etta [[<D Jukka>:95 [T/fin [<__>:95 [sano- [<__>:97 [etta [T/fin [v [<__>:97 ihaile-]]]]]]]]] <D Merja->:97]]]]]]
				=[<D Pekka>:96 [T/fin [<__>:96 [sano- [etta [[<D Jukka>:95 [T/fin [<__>:95 [sano- [<__>:97 [etta [T/fin [v [<__>:97 ihaile-]]]]]]]]] <D Merja->:97]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:96 [T/fin [<__>:96 [sano- [etta [[<D Jukka>:95 [T/fin [<__>:95 [sano- [<__>:97 [etta [T/fin [v [<__>:97 ihaile-]]]]]]]]] <D Merja->:97]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[<D Pekka>:96 [T/fin [<__>:96 [sano- [etta [[<D Jukka>:95 [T/fin [<__>:95 [sano- [<__>:97 [etta [T/fin [v [<__>:97 ihaile-]]]]]]]]] <D Merja->:97]]]]]]
				7. Last resort extraposition:
				<__>:97 has no thematic role at the SPEC of ihaile-
					Last resort extraposition will be tried on [<D Pekka>:96 [T/fin [<__>:96 [sano- [etta [[<D Jukka>:95 [T/fin [<__>:95 [sano- [<__>:97 [etta [T/fin [v [<__>:97 ihaile-]]]]]]]]] <D Merja->:97]]]]]].
					No suitable node for extraposition found. No action was taken.
			= [<D Pekka> [T/fin [<D Pekka> [sano- [etta [[<D Jukka> [T/fin [<D Jukka> [sano- [<D Merja-> [etta [T/fin [v [<D Merja-> ihaile-]]]]]]]]] <D Merja->]]]]]]
		Checking LF-interface conditions.
				<__>:97 has no thematic role at the SPEC of ihaile-
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Jukka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Jukka', 'PF:Jukka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Jukka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Jukka', 'PF:Jukka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  etta: [, V, TT/fin];  D: [D, , V, TT/fin];  Jukka: [N, D, , V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  __: [D, TT/fin, , V, TT/fin];  __: [N, D, TT/fin, , V, TT/fin];  sano-: [V, TT/fin, , V, TT/fin];  __: [D, V, TT/fin, , V, TT/fin];  __: [N, D, V, TT/fin, , V, TT/fin];  etta: [, V, TT/fin, , V, TT/fin];  T/fin: [TT/fin, , V, TT/fin, , V, TT/fin];  v: [v, TT/fin, , V, TT/fin, , V, TT/fin];  __: [D, v, TT/fin, , V, TT/fin, , V, TT/fin];  __: [N, D, v, TT/fin, , V, TT/fin, , V, TT/fin];  ihaile-: [V, v, TT/fin, , V, TT/fin, , V, TT/fin];  D: [D, , V, TT/fin];  Merja-: [N, D, , V, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (6) =[[T/fin{V} [etta [[D Jukka] [T/fin{V} [etta T/fin{v,V}]]]]] D]
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[T/fin [sano- [etta [[D Jukka] [T/fin{V} [etta T/fin{v,V}]]]]]]
					Target sano- in T/fin
					=[T/fin [sano- [etta [[D Jukka] [T/fin [sano- [etta T/fin{v,V}]]]]]]]
				=[T/fin [sano- [etta [[D Jukka] [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]]]]
				2. Feature processing:
				=[T/fin [sano- [etta [[D Jukka] [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]]]]
				3. Extraposition:
				=[T/fin [sano- [etta [[D Jukka] [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]]]]
				4. Floater movement reconstruction:
					[D Jukka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Jukka]
					<D Jukka> was made an adjunct.
					<D Jukka> is transferred to LF as a phase.
					 = [T/fin [sano- [etta [<D Jukka>:99 [T/fin [<__>:99 [sano- [etta [T/fin [v ihaile-]]]]]]]]]]
				=[T/fin [sano- [etta [<D Jukka>:99 [T/fin [<__>:99 [sano- [etta [T/fin [v ihaile-]]]]]]]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [sano- [etta [<D Jukka>:99 [T/fin [<__>:99 [sano- [etta [T/fin [v ihaile-]]]]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[T/fin [sano- [etta [<D Jukka>:99 [T/fin [<__>:99 [sano- [etta [T/fin [v ihaile-]]]]]]]]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [T/fin [sano- [etta [<D Jukka>:99 [T/fin [<__>:99 [sano- [etta [T/fin [v ihaile-]]]]]]]]]].
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [[T/fin [sano- [etta [<D Jukka>:99 [T/fin [<__>:99 [sano- [etta [T/fin [v ihaile-]]]]]]]]]] D]]

	41. Consume "Merja-"

		[[D Pekka] [[T/fin [sano- [etta [<D Jukka> [T/fin [<D Jukka> [sano- [etta [T/fin [v ihaile-]]]]]]]]]] D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[D Pekka] [[T/fin [sano- [etta [<D Jukka>:99 [T/fin [<__>:99 [sano- [etta [T/fin [v ihaile-]]]]]]]]]] D{N}]]

	>>>	Trying candidate spellout structure [[D Pekka] [[T/fin [sano- [etta [<D Jukka> [T/fin [<D Jukka> [sano- [etta [T/fin [v ihaile-]]]]]]]]]] D{N}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[D Pekka] [[T/fin [sano- [etta [<D Jukka>:99 [T/fin [<__>:99 [sano- [etta [T/fin [v ihaile-]]]]]]]]]] [D Merja-]]]
				2. Feature processing:
				=[[D Pekka] [[T/fin [sano- [etta [<D Jukka>:99 [T/fin [<__>:99 [sano- [etta [T/fin [v ihaile-]]]]]]]]]] [D Merja-]]]
				3. Extraposition:
				=[[D Pekka] [[T/fin [sano- [etta [<D Jukka>:99 [T/fin [<__>:99 [sano- [etta [T/fin [v ihaile-]]]]]]]]]] [D Merja-]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					D at the right failed to tail [-VAL][ARG]
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
					Dropping <D Merja->
					 = [[D Pekka] [[T/fin [sano- [<__>:100 [etta [<D Jukka>:99 [T/fin [<__>:99 [sano- [etta [T/fin [v ihaile-]]]]]]]]]]] <D Merja->:100]]
					Dropping <__>:100
					 = [[D Pekka] [[T/fin [sano- [<__>:100 [etta [<D Jukka>:99 [T/fin [<__>:99 [sano- [<__>:100 [etta [T/fin [v ihaile-]]]]]]]]]]]] <D Merja->:100]]
					Dropping <__>:100
					 = [[D Pekka] [[T/fin [sano- [<__>:100 [etta [<D Jukka>:99 [T/fin [<__>:99 [sano- [<__>:100 [etta [T/fin [v [<__>:100 ihaile-]]]]]]]]]]]]] <D Merja->:100]]
				=[[D Pekka] [[T/fin [sano- [<__>:100 [etta [<D Jukka>:99 [T/fin [<__>:99 [sano- [<__>:100 [etta [T/fin [v [<__>:100 ihaile-]]]]]]]]]]]]] <D Merja->:100]]
				5. Phrasal movement reconstruction:
					[D Pekka] will undergo A-reconstruction.
				=[[D Pekka]:18 [[T/fin [__:18 [sano- [<__>:100 [etta [<D Jukka>:99 [T/fin [<__>:99 [sano- [<__>:100 [etta [T/fin [v [<__>:100 ihaile-]]]]]]]]]]]]]] <D Merja->:100]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[D Pekka]:18 [[T/fin [__:18 [sano- [<__>:100 [etta [<D Jukka>:99 [T/fin [<__>:99 [sano- [<__>:100 [etta [T/fin [v [<__>:100 ihaile-]]]]]]]]]]]]]] <D Merja->:100]]
				7. Last resort extraposition:
				<__>:100 has no thematic role at the SPEC of ihaile-
					Last resort extraposition will be tried on [[D Pekka]:18 [[T/fin [__:18 [sano- [<__>:100 [etta [<D Jukka>:99 [T/fin [<__>:99 [sano- [<__>:100 [etta [T/fin [v [<__>:100 ihaile-]]]]]]]]]]]]]] <D Merja->:100]].
					No suitable node for extraposition found. No action was taken.
			= [[D Pekka] [[T/fin [[D Pekka] [sano- [<D Merja-> [etta [<D Jukka> [T/fin [<D Jukka> [sano- [<D Merja-> [etta [T/fin [v [<D Merja-> ihaile-]]]]]]]]]]]]]] <D Merja->]]
		Checking LF-interface conditions.
				<__>:100 has no thematic role at the SPEC of ihaile-
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Jukka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Jukka', 'PF:Jukka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Jukka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Jukka', 'PF:Jukka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  __: [D, V, TT/fin];  __: [N, D, V, TT/fin];  etta: [, V, TT/fin];  D: [D, , V, TT/fin];  Jukka: [N, D, , V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  __: [D, TT/fin, , V, TT/fin];  __: [N, D, TT/fin, , V, TT/fin];  sano-: [V, TT/fin, , V, TT/fin];  __: [D, V, TT/fin, , V, TT/fin];  __: [N, D, V, TT/fin, , V, TT/fin];  etta: [, V, TT/fin, , V, TT/fin];  T/fin: [TT/fin, , V, TT/fin, , V, TT/fin];  v: [v, TT/fin, , V, TT/fin, , V, TT/fin];  __: [D, v, TT/fin, , V, TT/fin, , V, TT/fin];  __: [N, D, v, TT/fin, , V, TT/fin, , V, TT/fin];  ihaile-: [V, v, TT/fin, , V, TT/fin, , V, TT/fin];  D: [D];  Merja-: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (7) =[[[D Pekka] [T/fin{V} [etta [[D Jukka] [T/fin{V} [etta T/fin{v,V}]]]]]] D]
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [etta [[D Jukka] [T/fin{V} [etta T/fin{v,V}]]]]]]]
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [etta [[D Jukka] [T/fin [sano- [etta T/fin{v,V}]]]]]]]]
				=[[D Pekka] [T/fin [sano- [etta [[D Jukka] [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [sano- [etta [[D Jukka] [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [sano- [etta [[D Jukka] [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:103 [T/fin [<__>:103 [sano- [etta [[D Jukka] [T/fin [sano- [etta [T/fin [v ihaile-]]]]]]]]]]]
					[D Jukka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Jukka]
					<D Jukka> was made an adjunct.
					<D Jukka> is transferred to LF as a phase.
					 = [<D Pekka>:103 [T/fin [<__>:103 [sano- [etta [<D Jukka>:104 [T/fin [<__>:104 [sano- [etta [T/fin [v ihaile-]]]]]]]]]]]]
				=[<D Pekka>:103 [T/fin [<__>:103 [sano- [etta [<D Jukka>:104 [T/fin [<__>:104 [sano- [etta [T/fin [v ihaile-]]]]]]]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:103 [T/fin [<__>:103 [sano- [etta [<D Jukka>:104 [T/fin [<__>:104 [sano- [etta [T/fin [v ihaile-]]]]]]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:103 [T/fin [<__>:103 [sano- [etta [<D Jukka>:104 [T/fin [<__>:104 [sano- [etta [T/fin [v ihaile-]]]]]]]]]]]]
				7. Last resort extraposition:
				ihaile- (ihaile-) is missing complement D
					Last resort extraposition will be tried on [<D Pekka>:103 [T/fin [<__>:103 [sano- [etta [<D Jukka>:104 [T/fin [<__>:104 [sano- [etta [T/fin [v ihaile-]]]]]]]]]]]].
					No suitable node for extraposition found. No action was taken.
			=[[<D Pekka>:103 [T/fin [<__>:103 [sano- [etta [<D Jukka>:104 [T/fin [<__>:104 [sano- [etta [T/fin [v ihaile-]]]]]]]]]]]] D]

	42. Consume "Merja-"

		[[<D Pekka> [T/fin [<D Pekka> [sano- [etta [<D Jukka> [T/fin [<D Jukka> [sano- [etta [T/fin [v ihaile-]]]]]]]]]]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[<D Pekka>:103 [T/fin [<__>:103 [sano- [etta [<D Jukka>:104 [T/fin [<__>:104 [sano- [etta [T/fin [v ihaile-]]]]]]]]]]]] D{N}]

	>>>	Trying candidate spellout structure [[<D Pekka> [T/fin [<D Pekka> [sano- [etta [<D Jukka> [T/fin [<D Jukka> [sano- [etta [T/fin [v ihaile-]]]]]]]]]]]] D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[<D Pekka>:103 [T/fin [<__>:103 [sano- [etta [<D Jukka>:104 [T/fin [<__>:104 [sano- [etta [T/fin [v ihaile-]]]]]]]]]]]] [D Merja-]]
				2. Feature processing:
				=[[<D Pekka>:103 [T/fin [<__>:103 [sano- [etta [<D Jukka>:104 [T/fin [<__>:104 [sano- [etta [T/fin [v ihaile-]]]]]]]]]]]] [D Merja-]]
				3. Extraposition:
				=[[<D Pekka>:103 [T/fin [<__>:103 [sano- [etta [<D Jukka>:104 [T/fin [<__>:104 [sano- [etta [T/fin [v ihaile-]]]]]]]]]]]] [D Merja-]]
				4. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
					Dropping <D Merja->
					 = [[<D Pekka>:103 [T/fin [<__>:103 [sano- [<__>:105 [etta [<D Jukka>:104 [T/fin [<__>:104 [sano- [etta [T/fin [v ihaile-]]]]]]]]]]]]] <D Merja->:105]
					Dropping <__>:105
					 = [[<D Pekka>:103 [T/fin [<__>:103 [sano- [<__>:105 [etta [<D Jukka>:104 [T/fin [<__>:104 [sano- [<__>:105 [etta [T/fin [v ihaile-]]]]]]]]]]]]]] <D Merja->:105]
					Dropping <__>:105
					 = [[<D Pekka>:103 [T/fin [<__>:103 [sano- [<__>:105 [etta [<D Jukka>:104 [T/fin [<__>:104 [sano- [<__>:105 [etta [T/fin [v [<__>:105 ihaile-]]]]]]]]]]]]]]] <D Merja->:105]
				=[[<D Pekka>:103 [T/fin [<__>:103 [sano- [<__>:105 [etta [<D Jukka>:104 [T/fin [<__>:104 [sano- [<__>:105 [etta [T/fin [v [<__>:105 ihaile-]]]]]]]]]]]]]]] <D Merja->:105]
				5. Phrasal movement reconstruction:
				=[[<D Pekka>:103 [T/fin [<__>:103 [sano- [<__>:105 [etta [<D Jukka>:104 [T/fin [<__>:104 [sano- [<__>:105 [etta [T/fin [v [<__>:105 ihaile-]]]]]]]]]]]]]]] <D Merja->:105]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[<D Pekka>:103 [T/fin [<__>:103 [sano- [<__>:105 [etta [<D Jukka>:104 [T/fin [<__>:104 [sano- [<__>:105 [etta [T/fin [v [<__>:105 ihaile-]]]]]]]]]]]]]]] <D Merja->:105]
				7. Last resort extraposition:
				<__>:105 has no thematic role at the SPEC of ihaile-
					Last resort extraposition will be tried on [[<D Pekka>:103 [T/fin [<__>:103 [sano- [<__>:105 [etta [<D Jukka>:104 [T/fin [<__>:104 [sano- [<__>:105 [etta [T/fin [v [<__>:105 ihaile-]]]]]]]]]]]]]]] <D Merja->:105].
					No suitable node for extraposition found. No action was taken.
			= [[<D Pekka> [T/fin [<D Pekka> [sano- [<D Merja-> [etta [<D Jukka> [T/fin [<D Jukka> [sano- [<D Merja-> [etta [T/fin [v [<D Merja-> ihaile-]]]]]]]]]]]]]]] <D Merja->]
		Checking LF-interface conditions.
				<__>:105 has no thematic role at the SPEC of ihaile-
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Jukka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Jukka', 'PF:Jukka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Jukka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Jukka', 'PF:Jukka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
ihaile-:['!COMP:D', '-COMP:FIN', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  __: [D, V, TT/fin];  __: [N, D, V, TT/fin];  etta: [, V, TT/fin];  D: [D, , V, TT/fin];  Jukka: [N, D, , V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  __: [D, TT/fin, , V, TT/fin];  __: [N, D, TT/fin, , V, TT/fin];  sano-: [V, TT/fin, , V, TT/fin];  __: [D, V, TT/fin, , V, TT/fin];  __: [N, D, V, TT/fin, , V, TT/fin];  etta: [, V, TT/fin, , V, TT/fin];  T/fin: [TT/fin, , V, TT/fin, , V, TT/fin];  v: [v, TT/fin, , V, TT/fin, , V, TT/fin];  __: [D, v, TT/fin, , V, TT/fin, , V, TT/fin];  __: [N, D, v, TT/fin, , V, TT/fin, , V, TT/fin];  ihaile-: [V, v, TT/fin, , V, TT/fin, , V, TT/fin];  D: [D];  Merja-: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "par$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihaile-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "ihailee".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "etta".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sano-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sanoo".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Jukka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Jukka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "etta".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sano-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sanoo".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 46
['Pekka', 'sanoo', 'etta', 'istuu', 'mukavasti']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	5. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	8. Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[D Pekka] T/fin]

	11. Consume "sano-"

		[[D Pekka] T/fin] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
			=[[D Pekka] T/fin{V}]

	12. Consume "etta"

		[[D Pekka] T/fin{V}] + etta
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> sano-]]] etta] due to bad left branch.
			Exploring solution number (1) =[T/fin{V} etta]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} etta]]

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'istu-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	13. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	14. Consume "T/fin"

		[[D Pekka] [T/fin{V} etta]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- etta]]]] T/fin] due to bad left branch.
				Reject [[T/fin [sano- etta]] T/fin] due to bad left branch.
			Exploring solution number (1) =[etta T/fin]
				1. Head movement reconstruction:
				=etta
				2. Feature processing:
				=etta
				3. Extraposition:
				=etta
				4. Floater movement reconstruction:
				=etta
				5. Phrasal movement reconstruction:
				=etta
				6. Agreement reconstruction:
				=etta
				7. Last resort extraposition:
				etta probing for CAT:T/fin failed.
				"etta" lacks complement.
					Last resort extraposition will be tried on etta.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} [etta T/fin]]]

	15. Consume "istuu"

		[[D Pekka] [T/fin{V} [etta T/fin]]] + istuu
			Filtering out impossible merge sites...
			Sink "istuu" into T/fin because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta T/fin{V}]]]

		Next word contains multiple morphemes ['sti$', 'mukava-']

	16. Consume "sti"

		[[D Pekka] [T/fin{V} [etta T/fin{V}]]] + sti
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, sti.
				Avoid TT/finP as SPEC, sti.
				Avoid P as SPEC, sti.
				Considering [etta T/fin{V}] due to legitimate tail-head configuration.
				Considering T/fin{V} due to legitimate tail-head configuration.
				[[D Pekka] [T/fin{V} [etta T/fin{V}]]] + sti = -98]
				[T/fin{V} [etta T/fin{V}]] + sti = -96]
				[etta T/fin{V}] + sti = 109]
				T/fin{V} + sti = 208]
		Ranking completed:
			1. [T/fin{V}; sti]
			2. [[etta T/fin{V}]; sti]
			3. [[T/fin{V} [etta T/fin{V}]]; sti]
			4. [[[D Pekka] [T/fin{V} [etta T/fin{V}]]]; sti]
			Exploring solution number (1) =[T/fin{V} sti]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} [etta [T/fin{V} sti]]]]

	17. Consume "mukavasti"

		[[D Pekka] [T/fin{V} [etta [T/fin{V} sti]]]] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta [T/fin{V} sti{A}]]]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{V} [etta [T/fin{V} sti{A}]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [etta [T/fin{V} sti{A}]]]]]
					Target istuu in T/fin
					=[[D Pekka] [T/fin [sano- [etta [T/fin [istuu sti{A}]]]]]]
				=[[D Pekka] [T/fin [sano- [etta [T/fin [istuu [sti mukavasti]]]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [sano- [etta [T/fin [istuu [sti mukavasti]]]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [sano- [etta [T/fin [istuu [sti mukavasti]]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:112 [T/fin [<__>:112 [sano- [etta [T/fin [istuu [sti mukavasti]]]]]]]]
					sti at the right failed to tail [CAT:T]
					<sti mukavasti> was made an adjunct.
					<sti mukavasti> is transferred to LF as a phase.
				=[<D Pekka>:112 [T/fin [<__>:112 [sano- [etta [T/fin [istuu <sti mukavasti>]]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:112 [T/fin [<__>:112 [sano- [etta [T/fin [istuu <sti mukavasti>]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:112 [T/fin [<__>:112 [sano- [etta [T/fin [istuu <sti mukavasti>]]]]]]]
				7. Last resort extraposition:
			= [<D Pekka> [T/fin [<D Pekka> [sano- [etta [T/fin [istuu <sti mukavasti>]]]]]]]
		Checking LF-interface conditions.
			Transferring [<D Pekka>:112 [T/fin [<__>:112 [sano- [etta [T/fin [istuu <sti mukavasti>]]]]]]] into the conceptual-intentional system...
				sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				istuu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				Transfer to C-I successful.
			sti<[ADV, V, TT/fin, , V, TT/fin]> failed to tail features [CAT:T]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  etta: [, V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  istuu: [V, TT/fin, , V, TT/fin];  sti: [ADV, V, TT/fin, , V, TT/fin];  mukavasti: [A, ADV, V, TT/fin, , V, TT/fin];  
			Let's find another solution...
.
.
.
		I have now explored all solutions for "mukava-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[etta T/fin{V}] sti]
				1. Head movement reconstruction:
				=[etta [T/fin istuu]]
				2. Feature processing:
				=[etta [T/fin istuu]]
				3. Extraposition:
				=[etta [T/fin istuu]]
				4. Floater movement reconstruction:
				=[etta [T/fin istuu]]
				5. Phrasal movement reconstruction:
				=[etta [T/fin istuu]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[etta [T/fin istuu]]
				7. Last resort extraposition:
			=[[D Pekka] [T/fin{V} [[etta [T/fin istuu]] sti]]]

	18. Consume "mukavasti"

		[[D Pekka] [T/fin{V} [[etta [T/fin istuu]] sti]]] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [[etta [T/fin istuu]] sti{A}]]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{V} [[etta [T/fin istuu]] sti{A}]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [[etta [T/fin istuu]] sti{A}]]]]
				=[[D Pekka] [T/fin [sano- [[etta [T/fin istuu]] [sti mukavasti]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [sano- [[etta [T/fin istuu]] [sti mukavasti]]]]]
				3. Extraposition:
					sano- cannot select sti
					Extraposition will be tried on [sti mukavasti].
					<sti mukavasti> was made an adjunct.
					<sti mukavasti> is transferred to LF as a phase.
				=[[D Pekka] [T/fin [sano- [[etta [T/fin istuu]] <sti mukavasti>]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:113 [T/fin [<__>:113 [sano- [[etta [T/fin istuu]] <sti mukavasti>]]]]]
					sti at the right failed to tail [CAT:T]
				=[<D Pekka>:113 [T/fin [<__>:113 [sano- [[etta [T/fin istuu]] <sti mukavasti>]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:113 [T/fin [<__>:113 [sano- [[etta [T/fin istuu]] <sti mukavasti>]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[<D Pekka>:113 [T/fin [<__>:113 [sano- [[etta [T/fin istuu]] <sti mukavasti>]]]]]
				7. Last resort extraposition:
			= [<D Pekka> [T/fin [<D Pekka> [sano- [[etta [T/fin istuu]] <sti mukavasti>]]]]]
		Checking LF-interface conditions.
			Transferring [<D Pekka>:113 [T/fin [<__>:113 [sano- [[etta [T/fin istuu]] <sti mukavasti>]]]]] into the conceptual-intentional system...
				sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				istuu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				Transfer to C-I successful.
			sti<[ADV, V, TT/fin]> failed to tail features [CAT:T]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  etta: [, V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  istuu: [V, TT/fin, , V, TT/fin];  sti: [ADV, V, TT/fin];  mukavasti: [A, ADV, V, TT/fin];  
			Let's find another solution...
.
.
.
		I have now explored all solutions for "mukava-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[T/fin{V} [etta T/fin{V}]] sti]
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[T/fin [sano- [etta T/fin{V}]]]
				=[T/fin [sano- [etta [T/fin istuu]]]]
				2. Feature processing:
				=[T/fin [sano- [etta [T/fin istuu]]]]
				3. Extraposition:
				=[T/fin [sano- [etta [T/fin istuu]]]]
				4. Floater movement reconstruction:
				=[T/fin [sano- [etta [T/fin istuu]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [sano- [etta [T/fin istuu]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[T/fin [sano- [etta [T/fin istuu]]]]
				7. Last resort extraposition:
			=[[D Pekka] [[T/fin [sano- [etta [T/fin istuu]]]] sti]]

	19. Consume "mukavasti"

		[[D Pekka] [[T/fin [sano- [etta [T/fin istuu]]]] sti]] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
			=[[D Pekka] [[T/fin [sano- [etta [T/fin istuu]]]] sti{A}]]

	>>>	Trying candidate spellout structure [[D Pekka] [[T/fin [sano- [etta [T/fin istuu]]]] sti{A}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[D Pekka] [[T/fin [sano- [etta [T/fin istuu]]]] [sti mukavasti]]]
				2. Feature processing:
				=[[D Pekka] [[T/fin [sano- [etta [T/fin istuu]]]] [sti mukavasti]]]
				3. Extraposition:
				=[[D Pekka] [[T/fin [sano- [etta [T/fin istuu]]]] [sti mukavasti]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					sti at the right failed to tail [CAT:T]
					<sti mukavasti> was made an adjunct.
					<sti mukavasti> is transferred to LF as a phase.
				=[[D Pekka] [[T/fin [sano- [etta [T/fin istuu]]]] <sti mukavasti>]]
				5. Phrasal movement reconstruction:
					[D Pekka] will undergo A-reconstruction.
				=[[D Pekka]:19 [[T/fin [__:19 [sano- [etta [T/fin istuu]]]]] <sti mukavasti>]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[D Pekka]:19 [[T/fin [__:19 [sano- [etta [T/fin istuu]]]]] <sti mukavasti>]]
				7. Last resort extraposition:
			= [[D Pekka] [[T/fin [[D Pekka] [sano- [etta [T/fin istuu]]]]] <sti mukavasti>]]
		Checking LF-interface conditions.
			Transferring [[D Pekka]:19 [[T/fin [__:19 [sano- [etta [T/fin istuu]]]]] <sti mukavasti>]] into the conceptual-intentional system...
				sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Pekka]    (alternatives: 2. T/fin )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [D Pekka]    (alternatives: 2. T/fin )
				istuu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Pekka]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'T/fin([D Pekka])', 'istuu([D Pekka])', 'sano-([D Pekka])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D Pekka] [[T/fin [[D Pekka] [sano- [etta [T/fin istuu]]]]] <sti mukavasti>]]
		Grammar: [[D Pekka]:1 [[T/fin [__:1 [sano- [etta [T/fin istuu]]]]] <sti mukavasti>]]
		Spellout TT/finP = [DP:1 [[TT/fin [__:1 [V [ [TT/fin V]]]]] ADVP]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  etta: [, V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  istuu: [V, TT/fin, , V, TT/fin];  sti: [ADV];  mukavasti: [A, ADV];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "mukava-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (4) =[[[D Pekka] [T/fin{V} [etta T/fin{V}]]] sti]
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [etta T/fin{V}]]]]
				=[[D Pekka] [T/fin [sano- [etta [T/fin istuu]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [sano- [etta [T/fin istuu]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [sano- [etta [T/fin istuu]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:114 [T/fin [<__>:114 [sano- [etta [T/fin istuu]]]]]]
				=[<D Pekka>:114 [T/fin [<__>:114 [sano- [etta [T/fin istuu]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:114 [T/fin [<__>:114 [sano- [etta [T/fin istuu]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:114 [T/fin [<__>:114 [sano- [etta [T/fin istuu]]]]]]
				7. Last resort extraposition:
			=[[<D Pekka>:114 [T/fin [<__>:114 [sano- [etta [T/fin istuu]]]]]] sti]

	20. Consume "mukavasti"

		[[<D Pekka> [T/fin [<D Pekka> [sano- [etta [T/fin istuu]]]]]] sti] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
			=[[<D Pekka>:114 [T/fin [<__>:114 [sano- [etta [T/fin istuu]]]]]] sti{A}]

	>>>	Trying candidate spellout structure [[<D Pekka> [T/fin [<D Pekka> [sano- [etta [T/fin istuu]]]]]] sti{A}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[<D Pekka>:114 [T/fin [<__>:114 [sano- [etta [T/fin istuu]]]]]] [sti mukavasti]]
				2. Feature processing:
				=[[<D Pekka>:114 [T/fin [<__>:114 [sano- [etta [T/fin istuu]]]]]] [sti mukavasti]]
				3. Extraposition:
				=[[<D Pekka>:114 [T/fin [<__>:114 [sano- [etta [T/fin istuu]]]]]] [sti mukavasti]]
				4. Floater movement reconstruction:
					sti at the right failed to tail [CAT:T]
					<sti mukavasti> was made an adjunct.
					<sti mukavasti> is transferred to LF as a phase.
				=[[<D Pekka>:114 [T/fin [<__>:114 [sano- [etta [T/fin istuu]]]]]] <sti mukavasti>]
				5. Phrasal movement reconstruction:
				=[[<D Pekka>:114 [T/fin [<__>:114 [sano- [etta [T/fin istuu]]]]]] <sti mukavasti>]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[<D Pekka>:114 [T/fin [<__>:114 [sano- [etta [T/fin istuu]]]]]] <sti mukavasti>]
				7. Last resort extraposition:
			= [[<D Pekka> [T/fin [<D Pekka> [sano- [etta [T/fin istuu]]]]]] <sti mukavasti>]
		Checking LF-interface conditions.
			Transferring [[<D Pekka>:114 [T/fin [<__>:114 [sano- [etta [T/fin istuu]]]]]] <sti mukavasti>] into the conceptual-intentional system...
				sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				istuu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'T/fin(<D Pekka>)', 'istuu(<D Pekka>)', 'sano-(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[<D Pekka> [T/fin [<D Pekka> [sano- [etta [T/fin istuu]]]]]] <sti mukavasti>]
		Grammar: [[<D Pekka>:1 [T/fin [<__>:1 [sano- [etta [T/fin istuu]]]]]] <sti mukavasti>]
		Spellout TT/finP = [[DP:1 [TT/fin [__:1 [V [ [TT/fin V]]]]]] ADVP]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  etta: [, V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  istuu: [V, TT/fin, , V, TT/fin];  sti: [ADV];  mukavasti: [A, ADV];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "mukava-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "mukavasti".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "istu-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "istuu".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "etta".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sano-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sanoo".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 47
['istuu', 'mukavasti']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'istu-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	1. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
			=T/fin

	3. Consume "istuu"

		T/fin + istuu
			Filtering out impossible merge sites...
			Sink "istuu" into T/fin because they are inside the same phonological word.
			=T/fin{V}

		Next word contains multiple morphemes ['sti$', 'mukava-']

	4. Consume "sti"

		T/fin{V} + sti
			Filtering out impossible merge sites...
			Exploring solution number (1) =[T/fin{V} sti]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[T/fin{V} sti]

	5. Consume "mukavasti"

		[T/fin{V} sti] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
			=[T/fin{V} sti{A}]

	>>>	Trying candidate spellout structure [T/fin{V} sti{A}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target istuu in T/fin
					=[T/fin [istuu sti{A}]]
				=[T/fin [istuu [sti mukavasti]]]
				2. Feature processing:
				=[T/fin [istuu [sti mukavasti]]]
				3. Extraposition:
				=[T/fin [istuu [sti mukavasti]]]
				4. Floater movement reconstruction:
					sti at the right failed to tail [CAT:T]
					<sti mukavasti> was made an adjunct.
					<sti mukavasti> is transferred to LF as a phase.
				=[T/fin [istuu <sti mukavasti>]]
				5. Phrasal movement reconstruction:
				=[T/fin [istuu <sti mukavasti>]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[T/fin [istuu <sti mukavasti>]]
				7. Last resort extraposition:
			= [T/fin [istuu <sti mukavasti>]]
		Checking LF-interface conditions.
			Transferring [T/fin [istuu <sti mukavasti>]] into the conceptual-intentional system...
				T/fin with ['PHI:DET:_'] was associated at LF with:
					No antecedent found, LF-object crashes.
				istuu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				Semantic interpretation failed, transfer to C-I crashed.
			sti<[ADV, V, TT/fin]> failed to tail features [CAT:T]
			Final tail-head check failed.
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

T/fin: [TT/fin];  istuu: [V, TT/fin];  sti: [ADV, V, TT/fin];  mukavasti: [A, ADV, V, TT/fin];  
			Let's find another solution...
.
.
.
		I have now explored all solutions for "mukava-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "mukavasti".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "istu-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "istuu".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 48
['tassa', 'istuu', 'mukavasti']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['P$', 'tama']
			=P

		Next word contains multiple morphemes ['def$', '3p$', 'sg$', 'D$', 'tama-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	2. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	3. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	4. Consume "D$"
		Adding inflectional features {'-', 'PHI:PER:3', 'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:FI'} to D

	5. Consume "D"

		P + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
			=P{D}

	6. Consume "tama"

		P{D} + tama
			Filtering out impossible merge sites...
			Sink "tama" into D because they are inside the same phonological word.
			=P{D,N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'istu-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	7. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	8. Consume "T/fin"

		P{D,N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[P{D,N} T/fin]
				1. Head movement reconstruction:
					P was opened into [P [D tama]].
				=[P [D tama]]
				2. Feature processing:
				=[P [D tama]]
				3. Extraposition:
				=[P [D tama]]
				4. Floater movement reconstruction:
				=[P [D tama]]
				5. Phrasal movement reconstruction:
				=[P [D tama]]
				6. Agreement reconstruction:
				=[P [D tama]]
				7. Last resort extraposition:
			=[[P [D tama]] T/fin]

	9. Consume "istuu"

		[[P [D tama]] T/fin] + istuu
			Filtering out impossible merge sites...
			Sink "istuu" into T/fin because they are inside the same phonological word.
			=[[P [D tama]] T/fin{V}]

		Next word contains multiple morphemes ['sti$', 'mukava-']

	10. Consume "sti"

		[[P [D tama]] T/fin{V}] + sti
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, sti.
				Considering T/fin{V} due to legitimate tail-head configuration.
				[[P [D tama]] T/fin{V}] + sti = -98]
				T/fin{V} + sti = 204]
		Ranking completed:
			1. [T/fin{V}; sti]
			2. [[[P [D tama]] T/fin{V}]; sti]
			Exploring solution number (1) =[T/fin{V} sti]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[P [D tama]] [T/fin{V} sti]]

	11. Consume "mukavasti"

		[[P [D tama]] [T/fin{V} sti]] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
			=[[P [D tama]] [T/fin{V} sti{A}]]

	>>>	Trying candidate spellout structure [[P [D tama]] [T/fin{V} sti{A}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target istuu in T/fin
					=[[P [D tama]] [T/fin [istuu sti{A}]]]
				=[[P [D tama]] [T/fin [istuu [sti mukavasti]]]]
				2. Feature processing:
				=[[P [D tama]] [T/fin [istuu [sti mukavasti]]]]
				3. Extraposition:
				=[[P [D tama]] [T/fin [istuu [sti mukavasti]]]]
				4. Floater movement reconstruction:
					sti at the right failed to tail [CAT:T]
					<sti mukavasti> was made an adjunct.
					<sti mukavasti> is transferred to LF as a phase.
				=[[P [D tama]] [T/fin [istuu <sti mukavasti>]]]
				5. Phrasal movement reconstruction:
				=[[P [D tama]] [T/fin [istuu <sti mukavasti>]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[P [D tama]] [T/fin [istuu <sti mukavasti>]]]
				7. Last resort extraposition:
			= [[P [D tama]] [T/fin [istuu <sti mukavasti>]]]
		Checking LF-interface conditions.
			Transferring [[P [D tama]] [T/fin [istuu <sti mukavasti>]]] into the conceptual-intentional system...
				P with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				istuu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				Transfer to C-I successful.
			sti<[ADV, V, TT/fin]> failed to tail features [CAT:T]
			Final tail-head check failed.
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  istuu: [V, TT/fin];  sti: [ADV, V, TT/fin];  mukavasti: [A, ADV, V, TT/fin];  
			Let's find another solution...
.
.
.
		I have now explored all solutions for "mukava-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[P [D tama]] T/fin{V}] sti]
				1. Head movement reconstruction:
				=[[P [D tama]] [T/fin istuu]]
				2. Feature processing:
				=[[P [D tama]] [T/fin istuu]]
				3. Extraposition:
				=[[P [D tama]] [T/fin istuu]]
				4. Floater movement reconstruction:
				=[[P [D tama]] [T/fin istuu]]
				5. Phrasal movement reconstruction:
				=[[P [D tama]] [T/fin istuu]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[P [D tama]] [T/fin istuu]]
				7. Last resort extraposition:
			=[[[P [D tama]] [T/fin istuu]] sti]

	12. Consume "mukavasti"

		[[[P [D tama]] [T/fin istuu]] sti] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
			=[[[P [D tama]] [T/fin istuu]] sti{A}]

	>>>	Trying candidate spellout structure [[[P [D tama]] [T/fin istuu]] sti{A}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[P [D tama]] [T/fin istuu]] [sti mukavasti]]
				2. Feature processing:
				=[[[P [D tama]] [T/fin istuu]] [sti mukavasti]]
				3. Extraposition:
				=[[[P [D tama]] [T/fin istuu]] [sti mukavasti]]
				4. Floater movement reconstruction:
					sti at the right failed to tail [CAT:T]
					<sti mukavasti> was made an adjunct.
					<sti mukavasti> is transferred to LF as a phase.
				=[[[P [D tama]] [T/fin istuu]] <sti mukavasti>]
				5. Phrasal movement reconstruction:
				=[[[P [D tama]] [T/fin istuu]] <sti mukavasti>]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[P [D tama]] [T/fin istuu]] <sti mukavasti>]
				7. Last resort extraposition:
			= [[[P [D tama]] [T/fin istuu]] <sti mukavasti>]
		Checking LF-interface conditions.
			Transferring [[[P [D tama]] [T/fin istuu]] <sti mukavasti>] into the conceptual-intentional system...
				P with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				istuu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'P([D tama])', 'T/fin(Generic)', 'T/fin([P [D tama]])', 'istuu(generic)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[[P [D tama]] [T/fin istuu]] <sti mukavasti>]
		Grammar: [[[P [D tama]] [T/fin istuu]] <sti mukavasti>]
		Spellout TT/finP = [[PP [TT/fin V]] ADVP]
----------------------------------------------------------------------------------------------------------
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  istuu: [V, TT/fin];  sti: [ADV];  mukavasti: [A, ADV];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "mukava-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "mukavasti".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "istu-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "istuu".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tama-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tama".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tassa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 49
['Pekka', 'sanoo', 'etta', 'tassa', 'istuu', 'mukavasti']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	5. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	8. Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[D Pekka] T/fin]

	11. Consume "sano-"

		[[D Pekka] T/fin] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
			=[[D Pekka] T/fin{V}]

	12. Consume "etta"

		[[D Pekka] T/fin{V}] + etta
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> sano-]]] etta] due to bad left branch.
			Exploring solution number (1) =[T/fin{V} etta]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} etta]]

		Next word contains multiple morphemes ['P$', 'tama']

	13. Consume "P"

		[[D Pekka] [T/fin{V} etta]] + P
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- etta]]]] P] due to bad left branch.
				Reject [[T/fin [sano- etta]] P] due to bad left branch.
			Exploring solution number (1) =[etta P]
				1. Head movement reconstruction:
				=etta
				2. Feature processing:
				=etta
				3. Extraposition:
				=etta
				4. Floater movement reconstruction:
				=etta
				5. Phrasal movement reconstruction:
				=etta
				6. Agreement reconstruction:
				=etta
				7. Last resort extraposition:
				etta probing for CAT:T/fin failed.
				"etta" lacks complement.
					Last resort extraposition will be tried on etta.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} [etta P]]]

		Next word contains multiple morphemes ['def$', '3p$', 'sg$', 'D$', 'tama-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	14. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	15. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	16. Consume "D$"
		Adding inflectional features {'-', 'PHI:PER:3', 'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:FI'} to D

	17. Consume "D"

		[[D Pekka] [T/fin{V} [etta P]]] + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta P{D}]]]

	18. Consume "tama"

		[[D Pekka] [T/fin{V} [etta P{D}]]] + tama
			Filtering out impossible merge sites...
			Sink "tama" into D because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta P{D,N}]]]

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'istu-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	19. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	20. Consume "T/fin"

		[[D Pekka] [T/fin{V} [etta P{D,N}]]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- [etta [P [D tama]]]]]]] T/fin] due to bad left branch.
				Reject [[T/fin [sano- [etta [P [D tama]]]]] T/fin] due to bad left branch.
				Reject [[etta [P [D tama]]] T/fin] due to bad left branch.
			Exploring solution number (1) =[P{D,N} T/fin]
				1. Head movement reconstruction:
					P was opened into [P [D tama]].
				=[P [D tama]]
				2. Feature processing:
				=[P [D tama]]
				3. Extraposition:
				=[P [D tama]]
				4. Floater movement reconstruction:
				=[P [D tama]]
				5. Phrasal movement reconstruction:
				=[P [D tama]]
				6. Agreement reconstruction:
				=[P [D tama]]
				7. Last resort extraposition:
			=[[D Pekka] [T/fin{V} [etta [[P [D tama]] T/fin]]]]

	21. Consume "istuu"

		[[D Pekka] [T/fin{V} [etta [[P [D tama]] T/fin]]]] + istuu
			Filtering out impossible merge sites...
			Sink "istuu" into T/fin because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta [[P [D tama]] T/fin{V}]]]]

		Next word contains multiple morphemes ['sti$', 'mukava-']

	22. Consume "sti"

		[[D Pekka] [T/fin{V} [etta [[P [D tama]] T/fin{V}]]]] + sti
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, sti.
				Avoid TT/finP as SPEC, sti.
				Avoid P as SPEC, sti.
				Considering [etta [[P [D tama]] T/fin{V}]] due to legitimate tail-head configuration.
				Avoid TT/finP as SPEC, sti.
				Avoid [[P [D tama]] T/fin{V}] due to tail-head failure.
				Considering T/fin{V} due to legitimate tail-head configuration.
				[[D Pekka] [T/fin{V} [etta [[P [D tama]] T/fin{V}]]]] + sti = -98]
				[T/fin{V} [etta [[P [D tama]] T/fin{V}]]] + sti = -96]
				[etta [[P [D tama]] T/fin{V}]] + sti = 109]
				[[P [D tama]] T/fin{V}] + sti = -188]
				T/fin{V} + sti = 210]
		Ranking completed:
			1. [T/fin{V}; sti]
			2. [[etta [[P [D tama]] T/fin{V}]]; sti]
			3. [[T/fin{V} [etta [[P [D tama]] T/fin{V}]]]; sti]
			4. [[[D Pekka] [T/fin{V} [etta [[P [D tama]] T/fin{V}]]]]; sti]
			5. [[[P [D tama]] T/fin{V}]; sti]
			Exploring solution number (1) =[T/fin{V} sti]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} [etta [[P [D tama]] [T/fin{V} sti]]]]]

	23. Consume "mukavasti"

		[[D Pekka] [T/fin{V} [etta [[P [D tama]] [T/fin{V} sti]]]]] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta [[P [D tama]] [T/fin{V} sti{A}]]]]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{V} [etta [[P [D tama]] [T/fin{V} sti{A}]]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [etta [[P [D tama]] [T/fin{V} sti{A}]]]]]]
					Target istuu in T/fin
					=[[D Pekka] [T/fin [sano- [etta [[P [D tama]] [T/fin [istuu sti{A}]]]]]]]
				=[[D Pekka] [T/fin [sano- [etta [[P [D tama]] [T/fin [istuu [sti mukavasti]]]]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [sano- [etta [[P [D tama]] [T/fin [istuu [sti mukavasti]]]]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [sano- [etta [[P [D tama]] [T/fin [istuu [sti mukavasti]]]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:120 [T/fin [<__>:120 [sano- [etta [[P [D tama]] [T/fin [istuu [sti mukavasti]]]]]]]]]
					sti at the right failed to tail [CAT:T]
					<sti mukavasti> was made an adjunct.
					<sti mukavasti> is transferred to LF as a phase.
				=[<D Pekka>:120 [T/fin [<__>:120 [sano- [etta [[P [D tama]] [T/fin [istuu <sti mukavasti>]]]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:120 [T/fin [<__>:120 [sano- [etta [[P [D tama]] [T/fin [istuu <sti mukavasti>]]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:120 [T/fin [<__>:120 [sano- [etta [[P [D tama]] [T/fin [istuu <sti mukavasti>]]]]]]]]
				7. Last resort extraposition:
			= [<D Pekka> [T/fin [<D Pekka> [sano- [etta [[P [D tama]] [T/fin [istuu <sti mukavasti>]]]]]]]]
		Checking LF-interface conditions.
			Transferring [<D Pekka>:120 [T/fin [<__>:120 [sano- [etta [[P [D tama]] [T/fin [istuu <sti mukavasti>]]]]]]]] into the conceptual-intentional system...
				sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				P with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: 2. <D Pekka> 3. T/fin )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				istuu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				Transfer to C-I successful.
			sti<[ADV, V, TT/fin, , V, TT/fin]> failed to tail features [CAT:T]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  etta: [, V, TT/fin];  P: [P, , V, TT/fin];  D: [D, P, , V, TT/fin];  tama: [N, D, P, , V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  istuu: [V, TT/fin, , V, TT/fin];  sti: [ADV, V, TT/fin, , V, TT/fin];  mukavasti: [A, ADV, V, TT/fin, , V, TT/fin];  
			Let's find another solution...
.
.
.
		I have now explored all solutions for "mukava-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[etta [[P [D tama]] T/fin{V}]] sti]
				1. Head movement reconstruction:
				=[etta [[P [D tama]] [T/fin istuu]]]
				2. Feature processing:
				=[etta [[P [D tama]] [T/fin istuu]]]
				3. Extraposition:
				=[etta [[P [D tama]] [T/fin istuu]]]
				4. Floater movement reconstruction:
				=[etta [[P [D tama]] [T/fin istuu]]]
				5. Phrasal movement reconstruction:
				=[etta [[P [D tama]] [T/fin istuu]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[etta [[P [D tama]] [T/fin istuu]]]
				7. Last resort extraposition:
			=[[D Pekka] [T/fin{V} [[etta [[P [D tama]] [T/fin istuu]]] sti]]]

	24. Consume "mukavasti"

		[[D Pekka] [T/fin{V} [[etta [[P [D tama]] [T/fin istuu]]] sti]]] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [[etta [[P [D tama]] [T/fin istuu]]] sti{A}]]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{V} [[etta [[P [D tama]] [T/fin istuu]]] sti{A}]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [[etta [[P [D tama]] [T/fin istuu]]] sti{A}]]]]
				=[[D Pekka] [T/fin [sano- [[etta [[P [D tama]] [T/fin istuu]]] [sti mukavasti]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [sano- [[etta [[P [D tama]] [T/fin istuu]]] [sti mukavasti]]]]]
				3. Extraposition:
					sano- cannot select sti
					Extraposition will be tried on [sti mukavasti].
					<sti mukavasti> was made an adjunct.
					<sti mukavasti> is transferred to LF as a phase.
				=[[D Pekka] [T/fin [sano- [[etta [[P [D tama]] [T/fin istuu]]] <sti mukavasti>]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:121 [T/fin [<__>:121 [sano- [[etta [[P [D tama]] [T/fin istuu]]] <sti mukavasti>]]]]]
					sti at the right failed to tail [CAT:T]
				=[<D Pekka>:121 [T/fin [<__>:121 [sano- [[etta [[P [D tama]] [T/fin istuu]]] <sti mukavasti>]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:121 [T/fin [<__>:121 [sano- [[etta [[P [D tama]] [T/fin istuu]]] <sti mukavasti>]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[<D Pekka>:121 [T/fin [<__>:121 [sano- [[etta [[P [D tama]] [T/fin istuu]]] <sti mukavasti>]]]]]
				7. Last resort extraposition:
			= [<D Pekka> [T/fin [<D Pekka> [sano- [[etta [[P [D tama]] [T/fin istuu]]] <sti mukavasti>]]]]]
		Checking LF-interface conditions.
			Transferring [<D Pekka>:121 [T/fin [<__>:121 [sano- [[etta [[P [D tama]] [T/fin istuu]]] <sti mukavasti>]]]]] into the conceptual-intentional system...
				sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				P with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: 2. <D Pekka> 3. T/fin )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				istuu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				Transfer to C-I successful.
			sti<[ADV, V, TT/fin]> failed to tail features [CAT:T]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  etta: [, V, TT/fin];  P: [P, , V, TT/fin];  D: [D, P, , V, TT/fin];  tama: [N, D, P, , V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  istuu: [V, TT/fin, , V, TT/fin];  sti: [ADV, V, TT/fin];  mukavasti: [A, ADV, V, TT/fin];  
			Let's find another solution...
.
.
.
		I have now explored all solutions for "mukava-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[T/fin{V} [etta [[P [D tama]] T/fin{V}]]] sti]
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[T/fin [sano- [etta [[P [D tama]] T/fin{V}]]]]
				=[T/fin [sano- [etta [[P [D tama]] [T/fin istuu]]]]]
				2. Feature processing:
				=[T/fin [sano- [etta [[P [D tama]] [T/fin istuu]]]]]
				3. Extraposition:
				=[T/fin [sano- [etta [[P [D tama]] [T/fin istuu]]]]]
				4. Floater movement reconstruction:
				=[T/fin [sano- [etta [[P [D tama]] [T/fin istuu]]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [sano- [etta [[P [D tama]] [T/fin istuu]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[T/fin [sano- [etta [[P [D tama]] [T/fin istuu]]]]]
				7. Last resort extraposition:
			=[[D Pekka] [[T/fin [sano- [etta [[P [D tama]] [T/fin istuu]]]]] sti]]

	25. Consume "mukavasti"

		[[D Pekka] [[T/fin [sano- [etta [[P [D tama]] [T/fin istuu]]]]] sti]] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
			=[[D Pekka] [[T/fin [sano- [etta [[P [D tama]] [T/fin istuu]]]]] sti{A}]]

	>>>	Trying candidate spellout structure [[D Pekka] [[T/fin [sano- [etta [[P [D tama]] [T/fin istuu]]]]] sti{A}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[D Pekka] [[T/fin [sano- [etta [[P [D tama]] [T/fin istuu]]]]] [sti mukavasti]]]
				2. Feature processing:
				=[[D Pekka] [[T/fin [sano- [etta [[P [D tama]] [T/fin istuu]]]]] [sti mukavasti]]]
				3. Extraposition:
				=[[D Pekka] [[T/fin [sano- [etta [[P [D tama]] [T/fin istuu]]]]] [sti mukavasti]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					sti at the right failed to tail [CAT:T]
					<sti mukavasti> was made an adjunct.
					<sti mukavasti> is transferred to LF as a phase.
				=[[D Pekka] [[T/fin [sano- [etta [[P [D tama]] [T/fin istuu]]]]] <sti mukavasti>]]
				5. Phrasal movement reconstruction:
					[D Pekka] will undergo A-reconstruction.
				=[[D Pekka]:20 [[T/fin [__:20 [sano- [etta [[P [D tama]] [T/fin istuu]]]]]] <sti mukavasti>]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[D Pekka]:20 [[T/fin [__:20 [sano- [etta [[P [D tama]] [T/fin istuu]]]]]] <sti mukavasti>]]
				7. Last resort extraposition:
			= [[D Pekka] [[T/fin [[D Pekka] [sano- [etta [[P [D tama]] [T/fin istuu]]]]]] <sti mukavasti>]]
		Checking LF-interface conditions.
			Transferring [[D Pekka]:20 [[T/fin [__:20 [sano- [etta [[P [D tama]] [T/fin istuu]]]]]] <sti mukavasti>]] into the conceptual-intentional system...
				sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Pekka]    (alternatives: 2. T/fin )
				P with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: 2. [D Pekka] 3. T/fin )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				istuu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Pekka]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'P([D tama])', 'T/fin(Generic)', 'T/fin([P [D tama]])', 'istuu([D Pekka])', 'sano-([D Pekka])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D Pekka] [[T/fin [[D Pekka] [sano- [etta [[P [D tama]] [T/fin istuu]]]]]] <sti mukavasti>]]
		Grammar: [[D Pekka]:1 [[T/fin [__:1 [sano- [etta [[P [D tama]] [T/fin istuu]]]]]] <sti mukavasti>]]
		Spellout TT/finP = [DP:1 [[TT/fin [__:1 [V [ [PP [TT/fin V]]]]]] ADVP]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  etta: [, V, TT/fin];  P: [P, , V, TT/fin];  D: [D, P, , V, TT/fin];  tama: [N, D, P, , V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  istuu: [V, TT/fin, , V, TT/fin];  sti: [ADV];  mukavasti: [A, ADV];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "mukava-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (4) =[[[D Pekka] [T/fin{V} [etta [[P [D tama]] T/fin{V}]]]] sti]
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [etta [[P [D tama]] T/fin{V}]]]]]
				=[[D Pekka] [T/fin [sano- [etta [[P [D tama]] [T/fin istuu]]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [sano- [etta [[P [D tama]] [T/fin istuu]]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [sano- [etta [[P [D tama]] [T/fin istuu]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:122 [T/fin [<__>:122 [sano- [etta [[P [D tama]] [T/fin istuu]]]]]]]
				=[<D Pekka>:122 [T/fin [<__>:122 [sano- [etta [[P [D tama]] [T/fin istuu]]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:122 [T/fin [<__>:122 [sano- [etta [[P [D tama]] [T/fin istuu]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:122 [T/fin [<__>:122 [sano- [etta [[P [D tama]] [T/fin istuu]]]]]]]
				7. Last resort extraposition:
			=[[<D Pekka>:122 [T/fin [<__>:122 [sano- [etta [[P [D tama]] [T/fin istuu]]]]]]] sti]

	26. Consume "mukavasti"

		[[<D Pekka> [T/fin [<D Pekka> [sano- [etta [[P [D tama]] [T/fin istuu]]]]]]] sti] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
			=[[<D Pekka>:122 [T/fin [<__>:122 [sano- [etta [[P [D tama]] [T/fin istuu]]]]]]] sti{A}]

	>>>	Trying candidate spellout structure [[<D Pekka> [T/fin [<D Pekka> [sano- [etta [[P [D tama]] [T/fin istuu]]]]]]] sti{A}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[<D Pekka>:122 [T/fin [<__>:122 [sano- [etta [[P [D tama]] [T/fin istuu]]]]]]] [sti mukavasti]]
				2. Feature processing:
				=[[<D Pekka>:122 [T/fin [<__>:122 [sano- [etta [[P [D tama]] [T/fin istuu]]]]]]] [sti mukavasti]]
				3. Extraposition:
				=[[<D Pekka>:122 [T/fin [<__>:122 [sano- [etta [[P [D tama]] [T/fin istuu]]]]]]] [sti mukavasti]]
				4. Floater movement reconstruction:
					sti at the right failed to tail [CAT:T]
					<sti mukavasti> was made an adjunct.
					<sti mukavasti> is transferred to LF as a phase.
				=[[<D Pekka>:122 [T/fin [<__>:122 [sano- [etta [[P [D tama]] [T/fin istuu]]]]]]] <sti mukavasti>]
				5. Phrasal movement reconstruction:
				=[[<D Pekka>:122 [T/fin [<__>:122 [sano- [etta [[P [D tama]] [T/fin istuu]]]]]]] <sti mukavasti>]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[<D Pekka>:122 [T/fin [<__>:122 [sano- [etta [[P [D tama]] [T/fin istuu]]]]]]] <sti mukavasti>]
				7. Last resort extraposition:
			= [[<D Pekka> [T/fin [<D Pekka> [sano- [etta [[P [D tama]] [T/fin istuu]]]]]]] <sti mukavasti>]
		Checking LF-interface conditions.
			Transferring [[<D Pekka>:122 [T/fin [<__>:122 [sano- [etta [[P [D tama]] [T/fin istuu]]]]]]] <sti mukavasti>] into the conceptual-intentional system...
				sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				P with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: 2. <D Pekka> 3. T/fin )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				istuu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'P([D tama])', 'T/fin(Generic)', 'T/fin([P [D tama]])', 'istuu(<D Pekka>)', 'sano-(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[<D Pekka> [T/fin [<D Pekka> [sano- [etta [[P [D tama]] [T/fin istuu]]]]]]] <sti mukavasti>]
		Grammar: [[<D Pekka>:1 [T/fin [<__>:1 [sano- [etta [[P [D tama]] [T/fin istuu]]]]]]] <sti mukavasti>]
		Spellout TT/finP = [[DP:1 [TT/fin [__:1 [V [ [PP [TT/fin V]]]]]]] ADVP]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  etta: [, V, TT/fin];  P: [P, , V, TT/fin];  D: [D, P, , V, TT/fin];  tama: [N, D, P, , V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  istuu: [V, TT/fin, , V, TT/fin];  sti: [ADV];  mukavasti: [A, ADV];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "mukava-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (5) =[[[P [D tama]] T/fin{V}] sti]
				1. Head movement reconstruction:
				=[[P [D tama]] [T/fin istuu]]
				2. Feature processing:
				=[[P [D tama]] [T/fin istuu]]
				3. Extraposition:
				=[[P [D tama]] [T/fin istuu]]
				4. Floater movement reconstruction:
				=[[P [D tama]] [T/fin istuu]]
				5. Phrasal movement reconstruction:
				=[[P [D tama]] [T/fin istuu]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[P [D tama]] [T/fin istuu]]
				7. Last resort extraposition:
			=[[D Pekka] [T/fin{V} [etta [[[P [D tama]] [T/fin istuu]] sti]]]]

	27. Consume "mukavasti"

		[[D Pekka] [T/fin{V} [etta [[[P [D tama]] [T/fin istuu]] sti]]]] + mukavasti
			Filtering out impossible merge sites...
			Sink "mukavasti" into sti because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta [[[P [D tama]] [T/fin istuu]] sti{A}]]]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{V} [etta [[[P [D tama]] [T/fin istuu]] sti{A}]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [etta [[[P [D tama]] [T/fin istuu]] sti{A}]]]]]
				=[[D Pekka] [T/fin [sano- [etta [[[P [D tama]] [T/fin istuu]] [sti mukavasti]]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [sano- [etta [[[P [D tama]] [T/fin istuu]] [sti mukavasti]]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [sano- [etta [[[P [D tama]] [T/fin istuu]] [sti mukavasti]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:123 [T/fin [<__>:123 [sano- [etta [[[P [D tama]] [T/fin istuu]] [sti mukavasti]]]]]]]
					sti at the right failed to tail [CAT:T]
					<sti mukavasti> was made an adjunct.
					<sti mukavasti> is transferred to LF as a phase.
				=[<D Pekka>:123 [T/fin [<__>:123 [sano- [etta [[[P [D tama]] [T/fin istuu]] <sti mukavasti>]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:123 [T/fin [<__>:123 [sano- [etta [[[P [D tama]] [T/fin istuu]] <sti mukavasti>]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[<D Pekka>:123 [T/fin [<__>:123 [sano- [etta [[[P [D tama]] [T/fin istuu]] <sti mukavasti>]]]]]]
				7. Last resort extraposition:
			= [<D Pekka> [T/fin [<D Pekka> [sano- [etta [[[P [D tama]] [T/fin istuu]] <sti mukavasti>]]]]]]
		Checking LF-interface conditions.
			Transferring [<D Pekka>:123 [T/fin [<__>:123 [sano- [etta [[[P [D tama]] [T/fin istuu]] <sti mukavasti>]]]]]] into the conceptual-intentional system...
				sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				P with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: 2. <D Pekka> 3. T/fin )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				istuu with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'P([D tama])', 'T/fin(Generic)', 'T/fin([P [D tama]])', 'istuu(<D Pekka>)', 'sano-(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [sano- [etta [[[P [D tama]] [T/fin istuu]] <sti mukavasti>]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<__>:1 [sano- [etta [[[P [D tama]] [T/fin istuu]] <sti mukavasti>]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [ [[PP [TT/fin V]] ADVP]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
istuu:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:sit', 'PF:istuu', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
sti:['!COMP:A', '-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:sti', 'TAIL:CAT:T']
mukavasti:['CAT:A', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  etta: [, V, TT/fin];  P: [P, , V, TT/fin];  D: [D, P, , V, TT/fin];  tama: [N, D, P, , V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  istuu: [V, TT/fin, , V, TT/fin];  sti: [ADV, , V, TT/fin];  mukavasti: [A, ADV, , V, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "mukava-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "mukavasti".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "istu-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "istuu".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tama-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tama".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tassa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "etta".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sano-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sanoo".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 50
['mina', 'haluan']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['hum$', 'def$', '1p$', 'sg$', 'nom$', 'D$', 'mina-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	1. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	2. Consume "1p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:1'] into working memory.

	3. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	4. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:1', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	7. Consume "mina"

		D + mina
			Filtering out impossible merge sites...
			Sink "mina" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-n]$', 'T/fin$', 'v$', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:PER:1', 'PHI:DET:DEF', 'LANG:FI', 'PHI:NUM:SG', '-'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D mina].
				=[D mina]
				2. Feature processing:
				=[D mina]
				3. Extraposition:
				=[D mina]
				4. Floater movement reconstruction:
				=[D mina]
				5. Phrasal movement reconstruction:
				=[D mina]
				6. Agreement reconstruction:
				=[D mina]
				7. Last resort extraposition:
			=[[D mina] T/fin]

	10. Consume "v"

		[[D mina] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D mina] T/fin{v}]

	11. Consume "haluaa"

		[[D mina] T/fin{v}] + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into v because they are inside the same phonological word.
			=[[D mina] T/fin{v,V}]

	>>>	Trying candidate spellout structure [[D mina] T/fin{v,V}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[D mina] [T/fin [v haluaa]]]
				2. Feature processing:
				=[[D mina] [T/fin [v haluaa]]]
				3. Extraposition:
				=[[D mina] [T/fin [v haluaa]]]
				4. Floater movement reconstruction:
					[D mina] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D mina]
					<D mina> was made an adjunct.
					<D mina> is transferred to LF as a phase.
					 = [<D mina>:124 [T/fin [<__>:124 [v haluaa]]]]
				=[<D mina>:124 [T/fin [<__>:124 [v haluaa]]]]
				5. Phrasal movement reconstruction:
				=[<D mina>:124 [T/fin [<__>:124 [v haluaa]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:1 from the edge of T/fin.
				=[<D mina>:124 [T/fin [<__>:124 [v haluaa]]]]
				7. Last resort extraposition:
				"haluaa" lacks complement.
					Last resort extraposition will be tried on [<D mina>:124 [T/fin [<__>:124 [v haluaa]]]].
					No suitable node for extraposition found. No action was taken.
			= [<D mina> [T/fin [<D mina> [v haluaa]]]]
		Checking LF-interface conditions.
				"haluaa" lacks complement.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'VAL']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
mina:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:I', 'PF:mina', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  mina: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  haluaa: [V, v, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "halua-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "haluan".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "mina-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "1p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "mina".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 51
['John', 'wants', 'to_inf', 'leave']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'v$', 'want-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin]

	10. Consume "v"

		[[D John] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D John] T/fin{v}]

	11. Consume "want"

		[[D John] T/fin{v}] + want
			Filtering out impossible merge sites...
			Sink "want" into v because they are inside the same phonological word.
			=[[D John] T/fin{v,V}]

	12. Consume "to"

		[[D John] T/fin{v,V}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				"want" lacks complement.
				Avoid [[D John] [T/fin [[D John] [v want]]]] as left branch because it constitutes illicit structure.
				[[D John] T/fin{v,V}] + to = -197]
				T/fin{v,V} + to = 2]
		Ranking completed:
			1. [T/fin{v,V}; to]
			2. [[[D John] T/fin{v,V}]; to]
			Exploring solution number (1) =[T/fin{v,V} to]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
				An EPP-head "T/fin{v,V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} to]]

	13. Consume "leave"

		[[D John] [T/fin{v,V} to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [v [want to]]]]] leave] due to bad left branch.
				Reject [[T/fin [v [want to]]] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} [to leave]]]

	>>>	Trying candidate spellout structure [[D John] [T/fin{v,V} [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D John] [T/fin [v{V} [to leave]]]]
					Target want in v
					=[[D John] [T/fin [v [want [to leave]]]]]
				=[[D John] [T/fin [v [want [to leave]]]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[D John] [T/fin [v [want [to leave]]]]]
				3. Extraposition:
				=[[D John] [T/fin [v [want [to leave]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v [want [to leave]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:123 [T/fin [__:123 [v [want [to leave]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[D John]:123 [T/fin [__:123 [v [want [to leave]]]]]]
				7. Last resort extraposition:
			= [[D John] [T/fin [[D John] [v [want [to leave]]]]]]
		Checking LF-interface conditions.
			Transferring [[D John]:123 [T/fin [__:123 [v [want [to leave]]]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				want with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				to with ['PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'leave([D John])', 'to([D John])', 'v([D John])', 'want([D John])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [v [want [to leave]]]]]]
		Grammar: [[D John]:1 [T/fin [__:1 [v [want [to leave]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [INF V]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  want: [V, v, TT/fin];  to: [INF, V, v, TT/fin];  leave: [V, INF, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin{v,V}] to]
				1. Head movement reconstruction:
				=[[D John] [T/fin [v want]]]
				2. Feature processing:
				=[[D John] [T/fin [v want]]]
				3. Extraposition:
				=[[D John] [T/fin [v want]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v want]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:124 [T/fin [__:124 [v want]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:124 [T/fin [__:124 [v want]]]]
				7. Last resort extraposition:
				"want" lacks complement.
					Last resort extraposition will be tried on [[D John]:124 [T/fin [__:124 [v want]]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:124 [T/fin [__:124 [v want]]]] to]

	14. Consume "leave"

		[[[D John] [T/fin [[D John] [v want]]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [v want]]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:124 [T/fin [__:124 [v want]]]] [to leave]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [v want]]]] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:124 [T/fin [__:124 [v want]]]] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:124 [T/fin [__:124 [v want]]]] [to leave]]
				3. Extraposition:
				=[[[D John]:124 [T/fin [__:124 [v want]]]] [to leave]]
				4. Floater movement reconstruction:
				=[[[D John]:124 [T/fin [__:124 [v want]]]] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[D John]:124 [T/fin [__:124 [v want]]]] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[D John]:124 [T/fin [__:124 [v want]]]] [to leave]]
				7. Last resort extraposition:
				"want" lacks complement.
				to has unacceptable specifier [[D John]:124 [T/fin [__:124 [v want]]]].
					Last resort extraposition will be tried on [[[D John]:124 [T/fin [__:124 [v want]]]] [to leave]].
			= [[[D John] [T/fin [[D John] [v want]]]] [to leave]]
		Checking LF-interface conditions.
				"want" lacks complement.
				to has unacceptable specifier [[D John]:124 [T/fin [__:124 [v want]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  want: [V, v, TT/fin];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "want-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "wants".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 52
['John', 'wants', 'Mary', 'to_inf', 'leave']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'v$', 'want-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin]

	10. Consume "v"

		[[D John] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D John] T/fin{v}]

	11. Consume "want"

		[[D John] T/fin{v}] + want
			Filtering out impossible merge sites...
			Sink "want" into v because they are inside the same phonological word.
			=[[D John] T/fin{v,V}]

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

	12. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	13. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	14. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	15. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	16. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	17. Consume "D"

		[[D John] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"want" lacks complement.
				Avoid [[D John] [T/fin [[D John] [v want]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				[[D John] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 104]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D John] T/fin{v,V}]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
				An EPP-head "T/fin{v,V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} D]]

	18. Consume "Mary"

		[[D John] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[D John] [T/fin{v,V} D{N}]]

	19. Consume "to"

		[[D John] [T/fin{v,V} D{N}]] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				Avoid TT/finP as SPEC, to.
				An EPP-head "T/fin" lacks specifier.
				Avoid [T/fin [v [want [D Mary]]]] as left branch because it constitutes illicit structure.
				Avoid D{N} because it could break words.
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
				Prioritize D{N} because all solutions were negative.
				[[D John] [T/fin{v,V} D{N}]] + to = -98]
				[T/fin{v,V} D{N}] + to = -194]
				D{N} + to = 106]
		Ranking completed:
			1. [D{N}; to]
			2. [[[D John] [T/fin{v,V} D{N}]]; to]
			3. [[T/fin{v,V} D{N}]; to]
			Exploring solution number (1) =[D{N} to]
				1. Head movement reconstruction:
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
			=[[D John] [T/fin{v,V} [[D Mary] to]]]

	20. Consume "leave"

		[[D John] [T/fin{v,V} [[D Mary] to]]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [v [want [[D Mary] to]]]]]] leave] due to bad left branch.
				Reject [[T/fin [v [want [[D Mary] to]]]] leave] due to bad left branch.
				Reject [[[D Mary] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} [[D Mary] [to leave]]]]

	>>>	Trying candidate spellout structure [[D John] [T/fin{v,V} [[D Mary] [to leave]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D John] [T/fin [v{V} [[D Mary] [to leave]]]]]
					Target want in v
					=[[D John] [T/fin [v [want [[D Mary] [to leave]]]]]]
				=[[D John] [T/fin [v [want [[D Mary] [to leave]]]]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[D John] [T/fin [v [want [[D Mary] [to leave]]]]]]
				3. Extraposition:
				=[[D John] [T/fin [v [want [[D Mary] [to leave]]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v [want [[D Mary] [to leave]]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
					[D Mary] will undergo A-reconstruction.
				=[[D John]:130 [T/fin [__:130 [v [want [[D Mary]:131 [to [__:131 leave]]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG from the edge of to.
						to acquired PHI:PER:3 from the edge of to.
				=[[D John]:130 [T/fin [__:130 [v [want [[D Mary]:131 [to [__:131 leave]]]]]]]]
				7. Last resort extraposition:
			= [[D John] [T/fin [[D John] [v [want [[D Mary] [to [[D Mary] leave]]]]]]]]
		Checking LF-interface conditions.
			Transferring [[D John]:130 [T/fin [__:130 [v [want [[D Mary]:131 [to [__:131 leave]]]]]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				want with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: 2. [D John] 3. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'leave([D Mary])', 'v([D John])', 'want([D John])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [v [want [[D Mary] [to [[D Mary] leave]]]]]]]]
		Grammar: [[D John]:1 [T/fin [__:1 [v [want [[D Mary]:2 [to [__:2 leave]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [DP:2 [INF [__:2 V]]]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  want: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Mary: [N, D, V, v, TT/fin];  to: [INF, V, v, TT/fin];  __: [D, INF, V, v, TT/fin];  __: [N, D, INF, V, v, TT/fin];  leave: [V, INF, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] [T/fin{v,V} D{N}]] to]
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D John] [T/fin [v{V} D{N}]]]
					Target want in v
					=[[D John] [T/fin [v [want D{N}]]]]
				=[[D John] [T/fin [v [want [D Mary]]]]]
				2. Feature processing:
				=[[D John] [T/fin [v [want [D Mary]]]]]
				3. Extraposition:
				=[[D John] [T/fin [v [want [D Mary]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v [want [D Mary]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:132 [T/fin [__:132 [v [want [D Mary]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:132 [T/fin [__:132 [v [want [D Mary]]]]]]
				7. Last resort extraposition:
			=[[[D John]:132 [T/fin [__:132 [v [want [D Mary]]]]]] to]

	21. Consume "leave"

		[[[D John] [T/fin [[D John] [v [want [D Mary]]]]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [v [want [D Mary]]]]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:132 [T/fin [__:132 [v [want [D Mary]]]]]] [to leave]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [v [want [D Mary]]]]]] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:132 [T/fin [__:132 [v [want [D Mary]]]]]] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:132 [T/fin [__:132 [v [want [D Mary]]]]]] [to leave]]
				3. Extraposition:
				=[[[D John]:132 [T/fin [__:132 [v [want [D Mary]]]]]] [to leave]]
				4. Floater movement reconstruction:
				=[[[D John]:132 [T/fin [__:132 [v [want [D Mary]]]]]] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[D John]:132 [T/fin [__:132 [v [want [D Mary]]]]]] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[D John]:132 [T/fin [__:132 [v [want [D Mary]]]]]] [to leave]]
				7. Last resort extraposition:
				to has unacceptable specifier [[D John]:132 [T/fin [__:132 [v [want [D Mary]]]]]].
					Last resort extraposition will be tried on [[[D John]:132 [T/fin [__:132 [v [want [D Mary]]]]]] [to leave]].
			= [[[D John] [T/fin [[D John] [v [want [D Mary]]]]]] [to leave]]
		Checking LF-interface conditions.
				to has unacceptable specifier [[D John]:132 [T/fin [__:132 [v [want [D Mary]]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  want: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Mary: [N, D, V, v, TT/fin];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[T/fin{v,V} D{N}] to]
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[T/fin [v{V} D{N}]]
					Target want in v
					=[T/fin [v [want D{N}]]]
				=[T/fin [v [want [D Mary]]]]
				2. Feature processing:
				=[T/fin [v [want [D Mary]]]]
				3. Extraposition:
				=[T/fin [v [want [D Mary]]]]
				4. Floater movement reconstruction:
				=[T/fin [v [want [D Mary]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [v [want [D Mary]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[T/fin [v [want [D Mary]]]]
				7. Last resort extraposition:
				An EPP-head "T/fin" lacks specifier.
					Last resort extraposition will be tried on [T/fin [v [want [D Mary]]]].
					No suitable node for extraposition found. No action was taken.
			=[[D John] [[T/fin [v [want [D Mary]]]] to]]

	22. Consume "leave"

		[[D John] [[T/fin [v [want [D Mary]]]] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [[[T/fin [v [want [D Mary]]]] [D John]] to]] leave] due to bad left branch.
				Reject [[[T/fin [v [want [D Mary]]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [[T/fin [v [want [D Mary]]]] [to leave]]]

	>>>	Trying candidate spellout structure [[D John] [[T/fin [v [want [D Mary]]]] [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[D John] [[T/fin [v [want [D Mary]]]] [to leave]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[D John] [[T/fin [v [want [D Mary]]]] [to leave]]]
				3. Extraposition:
				=[[D John] [[T/fin [v [want [D Mary]]]] [to leave]]]
				4. Floater movement reconstruction:
				=[[D John] [[T/fin [v [want [D Mary]]]] [to leave]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
					New head was spawned due to multiple specifiers at to but its category is unknown!
				=[[D John]:134 [? [[T/fin [v [want [D Mary]]]] [to [__:134 leave]]]]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG by phi-Agree from __:134.
						to acquired PHI:PER:3 by phi-Agree from __:134.
				=[[D John]:134 [? [[T/fin [v [want [D Mary]]]] [to [__:134 leave]]]]]
				7. Last resort extraposition:
					An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier.
				to has unacceptable specifier [T/fin [v [want [D Mary]]]].
					Last resort extraposition will be tried on [[D John]:134 [? [[T/fin [v [want [D Mary]]]] [to [__:134 leave]]]]].
			= [[D John] [? [[T/fin [v [want [D Mary]]]] [to [[D John] leave]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier.
				to has unacceptable specifier [T/fin [v [want [D Mary]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI_CHECKED', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  ?: [?];  T/fin: [TT/fin, ?];  v: [v, TT/fin, ?];  want: [V, v, TT/fin, ?];  D: [D, V, v, TT/fin, ?];  Mary: [N, D, V, v, TT/fin, ?];  to: [INF, ?];  __: [D, INF, ?];  __: [N, D, INF, ?];  leave: [V, INF, ?];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[[D John] [T/fin [v want]]]
				2. Feature processing:
				=[[D John] [T/fin [v want]]]
				3. Extraposition:
				=[[D John] [T/fin [v want]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v want]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:135 [T/fin [__:135 [v want]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:135 [T/fin [__:135 [v want]]]]
				7. Last resort extraposition:
				"want" lacks complement.
					Last resort extraposition will be tried on [[D John]:135 [T/fin [__:135 [v want]]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:135 [T/fin [__:135 [v want]]]] D]

	23. Consume "Mary"

		[[[D John] [T/fin [[D John] [v want]]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[[D John]:135 [T/fin [__:135 [v want]]]] D{N}]

	24. Consume "to"

		[[[D John] [T/fin [[D John] [v want]]]] D{N}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				"want" lacks complement.
				Avoid [[[D John] [T/fin [[D John] [v want]]]] <D Mary>] as left branch because it constitutes illicit structure.
				[[[D John]:135 [T/fin [__:135 [v want]]]] D{N}] + to = -98]
				D{N} + to = 2]
		Ranking completed:
			1. [D{N}; to]
			2. [[[[D John]:135 [T/fin [__:135 [v want]]]] D{N}]; to]
			Exploring solution number (1) =[D{N} to]
				1. Head movement reconstruction:
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
			=[[[D John]:135 [T/fin [__:135 [v want]]]] [[D Mary] to]]

	25. Consume "leave"

		[[[D John] [T/fin [[D John] [v want]]]] [[D Mary] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [v want]]]] [[D Mary] to]] leave] due to bad left branch.
				Reject [[[D Mary] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:135 [T/fin [__:135 [v want]]]] [[D Mary] [to leave]]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [v want]]]] [[D Mary] [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:135 [T/fin [__:135 [v want]]]] [[D Mary] [to leave]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:135 [T/fin [__:135 [v want]]]] [[D Mary] [to leave]]]
				3. Extraposition:
				=[[[D John]:135 [T/fin [__:135 [v want]]]] [[D Mary] [to leave]]]
				4. Floater movement reconstruction:
				=[[[D John]:135 [T/fin [__:135 [v want]]]] [[D Mary] [to leave]]]
				5. Phrasal movement reconstruction:
					[D Mary] will undergo A-reconstruction.
					New head was spawned due to multiple specifiers at to but its category is unknown!
				=[[[D John]:135 [T/fin [__:135 [v want]]]] [? [[D Mary]:136 [to [__:136 leave]]]]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG from the edge of to.
						to acquired PHI:PER:3 from the edge of to.
				=[[[D John]:135 [T/fin [__:135 [v want]]]] [? [[D Mary]:136 [to [__:136 leave]]]]]
				7. Last resort extraposition:
				"want" lacks complement.
					An uninterpretable grammatical head without lexical category was detected.
					Last resort extraposition will be tried on [[[D John]:135 [T/fin [__:135 [v want]]]] [? [[D Mary]:136 [to [__:136 leave]]]]].
			= [[[D John] [T/fin [[D John] [v want]]]] [? [[D Mary] [to [[D Mary] leave]]]]]
		Checking LF-interface conditions.
				"want" lacks complement.
					An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  want: [V, v, TT/fin];  ?: [?];  D: [D, ?];  Mary: [N, D, ?];  to: [INF, ?];  __: [D, INF, ?];  __: [N, D, INF, ?];  leave: [V, INF, ?];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[[D John]:135 [T/fin [__:135 [v want]]]] D{N}] to]
				1. Head movement reconstruction:
				=[[[D John]:135 [T/fin [__:135 [v want]]]] [D Mary]]
				2. Feature processing:
				=[[[D John]:135 [T/fin [__:135 [v want]]]] [D Mary]]
				3. Extraposition:
				=[[[D John]:135 [T/fin [__:135 [v want]]]] [D Mary]]
				4. Floater movement reconstruction:
				=[[[D John]:135 [T/fin [__:135 [v want]]]] [D Mary]]
				5. Phrasal movement reconstruction:
				=[[[D John]:135 [T/fin [__:135 [v want]]]] [D Mary]]
				6. Agreement reconstruction:
				=[[[D John]:135 [T/fin [__:135 [v want]]]] [D Mary]]
				7. Last resort extraposition:
				"want" lacks complement.
				D has unacceptable specifier [[D John]:135 [T/fin [__:135 [v want]]]].
					Last resort extraposition will be tried on [[[D John]:135 [T/fin [__:135 [v want]]]] [D Mary]].
					<D Mary> was made an adjunct.
					<D Mary> is transferred to LF as a phase.
				"want" lacks complement.
					Something is still wrong. The structure is still uninterpretable.
			=[[[[D John]:135 [T/fin [__:135 [v want]]]] <D Mary>] to]

	26. Consume "leave"

		[[[[D John] [T/fin [[D John] [v want]]]] <D Mary>] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[[D John] [T/fin [[D John] [v want]]]] <D Mary>] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[[D John]:135 [T/fin [__:135 [v want]]]] <D Mary>] [to leave]]

	>>>	Trying candidate spellout structure [[[[D John] [T/fin [[D John] [v want]]]] <D Mary>] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[[D John]:135 [T/fin [__:135 [v want]]]] <D Mary>] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[[D John]:135 [T/fin [__:135 [v want]]]] <D Mary>] [to leave]]
				3. Extraposition:
				=[[[[D John]:135 [T/fin [__:135 [v want]]]] <D Mary>] [to leave]]
				4. Floater movement reconstruction:
				=[[[[D John]:135 [T/fin [__:135 [v want]]]] <D Mary>] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[[D John]:135 [T/fin [__:135 [v want]]]] <D Mary>] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[[D John]:135 [T/fin [__:135 [v want]]]] <D Mary>] [to leave]]
				7. Last resort extraposition:
				"want" lacks complement.
				to has unacceptable specifier [[[D John]:135 [T/fin [__:135 [v want]]]] <D Mary>].
					Last resort extraposition will be tried on [[[[D John]:135 [T/fin [__:135 [v want]]]] <D Mary>] [to leave]].
			= [[[[D John] [T/fin [[D John] [v want]]]] <D Mary>] [to leave]]
		Checking LF-interface conditions.
				"want" lacks complement.
				to has unacceptable specifier [[[D John]:135 [T/fin [__:135 [v want]]]] <D Mary>].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_']
want:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:want', 'PF:want', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  want: [V, v, TT/fin];  D: [D];  Mary: [N, D];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "want-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "wants".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 53
['tassa', 'haluaa', 'lahtea', 'Pekka']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['P$', 'tama']
			=P

		Next word contains multiple morphemes ['def$', '3p$', 'sg$', 'D$', 'tama-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	2. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	3. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	4. Consume "D$"
		Adding inflectional features {'-', 'PHI:PER:3', 'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:FI'} to D

	5. Consume "D"

		P + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
			=P{D}

	6. Consume "tama"

		P{D} + tama
			Filtering out impossible merge sites...
			Sink "tama" into D because they are inside the same phonological word.
			=P{D,N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v$', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	7. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	8. Consume "T/fin"

		P{D,N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[P{D,N} T/fin]
				1. Head movement reconstruction:
					P was opened into [P [D tama]].
				=[P [D tama]]
				2. Feature processing:
				=[P [D tama]]
				3. Extraposition:
				=[P [D tama]]
				4. Floater movement reconstruction:
				=[P [D tama]]
				5. Phrasal movement reconstruction:
				=[P [D tama]]
				6. Agreement reconstruction:
				=[P [D tama]]
				7. Last resort extraposition:
			=[[P [D tama]] T/fin]

	9. Consume "v"

		[[P [D tama]] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[P [D tama]] T/fin{v}]

	10. Consume "haluaa"

		[[P [D tama]] T/fin{v}] + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into v because they are inside the same phonological word.
			=[[P [D tama]] T/fin{v,V}]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	11. Consume "A/inf"

		[[P [D tama]] T/fin{v,V}] + A/inf
			Filtering out impossible merge sites...
				Reject [[[P [D tama]] [T/fin [v haluaa]]] A/inf] due to bad left branch.
			Exploring solution number (1) =[T/fin{v,V} A/inf]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[P [D tama]] [T/fin{v,V} A/inf]]

	12. Consume "lahtea"

		[[P [D tama]] [T/fin{v,V} A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[P [D tama]] [T/fin{v,V} A/inf{V}]]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	13. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	14. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	15. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	16. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	17. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	18. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D

	19. Consume "D"

		[[P [D tama]] [T/fin{v,V} A/inf{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				Avoid A/inf{V} because it could break words.
				[[P [D tama]] [T/fin{v,V} A/inf{V}]] + D = -98]
				[T/fin{v,V} A/inf{V}] + D = -96]
				A/inf{V} + D = -94]
		Ranking completed:
			1. [A/inf{V}; D]
			2. [[T/fin{v,V} A/inf{V}]; D]
			3. [[[P [D tama]] [T/fin{v,V} A/inf{V}]]; D]
			Exploring solution number (1) =[A/inf{V} D]
				1. Head movement reconstruction:
				=A/inf{V}
				2. Feature processing:
				=A/inf{V}
				3. Extraposition:
				=A/inf{V}
				4. Floater movement reconstruction:
				=A/inf{V}
				5. Phrasal movement reconstruction:
				=A/inf{V}
				6. Agreement reconstruction:
				=A/inf{V}
				7. Last resort extraposition:
				A/inf{V} probing for CAT:V failed.
				"A/inf{V}" lacks complement.
					Last resort extraposition will be tried on A/inf{V}.
					No suitable node for extraposition found. No action was taken.
			=[[P [D tama]] [T/fin{v,V} [A/inf{V} D]]]

	20. Consume "Pekka"

		[[P [D tama]] [T/fin{v,V} [A/inf{V} D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=[[P [D tama]] [T/fin{v,V} [A/inf{V} D{N}]]]

	>>>	Trying candidate spellout structure [[P [D tama]] [T/fin{v,V} [A/inf{V} D{N}]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[P [D tama]] [T/fin [v{V} [A/inf{V} D{N}]]]]
					Target haluaa in v
					=[[P [D tama]] [T/fin [v [haluaa [A/inf{V} D{N}]]]]]
					Target lahtea in A/inf
					=[[P [D tama]] [T/fin [v [haluaa [A/inf [lahtea D{N}]]]]]]
				=[[P [D tama]] [T/fin [v [haluaa [A/inf [lahtea [D Pekka]]]]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
					A/inf has neutralized PHI-feature, will be resolved into -ARG due to haluaa
				=[[P [D tama]] [T/fin [v [haluaa [A/inf [lahtea [D Pekka]]]]]]]
				3. Extraposition:
				=[[P [D tama]] [T/fin [v [haluaa [A/inf [lahtea [D Pekka]]]]]]]
				4. Floater movement reconstruction:
					D at the right failed to tail [ARG][CAT:FIN][VAL]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					Dropping <D Pekka>
					 = [[P [D tama]] [T/fin [<__>:125 [v [haluaa [A/inf [lahtea <D Pekka>:125]]]]]]]
				=[[P [D tama]] [T/fin [<__>:125 [v [haluaa [A/inf [lahtea <D Pekka>:125]]]]]]]
				5. Phrasal movement reconstruction:
				=[[P [D tama]] [T/fin [<__>:125 [v [haluaa [A/inf [lahtea <D Pekka>:125]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[P [D tama]] [T/fin [<__>:125 [v [haluaa [A/inf [lahtea <D Pekka>:125]]]]]]]
				7. Last resort extraposition:
			= [[P [D tama]] [T/fin [<D Pekka> [v [haluaa [A/inf [lahtea <D Pekka>]]]]]]]
		Checking LF-interface conditions.
			Transferring [[P [D tama]] [T/fin [<__>:125 [v [haluaa [A/inf [lahtea <D Pekka>:125]]]]]]] into the conceptual-intentional system...
				P with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: )
				haluaa with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: )
				lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'P([D tama])', 'T/fin(Generic)', 'T/fin([P [D tama]])', 'haluaa(<D Pekka>)', 'lahtea(<D Pekka>)', 'v(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[P [D tama]] [T/fin [<D Pekka> [v [haluaa [A/inf [lahtea <D Pekka>]]]]]]]
		Grammar: [[P [D tama]] [T/fin [<__>:1 [v [haluaa [A/inf [lahtea <D Pekka>:1]]]]]]]
		Spellout TT/finP = [PP [TT/fin [__:1 [v [V [INF [V DP:1]]]]]]]
----------------------------------------------------------------------------------------------------------
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  haluaa: [V, v, TT/fin];  A/inf: [INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  D: [D, V, INF, V, v, TT/fin];  Pekka: [N, D, V, INF, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[T/fin{v,V} A/inf{V}] D]
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[T/fin [v{V} A/inf{V}]]
					Target haluaa in v
					=[T/fin [v [haluaa A/inf{V}]]]
				=[T/fin [v [haluaa [A/inf lahtea]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
					A/inf has neutralized PHI-feature, will be resolved into -ARG due to haluaa
				=[T/fin [v [haluaa [A/inf lahtea]]]]
				3. Extraposition:
				=[T/fin [v [haluaa [A/inf lahtea]]]]
				4. Floater movement reconstruction:
				=[T/fin [v [haluaa [A/inf lahtea]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [v [haluaa [A/inf lahtea]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[T/fin [v [haluaa [A/inf lahtea]]]]
				7. Last resort extraposition:
			=[[P [D tama]] [[T/fin [v [haluaa [A/inf lahtea]]]] D]]

	21. Consume "Pekka"

		[[P [D tama]] [[T/fin [v [haluaa [A/inf lahtea]]]] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=[[P [D tama]] [[T/fin [v [haluaa [A/inf lahtea]]]] D{N}]]

	>>>	Trying candidate spellout structure [[P [D tama]] [[T/fin [v [haluaa [A/inf lahtea]]]] D{N}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[P [D tama]] [[T/fin [v [haluaa [A/inf lahtea]]]] [D Pekka]]]
				2. Feature processing:
				=[[P [D tama]] [[T/fin [v [haluaa [A/inf lahtea]]]] [D Pekka]]]
				3. Extraposition:
				=[[P [D tama]] [[T/fin [v [haluaa [A/inf lahtea]]]] [D Pekka]]]
				4. Floater movement reconstruction:
					D at the right failed to tail [ARG][CAT:FIN][VAL]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					Dropping <D Pekka>
					 = [[P [D tama]] [[T/fin [<__>:126 [v [haluaa [A/inf lahtea]]]]] <D Pekka>:126]]
				=[[P [D tama]] [[T/fin [<__>:126 [v [haluaa [A/inf lahtea]]]]] <D Pekka>:126]]
				5. Phrasal movement reconstruction:
				=[[P [D tama]] [[T/fin [<__>:126 [v [haluaa [A/inf lahtea]]]]] <D Pekka>:126]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[P [D tama]] [[T/fin [<__>:126 [v [haluaa [A/inf lahtea]]]]] <D Pekka>:126]]
				7. Last resort extraposition:
			= [[P [D tama]] [[T/fin [<D Pekka> [v [haluaa [A/inf lahtea]]]]] <D Pekka>]]
		Checking LF-interface conditions.
			Transferring [[P [D tama]] [[T/fin [<__>:126 [v [haluaa [A/inf lahtea]]]]] <D Pekka>:126]] into the conceptual-intentional system...
				P with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: )
				haluaa with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: )
				lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'P([D tama])', 'T/fin(Generic)', 'T/fin([P [D tama]])', 'haluaa(<D Pekka>)', 'lahtea(<D Pekka>)', 'v(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[P [D tama]] [[T/fin [<D Pekka> [v [haluaa [A/inf lahtea]]]]] <D Pekka>]]
		Grammar: [[P [D tama]] [[T/fin [<__>:1 [v [haluaa [A/inf lahtea]]]]] <D Pekka>:1]]
		Spellout TT/finP = [PP [[TT/fin [__:1 [v [V [INF V]]]]] DP:1]]
----------------------------------------------------------------------------------------------------------
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  haluaa: [V, v, TT/fin];  A/inf: [INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  D: [D];  Pekka: [N, D];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[[P [D tama]] [T/fin{v,V} A/inf{V}]] D]
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[P [D tama]] [T/fin [v{V} A/inf{V}]]]
					Target haluaa in v
					=[[P [D tama]] [T/fin [v [haluaa A/inf{V}]]]]
				=[[P [D tama]] [T/fin [v [haluaa [A/inf lahtea]]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
					A/inf has neutralized PHI-feature, will be resolved into -ARG due to haluaa
				=[[P [D tama]] [T/fin [v [haluaa [A/inf lahtea]]]]]
				3. Extraposition:
				=[[P [D tama]] [T/fin [v [haluaa [A/inf lahtea]]]]]
				4. Floater movement reconstruction:
				=[[P [D tama]] [T/fin [v [haluaa [A/inf lahtea]]]]]
				5. Phrasal movement reconstruction:
				=[[P [D tama]] [T/fin [v [haluaa [A/inf lahtea]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[P [D tama]] [T/fin [v [haluaa [A/inf lahtea]]]]]
				7. Last resort extraposition:
			=[[[P [D tama]] [T/fin [v [haluaa [A/inf lahtea]]]]] D]

	22. Consume "Pekka"

		[[[P [D tama]] [T/fin [v [haluaa [A/inf lahtea]]]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=[[[P [D tama]] [T/fin [v [haluaa [A/inf lahtea]]]]] D{N}]

	>>>	Trying candidate spellout structure [[[P [D tama]] [T/fin [v [haluaa [A/inf lahtea]]]]] D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[P [D tama]] [T/fin [v [haluaa [A/inf lahtea]]]]] [D Pekka]]
				2. Feature processing:
				=[[[P [D tama]] [T/fin [v [haluaa [A/inf lahtea]]]]] [D Pekka]]
				3. Extraposition:
				=[[[P [D tama]] [T/fin [v [haluaa [A/inf lahtea]]]]] [D Pekka]]
				4. Floater movement reconstruction:
					D at the right failed to tail [ARG][CAT:FIN][VAL]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					Dropping <D Pekka>
					 = [[[P [D tama]] [T/fin [<__>:127 [v [haluaa [A/inf lahtea]]]]]] <D Pekka>:127]
				=[[[P [D tama]] [T/fin [<__>:127 [v [haluaa [A/inf lahtea]]]]]] <D Pekka>:127]
				5. Phrasal movement reconstruction:
				=[[[P [D tama]] [T/fin [<__>:127 [v [haluaa [A/inf lahtea]]]]]] <D Pekka>:127]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[P [D tama]] [T/fin [<__>:127 [v [haluaa [A/inf lahtea]]]]]] <D Pekka>:127]
				7. Last resort extraposition:
			= [[[P [D tama]] [T/fin [<D Pekka> [v [haluaa [A/inf lahtea]]]]]] <D Pekka>]
		Checking LF-interface conditions.
			Transferring [[[P [D tama]] [T/fin [<__>:127 [v [haluaa [A/inf lahtea]]]]]] <D Pekka>:127] into the conceptual-intentional system...
				P with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: )
				haluaa with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: )
				lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'P([D tama])', 'T/fin(Generic)', 'T/fin([P [D tama]])', 'haluaa(<D Pekka>)', 'lahtea(<D Pekka>)', 'v(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[[P [D tama]] [T/fin [<D Pekka> [v [haluaa [A/inf lahtea]]]]]] <D Pekka>]
		Grammar: [[[P [D tama]] [T/fin [<__>:1 [v [haluaa [A/inf lahtea]]]]]] <D Pekka>:1]
		Spellout TT/finP = [[PP [TT/fin [__:1 [v [V [INF V]]]]]] DP:1]
----------------------------------------------------------------------------------------------------------
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  haluaa: [V, v, TT/fin];  A/inf: [INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  D: [D];  Pekka: [N, D];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "halua-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "haluaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tama-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tama".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tassa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 54
['tassa', 'kaskee', 'Merjan', 'lahtea', 'Pekka']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['P$', 'tama']
			=P

		Next word contains multiple morphemes ['def$', '3p$', 'sg$', 'D$', 'tama-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	2. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	3. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	4. Consume "D$"
		Adding inflectional features {'-', 'PHI:PER:3', 'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:FI'} to D

	5. Consume "D"

		P + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
			=P{D}

	6. Consume "tama"

		P{D} + tama
			Filtering out impossible merge sites...
			Sink "tama" into D because they are inside the same phonological word.
			=P{D,N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v*$', 'kaske-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	7. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	8. Consume "T/fin"

		P{D,N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[P{D,N} T/fin]
				1. Head movement reconstruction:
					P was opened into [P [D tama]].
				=[P [D tama]]
				2. Feature processing:
				=[P [D tama]]
				3. Extraposition:
				=[P [D tama]]
				4. Floater movement reconstruction:
				=[P [D tama]]
				5. Phrasal movement reconstruction:
				=[P [D tama]]
				6. Agreement reconstruction:
				=[P [D tama]]
				7. Last resort extraposition:
			=[[P [D tama]] T/fin]

	9. Consume "v*"

		[[P [D tama]] T/fin] + v*
			Filtering out impossible merge sites...
			Sink "v*" into T/fin because they are inside the same phonological word.
			=[[P [D tama]] T/fin{v}]

	10. Consume "kaske"

		[[P [D tama]] T/fin{v}] + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into v* because they are inside the same phonological word.
			=[[P [D tama]] T/fin{v,V}]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'gen$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	11. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	12. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	13. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	14. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	15. Consume "gen$"
		Storing inflectional feature ['-', '-FLOAT', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

	16. Consume "D$"
		Adding inflectional features {'TAIL:ARG,VAL,CAT:INF', 'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', '-FLOAT', 'LANG:FI', 'PHI:NUM:SG'} to D

	17. Consume "D"

		[[P [D tama]] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				kaske (kaske) is missing complement A/inf
				Avoid [[P [D tama]] [T/fin [v* kaske]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				[[P [D tama]] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 56]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[P [D tama]] T/fin{v,V}]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[P [D tama]] [T/fin{v,V} D]]

	18. Consume "Merja-"

		[[P [D tama]] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[P [D tama]] [T/fin{v,V} D{N}]]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	19. Consume "A/inf"

		[[P [D tama]] [T/fin{v,V} D{N}]] + A/inf
			Filtering out impossible merge sites...
				Reject [[[P [D tama]] [T/fin [v* [kaske <D Merja->]]]] A/inf] due to bad left branch.
				Reject [[T/fin [v* [kaske <D Merja->]]] A/inf] due to bad left branch.
			Exploring solution number (1) =[D{N} A/inf]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[P [D tama]] [T/fin{v,V} [[D Merja-] A/inf]]]

	20. Consume "lahtea"

		[[P [D tama]] [T/fin{v,V} [[D Merja-] A/inf]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[P [D tama]] [T/fin{v,V} [[D Merja-] A/inf{V}]]]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	21. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	22. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	23. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	24. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	25. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	26. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D

	27. Consume "D"

		[[P [D tama]] [T/fin{v,V} [[D Merja-] A/inf{V}]]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Avoid TT/finP as SPEC, D.
				[D Merja-] has no thematic role at the SPEC of A/inf
				Avoid [[D Merja-] [A/inf lahtea]] as left branch because it constitutes illicit structure.
				[[P [D tama]] [T/fin{v,V} [[D Merja-] A/inf{V}]]] + D = -98]
				[T/fin{v,V} [[D Merja-] A/inf{V}]] + D = -96]
				[[D Merja-] A/inf{V}] + D = -94]
				A/inf{V} + D = 4]
		Ranking completed:
			1. [A/inf{V}; D]
			2. [[[D Merja-] A/inf{V}]; D]
			3. [[T/fin{v,V} [[D Merja-] A/inf{V}]]; D]
			4. [[[P [D tama]] [T/fin{v,V} [[D Merja-] A/inf{V}]]]; D]
			Exploring solution number (1) =[A/inf{V} D]
				1. Head movement reconstruction:
				=A/inf{V}
				2. Feature processing:
				=A/inf{V}
				3. Extraposition:
				=A/inf{V}
				4. Floater movement reconstruction:
				=A/inf{V}
				5. Phrasal movement reconstruction:
				=A/inf{V}
				6. Agreement reconstruction:
				=A/inf{V}
				7. Last resort extraposition:
				A/inf{V} probing for CAT:V failed.
				"A/inf{V}" lacks complement.
					Last resort extraposition will be tried on A/inf{V}.
					No suitable node for extraposition found. No action was taken.
			=[[P [D tama]] [T/fin{v,V} [[D Merja-] [A/inf{V} D]]]]

	28. Consume "Pekka"

		[[P [D tama]] [T/fin{v,V} [[D Merja-] [A/inf{V} D]]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=[[P [D tama]] [T/fin{v,V} [[D Merja-] [A/inf{V} D{N}]]]]

	>>>	Trying candidate spellout structure [[P [D tama]] [T/fin{v,V} [[D Merja-] [A/inf{V} D{N}]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[[P [D tama]] [T/fin [v*{V} [[D Merja-] [A/inf{V} D{N}]]]]]
					Target kaske in v*
					=[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [A/inf{V} D{N}]]]]]]
					Target lahtea in A/inf
					=[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [A/inf [lahtea D{N}]]]]]]]
				=[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [A/inf [lahtea [D Pekka]]]]]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
					A/inf has neutralized PHI-feature, will be resolved into +ARG due to kaske
				=[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [A/inf [lahtea [D Pekka]]]]]]]]
				3. Extraposition:
				=[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [A/inf [lahtea [D Pekka]]]]]]]]
				4. Floater movement reconstruction:
					D at the right failed to tail [ARG][CAT:FIN][VAL]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					Dropping <D Pekka>
					 = [[P [D tama]] [T/fin [<__>:128 [v* [kaske [[D Merja-] [A/inf [lahtea <D Pekka>:128]]]]]]]]
				=[[P [D tama]] [T/fin [<__>:128 [v* [kaske [[D Merja-] [A/inf [lahtea <D Pekka>:128]]]]]]]]
				5. Phrasal movement reconstruction:
					[D Merja-] will undergo A-reconstruction.
				=[[P [D tama]] [T/fin [<__>:128 [v* [kaske [[D Merja-]:25 [A/inf [__:25 [lahtea <D Pekka>:128]]]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[P [D tama]] [T/fin [<__>:128 [v* [kaske [[D Merja-]:25 [A/inf [__:25 [lahtea <D Pekka>:128]]]]]]]]]
				7. Last resort extraposition:
			= [[P [D tama]] [T/fin [<D Pekka> [v* [kaske [[D Merja-] [A/inf [[D Merja-] [lahtea <D Pekka>]]]]]]]]]
		Checking LF-interface conditions.
			Transferring [[P [D tama]] [T/fin [<__>:128 [v* [kaske [[D Merja-]:25 [A/inf [__:25 [lahtea <D Pekka>:128]]]]]]]]] into the conceptual-intentional system...
				P with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				v* with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: )
				kaske with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. [D Merja-] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'P([D tama])', 'T/fin(Generic)', 'T/fin([P [D tama]])', 'kaske(clausal argument)', 'lahtea([D Merja-])', 'v*(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[P [D tama]] [T/fin [<D Pekka> [v* [kaske [[D Merja-] [A/inf [[D Merja-] [lahtea <D Pekka>]]]]]]]]]
		Grammar: [[P [D tama]] [T/fin [<__>:1 [v* [kaske [[D Merja-]:2 [A/inf [__:2 [lahtea <D Pekka>:1]]]]]]]]]
		Spellout TT/finP = [PP [TT/fin [__:1 [v [V [DP:2 [INF [__:2 [V DP:1]]]]]]]]]
----------------------------------------------------------------------------------------------------------
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Merja-: [N, D, V, v, TT/fin];  A/inf: [INF, V, v, TT/fin];  __: [D, INF, V, v, TT/fin];  __: [N, D, INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  D: [D, V, INF, V, v, TT/fin];  Pekka: [N, D, V, INF, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D Merja-] A/inf{V}] D]
				1. Head movement reconstruction:
				=[[D Merja-] [A/inf lahtea]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
				=[[D Merja-] [A/inf lahtea]]
				3. Extraposition:
				=[[D Merja-] [A/inf lahtea]]
				4. Floater movement reconstruction:
				=[[D Merja-] [A/inf lahtea]]
				5. Phrasal movement reconstruction:
				=[[D Merja-] [A/inf lahtea]]
				6. Agreement reconstruction:
					Head A/inf, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						A/inf acquired PHI:NUM:SG from the edge of A/inf.
						A/inf acquired PHI:PER:3 from the edge of A/inf.
				=[[D Merja-] [A/inf lahtea]]
				7. Last resort extraposition:
				[D Merja-] has no thematic role at the SPEC of A/inf
					Last resort extraposition will be tried on [[D Merja-] [A/inf lahtea]].
					No suitable node for extraposition found. No action was taken.
			=[[P [D tama]] [T/fin{v,V} [[[D Merja-] [A/inf lahtea]] D]]]

	29. Consume "Pekka"

		[[P [D tama]] [T/fin{v,V} [[[D Merja-] [A/inf lahtea]] D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=[[P [D tama]] [T/fin{v,V} [[[D Merja-] [A/inf lahtea]] D{N}]]]

	>>>	Trying candidate spellout structure [[P [D tama]] [T/fin{v,V} [[[D Merja-] [A/inf lahtea]] D{N}]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[[P [D tama]] [T/fin [v*{V} [[[D Merja-] [A/inf lahtea]] D{N}]]]]
					Target kaske in v*
					=[[P [D tama]] [T/fin [v* [kaske [[[D Merja-] [A/inf lahtea]] D{N}]]]]]
				=[[P [D tama]] [T/fin [v* [kaske [[[D Merja-] [A/inf lahtea]] [D Pekka]]]]]]
				2. Feature processing:
				=[[P [D tama]] [T/fin [v* [kaske [[[D Merja-] [A/inf lahtea]] [D Pekka]]]]]]
				3. Extraposition:
					kaske cannot select D
					Extraposition will be tried on [D Pekka].
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
				=[[P [D tama]] [T/fin [v* [kaske [[[D Merja-] [A/inf lahtea]] <D Pekka>]]]]]
				4. Floater movement reconstruction:
					D at the right failed to tail [ARG][CAT:FIN][VAL]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					Dropping <D Pekka>
					 = [[P [D tama]] [T/fin [<__>:129 [v* [kaske [[[D Merja-] [A/inf lahtea]] <D Pekka>:129]]]]]]
				=[[P [D tama]] [T/fin [<__>:129 [v* [kaske [[[D Merja-] [A/inf lahtea]] <D Pekka>:129]]]]]]
				5. Phrasal movement reconstruction:
				=[[P [D tama]] [T/fin [<__>:129 [v* [kaske [[[D Merja-] [A/inf lahtea]] <D Pekka>:129]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[P [D tama]] [T/fin [<__>:129 [v* [kaske [[[D Merja-] [A/inf lahtea]] <D Pekka>:129]]]]]]
				7. Last resort extraposition:
				D([D Merja-]) failed internal tail test for {frozenset({'CAT:INF', 'ARG', 'VAL'})}.
				[D Merja-] has no thematic role at the SPEC of A/inf
					Last resort extraposition will be tried on [[P [D tama]] [T/fin [<__>:129 [v* [kaske [[[D Merja-] [A/inf lahtea]] <D Pekka>:129]]]]]].
					No suitable node for extraposition found. No action was taken.
			= [[P [D tama]] [T/fin [<D Pekka> [v* [kaske [[[D Merja-] [A/inf lahtea]] <D Pekka>]]]]]]
		Checking LF-interface conditions.
				D([D Merja-]) failed internal tail test for {frozenset({'CAT:INF', 'ARG', 'VAL'})}.
				[D Merja-] has no thematic role at the SPEC of A/inf
			LF-interface condition(s) violated
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'PHI:NUM:SG', 'PHI:PER:3']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Merja-: [N, D, V, v, TT/fin];  A/inf: [INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  D: [D, V, v, TT/fin];  Pekka: [N, D, V, v, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[T/fin{v,V} [[D Merja-] A/inf{V}]] D]
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[T/fin [v*{V} [[D Merja-] A/inf{V}]]]
					Target kaske in v*
					=[T/fin [v* [kaske [[D Merja-] A/inf{V}]]]]
				=[T/fin [v* [kaske [[D Merja-] [A/inf lahtea]]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
					A/inf has neutralized PHI-feature, will be resolved into +ARG due to kaske
				=[T/fin [v* [kaske [[D Merja-] [A/inf lahtea]]]]]
				3. Extraposition:
				=[T/fin [v* [kaske [[D Merja-] [A/inf lahtea]]]]]
				4. Floater movement reconstruction:
				=[T/fin [v* [kaske [[D Merja-] [A/inf lahtea]]]]]
				5. Phrasal movement reconstruction:
					[D Merja-] will undergo A-reconstruction.
				=[T/fin [v* [kaske [[D Merja-]:26 [A/inf [__:26 lahtea]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[T/fin [v* [kaske [[D Merja-]:26 [A/inf [__:26 lahtea]]]]]]
				7. Last resort extraposition:
			=[[P [D tama]] [[T/fin [v* [kaske [[D Merja-]:26 [A/inf [__:26 lahtea]]]]]] D]]

	30. Consume "Pekka"

		[[P [D tama]] [[T/fin [v* [kaske [[D Merja-] [A/inf [[D Merja-] lahtea]]]]]] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=[[P [D tama]] [[T/fin [v* [kaske [[D Merja-]:26 [A/inf [__:26 lahtea]]]]]] D{N}]]

	>>>	Trying candidate spellout structure [[P [D tama]] [[T/fin [v* [kaske [[D Merja-] [A/inf [[D Merja-] lahtea]]]]]] D{N}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[P [D tama]] [[T/fin [v* [kaske [[D Merja-]:26 [A/inf [__:26 lahtea]]]]]] [D Pekka]]]
				2. Feature processing:
				=[[P [D tama]] [[T/fin [v* [kaske [[D Merja-]:26 [A/inf [__:26 lahtea]]]]]] [D Pekka]]]
				3. Extraposition:
				=[[P [D tama]] [[T/fin [v* [kaske [[D Merja-]:26 [A/inf [__:26 lahtea]]]]]] [D Pekka]]]
				4. Floater movement reconstruction:
					D at the right failed to tail [ARG][CAT:FIN][VAL]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					Dropping <D Pekka>
					 = [[P [D tama]] [[T/fin [<__>:130 [v* [kaske [[D Merja-]:26 [A/inf [__:26 lahtea]]]]]]] <D Pekka>:130]]
				=[[P [D tama]] [[T/fin [<__>:130 [v* [kaske [[D Merja-]:26 [A/inf [__:26 lahtea]]]]]]] <D Pekka>:130]]
				5. Phrasal movement reconstruction:
				=[[P [D tama]] [[T/fin [<__>:130 [v* [kaske [[D Merja-]:26 [A/inf [__:26 lahtea]]]]]]] <D Pekka>:130]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[P [D tama]] [[T/fin [<__>:130 [v* [kaske [[D Merja-]:26 [A/inf [__:26 lahtea]]]]]]] <D Pekka>:130]]
				7. Last resort extraposition:
			= [[P [D tama]] [[T/fin [<D Pekka> [v* [kaske [[D Merja-] [A/inf [[D Merja-] lahtea]]]]]]] <D Pekka>]]
		Checking LF-interface conditions.
			Transferring [[P [D tama]] [[T/fin [<__>:130 [v* [kaske [[D Merja-]:26 [A/inf [__:26 lahtea]]]]]]] <D Pekka>:130]] into the conceptual-intentional system...
				P with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				v* with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: )
				kaske with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'P([D tama])', 'T/fin(Generic)', 'T/fin([P [D tama]])', 'kaske(clausal argument)', 'lahtea([D Merja-])', 'v*(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[P [D tama]] [[T/fin [<D Pekka> [v* [kaske [[D Merja-] [A/inf [[D Merja-] lahtea]]]]]]] <D Pekka>]]
		Grammar: [[P [D tama]] [[T/fin [<__>:1 [v* [kaske [[D Merja-]:2 [A/inf [__:2 lahtea]]]]]]] <D Pekka>:1]]
		Spellout TT/finP = [PP [[TT/fin [__:1 [v [V [DP:2 [INF [__:2 V]]]]]]] DP:1]]
----------------------------------------------------------------------------------------------------------
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Merja-: [N, D, V, v, TT/fin];  A/inf: [INF, V, v, TT/fin];  __: [D, INF, V, v, TT/fin];  __: [N, D, INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  D: [D];  Pekka: [N, D];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (4) =[[[P [D tama]] [T/fin{v,V} [[D Merja-] A/inf{V}]]] D]
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[[P [D tama]] [T/fin [v*{V} [[D Merja-] A/inf{V}]]]]
					Target kaske in v*
					=[[P [D tama]] [T/fin [v* [kaske [[D Merja-] A/inf{V}]]]]]
				=[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [A/inf lahtea]]]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
					A/inf has neutralized PHI-feature, will be resolved into +ARG due to kaske
				=[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [A/inf lahtea]]]]]]
				3. Extraposition:
				=[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [A/inf lahtea]]]]]]
				4. Floater movement reconstruction:
				=[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [A/inf lahtea]]]]]]
				5. Phrasal movement reconstruction:
					[D Merja-] will undergo A-reconstruction.
				=[[P [D tama]] [T/fin [v* [kaske [[D Merja-]:27 [A/inf [__:27 lahtea]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[P [D tama]] [T/fin [v* [kaske [[D Merja-]:27 [A/inf [__:27 lahtea]]]]]]]
				7. Last resort extraposition:
			=[[[P [D tama]] [T/fin [v* [kaske [[D Merja-]:27 [A/inf [__:27 lahtea]]]]]]] D]

	31. Consume "Pekka"

		[[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [A/inf [[D Merja-] lahtea]]]]]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=[[[P [D tama]] [T/fin [v* [kaske [[D Merja-]:27 [A/inf [__:27 lahtea]]]]]]] D{N}]

	>>>	Trying candidate spellout structure [[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [A/inf [[D Merja-] lahtea]]]]]]] D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[P [D tama]] [T/fin [v* [kaske [[D Merja-]:27 [A/inf [__:27 lahtea]]]]]]] [D Pekka]]
				2. Feature processing:
				=[[[P [D tama]] [T/fin [v* [kaske [[D Merja-]:27 [A/inf [__:27 lahtea]]]]]]] [D Pekka]]
				3. Extraposition:
				=[[[P [D tama]] [T/fin [v* [kaske [[D Merja-]:27 [A/inf [__:27 lahtea]]]]]]] [D Pekka]]
				4. Floater movement reconstruction:
					D at the right failed to tail [ARG][CAT:FIN][VAL]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					Dropping <D Pekka>
					 = [[[P [D tama]] [T/fin [<__>:131 [v* [kaske [[D Merja-]:27 [A/inf [__:27 lahtea]]]]]]]] <D Pekka>:131]
				=[[[P [D tama]] [T/fin [<__>:131 [v* [kaske [[D Merja-]:27 [A/inf [__:27 lahtea]]]]]]]] <D Pekka>:131]
				5. Phrasal movement reconstruction:
				=[[[P [D tama]] [T/fin [<__>:131 [v* [kaske [[D Merja-]:27 [A/inf [__:27 lahtea]]]]]]]] <D Pekka>:131]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[P [D tama]] [T/fin [<__>:131 [v* [kaske [[D Merja-]:27 [A/inf [__:27 lahtea]]]]]]]] <D Pekka>:131]
				7. Last resort extraposition:
			= [[[P [D tama]] [T/fin [<D Pekka> [v* [kaske [[D Merja-] [A/inf [[D Merja-] lahtea]]]]]]]] <D Pekka>]
		Checking LF-interface conditions.
			Transferring [[[P [D tama]] [T/fin [<__>:131 [v* [kaske [[D Merja-]:27 [A/inf [__:27 lahtea]]]]]]]] <D Pekka>:131] into the conceptual-intentional system...
				P with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				v* with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: )
				kaske with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'P([D tama])', 'T/fin(Generic)', 'T/fin([P [D tama]])', 'kaske(clausal argument)', 'lahtea([D Merja-])', 'v*(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[[P [D tama]] [T/fin [<D Pekka> [v* [kaske [[D Merja-] [A/inf [[D Merja-] lahtea]]]]]]]] <D Pekka>]
		Grammar: [[[P [D tama]] [T/fin [<__>:1 [v* [kaske [[D Merja-]:2 [A/inf [__:2 lahtea]]]]]]]] <D Pekka>:1]
		Spellout TT/finP = [[PP [TT/fin [__:1 [v [V [DP:2 [INF [__:2 V]]]]]]]] DP:1]
----------------------------------------------------------------------------------------------------------
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Merja-: [N, D, V, v, TT/fin];  A/inf: [INF, V, v, TT/fin];  __: [D, INF, V, v, TT/fin];  __: [N, D, INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  D: [D];  Pekka: [N, D];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[P [D tama]] T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[[P [D tama]] [T/fin [v* kaske]]]
				2. Feature processing:
				=[[P [D tama]] [T/fin [v* kaske]]]
				3. Extraposition:
				=[[P [D tama]] [T/fin [v* kaske]]]
				4. Floater movement reconstruction:
				=[[P [D tama]] [T/fin [v* kaske]]]
				5. Phrasal movement reconstruction:
				=[[P [D tama]] [T/fin [v* kaske]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[P [D tama]] [T/fin [v* kaske]]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
					Last resort extraposition will be tried on [[P [D tama]] [T/fin [v* kaske]]].
					No suitable node for extraposition found. No action was taken.
			=[[[P [D tama]] [T/fin [v* kaske]]] D]

	32. Consume "Merja-"

		[[[P [D tama]] [T/fin [v* kaske]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[[P [D tama]] [T/fin [v* kaske]]] D{N}]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	33. Consume "A/inf"

		[[[P [D tama]] [T/fin [v* kaske]]] D{N}] + A/inf
			Filtering out impossible merge sites...
				Reject [[[[P [D tama]] [T/fin [v* kaske]]] <D Merja->] A/inf] due to bad left branch.
			Exploring solution number (1) =[D{N} A/inf]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] A/inf]]

	34. Consume "lahtea"

		[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] A/inf{V}]]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	35. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	36. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	37. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	38. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	39. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	40. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D

	41. Consume "D"

		[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] A/inf{V}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [[P [D tama]] [T/fin [v* kaske]]].
				Avoid [[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] as left branch because it constitutes illicit structure.
				[D Merja-] has no thematic role at the SPEC of A/inf
				Avoid [[D Merja-] [A/inf lahtea]] as left branch because it constitutes illicit structure.
				[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] A/inf{V}]] + D = -98]
				[[D Merja-] A/inf{V}] + D = -96]
				A/inf{V} + D = 3]
		Ranking completed:
			1. [A/inf{V}; D]
			2. [[[D Merja-] A/inf{V}]; D]
			3. [[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] A/inf{V}]]; D]
			Exploring solution number (1) =[A/inf{V} D]
				1. Head movement reconstruction:
				=A/inf{V}
				2. Feature processing:
				=A/inf{V}
				3. Extraposition:
				=A/inf{V}
				4. Floater movement reconstruction:
				=A/inf{V}
				5. Phrasal movement reconstruction:
				=A/inf{V}
				6. Agreement reconstruction:
				=A/inf{V}
				7. Last resort extraposition:
				A/inf{V} probing for CAT:V failed.
				"A/inf{V}" lacks complement.
					Last resort extraposition will be tried on A/inf{V}.
					No suitable node for extraposition found. No action was taken.
			=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf{V} D]]]

	42. Consume "Pekka"

		[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf{V} D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf{V} D{N}]]]

	>>>	Trying candidate spellout structure [[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf{V} D{N}]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target lahtea in A/inf
					=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf [lahtea D{N}]]]]
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf [lahtea [D Pekka]]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf [lahtea [D Pekka]]]]]
				3. Extraposition:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf [lahtea [D Pekka]]]]]
				4. Floater movement reconstruction:
					D at the right failed to tail [ARG][CAT:FIN][VAL]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					Dropping <D Pekka>
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf [lahtea <D Pekka>]]]]
				5. Phrasal movement reconstruction:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf [lahtea <D Pekka>]]]]
				6. Agreement reconstruction:
					Head A/inf, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						A/inf acquired PHI:NUM:SG from the edge of A/inf.
						A/inf acquired PHI:PER:3 from the edge of A/inf.
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf [lahtea <D Pekka>]]]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [[P [D tama]] [T/fin [v* kaske]]].
				D(<D Pekka>) failed internal tail test for {frozenset({'CAT:FIN', 'ARG', 'VAL'})}.
					Last resort extraposition will be tried on [[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf [lahtea <D Pekka>]]]].
					No suitable node for extraposition found. No action was taken.
			= [[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf [lahtea <D Pekka>]]]]
		Checking LF-interface conditions.
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [[P [D tama]] [T/fin [v* kaske]]].
				D(<D Pekka>) failed internal tail test for {frozenset({'CAT:FIN', 'ARG', 'VAL'})}.
			LF-interface condition(s) violated
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'PHI:NUM:SG', 'PHI:PER:3']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D];  Merja-: [N, D];  A/inf: [INF];  lahtea: [V, INF];  D: [D, V, INF];  Pekka: [N, D, V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D Merja-] A/inf{V}] D]
				1. Head movement reconstruction:
				=[[D Merja-] [A/inf lahtea]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
				=[[D Merja-] [A/inf lahtea]]
				3. Extraposition:
				=[[D Merja-] [A/inf lahtea]]
				4. Floater movement reconstruction:
				=[[D Merja-] [A/inf lahtea]]
				5. Phrasal movement reconstruction:
				=[[D Merja-] [A/inf lahtea]]
				6. Agreement reconstruction:
					Head A/inf, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						A/inf acquired PHI:NUM:SG from the edge of A/inf.
						A/inf acquired PHI:PER:3 from the edge of A/inf.
				=[[D Merja-] [A/inf lahtea]]
				7. Last resort extraposition:
				[D Merja-] has no thematic role at the SPEC of A/inf
					Last resort extraposition will be tried on [[D Merja-] [A/inf lahtea]].
					No suitable node for extraposition found. No action was taken.
			=[[[P [D tama]] [T/fin [v* kaske]]] [[[D Merja-] [A/inf lahtea]] D]]

	43. Consume "Pekka"

		[[[P [D tama]] [T/fin [v* kaske]]] [[[D Merja-] [A/inf lahtea]] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=[[[P [D tama]] [T/fin [v* kaske]]] [[[D Merja-] [A/inf lahtea]] D{N}]]

	>>>	Trying candidate spellout structure [[[P [D tama]] [T/fin [v* kaske]]] [[[D Merja-] [A/inf lahtea]] D{N}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[[D Merja-] [A/inf lahtea]] [D Pekka]]]
				2. Feature processing:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[[D Merja-] [A/inf lahtea]] [D Pekka]]]
				3. Extraposition:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[[D Merja-] [A/inf lahtea]] [D Pekka]]]
				4. Floater movement reconstruction:
					D at the right failed to tail [ARG][CAT:FIN][VAL]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					Dropping <D Pekka>
					D at the right failed to tail [ARG][CAT:FIN][VAL]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					Dropping <D Pekka>
				=[[[P [D tama]] [T/fin [v* kaske]]] [[[D Merja-] [A/inf lahtea]] <D Pekka>]]
				5. Phrasal movement reconstruction:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[[D Merja-] [A/inf lahtea]] <D Pekka>]]
				6. Agreement reconstruction:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[[D Merja-] [A/inf lahtea]] <D Pekka>]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [[P [D tama]] [T/fin [v* kaske]]].
					Last resort extraposition will be tried on [[[P [D tama]] [T/fin [v* kaske]]] [[[D Merja-] [A/inf lahtea]] <D Pekka>]].
					No suitable node for extraposition found. No action was taken.
			= [[[P [D tama]] [T/fin [v* kaske]]] [[[D Merja-] [A/inf lahtea]] <D Pekka>]]
		Checking LF-interface conditions.
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [[P [D tama]] [T/fin [v* kaske]]].
			LF-interface condition(s) violated
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'PHI:NUM:SG', 'PHI:PER:3']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D];  Merja-: [N, D];  A/inf: [INF];  lahtea: [V, INF];  D: [D];  Pekka: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] A/inf{V}]] D]
				1. Head movement reconstruction:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]]
				3. Extraposition:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]]
				4. Floater movement reconstruction:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]]
				5. Phrasal movement reconstruction:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]]
				6. Agreement reconstruction:
					Head A/inf, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						A/inf acquired PHI:NUM:SG from the edge of A/inf.
						A/inf acquired PHI:PER:3 from the edge of A/inf.
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [[P [D tama]] [T/fin [v* kaske]]].
					Last resort extraposition will be tried on [[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]].
					No suitable node for extraposition found. No action was taken.
			=[[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] D]

	44. Consume "Pekka"

		[[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=[[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] D{N}]

	>>>	Trying candidate spellout structure [[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] [D Pekka]]
				2. Feature processing:
				=[[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] [D Pekka]]
				3. Extraposition:
				=[[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] [D Pekka]]
				4. Floater movement reconstruction:
					D at the right failed to tail [ARG][CAT:FIN][VAL]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					Dropping <D Pekka>
				=[[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] <D Pekka>]
				5. Phrasal movement reconstruction:
				=[[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] <D Pekka>]
				6. Agreement reconstruction:
				=[[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] <D Pekka>]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [[P [D tama]] [T/fin [v* kaske]]].
					Last resort extraposition will be tried on [[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] <D Pekka>].
					No suitable node for extraposition found. No action was taken.
			= [[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [A/inf lahtea]]] <D Pekka>]
		Checking LF-interface conditions.
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [[P [D tama]] [T/fin [v* kaske]]].
			LF-interface condition(s) violated
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'PHI:NUM:SG', 'PHI:PER:3']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D];  Merja-: [N, D];  A/inf: [INF];  lahtea: [V, INF];  D: [D];  Pekka: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "gen$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merjan".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "kaske-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v*$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "kaskee".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tama-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tama".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tassa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 55
['tassa', 'kaskee', 'Pekka', 'Merjan', 'lahtea']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['P$', 'tama']
			=P

		Next word contains multiple morphemes ['def$', '3p$', 'sg$', 'D$', 'tama-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	2. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	3. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	4. Consume "D$"
		Adding inflectional features {'-', 'PHI:PER:3', 'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:FI'} to D

	5. Consume "D"

		P + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
			=P{D}

	6. Consume "tama"

		P{D} + tama
			Filtering out impossible merge sites...
			Sink "tama" into D because they are inside the same phonological word.
			=P{D,N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v*$', 'kaske-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	7. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	8. Consume "T/fin"

		P{D,N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[P{D,N} T/fin]
				1. Head movement reconstruction:
					P was opened into [P [D tama]].
				=[P [D tama]]
				2. Feature processing:
				=[P [D tama]]
				3. Extraposition:
				=[P [D tama]]
				4. Floater movement reconstruction:
				=[P [D tama]]
				5. Phrasal movement reconstruction:
				=[P [D tama]]
				6. Agreement reconstruction:
				=[P [D tama]]
				7. Last resort extraposition:
			=[[P [D tama]] T/fin]

	9. Consume "v*"

		[[P [D tama]] T/fin] + v*
			Filtering out impossible merge sites...
			Sink "v*" into T/fin because they are inside the same phonological word.
			=[[P [D tama]] T/fin{v}]

	10. Consume "kaske"

		[[P [D tama]] T/fin{v}] + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into v* because they are inside the same phonological word.
			=[[P [D tama]] T/fin{v,V}]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	11. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	12. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	13. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	14. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	15. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	16. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D

	17. Consume "D"

		[[P [D tama]] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				kaske (kaske) is missing complement A/inf
				Avoid [[P [D tama]] [T/fin [v* kaske]]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				[[P [D tama]] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 104]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[P [D tama]] T/fin{v,V}]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[P [D tama]] [T/fin{v,V} D]]

	18. Consume "Pekka"

		[[P [D tama]] [T/fin{v,V} D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=[[P [D tama]] [T/fin{v,V} D{N}]]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'gen$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	19. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	20. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	21. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	22. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	23. Consume "gen$"
		Storing inflectional feature ['-', '-FLOAT', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

	24. Consume "D$"
		Adding inflectional features {'TAIL:ARG,VAL,CAT:INF', 'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', '-FLOAT', 'LANG:FI', 'PHI:NUM:SG'} to D

	25. Consume "D"

		[[P [D tama]] [T/fin{v,V} D{N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				kaske (kaske) is missing complement A/inf
				Avoid [[P [D tama]] [T/fin [<D Pekka> [v* [kaske <D Pekka>]]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				kaske (kaske) is missing complement A/inf
				Avoid [T/fin [<D Pekka> [v* [kaske <D Pekka>]]]] as left branch because it constitutes illicit structure.
				Avoid [D{N} D] due to local agreement failure.
				Avoid D{N} because it could break words.
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
				Prioritize D{N} because all solutions were negative.
				[[P [D tama]] [T/fin{v,V} D{N}]] + D = -197]
				[T/fin{v,V} D{N}] + D = -194]
				D{N} + D = 59]
		Ranking completed:
			1. [D{N}; D]
			2. [[T/fin{v,V} D{N}]; D]
			3. [[[P [D tama]] [T/fin{v,V} D{N}]]; D]
			Exploring solution number (1) =[D{N} D]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[P [D tama]] [T/fin{v,V} [[D Pekka] D]]]

	26. Consume "Merja-"

		[[P [D tama]] [T/fin{v,V} [[D Pekka] D]]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[P [D tama]] [T/fin{v,V} [[D Pekka] D{N}]]]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	27. Consume "A/inf"

		[[P [D tama]] [T/fin{v,V} [[D Pekka] D{N}]]] + A/inf
			Filtering out impossible merge sites...
				Reject [[[P [D tama]] [T/fin [<D Pekka> [v* [kaske <<D Pekka> <D Merja->>]]]]] A/inf] due to bad left branch.
				Reject [[T/fin [<D Pekka> [v* [kaske <<D Pekka> <D Merja->>]]]] A/inf] due to bad left branch.
				Reject [[[D Pekka] [D Merja-]] A/inf] due to bad left branch.
			Exploring solution number (1) =[D{N} A/inf]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[P [D tama]] [T/fin{v,V} [[D Pekka] [[D Merja-] A/inf]]]]

	28. Consume "lahtea"

		[[P [D tama]] [T/fin{v,V} [[D Pekka] [[D Merja-] A/inf]]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[P [D tama]] [T/fin{v,V} [[D Pekka] [[D Merja-] A/inf{V}]]]]

	>>>	Trying candidate spellout structure [[P [D tama]] [T/fin{v,V} [[D Pekka] [[D Merja-] A/inf{V}]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[[P [D tama]] [T/fin [v*{V} [[D Pekka] [[D Merja-] A/inf{V}]]]]]
					Target kaske in v*
					=[[P [D tama]] [T/fin [v* [kaske [[D Pekka] [[D Merja-] A/inf{V}]]]]]]
				=[[P [D tama]] [T/fin [v* [kaske [[D Pekka] [[D Merja-] [A/inf lahtea]]]]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
					A/inf has neutralized PHI-feature, will be resolved into +ARG due to kaske
				=[[P [D tama]] [T/fin [v* [kaske [[D Pekka] [[D Merja-] [A/inf lahtea]]]]]]]
				3. Extraposition:
				=[[P [D tama]] [T/fin [v* [kaske [[D Pekka] [[D Merja-] [A/inf lahtea]]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [[P [D tama]] [T/fin [<__>:138 [v* [kaske [<D Pekka>:138 [[D Merja-] [A/inf lahtea]]]]]]]]
				=[[P [D tama]] [T/fin [<__>:138 [v* [kaske [<D Pekka>:138 [[D Merja-] [A/inf lahtea]]]]]]]]
				5. Phrasal movement reconstruction:
					[D Merja-] will undergo A-reconstruction.
				=[[P [D tama]] [T/fin [<__>:138 [v* [kaske [<D Pekka>:138 [[D Merja-]:28 [A/inf [__:28 lahtea]]]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[P [D tama]] [T/fin [<__>:138 [v* [kaske [<D Pekka>:138 [[D Merja-]:28 [A/inf [__:28 lahtea]]]]]]]]]
				7. Last resort extraposition:
			= [[P [D tama]] [T/fin [<D Pekka> [v* [kaske [<D Pekka> [[D Merja-] [A/inf [[D Merja-] lahtea]]]]]]]]]
		Checking LF-interface conditions.
			Transferring [[P [D tama]] [T/fin [<__>:138 [v* [kaske [<D Pekka>:138 [[D Merja-]:28 [A/inf [__:28 lahtea]]]]]]]]] into the conceptual-intentional system...
				P with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				v* with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: )
				kaske with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'P([D tama])', 'T/fin(Generic)', 'T/fin([P [D tama]])', 'kaske(clausal argument)', 'lahtea([D Merja-])', 'v*(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[P [D tama]] [T/fin [<D Pekka> [v* [kaske [<D Pekka> [[D Merja-] [A/inf [[D Merja-] lahtea]]]]]]]]]
		Grammar: [[P [D tama]] [T/fin [<__>:1 [v* [kaske [<D Pekka>:1 [[D Merja-]:2 [A/inf [__:2 lahtea]]]]]]]]]
		Spellout TT/finP = [PP [TT/fin [__:1 [v [V [DP:1 [DP:2 [INF [__:2 V]]]]]]]]]
----------------------------------------------------------------------------------------------------------
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Pekka: [N, D, V, v, TT/fin];  D: [D, V, v, TT/fin];  Merja-: [N, D, V, v, TT/fin];  A/inf: [INF, V, v, TT/fin];  __: [D, INF, V, v, TT/fin];  __: [N, D, INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[T/fin{v,V} D{N}] D]
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[T/fin [v*{V} D{N}]]
					Target kaske in v*
					=[T/fin [v* [kaske D{N}]]]
				=[T/fin [v* [kaske [D Pekka]]]]
				2. Feature processing:
				=[T/fin [v* [kaske [D Pekka]]]]
				3. Extraposition:
					kaske cannot select D
					Extraposition will be tried on [D Pekka].
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
				=[T/fin [v* [kaske <D Pekka>]]]
				4. Floater movement reconstruction:
					D at the right failed to tail [ARG][CAT:FIN][VAL]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					Dropping <D Pekka>
					 = [T/fin [<__>:139 [v* [kaske <D Pekka>:139]]]]
				=[T/fin [<__>:139 [v* [kaske <D Pekka>:139]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [<__>:139 [v* [kaske <D Pekka>:139]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[T/fin [<__>:139 [v* [kaske <D Pekka>:139]]]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
					Last resort extraposition will be tried on [T/fin [<__>:139 [v* [kaske <D Pekka>:139]]]].
					No suitable node for extraposition found. No action was taken.
			=[[P [D tama]] [[T/fin [<__>:139 [v* [kaske <D Pekka>:139]]]] D]]

	29. Consume "Merja-"

		[[P [D tama]] [[T/fin [<D Pekka> [v* [kaske <D Pekka>]]]] D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[P [D tama]] [[T/fin [<__>:139 [v* [kaske <D Pekka>:139]]]] D{N}]]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	30. Consume "A/inf"

		[[P [D tama]] [[T/fin [<D Pekka> [v* [kaske <D Pekka>]]]] D{N}]] + A/inf
			Filtering out impossible merge sites...
				Reject [[[P [D tama]] [[T/fin [<D Pekka> [v* [kaske <D Pekka>]]]] <D Merja->]] A/inf] due to bad left branch.
				Reject [[[T/fin [<D Pekka> [v* [kaske <D Pekka>]]]] <D Merja->] A/inf] due to bad left branch.
			Exploring solution number (1) =[D{N} A/inf]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[P [D tama]] [[T/fin [<__>:139 [v* [kaske <D Pekka>:139]]]] [[D Merja-] A/inf]]]

	31. Consume "lahtea"

		[[P [D tama]] [[T/fin [<D Pekka> [v* [kaske <D Pekka>]]]] [[D Merja-] A/inf]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[P [D tama]] [[T/fin [<__>:139 [v* [kaske <D Pekka>:139]]]] [[D Merja-] A/inf{V}]]]

	>>>	Trying candidate spellout structure [[P [D tama]] [[T/fin [<D Pekka> [v* [kaske <D Pekka>]]]] [[D Merja-] A/inf{V}]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[P [D tama]] [[T/fin [<__>:139 [v* [kaske <D Pekka>:139]]]] [[D Merja-] [A/inf lahtea]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
				=[[P [D tama]] [[T/fin [<__>:139 [v* [kaske <D Pekka>:139]]]] [[D Merja-] [A/inf lahtea]]]]
				3. Extraposition:
				=[[P [D tama]] [[T/fin [<__>:139 [v* [kaske <D Pekka>:139]]]] [[D Merja-] [A/inf lahtea]]]]
				4. Floater movement reconstruction:
				=[[P [D tama]] [[T/fin [<__>:139 [v* [kaske <D Pekka>:139]]]] [[D Merja-] [A/inf lahtea]]]]
				5. Phrasal movement reconstruction:
				=[[P [D tama]] [[T/fin [<__>:139 [v* [kaske <D Pekka>:139]]]] [[D Merja-] [A/inf lahtea]]]]
				6. Agreement reconstruction:
					Head A/inf, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						A/inf acquired PHI:NUM:SG from the edge of A/inf.
						A/inf acquired PHI:PER:3 from the edge of A/inf.
				=[[P [D tama]] [[T/fin [<__>:139 [v* [kaske <D Pekka>:139]]]] [[D Merja-] [A/inf lahtea]]]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [T/fin [<__>:139 [v* [kaske <D Pekka>:139]]]].
					Last resort extraposition will be tried on [[P [D tama]] [[T/fin [<__>:139 [v* [kaske <D Pekka>:139]]]] [[D Merja-] [A/inf lahtea]]]].
					No suitable node for extraposition found. No action was taken.
			= [[P [D tama]] [[T/fin [<D Pekka> [v* [kaske <D Pekka>]]]] [[D Merja-] [A/inf lahtea]]]]
		Checking LF-interface conditions.
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [T/fin [<__>:139 [v* [kaske <D Pekka>:139]]]].
			LF-interface condition(s) violated
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'PHI:NUM:SG', 'PHI:PER:3']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Pekka: [N, D, V, v, TT/fin];  D: [D];  Merja-: [N, D];  A/inf: [INF];  lahtea: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[[P [D tama]] [T/fin{v,V} D{N}]] D]
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[[P [D tama]] [T/fin [v*{V} D{N}]]]
					Target kaske in v*
					=[[P [D tama]] [T/fin [v* [kaske D{N}]]]]
				=[[P [D tama]] [T/fin [v* [kaske [D Pekka]]]]]
				2. Feature processing:
				=[[P [D tama]] [T/fin [v* [kaske [D Pekka]]]]]
				3. Extraposition:
					kaske cannot select D
					Extraposition will be tried on [D Pekka].
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
				=[[P [D tama]] [T/fin [v* [kaske <D Pekka>]]]]
				4. Floater movement reconstruction:
					D at the right failed to tail [ARG][CAT:FIN][VAL]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					Dropping <D Pekka>
					 = [[P [D tama]] [T/fin [<__>:140 [v* [kaske <D Pekka>:140]]]]]
				=[[P [D tama]] [T/fin [<__>:140 [v* [kaske <D Pekka>:140]]]]]
				5. Phrasal movement reconstruction:
				=[[P [D tama]] [T/fin [<__>:140 [v* [kaske <D Pekka>:140]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[P [D tama]] [T/fin [<__>:140 [v* [kaske <D Pekka>:140]]]]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
					Last resort extraposition will be tried on [[P [D tama]] [T/fin [<__>:140 [v* [kaske <D Pekka>:140]]]]].
					No suitable node for extraposition found. No action was taken.
			=[[[P [D tama]] [T/fin [<__>:140 [v* [kaske <D Pekka>:140]]]]] D]

	32. Consume "Merja-"

		[[[P [D tama]] [T/fin [<D Pekka> [v* [kaske <D Pekka>]]]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[[P [D tama]] [T/fin [<__>:140 [v* [kaske <D Pekka>:140]]]]] D{N}]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	33. Consume "A/inf"

		[[[P [D tama]] [T/fin [<D Pekka> [v* [kaske <D Pekka>]]]]] D{N}] + A/inf
			Filtering out impossible merge sites...
				Reject [[[[P [D tama]] [T/fin [<D Pekka> [v* [kaske <D Pekka>]]]]] <D Merja->] A/inf] due to bad left branch.
			Exploring solution number (1) =[D{N} A/inf]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[[P [D tama]] [T/fin [<__>:140 [v* [kaske <D Pekka>:140]]]]] [[D Merja-] A/inf]]

	34. Consume "lahtea"

		[[[P [D tama]] [T/fin [<D Pekka> [v* [kaske <D Pekka>]]]]] [[D Merja-] A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[[P [D tama]] [T/fin [<__>:140 [v* [kaske <D Pekka>:140]]]]] [[D Merja-] A/inf{V}]]

	>>>	Trying candidate spellout structure [[[P [D tama]] [T/fin [<D Pekka> [v* [kaske <D Pekka>]]]]] [[D Merja-] A/inf{V}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[P [D tama]] [T/fin [<__>:140 [v* [kaske <D Pekka>:140]]]]] [[D Merja-] [A/inf lahtea]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
				=[[[P [D tama]] [T/fin [<__>:140 [v* [kaske <D Pekka>:140]]]]] [[D Merja-] [A/inf lahtea]]]
				3. Extraposition:
				=[[[P [D tama]] [T/fin [<__>:140 [v* [kaske <D Pekka>:140]]]]] [[D Merja-] [A/inf lahtea]]]
				4. Floater movement reconstruction:
				=[[[P [D tama]] [T/fin [<__>:140 [v* [kaske <D Pekka>:140]]]]] [[D Merja-] [A/inf lahtea]]]
				5. Phrasal movement reconstruction:
				=[[[P [D tama]] [T/fin [<__>:140 [v* [kaske <D Pekka>:140]]]]] [[D Merja-] [A/inf lahtea]]]
				6. Agreement reconstruction:
					Head A/inf, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						A/inf acquired PHI:NUM:SG from the edge of A/inf.
						A/inf acquired PHI:PER:3 from the edge of A/inf.
				=[[[P [D tama]] [T/fin [<__>:140 [v* [kaske <D Pekka>:140]]]]] [[D Merja-] [A/inf lahtea]]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [[P [D tama]] [T/fin [<__>:140 [v* [kaske <D Pekka>:140]]]]].
					Last resort extraposition will be tried on [[[P [D tama]] [T/fin [<__>:140 [v* [kaske <D Pekka>:140]]]]] [[D Merja-] [A/inf lahtea]]].
					No suitable node for extraposition found. No action was taken.
			= [[[P [D tama]] [T/fin [<D Pekka> [v* [kaske <D Pekka>]]]]] [[D Merja-] [A/inf lahtea]]]
		Checking LF-interface conditions.
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [[P [D tama]] [T/fin [<__>:140 [v* [kaske <D Pekka>:140]]]]].
			LF-interface condition(s) violated
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'PHI:NUM:SG', 'PHI:PER:3']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Pekka: [N, D, V, v, TT/fin];  D: [D];  Merja-: [N, D];  A/inf: [INF];  lahtea: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "gen$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merjan".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[P [D tama]] T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[[P [D tama]] [T/fin [v* kaske]]]
				2. Feature processing:
				=[[P [D tama]] [T/fin [v* kaske]]]
				3. Extraposition:
				=[[P [D tama]] [T/fin [v* kaske]]]
				4. Floater movement reconstruction:
				=[[P [D tama]] [T/fin [v* kaske]]]
				5. Phrasal movement reconstruction:
				=[[P [D tama]] [T/fin [v* kaske]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[P [D tama]] [T/fin [v* kaske]]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
					Last resort extraposition will be tried on [[P [D tama]] [T/fin [v* kaske]]].
					No suitable node for extraposition found. No action was taken.
			=[[[P [D tama]] [T/fin [v* kaske]]] D]

	35. Consume "Pekka"

		[[[P [D tama]] [T/fin [v* kaske]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=[[[P [D tama]] [T/fin [v* kaske]]] D{N}]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'gen$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	36. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	37. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	38. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	39. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	40. Consume "gen$"
		Storing inflectional feature ['-', '-FLOAT', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

	41. Consume "D$"
		Adding inflectional features {'TAIL:ARG,VAL,CAT:INF', 'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', '-FLOAT', 'LANG:FI', 'PHI:NUM:SG'} to D

	42. Consume "D"

		[[[P [D tama]] [T/fin [v* kaske]]] D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid DP as SPEC, D.
				kaske (kaske) is missing complement A/inf
				Avoid [[[P [D tama]] [T/fin [<D Pekka> [v* kaske]]]] <D Pekka>] as left branch because it constitutes illicit structure.
				Avoid [D{N} D] due to local agreement failure.
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
				Prioritize D{N} because all solutions were negative.
				[[[P [D tama]] [T/fin [v* kaske]]] D{N}] + D = -197]
				D{N} + D = 154]
		Ranking completed:
			1. [D{N}; D]
			2. [[[[P [D tama]] [T/fin [v* kaske]]] D{N}]; D]
			Exploring solution number (1) =[D{N} D]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[[P [D tama]] [T/fin [v* kaske]]] [[D Pekka] D]]

	43. Consume "Merja-"

		[[[P [D tama]] [T/fin [v* kaske]]] [[D Pekka] D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[[P [D tama]] [T/fin [v* kaske]]] [[D Pekka] D{N}]]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	44. Consume "A/inf"

		[[[P [D tama]] [T/fin [v* kaske]]] [[D Pekka] D{N}]] + A/inf
			Filtering out impossible merge sites...
				Reject [[[[P [D tama]] [T/fin [v* kaske]]] [[D Pekka] <D Merja->]] A/inf] due to bad left branch.
				Reject [[[D Pekka] [D Merja-]] A/inf] due to bad left branch.
			Exploring solution number (1) =[D{N} A/inf]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[[P [D tama]] [T/fin [v* kaske]]] [[D Pekka] [[D Merja-] A/inf]]]

	45. Consume "lahtea"

		[[[P [D tama]] [T/fin [v* kaske]]] [[D Pekka] [[D Merja-] A/inf]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[[P [D tama]] [T/fin [v* kaske]]] [[D Pekka] [[D Merja-] A/inf{V}]]]

	>>>	Trying candidate spellout structure [[[P [D tama]] [T/fin [v* kaske]]] [[D Pekka] [[D Merja-] A/inf{V}]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Pekka] [[D Merja-] [A/inf lahtea]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Pekka] [[D Merja-] [A/inf lahtea]]]]
				3. Extraposition:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Pekka] [[D Merja-] [A/inf lahtea]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Pekka] [[D Merja-] [A/inf lahtea]]]]
				5. Phrasal movement reconstruction:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Pekka] [[D Merja-] [A/inf lahtea]]]]
				6. Agreement reconstruction:
					Head A/inf, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						A/inf acquired PHI:NUM:SG from the edge of A/inf.
						A/inf acquired PHI:PER:3 from the edge of A/inf.
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Pekka] [[D Merja-] [A/inf lahtea]]]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
				[D Pekka] has no thematic role at the SPEC of A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has double specifiers.
				A/inf has unacceptable specifier [[P [D tama]] [T/fin [v* kaske]]].
					Last resort extraposition will be tried on [[[P [D tama]] [T/fin [v* kaske]]] [[D Pekka] [[D Merja-] [A/inf lahtea]]]].
					No suitable node for extraposition found. No action was taken.
			= [[[P [D tama]] [T/fin [v* kaske]]] [[D Pekka] [[D Merja-] [A/inf lahtea]]]]
		Checking LF-interface conditions.
				kaske (kaske) is missing complement A/inf
				[D Pekka] has no thematic role at the SPEC of A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has double specifiers.
				A/inf has unacceptable specifier [[P [D tama]] [T/fin [v* kaske]]].
			LF-interface condition(s) violated
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'PHI:NUM:SG', 'PHI:PER:3']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D];  Pekka: [N, D];  D: [D];  Merja-: [N, D];  A/inf: [INF];  lahtea: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[[P [D tama]] [T/fin [v* kaske]]] D{N}] D]
				1. Head movement reconstruction:
				=[[[P [D tama]] [T/fin [v* kaske]]] [D Pekka]]
				2. Feature processing:
				=[[[P [D tama]] [T/fin [v* kaske]]] [D Pekka]]
				3. Extraposition:
				=[[[P [D tama]] [T/fin [v* kaske]]] [D Pekka]]
				4. Floater movement reconstruction:
					D at the right failed to tail [ARG][CAT:FIN][VAL]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					Dropping <D Pekka>
					 = [[[P [D tama]] [T/fin [<__>:143 [v* kaske]]]] <D Pekka>:143]
				=[[[P [D tama]] [T/fin [<__>:143 [v* kaske]]]] <D Pekka>:143]
				5. Phrasal movement reconstruction:
				=[[[P [D tama]] [T/fin [<__>:143 [v* kaske]]]] <D Pekka>:143]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[P [D tama]] [T/fin [<__>:143 [v* kaske]]]] <D Pekka>:143]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
					Last resort extraposition will be tried on [[[P [D tama]] [T/fin [<__>:143 [v* kaske]]]] <D Pekka>:143].
					No suitable node for extraposition found. No action was taken.
			=[[[[P [D tama]] [T/fin [<__>:143 [v* kaske]]]] <D Pekka>:143] D]

	46. Consume "Merja-"

		[[[[P [D tama]] [T/fin [<D Pekka> [v* kaske]]]] <D Pekka>] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[[[P [D tama]] [T/fin [<__>:143 [v* kaske]]]] <D Pekka>:143] D{N}]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	47. Consume "A/inf"

		[[[[P [D tama]] [T/fin [<D Pekka> [v* kaske]]]] <D Pekka>] D{N}] + A/inf
			Filtering out impossible merge sites...
				Reject [[[[[P [D tama]] [T/fin [<D Pekka> [v* kaske]]]] <D Pekka>] <D Merja->] A/inf] due to bad left branch.
			Exploring solution number (1) =[D{N} A/inf]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[[[P [D tama]] [T/fin [<__>:143 [v* kaske]]]] <D Pekka>:143] [[D Merja-] A/inf]]

	48. Consume "lahtea"

		[[[[P [D tama]] [T/fin [<D Pekka> [v* kaske]]]] <D Pekka>] [[D Merja-] A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[[[P [D tama]] [T/fin [<__>:143 [v* kaske]]]] <D Pekka>:143] [[D Merja-] A/inf{V}]]

	>>>	Trying candidate spellout structure [[[[P [D tama]] [T/fin [<D Pekka> [v* kaske]]]] <D Pekka>] [[D Merja-] A/inf{V}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[[P [D tama]] [T/fin [<__>:143 [v* kaske]]]] <D Pekka>:143] [[D Merja-] [A/inf lahtea]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
				=[[[[P [D tama]] [T/fin [<__>:143 [v* kaske]]]] <D Pekka>:143] [[D Merja-] [A/inf lahtea]]]
				3. Extraposition:
				=[[[[P [D tama]] [T/fin [<__>:143 [v* kaske]]]] <D Pekka>:143] [[D Merja-] [A/inf lahtea]]]
				4. Floater movement reconstruction:
				=[[[[P [D tama]] [T/fin [<__>:143 [v* kaske]]]] <D Pekka>:143] [[D Merja-] [A/inf lahtea]]]
				5. Phrasal movement reconstruction:
				=[[[[P [D tama]] [T/fin [<__>:143 [v* kaske]]]] <D Pekka>:143] [[D Merja-] [A/inf lahtea]]]
				6. Agreement reconstruction:
					Head A/inf, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						A/inf acquired PHI:NUM:SG from the edge of A/inf.
						A/inf acquired PHI:PER:3 from the edge of A/inf.
				=[[[[P [D tama]] [T/fin [<__>:143 [v* kaske]]]] <D Pekka>:143] [[D Merja-] [A/inf lahtea]]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [[[P [D tama]] [T/fin [<__>:143 [v* kaske]]]] <D Pekka>:143].
					Last resort extraposition will be tried on [[[[P [D tama]] [T/fin [<__>:143 [v* kaske]]]] <D Pekka>:143] [[D Merja-] [A/inf lahtea]]].
					No suitable node for extraposition found. No action was taken.
			= [[[[P [D tama]] [T/fin [<D Pekka> [v* kaske]]]] <D Pekka>] [[D Merja-] [A/inf lahtea]]]
		Checking LF-interface conditions.
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [[[P [D tama]] [T/fin [<__>:143 [v* kaske]]]] <D Pekka>:143].
			LF-interface condition(s) violated
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'PHI:NUM:SG', 'PHI:PER:3']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D];  Pekka: [N, D];  D: [D];  Merja-: [N, D];  A/inf: [INF];  lahtea: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "gen$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merjan".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "kaske-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v*$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "kaskee".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tama-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tama".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tassa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 56
['tassa', 'kaskee', 'Merjan', 'Pekka', 'lahtea']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['P$', 'tama']
			=P

		Next word contains multiple morphemes ['def$', '3p$', 'sg$', 'D$', 'tama-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	2. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	3. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	4. Consume "D$"
		Adding inflectional features {'-', 'PHI:PER:3', 'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:FI'} to D

	5. Consume "D"

		P + D
			Filtering out impossible merge sites...
			Sink "D" into P because they are inside the same phonological word.
			=P{D}

	6. Consume "tama"

		P{D} + tama
			Filtering out impossible merge sites...
			Sink "tama" into D because they are inside the same phonological word.
			=P{D,N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v*$', 'kaske-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	7. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	8. Consume "T/fin"

		P{D,N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[P{D,N} T/fin]
				1. Head movement reconstruction:
					P was opened into [P [D tama]].
				=[P [D tama]]
				2. Feature processing:
				=[P [D tama]]
				3. Extraposition:
				=[P [D tama]]
				4. Floater movement reconstruction:
				=[P [D tama]]
				5. Phrasal movement reconstruction:
				=[P [D tama]]
				6. Agreement reconstruction:
				=[P [D tama]]
				7. Last resort extraposition:
			=[[P [D tama]] T/fin]

	9. Consume "v*"

		[[P [D tama]] T/fin] + v*
			Filtering out impossible merge sites...
			Sink "v*" into T/fin because they are inside the same phonological word.
			=[[P [D tama]] T/fin{v}]

	10. Consume "kaske"

		[[P [D tama]] T/fin{v}] + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into v* because they are inside the same phonological word.
			=[[P [D tama]] T/fin{v,V}]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'gen$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	11. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	12. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	13. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	14. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	15. Consume "gen$"
		Storing inflectional feature ['-', '-FLOAT', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

	16. Consume "D$"
		Adding inflectional features {'TAIL:ARG,VAL,CAT:INF', 'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', '-FLOAT', 'LANG:FI', 'PHI:NUM:SG'} to D

	17. Consume "D"

		[[P [D tama]] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				kaske (kaske) is missing complement A/inf
				Avoid [[P [D tama]] [T/fin [v* kaske]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				[[P [D tama]] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 56]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[P [D tama]] T/fin{v,V}]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[P [D tama]] [T/fin{v,V} D]]

	18. Consume "Merja-"

		[[P [D tama]] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[P [D tama]] [T/fin{v,V} D{N}]]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	19. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	20. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	21. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	22. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	23. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	24. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D

	25. Consume "D"

		[[P [D tama]] [T/fin{v,V} D{N}]] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				kaske (kaske) is missing complement A/inf
				D(<D Merja->) failed internal tail test for {frozenset({'CAT:INF', 'ARG', 'VAL'})}.
				Avoid [[P [D tama]] [T/fin [v* [kaske <D Merja->]]]] as left branch because it constitutes illicit structure.
				Avoid TT/finP as SPEC, D.
				kaske (kaske) is missing complement A/inf
				D(<D Merja->) failed internal tail test for {frozenset({'CAT:INF', 'ARG', 'VAL'})}.
				Avoid [T/fin [v* [kaske <D Merja->]]] as left branch because it constitutes illicit structure.
				Avoid [D{N} D] due to local agreement failure.
				Avoid D{N} because it could break words.
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
				Prioritize D{N} because all solutions were negative.
				[[P [D tama]] [T/fin{v,V} D{N}]] + D = -197]
				[T/fin{v,V} D{N}] + D = -194]
				D{N} + D = 59]
		Ranking completed:
			1. [D{N}; D]
			2. [[T/fin{v,V} D{N}]; D]
			3. [[[P [D tama]] [T/fin{v,V} D{N}]]; D]
			Exploring solution number (1) =[D{N} D]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[P [D tama]] [T/fin{v,V} [[D Merja-] D]]]

	26. Consume "Pekka"

		[[P [D tama]] [T/fin{v,V} [[D Merja-] D]]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=[[P [D tama]] [T/fin{v,V} [[D Merja-] D{N}]]]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	27. Consume "A/inf"

		[[P [D tama]] [T/fin{v,V} [[D Merja-] D{N}]]] + A/inf
			Filtering out impossible merge sites...
				Reject [[[P [D tama]] [T/fin [<D Pekka> [v* [kaske <<D Merja-> <D Pekka>>]]]]] A/inf] due to bad left branch.
				Reject [[T/fin [<D Pekka> [v* [kaske <<D Merja-> <D Pekka>>]]]] A/inf] due to bad left branch.
				Reject [[[D Merja-] [D Pekka]] A/inf] due to bad left branch.
			Exploring solution number (1) =[D{N} A/inf]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[P [D tama]] [T/fin{v,V} [[D Merja-] [[D Pekka] A/inf]]]]

	28. Consume "lahtea"

		[[P [D tama]] [T/fin{v,V} [[D Merja-] [[D Pekka] A/inf]]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[P [D tama]] [T/fin{v,V} [[D Merja-] [[D Pekka] A/inf{V}]]]]

	>>>	Trying candidate spellout structure [[P [D tama]] [T/fin{v,V} [[D Merja-] [[D Pekka] A/inf{V}]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[[P [D tama]] [T/fin [v*{V} [[D Merja-] [[D Pekka] A/inf{V}]]]]]
					Target kaske in v*
					=[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [[D Pekka] A/inf{V}]]]]]]
				=[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [[D Pekka] [A/inf lahtea]]]]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
					A/inf has neutralized PHI-feature, will be resolved into +ARG due to kaske
				=[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [[D Pekka] [A/inf lahtea]]]]]]]
				3. Extraposition:
				=[[P [D tama]] [T/fin [v* [kaske [[D Merja-] [[D Pekka] [A/inf lahtea]]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [[P [D tama]] [T/fin [<__>:146 [v* [kaske [[D Merja-] [<D Pekka>:146 [A/inf lahtea]]]]]]]]
				=[[P [D tama]] [T/fin [<__>:146 [v* [kaske [[D Merja-] [<D Pekka>:146 [A/inf lahtea]]]]]]]]
				5. Phrasal movement reconstruction:
					[D Merja-] will undergo A-reconstruction.
				=[[P [D tama]] [T/fin [<__>:146 [v* [kaske [[D Merja-]:29 [<D Pekka>:146 [A/inf [__:29 lahtea]]]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[P [D tama]] [T/fin [<__>:146 [v* [kaske [[D Merja-]:29 [<D Pekka>:146 [A/inf [__:29 lahtea]]]]]]]]]
				7. Last resort extraposition:
			= [[P [D tama]] [T/fin [<D Pekka> [v* [kaske [[D Merja-] [<D Pekka> [A/inf [[D Merja-] lahtea]]]]]]]]]
		Checking LF-interface conditions.
			Transferring [[P [D tama]] [T/fin [<__>:146 [v* [kaske [[D Merja-]:29 [<D Pekka>:146 [A/inf [__:29 lahtea]]]]]]]]] into the conceptual-intentional system...
				P with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D tama]    (alternatives: )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. [P [D tama]]    (alternatives: )
				v* with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: )
				kaske with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'P([D tama])', 'T/fin(Generic)', 'T/fin([P [D tama]])', 'kaske(clausal argument)', 'lahtea([D Merja-])', 'v*(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[P [D tama]] [T/fin [<D Pekka> [v* [kaske [[D Merja-] [<D Pekka> [A/inf [[D Merja-] lahtea]]]]]]]]]
		Grammar: [[P [D tama]] [T/fin [<__>:1 [v* [kaske [[D Merja-]:2 [<D Pekka>:1 [A/inf [__:2 lahtea]]]]]]]]]
		Spellout TT/finP = [PP [TT/fin [__:1 [v [V [DP:2 [DP:1 [INF [__:2 V]]]]]]]]]
----------------------------------------------------------------------------------------------------------
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Merja-: [N, D, V, v, TT/fin];  D: [D, V, v, TT/fin];  Pekka: [N, D, V, v, TT/fin];  A/inf: [INF, V, v, TT/fin];  __: [D, INF, V, v, TT/fin];  __: [N, D, INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[T/fin{v,V} D{N}] D]
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[T/fin [v*{V} D{N}]]
					Target kaske in v*
					=[T/fin [v* [kaske D{N}]]]
				=[T/fin [v* [kaske [D Merja-]]]]
				2. Feature processing:
				=[T/fin [v* [kaske [D Merja-]]]]
				3. Extraposition:
					kaske cannot select D
					Extraposition will be tried on [D Merja-].
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
				=[T/fin [v* [kaske <D Merja->]]]
				4. Floater movement reconstruction:
				=[T/fin [v* [kaske <D Merja->]]]
				5. Phrasal movement reconstruction:
				=[T/fin [v* [kaske <D Merja->]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[T/fin [v* [kaske <D Merja->]]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
				D(<D Merja->) failed internal tail test for {frozenset({'CAT:INF', 'ARG', 'VAL'})}.
					Last resort extraposition will be tried on [T/fin [v* [kaske <D Merja->]]].
					No suitable node for extraposition found. No action was taken.
			=[[P [D tama]] [[T/fin [v* [kaske <D Merja->]]] D]]

	29. Consume "Pekka"

		[[P [D tama]] [[T/fin [v* [kaske <D Merja->]]] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=[[P [D tama]] [[T/fin [v* [kaske <D Merja->]]] D{N}]]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	30. Consume "A/inf"

		[[P [D tama]] [[T/fin [v* [kaske <D Merja->]]] D{N}]] + A/inf
			Filtering out impossible merge sites...
				Reject [[[P [D tama]] [[T/fin [<D Pekka> [v* [kaske <D Merja->]]]] <D Pekka>]] A/inf] due to bad left branch.
				Reject [[[T/fin [<D Pekka> [v* [kaske <D Merja->]]]] <D Pekka>] A/inf] due to bad left branch.
			Exploring solution number (1) =[D{N} A/inf]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[P [D tama]] [[T/fin [v* [kaske <D Merja->]]] [[D Pekka] A/inf]]]

	31. Consume "lahtea"

		[[P [D tama]] [[T/fin [v* [kaske <D Merja->]]] [[D Pekka] A/inf]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[P [D tama]] [[T/fin [v* [kaske <D Merja->]]] [[D Pekka] A/inf{V}]]]

	>>>	Trying candidate spellout structure [[P [D tama]] [[T/fin [v* [kaske <D Merja->]]] [[D Pekka] A/inf{V}]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[P [D tama]] [[T/fin [v* [kaske <D Merja->]]] [[D Pekka] [A/inf lahtea]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
				=[[P [D tama]] [[T/fin [v* [kaske <D Merja->]]] [[D Pekka] [A/inf lahtea]]]]
				3. Extraposition:
				=[[P [D tama]] [[T/fin [v* [kaske <D Merja->]]] [[D Pekka] [A/inf lahtea]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
				=[[P [D tama]] [[T/fin [v* [kaske <D Merja->]]] [[D Pekka] [A/inf lahtea]]]]
				5. Phrasal movement reconstruction:
				=[[P [D tama]] [[T/fin [v* [kaske <D Merja->]]] [[D Pekka] [A/inf lahtea]]]]
				6. Agreement reconstruction:
					Head A/inf, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						A/inf acquired PHI:NUM:SG from the edge of A/inf.
						A/inf acquired PHI:PER:3 from the edge of A/inf.
				=[[P [D tama]] [[T/fin [v* [kaske <D Merja->]]] [[D Pekka] [A/inf lahtea]]]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
				D(<D Merja->) failed internal tail test for {frozenset({'CAT:INF', 'ARG', 'VAL'})}.
				[D Pekka] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [T/fin [v* [kaske <D Merja->]]].
					Last resort extraposition will be tried on [[P [D tama]] [[T/fin [v* [kaske <D Merja->]]] [[D Pekka] [A/inf lahtea]]]].
					No suitable node for extraposition found. No action was taken.
			= [[P [D tama]] [[T/fin [v* [kaske <D Merja->]]] [[D Pekka] [A/inf lahtea]]]]
		Checking LF-interface conditions.
				kaske (kaske) is missing complement A/inf
				D(<D Merja->) failed internal tail test for {frozenset({'CAT:INF', 'ARG', 'VAL'})}.
				[D Pekka] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [T/fin [v* [kaske <D Merja->]]].
			LF-interface condition(s) violated
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'PHI:NUM:SG', 'PHI:PER:3']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Merja-: [N, D, V, v, TT/fin];  D: [D];  Pekka: [N, D];  A/inf: [INF];  lahtea: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[[P [D tama]] [T/fin{v,V} D{N}]] D]
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[[P [D tama]] [T/fin [v*{V} D{N}]]]
					Target kaske in v*
					=[[P [D tama]] [T/fin [v* [kaske D{N}]]]]
				=[[P [D tama]] [T/fin [v* [kaske [D Merja-]]]]]
				2. Feature processing:
				=[[P [D tama]] [T/fin [v* [kaske [D Merja-]]]]]
				3. Extraposition:
					kaske cannot select D
					Extraposition will be tried on [D Merja-].
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
				=[[P [D tama]] [T/fin [v* [kaske <D Merja->]]]]
				4. Floater movement reconstruction:
				=[[P [D tama]] [T/fin [v* [kaske <D Merja->]]]]
				5. Phrasal movement reconstruction:
				=[[P [D tama]] [T/fin [v* [kaske <D Merja->]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[P [D tama]] [T/fin [v* [kaske <D Merja->]]]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
				D(<D Merja->) failed internal tail test for {frozenset({'CAT:INF', 'ARG', 'VAL'})}.
					Last resort extraposition will be tried on [[P [D tama]] [T/fin [v* [kaske <D Merja->]]]].
					No suitable node for extraposition found. No action was taken.
			=[[[P [D tama]] [T/fin [v* [kaske <D Merja->]]]] D]

	32. Consume "Pekka"

		[[[P [D tama]] [T/fin [v* [kaske <D Merja->]]]] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=[[[P [D tama]] [T/fin [v* [kaske <D Merja->]]]] D{N}]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	33. Consume "A/inf"

		[[[P [D tama]] [T/fin [v* [kaske <D Merja->]]]] D{N}] + A/inf
			Filtering out impossible merge sites...
				Reject [[[[P [D tama]] [T/fin [<D Pekka> [v* [kaske <D Merja->]]]]] <D Pekka>] A/inf] due to bad left branch.
			Exploring solution number (1) =[D{N} A/inf]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[[P [D tama]] [T/fin [v* [kaske <D Merja->]]]] [[D Pekka] A/inf]]

	34. Consume "lahtea"

		[[[P [D tama]] [T/fin [v* [kaske <D Merja->]]]] [[D Pekka] A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[[P [D tama]] [T/fin [v* [kaske <D Merja->]]]] [[D Pekka] A/inf{V}]]

	>>>	Trying candidate spellout structure [[[P [D tama]] [T/fin [v* [kaske <D Merja->]]]] [[D Pekka] A/inf{V}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[P [D tama]] [T/fin [v* [kaske <D Merja->]]]] [[D Pekka] [A/inf lahtea]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
				=[[[P [D tama]] [T/fin [v* [kaske <D Merja->]]]] [[D Pekka] [A/inf lahtea]]]
				3. Extraposition:
				=[[[P [D tama]] [T/fin [v* [kaske <D Merja->]]]] [[D Pekka] [A/inf lahtea]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
				=[[[P [D tama]] [T/fin [v* [kaske <D Merja->]]]] [[D Pekka] [A/inf lahtea]]]
				5. Phrasal movement reconstruction:
				=[[[P [D tama]] [T/fin [v* [kaske <D Merja->]]]] [[D Pekka] [A/inf lahtea]]]
				6. Agreement reconstruction:
					Head A/inf, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						A/inf acquired PHI:NUM:SG from the edge of A/inf.
						A/inf acquired PHI:PER:3 from the edge of A/inf.
				=[[[P [D tama]] [T/fin [v* [kaske <D Merja->]]]] [[D Pekka] [A/inf lahtea]]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
				D(<D Merja->) failed internal tail test for {frozenset({'CAT:INF', 'ARG', 'VAL'})}.
				[D Pekka] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [[P [D tama]] [T/fin [v* [kaske <D Merja->]]]].
					Last resort extraposition will be tried on [[[P [D tama]] [T/fin [v* [kaske <D Merja->]]]] [[D Pekka] [A/inf lahtea]]].
					No suitable node for extraposition found. No action was taken.
			= [[[P [D tama]] [T/fin [v* [kaske <D Merja->]]]] [[D Pekka] [A/inf lahtea]]]
		Checking LF-interface conditions.
				kaske (kaske) is missing complement A/inf
				D(<D Merja->) failed internal tail test for {frozenset({'CAT:INF', 'ARG', 'VAL'})}.
				[D Pekka] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [[P [D tama]] [T/fin [v* [kaske <D Merja->]]]].
			LF-interface condition(s) violated
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'PHI:NUM:SG', 'PHI:PER:3']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Merja-: [N, D, V, v, TT/fin];  D: [D];  Pekka: [N, D];  A/inf: [INF];  lahtea: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[P [D tama]] T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[[P [D tama]] [T/fin [v* kaske]]]
				2. Feature processing:
				=[[P [D tama]] [T/fin [v* kaske]]]
				3. Extraposition:
				=[[P [D tama]] [T/fin [v* kaske]]]
				4. Floater movement reconstruction:
				=[[P [D tama]] [T/fin [v* kaske]]]
				5. Phrasal movement reconstruction:
				=[[P [D tama]] [T/fin [v* kaske]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[P [D tama]] [T/fin [v* kaske]]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
					Last resort extraposition will be tried on [[P [D tama]] [T/fin [v* kaske]]].
					No suitable node for extraposition found. No action was taken.
			=[[[P [D tama]] [T/fin [v* kaske]]] D]

	35. Consume "Merja-"

		[[[P [D tama]] [T/fin [v* kaske]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[[P [D tama]] [T/fin [v* kaske]]] D{N}]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	36. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	37. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	38. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	39. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	40. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	41. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D

	42. Consume "D"

		[[[P [D tama]] [T/fin [v* kaske]]] D{N}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid DP as SPEC, D.
				kaske (kaske) is missing complement A/inf
				Avoid [[[P [D tama]] [T/fin [v* kaske]]] <D Merja->] as left branch because it constitutes illicit structure.
				Avoid [D{N} D] due to local agreement failure.
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
				Prioritize D{N} because all solutions were negative.
				[[[P [D tama]] [T/fin [v* kaske]]] D{N}] + D = -197]
				D{N} + D = 154]
		Ranking completed:
			1. [D{N}; D]
			2. [[[[P [D tama]] [T/fin [v* kaske]]] D{N}]; D]
			Exploring solution number (1) =[D{N} D]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] D]]

	43. Consume "Pekka"

		[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] D]] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] D{N}]]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	44. Consume "A/inf"

		[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] D{N}]] + A/inf
			Filtering out impossible merge sites...
				Reject [[[[P [D tama]] [T/fin [v* kaske]]] <<D Merja-> <D Pekka>>] A/inf] due to bad left branch.
				Reject [[[D Merja-] [D Pekka]] A/inf] due to bad left branch.
			Exploring solution number (1) =[D{N} A/inf]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [[D Pekka] A/inf]]]

	45. Consume "lahtea"

		[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [[D Pekka] A/inf]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [[D Pekka] A/inf{V}]]]

	>>>	Trying candidate spellout structure [[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [[D Pekka] A/inf{V}]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [[D Pekka] [A/inf lahtea]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [[D Pekka] [A/inf lahtea]]]]
				3. Extraposition:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [[D Pekka] [A/inf lahtea]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [[D Pekka] [A/inf lahtea]]]]
				5. Phrasal movement reconstruction:
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [[D Pekka] [A/inf lahtea]]]]
				6. Agreement reconstruction:
					Head A/inf, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						A/inf acquired PHI:NUM:SG from the edge of A/inf.
						A/inf acquired PHI:PER:3 from the edge of A/inf.
				=[[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [[D Pekka] [A/inf lahtea]]]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				[D Pekka] has no thematic role at the SPEC of A/inf
				A/inf has double specifiers.
				A/inf has unacceptable specifier [[P [D tama]] [T/fin [v* kaske]]].
					Last resort extraposition will be tried on [[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [[D Pekka] [A/inf lahtea]]]].
					No suitable node for extraposition found. No action was taken.
			= [[[P [D tama]] [T/fin [v* kaske]]] [[D Merja-] [[D Pekka] [A/inf lahtea]]]]
		Checking LF-interface conditions.
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				[D Pekka] has no thematic role at the SPEC of A/inf
				A/inf has double specifiers.
				A/inf has unacceptable specifier [[P [D tama]] [T/fin [v* kaske]]].
			LF-interface condition(s) violated
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'PHI:NUM:SG', 'PHI:PER:3']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D];  Merja-: [N, D];  D: [D];  Pekka: [N, D];  A/inf: [INF];  lahtea: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[[P [D tama]] [T/fin [v* kaske]]] D{N}] D]
				1. Head movement reconstruction:
				=[[[P [D tama]] [T/fin [v* kaske]]] [D Merja-]]
				2. Feature processing:
				=[[[P [D tama]] [T/fin [v* kaske]]] [D Merja-]]
				3. Extraposition:
				=[[[P [D tama]] [T/fin [v* kaske]]] [D Merja-]]
				4. Floater movement reconstruction:
				=[[[P [D tama]] [T/fin [v* kaske]]] [D Merja-]]
				5. Phrasal movement reconstruction:
				=[[[P [D tama]] [T/fin [v* kaske]]] [D Merja-]]
				6. Agreement reconstruction:
				=[[[P [D tama]] [T/fin [v* kaske]]] [D Merja-]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
				D has unacceptable specifier [[P [D tama]] [T/fin [v* kaske]]].
					Last resort extraposition will be tried on [[[P [D tama]] [T/fin [v* kaske]]] [D Merja-]].
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
				kaske (kaske) is missing complement A/inf
					Something is still wrong. The structure is still uninterpretable.
			=[[[[P [D tama]] [T/fin [v* kaske]]] <D Merja->] D]

	46. Consume "Pekka"

		[[[[P [D tama]] [T/fin [v* kaske]]] <D Merja->] D] + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=[[[[P [D tama]] [T/fin [v* kaske]]] <D Merja->] D{N}]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	47. Consume "A/inf"

		[[[[P [D tama]] [T/fin [v* kaske]]] <D Merja->] D{N}] + A/inf
			Filtering out impossible merge sites...
				Reject [[[[[P [D tama]] [T/fin [<D Pekka> [v* kaske]]]] <D Merja->] <D Pekka>] A/inf] due to bad left branch.
			Exploring solution number (1) =[D{N} A/inf]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[[[P [D tama]] [T/fin [v* kaske]]] <D Merja->] [[D Pekka] A/inf]]

	48. Consume "lahtea"

		[[[[P [D tama]] [T/fin [v* kaske]]] <D Merja->] [[D Pekka] A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[[[P [D tama]] [T/fin [v* kaske]]] <D Merja->] [[D Pekka] A/inf{V}]]

	>>>	Trying candidate spellout structure [[[[P [D tama]] [T/fin [v* kaske]]] <D Merja->] [[D Pekka] A/inf{V}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[[P [D tama]] [T/fin [v* kaske]]] <D Merja->] [[D Pekka] [A/inf lahtea]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
				=[[[[P [D tama]] [T/fin [v* kaske]]] <D Merja->] [[D Pekka] [A/inf lahtea]]]
				3. Extraposition:
				=[[[[P [D tama]] [T/fin [v* kaske]]] <D Merja->] [[D Pekka] [A/inf lahtea]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
				=[[[[P [D tama]] [T/fin [v* kaske]]] <D Merja->] [[D Pekka] [A/inf lahtea]]]
				5. Phrasal movement reconstruction:
				=[[[[P [D tama]] [T/fin [v* kaske]]] <D Merja->] [[D Pekka] [A/inf lahtea]]]
				6. Agreement reconstruction:
					Head A/inf, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						A/inf acquired PHI:NUM:SG from the edge of A/inf.
						A/inf acquired PHI:PER:3 from the edge of A/inf.
				=[[[[P [D tama]] [T/fin [v* kaske]]] <D Merja->] [[D Pekka] [A/inf lahtea]]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
				[D Pekka] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [[[P [D tama]] [T/fin [v* kaske]]] <D Merja->].
					Last resort extraposition will be tried on [[[[P [D tama]] [T/fin [v* kaske]]] <D Merja->] [[D Pekka] [A/inf lahtea]]].
					No suitable node for extraposition found. No action was taken.
			= [[[[P [D tama]] [T/fin [v* kaske]]] <D Merja->] [[D Pekka] [A/inf lahtea]]]
		Checking LF-interface conditions.
				kaske (kaske) is missing complement A/inf
				[D Pekka] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [[[P [D tama]] [T/fin [v* kaske]]] <D Merja->].
			LF-interface condition(s) violated
P:['!COMP:*', '-COMP:ADV', '-COMP:INF', '-COMP:N', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:iR', '-SPEC:iWH', '-SPEC:v', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/P', 'CAT:P', 'COMP:D', 'LANG:FI', 'LF:P', 'PF:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
tama:['-COMP:*', '-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'CAT:N/PHI', 'CAT:PHI', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:this', 'PF:tama', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'PHI:NUM:SG', 'PHI:PER:3']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

P: [P];  D: [D, P];  tama: [N, D, P];  T/fin: [TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D];  Merja-: [N, D];  D: [D];  Pekka: [N, D];  A/inf: [INF];  lahtea: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "gen$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merjan".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "kaske-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v*$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "kaskee".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tama-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tama".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "tassa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 57
['Pekka', 'haluaa', 'lahtea']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	5. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	8. Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v$', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[D Pekka] T/fin]

	11. Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D Pekka] T/fin{v}]

	12. Consume "haluaa"

		[[D Pekka] T/fin{v}] + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into v because they are inside the same phonological word.
			=[[D Pekka] T/fin{v,V}]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	13. Consume "A/inf"

		[[D Pekka] T/fin{v,V}] + A/inf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] A/inf] due to bad left branch.
			Exploring solution number (1) =[T/fin{v,V} A/inf]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{v,V} A/inf]]

	14. Consume "lahtea"

		[[D Pekka] [T/fin{v,V} A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[D Pekka] [T/fin{v,V} A/inf{V}]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{v,V} A/inf{V}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D Pekka] [T/fin [v{V} A/inf{V}]]]
					Target haluaa in v
					=[[D Pekka] [T/fin [v [haluaa A/inf{V}]]]]
				=[[D Pekka] [T/fin [v [haluaa [A/inf lahtea]]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
					A/inf has neutralized PHI-feature, will be resolved into -ARG due to haluaa
				=[[D Pekka] [T/fin [v [haluaa [A/inf lahtea]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [v [haluaa [A/inf lahtea]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:152 [T/fin [<__>:152 [v [haluaa [A/inf lahtea]]]]]]
				=[<D Pekka>:152 [T/fin [<__>:152 [v [haluaa [A/inf lahtea]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:152 [T/fin [<__>:152 [v [haluaa [A/inf lahtea]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:152 [T/fin [<__>:152 [v [haluaa [A/inf lahtea]]]]]]
				7. Last resort extraposition:
			= [<D Pekka> [T/fin [<D Pekka> [v [haluaa [A/inf lahtea]]]]]]
		Checking LF-interface conditions.
			Transferring [<D Pekka>:152 [T/fin [<__>:152 [v [haluaa [A/inf lahtea]]]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				haluaa with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'haluaa(<D Pekka>)', 'lahtea(<D Pekka>)', 'v(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v [haluaa [A/inf lahtea]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<__>:1 [v [haluaa [A/inf lahtea]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [INF V]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  haluaa: [V, v, TT/fin];  A/inf: [INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "halua-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "haluaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 58
['Pekka', 'haluaa', 'Merjan', 'lahtea']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	5. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	8. Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v$', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[D Pekka] T/fin]

	11. Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D Pekka] T/fin{v}]

	12. Consume "haluaa"

		[[D Pekka] T/fin{v}] + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into v because they are inside the same phonological word.
			=[[D Pekka] T/fin{v,V}]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'gen$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	13. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	14. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	15. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	16. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	17. Consume "gen$"
		Storing inflectional feature ['-', '-FLOAT', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

	18. Consume "D$"
		Adding inflectional features {'TAIL:ARG,VAL,CAT:INF', 'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', '-FLOAT', 'LANG:FI', 'PHI:NUM:SG'} to D

	19. Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"haluaa" lacks complement.
				Avoid [<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [haluaa D] due to complement selection.
				[[D Pekka] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 158]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D Pekka] T/fin{v,V}]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{v,V} D]]

	20. Consume "Merja-"

		[[D Pekka] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[D Pekka] [T/fin{v,V} D{N}]]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	21. Consume "A/inf"

		[[D Pekka] [T/fin{v,V} D{N}]] + A/inf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v [haluaa [D Merja-]]]]]] A/inf] due to bad left branch.
				Reject [[T/fin [v [haluaa [D Merja-]]]] A/inf] due to bad left branch.
			Exploring solution number (1) =[D{N} A/inf]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[D Pekka] [T/fin{v,V} [[D Merja-] A/inf]]]

	22. Consume "lahtea"

		[[D Pekka] [T/fin{v,V} [[D Merja-] A/inf]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[D Pekka] [T/fin{v,V} [[D Merja-] A/inf{V}]]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{v,V} [[D Merja-] A/inf{V}]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D Pekka] [T/fin [v{V} [[D Merja-] A/inf{V}]]]]
					Target haluaa in v
					=[[D Pekka] [T/fin [v [haluaa [[D Merja-] A/inf{V}]]]]]
				=[[D Pekka] [T/fin [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
					A/inf has neutralized PHI-feature, will be resolved into -ARG due to haluaa
				=[[D Pekka] [T/fin [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:156 [T/fin [<__>:156 [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]]
				=[<D Pekka>:156 [T/fin [<__>:156 [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:156 [T/fin [<__>:156 [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:156 [T/fin [<__>:156 [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]]
				7. Last resort extraposition:
				D([D Merja-]) failed internal tail test for {frozenset({'CAT:INF', 'ARG', 'VAL'})}.
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf (A/inf) has a specifier [D Merja-](set()) but is marked for -EPP behavior.
					Last resort extraposition will be tried on [<D Pekka>:156 [T/fin [<__>:156 [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]].
					No suitable node for extraposition found. No action was taken.
			= [<D Pekka> [T/fin [<D Pekka> [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]]
		Checking LF-interface conditions.
				D([D Merja-]) failed internal tail test for {frozenset({'CAT:INF', 'ARG', 'VAL'})}.
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf (A/inf) has a specifier [D Merja-](set()) but is marked for -EPP behavior.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  haluaa: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Merja-: [N, D, V, v, TT/fin];  A/inf: [INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D Pekka] T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[[D Pekka] [T/fin [v haluaa]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [v haluaa]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [v haluaa]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:157 [T/fin [<__>:157 [v haluaa]]]]
				=[<D Pekka>:157 [T/fin [<__>:157 [v haluaa]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:157 [T/fin [<__>:157 [v haluaa]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:157 [T/fin [<__>:157 [v haluaa]]]]
				7. Last resort extraposition:
				"haluaa" lacks complement.
					Last resort extraposition will be tried on [<D Pekka>:157 [T/fin [<__>:157 [v haluaa]]]].
					No suitable node for extraposition found. No action was taken.
			=[[<D Pekka>:157 [T/fin [<__>:157 [v haluaa]]]] D]

	23. Consume "Merja-"

		[[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[<D Pekka>:157 [T/fin [<__>:157 [v haluaa]]]] D{N}]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	24. Consume "A/inf"

		[[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] D{N}] + A/inf
			Filtering out impossible merge sites...
				Reject [[[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] <D Merja->] A/inf] due to bad left branch.
			Exploring solution number (1) =[D{N} A/inf]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[<D Pekka>:157 [T/fin [<__>:157 [v haluaa]]]] [[D Merja-] A/inf]]

	25. Consume "lahtea"

		[[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] [[D Merja-] A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[<D Pekka>:157 [T/fin [<__>:157 [v haluaa]]]] [[D Merja-] A/inf{V}]]

	>>>	Trying candidate spellout structure [[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] [[D Merja-] A/inf{V}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[<D Pekka>:157 [T/fin [<__>:157 [v haluaa]]]] [[D Merja-] [A/inf lahtea]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
				=[[<D Pekka>:157 [T/fin [<__>:157 [v haluaa]]]] [[D Merja-] [A/inf lahtea]]]
				3. Extraposition:
				=[[<D Pekka>:157 [T/fin [<__>:157 [v haluaa]]]] [[D Merja-] [A/inf lahtea]]]
				4. Floater movement reconstruction:
				=[[<D Pekka>:157 [T/fin [<__>:157 [v haluaa]]]] [[D Merja-] [A/inf lahtea]]]
				5. Phrasal movement reconstruction:
				=[[<D Pekka>:157 [T/fin [<__>:157 [v haluaa]]]] [[D Merja-] [A/inf lahtea]]]
				6. Agreement reconstruction:
					Head A/inf, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						A/inf acquired PHI:NUM:SG from the edge of A/inf.
						A/inf acquired PHI:PER:3 from the edge of A/inf.
				=[[<D Pekka>:157 [T/fin [<__>:157 [v haluaa]]]] [[D Merja-] [A/inf lahtea]]]
				7. Last resort extraposition:
				"haluaa" lacks complement.
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [<D Pekka>:157 [T/fin [<__>:157 [v haluaa]]]].
					Last resort extraposition will be tried on [[<D Pekka>:157 [T/fin [<__>:157 [v haluaa]]]] [[D Merja-] [A/inf lahtea]]].
					No suitable node for extraposition found. No action was taken.
			= [[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] [[D Merja-] [A/inf lahtea]]]
		Checking LF-interface conditions.
				"haluaa" lacks complement.
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [<D Pekka>:157 [T/fin [<__>:157 [v haluaa]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'PHI:NUM:SG', 'PHI:PER:3']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  haluaa: [V, v, TT/fin];  D: [D];  Merja-: [N, D];  A/inf: [INF];  lahtea: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "gen$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merjan".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "halua-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "haluaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 59
['Pekka', 'kaskee', 'Merjan', 'lahtea']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	5. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	8. Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v*$', 'kaske-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[D Pekka] T/fin]

	11. Consume "v*"

		[[D Pekka] T/fin] + v*
			Filtering out impossible merge sites...
			Sink "v*" into T/fin because they are inside the same phonological word.
			=[[D Pekka] T/fin{v}]

	12. Consume "kaske"

		[[D Pekka] T/fin{v}] + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into v* because they are inside the same phonological word.
			=[[D Pekka] T/fin{v,V}]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'gen$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	13. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	14. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	15. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	16. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	17. Consume "gen$"
		Storing inflectional feature ['-', '-FLOAT', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

	18. Consume "D$"
		Adding inflectional features {'TAIL:ARG,VAL,CAT:INF', 'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', '-FLOAT', 'LANG:FI', 'PHI:NUM:SG'} to D

	19. Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				kaske (kaske) is missing complement A/inf
				Avoid [<D Pekka> [T/fin [<D Pekka> [v* kaske]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				[[D Pekka] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 56]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D Pekka] T/fin{v,V}]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{v,V} D]]

	20. Consume "Merja-"

		[[D Pekka] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[D Pekka] [T/fin{v,V} D{N}]]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	21. Consume "A/inf"

		[[D Pekka] [T/fin{v,V} D{N}]] + A/inf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v* [kaske <D Merja->]]]]] A/inf] due to bad left branch.
				Reject [[T/fin [v* [kaske <D Merja->]]] A/inf] due to bad left branch.
			Exploring solution number (1) =[D{N} A/inf]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[D Pekka] [T/fin{v,V} [[D Merja-] A/inf]]]

	22. Consume "lahtea"

		[[D Pekka] [T/fin{v,V} [[D Merja-] A/inf]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[D Pekka] [T/fin{v,V} [[D Merja-] A/inf{V}]]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{v,V} [[D Merja-] A/inf{V}]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[[D Pekka] [T/fin [v*{V} [[D Merja-] A/inf{V}]]]]
					Target kaske in v*
					=[[D Pekka] [T/fin [v* [kaske [[D Merja-] A/inf{V}]]]]]
				=[[D Pekka] [T/fin [v* [kaske [[D Merja-] [A/inf lahtea]]]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
					A/inf has neutralized PHI-feature, will be resolved into +ARG due to kaske
				=[[D Pekka] [T/fin [v* [kaske [[D Merja-] [A/inf lahtea]]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [v* [kaske [[D Merja-] [A/inf lahtea]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:161 [T/fin [<__>:161 [v* [kaske [[D Merja-] [A/inf lahtea]]]]]]]
				=[<D Pekka>:161 [T/fin [<__>:161 [v* [kaske [[D Merja-] [A/inf lahtea]]]]]]]
				5. Phrasal movement reconstruction:
					[D Merja-] will undergo A-reconstruction.
				=[<D Pekka>:161 [T/fin [<__>:161 [v* [kaske [[D Merja-]:30 [A/inf [__:30 lahtea]]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:161 [T/fin [<__>:161 [v* [kaske [[D Merja-]:30 [A/inf [__:30 lahtea]]]]]]]]
				7. Last resort extraposition:
			= [<D Pekka> [T/fin [<D Pekka> [v* [kaske [[D Merja-] [A/inf [[D Merja-] lahtea]]]]]]]]
		Checking LF-interface conditions.
			Transferring [<D Pekka>:161 [T/fin [<__>:161 [v* [kaske [[D Merja-]:30 [A/inf [__:30 lahtea]]]]]]]] into the conceptual-intentional system...
				v* with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				kaske with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'kaske(clausal argument)', 'lahtea([D Merja-])', 'v*(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v* [kaske [[D Merja-] [A/inf [[D Merja-] lahtea]]]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<__>:1 [v* [kaske [[D Merja-]:2 [A/inf [__:2 lahtea]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [DP:2 [INF [__:2 V]]]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Merja-: [N, D, V, v, TT/fin];  A/inf: [INF, V, v, TT/fin];  __: [D, INF, V, v, TT/fin];  __: [N, D, INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D Pekka] T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[[D Pekka] [T/fin [v* kaske]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [v* kaske]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [v* kaske]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:162 [T/fin [<__>:162 [v* kaske]]]]
				=[<D Pekka>:162 [T/fin [<__>:162 [v* kaske]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:162 [T/fin [<__>:162 [v* kaske]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:162 [T/fin [<__>:162 [v* kaske]]]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
					Last resort extraposition will be tried on [<D Pekka>:162 [T/fin [<__>:162 [v* kaske]]]].
					No suitable node for extraposition found. No action was taken.
			=[[<D Pekka>:162 [T/fin [<__>:162 [v* kaske]]]] D]

	23. Consume "Merja-"

		[[<D Pekka> [T/fin [<D Pekka> [v* kaske]]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[<D Pekka>:162 [T/fin [<__>:162 [v* kaske]]]] D{N}]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	24. Consume "A/inf"

		[[<D Pekka> [T/fin [<D Pekka> [v* kaske]]]] D{N}] + A/inf
			Filtering out impossible merge sites...
				Reject [[[<D Pekka> [T/fin [<D Pekka> [v* kaske]]]] <D Merja->] A/inf] due to bad left branch.
			Exploring solution number (1) =[D{N} A/inf]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[<D Pekka>:162 [T/fin [<__>:162 [v* kaske]]]] [[D Merja-] A/inf]]

	25. Consume "lahtea"

		[[<D Pekka> [T/fin [<D Pekka> [v* kaske]]]] [[D Merja-] A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[<D Pekka>:162 [T/fin [<__>:162 [v* kaske]]]] [[D Merja-] A/inf{V}]]

	>>>	Trying candidate spellout structure [[<D Pekka> [T/fin [<D Pekka> [v* kaske]]]] [[D Merja-] A/inf{V}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[<D Pekka>:162 [T/fin [<__>:162 [v* kaske]]]] [[D Merja-] [A/inf lahtea]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
				=[[<D Pekka>:162 [T/fin [<__>:162 [v* kaske]]]] [[D Merja-] [A/inf lahtea]]]
				3. Extraposition:
				=[[<D Pekka>:162 [T/fin [<__>:162 [v* kaske]]]] [[D Merja-] [A/inf lahtea]]]
				4. Floater movement reconstruction:
				=[[<D Pekka>:162 [T/fin [<__>:162 [v* kaske]]]] [[D Merja-] [A/inf lahtea]]]
				5. Phrasal movement reconstruction:
				=[[<D Pekka>:162 [T/fin [<__>:162 [v* kaske]]]] [[D Merja-] [A/inf lahtea]]]
				6. Agreement reconstruction:
					Head A/inf, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						A/inf acquired PHI:NUM:SG from the edge of A/inf.
						A/inf acquired PHI:PER:3 from the edge of A/inf.
				=[[<D Pekka>:162 [T/fin [<__>:162 [v* kaske]]]] [[D Merja-] [A/inf lahtea]]]
				7. Last resort extraposition:
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [<D Pekka>:162 [T/fin [<__>:162 [v* kaske]]]].
					Last resort extraposition will be tried on [[<D Pekka>:162 [T/fin [<__>:162 [v* kaske]]]] [[D Merja-] [A/inf lahtea]]].
					No suitable node for extraposition found. No action was taken.
			= [[<D Pekka> [T/fin [<D Pekka> [v* kaske]]]] [[D Merja-] [A/inf lahtea]]]
		Checking LF-interface conditions.
				kaske (kaske) is missing complement A/inf
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [<D Pekka>:162 [T/fin [<__>:162 [v* kaske]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'PHI:NUM:SG', 'PHI:PER:3']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  D: [D];  Merja-: [N, D];  A/inf: [INF];  lahtea: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "gen$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merjan".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "kaske-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v*$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "kaskee".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 60
['Pekka', 'kaskee', 'lahtea']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	5. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	8. Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v*$', 'kaske-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[D Pekka] T/fin]

	11. Consume "v*"

		[[D Pekka] T/fin] + v*
			Filtering out impossible merge sites...
			Sink "v*" into T/fin because they are inside the same phonological word.
			=[[D Pekka] T/fin{v}]

	12. Consume "kaske"

		[[D Pekka] T/fin{v}] + kaske
			Filtering out impossible merge sites...
			Sink "kaske" into v* because they are inside the same phonological word.
			=[[D Pekka] T/fin{v,V}]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	13. Consume "A/inf"

		[[D Pekka] T/fin{v,V}] + A/inf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v* kaske]]]] A/inf] due to bad left branch.
			Exploring solution number (1) =[T/fin{v,V} A/inf]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{v,V} A/inf]]

	14. Consume "lahtea"

		[[D Pekka] [T/fin{v,V} A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[D Pekka] [T/fin{v,V} A/inf{V}]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{v,V} A/inf{V}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[[D Pekka] [T/fin [v*{V} A/inf{V}]]]
					Target kaske in v*
					=[[D Pekka] [T/fin [v* [kaske A/inf{V}]]]]
				=[[D Pekka] [T/fin [v* [kaske [A/inf lahtea]]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
					A/inf has neutralized PHI-feature, will be resolved into +ARG due to kaske
				=[[D Pekka] [T/fin [v* [kaske [A/inf lahtea]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [v* [kaske [A/inf lahtea]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:164 [T/fin [<__>:164 [v* [kaske [A/inf lahtea]]]]]]
				=[<D Pekka>:164 [T/fin [<__>:164 [v* [kaske [A/inf lahtea]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:164 [T/fin [<__>:164 [v* [kaske [A/inf lahtea]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:164 [T/fin [<__>:164 [v* [kaske [A/inf lahtea]]]]]]
				7. Last resort extraposition:
				An EPP-head "A/inf" lacks specifier.
					Last resort extraposition will be tried on [<D Pekka>:164 [T/fin [<__>:164 [v* [kaske [A/inf lahtea]]]]]].
					No suitable node for extraposition found. No action was taken.
			= [<D Pekka> [T/fin [<D Pekka> [v* [kaske [A/inf lahtea]]]]]]
		Checking LF-interface conditions.
				An EPP-head "A/inf" lacks specifier.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
kaske:['!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:order', 'PF:kaske', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'VAL']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  kaske: [V, v, TT/fin];  A/inf: [INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "kaske-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v*$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "kaskee".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 61
['Pekka', 'haluaa', 'Merjan', 'lahtea']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	5. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	8. Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v$', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[D Pekka] T/fin]

	11. Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D Pekka] T/fin{v}]

	12. Consume "haluaa"

		[[D Pekka] T/fin{v}] + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into v because they are inside the same phonological word.
			=[[D Pekka] T/fin{v,V}]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'gen$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	13. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	14. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	15. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	16. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	17. Consume "gen$"
		Storing inflectional feature ['-', '-FLOAT', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

	18. Consume "D$"
		Adding inflectional features {'TAIL:ARG,VAL,CAT:INF', 'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', '-FLOAT', 'LANG:FI', 'PHI:NUM:SG'} to D

	19. Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"haluaa" lacks complement.
				Avoid [<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [haluaa D] due to complement selection.
				[[D Pekka] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 158]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D Pekka] T/fin{v,V}]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{v,V} D]]

	20. Consume "Merja-"

		[[D Pekka] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[D Pekka] [T/fin{v,V} D{N}]]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	21. Consume "A/inf"

		[[D Pekka] [T/fin{v,V} D{N}]] + A/inf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [v [haluaa [D Merja-]]]]]] A/inf] due to bad left branch.
				Reject [[T/fin [v [haluaa [D Merja-]]]] A/inf] due to bad left branch.
			Exploring solution number (1) =[D{N} A/inf]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[D Pekka] [T/fin{v,V} [[D Merja-] A/inf]]]

	22. Consume "lahtea"

		[[D Pekka] [T/fin{v,V} [[D Merja-] A/inf]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[D Pekka] [T/fin{v,V} [[D Merja-] A/inf{V}]]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{v,V} [[D Merja-] A/inf{V}]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D Pekka] [T/fin [v{V} [[D Merja-] A/inf{V}]]]]
					Target haluaa in v
					=[[D Pekka] [T/fin [v [haluaa [[D Merja-] A/inf{V}]]]]]
				=[[D Pekka] [T/fin [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
					A/inf has neutralized PHI-feature, will be resolved into -ARG due to haluaa
				=[[D Pekka] [T/fin [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:168 [T/fin [<__>:168 [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]]
				=[<D Pekka>:168 [T/fin [<__>:168 [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:168 [T/fin [<__>:168 [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:168 [T/fin [<__>:168 [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]]
				7. Last resort extraposition:
				D([D Merja-]) failed internal tail test for {frozenset({'CAT:INF', 'ARG', 'VAL'})}.
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf (A/inf) has a specifier [D Merja-](set()) but is marked for -EPP behavior.
					Last resort extraposition will be tried on [<D Pekka>:168 [T/fin [<__>:168 [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]].
					No suitable node for extraposition found. No action was taken.
			= [<D Pekka> [T/fin [<D Pekka> [v [haluaa [[D Merja-] [A/inf lahtea]]]]]]]
		Checking LF-interface conditions.
				D([D Merja-]) failed internal tail test for {frozenset({'CAT:INF', 'ARG', 'VAL'})}.
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf (A/inf) has a specifier [D Merja-](set()) but is marked for -EPP behavior.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  haluaa: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Merja-: [N, D, V, v, TT/fin];  A/inf: [INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D Pekka] T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[[D Pekka] [T/fin [v haluaa]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [v haluaa]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [v haluaa]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:169 [T/fin [<__>:169 [v haluaa]]]]
				=[<D Pekka>:169 [T/fin [<__>:169 [v haluaa]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:169 [T/fin [<__>:169 [v haluaa]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:169 [T/fin [<__>:169 [v haluaa]]]]
				7. Last resort extraposition:
				"haluaa" lacks complement.
					Last resort extraposition will be tried on [<D Pekka>:169 [T/fin [<__>:169 [v haluaa]]]].
					No suitable node for extraposition found. No action was taken.
			=[[<D Pekka>:169 [T/fin [<__>:169 [v haluaa]]]] D]

	23. Consume "Merja-"

		[[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[<D Pekka>:169 [T/fin [<__>:169 [v haluaa]]]] D{N}]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	24. Consume "A/inf"

		[[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] D{N}] + A/inf
			Filtering out impossible merge sites...
				Reject [[[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] <D Merja->] A/inf] due to bad left branch.
			Exploring solution number (1) =[D{N} A/inf]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[<D Pekka>:169 [T/fin [<__>:169 [v haluaa]]]] [[D Merja-] A/inf]]

	25. Consume "lahtea"

		[[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] [[D Merja-] A/inf]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[<D Pekka>:169 [T/fin [<__>:169 [v haluaa]]]] [[D Merja-] A/inf{V}]]

	>>>	Trying candidate spellout structure [[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] [[D Merja-] A/inf{V}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[<D Pekka>:169 [T/fin [<__>:169 [v haluaa]]]] [[D Merja-] [A/inf lahtea]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
				=[[<D Pekka>:169 [T/fin [<__>:169 [v haluaa]]]] [[D Merja-] [A/inf lahtea]]]
				3. Extraposition:
				=[[<D Pekka>:169 [T/fin [<__>:169 [v haluaa]]]] [[D Merja-] [A/inf lahtea]]]
				4. Floater movement reconstruction:
				=[[<D Pekka>:169 [T/fin [<__>:169 [v haluaa]]]] [[D Merja-] [A/inf lahtea]]]
				5. Phrasal movement reconstruction:
				=[[<D Pekka>:169 [T/fin [<__>:169 [v haluaa]]]] [[D Merja-] [A/inf lahtea]]]
				6. Agreement reconstruction:
					Head A/inf, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						A/inf acquired PHI:NUM:SG from the edge of A/inf.
						A/inf acquired PHI:PER:3 from the edge of A/inf.
				=[[<D Pekka>:169 [T/fin [<__>:169 [v haluaa]]]] [[D Merja-] [A/inf lahtea]]]
				7. Last resort extraposition:
				"haluaa" lacks complement.
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [<D Pekka>:169 [T/fin [<__>:169 [v haluaa]]]].
					Last resort extraposition will be tried on [[<D Pekka>:169 [T/fin [<__>:169 [v haluaa]]]] [[D Merja-] [A/inf lahtea]]].
					No suitable node for extraposition found. No action was taken.
			= [[<D Pekka> [T/fin [<D Pekka> [v haluaa]]]] [[D Merja-] [A/inf lahtea]]]
		Checking LF-interface conditions.
				"haluaa" lacks complement.
				[D Merja-] has no thematic role at the SPEC of A/inf
				A/inf has unacceptable specifier [<D Pekka>:169 [T/fin [<__>:169 [v haluaa]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:ARG', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf', 'PHI:NUM:SG', 'PHI:PER:3']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  haluaa: [V, v, TT/fin];  D: [D];  Merja-: [N, D];  A/inf: [INF];  lahtea: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "gen$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merjan".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "halua-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "haluaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 62
['Pekka', 'yrittaa', 'Merjan', 'lahtevan']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	5. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	8. Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'yritta-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[D Pekka] T/fin]

	11. Consume "yritta"

		[[D Pekka] T/fin] + yritta
			Filtering out impossible merge sites...
			Sink "yritta" into T/fin because they are inside the same phonological word.
			=[[D Pekka] T/fin{V}]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'gen$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	12. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	13. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	14. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	15. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	16. Consume "gen$"
		Storing inflectional feature ['-', '-FLOAT', 'LANG:FI', 'TAIL:ARG,VAL,CAT:INF'] into working memory.

	17. Consume "D$"
		Adding inflectional features {'TAIL:ARG,VAL,CAT:INF', 'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', '-FLOAT', 'LANG:FI', 'PHI:NUM:SG'} to D

	18. Consume "D"

		[[D Pekka] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
					yritta (yritta) is missing a mandatory complement A/inf
				Avoid [<D Pekka> [T/fin [<D Pekka> yritta]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{V} D] due to local agreement failure.
				Prioritize [T/fin{V} D] due to complement selection.
				Prioritize [yritta D] due to complement selection.
				[[D Pekka] T/fin{V}] + D = -197]
				T/fin{V} + D = 158]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D Pekka] T/fin{V}]; D]
			Exploring solution number (1) =[T/fin{V} D]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} D]]

	19. Consume "Merja-"

		[[D Pekka] [T/fin{V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} D{N}]]

		Next word contains multiple morphemes ['VA/inf$', 'lahte-']

	20. Consume "vAn"

		[[D Pekka] [T/fin{V} D{N}]] + vAn
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [yritta [D Merja-]]]]] vAn] due to bad left branch.
				Reject [[T/fin [yritta [D Merja-]]] vAn] due to bad left branch.
			Exploring solution number (1) =[D{N} vAn]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[D Pekka] [T/fin{V} [[D Merja-] vAn]]]

	21. Consume "lahtea"

		[[D Pekka] [T/fin{V} [[D Merja-] vAn]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into vAn because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [[D Merja-] vAn{V}]]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{V} [[D Merja-] vAn{V}]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target yritta in T/fin
					=[[D Pekka] [T/fin [yritta [[D Merja-] vAn{V}]]]]
				=[[D Pekka] [T/fin [yritta [[D Merja-] [vAn lahtea]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [yritta [[D Merja-] [vAn lahtea]]]]]
				3. Extraposition:
					yritta cannot select vAn
					Extraposition will be tried on [vAn lahtea].
					<[D Merja-] [vAn lahtea]> was made an adjunct.
					<[D Merja-] [vAn lahtea]> is transferred to LF as a phase.
				=[[D Pekka] [T/fin [yritta <[D Merja-]:31 [vAn [__:31 lahtea]]>]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:173 [T/fin [<__>:173 [yritta <[D Merja-]:31 [vAn [__:31 lahtea]]>]]]]
				=[<D Pekka>:173 [T/fin [<__>:173 [yritta <[D Merja-]:31 [vAn [__:31 lahtea]]>]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:173 [T/fin [<__>:173 [yritta <[D Merja-]:31 [vAn [__:31 lahtea]]>]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:173 [T/fin [<__>:173 [yritta <[D Merja-]:31 [vAn [__:31 lahtea]]>]]]]
				7. Last resort extraposition:
				yritta (yritta) is missing complement -ARG
				yritta (yritta) is missing complement A/inf
					Last resort extraposition will be tried on [<D Pekka>:173 [T/fin [<__>:173 [yritta <[D Merja-]:31 [vAn [__:31 lahtea]]>]]]].
					No suitable node for extraposition found. No action was taken.
			= [<D Pekka> [T/fin [<D Pekka> [yritta <[D Merja-] [vAn [[D Merja-] lahtea]]>]]]]
		Checking LF-interface conditions.
				yritta (yritta) is missing complement -ARG
				yritta (yritta) is missing complement A/inf
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
yritta:['!COMP:-ARG', '!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:yritta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
vAn:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/VA/inf', 'CAT:INF', 'CAT:VA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:VA', 'PF:vAn', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  yritta: [V, TT/fin];  D: [D, V, TT/fin];  Merja-: [N, D, V, TT/fin];  vAn: [INF, V, TT/fin];  __: [D, INF, V, TT/fin];  __: [N, D, INF, V, TT/fin];  lahtea: [V, INF, V, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtevan".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D Pekka] T/fin{V}] D]
				1. Head movement reconstruction:
				=[[D Pekka] [T/fin yritta]]
				2. Feature processing:
				=[[D Pekka] [T/fin yritta]]
				3. Extraposition:
				=[[D Pekka] [T/fin yritta]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:174 [T/fin [<__>:174 yritta]]]
				=[<D Pekka>:174 [T/fin [<__>:174 yritta]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:174 [T/fin [<__>:174 yritta]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:174 [T/fin [<__>:174 yritta]]]
				7. Last resort extraposition:
					yritta (yritta) is missing a mandatory complement A/inf
					Last resort extraposition will be tried on [<D Pekka>:174 [T/fin [<__>:174 yritta]]].
					No suitable node for extraposition found. No action was taken.
			=[[<D Pekka>:174 [T/fin [<__>:174 yritta]]] D]

	22. Consume "Merja-"

		[[<D Pekka> [T/fin [<D Pekka> yritta]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[<D Pekka>:174 [T/fin [<__>:174 yritta]]] D{N}]

		Next word contains multiple morphemes ['VA/inf$', 'lahte-']

	23. Consume "vAn"

		[[<D Pekka> [T/fin [<D Pekka> yritta]]] D{N}] + vAn
			Filtering out impossible merge sites...
				Reject [[[<D Pekka> [T/fin [<D Pekka> yritta]]] <D Merja->] vAn] due to bad left branch.
			Exploring solution number (1) =[D{N} vAn]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[<D Pekka>:174 [T/fin [<__>:174 yritta]]] [[D Merja-] vAn]]

	24. Consume "lahtea"

		[[<D Pekka> [T/fin [<D Pekka> yritta]]] [[D Merja-] vAn]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into vAn because they are inside the same phonological word.
			=[[<D Pekka>:174 [T/fin [<__>:174 yritta]]] [[D Merja-] vAn{V}]]

	>>>	Trying candidate spellout structure [[<D Pekka> [T/fin [<D Pekka> yritta]]] [[D Merja-] vAn{V}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[<D Pekka>:174 [T/fin [<__>:174 yritta]]] [[D Merja-] [vAn lahtea]]]
				2. Feature processing:
				=[[<D Pekka>:174 [T/fin [<__>:174 yritta]]] [[D Merja-] [vAn lahtea]]]
				3. Extraposition:
				=[[<D Pekka>:174 [T/fin [<__>:174 yritta]]] [[D Merja-] [vAn lahtea]]]
				4. Floater movement reconstruction:
				=[[<D Pekka>:174 [T/fin [<__>:174 yritta]]] [[D Merja-] [vAn lahtea]]]
				5. Phrasal movement reconstruction:
					[D Merja-] will undergo A-reconstruction.
					New head was spawned due to multiple specifiers at vAn but its category is unknown!
				=[[<D Pekka>:174 [T/fin [<__>:174 yritta]]] [? [[D Merja-]:32 [vAn [__:32 lahtea]]]]]
				6. Agreement reconstruction:
					Head vAn, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						vAn acquired PHI:DET:DEF from the edge of vAn.
						vAn acquired PHI:NUM:SG from the edge of vAn.
						vAn acquired PHI:PER:3 from the edge of vAn.
				=[[<D Pekka>:174 [T/fin [<__>:174 yritta]]] [? [[D Merja-]:32 [vAn [__:32 lahtea]]]]]
				7. Last resort extraposition:
					yritta (yritta) is missing a mandatory complement A/inf
					An uninterpretable grammatical head without lexical category was detected.
					Last resort extraposition will be tried on [[<D Pekka>:174 [T/fin [<__>:174 yritta]]] [? [[D Merja-]:32 [vAn [__:32 lahtea]]]]].
					No suitable node for extraposition found. No action was taken.
			= [[<D Pekka> [T/fin [<D Pekka> yritta]]] [? [[D Merja-] [vAn [[D Merja-] lahtea]]]]]
		Checking LF-interface conditions.
					yritta (yritta) is missing a mandatory complement A/inf
					An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
yritta:['!COMP:-ARG', '!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:yritta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:FI']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
vAn:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/VA/inf', 'CAT:INF', 'CAT:VA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:VA', 'PF:vAn', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-FLOAT', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:INF', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  yritta: [V, TT/fin];  ?: [?];  D: [D, ?];  Merja-: [N, D, ?];  vAn: [INF, ?];  __: [D, INF, ?];  __: [N, D, INF, ?];  lahtea: [V, INF, ?];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtevan".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "gen$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merjan".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "yritta-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "yrittaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 63
['Pekka', 'yrittaa', 'lahtevan']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	5. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	8. Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'yritta-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[D Pekka] T/fin]

	11. Consume "yritta"

		[[D Pekka] T/fin] + yritta
			Filtering out impossible merge sites...
			Sink "yritta" into T/fin because they are inside the same phonological word.
			=[[D Pekka] T/fin{V}]

		Next word contains multiple morphemes ['VA/inf$', 'lahte-']

	12. Consume "vAn"

		[[D Pekka] T/fin{V}] + vAn
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> yritta]]] vAn] due to bad left branch.
			Exploring solution number (1) =[T/fin{V} vAn]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} vAn]]

	13. Consume "lahtea"

		[[D Pekka] [T/fin{V} vAn]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into vAn because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} vAn{V}]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{V} vAn{V}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target yritta in T/fin
					=[[D Pekka] [T/fin [yritta vAn{V}]]]
				=[[D Pekka] [T/fin [yritta [vAn lahtea]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [yritta [vAn lahtea]]]]
				3. Extraposition:
					yritta cannot select vAn
					Extraposition will be tried on [vAn lahtea].
					<vAn lahtea> was made an adjunct.
					<vAn lahtea> is transferred to LF as a phase.
				=[[D Pekka] [T/fin [yritta <vAn lahtea>]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:176 [T/fin [<__>:176 [yritta <vAn lahtea>]]]]
				=[<D Pekka>:176 [T/fin [<__>:176 [yritta <vAn lahtea>]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:176 [T/fin [<__>:176 [yritta <vAn lahtea>]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:176 [T/fin [<__>:176 [yritta <vAn lahtea>]]]]
				7. Last resort extraposition:
				yritta (yritta) is missing complement -ARG
				yritta (yritta) is missing complement A/inf
				An EPP-head "vAn" lacks specifier.
					Last resort extraposition will be tried on [<D Pekka>:176 [T/fin [<__>:176 [yritta <vAn lahtea>]]]].
					No suitable node for extraposition found. No action was taken.
			= [<D Pekka> [T/fin [<D Pekka> [yritta <vAn lahtea>]]]]
		Checking LF-interface conditions.
				yritta (yritta) is missing complement -ARG
				yritta (yritta) is missing complement A/inf
				An EPP-head "vAn" lacks specifier.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
yritta:['!COMP:-ARG', '!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:yritta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
vAn:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/VA/inf', 'CAT:INF', 'CAT:VA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:VA', 'PF:vAn', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  yritta: [V, TT/fin];  vAn: [INF, V, TT/fin];  lahtea: [V, INF, V, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtevan".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "yritta-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "yrittaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 64
['Pekka', 'yrittaa']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	5. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	8. Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'yritta-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[D Pekka] T/fin]

	11. Consume "yritta"

		[[D Pekka] T/fin] + yritta
			Filtering out impossible merge sites...
			Sink "yritta" into T/fin because they are inside the same phonological word.
			=[[D Pekka] T/fin{V}]

	>>>	Trying candidate spellout structure [[D Pekka] T/fin{V}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[D Pekka] [T/fin yritta]]
				2. Feature processing:
				=[[D Pekka] [T/fin yritta]]
				3. Extraposition:
				=[[D Pekka] [T/fin yritta]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:177 [T/fin [<__>:177 yritta]]]
				=[<D Pekka>:177 [T/fin [<__>:177 yritta]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:177 [T/fin [<__>:177 yritta]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:177 [T/fin [<__>:177 yritta]]]
				7. Last resort extraposition:
					yritta (yritta) is missing a mandatory complement A/inf
					Last resort extraposition will be tried on [<D Pekka>:177 [T/fin [<__>:177 yritta]]].
					No suitable node for extraposition found. No action was taken.
			= [<D Pekka> [T/fin [<D Pekka> yritta]]]
		Checking LF-interface conditions.
					yritta (yritta) is missing a mandatory complement A/inf
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
yritta:['!COMP:-ARG', '!COMP:A/inf', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:try', 'PF:yritta', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  yritta: [V, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "yritta-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "yrittaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 65
['Pekka', 'uskoo', 'lahtevansa']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	5. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	8. Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'usko-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[D Pekka] T/fin]

	11. Consume "usko"

		[[D Pekka] T/fin] + usko
			Filtering out impossible merge sites...
			Sink "usko" into T/fin because they are inside the same phonological word.
			=[[D Pekka] T/fin{V}]

		Next word contains multiple morphemes ['[-px/3sg]$', 'VA/inf$', 'lahte-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	12. Consume "VA/inf$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to vAn

	13. Consume "vAn"

		[[D Pekka] T/fin{V}] + vAn
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, vAn.
				Prioritize [usko vAn] due to complement selection.
				[[D Pekka] T/fin{V}] + vAn = -98]
				T/fin{V} + vAn = 104]
		Ranking completed:
			1. [T/fin{V}; vAn]
			2. [[[D Pekka] T/fin{V}]; vAn]
			Exploring solution number (1) =[T/fin{V} vAn]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} vAn]]

	14. Consume "lahtea"

		[[D Pekka] [T/fin{V} vAn]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into vAn because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} vAn{V}]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{V} vAn{V}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target usko in T/fin
					=[[D Pekka] [T/fin [usko vAn{V}]]]
				=[[D Pekka] [T/fin [usko [vAn lahtea]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [usko [vAn lahtea]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [usko [vAn lahtea]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:180 [T/fin [<__>:180 [usko [vAn lahtea]]]]]
				=[<D Pekka>:180 [T/fin [<__>:180 [usko [vAn lahtea]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:180 [T/fin [<__>:180 [usko [vAn lahtea]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head vAn, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						vAn acquired PHI:NUM:SG from the edge of vAn.
						vAn acquired PHI:PER:3 from the edge of vAn.
				=[<D Pekka>:180 [T/fin [<__>:180 [usko [vAn lahtea]]]]]
				7. Last resort extraposition:
			= [<D Pekka> [T/fin [<D Pekka> [usko [vAn lahtea]]]]]
		Checking LF-interface conditions.
			Transferring [<D Pekka>:180 [T/fin [<__>:180 [usko [vAn lahtea]]]]] into the conceptual-intentional system...
				usko with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				vAn with ['PHI:DET:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'lahtea(<D Pekka>)', 'usko(<D Pekka>)', 'vAn(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [usko [vAn lahtea]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<__>:1 [usko [vAn lahtea]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [INF V]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
usko:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:VA/inf', 'LANG:FI', 'LF:believe', 'PF:usko', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
vAn:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/INF/VA/inf/INF/VA/inf', 'CAT:ARG/INF/VA/inf', 'CAT:INF', 'CAT:VA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:VA', 'PF:vAn', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  usko: [V, TT/fin];  vAn: [INF, V, TT/fin];  lahtea: [V, INF, V, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D Pekka] T/fin{V}] vAn]
				1. Head movement reconstruction:
				=[[D Pekka] [T/fin usko]]
				2. Feature processing:
				=[[D Pekka] [T/fin usko]]
				3. Extraposition:
				=[[D Pekka] [T/fin usko]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:181 [T/fin [<__>:181 usko]]]
				=[<D Pekka>:181 [T/fin [<__>:181 usko]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:181 [T/fin [<__>:181 usko]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:181 [T/fin [<__>:181 usko]]]
				7. Last resort extraposition:
			=[[<D Pekka>:181 [T/fin [<__>:181 usko]]] vAn]

	15. Consume "lahtea"

		[[<D Pekka> [T/fin [<D Pekka> usko]]] vAn] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into vAn because they are inside the same phonological word.
			=[[<D Pekka>:181 [T/fin [<__>:181 usko]]] vAn{V}]

	>>>	Trying candidate spellout structure [[<D Pekka> [T/fin [<D Pekka> usko]]] vAn{V}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[<D Pekka>:181 [T/fin [<__>:181 usko]]] [vAn lahtea]]
				2. Feature processing:
				=[[<D Pekka>:181 [T/fin [<__>:181 usko]]] [vAn lahtea]]
				3. Extraposition:
				=[[<D Pekka>:181 [T/fin [<__>:181 usko]]] [vAn lahtea]]
				4. Floater movement reconstruction:
				=[[<D Pekka>:181 [T/fin [<__>:181 usko]]] [vAn lahtea]]
				5. Phrasal movement reconstruction:
				=[[<D Pekka>:181 [T/fin [<__>:181 usko]]] [vAn lahtea]]
				6. Agreement reconstruction:
					Head vAn, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						vAn acquired PHI:NUM:SG from the edge of vAn.
						vAn acquired PHI:PER:3 from the edge of vAn.
				=[[<D Pekka>:181 [T/fin [<__>:181 usko]]] [vAn lahtea]]
				7. Last resort extraposition:
				vAn has unacceptable specifier [<D Pekka>:181 [T/fin [<__>:181 usko]]].
					Last resort extraposition will be tried on [[<D Pekka>:181 [T/fin [<__>:181 usko]]] [vAn lahtea]].
					No suitable node for extraposition found. No action was taken.
			= [[<D Pekka> [T/fin [<D Pekka> usko]]] [vAn lahtea]]
		Checking LF-interface conditions.
				vAn has unacceptable specifier [<D Pekka>:181 [T/fin [<__>:181 usko]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
usko:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:VA/inf', 'LANG:FI', 'LF:believe', 'PF:usko', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
vAn:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/INF/VA/inf/INF/VA/inf', 'CAT:ARG/INF/VA/inf', 'CAT:INF', 'CAT:VA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:VA', 'PF:vAn', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'VAL']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  usko: [V, TT/fin];  vAn: [INF];  lahtea: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "VA/inf$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtevansa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "usko-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "uskoo".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 66
['Pekka', 'uskoo', 'lahtevan']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	5. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	8. Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'usko-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[D Pekka] T/fin]

	11. Consume "usko"

		[[D Pekka] T/fin] + usko
			Filtering out impossible merge sites...
			Sink "usko" into T/fin because they are inside the same phonological word.
			=[[D Pekka] T/fin{V}]

		Next word contains multiple morphemes ['VA/inf$', 'lahte-']

	12. Consume "vAn"

		[[D Pekka] T/fin{V}] + vAn
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, vAn.
				Prioritize [usko vAn] due to complement selection.
				[[D Pekka] T/fin{V}] + vAn = -98]
				T/fin{V} + vAn = 104]
		Ranking completed:
			1. [T/fin{V}; vAn]
			2. [[[D Pekka] T/fin{V}]; vAn]
			Exploring solution number (1) =[T/fin{V} vAn]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} vAn]]

	13. Consume "lahtea"

		[[D Pekka] [T/fin{V} vAn]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into vAn because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} vAn{V}]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{V} vAn{V}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target usko in T/fin
					=[[D Pekka] [T/fin [usko vAn{V}]]]
				=[[D Pekka] [T/fin [usko [vAn lahtea]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [usko [vAn lahtea]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [usko [vAn lahtea]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:184 [T/fin [<__>:184 [usko [vAn lahtea]]]]]
				=[<D Pekka>:184 [T/fin [<__>:184 [usko [vAn lahtea]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:184 [T/fin [<__>:184 [usko [vAn lahtea]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head vAn, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[<D Pekka>:184 [T/fin [<__>:184 [usko [vAn lahtea]]]]]
				7. Last resort extraposition:
				An EPP-head "vAn" lacks specifier.
					Last resort extraposition will be tried on [<D Pekka>:184 [T/fin [<__>:184 [usko [vAn lahtea]]]]].
					No suitable node for extraposition found. No action was taken.
			= [<D Pekka> [T/fin [<D Pekka> [usko [vAn lahtea]]]]]
		Checking LF-interface conditions.
				An EPP-head "vAn" lacks specifier.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
usko:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:VA/inf', 'LANG:FI', 'LF:believe', 'PF:usko', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
vAn:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/VA/inf', 'CAT:INF', 'CAT:VA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:VA', 'PF:vAn', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  usko: [V, TT/fin];  vAn: [INF, V, TT/fin];  lahtea: [V, INF, V, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D Pekka] T/fin{V}] vAn]
				1. Head movement reconstruction:
				=[[D Pekka] [T/fin usko]]
				2. Feature processing:
				=[[D Pekka] [T/fin usko]]
				3. Extraposition:
				=[[D Pekka] [T/fin usko]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:185 [T/fin [<__>:185 usko]]]
				=[<D Pekka>:185 [T/fin [<__>:185 usko]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:185 [T/fin [<__>:185 usko]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:185 [T/fin [<__>:185 usko]]]
				7. Last resort extraposition:
			=[[<D Pekka>:185 [T/fin [<__>:185 usko]]] vAn]

	14. Consume "lahtea"

		[[<D Pekka> [T/fin [<D Pekka> usko]]] vAn] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into vAn because they are inside the same phonological word.
			=[[<D Pekka>:185 [T/fin [<__>:185 usko]]] vAn{V}]

	>>>	Trying candidate spellout structure [[<D Pekka> [T/fin [<D Pekka> usko]]] vAn{V}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[<D Pekka>:185 [T/fin [<__>:185 usko]]] [vAn lahtea]]
				2. Feature processing:
				=[[<D Pekka>:185 [T/fin [<__>:185 usko]]] [vAn lahtea]]
				3. Extraposition:
				=[[<D Pekka>:185 [T/fin [<__>:185 usko]]] [vAn lahtea]]
				4. Floater movement reconstruction:
				=[[<D Pekka>:185 [T/fin [<__>:185 usko]]] [vAn lahtea]]
				5. Phrasal movement reconstruction:
				=[[<D Pekka>:185 [T/fin [<__>:185 usko]]] [vAn lahtea]]
				6. Agreement reconstruction:
					Head vAn, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[<D Pekka>:185 [T/fin [<__>:185 usko]]] [vAn lahtea]]
				7. Last resort extraposition:
				vAn has unacceptable specifier [<D Pekka>:185 [T/fin [<__>:185 usko]]].
					Last resort extraposition will be tried on [[<D Pekka>:185 [T/fin [<__>:185 usko]]] [vAn lahtea]].
					No suitable node for extraposition found. No action was taken.
			= [[<D Pekka> [T/fin [<D Pekka> usko]]] [vAn lahtea]]
		Checking LF-interface conditions.
				vAn has unacceptable specifier [<D Pekka>:185 [T/fin [<__>:185 usko]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
usko:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:VA/inf', 'LANG:FI', 'LF:believe', 'PF:usko', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
vAn:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/INF/VA/inf', 'CAT:INF', 'CAT:VA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:VA', 'PF:vAn', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*', 'VAL']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  usko: [V, TT/fin];  vAn: [INF];  lahtea: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtevan".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "usko-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "uskoo".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 67
['John', 'persuades', 'Mary', 'to_inf', 'leave']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'v*$', 'persuade-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin]

	10. Consume "v*"

		[[D John] T/fin] + v*
			Filtering out impossible merge sites...
			Sink "v*" into T/fin because they are inside the same phonological word.
			=[[D John] T/fin{v}]

	11. Consume "persuade"

		[[D John] T/fin{v}] + persuade
			Filtering out impossible merge sites...
			Sink "persuade" into v* because they are inside the same phonological word.
			=[[D John] T/fin{v,V}]

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

	12. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	13. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	14. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	15. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	16. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	17. Consume "D"

		[[D John] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"persuade" lacks complement.
				Avoid [[D John] [T/fin [[D John] [v* persuade]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				[[D John] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 104]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D John] T/fin{v,V}]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
				An EPP-head "T/fin{v,V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} D]]

	18. Consume "Mary"

		[[D John] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[D John] [T/fin{v,V} D{N}]]

	19. Consume "to"

		[[D John] [T/fin{v,V} D{N}]] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				Avoid TT/finP as SPEC, to.
				An EPP-head "T/fin" lacks specifier.
				Avoid [T/fin [v* [persuade [D Mary]]]] as left branch because it constitutes illicit structure.
				Avoid D{N} because it could break words.
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
				Prioritize D{N} because all solutions were negative.
				[[D John] [T/fin{v,V} D{N}]] + to = -98]
				[T/fin{v,V} D{N}] + to = -194]
				D{N} + to = 106]
		Ranking completed:
			1. [D{N}; to]
			2. [[[D John] [T/fin{v,V} D{N}]]; to]
			3. [[T/fin{v,V} D{N}]; to]
			Exploring solution number (1) =[D{N} to]
				1. Head movement reconstruction:
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
			=[[D John] [T/fin{v,V} [[D Mary] to]]]

	20. Consume "leave"

		[[D John] [T/fin{v,V} [[D Mary] to]]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [v* [persuade [[D Mary] to]]]]]] leave] due to bad left branch.
				Reject [[T/fin [v* [persuade [[D Mary] to]]]] leave] due to bad left branch.
				Reject [[[D Mary] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} [[D Mary] [to leave]]]]

	>>>	Trying candidate spellout structure [[D John] [T/fin{v,V} [[D Mary] [to leave]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[[D John] [T/fin [v*{V} [[D Mary] [to leave]]]]]
					Target persuade in v*
					=[[D John] [T/fin [v* [persuade [[D Mary] [to leave]]]]]]
				=[[D John] [T/fin [v* [persuade [[D Mary] [to leave]]]]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
					to has neutralized PHI-feature, will be resolved into +ARG due to persuade
				=[[D John] [T/fin [v* [persuade [[D Mary] [to leave]]]]]]
				3. Extraposition:
				=[[D John] [T/fin [v* [persuade [[D Mary] [to leave]]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v* [persuade [[D Mary] [to leave]]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
					[D Mary] will undergo A-reconstruction.
				=[[D John]:142 [T/fin [__:142 [v* [persuade [[D Mary]:143 [to [__:143 leave]]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:142 [T/fin [__:142 [v* [persuade [[D Mary]:143 [to [__:143 leave]]]]]]]]
				7. Last resort extraposition:
			= [[D John] [T/fin [[D John] [v* [persuade [[D Mary] [to [[D Mary] leave]]]]]]]]
		Checking LF-interface conditions.
			Transferring [[D John]:142 [T/fin [__:142 [v* [persuade [[D Mary]:143 [to [__:143 leave]]]]]]]] into the conceptual-intentional system...
				v* with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				persuade with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'leave([D Mary])', 'persuade(clausal argument)', 'v*([D John])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [v* [persuade [[D Mary] [to [[D Mary] leave]]]]]]]]
		Grammar: [[D John]:1 [T/fin [__:1 [v* [persuade [[D Mary]:2 [to [__:2 leave]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [DP:2 [INF [__:2 V]]]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:EN', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
persuade:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  persuade: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Mary: [N, D, V, v, TT/fin];  to: [INF, V, v, TT/fin];  __: [D, INF, V, v, TT/fin];  __: [N, D, INF, V, v, TT/fin];  leave: [V, INF, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] [T/fin{v,V} D{N}]] to]
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[[D John] [T/fin [v*{V} D{N}]]]
					Target persuade in v*
					=[[D John] [T/fin [v* [persuade D{N}]]]]
				=[[D John] [T/fin [v* [persuade [D Mary]]]]]
				2. Feature processing:
				=[[D John] [T/fin [v* [persuade [D Mary]]]]]
				3. Extraposition:
				=[[D John] [T/fin [v* [persuade [D Mary]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v* [persuade [D Mary]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:144 [T/fin [__:144 [v* [persuade [D Mary]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:144 [T/fin [__:144 [v* [persuade [D Mary]]]]]]
				7. Last resort extraposition:
			=[[[D John]:144 [T/fin [__:144 [v* [persuade [D Mary]]]]]] to]

	21. Consume "leave"

		[[[D John] [T/fin [[D John] [v* [persuade [D Mary]]]]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [v* [persuade [D Mary]]]]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:144 [T/fin [__:144 [v* [persuade [D Mary]]]]]] [to leave]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [v* [persuade [D Mary]]]]]] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:144 [T/fin [__:144 [v* [persuade [D Mary]]]]]] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:144 [T/fin [__:144 [v* [persuade [D Mary]]]]]] [to leave]]
				3. Extraposition:
				=[[[D John]:144 [T/fin [__:144 [v* [persuade [D Mary]]]]]] [to leave]]
				4. Floater movement reconstruction:
				=[[[D John]:144 [T/fin [__:144 [v* [persuade [D Mary]]]]]] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[D John]:144 [T/fin [__:144 [v* [persuade [D Mary]]]]]] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[D John]:144 [T/fin [__:144 [v* [persuade [D Mary]]]]]] [to leave]]
				7. Last resort extraposition:
				to has unacceptable specifier [[D John]:144 [T/fin [__:144 [v* [persuade [D Mary]]]]]].
					Last resort extraposition will be tried on [[[D John]:144 [T/fin [__:144 [v* [persuade [D Mary]]]]]] [to leave]].
			= [[[D John] [T/fin [[D John] [v* [persuade [D Mary]]]]]] [to leave]]
		Checking LF-interface conditions.
				to has unacceptable specifier [[D John]:144 [T/fin [__:144 [v* [persuade [D Mary]]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:EN', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
persuade:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  persuade: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Mary: [N, D, V, v, TT/fin];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[T/fin{v,V} D{N}] to]
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[T/fin [v*{V} D{N}]]
					Target persuade in v*
					=[T/fin [v* [persuade D{N}]]]
				=[T/fin [v* [persuade [D Mary]]]]
				2. Feature processing:
				=[T/fin [v* [persuade [D Mary]]]]
				3. Extraposition:
				=[T/fin [v* [persuade [D Mary]]]]
				4. Floater movement reconstruction:
				=[T/fin [v* [persuade [D Mary]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [v* [persuade [D Mary]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[T/fin [v* [persuade [D Mary]]]]
				7. Last resort extraposition:
				An EPP-head "T/fin" lacks specifier.
					Last resort extraposition will be tried on [T/fin [v* [persuade [D Mary]]]].
					No suitable node for extraposition found. No action was taken.
			=[[D John] [[T/fin [v* [persuade [D Mary]]]] to]]

	22. Consume "leave"

		[[D John] [[T/fin [v* [persuade [D Mary]]]] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [[[T/fin [v* [persuade [D Mary]]]] [D John]] to]] leave] due to bad left branch.
				Reject [[[T/fin [v* [persuade [D Mary]]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [[T/fin [v* [persuade [D Mary]]]] [to leave]]]

	>>>	Trying candidate spellout structure [[D John] [[T/fin [v* [persuade [D Mary]]]] [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[D John] [[T/fin [v* [persuade [D Mary]]]] [to leave]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[D John] [[T/fin [v* [persuade [D Mary]]]] [to leave]]]
				3. Extraposition:
				=[[D John] [[T/fin [v* [persuade [D Mary]]]] [to leave]]]
				4. Floater movement reconstruction:
				=[[D John] [[T/fin [v* [persuade [D Mary]]]] [to leave]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
					New head was spawned due to multiple specifiers at to but its category is unknown!
				=[[D John]:146 [? [[T/fin [v* [persuade [D Mary]]]] [to [__:146 leave]]]]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG by phi-Agree from __:146.
						to acquired PHI:PER:3 by phi-Agree from __:146.
				=[[D John]:146 [? [[T/fin [v* [persuade [D Mary]]]] [to [__:146 leave]]]]]
				7. Last resort extraposition:
					An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier.
				to has unacceptable specifier [T/fin [v* [persuade [D Mary]]]].
					Last resort extraposition will be tried on [[D John]:146 [? [[T/fin [v* [persuade [D Mary]]]] [to [__:146 leave]]]]].
			= [[D John] [? [[T/fin [v* [persuade [D Mary]]]] [to [[D John] leave]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier.
				to has unacceptable specifier [T/fin [v* [persuade [D Mary]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:EN', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
persuade:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI_CHECKED', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  ?: [?];  T/fin: [TT/fin, ?];  v*: [v, TT/fin, ?];  persuade: [V, v, TT/fin, ?];  D: [D, V, v, TT/fin, ?];  Mary: [N, D, V, v, TT/fin, ?];  to: [INF, ?];  __: [D, INF, ?];  __: [N, D, INF, ?];  leave: [V, INF, ?];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[[D John] [T/fin [v* persuade]]]
				2. Feature processing:
				=[[D John] [T/fin [v* persuade]]]
				3. Extraposition:
				=[[D John] [T/fin [v* persuade]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v* persuade]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:147 [T/fin [__:147 [v* persuade]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:147 [T/fin [__:147 [v* persuade]]]]
				7. Last resort extraposition:
				"persuade" lacks complement.
					Last resort extraposition will be tried on [[D John]:147 [T/fin [__:147 [v* persuade]]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:147 [T/fin [__:147 [v* persuade]]]] D]

	23. Consume "Mary"

		[[[D John] [T/fin [[D John] [v* persuade]]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[[D John]:147 [T/fin [__:147 [v* persuade]]]] D{N}]

	24. Consume "to"

		[[[D John] [T/fin [[D John] [v* persuade]]]] D{N}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				"persuade" lacks complement.
				Avoid [[[D John] [T/fin [[D John] [v* persuade]]]] <D Mary>] as left branch because it constitutes illicit structure.
				[[[D John]:147 [T/fin [__:147 [v* persuade]]]] D{N}] + to = -98]
				D{N} + to = 2]
		Ranking completed:
			1. [D{N}; to]
			2. [[[[D John]:147 [T/fin [__:147 [v* persuade]]]] D{N}]; to]
			Exploring solution number (1) =[D{N} to]
				1. Head movement reconstruction:
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
			=[[[D John]:147 [T/fin [__:147 [v* persuade]]]] [[D Mary] to]]

	25. Consume "leave"

		[[[D John] [T/fin [[D John] [v* persuade]]]] [[D Mary] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [v* persuade]]]] [[D Mary] to]] leave] due to bad left branch.
				Reject [[[D Mary] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:147 [T/fin [__:147 [v* persuade]]]] [[D Mary] [to leave]]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [v* persuade]]]] [[D Mary] [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:147 [T/fin [__:147 [v* persuade]]]] [[D Mary] [to leave]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:147 [T/fin [__:147 [v* persuade]]]] [[D Mary] [to leave]]]
				3. Extraposition:
				=[[[D John]:147 [T/fin [__:147 [v* persuade]]]] [[D Mary] [to leave]]]
				4. Floater movement reconstruction:
				=[[[D John]:147 [T/fin [__:147 [v* persuade]]]] [[D Mary] [to leave]]]
				5. Phrasal movement reconstruction:
					[D Mary] will undergo A-reconstruction.
					New head was spawned due to multiple specifiers at to but its category is unknown!
				=[[[D John]:147 [T/fin [__:147 [v* persuade]]]] [? [[D Mary]:148 [to [__:148 leave]]]]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG from the edge of to.
						to acquired PHI:PER:3 from the edge of to.
				=[[[D John]:147 [T/fin [__:147 [v* persuade]]]] [? [[D Mary]:148 [to [__:148 leave]]]]]
				7. Last resort extraposition:
				"persuade" lacks complement.
					An uninterpretable grammatical head without lexical category was detected.
					Last resort extraposition will be tried on [[[D John]:147 [T/fin [__:147 [v* persuade]]]] [? [[D Mary]:148 [to [__:148 leave]]]]].
			= [[[D John] [T/fin [[D John] [v* persuade]]]] [? [[D Mary] [to [[D Mary] leave]]]]]
		Checking LF-interface conditions.
				"persuade" lacks complement.
					An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:EN', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
persuade:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  persuade: [V, v, TT/fin];  ?: [?];  D: [D, ?];  Mary: [N, D, ?];  to: [INF, ?];  __: [D, INF, ?];  __: [N, D, INF, ?];  leave: [V, INF, ?];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[[D John]:147 [T/fin [__:147 [v* persuade]]]] D{N}] to]
				1. Head movement reconstruction:
				=[[[D John]:147 [T/fin [__:147 [v* persuade]]]] [D Mary]]
				2. Feature processing:
				=[[[D John]:147 [T/fin [__:147 [v* persuade]]]] [D Mary]]
				3. Extraposition:
				=[[[D John]:147 [T/fin [__:147 [v* persuade]]]] [D Mary]]
				4. Floater movement reconstruction:
				=[[[D John]:147 [T/fin [__:147 [v* persuade]]]] [D Mary]]
				5. Phrasal movement reconstruction:
				=[[[D John]:147 [T/fin [__:147 [v* persuade]]]] [D Mary]]
				6. Agreement reconstruction:
				=[[[D John]:147 [T/fin [__:147 [v* persuade]]]] [D Mary]]
				7. Last resort extraposition:
				"persuade" lacks complement.
				D has unacceptable specifier [[D John]:147 [T/fin [__:147 [v* persuade]]]].
					Last resort extraposition will be tried on [[[D John]:147 [T/fin [__:147 [v* persuade]]]] [D Mary]].
					<D Mary> was made an adjunct.
					<D Mary> is transferred to LF as a phase.
				"persuade" lacks complement.
					Something is still wrong. The structure is still uninterpretable.
			=[[[[D John]:147 [T/fin [__:147 [v* persuade]]]] <D Mary>] to]

	26. Consume "leave"

		[[[[D John] [T/fin [[D John] [v* persuade]]]] <D Mary>] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[[D John] [T/fin [[D John] [v* persuade]]]] <D Mary>] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[[D John]:147 [T/fin [__:147 [v* persuade]]]] <D Mary>] [to leave]]

	>>>	Trying candidate spellout structure [[[[D John] [T/fin [[D John] [v* persuade]]]] <D Mary>] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[[D John]:147 [T/fin [__:147 [v* persuade]]]] <D Mary>] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[[D John]:147 [T/fin [__:147 [v* persuade]]]] <D Mary>] [to leave]]
				3. Extraposition:
				=[[[[D John]:147 [T/fin [__:147 [v* persuade]]]] <D Mary>] [to leave]]
				4. Floater movement reconstruction:
				=[[[[D John]:147 [T/fin [__:147 [v* persuade]]]] <D Mary>] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[[D John]:147 [T/fin [__:147 [v* persuade]]]] <D Mary>] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[[D John]:147 [T/fin [__:147 [v* persuade]]]] <D Mary>] [to leave]]
				7. Last resort extraposition:
				"persuade" lacks complement.
				to has unacceptable specifier [[[D John]:147 [T/fin [__:147 [v* persuade]]]] <D Mary>].
					Last resort extraposition will be tried on [[[[D John]:147 [T/fin [__:147 [v* persuade]]]] <D Mary>] [to leave]].
			= [[[[D John] [T/fin [[D John] [v* persuade]]]] <D Mary>] [to leave]]
		Checking LF-interface conditions.
				"persuade" lacks complement.
				to has unacceptable specifier [[[D John]:147 [T/fin [__:147 [v* persuade]]]] <D Mary>].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:EN', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
persuade:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  persuade: [V, v, TT/fin];  D: [D];  Mary: [N, D];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "persuade-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v*$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "persuades".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 68
['John', 'persuades', 'to_inf', 'leave']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'v*$', 'persuade-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin]

	10. Consume "v*"

		[[D John] T/fin] + v*
			Filtering out impossible merge sites...
			Sink "v*" into T/fin because they are inside the same phonological word.
			=[[D John] T/fin{v}]

	11. Consume "persuade"

		[[D John] T/fin{v}] + persuade
			Filtering out impossible merge sites...
			Sink "persuade" into v* because they are inside the same phonological word.
			=[[D John] T/fin{v,V}]

	12. Consume "to"

		[[D John] T/fin{v,V}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				"persuade" lacks complement.
				Avoid [[D John] [T/fin [[D John] [v* persuade]]]] as left branch because it constitutes illicit structure.
				Prioritize [persuade to] due to complement selection.
				[[D John] T/fin{v,V}] + to = -197]
				T/fin{v,V} + to = 104]
		Ranking completed:
			1. [T/fin{v,V}; to]
			2. [[[D John] T/fin{v,V}]; to]
			Exploring solution number (1) =[T/fin{v,V} to]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
				An EPP-head "T/fin{v,V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} to]]

	13. Consume "leave"

		[[D John] [T/fin{v,V} to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [v* [persuade to]]]]] leave] due to bad left branch.
				Reject [[T/fin [v* [persuade to]]] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} [to leave]]]

	>>>	Trying candidate spellout structure [[D John] [T/fin{v,V} [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[[D John] [T/fin [v*{V} [to leave]]]]
					Target persuade in v*
					=[[D John] [T/fin [v* [persuade [to leave]]]]]
				=[[D John] [T/fin [v* [persuade [to leave]]]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
					to has neutralized PHI-feature, will be resolved into +ARG due to persuade
				=[[D John] [T/fin [v* [persuade [to leave]]]]]
				3. Extraposition:
				=[[D John] [T/fin [v* [persuade [to leave]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v* [persuade [to leave]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:152 [T/fin [__:152 [v* [persuade [to leave]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:152 [T/fin [__:152 [v* [persuade [to leave]]]]]]
				7. Last resort extraposition:
				An EPP-head "to" lacks specifier.
					Last resort extraposition will be tried on [[D John]:152 [T/fin [__:152 [v* [persuade [to leave]]]]]].
					No suitable node for extraposition found. No action was taken.
			= [[D John] [T/fin [[D John] [v* [persuade [to leave]]]]]]
		Checking LF-interface conditions.
				An EPP-head "to" lacks specifier.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:EN', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
persuade:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'SPEC:*', 'VAL']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  persuade: [V, v, TT/fin];  to: [INF, V, v, TT/fin];  leave: [V, INF, V, v, TT/fin];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin{v,V}] to]
				1. Head movement reconstruction:
				=[[D John] [T/fin [v* persuade]]]
				2. Feature processing:
				=[[D John] [T/fin [v* persuade]]]
				3. Extraposition:
				=[[D John] [T/fin [v* persuade]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v* persuade]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:153 [T/fin [__:153 [v* persuade]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:153 [T/fin [__:153 [v* persuade]]]]
				7. Last resort extraposition:
				"persuade" lacks complement.
					Last resort extraposition will be tried on [[D John]:153 [T/fin [__:153 [v* persuade]]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:153 [T/fin [__:153 [v* persuade]]]] to]

	14. Consume "leave"

		[[[D John] [T/fin [[D John] [v* persuade]]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [v* persuade]]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:153 [T/fin [__:153 [v* persuade]]]] [to leave]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [v* persuade]]]] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:153 [T/fin [__:153 [v* persuade]]]] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:153 [T/fin [__:153 [v* persuade]]]] [to leave]]
				3. Extraposition:
				=[[[D John]:153 [T/fin [__:153 [v* persuade]]]] [to leave]]
				4. Floater movement reconstruction:
				=[[[D John]:153 [T/fin [__:153 [v* persuade]]]] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[D John]:153 [T/fin [__:153 [v* persuade]]]] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[D John]:153 [T/fin [__:153 [v* persuade]]]] [to leave]]
				7. Last resort extraposition:
				"persuade" lacks complement.
				to has unacceptable specifier [[D John]:153 [T/fin [__:153 [v* persuade]]]].
					Last resort extraposition will be tried on [[[D John]:153 [T/fin [__:153 [v* persuade]]]] [to leave]].
			= [[[D John] [T/fin [[D John] [v* persuade]]]] [to leave]]
		Checking LF-interface conditions.
				"persuade" lacks complement.
				to has unacceptable specifier [[D John]:153 [T/fin [__:153 [v* persuade]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:EN', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
persuade:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  persuade: [V, v, TT/fin];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "persuade-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v*$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "persuades".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 69
['John', 'promises', 'Mary', 'to_inf', 'leave']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'promise-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin]

	10. Consume "promise"

		[[D John] T/fin] + promise
			Filtering out impossible merge sites...
			Sink "promise" into T/fin because they are inside the same phonological word.
			=[[D John] T/fin{V}]

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

	11. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	12. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	13. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	14. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	15. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	16. Consume "D"

		[[D John] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{V} D] due to complement selection.
				Prioritize [promise D] due to complement selection.
				[[D John] T/fin{V}] + D = -98]
				T/fin{V} + D = 206]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D John] T/fin{V}]; D]
			Exploring solution number (1) =[T/fin{V} D]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
				An EPP-head "T/fin{V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{V} D]]

	17. Consume "Mary"

		[[D John] [T/fin{V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[D John] [T/fin{V} D{N}]]

	18. Consume "to"

		[[D John] [T/fin{V} D{N}]] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				Avoid TT/finP as SPEC, to.
				An EPP-head "T/fin" lacks specifier.
				Avoid [T/fin [promise [D Mary]]] as left branch because it constitutes illicit structure.
				Avoid D{N} because it could break words.
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
				Prioritize D{N} because all solutions were negative.
				[[D John] [T/fin{V} D{N}]] + to = -98]
				[T/fin{V} D{N}] + to = -194]
				D{N} + to = 106]
		Ranking completed:
			1. [D{N}; to]
			2. [[[D John] [T/fin{V} D{N}]]; to]
			3. [[T/fin{V} D{N}]; to]
			Exploring solution number (1) =[D{N} to]
				1. Head movement reconstruction:
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
			=[[D John] [T/fin{V} [[D Mary] to]]]

	19. Consume "leave"

		[[D John] [T/fin{V} [[D Mary] to]]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [promise [[D Mary] to]]]]] leave] due to bad left branch.
				Reject [[T/fin [promise [[D Mary] to]]] leave] due to bad left branch.
				Reject [[[D Mary] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{V} [[D Mary] [to leave]]]]

	>>>	Trying candidate spellout structure [[D John] [T/fin{V} [[D Mary] [to leave]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target promise in T/fin
					=[[D John] [T/fin [promise [[D Mary] [to leave]]]]]
				=[[D John] [T/fin [promise [[D Mary] [to leave]]]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
					to has neutralized PHI-feature, will be resolved into -ARG due to promise
				=[[D John] [T/fin [promise [[D Mary] [to leave]]]]]
				3. Extraposition:
				=[[D John] [T/fin [promise [[D Mary] [to leave]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [promise [[D Mary] [to leave]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:159 [T/fin [__:159 [promise [[D Mary] [to leave]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:159 [T/fin [__:159 [promise [[D Mary] [to leave]]]]]]
				7. Last resort extraposition:
				[D Mary] has no thematic role at the SPEC of to
				to (to) has a specifier [D Mary](set()) but is marked for -EPP behavior.
					Last resort extraposition will be tried on [[D John]:159 [T/fin [__:159 [promise [[D Mary] [to leave]]]]]].
					<to leave> was made an adjunct.
					<to leave> is transferred to LF as a phase.
			= [[D John] [T/fin [[D John] [promise [[D Mary] <to leave>]]]]]
		Checking LF-interface conditions.
			Transferring [[D John]:159 [T/fin [__:159 [promise [[D Mary] <to leave>]]]]] into the conceptual-intentional system...
				promise with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D Mary] <to leave>]    (alternatives: 2. [D John] 3. T/fin )
				leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'leave([D John])', 'promise([[D Mary] <to leave>])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [promise [[D Mary] <to leave>]]]]]
		Grammar: [[D John]:1 [T/fin [__:1 [promise [[D Mary] <to leave>]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [[D N] INFP]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
promise:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  promise: [V, TT/fin];  D: [D, V, TT/fin];  Mary: [N, D, V, TT/fin];  to: [INF, V, TT/fin];  leave: [V, INF, V, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] [T/fin{V} D{N}]] to]
				1. Head movement reconstruction:
					Target promise in T/fin
					=[[D John] [T/fin [promise D{N}]]]
				=[[D John] [T/fin [promise [D Mary]]]]
				2. Feature processing:
				=[[D John] [T/fin [promise [D Mary]]]]
				3. Extraposition:
				=[[D John] [T/fin [promise [D Mary]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [promise [D Mary]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:160 [T/fin [__:160 [promise [D Mary]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:160 [T/fin [__:160 [promise [D Mary]]]]]
				7. Last resort extraposition:
			=[[[D John]:160 [T/fin [__:160 [promise [D Mary]]]]] to]

	20. Consume "leave"

		[[[D John] [T/fin [[D John] [promise [D Mary]]]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [promise [D Mary]]]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:160 [T/fin [__:160 [promise [D Mary]]]]] [to leave]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [promise [D Mary]]]]] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:160 [T/fin [__:160 [promise [D Mary]]]]] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:160 [T/fin [__:160 [promise [D Mary]]]]] [to leave]]
				3. Extraposition:
				=[[[D John]:160 [T/fin [__:160 [promise [D Mary]]]]] [to leave]]
				4. Floater movement reconstruction:
				=[[[D John]:160 [T/fin [__:160 [promise [D Mary]]]]] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[D John]:160 [T/fin [__:160 [promise [D Mary]]]]] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[D John]:160 [T/fin [__:160 [promise [D Mary]]]]] [to leave]]
				7. Last resort extraposition:
				to has unacceptable specifier [[D John]:160 [T/fin [__:160 [promise [D Mary]]]]].
					Last resort extraposition will be tried on [[[D John]:160 [T/fin [__:160 [promise [D Mary]]]]] [to leave]].
			= [[[D John] [T/fin [[D John] [promise [D Mary]]]]] [to leave]]
		Checking LF-interface conditions.
				to has unacceptable specifier [[D John]:160 [T/fin [__:160 [promise [D Mary]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
promise:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  promise: [V, TT/fin];  D: [D, V, TT/fin];  Mary: [N, D, V, TT/fin];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[T/fin{V} D{N}] to]
				1. Head movement reconstruction:
					Target promise in T/fin
					=[T/fin [promise D{N}]]
				=[T/fin [promise [D Mary]]]
				2. Feature processing:
				=[T/fin [promise [D Mary]]]
				3. Extraposition:
				=[T/fin [promise [D Mary]]]
				4. Floater movement reconstruction:
				=[T/fin [promise [D Mary]]]
				5. Phrasal movement reconstruction:
				=[T/fin [promise [D Mary]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:GEN:F by phi-Agree from [D Mary].
						T/fin acquired PHI:NUM:SG by phi-Agree from [D Mary].
						T/fin acquired PHI:PER:3 by phi-Agree from [D Mary].
				=[T/fin [promise [D Mary]]]
				7. Last resort extraposition:
				An EPP-head "T/fin" lacks specifier.
					Last resort extraposition will be tried on [T/fin [promise [D Mary]]].
					No suitable node for extraposition found. No action was taken.
			=[[D John] [[T/fin [promise [D Mary]]] to]]

	21. Consume "leave"

		[[D John] [[T/fin [promise [D Mary]]] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [[[T/fin [promise [D Mary]]] [D John]] to]] leave] due to bad left branch.
				Reject [[[T/fin [promise [D Mary]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [[T/fin [promise [D Mary]]] [to leave]]]

	>>>	Trying candidate spellout structure [[D John] [[T/fin [promise [D Mary]]] [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[D John] [[T/fin [promise [D Mary]]] [to leave]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[D John] [[T/fin [promise [D Mary]]] [to leave]]]
				3. Extraposition:
				=[[D John] [[T/fin [promise [D Mary]]] [to leave]]]
				4. Floater movement reconstruction:
				=[[D John] [[T/fin [promise [D Mary]]] [to leave]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
					New head was spawned due to multiple specifiers at to but its category is unknown!
				=[[D John]:162 [? [[T/fin [promise [D Mary]]] [to [__:162 leave]]]]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG by phi-Agree from __:162.
						to acquired PHI:PER:3 by phi-Agree from __:162.
				=[[D John]:162 [? [[T/fin [promise [D Mary]]] [to [__:162 leave]]]]]
				7. Last resort extraposition:
					An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier.
				to has unacceptable specifier [T/fin [promise [D Mary]]].
					Last resort extraposition will be tried on [[D John]:162 [? [[T/fin [promise [D Mary]]] [to [__:162 leave]]]]].
			= [[D John] [? [[T/fin [promise [D Mary]]] [to [[D John] leave]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier.
				to has unacceptable specifier [T/fin [promise [D Mary]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI_CHECKED', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
promise:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI_CHECKED', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  ?: [?];  T/fin: [TT/fin, ?];  promise: [V, TT/fin, ?];  D: [D, V, TT/fin, ?];  Mary: [N, D, V, TT/fin, ?];  to: [INF, ?];  __: [D, INF, ?];  __: [N, D, INF, ?];  leave: [V, INF, ?];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin{V}] D]
				1. Head movement reconstruction:
				=[[D John] [T/fin promise]]
				2. Feature processing:
				=[[D John] [T/fin promise]]
				3. Extraposition:
				=[[D John] [T/fin promise]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin promise]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:163 [T/fin [__:163 promise]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:163 [T/fin [__:163 promise]]]
				7. Last resort extraposition:
			=[[[D John]:163 [T/fin [__:163 promise]]] D]

	22. Consume "Mary"

		[[[D John] [T/fin [[D John] promise]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[[D John]:163 [T/fin [__:163 promise]]] D{N}]

	23. Consume "to"

		[[[D John] [T/fin [[D John] promise]]] D{N}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [[[D John] [T/fin [[D John] promise]]] <D Mary>] as left branch because it constitutes illicit structure.
				[[[D John]:163 [T/fin [__:163 promise]]] D{N}] + to = -98]
				D{N} + to = 2]
		Ranking completed:
			1. [D{N}; to]
			2. [[[[D John]:163 [T/fin [__:163 promise]]] D{N}]; to]
			Exploring solution number (1) =[D{N} to]
				1. Head movement reconstruction:
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
			=[[[D John]:163 [T/fin [__:163 promise]]] [[D Mary] to]]

	24. Consume "leave"

		[[[D John] [T/fin [[D John] promise]]] [[D Mary] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] promise]]] [[D Mary] to]] leave] due to bad left branch.
				Reject [[[D Mary] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:163 [T/fin [__:163 promise]]] [[D Mary] [to leave]]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] promise]]] [[D Mary] [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:163 [T/fin [__:163 promise]]] [[D Mary] [to leave]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:163 [T/fin [__:163 promise]]] [[D Mary] [to leave]]]
				3. Extraposition:
				=[[[D John]:163 [T/fin [__:163 promise]]] [[D Mary] [to leave]]]
				4. Floater movement reconstruction:
				=[[[D John]:163 [T/fin [__:163 promise]]] [[D Mary] [to leave]]]
				5. Phrasal movement reconstruction:
					[D Mary] will undergo A-reconstruction.
					New head was spawned due to multiple specifiers at to but its category is unknown!
				=[[[D John]:163 [T/fin [__:163 promise]]] [? [[D Mary]:164 [to [__:164 leave]]]]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG from the edge of to.
						to acquired PHI:PER:3 from the edge of to.
				=[[[D John]:163 [T/fin [__:163 promise]]] [? [[D Mary]:164 [to [__:164 leave]]]]]
				7. Last resort extraposition:
					An uninterpretable grammatical head without lexical category was detected.
					Last resort extraposition will be tried on [[[D John]:163 [T/fin [__:163 promise]]] [? [[D Mary]:164 [to [__:164 leave]]]]].
			= [[[D John] [T/fin [[D John] promise]]] [? [[D Mary] [to [[D Mary] leave]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
promise:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  promise: [V, TT/fin];  ?: [?];  D: [D, ?];  Mary: [N, D, ?];  to: [INF, ?];  __: [D, INF, ?];  __: [N, D, INF, ?];  leave: [V, INF, ?];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[[D John]:163 [T/fin [__:163 promise]]] D{N}] to]
				1. Head movement reconstruction:
				=[[[D John]:163 [T/fin [__:163 promise]]] [D Mary]]
				2. Feature processing:
				=[[[D John]:163 [T/fin [__:163 promise]]] [D Mary]]
				3. Extraposition:
				=[[[D John]:163 [T/fin [__:163 promise]]] [D Mary]]
				4. Floater movement reconstruction:
				=[[[D John]:163 [T/fin [__:163 promise]]] [D Mary]]
				5. Phrasal movement reconstruction:
				=[[[D John]:163 [T/fin [__:163 promise]]] [D Mary]]
				6. Agreement reconstruction:
				=[[[D John]:163 [T/fin [__:163 promise]]] [D Mary]]
				7. Last resort extraposition:
				D has unacceptable specifier [[D John]:163 [T/fin [__:163 promise]]].
					Last resort extraposition will be tried on [[[D John]:163 [T/fin [__:163 promise]]] [D Mary]].
					<D Mary> was made an adjunct.
					<D Mary> is transferred to LF as a phase.
					Something is still wrong. The structure is still uninterpretable.
			=[[[[D John]:163 [T/fin [__:163 promise]]] <D Mary>] to]

	25. Consume "leave"

		[[[[D John] [T/fin [[D John] promise]]] <D Mary>] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[[D John] [T/fin [[D John] promise]]] <D Mary>] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[[D John]:163 [T/fin [__:163 promise]]] <D Mary>] [to leave]]

	>>>	Trying candidate spellout structure [[[[D John] [T/fin [[D John] promise]]] <D Mary>] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[[D John]:163 [T/fin [__:163 promise]]] <D Mary>] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[[D John]:163 [T/fin [__:163 promise]]] <D Mary>] [to leave]]
				3. Extraposition:
				=[[[[D John]:163 [T/fin [__:163 promise]]] <D Mary>] [to leave]]
				4. Floater movement reconstruction:
				=[[[[D John]:163 [T/fin [__:163 promise]]] <D Mary>] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[[D John]:163 [T/fin [__:163 promise]]] <D Mary>] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[[D John]:163 [T/fin [__:163 promise]]] <D Mary>] [to leave]]
				7. Last resort extraposition:
				to has unacceptable specifier [[[D John]:163 [T/fin [__:163 promise]]] <D Mary>].
					Last resort extraposition will be tried on [[[[D John]:163 [T/fin [__:163 promise]]] <D Mary>] [to leave]].
			= [[[[D John] [T/fin [[D John] promise]]] <D Mary>] [to leave]]
		Checking LF-interface conditions.
				to has unacceptable specifier [[[D John]:163 [T/fin [__:163 promise]]] <D Mary>].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
promise:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  promise: [V, TT/fin];  D: [D];  Mary: [N, D];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "promise-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "promises".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 70
['John', 'promises', 'to_inf', 'leave']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'promise-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin]

	10. Consume "promise"

		[[D John] T/fin] + promise
			Filtering out impossible merge sites...
			Sink "promise" into T/fin because they are inside the same phonological word.
			=[[D John] T/fin{V}]

	11. Consume "to"

		[[D John] T/fin{V}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				Prioritize [promise to] due to complement selection.
				[[D John] T/fin{V}] + to = -98]
				T/fin{V} + to = 104]
		Ranking completed:
			1. [T/fin{V}; to]
			2. [[[D John] T/fin{V}]; to]
			Exploring solution number (1) =[T/fin{V} to]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
				An EPP-head "T/fin{V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{V} to]]

	12. Consume "leave"

		[[D John] [T/fin{V} to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [promise [[D John] to]]]]] leave] due to bad left branch.
				Reject [[T/fin [promise to]] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{V} [to leave]]]

	>>>	Trying candidate spellout structure [[D John] [T/fin{V} [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target promise in T/fin
					=[[D John] [T/fin [promise [to leave]]]]
				=[[D John] [T/fin [promise [to leave]]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
					to has neutralized PHI-feature, will be resolved into -ARG due to promise
				=[[D John] [T/fin [promise [to leave]]]]
				3. Extraposition:
				=[[D John] [T/fin [promise [to leave]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [promise [to leave]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:169 [T/fin [__:169 [promise [to leave]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:169 [T/fin [__:169 [promise [to leave]]]]]
				7. Last resort extraposition:
			= [[D John] [T/fin [[D John] [promise [to leave]]]]]
		Checking LF-interface conditions.
			Transferring [[D John]:169 [T/fin [__:169 [promise [to leave]]]]] into the conceptual-intentional system...
				promise with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'leave([D John])', 'promise([D John])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [promise [to leave]]]]]
		Grammar: [[D John]:1 [T/fin [__:1 [promise [to leave]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [INF V]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
promise:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  promise: [V, TT/fin];  to: [INF, V, TT/fin];  leave: [V, INF, V, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin{V}] to]
				1. Head movement reconstruction:
				=[[D John] [T/fin promise]]
				2. Feature processing:
				=[[D John] [T/fin promise]]
				3. Extraposition:
				=[[D John] [T/fin promise]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin promise]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:170 [T/fin [__:170 promise]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:170 [T/fin [__:170 promise]]]
				7. Last resort extraposition:
			=[[[D John]:170 [T/fin [__:170 promise]]] to]

	13. Consume "leave"

		[[[D John] [T/fin [[D John] promise]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] promise]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:170 [T/fin [__:170 promise]]] [to leave]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] promise]]] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:170 [T/fin [__:170 promise]]] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:170 [T/fin [__:170 promise]]] [to leave]]
				3. Extraposition:
				=[[[D John]:170 [T/fin [__:170 promise]]] [to leave]]
				4. Floater movement reconstruction:
				=[[[D John]:170 [T/fin [__:170 promise]]] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[D John]:170 [T/fin [__:170 promise]]] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[D John]:170 [T/fin [__:170 promise]]] [to leave]]
				7. Last resort extraposition:
				to has unacceptable specifier [[D John]:170 [T/fin [__:170 promise]]].
					Last resort extraposition will be tried on [[[D John]:170 [T/fin [__:170 promise]]] [to leave]].
			= [[[D John] [T/fin [[D John] promise]]] [to leave]]
		Checking LF-interface conditions.
				to has unacceptable specifier [[D John]:170 [T/fin [__:170 promise]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
promise:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  promise: [V, TT/fin];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "promise-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "promises".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 71
['John', 'persuades', 'Mary', 'to_inf', 'leave']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'v*$', 'persuade-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin]

	10. Consume "v*"

		[[D John] T/fin] + v*
			Filtering out impossible merge sites...
			Sink "v*" into T/fin because they are inside the same phonological word.
			=[[D John] T/fin{v}]

	11. Consume "persuade"

		[[D John] T/fin{v}] + persuade
			Filtering out impossible merge sites...
			Sink "persuade" into v* because they are inside the same phonological word.
			=[[D John] T/fin{v,V}]

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

	12. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	13. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	14. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	15. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	16. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	17. Consume "D"

		[[D John] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				"persuade" lacks complement.
				Avoid [[D John] [T/fin [[D John] [v* persuade]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				[[D John] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 104]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D John] T/fin{v,V}]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
				An EPP-head "T/fin{v,V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} D]]

	18. Consume "Mary"

		[[D John] [T/fin{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[D John] [T/fin{v,V} D{N}]]

	19. Consume "to"

		[[D John] [T/fin{v,V} D{N}]] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				Avoid TT/finP as SPEC, to.
				An EPP-head "T/fin" lacks specifier.
				Avoid [T/fin [v* [persuade [D Mary]]]] as left branch because it constitutes illicit structure.
				Avoid D{N} because it could break words.
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
				Prioritize D{N} because all solutions were negative.
				[[D John] [T/fin{v,V} D{N}]] + to = -98]
				[T/fin{v,V} D{N}] + to = -194]
				D{N} + to = 106]
		Ranking completed:
			1. [D{N}; to]
			2. [[[D John] [T/fin{v,V} D{N}]]; to]
			3. [[T/fin{v,V} D{N}]; to]
			Exploring solution number (1) =[D{N} to]
				1. Head movement reconstruction:
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
			=[[D John] [T/fin{v,V} [[D Mary] to]]]

	20. Consume "leave"

		[[D John] [T/fin{v,V} [[D Mary] to]]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [v* [persuade [[D Mary] to]]]]]] leave] due to bad left branch.
				Reject [[T/fin [v* [persuade [[D Mary] to]]]] leave] due to bad left branch.
				Reject [[[D Mary] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{v,V} [[D Mary] [to leave]]]]

	>>>	Trying candidate spellout structure [[D John] [T/fin{v,V} [[D Mary] [to leave]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[[D John] [T/fin [v*{V} [[D Mary] [to leave]]]]]
					Target persuade in v*
					=[[D John] [T/fin [v* [persuade [[D Mary] [to leave]]]]]]
				=[[D John] [T/fin [v* [persuade [[D Mary] [to leave]]]]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
					to has neutralized PHI-feature, will be resolved into +ARG due to persuade
				=[[D John] [T/fin [v* [persuade [[D Mary] [to leave]]]]]]
				3. Extraposition:
				=[[D John] [T/fin [v* [persuade [[D Mary] [to leave]]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v* [persuade [[D Mary] [to leave]]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
					[D Mary] will undergo A-reconstruction.
				=[[D John]:176 [T/fin [__:176 [v* [persuade [[D Mary]:177 [to [__:177 leave]]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:176 [T/fin [__:176 [v* [persuade [[D Mary]:177 [to [__:177 leave]]]]]]]]
				7. Last resort extraposition:
			= [[D John] [T/fin [[D John] [v* [persuade [[D Mary] [to [[D Mary] leave]]]]]]]]
		Checking LF-interface conditions.
			Transferring [[D John]:176 [T/fin [__:176 [v* [persuade [[D Mary]:177 [to [__:177 leave]]]]]]]] into the conceptual-intentional system...
				v* with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				persuade with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'leave([D Mary])', 'persuade(clausal argument)', 'v*([D John])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [v* [persuade [[D Mary] [to [[D Mary] leave]]]]]]]]
		Grammar: [[D John]:1 [T/fin [__:1 [v* [persuade [[D Mary]:2 [to [__:2 leave]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [DP:2 [INF [__:2 V]]]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:EN', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
persuade:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'SPEC:*', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  persuade: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Mary: [N, D, V, v, TT/fin];  to: [INF, V, v, TT/fin];  __: [D, INF, V, v, TT/fin];  __: [N, D, INF, V, v, TT/fin];  leave: [V, INF, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] [T/fin{v,V} D{N}]] to]
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[[D John] [T/fin [v*{V} D{N}]]]
					Target persuade in v*
					=[[D John] [T/fin [v* [persuade D{N}]]]]
				=[[D John] [T/fin [v* [persuade [D Mary]]]]]
				2. Feature processing:
				=[[D John] [T/fin [v* [persuade [D Mary]]]]]
				3. Extraposition:
				=[[D John] [T/fin [v* [persuade [D Mary]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v* [persuade [D Mary]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:178 [T/fin [__:178 [v* [persuade [D Mary]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:178 [T/fin [__:178 [v* [persuade [D Mary]]]]]]
				7. Last resort extraposition:
			=[[[D John]:178 [T/fin [__:178 [v* [persuade [D Mary]]]]]] to]

	21. Consume "leave"

		[[[D John] [T/fin [[D John] [v* [persuade [D Mary]]]]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [v* [persuade [D Mary]]]]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:178 [T/fin [__:178 [v* [persuade [D Mary]]]]]] [to leave]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [v* [persuade [D Mary]]]]]] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:178 [T/fin [__:178 [v* [persuade [D Mary]]]]]] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:178 [T/fin [__:178 [v* [persuade [D Mary]]]]]] [to leave]]
				3. Extraposition:
				=[[[D John]:178 [T/fin [__:178 [v* [persuade [D Mary]]]]]] [to leave]]
				4. Floater movement reconstruction:
				=[[[D John]:178 [T/fin [__:178 [v* [persuade [D Mary]]]]]] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[D John]:178 [T/fin [__:178 [v* [persuade [D Mary]]]]]] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[D John]:178 [T/fin [__:178 [v* [persuade [D Mary]]]]]] [to leave]]
				7. Last resort extraposition:
				to has unacceptable specifier [[D John]:178 [T/fin [__:178 [v* [persuade [D Mary]]]]]].
					Last resort extraposition will be tried on [[[D John]:178 [T/fin [__:178 [v* [persuade [D Mary]]]]]] [to leave]].
			= [[[D John] [T/fin [[D John] [v* [persuade [D Mary]]]]]] [to leave]]
		Checking LF-interface conditions.
				to has unacceptable specifier [[D John]:178 [T/fin [__:178 [v* [persuade [D Mary]]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:EN', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
persuade:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  persuade: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Mary: [N, D, V, v, TT/fin];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[T/fin{v,V} D{N}] to]
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[T/fin [v*{V} D{N}]]
					Target persuade in v*
					=[T/fin [v* [persuade D{N}]]]
				=[T/fin [v* [persuade [D Mary]]]]
				2. Feature processing:
				=[T/fin [v* [persuade [D Mary]]]]
				3. Extraposition:
				=[T/fin [v* [persuade [D Mary]]]]
				4. Floater movement reconstruction:
				=[T/fin [v* [persuade [D Mary]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [v* [persuade [D Mary]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[T/fin [v* [persuade [D Mary]]]]
				7. Last resort extraposition:
				An EPP-head "T/fin" lacks specifier.
					Last resort extraposition will be tried on [T/fin [v* [persuade [D Mary]]]].
					No suitable node for extraposition found. No action was taken.
			=[[D John] [[T/fin [v* [persuade [D Mary]]]] to]]

	22. Consume "leave"

		[[D John] [[T/fin [v* [persuade [D Mary]]]] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [[[T/fin [v* [persuade [D Mary]]]] [D John]] to]] leave] due to bad left branch.
				Reject [[[T/fin [v* [persuade [D Mary]]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [[T/fin [v* [persuade [D Mary]]]] [to leave]]]

	>>>	Trying candidate spellout structure [[D John] [[T/fin [v* [persuade [D Mary]]]] [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[D John] [[T/fin [v* [persuade [D Mary]]]] [to leave]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[D John] [[T/fin [v* [persuade [D Mary]]]] [to leave]]]
				3. Extraposition:
				=[[D John] [[T/fin [v* [persuade [D Mary]]]] [to leave]]]
				4. Floater movement reconstruction:
				=[[D John] [[T/fin [v* [persuade [D Mary]]]] [to leave]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
					New head was spawned due to multiple specifiers at to but its category is unknown!
				=[[D John]:180 [? [[T/fin [v* [persuade [D Mary]]]] [to [__:180 leave]]]]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG by phi-Agree from __:180.
						to acquired PHI:PER:3 by phi-Agree from __:180.
				=[[D John]:180 [? [[T/fin [v* [persuade [D Mary]]]] [to [__:180 leave]]]]]
				7. Last resort extraposition:
					An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier.
				to has unacceptable specifier [T/fin [v* [persuade [D Mary]]]].
					Last resort extraposition will be tried on [[D John]:180 [? [[T/fin [v* [persuade [D Mary]]]] [to [__:180 leave]]]]].
			= [[D John] [? [[T/fin [v* [persuade [D Mary]]]] [to [[D John] leave]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier.
				to has unacceptable specifier [T/fin [v* [persuade [D Mary]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:EN', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
persuade:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI_CHECKED', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  ?: [?];  T/fin: [TT/fin, ?];  v*: [v, TT/fin, ?];  persuade: [V, v, TT/fin, ?];  D: [D, V, v, TT/fin, ?];  Mary: [N, D, V, v, TT/fin, ?];  to: [INF, ?];  __: [D, INF, ?];  __: [N, D, INF, ?];  leave: [V, INF, ?];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[[D John] [T/fin [v* persuade]]]
				2. Feature processing:
				=[[D John] [T/fin [v* persuade]]]
				3. Extraposition:
				=[[D John] [T/fin [v* persuade]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [v* persuade]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:181 [T/fin [__:181 [v* persuade]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:181 [T/fin [__:181 [v* persuade]]]]
				7. Last resort extraposition:
				"persuade" lacks complement.
					Last resort extraposition will be tried on [[D John]:181 [T/fin [__:181 [v* persuade]]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:181 [T/fin [__:181 [v* persuade]]]] D]

	23. Consume "Mary"

		[[[D John] [T/fin [[D John] [v* persuade]]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[[D John]:181 [T/fin [__:181 [v* persuade]]]] D{N}]

	24. Consume "to"

		[[[D John] [T/fin [[D John] [v* persuade]]]] D{N}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				"persuade" lacks complement.
				Avoid [[[D John] [T/fin [[D John] [v* persuade]]]] <D Mary>] as left branch because it constitutes illicit structure.
				[[[D John]:181 [T/fin [__:181 [v* persuade]]]] D{N}] + to = -98]
				D{N} + to = 2]
		Ranking completed:
			1. [D{N}; to]
			2. [[[[D John]:181 [T/fin [__:181 [v* persuade]]]] D{N}]; to]
			Exploring solution number (1) =[D{N} to]
				1. Head movement reconstruction:
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
			=[[[D John]:181 [T/fin [__:181 [v* persuade]]]] [[D Mary] to]]

	25. Consume "leave"

		[[[D John] [T/fin [[D John] [v* persuade]]]] [[D Mary] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [v* persuade]]]] [[D Mary] to]] leave] due to bad left branch.
				Reject [[[D Mary] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:181 [T/fin [__:181 [v* persuade]]]] [[D Mary] [to leave]]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [v* persuade]]]] [[D Mary] [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:181 [T/fin [__:181 [v* persuade]]]] [[D Mary] [to leave]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:181 [T/fin [__:181 [v* persuade]]]] [[D Mary] [to leave]]]
				3. Extraposition:
				=[[[D John]:181 [T/fin [__:181 [v* persuade]]]] [[D Mary] [to leave]]]
				4. Floater movement reconstruction:
				=[[[D John]:181 [T/fin [__:181 [v* persuade]]]] [[D Mary] [to leave]]]
				5. Phrasal movement reconstruction:
					[D Mary] will undergo A-reconstruction.
					New head was spawned due to multiple specifiers at to but its category is unknown!
				=[[[D John]:181 [T/fin [__:181 [v* persuade]]]] [? [[D Mary]:182 [to [__:182 leave]]]]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG from the edge of to.
						to acquired PHI:PER:3 from the edge of to.
				=[[[D John]:181 [T/fin [__:181 [v* persuade]]]] [? [[D Mary]:182 [to [__:182 leave]]]]]
				7. Last resort extraposition:
				"persuade" lacks complement.
					An uninterpretable grammatical head without lexical category was detected.
					Last resort extraposition will be tried on [[[D John]:181 [T/fin [__:181 [v* persuade]]]] [? [[D Mary]:182 [to [__:182 leave]]]]].
			= [[[D John] [T/fin [[D John] [v* persuade]]]] [? [[D Mary] [to [[D Mary] leave]]]]]
		Checking LF-interface conditions.
				"persuade" lacks complement.
					An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:EN', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
persuade:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  persuade: [V, v, TT/fin];  ?: [?];  D: [D, ?];  Mary: [N, D, ?];  to: [INF, ?];  __: [D, INF, ?];  __: [N, D, INF, ?];  leave: [V, INF, ?];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[[D John]:181 [T/fin [__:181 [v* persuade]]]] D{N}] to]
				1. Head movement reconstruction:
				=[[[D John]:181 [T/fin [__:181 [v* persuade]]]] [D Mary]]
				2. Feature processing:
				=[[[D John]:181 [T/fin [__:181 [v* persuade]]]] [D Mary]]
				3. Extraposition:
				=[[[D John]:181 [T/fin [__:181 [v* persuade]]]] [D Mary]]
				4. Floater movement reconstruction:
				=[[[D John]:181 [T/fin [__:181 [v* persuade]]]] [D Mary]]
				5. Phrasal movement reconstruction:
				=[[[D John]:181 [T/fin [__:181 [v* persuade]]]] [D Mary]]
				6. Agreement reconstruction:
				=[[[D John]:181 [T/fin [__:181 [v* persuade]]]] [D Mary]]
				7. Last resort extraposition:
				"persuade" lacks complement.
				D has unacceptable specifier [[D John]:181 [T/fin [__:181 [v* persuade]]]].
					Last resort extraposition will be tried on [[[D John]:181 [T/fin [__:181 [v* persuade]]]] [D Mary]].
					<D Mary> was made an adjunct.
					<D Mary> is transferred to LF as a phase.
				"persuade" lacks complement.
					Something is still wrong. The structure is still uninterpretable.
			=[[[[D John]:181 [T/fin [__:181 [v* persuade]]]] <D Mary>] to]

	26. Consume "leave"

		[[[[D John] [T/fin [[D John] [v* persuade]]]] <D Mary>] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[[D John] [T/fin [[D John] [v* persuade]]]] <D Mary>] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[[D John]:181 [T/fin [__:181 [v* persuade]]]] <D Mary>] [to leave]]

	>>>	Trying candidate spellout structure [[[[D John] [T/fin [[D John] [v* persuade]]]] <D Mary>] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[[D John]:181 [T/fin [__:181 [v* persuade]]]] <D Mary>] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[[D John]:181 [T/fin [__:181 [v* persuade]]]] <D Mary>] [to leave]]
				3. Extraposition:
				=[[[[D John]:181 [T/fin [__:181 [v* persuade]]]] <D Mary>] [to leave]]
				4. Floater movement reconstruction:
				=[[[[D John]:181 [T/fin [__:181 [v* persuade]]]] <D Mary>] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[[D John]:181 [T/fin [__:181 [v* persuade]]]] <D Mary>] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[[D John]:181 [T/fin [__:181 [v* persuade]]]] <D Mary>] [to leave]]
				7. Last resort extraposition:
				"persuade" lacks complement.
				to has unacceptable specifier [[[D John]:181 [T/fin [__:181 [v* persuade]]]] <D Mary>].
					Last resort extraposition will be tried on [[[[D John]:181 [T/fin [__:181 [v* persuade]]]] <D Mary>] [to leave]].
			= [[[[D John] [T/fin [[D John] [v* persuade]]]] <D Mary>] [to leave]]
		Checking LF-interface conditions.
				"persuade" lacks complement.
				to has unacceptable specifier [[[D John]:181 [T/fin [__:181 [v* persuade]]]] <D Mary>].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:EN', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
persuade:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  persuade: [V, v, TT/fin];  D: [D];  Mary: [N, D];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "persuade-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v*$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "persuades".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 72
['John', 'promises', 'Mary', 'to_inf', 'leave']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'promise-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	8. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	9. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin]

	10. Consume "promise"

		[[D John] T/fin] + promise
			Filtering out impossible merge sites...
			Sink "promise" into T/fin because they are inside the same phonological word.
			=[[D John] T/fin{V}]

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

	11. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	12. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	13. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	14. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	15. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	16. Consume "D"

		[[D John] T/fin{V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				Prioritize [T/fin{V} D] due to complement selection.
				Prioritize [promise D] due to complement selection.
				[[D John] T/fin{V}] + D = -98]
				T/fin{V} + D = 206]
		Ranking completed:
			1. [T/fin{V}; D]
			2. [[[D John] T/fin{V}]; D]
			Exploring solution number (1) =[T/fin{V} D]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
				An EPP-head "T/fin{V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{V} D]]

	17. Consume "Mary"

		[[D John] [T/fin{V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[D John] [T/fin{V} D{N}]]

	18. Consume "to"

		[[D John] [T/fin{V} D{N}]] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, to.
				Avoid TT/finP as SPEC, to.
				An EPP-head "T/fin" lacks specifier.
				Avoid [T/fin [promise [D Mary]]] as left branch because it constitutes illicit structure.
				Avoid D{N} because it could break words.
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
				Prioritize D{N} because all solutions were negative.
				[[D John] [T/fin{V} D{N}]] + to = -98]
				[T/fin{V} D{N}] + to = -194]
				D{N} + to = 106]
		Ranking completed:
			1. [D{N}; to]
			2. [[[D John] [T/fin{V} D{N}]]; to]
			3. [[T/fin{V} D{N}]; to]
			Exploring solution number (1) =[D{N} to]
				1. Head movement reconstruction:
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
			=[[D John] [T/fin{V} [[D Mary] to]]]

	19. Consume "leave"

		[[D John] [T/fin{V} [[D Mary] to]]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [T/fin [[D John] [promise [[D Mary] to]]]]] leave] due to bad left branch.
				Reject [[T/fin [promise [[D Mary] to]]] leave] due to bad left branch.
				Reject [[[D Mary] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin{V} [[D Mary] [to leave]]]]

	>>>	Trying candidate spellout structure [[D John] [T/fin{V} [[D Mary] [to leave]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target promise in T/fin
					=[[D John] [T/fin [promise [[D Mary] [to leave]]]]]
				=[[D John] [T/fin [promise [[D Mary] [to leave]]]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
					to has neutralized PHI-feature, will be resolved into -ARG due to promise
				=[[D John] [T/fin [promise [[D Mary] [to leave]]]]]
				3. Extraposition:
				=[[D John] [T/fin [promise [[D Mary] [to leave]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [promise [[D Mary] [to leave]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:188 [T/fin [__:188 [promise [[D Mary] [to leave]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:188 [T/fin [__:188 [promise [[D Mary] [to leave]]]]]]
				7. Last resort extraposition:
				[D Mary] has no thematic role at the SPEC of to
				to (to) has a specifier [D Mary](set()) but is marked for -EPP behavior.
					Last resort extraposition will be tried on [[D John]:188 [T/fin [__:188 [promise [[D Mary] [to leave]]]]]].
					<to leave> was made an adjunct.
					<to leave> is transferred to LF as a phase.
			= [[D John] [T/fin [[D John] [promise [[D Mary] <to leave>]]]]]
		Checking LF-interface conditions.
			Transferring [[D John]:188 [T/fin [__:188 [promise [[D Mary] <to leave>]]]]] into the conceptual-intentional system...
				promise with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D Mary] <to leave>]    (alternatives: 2. [D John] 3. T/fin )
				leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'leave([D John])', 'promise([[D Mary] <to leave>])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D John] [T/fin [[D John] [promise [[D Mary] <to leave>]]]]]
		Grammar: [[D John]:1 [T/fin [__:1 [promise [[D Mary] <to leave>]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [[D N] INFP]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
promise:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'CAT:-ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  promise: [V, TT/fin];  D: [D, V, TT/fin];  Mary: [N, D, V, TT/fin];  to: [INF, V, TT/fin];  leave: [V, INF, V, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] [T/fin{V} D{N}]] to]
				1. Head movement reconstruction:
					Target promise in T/fin
					=[[D John] [T/fin [promise D{N}]]]
				=[[D John] [T/fin [promise [D Mary]]]]
				2. Feature processing:
				=[[D John] [T/fin [promise [D Mary]]]]
				3. Extraposition:
				=[[D John] [T/fin [promise [D Mary]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin [promise [D Mary]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:189 [T/fin [__:189 [promise [D Mary]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:189 [T/fin [__:189 [promise [D Mary]]]]]
				7. Last resort extraposition:
			=[[[D John]:189 [T/fin [__:189 [promise [D Mary]]]]] to]

	20. Consume "leave"

		[[[D John] [T/fin [[D John] [promise [D Mary]]]]] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] [promise [D Mary]]]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:189 [T/fin [__:189 [promise [D Mary]]]]] [to leave]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] [promise [D Mary]]]]] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:189 [T/fin [__:189 [promise [D Mary]]]]] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:189 [T/fin [__:189 [promise [D Mary]]]]] [to leave]]
				3. Extraposition:
				=[[[D John]:189 [T/fin [__:189 [promise [D Mary]]]]] [to leave]]
				4. Floater movement reconstruction:
				=[[[D John]:189 [T/fin [__:189 [promise [D Mary]]]]] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[D John]:189 [T/fin [__:189 [promise [D Mary]]]]] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[D John]:189 [T/fin [__:189 [promise [D Mary]]]]] [to leave]]
				7. Last resort extraposition:
				to has unacceptable specifier [[D John]:189 [T/fin [__:189 [promise [D Mary]]]]].
					Last resort extraposition will be tried on [[[D John]:189 [T/fin [__:189 [promise [D Mary]]]]] [to leave]].
			= [[[D John] [T/fin [[D John] [promise [D Mary]]]]] [to leave]]
		Checking LF-interface conditions.
				to has unacceptable specifier [[D John]:189 [T/fin [__:189 [promise [D Mary]]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
promise:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  promise: [V, TT/fin];  D: [D, V, TT/fin];  Mary: [N, D, V, TT/fin];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[T/fin{V} D{N}] to]
				1. Head movement reconstruction:
					Target promise in T/fin
					=[T/fin [promise D{N}]]
				=[T/fin [promise [D Mary]]]
				2. Feature processing:
				=[T/fin [promise [D Mary]]]
				3. Extraposition:
				=[T/fin [promise [D Mary]]]
				4. Floater movement reconstruction:
				=[T/fin [promise [D Mary]]]
				5. Phrasal movement reconstruction:
				=[T/fin [promise [D Mary]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:GEN:F by phi-Agree from [D Mary].
						T/fin acquired PHI:NUM:SG by phi-Agree from [D Mary].
						T/fin acquired PHI:PER:3 by phi-Agree from [D Mary].
				=[T/fin [promise [D Mary]]]
				7. Last resort extraposition:
				An EPP-head "T/fin" lacks specifier.
					Last resort extraposition will be tried on [T/fin [promise [D Mary]]].
					No suitable node for extraposition found. No action was taken.
			=[[D John] [[T/fin [promise [D Mary]]] to]]

	21. Consume "leave"

		[[D John] [[T/fin [promise [D Mary]]] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[D John] [[[T/fin [promise [D Mary]]] [D John]] to]] leave] due to bad left branch.
				Reject [[[T/fin [promise [D Mary]]] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [[T/fin [promise [D Mary]]] [to leave]]]

	>>>	Trying candidate spellout structure [[D John] [[T/fin [promise [D Mary]]] [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[D John] [[T/fin [promise [D Mary]]] [to leave]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[D John] [[T/fin [promise [D Mary]]] [to leave]]]
				3. Extraposition:
				=[[D John] [[T/fin [promise [D Mary]]] [to leave]]]
				4. Floater movement reconstruction:
				=[[D John] [[T/fin [promise [D Mary]]] [to leave]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
					New head was spawned due to multiple specifiers at to but its category is unknown!
				=[[D John]:191 [? [[T/fin [promise [D Mary]]] [to [__:191 leave]]]]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG by phi-Agree from __:191.
						to acquired PHI:PER:3 by phi-Agree from __:191.
				=[[D John]:191 [? [[T/fin [promise [D Mary]]] [to [__:191 leave]]]]]
				7. Last resort extraposition:
					An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier.
				to has unacceptable specifier [T/fin [promise [D Mary]]].
					Last resort extraposition will be tried on [[D John]:191 [? [[T/fin [promise [D Mary]]] [to [__:191 leave]]]]].
			= [[D John] [? [[T/fin [promise [D Mary]]] [to [[D John] leave]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
				An EPP-head "T/fin" lacks specifier.
				to has unacceptable specifier [T/fin [promise [D Mary]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
:['LANG:EN']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI_CHECKED', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
promise:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI_CHECKED', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  ?: [?];  T/fin: [TT/fin, ?];  promise: [V, TT/fin, ?];  D: [D, V, TT/fin, ?];  Mary: [N, D, V, TT/fin, ?];  to: [INF, ?];  __: [D, INF, ?];  __: [N, D, INF, ?];  leave: [V, INF, ?];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin{V}] D]
				1. Head movement reconstruction:
				=[[D John] [T/fin promise]]
				2. Feature processing:
				=[[D John] [T/fin promise]]
				3. Extraposition:
				=[[D John] [T/fin promise]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin promise]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:192 [T/fin [__:192 promise]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:GEN:M from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[[D John]:192 [T/fin [__:192 promise]]]
				7. Last resort extraposition:
			=[[[D John]:192 [T/fin [__:192 promise]]] D]

	22. Consume "Mary"

		[[[D John] [T/fin [[D John] promise]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[[D John]:192 [T/fin [__:192 promise]]] D{N}]

	23. Consume "to"

		[[[D John] [T/fin [[D John] promise]]] D{N}] + to
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid [[[D John] [T/fin [[D John] promise]]] <D Mary>] as left branch because it constitutes illicit structure.
				[[[D John]:192 [T/fin [__:192 promise]]] D{N}] + to = -98]
				D{N} + to = 2]
		Ranking completed:
			1. [D{N}; to]
			2. [[[[D John]:192 [T/fin [__:192 promise]]] D{N}]; to]
			Exploring solution number (1) =[D{N} to]
				1. Head movement reconstruction:
					D was opened into [D Mary].
				=[D Mary]
				2. Feature processing:
				=[D Mary]
				3. Extraposition:
				=[D Mary]
				4. Floater movement reconstruction:
				=[D Mary]
				5. Phrasal movement reconstruction:
				=[D Mary]
				6. Agreement reconstruction:
				=[D Mary]
				7. Last resort extraposition:
			=[[[D John]:192 [T/fin [__:192 promise]]] [[D Mary] to]]

	24. Consume "leave"

		[[[D John] [T/fin [[D John] promise]]] [[D Mary] to]] + leave
			Filtering out impossible merge sites...
				Reject [[[[D John] [T/fin [[D John] promise]]] [[D Mary] to]] leave] due to bad left branch.
				Reject [[[D Mary] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:192 [T/fin [__:192 promise]]] [[D Mary] [to leave]]]

	>>>	Trying candidate spellout structure [[[D John] [T/fin [[D John] promise]]] [[D Mary] [to leave]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:192 [T/fin [__:192 promise]]] [[D Mary] [to leave]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[D John]:192 [T/fin [__:192 promise]]] [[D Mary] [to leave]]]
				3. Extraposition:
				=[[[D John]:192 [T/fin [__:192 promise]]] [[D Mary] [to leave]]]
				4. Floater movement reconstruction:
				=[[[D John]:192 [T/fin [__:192 promise]]] [[D Mary] [to leave]]]
				5. Phrasal movement reconstruction:
					[D Mary] will undergo A-reconstruction.
					New head was spawned due to multiple specifiers at to but its category is unknown!
				=[[[D John]:192 [T/fin [__:192 promise]]] [? [[D Mary]:193 [to [__:193 leave]]]]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG from the edge of to.
						to acquired PHI:PER:3 from the edge of to.
				=[[[D John]:192 [T/fin [__:192 promise]]] [? [[D Mary]:193 [to [__:193 leave]]]]]
				7. Last resort extraposition:
					An uninterpretable grammatical head without lexical category was detected.
					Last resort extraposition will be tried on [[[D John]:192 [T/fin [__:192 promise]]] [? [[D Mary]:193 [to [__:193 leave]]]]].
			= [[[D John] [T/fin [[D John] promise]]] [? [[D Mary] [to [[D Mary] leave]]]]]
		Checking LF-interface conditions.
					An uninterpretable grammatical head without lexical category was detected.
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
promise:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
:['LANG:EN']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A', 'null']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  promise: [V, TT/fin];  ?: [?];  D: [D, ?];  Mary: [N, D, ?];  to: [INF, ?];  __: [D, INF, ?];  __: [N, D, INF, ?];  leave: [V, INF, ?];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[[D John]:192 [T/fin [__:192 promise]]] D{N}] to]
				1. Head movement reconstruction:
				=[[[D John]:192 [T/fin [__:192 promise]]] [D Mary]]
				2. Feature processing:
				=[[[D John]:192 [T/fin [__:192 promise]]] [D Mary]]
				3. Extraposition:
				=[[[D John]:192 [T/fin [__:192 promise]]] [D Mary]]
				4. Floater movement reconstruction:
				=[[[D John]:192 [T/fin [__:192 promise]]] [D Mary]]
				5. Phrasal movement reconstruction:
				=[[[D John]:192 [T/fin [__:192 promise]]] [D Mary]]
				6. Agreement reconstruction:
				=[[[D John]:192 [T/fin [__:192 promise]]] [D Mary]]
				7. Last resort extraposition:
				D has unacceptable specifier [[D John]:192 [T/fin [__:192 promise]]].
					Last resort extraposition will be tried on [[[D John]:192 [T/fin [__:192 promise]]] [D Mary]].
					<D Mary> was made an adjunct.
					<D Mary> is transferred to LF as a phase.
					Something is still wrong. The structure is still uninterpretable.
			=[[[[D John]:192 [T/fin [__:192 promise]]] <D Mary>] to]

	25. Consume "leave"

		[[[[D John] [T/fin [[D John] promise]]] <D Mary>] to] + leave
			Filtering out impossible merge sites...
				Reject [[[[[D John] [T/fin [[D John] promise]]] <D Mary>] to] leave] due to bad left branch.
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[[[[D John]:192 [T/fin [__:192 promise]]] <D Mary>] [to leave]]

	>>>	Trying candidate spellout structure [[[[D John] [T/fin [[D John] promise]]] <D Mary>] [to leave]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[[D John]:192 [T/fin [__:192 promise]]] <D Mary>] [to leave]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[[[[D John]:192 [T/fin [__:192 promise]]] <D Mary>] [to leave]]
				3. Extraposition:
				=[[[[D John]:192 [T/fin [__:192 promise]]] <D Mary>] [to leave]]
				4. Floater movement reconstruction:
				=[[[[D John]:192 [T/fin [__:192 promise]]] <D Mary>] [to leave]]
				5. Phrasal movement reconstruction:
				=[[[[D John]:192 [T/fin [__:192 promise]]] <D Mary>] [to leave]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[[[D John]:192 [T/fin [__:192 promise]]] <D Mary>] [to leave]]
				7. Last resort extraposition:
				to has unacceptable specifier [[[D John]:192 [T/fin [__:192 promise]]] <D Mary>].
					Last resort extraposition will be tried on [[[[D John]:192 [T/fin [__:192 promise]]] <D Mary>] [to leave]].
			= [[[[D John] [T/fin [[D John] promise]]] <D Mary>] [to leave]]
		Checking LF-interface conditions.
				to has unacceptable specifier [[[D John]:192 [T/fin [__:192 promise]]] <D Mary>].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
promise:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'COMP:TO/inf', 'LANG:EN', 'LF:promise', 'PF:promise', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  John: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  promise: [V, TT/fin];  D: [D];  Mary: [N, D];  to: [INF];  leave: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "promise-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "promises".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 73
['Pekka', 'etsii', 'Merjaa', 'juosten']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	5. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	8. Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v$', 'etsi-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[D Pekka] T/fin]

	11. Consume "v"

		[[D Pekka] T/fin] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D Pekka] T/fin{v}]

	12. Consume "etsi"

		[[D Pekka] T/fin{v}] + etsi
			Filtering out impossible merge sites...
			Sink "etsi" into v because they are inside the same phonological word.
			=[[D Pekka] T/fin{v,V}]

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'par$', 'D$', 'Merja-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	13. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	14. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	15. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	16. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	17. Consume "par$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,-VAL'] into working memory.

	18. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'LANG:FI', 'PHI:NUM:SG'} to D

	19. Consume "D"

		[[D Pekka] T/fin{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				etsi (etsi) is missing complement D
				Avoid [<D Pekka> [T/fin [<D Pekka> [v etsi]]]] as left branch because it constitutes illicit structure.
				Avoid [T/fin{v,V} D] due to local agreement failure.
				Prioritize [T/fin{v,V} D] due to complement selection.
				Prioritize [etsi D] due to complement selection.
				[[D Pekka] T/fin{v,V}] + D = -197]
				T/fin{v,V} + D = 158]
		Ranking completed:
			1. [T/fin{v,V}; D]
			2. [[[D Pekka] T/fin{v,V}]; D]
			Exploring solution number (1) =[T/fin{v,V} D]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{v,V} D]]

	20. Consume "Merja-"

		[[D Pekka] [T/fin{v,V} D]] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[D Pekka] [T/fin{v,V} D{N}]]

		Next word contains multiple morphemes ['Cen$', 'juokse-']

	21. Consume "en"

		[[D Pekka] [T/fin{v,V} D{N}]] + en
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, en.
				Avoid TT/finP as SPEC, en.
				Avoid D{N} due to tail-head failure.
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
				Prioritize D{N} because all solutions were negative.
				[[D Pekka] [T/fin{v,V} D{N}]] + en = -98]
				[T/fin{v,V} D{N}] + en = -96]
				D{N} + en = 106]
		Ranking completed:
			1. [D{N}; en]
			2. [[T/fin{v,V} D{N}]; en]
			3. [[[D Pekka] [T/fin{v,V} D{N}]]; en]
			Exploring solution number (1) =[D{N} en]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[D Pekka] [T/fin{v,V} [[D Merja-] en]]]

	22. Consume "juokse-"

		[[D Pekka] [T/fin{v,V} [[D Merja-] en]]] + juokse-
			Filtering out impossible merge sites...
			Sink "juokse-" into en because they are inside the same phonological word.
			=[[D Pekka] [T/fin{v,V} [[D Merja-] en{V}]]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{v,V} [[D Merja-] en{V}]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D Pekka] [T/fin [v{V} [[D Merja-] en{V}]]]]
					Target etsi in v
					=[[D Pekka] [T/fin [v [etsi [[D Merja-] en{V}]]]]]
				=[[D Pekka] [T/fin [v [etsi [[D Merja-] [en juokse-]]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [v [etsi [[D Merja-] [en juokse-]]]]]]
				3. Extraposition:
					etsi cannot select en
					Extraposition will be tried on [en juokse-].
					<en juokse-> was made an adjunct.
					<en juokse-> is transferred to LF as a phase.
				=[[D Pekka] [T/fin [v [etsi [[D Merja-] <en juokse->]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:190 [T/fin [<__>:190 [v [etsi [[D Merja-] <en juokse->]]]]]]
					en at the right failed to tail [CAT:T]
				=[<D Pekka>:190 [T/fin [<__>:190 [v [etsi [[D Merja-] <en juokse->]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:190 [T/fin [<__>:190 [v [etsi [[D Merja-] <en juokse->]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:190 [T/fin [<__>:190 [v [etsi [[D Merja-] <en juokse->]]]]]]
				7. Last resort extraposition:
			= [<D Pekka> [T/fin [<D Pekka> [v [etsi [[D Merja-] <en juokse->]]]]]]
		Checking LF-interface conditions.
			Transferring [<D Pekka>:190 [T/fin [<__>:190 [v [etsi [[D Merja-] <en juokse->]]]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				etsi with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [[D Merja-] <en juokse->]    (alternatives: 2. <D Pekka> 3. T/fin )
				juokse- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				Transfer to C-I successful.
			en<[ADV, V, v, TT/fin]> failed to tail features [CAT:T]
			Final tail-head check failed.
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
etsi:['!COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:search', 'PF:etsi', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
en:['-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:en', 'TAIL:CAT:T']
juokse-:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:run', 'PF:juokse-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  etsi: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Merja-: [N, D, V, v, TT/fin];  en: [ADV, V, v, TT/fin];  juokse-: [V, ADV, V, v, TT/fin];  
			Let's find another solution...
.
.
.
		I have now explored all solutions for "juokse-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[T/fin{v,V} D{N}] en]
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[T/fin [v{V} D{N}]]
					Target etsi in v
					=[T/fin [v [etsi D{N}]]]
				=[T/fin [v [etsi [D Merja-]]]]
				2. Feature processing:
				=[T/fin [v [etsi [D Merja-]]]]
				3. Extraposition:
				=[T/fin [v [etsi [D Merja-]]]]
				4. Floater movement reconstruction:
				=[T/fin [v [etsi [D Merja-]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [v [etsi [D Merja-]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[T/fin [v [etsi [D Merja-]]]]
				7. Last resort extraposition:
			=[[D Pekka] [[T/fin [v [etsi [D Merja-]]]] en]]

	23. Consume "juokse-"

		[[D Pekka] [[T/fin [v [etsi [D Merja-]]]] en]] + juokse-
			Filtering out impossible merge sites...
			Sink "juokse-" into en because they are inside the same phonological word.
			=[[D Pekka] [[T/fin [v [etsi [D Merja-]]]] en{V}]]

	>>>	Trying candidate spellout structure [[D Pekka] [[T/fin [v [etsi [D Merja-]]]] en{V}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[D Pekka] [[T/fin [v [etsi [D Merja-]]]] [en juokse-]]]
				2. Feature processing:
				=[[D Pekka] [[T/fin [v [etsi [D Merja-]]]] [en juokse-]]]
				3. Extraposition:
				=[[D Pekka] [[T/fin [v [etsi [D Merja-]]]] [en juokse-]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					en at the right failed to tail [CAT:T]
					<en juokse-> was made an adjunct.
					<en juokse-> is transferred to LF as a phase.
				=[[D Pekka] [[T/fin [v [etsi [D Merja-]]]] <en juokse->]]
				5. Phrasal movement reconstruction:
					[D Pekka] will undergo A-reconstruction.
				=[[D Pekka]:33 [[T/fin [__:33 [v [etsi [D Merja-]]]]] <en juokse->]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
				=[[D Pekka]:33 [[T/fin [__:33 [v [etsi [D Merja-]]]]] <en juokse->]]
				7. Last resort extraposition:
			= [[D Pekka] [[T/fin [[D Pekka] [v [etsi [D Merja-]]]]] <en juokse->]]
		Checking LF-interface conditions.
			Transferring [[D Pekka]:33 [[T/fin [__:33 [v [etsi [D Merja-]]]]] <en juokse->]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Pekka]    (alternatives: 2. T/fin )
				etsi with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. [D Pekka] 3. T/fin )
				juokse- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'etsi([D Merja-])', 'juokse-(generic)', 'v([D Pekka])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D Pekka] [[T/fin [[D Pekka] [v [etsi [D Merja-]]]]] <en juokse->]]
		Grammar: [[D Pekka]:1 [[T/fin [__:1 [v [etsi [D Merja-]]]]] <en juokse->]]
		Spellout TT/finP = [DP:1 [[TT/fin [__:1 [v [V [D N]]]]] ADVP]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
etsi:['!COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:search', 'PF:etsi', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
en:['-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:en', 'TAIL:CAT:T']
juokse-:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:run', 'PF:juokse-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  etsi: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Merja-: [N, D, V, v, TT/fin];  en: [ADV];  juokse-: [V, ADV];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "juokse-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[[D Pekka] [T/fin{v,V} D{N}]] en]
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[[D Pekka] [T/fin [v{V} D{N}]]]
					Target etsi in v
					=[[D Pekka] [T/fin [v [etsi D{N}]]]]
				=[[D Pekka] [T/fin [v [etsi [D Merja-]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [v [etsi [D Merja-]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [v [etsi [D Merja-]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:191 [T/fin [<__>:191 [v [etsi [D Merja-]]]]]]
				=[<D Pekka>:191 [T/fin [<__>:191 [v [etsi [D Merja-]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:191 [T/fin [<__>:191 [v [etsi [D Merja-]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:191 [T/fin [<__>:191 [v [etsi [D Merja-]]]]]]
				7. Last resort extraposition:
			=[[<D Pekka>:191 [T/fin [<__>:191 [v [etsi [D Merja-]]]]]] en]

	24. Consume "juokse-"

		[[<D Pekka> [T/fin [<D Pekka> [v [etsi [D Merja-]]]]]] en] + juokse-
			Filtering out impossible merge sites...
			Sink "juokse-" into en because they are inside the same phonological word.
			=[[<D Pekka>:191 [T/fin [<__>:191 [v [etsi [D Merja-]]]]]] en{V}]

	>>>	Trying candidate spellout structure [[<D Pekka> [T/fin [<D Pekka> [v [etsi [D Merja-]]]]]] en{V}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[<D Pekka>:191 [T/fin [<__>:191 [v [etsi [D Merja-]]]]]] [en juokse-]]
				2. Feature processing:
				=[[<D Pekka>:191 [T/fin [<__>:191 [v [etsi [D Merja-]]]]]] [en juokse-]]
				3. Extraposition:
				=[[<D Pekka>:191 [T/fin [<__>:191 [v [etsi [D Merja-]]]]]] [en juokse-]]
				4. Floater movement reconstruction:
					en at the right failed to tail [CAT:T]
					<en juokse-> was made an adjunct.
					<en juokse-> is transferred to LF as a phase.
				=[[<D Pekka>:191 [T/fin [<__>:191 [v [etsi [D Merja-]]]]]] <en juokse->]
				5. Phrasal movement reconstruction:
				=[[<D Pekka>:191 [T/fin [<__>:191 [v [etsi [D Merja-]]]]]] <en juokse->]
				6. Agreement reconstruction:
				=[[<D Pekka>:191 [T/fin [<__>:191 [v [etsi [D Merja-]]]]]] <en juokse->]
				7. Last resort extraposition:
			= [[<D Pekka> [T/fin [<D Pekka> [v [etsi [D Merja-]]]]]] <en juokse->]
		Checking LF-interface conditions.
			Transferring [[<D Pekka>:191 [T/fin [<__>:191 [v [etsi [D Merja-]]]]]] <en juokse->] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				etsi with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Merja-]    (alternatives: 2. <D Pekka> 3. T/fin )
				juokse- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'etsi([D Merja-])', 'juokse-(generic)', 'v(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[<D Pekka> [T/fin [<D Pekka> [v [etsi [D Merja-]]]]]] <en juokse->]
		Grammar: [[<D Pekka>:1 [T/fin [<__>:1 [v [etsi [D Merja-]]]]]] <en juokse->]
		Spellout TT/finP = [[DP:1 [TT/fin [__:1 [v [V [D N]]]]]] ADVP]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
etsi:['!COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:search', 'PF:etsi', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
en:['-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:en', 'TAIL:CAT:T']
juokse-:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:run', 'PF:juokse-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  etsi: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Merja-: [N, D, V, v, TT/fin];  en: [ADV];  juokse-: [V, ADV];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "juokse-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "juosten".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D Pekka] T/fin{v,V}] D]
				1. Head movement reconstruction:
				=[[D Pekka] [T/fin [v etsi]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [v etsi]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [v etsi]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:192 [T/fin [<__>:192 [v etsi]]]]
				=[<D Pekka>:192 [T/fin [<__>:192 [v etsi]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:192 [T/fin [<__>:192 [v etsi]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:192 [T/fin [<__>:192 [v etsi]]]]
				7. Last resort extraposition:
				etsi (etsi) is missing complement D
					Last resort extraposition will be tried on [<D Pekka>:192 [T/fin [<__>:192 [v etsi]]]].
					No suitable node for extraposition found. No action was taken.
			=[[<D Pekka>:192 [T/fin [<__>:192 [v etsi]]]] D]

	25. Consume "Merja-"

		[[<D Pekka> [T/fin [<D Pekka> [v etsi]]]] D] + Merja-
			Filtering out impossible merge sites...
			Sink "Merja-" into D because they are inside the same phonological word.
			=[[<D Pekka>:192 [T/fin [<__>:192 [v etsi]]]] D{N}]

		Next word contains multiple morphemes ['Cen$', 'juokse-']

	26. Consume "en"

		[[<D Pekka> [T/fin [<D Pekka> [v etsi]]]] D{N}] + en
			Filtering out impossible merge sites...
			Ranking remaining sites...
				<__>:194 has no thematic role at the SPEC of etsi
				Avoid [[<D Pekka> [T/fin [<D Pekka> [v [<D Merja-> etsi]]]]] <D Merja->] as left branch because it constitutes illicit structure.
				[[<D Pekka>:192 [T/fin [<__>:192 [v etsi]]]] D{N}] + en = -98]
				D{N} + en = 2]
		Ranking completed:
			1. [D{N}; en]
			2. [[[<D Pekka>:192 [T/fin [<__>:192 [v etsi]]]] D{N}]; en]
			Exploring solution number (1) =[D{N} en]
				1. Head movement reconstruction:
					D was opened into [D Merja-].
				=[D Merja-]
				2. Feature processing:
				=[D Merja-]
				3. Extraposition:
				=[D Merja-]
				4. Floater movement reconstruction:
				=[D Merja-]
				5. Phrasal movement reconstruction:
				=[D Merja-]
				6. Agreement reconstruction:
				=[D Merja-]
				7. Last resort extraposition:
			=[[<D Pekka>:192 [T/fin [<__>:192 [v etsi]]]] [[D Merja-] en]]

	27. Consume "juokse-"

		[[<D Pekka> [T/fin [<D Pekka> [v etsi]]]] [[D Merja-] en]] + juokse-
			Filtering out impossible merge sites...
			Sink "juokse-" into en because they are inside the same phonological word.
			=[[<D Pekka>:192 [T/fin [<__>:192 [v etsi]]]] [[D Merja-] en{V}]]

	>>>	Trying candidate spellout structure [[<D Pekka> [T/fin [<D Pekka> [v etsi]]]] [[D Merja-] en{V}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[<D Pekka>:192 [T/fin [<__>:192 [v etsi]]]] [[D Merja-] [en juokse-]]]
				2. Feature processing:
				=[[<D Pekka>:192 [T/fin [<__>:192 [v etsi]]]] [[D Merja-] [en juokse-]]]
				3. Extraposition:
				=[[<D Pekka>:192 [T/fin [<__>:192 [v etsi]]]] [[D Merja-] [en juokse-]]]
				4. Floater movement reconstruction:
					en at the right failed to tail [CAT:T]
					<en juokse-> was made an adjunct.
					<en juokse-> is transferred to LF as a phase.
					[D Merja-] failed to tail [-VAL][ARG]
					Dropping [D Merja-]
				=[[<D Pekka>:192 [T/fin [<__>:192 [v etsi]]]] [[D Merja-] <en juokse->]]
				5. Phrasal movement reconstruction:
				=[[<D Pekka>:192 [T/fin [<__>:192 [v etsi]]]] [[D Merja-] <en juokse->]]
				6. Agreement reconstruction:
				=[[<D Pekka>:192 [T/fin [<__>:192 [v etsi]]]] [[D Merja-] <en juokse->]]
				7. Last resort extraposition:
				etsi (etsi) is missing complement D
				D has unacceptable specifier [<D Pekka>:192 [T/fin [<__>:192 [v etsi]]]].
					Last resort extraposition will be tried on [[<D Pekka>:192 [T/fin [<__>:192 [v etsi]]]] [[D Merja-] <en juokse->]].
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
				etsi (etsi) is missing complement D
					Something is still wrong. The structure is still uninterpretable.
			= [[<D Pekka> [T/fin [<D Pekka> [v etsi]]]] <<D Merja-> <en juokse->>]
		Checking LF-interface conditions.
				etsi (etsi) is missing complement D
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
etsi:['!COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:search', 'PF:etsi', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
en:['-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:en', 'TAIL:CAT:T']
juokse-:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:run', 'PF:juokse-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  etsi: [V, v, TT/fin];  D: [D];  Merja-: [N, D];  en: [ADV];  juokse-: [V, ADV];  

		Trying to find other solutions...
		I have now explored all solutions for "juokse-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[<D Pekka>:192 [T/fin [<__>:192 [v etsi]]]] D{N}] en]
				1. Head movement reconstruction:
				=[[<D Pekka>:192 [T/fin [<__>:192 [v etsi]]]] [D Merja-]]
				2. Feature processing:
				=[[<D Pekka>:192 [T/fin [<__>:192 [v etsi]]]] [D Merja-]]
				3. Extraposition:
				=[[<D Pekka>:192 [T/fin [<__>:192 [v etsi]]]] [D Merja-]]
				4. Floater movement reconstruction:
					D at the right failed to tail [-VAL][ARG]
					<D Merja-> was made an adjunct.
					<D Merja-> is transferred to LF as a phase.
					Dropping <D Merja->
					 = [[<D Pekka>:192 [T/fin [<__>:192 [v [<__>:195 etsi]]]]] <D Merja->:195]
				=[[<D Pekka>:192 [T/fin [<__>:192 [v [<__>:195 etsi]]]]] <D Merja->:195]
				5. Phrasal movement reconstruction:
				=[[<D Pekka>:192 [T/fin [<__>:192 [v [<__>:195 etsi]]]]] <D Merja->:195]
				6. Agreement reconstruction:
				=[[<D Pekka>:192 [T/fin [<__>:192 [v [<__>:195 etsi]]]]] <D Merja->:195]
				7. Last resort extraposition:
				<__>:195 has no thematic role at the SPEC of etsi
					Last resort extraposition will be tried on [[<D Pekka>:192 [T/fin [<__>:192 [v [<__>:195 etsi]]]]] <D Merja->:195].
					No suitable node for extraposition found. No action was taken.
			=[[[<D Pekka>:192 [T/fin [<__>:192 [v [<__>:195 etsi]]]]] <D Merja->:195] en]

	28. Consume "juokse-"

		[[[<D Pekka> [T/fin [<D Pekka> [v [<D Merja-> etsi]]]]] <D Merja->] en] + juokse-
			Filtering out impossible merge sites...
			Sink "juokse-" into en because they are inside the same phonological word.
			=[[[<D Pekka>:192 [T/fin [<__>:192 [v [<__>:195 etsi]]]]] <D Merja->:195] en{V}]

	>>>	Trying candidate spellout structure [[[<D Pekka> [T/fin [<D Pekka> [v [<D Merja-> etsi]]]]] <D Merja->] en{V}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[<D Pekka>:192 [T/fin [<__>:192 [v [<__>:195 etsi]]]]] <D Merja->:195] [en juokse-]]
				2. Feature processing:
				=[[[<D Pekka>:192 [T/fin [<__>:192 [v [<__>:195 etsi]]]]] <D Merja->:195] [en juokse-]]
				3. Extraposition:
				=[[[<D Pekka>:192 [T/fin [<__>:192 [v [<__>:195 etsi]]]]] <D Merja->:195] [en juokse-]]
				4. Floater movement reconstruction:
					en at the right failed to tail [CAT:T]
					<en juokse-> was made an adjunct.
					<en juokse-> is transferred to LF as a phase.
				=[[[<D Pekka>:192 [T/fin [<__>:192 [v [<__>:195 etsi]]]]] <D Merja->:195] <en juokse->]
				5. Phrasal movement reconstruction:
				=[[[<D Pekka>:192 [T/fin [<__>:192 [v [<__>:195 etsi]]]]] <D Merja->:195] <en juokse->]
				6. Agreement reconstruction:
				=[[[<D Pekka>:192 [T/fin [<__>:192 [v [<__>:195 etsi]]]]] <D Merja->:195] <en juokse->]
				7. Last resort extraposition:
				<__>:195 has no thematic role at the SPEC of etsi
					Last resort extraposition will be tried on [[[<D Pekka>:192 [T/fin [<__>:192 [v [<__>:195 etsi]]]]] <D Merja->:195] <en juokse->].
					No suitable node for extraposition found. No action was taken.
			= [[[<D Pekka> [T/fin [<D Pekka> [v [<D Merja-> etsi]]]]] <D Merja->] <en juokse->]
		Checking LF-interface conditions.
				<__>:195 has no thematic role at the SPEC of etsi
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,-VAL', 'VAL', 'null']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A', 'null']
etsi:['!COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:search', 'PF:etsi', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Merja-:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'PF:Merja-', 'SPEC:A']
en:['-ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', 'CAT:-ARG', 'CAT:-ARG/ADV', 'CAT:ADV', 'LANG:FI', 'LF:by', 'PF:en', 'TAIL:CAT:T']
juokse-:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:run', 'PF:juokse-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  __: [D, v, TT/fin];  __: [N, D, v, TT/fin];  etsi: [V, v, TT/fin];  D: [D];  Merja-: [N, D];  en: [ADV];  juokse-: [V, ADV];  

		Trying to find other solutions...
		I have now explored all solutions for "juokse-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "juosten".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merja-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "par$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Merjaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "etsi-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "etsii".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 74
['to_inf', 'leave', 'is', 'a', 'mistake']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None
			=to

	2. Consume "leave"

		to + leave
			Filtering out impossible merge sites...
			Exploring solution number (1) =[to leave]
				1. Head movement reconstruction:
				=to
				2. Feature processing:
				=to
				3. Extraposition:
				=to
				4. Floater movement reconstruction:
				=to
				5. Phrasal movement reconstruction:
				=to
				6. Agreement reconstruction:
				=to
				7. Last resort extraposition:
				to probing for CAT:V failed.
				"to" lacks complement.
					Last resort extraposition will be tried on to.
					No suitable node for extraposition found. No action was taken.
			=[to leave]

		Next word contains multiple morphemes ['[-s]$', 'T/fin$', 'be-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	3. Consume "T/fin$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', '-', 'PHI:GEN:M'} to T/fin

	4. Consume "T/fin"

		[to leave] + T/fin
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Prioritize INFP as SPEC,T/fin.
				Avoid [leave T/fin] due to complement selection.
				[to leave] + T/fin = 102]
				leave + T/fin = -96]
		Ranking completed:
			1. [[to leave]; T/fin]
			2. [leave; T/fin]
			Exploring solution number (1) =[[to leave] T/fin]
				1. Head movement reconstruction:
				=[to leave]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[to leave]
				3. Extraposition:
				=[to leave]
				4. Floater movement reconstruction:
				=[to leave]
				5. Phrasal movement reconstruction:
				=[to leave]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[to leave]
				7. Last resort extraposition:
			=[[to leave] T/fin]

	5. Consume "be"

		[[to leave] T/fin] + be
			Filtering out impossible merge sites...
			Sink "be" into T/fin because they are inside the same phonological word.
			=[[to leave] T/fin{V}]

	6. Consume "a"

		[[to leave] T/fin{V}] + a
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, a.
				"be" lacks complement.
				Avoid [[to leave] [T/fin be]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{V} a] due to complement selection.
				[[to leave] T/fin{V}] + a = -197]
				T/fin{V} + a = 104]
		Ranking completed:
			1. [T/fin{V}; a]
			2. [[[to leave] T/fin{V}]; a]
			Exploring solution number (1) =[T/fin{V} a]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
				An EPP-head "T/fin{V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[to leave] [T/fin{V} a]]

	7. Consume "mistake"

		[[to leave] [T/fin{V} a]] + mistake
			Filtering out impossible merge sites...
				Reject [[[to leave] [T/fin [be a]]] mistake] due to bad left branch.
				Reject [[T/fin [be a]] mistake] due to bad left branch.
			Exploring solution number (1) =[a mistake]
				1. Head movement reconstruction:
				=a
				2. Feature processing:
				=a
				3. Extraposition:
				=a
				4. Floater movement reconstruction:
				=a
				5. Phrasal movement reconstruction:
				=a
				6. Agreement reconstruction:
				=a
				7. Last resort extraposition:
			=[[to leave] [T/fin{V} [a mistake]]]

	>>>	Trying candidate spellout structure [[to leave] [T/fin{V} [a mistake]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target be in T/fin
					=[[to leave] [T/fin [be [a mistake]]]]
				=[[to leave] [T/fin [be [a mistake]]]]
				2. Feature processing:
				=[[to leave] [T/fin [be [a mistake]]]]
				3. Extraposition:
				=[[to leave] [T/fin [be [a mistake]]]]
				4. Floater movement reconstruction:
				=[[to leave] [T/fin [be [a mistake]]]]
				5. Phrasal movement reconstruction:
				=[[to leave] [T/fin [be [a mistake]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[to leave] [T/fin [be [a mistake]]]]
				7. Last resort extraposition:
			= [[to leave] [T/fin [be [a mistake]]]]
		Checking LF-interface conditions.
			Transferring [[to leave] [T/fin [be [a mistake]]]] into the conceptual-intentional system...
				to with ['PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [T/fin [be [a mistake]]]    (alternatives: )
				leave with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				T/fin with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'T/fin(generic)', 'leave(generic)', 'to([T/fin [be [a mistake]]])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[to leave] [T/fin [be [a mistake]]]]
		Grammar: [[to leave] [T/fin [be [a mistake]]]]
		Spellout TT/finP = [INFP [TT/fin [V [D N]]]]
----------------------------------------------------------------------------------------------------------
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
be:['!COMP:*', '-ARG', '-COMP:N', '-COMP:T/fin', '-COMP:TO/inf', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'CAT:-ARG', 'CAT:-ARG/COPULA/V', 'CAT:COPULA', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:be', 'PF:be', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
a:['!COMP:*', '!PROBE:CAT:N', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:a', 'PF:a', 'PHI:DET:INDEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
mistake:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:mistake', 'PF:mistake', 'SPEC:A']

to: [INF];  leave: [V, INF];  T/fin: [TT/fin];  be: [V, TT/fin];  a: [D, V, TT/fin];  mistake: [N, D, V, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "mistake".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[to leave] T/fin{V}] a]
				1. Head movement reconstruction:
				=[[to leave] [T/fin be]]
				2. Feature processing:
				=[[to leave] [T/fin be]]
				3. Extraposition:
				=[[to leave] [T/fin be]]
				4. Floater movement reconstruction:
				=[[to leave] [T/fin be]]
				5. Phrasal movement reconstruction:
				=[[to leave] [T/fin be]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[[to leave] [T/fin be]]
				7. Last resort extraposition:
				"be" lacks complement.
					Last resort extraposition will be tried on [[to leave] [T/fin be]].
					No suitable node for extraposition found. No action was taken.
			=[[[to leave] [T/fin be]] a]

	8. Consume "mistake"

		[[[to leave] [T/fin be]] a] + mistake
			Filtering out impossible merge sites...
				Reject [[[[to leave] [T/fin be]] a] mistake] due to bad left branch.
			Exploring solution number (1) =[a mistake]
				1. Head movement reconstruction:
				=a
				2. Feature processing:
				=a
				3. Extraposition:
				=a
				4. Floater movement reconstruction:
				=a
				5. Phrasal movement reconstruction:
				=a
				6. Agreement reconstruction:
				=a
				7. Last resort extraposition:
			=[[[to leave] [T/fin be]] [a mistake]]

	>>>	Trying candidate spellout structure [[[to leave] [T/fin be]] [a mistake]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[to leave] [T/fin be]] [a mistake]]
				2. Feature processing:
				=[[[to leave] [T/fin be]] [a mistake]]
				3. Extraposition:
				=[[[to leave] [T/fin be]] [a mistake]]
				4. Floater movement reconstruction:
				=[[[to leave] [T/fin be]] [a mistake]]
				5. Phrasal movement reconstruction:
				=[[[to leave] [T/fin be]] [a mistake]]
				6. Agreement reconstruction:
				=[[[to leave] [T/fin be]] [a mistake]]
				7. Last resort extraposition:
				"be" lacks complement.
				a has unacceptable specifier [[to leave] [T/fin be]].
					Last resort extraposition will be tried on [[[to leave] [T/fin be]] [a mistake]].
					<a mistake> was made an adjunct.
					<a mistake> is transferred to LF as a phase.
				"be" lacks complement.
					Something is still wrong. The structure is still uninterpretable.
			= [[[to leave] [T/fin be]] <a mistake>]
		Checking LF-interface conditions.
				"be" lacks complement.
			LF-interface condition(s) violated
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
be:['!COMP:*', '-ARG', '-COMP:N', '-COMP:T/fin', '-COMP:TO/inf', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'CAT:-ARG', 'CAT:-ARG/COPULA/V', 'CAT:COPULA', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:be', 'PF:be', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
a:['!COMP:*', '!PROBE:CAT:N', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:a', 'PF:a', 'PHI:DET:INDEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
mistake:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:mistake', 'PF:mistake', 'SPEC:A']

to: [INF];  leave: [V, INF];  T/fin: [TT/fin];  be: [V, TT/fin];  a: [D];  mistake: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "mistake".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "a".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "be-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[leave T/fin]
				1. Head movement reconstruction:
				=leave
				2. Feature processing:
				=leave
				3. Extraposition:
				=leave
				4. Floater movement reconstruction:
				=leave
				5. Phrasal movement reconstruction:
				=leave
				6. Agreement reconstruction:
				=leave
				7. Last resort extraposition:
			=[to [leave T/fin]]

	9. Consume "be"

		[to [leave T/fin]] + be
			Filtering out impossible merge sites...
			Sink "be" into T/fin because they are inside the same phonological word.
			=[to [leave T/fin{V}]]

	10. Consume "a"

		[to [leave T/fin{V}]] + a
			Filtering out impossible merge sites...
			Ranking remaining sites...
				An EPP-head "T/fin" lacks specifier.
				"be" lacks complement.
				Avoid [to [leave <T/fin be>]] as left branch because it constitutes illicit structure.
				Avoid VP as SPEC, a.
				Avoid [[leave T/fin{V}], a] because the operation breaks up an existing selectional dependency.
				An EPP-head "T/fin" lacks specifier.
				"be" lacks complement.
				Avoid [leave <T/fin be>] as left branch because it constitutes illicit structure.
				Prioritize [T/fin{V} a] due to complement selection.
				[to [leave T/fin{V}]] + a = -98]
				[leave T/fin{V}] + a = -292]
				T/fin{V} + a = 106]
		Ranking completed:
			1. [T/fin{V}; a]
			2. [[to [leave T/fin{V}]]; a]
			3. [[leave T/fin{V}]; a]
			Exploring solution number (1) =[T/fin{V} a]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
				An EPP-head "T/fin{V}" lacks specifier.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[to [leave [T/fin{V} a]]]

	11. Consume "mistake"

		[to [leave [T/fin{V} a]]] + mistake
			Filtering out impossible merge sites...
				Reject [[to [leave <T/fin [be a]>]] mistake] due to bad left branch.
				Reject [[leave <T/fin [be a]>] mistake] due to bad left branch.
				Reject [[T/fin [be a]] mistake] due to bad left branch.
			Exploring solution number (1) =[a mistake]
				1. Head movement reconstruction:
				=a
				2. Feature processing:
				=a
				3. Extraposition:
				=a
				4. Floater movement reconstruction:
				=a
				5. Phrasal movement reconstruction:
				=a
				6. Agreement reconstruction:
				=a
				7. Last resort extraposition:
			=[to [leave [T/fin{V} [a mistake]]]]

	>>>	Trying candidate spellout structure [to [leave [T/fin{V} [a mistake]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target be in T/fin
					=[to [leave [T/fin [be [a mistake]]]]]
				=[to [leave [T/fin [be [a mistake]]]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[to [leave [T/fin [be [a mistake]]]]]
				3. Extraposition:
					leave cannot select T/fin
					Extraposition will be tried on [T/fin [be [a mistake]]].
					<T/fin [be [a mistake]]> was made an adjunct.
					<T/fin [be [a mistake]]> is transferred to LF as a phase.
				=[to [leave <T/fin [be [a mistake]]>]]
				4. Floater movement reconstruction:
				=[to [leave <T/fin [be [a mistake]]>]]
				5. Phrasal movement reconstruction:
				=[to [leave <T/fin [be [a mistake]]>]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[to [leave <T/fin [be [a mistake]]>]]
				7. Last resort extraposition:
				An EPP-head "T/fin" lacks specifier.
					Last resort extraposition will be tried on [to [leave <T/fin [be [a mistake]]>]].
					No suitable node for extraposition found. No action was taken.
			= [to [leave <T/fin [be [a mistake]]>]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier.
			LF-interface condition(s) violated
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
be:['!COMP:*', '-ARG', '-COMP:N', '-COMP:T/fin', '-COMP:TO/inf', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'CAT:-ARG', 'CAT:-ARG/COPULA/V', 'CAT:COPULA', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:be', 'PF:be', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
a:['!COMP:*', '!PROBE:CAT:N', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:a', 'PF:a', 'PHI:DET:INDEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
mistake:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:mistake', 'PF:mistake', 'SPEC:A']

to: [INF];  leave: [V, INF];  T/fin: [TT/fin, V, INF];  be: [V, TT/fin, V, INF];  a: [D, V, TT/fin, V, INF];  mistake: [N, D, V, TT/fin, V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "mistake".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[to [leave T/fin{V}]] a]
				1. Head movement reconstruction:
				=[to [leave [T/fin be]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[to [leave [T/fin be]]]
				3. Extraposition:
					leave cannot select T/fin
					Extraposition will be tried on [T/fin be].
					<T/fin be> was made an adjunct.
					<T/fin be> is transferred to LF as a phase.
				=[to [leave <T/fin be>]]
				4. Floater movement reconstruction:
				=[to [leave <T/fin be>]]
				5. Phrasal movement reconstruction:
				=[to [leave <T/fin be>]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
				=[to [leave <T/fin be>]]
				7. Last resort extraposition:
				An EPP-head "T/fin" lacks specifier.
				"be" lacks complement.
					Last resort extraposition will be tried on [to [leave <T/fin be>]].
					No suitable node for extraposition found. No action was taken.
			=[[to [leave <T/fin be>]] a]

	12. Consume "mistake"

		[[to [leave <T/fin be>]] a] + mistake
			Filtering out impossible merge sites...
				Reject [[[to [leave <T/fin be>]] a] mistake] due to bad left branch.
			Exploring solution number (1) =[a mistake]
				1. Head movement reconstruction:
				=a
				2. Feature processing:
				=a
				3. Extraposition:
				=a
				4. Floater movement reconstruction:
				=a
				5. Phrasal movement reconstruction:
				=a
				6. Agreement reconstruction:
				=a
				7. Last resort extraposition:
			=[[to [leave <T/fin be>]] [a mistake]]

	>>>	Trying candidate spellout structure [[to [leave <T/fin be>]] [a mistake]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[to [leave <T/fin be>]] [a mistake]]
				2. Feature processing:
				=[[to [leave <T/fin be>]] [a mistake]]
				3. Extraposition:
				=[[to [leave <T/fin be>]] [a mistake]]
				4. Floater movement reconstruction:
				=[[to [leave <T/fin be>]] [a mistake]]
				5. Phrasal movement reconstruction:
				=[[to [leave <T/fin be>]] [a mistake]]
				6. Agreement reconstruction:
				=[[to [leave <T/fin be>]] [a mistake]]
				7. Last resort extraposition:
				An EPP-head "T/fin" lacks specifier.
				"be" lacks complement.
					Last resort extraposition will be tried on [[to [leave <T/fin be>]] [a mistake]].
					<a mistake> was made an adjunct.
					<a mistake> is transferred to LF as a phase.
				An EPP-head "T/fin" lacks specifier.
				"be" lacks complement.
					Something is still wrong. The structure is still uninterpretable.
			= [[to [leave <T/fin be>]] <a mistake>]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier.
				"be" lacks complement.
			LF-interface condition(s) violated
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
be:['!COMP:*', '-ARG', '-COMP:N', '-COMP:T/fin', '-COMP:TO/inf', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'CAT:-ARG', 'CAT:-ARG/COPULA/V', 'CAT:COPULA', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:be', 'PF:be', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
a:['!COMP:*', '!PROBE:CAT:N', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:a', 'PF:a', 'PHI:DET:INDEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
mistake:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:mistake', 'PF:mistake', 'SPEC:A']

to: [INF];  leave: [V, INF];  T/fin: [TT/fin, V, INF];  be: [V, TT/fin, V, INF];  a: [D];  mistake: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "mistake".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (3) =[[leave T/fin{V}] a]
				1. Head movement reconstruction:
				=[leave [T/fin be]]
				2. Feature processing:
				=[leave [T/fin be]]
				3. Extraposition:
					leave cannot select T/fin
					Extraposition will be tried on [T/fin be].
					<T/fin be> was made an adjunct.
					<T/fin be> is transferred to LF as a phase.
				=[leave <T/fin be>]
				4. Floater movement reconstruction:
				=[leave <T/fin be>]
				5. Phrasal movement reconstruction:
				=[leave <T/fin be>]
				6. Agreement reconstruction:
				=[leave <T/fin be>]
				7. Last resort extraposition:
				An EPP-head "T/fin" lacks specifier.
				"be" lacks complement.
					Last resort extraposition will be tried on [leave <T/fin be>].
					No suitable node for extraposition found. No action was taken.
			=[to [[leave <T/fin be>] a]]

	13. Consume "mistake"

		[to [[leave <T/fin be>] a]] + mistake
			Filtering out impossible merge sites...
				Reject [[to [[leave <T/fin be>] a]] mistake] due to bad left branch.
				Reject [[[leave <T/fin be>] a] mistake] due to bad left branch.
			Exploring solution number (1) =[a mistake]
				1. Head movement reconstruction:
				=a
				2. Feature processing:
				=a
				3. Extraposition:
				=a
				4. Floater movement reconstruction:
				=a
				5. Phrasal movement reconstruction:
				=a
				6. Agreement reconstruction:
				=a
				7. Last resort extraposition:
			=[to [[leave <T/fin be>] [a mistake]]]

	>>>	Trying candidate spellout structure [to [[leave <T/fin be>] [a mistake]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[to [[leave <T/fin be>] [a mistake]]]
				2. Feature processing:
					Solving feature ambiguities for "to".
				=[to [[leave <T/fin be>] [a mistake]]]
				3. Extraposition:
				=[to [[leave <T/fin be>] [a mistake]]]
				4. Floater movement reconstruction:
				=[to [[leave <T/fin be>] [a mistake]]]
				5. Phrasal movement reconstruction:
				=[to [[leave <T/fin be>] [a mistake]]]
				6. Agreement reconstruction:
					Head to, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						to acquired PHI:NUM:SG by phi-Agree from [a mistake].
						to acquired PHI:PER:3 by phi-Agree from [a mistake].
				=[to [[leave <T/fin be>] [a mistake]]]
				7. Last resort extraposition:
				An EPP-head "T/fin" lacks specifier.
				"be" lacks complement.
				a has unacceptable specifier [leave <T/fin be>].
					Last resort extraposition will be tried on [to [[leave <T/fin be>] [a mistake]]].
					<a mistake> was made an adjunct.
					<a mistake> is transferred to LF as a phase.
				An EPP-head "T/fin" lacks specifier.
				"be" lacks complement.
					Something is still wrong. The structure is still uninterpretable.
			= [to [[leave <T/fin be>] <a mistake>]]
		Checking LF-interface conditions.
				An EPP-head "T/fin" lacks specifier.
				"be" lacks complement.
			LF-interface condition(s) violated
to:['!COMP:*', '!PROBE:CAT:V', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '?VAL', 'ARG', 'CAT:ARG', 'CAT:INF', 'CAT:INF/TO/inf', 'CAT:TO/inf', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:TO/inf', 'PF:to', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI_CHECKED', 'SPEC:*']
leave:['!SPEC:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:leave', 'PF:leave', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:GEN:_', 'PHI:NUM:SG', 'PHI:NUM:_', 'PHI:PER:3', 'PHI:PER:_', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
be:['!COMP:*', '-ARG', '-COMP:N', '-COMP:T/fin', '-COMP:TO/inf', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'CAT:-ARG', 'CAT:-ARG/COPULA/V', 'CAT:COPULA', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:be', 'PF:be', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
a:['!COMP:*', '!PROBE:CAT:N', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:a', 'PF:a', 'PHI:DET:INDEF', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
mistake:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:mistake', 'PF:mistake', 'SPEC:A']

to: [INF];  leave: [V, INF];  T/fin: [TT/fin, V, INF];  be: [V, TT/fin, V, INF];  a: [D, INF];  mistake: [N, D, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "mistake".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "a".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "be-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "is".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "leave".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "to_inf".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 75
['Pekka', 'pyytaa', 'lahtemaan']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	5. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	8. Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v*$', 'pyyta-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[D Pekka] T/fin]

	11. Consume "v*"

		[[D Pekka] T/fin] + v*
			Filtering out impossible merge sites...
			Sink "v*" into T/fin because they are inside the same phonological word.
			=[[D Pekka] T/fin{v}]

	12. Consume "pyyda"

		[[D Pekka] T/fin{v}] + pyyda
			Filtering out impossible merge sites...
			Sink "pyyda" into v* because they are inside the same phonological word.
			=[[D Pekka] T/fin{v,V}]

		Next word contains multiple morphemes ['MA/inf$', 'lahte-']

	13. Consume "ma"

		[[D Pekka] T/fin{v,V}] + ma
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, ma.
				[[D Pekka] T/fin{v,V}] + ma = -98]
				T/fin{v,V} + ma = 2]
		Ranking completed:
			1. [T/fin{v,V}; ma]
			2. [[[D Pekka] T/fin{v,V}]; ma]
			Exploring solution number (1) =[T/fin{v,V} ma]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{v,V} ma]]

	14. Consume "lahtea"

		[[D Pekka] [T/fin{v,V} ma]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into ma because they are inside the same phonological word.
			=[[D Pekka] [T/fin{v,V} ma{V}]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{v,V} ma{V}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v*{V} in T/fin
					=[[D Pekka] [T/fin [v*{V} ma{V}]]]
					Target pyyda in v*
					=[[D Pekka] [T/fin [v* [pyyda ma{V}]]]]
				=[[D Pekka] [T/fin [v* [pyyda [ma lahtea]]]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [v* [pyyda [ma lahtea]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [v* [pyyda [ma lahtea]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:198 [T/fin [<__>:198 [v* [pyyda [ma lahtea]]]]]]
				=[<D Pekka>:198 [T/fin [<__>:198 [v* [pyyda [ma lahtea]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:198 [T/fin [<__>:198 [v* [pyyda [ma lahtea]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:198 [T/fin [<__>:198 [v* [pyyda [ma lahtea]]]]]]
				7. Last resort extraposition:
			= [<D Pekka> [T/fin [<D Pekka> [v* [pyyda [ma lahtea]]]]]]
		Checking LF-interface conditions.
			Transferring [<D Pekka>:198 [T/fin [<__>:198 [v* [pyyda [ma lahtea]]]]]] into the conceptual-intentional system...
				v* with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				pyyda with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'lahtea(generic)', 'pyyda(clausal argument)', 'v*(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [v* [pyyda [ma lahtea]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<__>:1 [v* [pyyda [ma lahtea]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [INF V]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
pyyda:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:pyyda', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
ma:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '-VAL', 'CAT:-ARG', 'CAT:-ARG/INF/MA/inf', 'CAT:INF', 'CAT:MA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:MA/inf', 'PF:ma']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  pyyda: [V, v, TT/fin];  ma: [INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D Pekka] T/fin{v,V}] ma]
				1. Head movement reconstruction:
				=[[D Pekka] [T/fin [v* pyyda]]]
				2. Feature processing:
				=[[D Pekka] [T/fin [v* pyyda]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [v* pyyda]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:199 [T/fin [<__>:199 [v* pyyda]]]]
				=[<D Pekka>:199 [T/fin [<__>:199 [v* pyyda]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:199 [T/fin [<__>:199 [v* pyyda]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:199 [T/fin [<__>:199 [v* pyyda]]]]
				7. Last resort extraposition:
			=[[<D Pekka>:199 [T/fin [<__>:199 [v* pyyda]]]] ma]

	15. Consume "lahtea"

		[[<D Pekka> [T/fin [<D Pekka> [v* pyyda]]]] ma] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into ma because they are inside the same phonological word.
			=[[<D Pekka>:199 [T/fin [<__>:199 [v* pyyda]]]] ma{V}]

	>>>	Trying candidate spellout structure [[<D Pekka> [T/fin [<D Pekka> [v* pyyda]]]] ma{V}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[<D Pekka>:199 [T/fin [<__>:199 [v* pyyda]]]] [ma lahtea]]
				2. Feature processing:
				=[[<D Pekka>:199 [T/fin [<__>:199 [v* pyyda]]]] [ma lahtea]]
				3. Extraposition:
				=[[<D Pekka>:199 [T/fin [<__>:199 [v* pyyda]]]] [ma lahtea]]
				4. Floater movement reconstruction:
				=[[<D Pekka>:199 [T/fin [<__>:199 [v* pyyda]]]] [ma lahtea]]
				5. Phrasal movement reconstruction:
				=[[<D Pekka>:199 [T/fin [<__>:199 [v* pyyda]]]] [ma lahtea]]
				6. Agreement reconstruction:
				=[[<D Pekka>:199 [T/fin [<__>:199 [v* pyyda]]]] [ma lahtea]]
				7. Last resort extraposition:
				ma has unacceptable specifier [<D Pekka>:199 [T/fin [<__>:199 [v* pyyda]]]].
					Last resort extraposition will be tried on [[<D Pekka>:199 [T/fin [<__>:199 [v* pyyda]]]] [ma lahtea]].
					No suitable node for extraposition found. No action was taken.
			= [[<D Pekka> [T/fin [<D Pekka> [v* pyyda]]]] [ma lahtea]]
		Checking LF-interface conditions.
				ma has unacceptable specifier [<D Pekka>:199 [T/fin [<__>:199 [v* pyyda]]]].
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
v*:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v/v*', 'CAT:v', 'CAT:v*', 'COMP:V', 'LANG:FI', 'LF:v*', 'PF:v*', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:external']
pyyda:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:ask', 'PF:pyyda', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
ma:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '-VAL', 'CAT:-ARG', 'CAT:-ARG/INF/MA/inf', 'CAT:INF', 'CAT:MA/inf', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:MA/inf', 'PF:ma']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v*: [v, TT/fin];  pyyda: [V, v, TT/fin];  ma: [INF];  lahtea: [V, INF];  

		Trying to find other solutions...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtemaan".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "pyyta-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v*$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "pyytaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 76
['haluan', 'lahtea']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['[-n]$', 'T/fin$', 'v$', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'] into working memory.

	1. Consume "T/fin$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:PER:1', 'PHI:DET:DEF', 'LANG:FI', 'PHI:NUM:SG', '-'} to T/fin
			=T/fin

	3. Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=T/fin{v}

	4. Consume "haluaa"

		T/fin{v} + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into v because they are inside the same phonological word.
			=T/fin{v,V}

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	5. Consume "A/inf"

		T/fin{v,V} + A/inf
			Filtering out impossible merge sites...
			Exploring solution number (1) =[T/fin{v,V} A/inf]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[T/fin{v,V} A/inf]

	6. Consume "lahtea"

		[T/fin{v,V} A/inf] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[T/fin{v,V} A/inf{V}]

	>>>	Trying candidate spellout structure [T/fin{v,V} A/inf{V}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[T/fin [v{V} A/inf{V}]]
					Target haluaa in v
					=[T/fin [v [haluaa A/inf{V}]]]
				=[T/fin [v [haluaa [A/inf lahtea]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
					A/inf has neutralized PHI-feature, will be resolved into -ARG due to haluaa
				=[T/fin [v [haluaa [A/inf lahtea]]]]
				3. Extraposition:
				=[T/fin [v [haluaa [A/inf lahtea]]]]
				4. Floater movement reconstruction:
				=[T/fin [v [haluaa [A/inf lahtea]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [v [haluaa [A/inf lahtea]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:1 from the edge of T/fin.
				=[T/fin [v [haluaa [A/inf lahtea]]]]
				7. Last resort extraposition:
			= [T/fin [v [haluaa [A/inf lahtea]]]]
		Checking LF-interface conditions.
			Transferring [T/fin [v [haluaa [A/inf lahtea]]]] into the conceptual-intentional system...
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				haluaa with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. T/fin    (alternatives: )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'haluaa(T/fin)', 'lahtea(T/fin)', 'v(T/fin)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[T/fin [v [haluaa [A/inf lahtea]]]]
		Grammar: [T/fin [v [haluaa [A/inf lahtea]]]]
		Spellout TT/finP = [TT/fin [v [V [INF V]]]]
----------------------------------------------------------------------------------------------------------
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

T/fin: [TT/fin];  v: [v, TT/fin];  haluaa: [V, v, TT/fin];  A/inf: [INF, V, v, TT/fin];  lahtea: [V, INF, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "halua-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "haluan".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 77
['haluaa', 'lahtea']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v$', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	1. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin
			=T/fin

	3. Consume "v"

		T/fin + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=T/fin{v}

	4. Consume "haluaa"

		T/fin{v} + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into v because they are inside the same phonological word.
			=T/fin{v,V}

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	5. Consume "A/inf"

		T/fin{v,V} + A/inf
			Filtering out impossible merge sites...
			Exploring solution number (1) =[T/fin{v,V} A/inf]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[T/fin{v,V} A/inf]

	6. Consume "lahtea"

		[T/fin{v,V} A/inf] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[T/fin{v,V} A/inf{V}]

	>>>	Trying candidate spellout structure [T/fin{v,V} A/inf{V}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin
					=[T/fin [v{V} A/inf{V}]]
					Target haluaa in v
					=[T/fin [v [haluaa A/inf{V}]]]
				=[T/fin [v [haluaa [A/inf lahtea]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
					A/inf has neutralized PHI-feature, will be resolved into -ARG due to haluaa
				=[T/fin [v [haluaa [A/inf lahtea]]]]
				3. Extraposition:
				=[T/fin [v [haluaa [A/inf lahtea]]]]
				4. Floater movement reconstruction:
				=[T/fin [v [haluaa [A/inf lahtea]]]]
				5. Phrasal movement reconstruction:
				=[T/fin [v [haluaa [A/inf lahtea]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[T/fin [v [haluaa [A/inf lahtea]]]]
				7. Last resort extraposition:
			= [T/fin [v [haluaa [A/inf lahtea]]]]
		Checking LF-interface conditions.
			Transferring [T/fin [v [haluaa [A/inf lahtea]]]] into the conceptual-intentional system...
				T/fin with ['PHI:DET:_'] was associated at LF with:
					No antecedent found, LF-object crashes.
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				haluaa with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
				Semantic interpretation failed, transfer to C-I crashed.
			The sentence cannot be interpreted at LF
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "halua-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "haluaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 78
['Pekka', 'sanoo', 'etta', 'haluaa', 'lahtea']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['def$', 'hum$', 'def$', '3p$', 'sg$', 'nom$', 'D$', 'Pekka-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG'] into working memory.

	5. Consume "nom$"
		Storing inflectional feature ['-', 'LANG:FI', 'TAIL:ARG,VAL,CAT:FIN'] into working memory.

	6. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', '-', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'TAIL:ARG,VAL,CAT:FIN'} to D
			=D

	8. Consume "Pekka"

		D + Pekka
			Filtering out impossible merge sites...
			Sink "Pekka" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'sano-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	9. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	10. Consume "T/fin"

		D{N} + T/fin
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin]
				1. Head movement reconstruction:
					D was opened into [D Pekka].
				=[D Pekka]
				2. Feature processing:
				=[D Pekka]
				3. Extraposition:
				=[D Pekka]
				4. Floater movement reconstruction:
				=[D Pekka]
				5. Phrasal movement reconstruction:
				=[D Pekka]
				6. Agreement reconstruction:
				=[D Pekka]
				7. Last resort extraposition:
			=[[D Pekka] T/fin]

	11. Consume "sano-"

		[[D Pekka] T/fin] + sano-
			Filtering out impossible merge sites...
			Sink "sano-" into T/fin because they are inside the same phonological word.
			=[[D Pekka] T/fin{V}]

	12. Consume "etta"

		[[D Pekka] T/fin{V}] + etta
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> sano-]]] etta] due to bad left branch.
			Exploring solution number (1) =[T/fin{V} etta]
				1. Head movement reconstruction:
				=T/fin{V}
				2. Feature processing:
				=T/fin{V}
				3. Extraposition:
				=T/fin{V}
				4. Floater movement reconstruction:
				=T/fin{V}
				5. Phrasal movement reconstruction:
				=T/fin{V}
				6. Agreement reconstruction:
				=T/fin{V}
				7. Last resort extraposition:
				T/fin{V} probing for CAT:V failed.
				"T/fin{V}" lacks complement.
					Last resort extraposition will be tried on T/fin{V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} etta]]

		Next word contains multiple morphemes ['[-V]$', 'T/fin$', 'v$', 'halua-']
		Storing inflectional feature ['-', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:3'] into working memory.

	13. Consume "T/fin$"
		Adding inflectional features {'LANG:FI', 'PHI:NUM:SG', '-', 'PHI:PER:3'} to T/fin

	14. Consume "T/fin"

		[[D Pekka] [T/fin{V} etta]] + T/fin
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- etta]]]] T/fin] due to bad left branch.
				Reject [[T/fin [sano- etta]] T/fin] due to bad left branch.
			Exploring solution number (1) =[etta T/fin]
				1. Head movement reconstruction:
				=etta
				2. Feature processing:
				=etta
				3. Extraposition:
				=etta
				4. Floater movement reconstruction:
				=etta
				5. Phrasal movement reconstruction:
				=etta
				6. Agreement reconstruction:
				=etta
				7. Last resort extraposition:
				etta probing for CAT:T/fin failed.
				"etta" lacks complement.
					Last resort extraposition will be tried on etta.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} [etta T/fin]]]

	15. Consume "v"

		[[D Pekka] [T/fin{V} [etta T/fin]]] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta T/fin{v}]]]

	16. Consume "haluaa"

		[[D Pekka] [T/fin{V} [etta T/fin{v}]]] + haluaa
			Filtering out impossible merge sites...
			Sink "haluaa" into v because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta T/fin{v,V}]]]

		Next word contains multiple morphemes ['A/inf$', 'lahte-']

	17. Consume "A/inf"

		[[D Pekka] [T/fin{V} [etta T/fin{v,V}]]] + A/inf
			Filtering out impossible merge sites...
				Reject [[<D Pekka> [T/fin [<D Pekka> [sano- [etta [T/fin [v haluaa]]]]]]] A/inf] due to bad left branch.
				Reject [[T/fin [sano- [etta [T/fin [v haluaa]]]]] A/inf] due to bad left branch.
				Reject [[etta [T/fin [v haluaa]]] A/inf] due to bad left branch.
			Exploring solution number (1) =[T/fin{v,V} A/inf]
				1. Head movement reconstruction:
				=T/fin{v,V}
				2. Feature processing:
				=T/fin{v,V}
				3. Extraposition:
				=T/fin{v,V}
				4. Floater movement reconstruction:
				=T/fin{v,V}
				5. Phrasal movement reconstruction:
				=T/fin{v,V}
				6. Agreement reconstruction:
				=T/fin{v,V}
				7. Last resort extraposition:
				T/fin{v,V} probing for CAT:V failed.
				"T/fin{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D Pekka] [T/fin{V} [etta [T/fin{v,V} A/inf]]]]

	18. Consume "lahtea"

		[[D Pekka] [T/fin{V} [etta [T/fin{v,V} A/inf]]]] + lahtea
			Filtering out impossible merge sites...
			Sink "lahtea" into A/inf because they are inside the same phonological word.
			=[[D Pekka] [T/fin{V} [etta [T/fin{v,V} A/inf{V}]]]]

	>>>	Trying candidate spellout structure [[D Pekka] [T/fin{V} [etta [T/fin{v,V} A/inf{V}]]]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target sano- in T/fin
					=[[D Pekka] [T/fin [sano- [etta [T/fin{v,V} A/inf{V}]]]]]
					Target v{V} in T/fin
					=[[D Pekka] [T/fin [sano- [etta [T/fin [v{V} A/inf{V}]]]]]]
					Target haluaa in v
					=[[D Pekka] [T/fin [sano- [etta [T/fin [v [haluaa A/inf{V}]]]]]]]
				=[[D Pekka] [T/fin [sano- [etta [T/fin [v [haluaa [A/inf lahtea]]]]]]]]
				2. Feature processing:
					Solving feature ambiguities for "A/inf".
					A/inf has neutralized PHI-feature, will be resolved into -ARG due to haluaa
				=[[D Pekka] [T/fin [sano- [etta [T/fin [v [haluaa [A/inf lahtea]]]]]]]]
				3. Extraposition:
				=[[D Pekka] [T/fin [sano- [etta [T/fin [v [haluaa [A/inf lahtea]]]]]]]]
				4. Floater movement reconstruction:
					[D Pekka] failed to tail [ARG][CAT:FIN][VAL]
					Dropping [D Pekka]
					<D Pekka> was made an adjunct.
					<D Pekka> is transferred to LF as a phase.
					 = [<D Pekka>:203 [T/fin [<__>:203 [sano- [etta [T/fin [v [haluaa [A/inf lahtea]]]]]]]]]
				=[<D Pekka>:203 [T/fin [<__>:203 [sano- [etta [T/fin [v [haluaa [A/inf lahtea]]]]]]]]]
				5. Phrasal movement reconstruction:
				=[<D Pekka>:203 [T/fin [<__>:203 [sano- [etta [T/fin [v [haluaa [A/inf lahtea]]]]]]]]]
				6. Agreement reconstruction:
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:DET:DEF from the edge of T/fin.
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
					Head T/fin, lacking -VAL, has unvalued phi probe and triggered Agree-1:
						T/fin acquired PHI:NUM:SG from the edge of T/fin.
						T/fin acquired PHI:PER:3 from the edge of T/fin.
				=[<D Pekka>:203 [T/fin [<__>:203 [sano- [etta [T/fin [v [haluaa [A/inf lahtea]]]]]]]]]
				7. Last resort extraposition:
			= [<D Pekka> [T/fin [<D Pekka> [sano- [etta [T/fin [v [haluaa [A/inf lahtea]]]]]]]]]
		Checking LF-interface conditions.
			Transferring [<D Pekka>:203 [T/fin [<__>:203 [sano- [etta [T/fin [v [haluaa [A/inf lahtea]]]]]]]]] into the conceptual-intentional system...
				sano- with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				T/fin with ['PHI:DET:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				v with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				haluaa with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				lahtea with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. <D Pekka>    (alternatives: 2. T/fin )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'T/fin(<D Pekka>)', 'haluaa(<D Pekka>)', 'lahtea(<D Pekka>)', 'sano-(<D Pekka>)', 'v(<D Pekka>)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[<D Pekka> [T/fin [<D Pekka> [sano- [etta [T/fin [v [haluaa [A/inf lahtea]]]]]]]]]
		Grammar: [<D Pekka>:1 [T/fin [<__>:1 [sano- [etta [T/fin [v [haluaa [A/inf lahtea]]]]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [V [ [TT/fin [v [V [INF V]]]]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:FI', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'TAIL:ARG,VAL,CAT:FIN', 'VAL', 'null']
Pekka:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:FI', 'LF:Pekka', 'PF:Pekka', 'SPEC:A', 'null']
sano-:['!COMP:FORCE', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:FI', 'LF:say', 'PF:sano-', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']
etta:['!COMP:*', '!PROBE:CAT:T/fin', '-ARG', '-SPEC:*', '-VAL', 'CAT:-ARG', 'CAT:-ARG/FIN/FORCE', 'CAT:FIN', 'CAT:FORCE', 'LANG:FI', 'LF:that', 'PF:etta']
T/fin:['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', 'ARG', 'CAT:ARG', 'CAT:ARG/ARG/FIN/T/T/fin/FIN/T/T/fin', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:T', 'PF:T/fin', 'PHI:DET:_', 'PHI:NUM:SG', 'PHI:PER:3', 'SPEC:*', 'SPEC:TO/inf', 'VAL']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:FI', 'LF:v', 'PF:v', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_']
haluaa:['!COMP:*', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:A/inf', 'COMP:D', 'COMP:P', 'LANG:FI', 'LF:want', 'PF:haluaa', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
A/inf:['!COMP:*', '!PROBE:CAT:V', '-ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:A/inf', 'CAT:A/inf/INF', 'CAT:INF', 'COMP:V', 'COMP:v', 'LANG:FI', 'LF:A/inf', 'PF:A/inf']
lahtea:['-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'COMP:PP', 'LANG:FI', 'LF:leave', 'PF:lahtea', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf']

D: [D];  Pekka: [N, D];  T/fin: [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  sano-: [V, TT/fin];  etta: [, V, TT/fin];  T/fin: [TT/fin, , V, TT/fin];  v: [v, TT/fin, , V, TT/fin];  haluaa: [V, v, TT/fin, , V, TT/fin];  A/inf: [INF, V, v, TT/fin, , V, TT/fin];  lahtea: [V, INF, V, v, TT/fin, , V, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "lahte-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "lahtea".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "halua-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "haluaa".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "etta".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sano-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "T/fin$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sanoo".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "nom$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Pekka".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 79
['John', "admire'", 'Mary']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ["T/fin'$", "v'$", 'admire-']

	8. Consume "T/fin'"

		D{N} + T/fin'
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin']
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin']

	9. Consume "v"

		[[D John] T/fin'] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin' because they are inside the same phonological word.
			=[[D John] T/fin'{v}]

	10. Consume "admire"

		[[D John] T/fin'{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into v because they are inside the same phonological word.
			=[[D John] T/fin'{v,V}]

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

	11. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	12. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	13. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	14. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	15. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	16. Consume "D"

		[[D John] T/fin'{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				admire (admire) is missing complement D
				Avoid [[D John] [T/fin' [[D John] [v admire]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin'{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[D John] T/fin'{v,V}] + D = -197]
				T/fin'{v,V} + D = 206]
		Ranking completed:
			1. [T/fin'{v,V}; D]
			2. [[[D John] T/fin'{v,V}]; D]
			Exploring solution number (1) =[T/fin'{v,V} D]
				1. Head movement reconstruction:
				=T/fin'{v,V}
				2. Feature processing:
				=T/fin'{v,V}
				3. Extraposition:
				=T/fin'{v,V}
				4. Floater movement reconstruction:
				=T/fin'{v,V}
				5. Phrasal movement reconstruction:
				=T/fin'{v,V}
				6. Agreement reconstruction:
				=T/fin'{v,V}
				7. Last resort extraposition:
				T/fin'{v,V} probing for CAT:V failed.
				"T/fin'{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin'{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin'{v,V} D]]

	17. Consume "Mary"

		[[D John] [T/fin'{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[D John] [T/fin'{v,V} D{N}]]

	>>>	Trying candidate spellout structure [[D John] [T/fin'{v,V} D{N}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin'
					=[[D John] [T/fin' [v{V} D{N}]]]
					Target admire in v
					=[[D John] [T/fin' [v [admire D{N}]]]]
				=[[D John] [T/fin' [v [admire [D Mary]]]]]
				2. Feature processing:
				=[[D John] [T/fin' [v [admire [D Mary]]]]]
				3. Extraposition:
				=[[D John] [T/fin' [v [admire [D Mary]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin' [v [admire [D Mary]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:196 [T/fin' [__:196 [v [admire [D Mary]]]]]]
				6. Agreement reconstruction:
				=[[D John]:196 [T/fin' [__:196 [v [admire [D Mary]]]]]]
				7. Last resort extraposition:
			= [[D John] [T/fin' [[D John] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Transferring [[D John]:196 [T/fin' [__:196 [v [admire [D Mary]]]]]] into the conceptual-intentional system...
				T/fin' with ['PHI:PER:_'] was associated at LF with:
				v with ['PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: )
				admire with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: 2. [D John] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', "T/fin'(discourse antecedent)", 'admire([D Mary])', 'v([D John])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D John] [T/fin' [[D John] [v [admire [D Mary]]]]]]
		Grammar: [[D John]:1 [T/fin' [__:1 [v [admire [D Mary]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin':['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'NO_DET', 'NO_NUMBER', "PF:T/fin'", 'PHI:GEN:_', 'PHI:PER:_', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'NO_DET', 'NO_NUMBER', 'PF:v', 'PHI:GEN:_', 'PHI:PER:_']
admire:['!COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D];  John: [N, D];  T/fin': [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  admire: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Mary: [N, D, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin'{v,V}] D]
				1. Head movement reconstruction:
				=[[D John] [T/fin' [v admire]]]
				2. Feature processing:
				=[[D John] [T/fin' [v admire]]]
				3. Extraposition:
				=[[D John] [T/fin' [v admire]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin' [v admire]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:197 [T/fin' [__:197 [v admire]]]]
				6. Agreement reconstruction:
				=[[D John]:197 [T/fin' [__:197 [v admire]]]]
				7. Last resort extraposition:
				admire (admire) is missing complement D
					Last resort extraposition will be tried on [[D John]:197 [T/fin' [__:197 [v admire]]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:197 [T/fin' [__:197 [v admire]]]] D]

	18. Consume "Mary"

		[[[D John] [T/fin' [[D John] [v admire]]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[[D John]:197 [T/fin' [__:197 [v admire]]]] D{N}]

	>>>	Trying candidate spellout structure [[[D John] [T/fin' [[D John] [v admire]]]] D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:197 [T/fin' [__:197 [v admire]]]] [D Mary]]
				2. Feature processing:
				=[[[D John]:197 [T/fin' [__:197 [v admire]]]] [D Mary]]
				3. Extraposition:
				=[[[D John]:197 [T/fin' [__:197 [v admire]]]] [D Mary]]
				4. Floater movement reconstruction:
				=[[[D John]:197 [T/fin' [__:197 [v admire]]]] [D Mary]]
				5. Phrasal movement reconstruction:
				=[[[D John]:197 [T/fin' [__:197 [v admire]]]] [D Mary]]
				6. Agreement reconstruction:
				=[[[D John]:197 [T/fin' [__:197 [v admire]]]] [D Mary]]
				7. Last resort extraposition:
				admire (admire) is missing complement D
				D has unacceptable specifier [[D John]:197 [T/fin' [__:197 [v admire]]]].
					Last resort extraposition will be tried on [[[D John]:197 [T/fin' [__:197 [v admire]]]] [D Mary]].
					<D Mary> was made an adjunct.
					<D Mary> is transferred to LF as a phase.
				admire (admire) is missing complement D
					Something is still wrong. The structure is still uninterpretable.
			= [[[D John] [T/fin' [[D John] [v admire]]]] <D Mary>]
		Checking LF-interface conditions.
				admire (admire) is missing complement D
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin':['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'NO_DET', 'NO_NUMBER', "PF:T/fin'", 'PHI:GEN:_', 'PHI:PER:_', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'NO_DET', 'NO_NUMBER', 'PF:v', 'PHI:GEN:_', 'PHI:PER:_']
admire:['!COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D];  John: [N, D];  T/fin': [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  admire: [V, v, TT/fin];  D: [D];  Mary: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "admire-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v'$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "admire'".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 80
["admire'", 'Mary']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ["T/fin'$", "v'$", 'admire-']
			=T/fin'

	2. Consume "v"

		T/fin' + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin' because they are inside the same phonological word.
			=T/fin'{v}

	3. Consume "admire"

		T/fin'{v} + admire
			Filtering out impossible merge sites...
			Sink "admire" into v because they are inside the same phonological word.
			=T/fin'{v,V}

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

	4. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	5. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	6. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	7. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	8. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	9. Consume "D"

		T/fin'{v,V} + D
			Filtering out impossible merge sites...
			Exploring solution number (1) =[T/fin'{v,V} D]
				1. Head movement reconstruction:
				=T/fin'{v,V}
				2. Feature processing:
				=T/fin'{v,V}
				3. Extraposition:
				=T/fin'{v,V}
				4. Floater movement reconstruction:
				=T/fin'{v,V}
				5. Phrasal movement reconstruction:
				=T/fin'{v,V}
				6. Agreement reconstruction:
				=T/fin'{v,V}
				7. Last resort extraposition:
				T/fin'{v,V} probing for CAT:V failed.
				"T/fin'{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin'{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[T/fin'{v,V} D]

	10. Consume "Mary"

		[T/fin'{v,V} D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[T/fin'{v,V} D{N}]

	>>>	Trying candidate spellout structure [T/fin'{v,V} D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin'
					=[T/fin' [v{V} D{N}]]
					Target admire in v
					=[T/fin' [v [admire D{N}]]]
				=[T/fin' [v [admire [D Mary]]]]
				2. Feature processing:
				=[T/fin' [v [admire [D Mary]]]]
				3. Extraposition:
				=[T/fin' [v [admire [D Mary]]]]
				4. Floater movement reconstruction:
				=[T/fin' [v [admire [D Mary]]]]
				5. Phrasal movement reconstruction:
				=[T/fin' [v [admire [D Mary]]]]
				6. Agreement reconstruction:
				=[T/fin' [v [admire [D Mary]]]]
				7. Last resort extraposition:
			= [T/fin' [v [admire [D Mary]]]]
		Checking LF-interface conditions.
			Transferring [T/fin' [v [admire [D Mary]]]] into the conceptual-intentional system...
				T/fin' with ['PHI:PER:_'] was associated at LF with:
				v with ['PHI:PER:_'] was associated at LF with:
				admire with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', "T/fin'(discourse antecedent)", 'admire([D Mary])', 'v(discourse antecedent)']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[T/fin' [v [admire [D Mary]]]]
		Grammar: [T/fin' [v [admire [D Mary]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
----------------------------------------------------------------------------------------------------------
T/fin':['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'NO_DET', 'NO_NUMBER', "PF:T/fin'", 'PHI:GEN:_', 'PHI:PER:_', 'SPEC:TO/inf']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'NO_DET', 'NO_NUMBER', 'PF:v', 'PHI:GEN:_', 'PHI:PER:_']
admire:['!COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

T/fin': [TT/fin];  v: [v, TT/fin];  admire: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Mary: [N, D, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "admire-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v'$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "admire'".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 81
['John', "admire''", 'Mary']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ['m$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'John-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:M'] into working memory.

	1. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	2. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	3. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	4. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	5. Consume "D$"
		Adding inflectional features {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG'} to D
			=D

	7. Consume "John"

		D + John
			Filtering out impossible merge sites...
			Sink "John" into D because they are inside the same phonological word.
			=D{N}

		Next word contains multiple morphemes ["T/fin''$", "v'$", 'admire-']

	8. Consume "T/fin''"

		D{N} + T/fin''
			Filtering out impossible merge sites...
			Exploring solution number (1) =[D{N} T/fin'']
				1. Head movement reconstruction:
					D was opened into [D John].
				=[D John]
				2. Feature processing:
				=[D John]
				3. Extraposition:
				=[D John]
				4. Floater movement reconstruction:
				=[D John]
				5. Phrasal movement reconstruction:
				=[D John]
				6. Agreement reconstruction:
				=[D John]
				7. Last resort extraposition:
			=[[D John] T/fin'']

	9. Consume "v"

		[[D John] T/fin''] + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin'' because they are inside the same phonological word.
			=[[D John] T/fin''{v}]

	10. Consume "admire"

		[[D John] T/fin''{v}] + admire
			Filtering out impossible merge sites...
			Sink "admire" into v because they are inside the same phonological word.
			=[[D John] T/fin''{v,V}]

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

	11. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	12. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	13. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	14. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	15. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	16. Consume "D"

		[[D John] T/fin''{v,V}] + D
			Filtering out impossible merge sites...
			Ranking remaining sites...
				Avoid TT/finP as SPEC, D.
				admire (admire) is missing complement D
				Avoid [[D John] [T/fin'' [[D John] [v admire]]]] as left branch because it constitutes illicit structure.
				Prioritize [T/fin''{v,V} D] due to complement selection.
				Prioritize [admire D] due to complement selection.
				[[D John] T/fin''{v,V}] + D = -197]
				T/fin''{v,V} + D = 206]
		Ranking completed:
			1. [T/fin''{v,V}; D]
			2. [[[D John] T/fin''{v,V}]; D]
			Exploring solution number (1) =[T/fin''{v,V} D]
				1. Head movement reconstruction:
				=T/fin''{v,V}
				2. Feature processing:
				=T/fin''{v,V}
				3. Extraposition:
				=T/fin''{v,V}
				4. Floater movement reconstruction:
				=T/fin''{v,V}
				5. Phrasal movement reconstruction:
				=T/fin''{v,V}
				6. Agreement reconstruction:
				=T/fin''{v,V}
				7. Last resort extraposition:
				T/fin''{v,V} probing for CAT:V failed.
				"T/fin''{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin''{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[[D John] [T/fin''{v,V} D]]

	17. Consume "Mary"

		[[D John] [T/fin''{v,V} D]] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[D John] [T/fin''{v,V} D{N}]]

	>>>	Trying candidate spellout structure [[D John] [T/fin''{v,V} D{N}]]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin''
					=[[D John] [T/fin'' [v{V} D{N}]]]
					Target admire in v
					=[[D John] [T/fin'' [v [admire D{N}]]]]
				=[[D John] [T/fin'' [v [admire [D Mary]]]]]
				2. Feature processing:
				=[[D John] [T/fin'' [v [admire [D Mary]]]]]
				3. Extraposition:
				=[[D John] [T/fin'' [v [admire [D Mary]]]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin'' [v [admire [D Mary]]]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:200 [T/fin'' [__:200 [v [admire [D Mary]]]]]]
				6. Agreement reconstruction:
				=[[D John]:200 [T/fin'' [__:200 [v [admire [D Mary]]]]]]
				7. Last resort extraposition:
			= [[D John] [T/fin'' [[D John] [v [admire [D Mary]]]]]]
		Checking LF-interface conditions.
			Transferring [[D John]:200 [T/fin'' [__:200 [v [admire [D Mary]]]]]] into the conceptual-intentional system...
				v with ['PHI:PER:_'] was associated at LF with:
					1. [D John]    (alternatives: 2. T/fin'' )
				admire with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: 2. [D John] )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'admire([D Mary])', 'v([D John])']
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[[D John] [T/fin'' [[D John] [v [admire [D Mary]]]]]]
		Grammar: [[D John]:1 [T/fin'' [__:1 [v [admire [D Mary]]]]]]
		Spellout TT/finP = [DP:1 [TT/fin [__:1 [v [V [D N]]]]]]
----------------------------------------------------------------------------------------------------------
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin'':['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'NO_DET', 'NO_NUMBER', 'NO_PERSON', "PF:T/fin''", 'PHI:GEN:_', 'PHI:PER:3', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'NO_DET', 'NO_NUMBER', 'PF:v', 'PHI:GEN:_', 'PHI:PER:_']
admire:['!COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D];  John: [N, D];  T/fin'': [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  admire: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Mary: [N, D, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

			Exploring solution number (2) =[[[D John] T/fin''{v,V}] D]
				1. Head movement reconstruction:
				=[[D John] [T/fin'' [v admire]]]
				2. Feature processing:
				=[[D John] [T/fin'' [v admire]]]
				3. Extraposition:
				=[[D John] [T/fin'' [v admire]]]
				4. Floater movement reconstruction:
				=[[D John] [T/fin'' [v admire]]]
				5. Phrasal movement reconstruction:
					[D John] will undergo A-reconstruction.
				=[[D John]:201 [T/fin'' [__:201 [v admire]]]]
				6. Agreement reconstruction:
				=[[D John]:201 [T/fin'' [__:201 [v admire]]]]
				7. Last resort extraposition:
				admire (admire) is missing complement D
					Last resort extraposition will be tried on [[D John]:201 [T/fin'' [__:201 [v admire]]]].
					No suitable node for extraposition found. No action was taken.
			=[[[D John]:201 [T/fin'' [__:201 [v admire]]]] D]

	18. Consume "Mary"

		[[[D John] [T/fin'' [[D John] [v admire]]]] D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[[[D John]:201 [T/fin'' [__:201 [v admire]]]] D{N}]

	>>>	Trying candidate spellout structure [[[D John] [T/fin'' [[D John] [v admire]]]] D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
				=[[[D John]:201 [T/fin'' [__:201 [v admire]]]] [D Mary]]
				2. Feature processing:
				=[[[D John]:201 [T/fin'' [__:201 [v admire]]]] [D Mary]]
				3. Extraposition:
				=[[[D John]:201 [T/fin'' [__:201 [v admire]]]] [D Mary]]
				4. Floater movement reconstruction:
				=[[[D John]:201 [T/fin'' [__:201 [v admire]]]] [D Mary]]
				5. Phrasal movement reconstruction:
				=[[[D John]:201 [T/fin'' [__:201 [v admire]]]] [D Mary]]
				6. Agreement reconstruction:
				=[[[D John]:201 [T/fin'' [__:201 [v admire]]]] [D Mary]]
				7. Last resort extraposition:
				admire (admire) is missing complement D
				D has unacceptable specifier [[D John]:201 [T/fin'' [__:201 [v admire]]]].
					Last resort extraposition will be tried on [[[D John]:201 [T/fin'' [__:201 [v admire]]]] [D Mary]].
					<D Mary> was made an adjunct.
					<D Mary> is transferred to LF as a phase.
				admire (admire) is missing complement D
					Something is still wrong. The structure is still uninterpretable.
			= [[[D John] [T/fin'' [[D John] [v admire]]]] <D Mary>]
		Checking LF-interface conditions.
				admire (admire) is missing complement D
			LF-interface condition(s) violated
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A']
T/fin'':['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'NO_DET', 'NO_NUMBER', 'NO_PERSON', "PF:T/fin''", 'PHI:GEN:_', 'PHI:PER:3', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:M', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL', 'null']
John:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:John', 'PF:John', 'SPEC:A', 'null']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'NO_DET', 'NO_NUMBER', 'PF:v', 'PHI:GEN:_', 'PHI:PER:_']
admire:['!COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

D: [D];  John: [N, D];  T/fin'': [TT/fin];  __: [D, TT/fin];  __: [N, D, TT/fin];  v: [v, TT/fin];  admire: [V, v, TT/fin];  D: [D];  Mary: [N, D];  

		Trying to find other solutions...
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "admire-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v'$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "admire''".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "John".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)



\========================================================================
# 82
["admire''", 'Mary']
Using lexicon "language data working directory\study-3_2020-control\lexicon.txt".

			=None

		Next word contains multiple morphemes ["T/fin''$", "v'$", 'admire-']
			=T/fin''

	2. Consume "v"

		T/fin'' + v
			Filtering out impossible merge sites...
			Sink "v" into T/fin'' because they are inside the same phonological word.
			=T/fin''{v}

	3. Consume "admire"

		T/fin''{v} + admire
			Filtering out impossible merge sites...
			Sink "admire" into v because they are inside the same phonological word.
			=T/fin''{v,V}

		Next word contains multiple morphemes ['f$', 'hum$', 'def$', '3p$', 'sg$', 'D$', 'Mary-']
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:GEN:F'] into working memory.

	4. Consume "hum$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:HUM:HUM'] into working memory.

	5. Consume "def$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:DET:DEF'] into working memory.

	6. Consume "3p$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:PER:3'] into working memory.

	7. Consume "sg$"
		Storing inflectional feature ['-', 'LANG:EN', 'PHI:NUM:SG'] into working memory.

	8. Consume "D$"
		Adding inflectional features {'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:EN', '-', 'PHI:PER:3', 'PHI:NUM:SG'} to D

	9. Consume "D"

		T/fin''{v,V} + D
			Filtering out impossible merge sites...
			Exploring solution number (1) =[T/fin''{v,V} D]
				1. Head movement reconstruction:
				=T/fin''{v,V}
				2. Feature processing:
				=T/fin''{v,V}
				3. Extraposition:
				=T/fin''{v,V}
				4. Floater movement reconstruction:
				=T/fin''{v,V}
				5. Phrasal movement reconstruction:
				=T/fin''{v,V}
				6. Agreement reconstruction:
				=T/fin''{v,V}
				7. Last resort extraposition:
				T/fin''{v,V} probing for CAT:V failed.
				"T/fin''{v,V}" lacks complement.
					Last resort extraposition will be tried on T/fin''{v,V}.
					No suitable node for extraposition found. No action was taken.
			=[T/fin''{v,V} D]

	10. Consume "Mary"

		[T/fin''{v,V} D] + Mary
			Filtering out impossible merge sites...
			Sink "Mary" into D because they are inside the same phonological word.
			=[T/fin''{v,V} D{N}]

	>>>	Trying candidate spellout structure [T/fin''{v,V} D{N}]
		Checking surface conditions...
		Reconstructing...
				1. Head movement reconstruction:
					Target v{V} in T/fin''
					=[T/fin'' [v{V} D{N}]]
					Target admire in v
					=[T/fin'' [v [admire D{N}]]]
				=[T/fin'' [v [admire [D Mary]]]]
				2. Feature processing:
				=[T/fin'' [v [admire [D Mary]]]]
				3. Extraposition:
				=[T/fin'' [v [admire [D Mary]]]]
				4. Floater movement reconstruction:
				=[T/fin'' [v [admire [D Mary]]]]
				5. Phrasal movement reconstruction:
				=[T/fin'' [v [admire [D Mary]]]]
				6. Agreement reconstruction:
				=[T/fin'' [v [admire [D Mary]]]]
				7. Last resort extraposition:
			= [T/fin'' [v [admire [D Mary]]]]
		Checking LF-interface conditions.
			Transferring [T/fin'' [v [admire [D Mary]]]] into the conceptual-intentional system...
				v with ['PHI:PER:_'] was associated at LF with:
					1. T/fin''    (alternatives: )
				admire with ['PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_'] was associated at LF with:
					1. [D Mary]    (alternatives: )
				Transfer to C-I successful.
				Semantic interpretation/predicates and arguments: ['Interpretation successful', 'admire([D Mary])', "v(T/fin'')"]
----------------------------------------------------------------------------------------------------------
                                              All tests passed                                           
----------------------------------------------------------------------------------------------------------
		Solution:
		[T/fin'' [v [admire [D Mary]]]]
		Grammar: [T/fin'' [v [admire [D Mary]]]]
		Spellout TT/finP = [TT/fin [v [V [D N]]]]
----------------------------------------------------------------------------------------------------------
T/fin'':['!COMP:*', '!PROBE:CAT:V', '!SPEC:*', '-SPEC:FORCE', '-SPEC:N', '-SPEC:T/fin', '-SPEC:V', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/FIN/T/T/fin', 'CAT:FIN', 'CAT:T', 'CAT:T/fin', 'COMP:D', 'COMP:V', 'COMP:v', 'LANG:EN', 'LF:T', 'NO_DET', 'NO_NUMBER', 'NO_PERSON', "PF:T/fin''", 'PHI:GEN:_', 'PHI:PER:3', 'SPEC:TO/inf']
v:['!COMP:*', '!PROBE:CAT:V', '!SPEC:D', '-SPEC:N', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/v', 'CAT:v', 'COMP:V', 'LANG:EN', 'LF:v', 'NO_DET', 'NO_NUMBER', 'PF:v', 'PHI:GEN:_', 'PHI:PER:_']
admire:['!COMP:D', '-COMP:N', '-COMP:T/fin', '-COMP:V', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ARG', 'CAT:ARG', 'CAT:ARG/V', 'CAT:V', 'COMP:P', 'LANG:EN', 'LF:admire', 'PF:admire', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf']
D:['!COMP:*', '!PROBE:CAT:N', '-', '-ARG', '-COMP:T/fin', '-COMP:uR', '-SPEC:D', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:V', 'CAT:-ARG', 'CAT:-ARG/-ARG/D/D', 'CAT:-ARG/D', 'CAT:D', 'COMP:N', 'LANG:EN', 'LF:D', 'PF:D', 'PHI:DET:DEF', 'PHI:GEN:F', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:3', 'VAL']
Mary:['-COMP:ADV', '-COMP:AUX', '-COMP:D', '-COMP:N', '-COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:WH', '-COMP:v', '-SEM:directional', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:N', '-SPEC:P', '-SPEC:R', '-SPEC:T/fin', '-SPEC:V', '-SPEC:uWH', 'CAT:N', 'COMP:R', 'COMP:R/D', 'COMP:uR', 'LANG:EN', 'LF:Mary', 'PF:Mary', 'SPEC:A']

T/fin'': [TT/fin];  v: [v, TT/fin];  admire: [V, v, TT/fin];  D: [D, V, v, TT/fin];  Mary: [N, D, V, v, TT/fin];  
			Checking if the sentence is ambiguous...
		I have now explored all solutions for "Mary-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "D$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "sg$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "3p$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "def$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "hum$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "Mary".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "admire-".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "v'$".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

		I have now explored all solutions for "admire''".
		Going one step backwards and taking another solution from previous ranking list........

		(backtracking...)

