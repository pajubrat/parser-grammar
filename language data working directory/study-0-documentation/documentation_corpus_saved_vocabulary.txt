ï»¿dummy        {'dummy', 'LANG:X'}
a               {'LF:to', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', '-SPEC:Neg/fin', 'COMP:ARE/inf', 'P', '-SPEC:N', 'adjoinable', 'PF:a', '-SPEC:v', '-VAL', '-SPEC:iR', '!COMP:D', '-SPEC:*', '-SPEC:INF', '-COMP:N', '-SPEC:T/fin', '!COMP:*', '-SPEC:C/fin', '-COMP:ADV', '-ARG', '-COMP:T/fin', 'LANG:IT', '-SPEC:FORCE', '-COMP:uWH', '-SPEC:iWH'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'CLASS:TR', 'COMP:P', 'V', '-COMP:P', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', '-SPEC:Neg', 'SPEC:P', '-COMP:Neg', '-VAL', 'LF:admire', '-COMP:v', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:admire', '!COMP:*', 'SPEC:ADV', 'COMP:D', '-SPEC:FORCE', '-COMP:T', 'LANG:X'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'COMP:P', 'V', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'SPEC:P', '-VAL', 'PF:adora', '-COMP:v', 'LF:admire', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:D', 'LANG:IT', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV'}
anta-           {'COMP:P', 'V', 'PF:antaa', '-COMP:P', 'SPEC:TO/inf', 'ARG', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'CLASS:DITR', 'PHI:NUM:_', '+SEM:directional', 'LANG:FI', '!COMP:*', 'LF:give', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV', 'SPEC:D', '-COMP:FIN'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'COMP:P', 'V', 'LANG:EN', 'SEM:internal', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'SPEC:P', 'PF:ask', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:D', 'LF:ask', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV', 'SPEC:D'}
ask-            {'COMP:P', 'V', 'LANG:EN', 'SEM:internal', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'SPEC:P', 'PF:ask', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:D', 'LF:ask', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV', 'SPEC:D'}
avain_0acc      ['LANG:X']
avain_nom       ['LANG:X']
avain           ['LANG:X']
avaimen_acc     ['LANG:X']
avaimen         ['LANG:X']
avaimet         ['LANG:X']
avain-          {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', 'LF:key', '-SPEC:P', '-COMP:P', '-SPEC:N', 'PF:avain', 'SPEC:A', '-SEM:directional', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', 'LF:car', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', 'SPEC:A', '-SEM:directional', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', 'PF:auto', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
city            {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', 'LANG:EN', '-COMP:P', '-SPEC:N', 'SPEC:A', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'PF:city', 'N', 'COMP:uR', '-COMP:D', '-SPEC:T/fin', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', 'LF:city', '-SPEC:R'}
detesto         ['LANG:IT']
detest-         {'COMP:P', 'V', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:D', 'SEM:external', 'LANG:IT', 'LF:detest', 'PF:detest', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV'}
devono          ['LANG:X']
deva-           {'COMP:P', 'V', '-ASP', 'COMP:ARE/inf', 'SEM:internal', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'LF:must', '-COMP:N', '-SPEC:T/fin', 'PF:deva', 'PHI:NUM:_', 'LANG:IT', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV', 'SPEC:D'}
does            {'COMP:Neg', '!SPEC:*', '-SPEC:V', 'LANG:EN', 'COMP:v', '-SPEC:N', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'COMP:T/prt', '!SPEC:D', '-SPEC:v', 'VAL', 'PHI:DET:_', 'FIN', 'PHI:PER:_', '-SPEC:T/fin', 'PF:does', 'PHI:PER:3', 'PHI:NUM:SG', 'PHI:NUM:_', '!COMP:*', '!PROBE:V', 'COMP:D', '-SPEC:C/fin', 'SPEC:*', 'PHI:GEN:F', '-SPEC:FORCE', 'T/fin', 'PHI:GEN:M', 'SPEC:D', 'T', 'COMP:V', 'LF:does'}
does_C          ['LANG:EN']
does-           {'COMP:Neg', '!SPEC:*', '-SPEC:V', 'LANG:EN', 'COMP:v', '-SPEC:N', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'COMP:T/prt', '!SPEC:D', '-SPEC:v', 'VAL', 'PHI:DET:_', 'FIN', 'PHI:PER:_', '-SPEC:T/fin', 'PF:does', 'PHI:PER:3', 'PHI:NUM:SG', 'PHI:NUM:_', '!COMP:*', '!PROBE:V', 'COMP:D', '-SPEC:C/fin', 'SPEC:*', 'PHI:GEN:F', '-SPEC:FORCE', 'T/fin', 'PHI:GEN:M', 'SPEC:D', 'T', 'COMP:V', 'LF:does'}
dorme           ['LANG:IT']
dorme-          {'COMP:P', 'V', 'SPEC:TO/inf', '!SPEC:D', 'ARG', 'PHI:GEN:_', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'LF:sleep', 'PHI:NUM:_', 'LANG:X', '-SPEC:FORCE', '-COMP:T', 'PF:dorme', 'SPEC:ADV'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
e-              {'!COMP:T', '!SPEC:*', '%SPEC:INF', 'PF:ei', 'NEG', 'SEM:internal', 'ARG', 'COMP:T/prt', '-SPEC:T', 'VAL', 'PHI:DET:_', 'FIN', 'PHI:PER:_', '-SPEC:T/fin', 'LF:neg', 'PHI:NUM:_', '!COMP:*', 'LANG:FI', 'SPEC:*', 'POL:NEG', 'Neg/fin'}
etsii           ['LANG:FI']
etsi-           {'COMP:P', 'V', 'LF:search', 'SPEC:TO/inf', 'ARG', 'SPEC:P', '!COMP:D', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'LANG:FI', 'SPEC:ADV', 'COMP:D', '-SPEC:FORCE', '-COMP:T', 'PF:etsi'}
etta            {'-SPEC:*', 'LF:that', 'LANG:FI', '!COMP:*', '-ARG', 'COMP:C/fin', 'FORCE', '-VAL', 'PF:ettÃ¤', 'FIN', '!PROBE:T/fin', 'COMP:T/fin'}
flow'           {'COMP:P', 'V', 'LANG:EN', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'PF:flow', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', 'LF:flow', '-SPEC:T/fin', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV', 'SPEC:D'}
from            {'LF:from', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', '-SPEC:Neg/fin', 'P', 'LANG:EN', '-SPEC:N', 'ARG', 'PHI:GEN:_', 'adjoinable', '-SPEC:v', '-VAL', '-SPEC:iR', '!COMP:D', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:INF', '-SPEC:*', '-COMP:N', '-SPEC:T/fin', '-COMP:uWH', '+SEM:directional', '!COMP:*', 'PHI:NUM:_', '-SPEC:C/fin', 'PF:from', '-COMP:ADV', '-COMP:T/fin', '-SPEC:FORCE', 'TAIL:V,+SEM:directional', '-SPEC:iWH'}
gave            ['LANG:EN']
give-           {'COMP:P', 'V', 'LANG:EN', '-COMP:P', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'CLASS:DITR', 'PHI:NUM:_', '+SEM:directional', '!COMP:*', 'LF:give', '-SPEC:FORCE', '-COMP:T', 'PF:give', 'SPEC:ADV', 'SPEC:D', '-COMP:FIN'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', 'PF:Giuseppe', '-SPEC:P', '-COMP:P', '-SPEC:N', 'SPEC:A', '-SEM:directional', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', 'LANG:IT', '-COMP:A', 'COMP:R', 'LF:Giuseppe', '-SPEC:FORCE', '-SPEC:R'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
halua-          {'CLASS:TR', 'COMP:P', 'V', 'COMP:A/inf', '-COMP:P', 'SEM:internal', 'SPEC:TO/inf', 'ARG', 'SPEC:P', 'PF:haluaa', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'LANG:FI', '!COMP:*', 'COMP:D', 'SPEC:ADV', '-SPEC:FORCE', '-COMP:T', 'LF:want'}
hairitsee       ['LANG:FI']
hairitse-       {'COMP:P', 'V', 'PF:hairitsee', 'LF:disturb', 'SPEC:TO/inf', 'ARG', 'SPEC:P', '!COMP:D', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'LANG:FI', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV', 'SPEC:D', '-COMP:FIN'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'COMP:P', 'V', '-ASP', 'SEM:internal', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'LF:have', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:ha', 'LANG:IT', 'COMP:T', '-SPEC:FORCE', 'SPEC:ADV', 'SPEC:D'}
havisi          ['LANG:FI']
havia-          {'COMP:P', 'V', 'SPEC:TO/inf', 'ARG', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', '-COMP:D', 'PHI:NUM:_', 'LANG:FI', 'CLASS:INTR', 'LF:disappear', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV', 'SPEC:D', 'PF:havia'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'CLASS:TR', 'COMP:P', 'V', 'PF:ihaile-', '-COMP:P', 'SPEC:TO/inf', 'ARG', 'SPEC:P', '!COMP:D', '-VAL', 'LF:admire', '-COMP:v', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'LANG:FI', '!COMP:*', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV', '-COMP:FIN'}
is              ['LANG:EN']
be-             {'COMP:P', 'V', 'LANG:EN', 'SPEC:TO/inf', 'COPULA', 'PF:be', 'SPEC:P', '-VAL', '-COMP:v', 'LF:be', '-COMP:V', 'ASP', '-COMP:TO/inf', '-COMP:N', '-SPEC:T/fin', '!COMP:*', '-ARG', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV', 'SPEC:D'}
istuuko         ['LANG:FI']
istuu-          {'COMP:P', 'LF:sit', 'V', 'SPEC:TO/inf', 'ARG', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', '-COMP:D', 'PHI:NUM:_', 'PF:istuu', 'LANG:FI', 'CLASS:INTR', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV', 'SPEC:D'}
John            ['LANG:EN']
John-           {'-SPEC:uWH', '-COMP:WH', 'LF:John', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', 'LANG:EN', '-COMP:P', '-SPEC:N', '-adjoinable', 'SPEC:A', '-SEM:directional', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', 'PF:John', '-SPEC:R'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-SPEC:uWH', '-COMP:WH', 'LF:Jukka', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', 'SPEC:A', '-SEM:directional', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', 'PF:Jukka'}
juosten         ['LANG:FI']
juokse-         {'COMP:P', 'PF:juokse-', 'V', 'LF:run', 'SPEC:TO/inf', 'ARG', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'LANG:FI', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV'}
istuu           ['LANG:FI']
istu-           {'COMP:P', 'LF:sit', 'V', 'SPEC:TO/inf', 'ARG', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:istuu', 'LANG:FI', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV'}
kaupunkia       ['LANG:X']
kaupunki        {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', 'SPEC:A', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', 'LF:city', 'PF:kaupunki', '-SPEC:R'}
kaskee          ['LANG:FI']
kaske-          {'COMP:P', 'V', 'SPEC:TO/inf', 'ARG', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '!COMP:A/inf', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'LANG:FI', 'SEM:external', '-SPEC:FORCE', '-COMP:T', 'PF:kaske', 'LF:order', 'SPEC:ADV'}
kellon          ['LANG:FI']
kello           ['LANG:FI']
kello-          {'PF:kello', '2SPEC', '0', 'LANG:FI', 'LF:watch', 'SPEC:D'}
key             {'-SPEC:uWH', '-COMP:WH', 'PF:key', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', 'LF:key', '-SPEC:P', 'LANG:EN', '-COMP:P', '-SPEC:N', 'SPEC:A', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
keta            ['LANG:FI']
keta            ['LANG:FI']
keta-           {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', '-COMP:*', 'SPEC:A', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', 'LF:who', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', 'PHI_N', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'PF:keta', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
kirja-          {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', 'SPEC:A', '-SEM:directional', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', 'LF:book', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', 'PF:kirja', '-SPEC:R'}
kirjan          ['LANG:FI']
kohti           {'-SPEC:V', '-SPEC:P', '-SPEC:ADV', '-SPEC:Neg/fin', 'LF:towards', 'P', '-SPEC:N', 'TAIL:V', 'ARG', 'adjoinable', '-SPEC:v', 'PF:kohti', '-SPEC:iR', '-VAL', '!COMP:D', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:INF', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'LANG:FI', '!COMP:*', '-SPEC:C/fin', 'SPEC:*', '-COMP:ADV', '-COMP:T/fin', '-SPEC:FORCE', '-COMP:uWH', '-SPEC:iWH'}
kenen           ['LANG:FI']
kuka            ['LANG:FI']
kuka-           {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', 'SPEC:A', '-COMP:AUX', 'PHI', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', 'LF:who', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', 'PF:kuka', '-SPEC:R'}
kuorsaa-        {'-COMP:WH', 'COMP:P', 'V', 'LF:snore', 'PF:kuorsaa', 'SPEC:TO/inf', 'ARG', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-COMP:D', '-SPEC:T/fin', 'PHI:NUM:_', 'LANG:FI', '-COMP:T/fin', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV'}
kuorsaamalla    ['LANG:FI']
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'COMP:P', 'PF:lahtea', 'V', 'SPEC:TO/inf', 'ARG', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', '-COMP:D', 'PHI:NUM:_', 'LANG:FI', 'SPEC:ADV', 'CLASS:INTR', 'COMP:PP', '-SPEC:FORCE', '-COMP:T', 'LF:leave', 'SPEC:D'}
lavano          ['LANG:IT']
lava-           {'COMP:P', 'LF:wash', 'V', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', 'PF:lava', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', '!COMP:*', 'COMP:D', 'LANG:IT', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
leaves          ['LANG:EN']
leave           {'COMP:P', 'V', 'LANG:EN', 'SPEC:TO/inf', '!SPEC:D', 'PF:leave', 'ARG', 'PHI:GEN:_', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'LF:leave', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV'}
leave-          {'COMP:P', 'V', 'LANG:EN', 'SPEC:TO/inf', '!SPEC:D', 'PF:leave', 'ARG', 'PHI:GEN:_', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'LF:leave', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV'}
like-           {'COMP:P', 'V', 'LANG:EN', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'SPEC:P', '-VAL', '!COMP:D', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'LF:like', '-SPEC:FORCE', 'PF:like', '-COMP:T', 'SPEC:ADV'}
likes           ['LANG:EN']
like            {'COMP:P', 'V', 'LANG:EN', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'SPEC:P', '-VAL', '!COMP:D', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'LF:like', '-SPEC:FORCE', 'PF:like', '-COMP:T', 'SPEC:ADV'}
little          ['LANG:EN']
little-         {'2SPEC', 'LF:little', '0', 'LANG:EN', 'SPEC:D', 'PF:little-'}
lle             {'-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'PF:P(lle)', '-SPEC:Neg/fin', 'P', '-SPEC:N', 'ARG', 'adjoinable', '-SPEC:v', '-VAL', '-SPEC:iR', '!COMP:D', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:INF', '-COMP:N', '-SPEC:T/fin', '-COMP:uWH', '+SEM:directional', 'LANG:FI', '!COMP:*', '-SPEC:C/fin', 'SPEC:*', '-COMP:ADV', '-COMP:T/fin', 'PHI:NUM:_', 'LF:for', '-SPEC:FORCE', 'TAIL:V,+SEM:directional', '-SPEC:iWH'}
lla             {'TAIL:T', 'LF:by', 'TAIL:*V', 'LANG:FI', 'CAP:P', 'PF:P(lla)'}
Luisa           ['LANG:IT']
Luisa-          {'-SPEC:uWH', '-COMP:WH', 'LF:Luisa', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', 'SPEC:A', '-SEM:directional', '-COMP:AUX', 'PF:Luisa', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', 'LANG:IT', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loyta-          {'CLASS:TR', 'COMP:P', 'V', 'LF:find', '-COMP:P', 'SPEC:TO/inf', 'ARG', 'SPEC:P', '!COMP:D', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'LANG:FI', '!COMP:*', 'PF:loyta-', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV'}
Mary            ['LANG:EN']
Mary-           {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', 'LANG:EN', '-COMP:P', '-SPEC:N', '-adjoinable', 'PF:Mary', 'SPEC:A', '-SEM:directional', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', 'LF:Mary', '-COMP:D', '-SPEC:T/fin', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', '-adjoinable', 'SPEC:A', '-SEM:directional', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'LF:Merja', 'COMP:R', '-SPEC:FORCE', 'PF:Merja', '-SPEC:R'}
Merjalle        ['LANG:X']
malla           {'PF:malla', '-SPEC:T/fin', 'LF:by', 'LANG:FI', '-SPEC:Neg/fin', 'MA/inf', 'SPEC:*', 'COMP:v', '-SPEC:N', 'ADV', 'adjoinable', '-SPEC:FORCE'}
meren           ['LANG:FI']
mere-           {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', 'LF:ocean', '-SPEC:P', '-COMP:P', '-SPEC:N', 'SPEC:A', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', 'PF:meri', '-SPEC:FORCE', '-SPEC:R'}
mistake         {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', 'LANG:EN', '-COMP:P', 'LF:mistake', '-SPEC:N', 'SPEC:A', 'PF:mistake', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', 'SPEC:A', '-COMP:AUX', 'LF:what', '-COMP:v', '-COMP:C/fin', 'PF:mika-', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'CLASS:TR', 'LF:move', 'COMP:P', 'V', '-COMP:P', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', 'PF:move', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'LANGN:EN', 'PHI:NUM:_', '+SEM:directional', '!COMP:*', 'COMP:D', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV'}
mukavasti       ['LANG:X']
mukava-         {'COMP:0', 'PF:mukavasti', 'LANG:FI', 'SPEC:*', 'A', 'adjoinable', 'LF:comfortably', '-SPEC:A', 'TAIL:D'}
must            {'COMP:Neg', '!SPEC:*', '-SPEC:V', 'MODAL', 'LANG:EN', 'COMP:v', '-SPEC:N', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'COMP:T/prt', '!SPEC:D', '-SPEC:v', 'VAL', 'PHI:DET:_', 'FIN', 'PHI:PER:_', 'LF:must', '-SPEC:T/fin', 'PHI:NUM:_', '!COMP:*', '!PROBE:V', 'COMP:D', '-SPEC:C/fin', 'SPEC:*', '-SPEC:FORCE', 'T/fin', 'SPEC:D', 'T', 'COMP:V', 'PF:must'}
naki            ['LANG:FI']
nake-           {'CLASS:TR', 'COMP:P', 'V', '-COMP:P', 'SPEC:TO/inf', 'ARG', 'SPEC:P', 'PF:nake', '-VAL', '-COMP:v', 'PHI:DET:_', 'LF:see', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', '-COMP:ESSA/inf', 'PHI:NUM:_', 'LANG:FI', '!COMP:*', '-COMP:MA/inf', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV'}
nen             {'COMP:0', 'LANG:FI', 'SPEC:*', 'A', 'adjoinable', 'PF:a', 'LF:ing', '-SPEC:A', 'TAIL:D'}
not             {'-SPEC:T/fin', '-COMP:D', 'PHI:NUM:_', '!COMP:*', '-COMP:C', 'SPEC:*', 'LANG:EN', 'POL:NEG', 'ARG', 'LF:not', 'PHI:GEN:_', 'PF:not', '-VAL', 'PHI:DET:_', 'PHI:PER:_', '-COMP:FIN', 'Neg'}
nukkunut        ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukku-          {'COMP:P', 'V', 'SPEC:TO/inf', 'ARG', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'LF:sleep', '-COMP:D', 'PHI:NUM:_', 'PF:nukku', 'LANG:FI', 'CLASS:INTR', '-COMP:T/fin', '-COMP:Neg/fin', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV', 'SPEC:D'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
ostaa           ['LANG:FI']
osta-           {'CLASS:TR', 'COMP:P', 'LF:buy', 'V', '-COMP:P', 'SPEC:TO/inf', 'PF:osta', 'ARG', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'LANG:FI', '!COMP:*', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV'}
Pariisia        ['LANG:FI']
Pariisi-        {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', 'SPEC:A', '-COMP:AUX', '-COMP:v', 'PF:Pariisi', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', 'LF:Paris', '-SPEC:R'}
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekka-          {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', 'SPEC:A', '-SEM:directional', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', '-SPEC:C/fin', 'LF:Pekka', '-COMP:T/fin', 'PF:Pekka', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
persuades       ['LANG:EN']
persuade-       {'COMP:P', 'V', 'LANG:EN', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'LF:persuade', 'COMP:TO/inf', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:persuade', 'SEM:external', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV'}
pieni           ['LANG:FI']
pieni-          {'PF:pieni-', '2SPEC', '0', 'LANG:FI', 'LF:small', 'SPEC:D'}
poikien         ['LANG:FI']
poika-          {'-SPEC:uWH', '-COMP:WH', 'LF:boy', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', 'SPEC:A', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', 'PF:poika', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
punainen        ['LANG:FI']
puna-           {'2SPEC', '0', 'LF:red', 'PF:puna-', 'SPEC:D', 'LANG:FI'}
promises        ['LANG:EN']
promise-        {'COMP:P', 'V', 'LANG:EN', 'SEM:internal', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PF:promise', 'PHI:NUM:_', 'COMP:D', 'LF:promise', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV', 'SPEC:D'}
pyytaa          ['LANG:FI']
pyyta-          {'PF:pyyda', 'COMP:P', 'V', 'SPEC:TO/inf', 'ARG', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'LANG:FI', 'LF:ask', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV'}
raukesi         ['LANG:FI']
raukea-         {'COMP:P', 'V', 'PF:raukea', 'SPEC:TO/inf', 'ARG', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'LANG:FI', 'LF:terminate', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV'}
red             ['LANG:EN']
red-            {'2SPEC', 'PF:red', '0', 'LF:red', 'LANG:EN', 'SPEC:D'}
saavuttaa       ['LANG:FI']
saavutta-       {'CLASS:TR', 'COMP:P', 'V', '-COMP:P', 'SPEC:TO/inf', 'ARG', 'PF:saavutta-', 'SPEC:P', '!COMP:D', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'LF:reach', 'LANG:FI', '!COMP:*', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'COMP:VA/inf', 'COMP:P', 'V', 'SPEC:TO/inf', 'LF:say', 'ARG', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'COMP:FORCE', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'LANG:FI', 'PF:sano-', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV', 'SPEC:D'}
said            ['LANG:EN']
say'            {'COMP:P', 'V', 'LANG:EN', 'SPEC:TO/inf', 'LF:say', 'ARG', 'PHI:GEN:_', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', 'PF:say', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', '!COMP:FORCE', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV', 'SPEC:D'}
say-            {'COMP:P', 'V', 'LANG:EN', 'SPEC:TO/inf', 'LF:say', 'ARG', 'PHI:GEN:_', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', 'PF:say', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', '!COMP:FORCE', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV', 'SPEC:D'}
sen             {'-SPEC:D', '-SPEC:V', '-SPEC:P', '-SPEC:Neg/fin', 'TAIL:*POL:NEG', 'COMP:N', '-SPEC:N', 'PF:sen', '!PROBE:N', 'adjoinable', 'D', 'VAL', 'LF:the/that', '-SPEC:MA/lla', 'TAIL:ASP', 'TAIL:PHI', '-SPEC:INF', 'OP', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', '!COMP:*', '-COMP:T/fin', '-ARG', '-COMP:uR'}
se'             {'-SPEC:D', '-SPEC:V', '-SPEC:P', '-SPEC:Neg/fin', 'COMP:N', '-SPEC:N', '!PROBE:N', 'adjoinable', 'D', 'VAL', 'LF:the/that', '-SPEC:MA/lla', '-SPEC:INF', 'OP', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', 'PF:se', '!COMP:*', '-COMP:T/fin', '-ARG', '-COMP:uR'}
Seine           ['LANG:X']
Seine-          {'-SPEC:uWH', 'PF:Seine', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', 'SPEC:A', '-COMP:AUX', 'LF:Seine', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', 'LANG:X', '-SPEC:R'}
sembrano        ['LANG:IT']
sembra-         {'PF:sembra', 'COMP:P', 'V', '-ASP', 'SPEC:TO/inf', '-R', 'SPEC:P', '-VAL', 'LF:seem', '-COMP:v', '-COMP:V', '!COMP:ARE/inf', '-COMP:N', '-COMP:D', '-SPEC:T/fin', 'SPEC:ADV', '-ARG', '-SPEC:FORCE', '-COMP:T', 'LANG:X'}
sleeps          ['LANG:EN']
sleep           {'COMP:P', 'PF:sleep', 'V', 'LANG:EN', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'LF:sleep', '-COMP:D', 'PHI:NUM:_', 'CLASS:INTR', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV', 'SPEC:D'}
sleep-          {'COMP:P', 'PF:sleep', 'V', 'LANG:EN', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'LF:sleep', '-COMP:D', 'PHI:NUM:_', 'CLASS:INTR', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV', 'SPEC:D'}
sono            ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', 'PF:sopimus', 'SPEC:A', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '!COMP:A/inf', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', 'LF:agreement', '-SPEC:FORCE', '-SPEC:R'}
spinge          ['LANG:IT']
spinge-         {'V', '-COMP:P', 'LF:push', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'SPEC:P', '-VAL', '!COMP:D', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', 'PF:spinge', '-SPEC:T/fin', 'PHI:NUM:_', 'LANG:IT', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV'}
ssa             {'-SPEC:V', '-SPEC:P', '-SPEC:ADV', '-SPEC:Neg/fin', 'P', '-SPEC:N', 'TAIL:V', 'ARG', 'adjoinable', 'LF:in', '-SPEC:v', 'COMP:n/MA', '-VAL', '-SPEC:iR', '!COMP:D', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:INF', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'LANG:FI', '!COMP:*', '-SPEC:C/fin', 'SPEC:*', '-COMP:ADV', '-COMP:T/fin', '-SPEC:FORCE', '-COMP:uWH', 'PF:ssa', '-SPEC:iWH'}
stanno          ['LANG:IT']
sta-            {'COMP:P', 'V', '-ASP', 'PF:sta', 'SEM:internal', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', '-COMP:N', 'COMP:PRG', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'LF:stay', '-SPEC:FORCE', '-COMP:T', 'LANG:X', 'SPEC:D'}
sti             {'-SPEC:T/fin', 'LF:by', 'LANG:FI', '-SPEC:Neg/fin', 'SPEC:*', '-ARG', 'ADV', 'PF:sti', '-SPEC:N', 'adjoinable', '!COMP:A', '-SPEC:FORCE'}
talo            {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', 'SPEC:A', '-COMP:AUX', '-COMP:v', 'LF:house', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', 'PF:talo', '-SPEC:T/fin', 'LANG:FI', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
tama            ['LANG:X']
tama-           {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', 'SPEC:A', '-COMP:AUX', 'PHI', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'PF:tama', 'LANG:FI', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', 'LF:this', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
tassa           ['LANG:X']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'COMP:P', 'V', 'MODAL', '-ASP', 'SPEC:TO/inf', 'ARG', 'PF:taytyy', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'FIN', 'PHI:PER:_', '!COMP:A/inf', '-COMP:V', 'LF:must', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'LANG:FI', 'SPEC:*', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV'}
teki            ['LANG:FI']
teke-           {'CLASS:TR', 'COMP:P', 'V', '-COMP:P', '-COMP:A/inf', 'SPEC:TO/inf', 'ARG', 'SPEC:P', '!COMP:D', '-VAL', 'PF:teke', '-COMP:v', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'LANG:FI', '!COMP:*', 'LF:make', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV'}
that            {'-SPEC:*', 'LF:that', '!COMP:*', 'LANG:EN', '-ARG', 'COMP:C/fin', 'PF:that', 'FORCE', '-VAL', 'FIN', '!PROBE:T/fin', 'COMP:T/fin'}
the             {'-SPEC:D', '-SPEC:V', '-SPEC:P', '-SPEC:Neg/fin', 'LANG:EN', 'COMP:N', '-SPEC:N', '!PROBE:N', 'LF:the', 'adjoinable', 'D', 'PF:the', 'VAL', '-SPEC:MA/lla', '-SPEC:INF', 'OP', '-COMP:D', '-SPEC:T/fin', '!COMP:*', 'PHI:DEF:DEF', '-COMP:T/fin', '-ARG', '-COMP:uR'}
to              {'LF:to', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', '-SPEC:Neg/fin', 'P', 'LANG:EN', '-SPEC:N', 'ARG', 'PHI:GEN:_', 'adjoinable', '-SPEC:v', '-VAL', '-SPEC:iR', '!COMP:D', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:*', '-SPEC:INF', 'PF:to', '-COMP:N', '-SPEC:T/fin', '-COMP:uWH', '+SEM:directional', '!COMP:*', 'PHI:NUM:_', '-SPEC:C/fin', '-COMP:ADV', '-COMP:T/fin', '-SPEC:FORCE', 'TAIL:V,+SEM:directional', '-SPEC:iWH'}
to_inf          {'PF:TO/inf', 'TO/inf', 'SPEC:*', 'LF:TO/inf', 'LANG:EN'}
towards         {'-SPEC:V', '-SPEC:P', '-SPEC:ADV', '-SPEC:Neg/fin', 'LF:towards', 'P', 'LANG:EN', '-SPEC:N', 'TAIL:V', 'ARG', 'adjoinable', 'PHI:GEN:_', '-SPEC:v', '-VAL', '-SPEC:iR', '!COMP:D', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:INF', '-SPEC:*', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', '!COMP:*', 'PF:towards', '-SPEC:C/fin', '-COMP:ADV', '-COMP:T/fin', '-SPEC:FORCE', '-COMP:uWH', '-SPEC:iWH'}
tta             {'-SPEC:V', '-SPEC:P', '-SPEC:ADV', '-SPEC:Neg/fin', 'P', '-SPEC:N', 'LF:without', 'ARG', 'adjoinable', '-SPEC:v', 'COMP:n/MA', '-VAL', '-SPEC:iR', '!COMP:D', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:INF', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'LANG:FI', '!COMP:*', '-SPEC:C/fin', 'SPEC:*', '-COMP:ADV', '-COMP:T/fin', 'ADV', '-SPEC:FORCE', '-COMP:uWH', '-SPEC:iWH', 'PF:tta'}
tries           ['LANG:EN']
try-            {'COMP:P', 'V', 'LANG:EN', 'SEM:internal', 'SPEC:TO/inf', 'ARG', 'PF:try', 'PHI:GEN:_', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', '!COMP:TO/inf', 'LF:try', '-SPEC:FORCE', '!COMP:-ARG', '-COMP:T', 'SPEC:ADV', 'SPEC:D'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'COMP:P', 'V', 'SPEC:TO/inf', 'ARG', 'SPEC:P', 'PF:virtaa', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', 'LF:flow', '-COMP:D', '-SPEC:T/fin', 'PHI:NUM:_', 'LANG:FI', '!COMP:P', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV', 'SPEC:D'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'COMP:P', 'V', 'SEM:internal', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', 'LF:want', '-SPEC:*', 'ASP', '-COMP:N', '-SPEC:T/fin', '-COMP:V', 'PHI:NUM:_', '!COMP:*', 'SPEC:ADV', 'PF:volu', '-SPEC:FORCE', '-COMP:T', 'LANG:X'}
wants           ['LANG:EN']
want-           {'CLASS:TR', 'COMP:P', 'V', 'LANG:EN', '-COMP:P', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'COMP:TO/inf', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', '-COMP:T', 'PF:want', 'LF:want'}
what            ['LANG:EN']
what-           {'PF:what', '-COMP:WH', '-SPEC:uWH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', 'LANG:EN', '-COMP:P', '-SPEC:N', '-COMP:*', 'SPEC:A', '-COMP:AUX', 'LF:what', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'PHI_N', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
which           {'-SPEC:D', '-SPEC:V', '-SPEC:P', '-SPEC:Neg/fin', 'LANG:EN', 'COMP:N', '-SPEC:N', 'OP:WH', '!PROBE:N', 'adjoinable', 'D', 'VAL', 'LF:which', '-SPEC:MA/lla', '-SPEC:INF', 'OP', '-COMP:D', '-SPEC:T/fin', '!COMP:*', '-COMP:T/fin', '-ARG', 'PF:which', '-COMP:uR'}
who             ['LANG:EN']
who-            {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', 'LANG:EN', '-COMP:P', '-SPEC:N', '-COMP:*', 'SPEC:A', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', 'LF:who', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'PF:who', 'PHI_N', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
whether         {'LANG:EN', 'OP:WH', 'COMP:C/fin', 'FORCE', '-VAL', 'LF:whether', 'FIN', '!PROBE:T/fin', '-SPEC:*', 'OP', '!COMP:*', '-ARG', 'Q', 'PF:whether', 'OP:Q', 'COMP:T/fin'}
yrittaa         ['LANG:FI']
yritta-         {'COMP:P', 'V', 'LANG:EN', 'SEM:internal', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '!COMP:A/inf', '-COMP:V', 'ASP', 'PF:yritta', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'LF:try', '-SPEC:FORCE', '!COMP:-ARG', '-COMP:T', 'SPEC:ADV', 'SPEC:D'}
mina            ['LANG:X']
mina-           {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', '-COMP:*', 'SPEC:A', 'PF:mina', 'LF:I', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', 'PHI_N', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
sina            ['LANG:X']
sina-           {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', 'PF:sina', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', '-COMP:*', 'SPEC:A', '-COMP:AUX', 'LF:you', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', 'PHI_N', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
han             ['LANG:X']
han-            {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', '-COMP:*', 'SPEC:A', 'PF:han', '-COMP:AUX', 'LF:s/he', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', 'PHI_N', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
me              ['LANG:X']
me-             {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', '-COMP:*', 'SPEC:A', 'LF:we', '-COMP:AUX', '-COMP:v', 'PF:me', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', 'PHI_N', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
te              ['LANG:X']
te-             {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', '-COMP:*', 'SPEC:A', '-COMP:AUX', 'LF:you', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', 'PHI_N', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'PF:te', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
he_FI           ['LANG:X']
heidan          ['LANG:X']
he-             {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', '-COMP:*', 'SPEC:A', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', 'PHI_N', 'LF:they', 'PF:he', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
he-             {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', 'LANG:EN', '-COMP:P', '-SPEC:N', '-COMP:*', 'SPEC:A', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'PHI_N', 'PF:he', '-SPEC:C/fin', 'LF:he', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
se              ['LANG:FI']
se-             {'-SPEC:D', '-SPEC:V', '-SPEC:P', '-SPEC:Neg/fin', 'COMP:N', '-SPEC:N', '!PROBE:N', 'adjoinable', 'D', 'VAL', '-SPEC:MA/lla', '-SPEC:INF', 'OP', '-COMP:D', '-SPEC:T/fin', 'LANG:FI', 'PF:se', '!COMP:*', '-COMP:T/fin', '-ARG', 'LF:it/that', '-COMP:uR'}
I               ['LANG:X']
I-              {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', 'LANG:EN', '-COMP:P', '-SPEC:N', '-COMP:*', 'SPEC:A', 'LF:I', '-COMP:AUX', 'PF:I', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'PHI_N', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
you             ['LANG:X']
you-            {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', 'LANG:EN', '-COMP:P', '-SPEC:N', '-COMP:*', 'SPEC:A', 'PF:you', '-COMP:AUX', 'LF:you', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'PHI_N', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
he              ['LANG:X']
she             ['LANG:X']
she-            {'-SPEC:uWH', '-COMP:WH', 'PF:she', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', 'LANG:EN', '-COMP:P', '-SPEC:N', '-COMP:*', 'SPEC:A', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'PHI_N', '-SPEC:C/fin', '-COMP:T/fin', 'LF:she', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
we              ['LANG:X']
we-             {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', 'LANG:EN', '-COMP:P', '-SPEC:N', '-COMP:*', 'SPEC:A', 'LF:we', '-COMP:AUX', 'PF:we', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'PHI_N', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
you_pl          ['LANG:X']
you_pl-         {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', 'LANG:EN', '-COMP:P', '-SPEC:N', 'SPEC:A', 'PF:you_pl', '-COMP:AUX', 'PHI', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', 'LF:you_pl', '-SPEC:R'}
they            ['LANG:X']
they-           {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', 'LANG:EN', '-COMP:P', '-SPEC:N', '-COMP:*', 'SPEC:A', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', 'PF:they', '-SPEC:T/fin', 'PHI_N', 'LF:they', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
it              ['LANG:EN']
it-             {'-SPEC:D', '-SPEC:V', '-SPEC:P', '-SPEC:Neg/fin', 'LANG:EN', 'PF:it', 'COMP:N', '-SPEC:N', '!PROBE:N', 'adjoinable', 'D', 'VAL', '-SPEC:MA/lla', '-SPEC:INF', 'OP', '-COMP:D', '-SPEC:T/fin', '!COMP:*', '-COMP:T/fin', '-ARG', 'LF:it/that', '-COMP:uR'}
io              ['LANG:X']
io-             {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', '-COMP:*', 'SPEC:A', 'LF:I', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'PHI_N', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', 'LANG:IT', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', 'PF:io'}
tu              ['LANG:X']
tu-             {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', 'PF:tu', '-COMP:P', '-SPEC:N', '-COMP:*', 'SPEC:A', '-COMP:AUX', 'LF:you', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'PHI_N', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', 'LANG:IT', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
lui             ['LANG:X']
lui-            {'-SPEC:uWH', '-COMP:WH', 'PF:lui', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', '-COMP:*', 'SPEC:A', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'PHI_N', '-SPEC:C/fin', 'LF:he', '-COMP:T/fin', '-COMP:ADV', 'LANG:IT', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
lei             ['LANG:X']
lei-            {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', '-COMP:*', 'SPEC:A', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'PHI_N', '-SPEC:C/fin', '-COMP:T/fin', 'LF:she', '-COMP:ADV', 'LANG:IT', '-COMP:A', 'COMP:R', '-SPEC:FORCE', 'PF:lei', '-SPEC:R'}
noi             ['LANG:X']
noi-            {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', 'PF:noi', '-SPEC:P', '-COMP:P', '-SPEC:N', '-COMP:*', 'SPEC:A', 'LF:we', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'PHI_N', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', 'LANG:IT', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
voi             ['LANG:X']
voi-            {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', 'PF:voi', '-COMP:P', '-SPEC:N', '-COMP:*', 'SPEC:A', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'PHI_N', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', 'LANG:IT', '-COMP:A', 'COMP:R', '-SPEC:FORCE', 'LF:you_pl', '-SPEC:R'}
loro            ['LANG:EN']
loro-           {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', '-COMP:*', 'SPEC:A', '-COMP:AUX', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'PHI_N', 'LF:they', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', 'LANG:IT', '-COMP:A', 'COMP:R', '-SPEC:FORCE', 'PF:loro', '-SPEC:R'}
mi              ['LANG:X']
mi-             {'-COMP:WH', 'CL', '-SPEC:V', '-SPEC:ADV', '-COMP:P', '-COMP:*', '-COMP:v', '-COMP:V', '-SPEC:INF', 'COMP:uR', '-COMP:A', 'LF:me', '-SPEC:R', '-SPEC:uWH', 'COMP:R/D', '-SPEC:P', '-SPEC:N', 'SPEC:A', '-COMP:AUX', 'PF:mi(cl)', '-COMP:C/fin', '-COMP:N', '-COMP:D', 'N', '-SPEC:T/fin', 'PHI_N', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', 'LANG:IT', 'COMP:R', '-SPEC:FORCE'}
la              ['LANG:X']
la-             {'-COMP:WH', 'CL', '-SPEC:V', '-SPEC:ADV', '-COMP:P', '-COMP:*', '-COMP:v', '-COMP:V', '-SPEC:INF', 'COMP:uR', '-COMP:A', 'LF:her', '-SPEC:R', '-SPEC:uWH', 'COMP:R/D', '-SPEC:P', '-SPEC:N', 'SPEC:A', '-COMP:AUX', '-COMP:C/fin', 'PF:la(cl)', '-COMP:N', '-COMP:D', 'N', '-SPEC:T/fin', 'PHI_N', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', 'LANG:IT', 'COMP:R', '-SPEC:FORCE'}
lo              ['LANG:X']
lo-             {'-COMP:WH', 'CL', '-SPEC:V', '-SPEC:ADV', '-COMP:P', '-COMP:*', 'PF:lo(cl)', '-COMP:v', '-COMP:V', '-SPEC:INF', 'COMP:uR', '-COMP:A', 'LF:him', '-SPEC:R', '-SPEC:uWH', 'COMP:R/D', '-SPEC:P', '-SPEC:N', 'SPEC:A', '-COMP:AUX', '-COMP:C/fin', '-COMP:N', '-COMP:D', 'N', '-SPEC:T/fin', 'PHI_N', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', 'LANG:IT', 'COMP:R', '-SPEC:FORCE'}
si              ['LANG:X']
si-             {'-COMP:WH', '-SPEC:V', '-SPEC:ADV', '-COMP:P', '-COMP:*', '-COMP:v', 'LF:3sg', '-COMP:V', '-SPEC:INF', 'COMP:uR', '-COMP:A', 'CAL:CL', '-SPEC:R', '-SPEC:uWH', 'COMP:R/D', '-SPEC:P', '-SPEC:N', 'SPEC:A', '-COMP:AUX', '-COMP:C/fin', '-COMP:N', '-COMP:D', 'N', '-SPEC:T/fin', 'PHI_N', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', 'LANG:IT', 'COMP:R', '-SPEC:FORCE', 'PF:si(cl)'}
gli             ['LANG:X']
gli             ['LANG:X']
ci              ['LANG:X']
ci-             {'-SPEC:uWH', '-COMP:WH', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', '-COMP:*', 'SPEC:A', '-COMP:AUX', 'PF:ci', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', 'PHI_N', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', 'LF:there', 'LANG:IT', '-COMP:A', 'COMP:R', '-SPEC:FORCE', '-SPEC:R'}
[-n]            {'LANG:FI', 'PHI:DET:DEF', 'PHI', 'PHI:PER:1', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG'}
[-t]            {'PHI:PER:2', 'LANG:FI', 'PHI:DET:DEF', 'PHI', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG'}
[-V]            {'PHI:PER:3', 'LANG:FI', 'PHI', 'inflectional', 'PHI:NUM:SG'}
[-mme]          {'PHI:NUM:PL', 'LANG:FI', 'PHI:DET:DEF', 'PHI', 'PHI:PER:1', 'inflectional', 'PHI:HUM:HUM'}
[-mme]          {'PHI:NUM:PL', 'LANG:FI', 'PHI:DET:DEF', 'PHI:PER:1', 'inflectional', 'PHI:HUM:HUM'}
[-tte]          {'PHI:NUM:PL', 'PHI:PER:2', 'LANG:FI', 'PHI:DET:DEF', 'PHI', 'inflectional', 'PHI:HUM:HUM'}
[-vat]          {'PHI:NUM:PL', 'PHI:PER:3', 'LANG:FI', 'PHI', 'inflectional'}
[-ni]           {'LANG:FI', 'PHI:DET:DEF', 'PHI', 'PHI:PER:1', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG'}
[-si]           {'PHI:PER:2', 'LANG:FI', 'PHI:DET:DEF', 'PHI', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG'}
[-nsa]          {'LANG:FI', 'PHI:PER:3', 'PHI', 'inflectional'}
[-an]           {'LANG:FI', 'PHI:PER:3', 'PHI', 'inflectional'}
[-nne]          {'PHI:NUM:PL', 'PHI:PER:2', 'LANG:FI', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM'}
[-s]            {'PHI:GEN:F', 'PHI:PER:3', 'PHI:GEN:M', 'PHI', 'LANG:EN', 'inflectional', 'PHI:NUM:SG'}
[-0]            {'PHI:PER:2', 'PHI:PER:3', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:PER:1', 'LANG:EN', 'inflectional', 'PHI', 'PHI:NUM:PL', 'PHI:NUM:SG'}
[-o]            {'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI', 'PHI:PER:1', 'inflectional', 'PHI:HUM:HUM', 'LANG:IT'}
[-i]            {'PHI:PER:2', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI', 'inflectional', 'PHI:HUM:HUM', 'LANG:IT'}
[-a]            {'PHI:PER:3', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI', 'inflectional', 'LANG:IT'}
[-e]            {'PHI:PER:3', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI', 'inflectional', 'LANG:IT'}
[-iamo]         {'PHI:NUM:PL', 'PHI:DET:DEF', 'PHI', 'PHI:PER:1', 'inflectional', 'PHI:HUM:HUM', 'LANG:IT'}
[-te]           {'PHI:NUM:PL', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI', 'inflectional', 'PHI:HUM:HUM', 'LANG:IT'}
[-no]           {'PHI:NUM:PL', 'PHI:PER:3', 'PHI:DET:DEF', 'PHI', 'inflectional', 'LANG:IT'}
[-n_acc]        {'adjoinable', 'n-ACC', 'LANG:FI', 'TAIL:*POL:NEG', 'TAIL:ASP', 'inflectional', 'TAIL:PHI'}
[-t_acc]        {'t-ACC', 'adjoinable', 'LANG:FI', 'TAIL:*POL:NEG', 'TAIL:ASP', 'inflectional'}
[-0_acc]        {'adjoinable', '0_ACC', 'TAIL:VAL,-PHI', 'LANG:FI', 'TAIL:*POL:NEG', 'TAIL:ASP', 'inflectional'}
[-a_par]        {'adjoinable', 'TAIL:ARG,-VAL', 'PAR', 'LANG:FI', 'inflectional'}
[-nom]          {'adjoinable', 'NOM', 'inflectional', 'LANG:X', 'TAIL:FIN,!COMP:*,VAL'}
[-gen]          {'GEN', 'TAIL:INF,!COMP:*', 'inflectional', '-adjoinable', 'LANG:X'}
[-poss]         {'POSS', 'TAIL:D', 'LANG:X', 'inflectional', '-adjoinable'}
[-acc]          {'TAIL:ARG,-VAL', 'inflectional', 'LANG:X', 'ACC', '-adjoinable'}
a'              {'a', 'LANG:X', 'PF:a', 'LF:A'}
b'              {'LF:B', 'LANG:X', 'b', 'PF:b'}
b''             {'-COMP:c', 'LF:B', 'b', 'PF:b', 'LANG:X'}
c''             {'LF:C', 'SPEC:a', 'PF:c', 'c', 'LANG:X'}
c'              {'LF:C', 'c', 'LANG:X', 'PF:c'}
d'              {'d', 'LANG:', 'PF:d', 'LF:D'}
a''             ['LANG:X']
x'              {'x', 'PF:x', 'LANG:X', 'LF:X'}
y'              {'y', 'PF:y', 'LF:Y', 'LANG:X'}
z'              {'PF:x', 'LF:Z', 'LANG:X', 'z'}
John'           {'PF:John', 'LANG:X', 'LF:John', "N'"}
admires'        {'PF:admires', 'LF:admires', "V'", 'LANG:X'}
admires''       {'PF:admires', 'COMP:P', 'V', 'LANG:EN', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'SPEC:P', '-VAL', '-COMP:v', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'ASP', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', 'LF:admires', '-SPEC:FORCE', '-COMP:T', 'SPEC:ADV', 'SPEC:D'}
Mary'           {'LANG:X', 'LF:mary', "N'", 'PF:Mary'}
T/fin           {'!SPEC:*', 'LF:T', '-SPEC:V', 'COMP:v', '-SPEC:N', 'SPEC:TO/inf', 'ARG', 'PHI:GEN:_', 'COMP:T/prt', '-SPEC:v', 'VAL', 'PHI:DET:_', 'FIN', 'PF:T', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:NUM:_', '!COMP:*', '!PROBE:V', 'COMP:D', '-SPEC:C/fin', 'SPEC:*', '-SPEC:FORCE', 'T/fin', 'LANG:X', 'SPEC:D', 'T', 'COMP:V'}
v               {'LF:v', 'ASP', 'PHI:NUM:_', '!COMP:*', '!PROBE:V', 'PF:v', '-SPEC:N', 'ARG', 'PHI:GEN:_', 'v', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'LANG:X', 'SPEC:D', 'COMP:V'}
v*              {'LF:v*', 'ASP', 'PHI:NUM:_', '!COMP:*', 'v*', '!PROBE:V', 'SEM:external', '-SPEC:N', 'ARG', 'PHI:GEN:_', 'v', 'PF:v*', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'LANG:X', 'SPEC:D', 'COMP:V'}
C/fin           {'C/fin', '!PROBE:FIN', 'COMP:Neg/fin', '-SPEC:N', 'C', 'VAL', 'FIN', '-COMP:C/fin', '-SPEC:T/fin', 'PF:C', '!COMP:*', 'SPEC:*', '-SPEC:C/fin', '-ARG', '-COMP:T/prt', 'LF:C/fin', 'LANG:X', 'COMP:T/fin'}
T               {'!SPEC:*', 'LF:T', '-SPEC:V', 'COMP:v', '-SPEC:N', 'ARG', 'PHI:GEN:_', 'COMP:T/prt', '-COMP:NEG', 'VAL', 'PHI:DET:_', 'FIN', 'PF:T', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:NUM:_', '!COMP:*', '!PROBE:V', 'COMP:D', 'SPEC:*', '-SPEC:FORCE', 'LANG:X', 'SPEC:D', 'T', 'COMP:V'}
T/prt           {'!SPEC:*', '-SPEC:V', 'COMP:v', '-SPEC:N', 'T/prt', 'ARG', 'PHI:GEN:_', 'COMP:T/prt', '-COMP:NEG', 'VAL', 'PHI:DET:_', 'FIN', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:NUM:_', '!COMP:*', '!PROBE:V', 'COMP:D', 'SPEC:*', 'LANG:X', '-SPEC:FORCE', 'T', 'LF:T/prt', 'SPEC:D', 'PF:T/prt', 'COMP:V'}
a0              {'COMP:0', 'PF:A', 'LF:A', 'A', 'adjoinable', '-SPEC:A', 'TAIL:D', 'LANG:X'}
n               {'-COMP:WH', '!SPEC:*', '-SPEC:V', '-SPEC:ADV', '-COMP:P', 'COMP:v', 'VAL', '-COMP:v', 'PHI:DET:_', 'PHI:GEN:N', 'LF:n', '-COMP:V', '-SPEC:INF', 'COMP:uR', 'PHI:NUM:_', '-COMP:A', '-SPEC:R', '-SPEC:uWH', 'COMP:0', 'COMP:R/D', '-SPEC:P', 'n', '-SPEC:N', 'ARG', 'PHI:GEN:_', 'SPEC:A', 'PF:n', '-COMP:AUX', 'PHI:PER:_', '-COMP:C/fin', 'inflectional', '-COMP:N', '-COMP:D', 'N', '-SPEC:T/fin', '-SPEC:C/fin', 'SPEC:*', '-COMP:T/fin', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', 'LANG:X', 'COMP:V'}
impass          {'ASP', 'PHI:NUM:_', '!COMP:*', '!PROBE:V', '-SPEC:N', 'ARG', 'PHI:GEN:_', 'v', 'PHI:PER:_', '-VAL', 'LF:impass', 'PHI:DET:_', 'LANG:X', 'SPEC:D', 'PF:impass', 'COMP:V'}
INF             {'-COMP:FORCE', '-SPEC:T/fin', 'INF', '-SPEC:V', '!COMP:*', '!PROBE:V', 'PF:INF', 'COMP:v', 'LF:INF', 'LANG:X', '-COMP:C/fin', 'COMP:V'}
prtcpl          {'INF', '-SPEC:V', '!SPEC:*', 'COMP:v', '-SPEC:N', 'T/prt', 'ARG', 'PHI:GEN:_', 'COMP:T/prt', '-COMP:NEG', 'VAL', 'PHI:DET:_', 'PF:T/prt', 'FIN', '-COMP:C/fin', 'PHI:PER:_', 'LF:T/prt', '-COMP:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', '!COMP:*', '!PROBE:V', 'COMP:D', 'SPEC:*', '-SPEC:FORCE', 'LANG:X', 'SPEC:D', 'T', 'COMP:V'}
TO/inf          {'TO/inf', 'INF', '-SPEC:V', 'COMP:v', 'adjoinable', '-SPEC:v', '-VAL', '?ARG', '-COMP:C/fin', 'PF:TO/inf', '-COMP:FORCE', '-SPEC:T/fin', '!COMP:*', '!PROBE:V', 'LF:TO/inf', 'LANG:X', 'COMP:V'}
A/inf           {'INF', '-SPEC:V', '-SPEC:Neg/fin', 'COMP:v', '?VAL', '?ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '!COMP:*', '!PROBE:V', 'SPEC:*', 'PF:A/inf', 'A/inf', 'LANG:X', 'LF:A/inf', 'COMP:V'}
ARE/inf         {'INF', '-SPEC:V', 'COMP:v', 'adjoinable', 'PF:are', 'ARE/inf', 'VAL', 'LF:ARE/inf', '?ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '!COMP:*', '!PROBE:V', 'LANG:X', 'COMP:V'}
ESSA/inf        {'INF', '-SPEC:V', '-SPEC:Neg/fin', 'COMP:v', '-SPEC:N', 'adjoinable', '?VAL', 'PF:essa', 'LF:while', '?ARG', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', 'ESSA/inf', '!COMP:*', '!PROBE:V', 'SPEC:*', 'ADV', '-SPEC:FORCE', 'LANG:X', 'COMP:V'}
TUA/inf         {'LF:after', 'INF', '!SPEC:*', '-SPEC:V', 'TUA/inf', 'PF:tua', '-SPEC:Neg/fin', 'COMP:v', '-SPEC:N', 'ARG', 'PHI:GEN:_', 'adjoinable', 'CAL', 'PHI:DET:_', 'PHI:PER:_', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', '!COMP:*', '!PROBE:V', 'ADV', '-SPEC:FORCE', 'LANG:X', 'COMP:V'}
VA/inf          {'INF', '!SPEC:*', '-SPEC:V', 'COMP:v', 'ARG', 'PHI:GEN:_', 'VA/inf', 'PF:vAn', 'VAL', 'PHI:DET:_', 'PHI:PER:_', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', '!COMP:*', 'LF:VA', '!PROBE:V', 'SPEC:*', 'LANG:X', 'COMP:V'}
MA/ssa          {'MA/inf', 'COMP:v', 'LF:in_doing', 'adjoinable', 'PHI:DET:_', 'PHI:NUM:_', 'ADV', '-SPEC:Neg/fin', '-SPEC:N', 'TAIL:V', 'ARG', 'PHI:GEN:_', '-VAL', 'PHI:PER:_', 'PF:massa', '-SPEC:T/fin', '-SPEC:FORCE', 'LANG:X', 'COMP:V'}
MA/tta          {'-SPEC:T/fin', 'PHI:NUM:_', '-SPEC:Neg/fin', 'PF:matta', 'MA/inf', 'LF:without_doing', '-SPEC:N', 'ADV', 'ARG', 'PHI:GEN:_', 'adjoinable', '-SPEC:FORCE', '-VAL', 'PHI:DET:_', 'LANG:X', 'PHI:PER:_'}
MA/lla          {'PF:malla', '-SPEC:T/fin', 'PHI:NUM:_', '-SPEC:Neg/fin', 'MA/inf', '-SPEC:N', 'ADV', 'ARG', 'PHI:GEN:_', 'adjoinable', 'TAIL:T', 'LF:by_doing', '-SPEC:FORCE', '-VAL', 'PHI:DET:_', 'LANG:X', 'PHI:PER:_'}
E/inf           {'-SPEC:T/fin', 'LF:by', 'PF:en', 'LANG:FI', '-SPEC:Neg/fin', 'SPEC:*', '-ARG', 'ADV', '-SPEC:N', 'adjoinable', '-SPEC:FORCE'}
ndo             {'!SPEC:*', '-SPEC:V', 'COMP:v', 'VAL', 'PHI:DET:_', 'PHI:NUM:_', '!PROBE:V', 'INF', 'ARG', 'PHI:GEN:_', 'LF:ing', 'PF:PRG', 'PHI:PER:_', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '!COMP:*', 'SPEC:*', 'PRG', 'LANG:X', 'COMP:V'}
BE-             {'COMP:P', 'V', '-ASP', 'COMP:N', 'LF:BE', 'SPEC:TO/inf', 'COPULA', 'COMP:T/prt', 'SPEC:P', '-VAL', 'PF:BE', '-COMP:v', '-COMP:V', '-SPEC:T/fin', '!COMP:*', 'SPEC:ADV', 'COMP:D', 'COMP:A', '-ARG', 'COMP:T', '-SPEC:FORCE', 'LANG:X', 'SPEC:D'}
D               {'-SPEC:D', '-SPEC:V', 'PF:D', '-SPEC:P', '-SPEC:Neg/fin', 'COMP:N', '-SPEC:N', '!PROBE:N', 'adjoinable', 'D', 'VAL', 'LF:D', '-SPEC:MA/lla', '-SPEC:INF', 'OP', '-COMP:D', '-SPEC:T/fin', '!COMP:*', '-COMP:T/fin', '-ARG', 'LANG:X', '-COMP:uR'}
P               {'-SPEC:V', 'LF:P', '-SPEC:P', '-SPEC:ADV', '-SPEC:Neg/fin', 'P', '-SPEC:N', 'ARG', 'PHI:GEN:_', 'adjoinable', '-SPEC:v', '-VAL', '-SPEC:iR', '!COMP:D', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:INF', '-COMP:N', '-SPEC:T/fin', 'PHI:NUM:_', '!COMP:*', '-SPEC:C/fin', '-COMP:ADV', '-COMP:T/fin', 'PF:P', '-SPEC:FORCE', '-COMP:uWH', 'LANG:X', '-SPEC:iWH'}
pro             ['LANG:X']
pro-            {'-SPEC:uWH', '-COMP:WH', 'PF:(pro)', '-SPEC:V', 'COMP:R/D', '-SPEC:ADV', '-SPEC:P', '-COMP:P', '-SPEC:N', 'SPEC:A', '-COMP:AUX', 'PHI', '-COMP:v', '-COMP:C/fin', '-COMP:V', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'N', '-COMP:D', '-SPEC:T/fin', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:ADV', '-COMP:A', 'COMP:R', '-SPEC:FORCE', 'LANG:X', 'LF:pro', '-SPEC:R'}
cl              {'LEFT:T/fin', 'CL', 'RIGHT:PRG', 'LANG:X', 'LEFT:D,CL', 'inflectional', 'RIGHT:ARE/inf'}
inc             {'LANG:X', 'inflectional', 'INCORPORATED'}
sg              {'LANG:X', 'inflectional', 'PHI:NUM:SG'}
pl              {'PHI:NUM:PL', 'LANG:X', 'inflectional'}
1p              {'LANG:X', 'PHI:PER:1', 'inflectional'}
2p              {'PHI:PER:2', 'inflectional', 'LANG:X'}
3p              {'PHI:PER:3', 'LANG:X', 'inflectional'}
def             {'PHI:DET:DEF', 'LANG:X', 'inflectional'}
indef           {'LANG:X', 'PHI:DET:INDEF', 'inflectional'}
hum             {'LANG:X', 'inflectional', 'PHI:HUM:HUM'}
nonhum          {'PHI:HUM:NONHUM', 'LANG:X', 'inflectional'}
m               {'PHI:GEN:M', 'LANG:X', 'inflectional'}
f               {'LANG:X', 'PHI:GEN:F', 'inflectional'}
nom             {'LANG:X', 'inflectional', 'TAIL:FIN,!COMP:*,VAL'}
acc             {'LANG:X', 'TAIL:ARG,-VAL', 'inflectional'}
uC/op           {'uC/op', 'LANG:X', 'inflectional'}
wh              {'LANG:X', 'inflectional', 'OP:WH', 'OP:_'}
wh_             {'OP', 'OP:_', 'LANG:X', 'FORCE:OP:WH', 'inflectional'}
top             {'OP:TOP', 'LANG:X', 'inflectional'}
foc             {'OP:FOC', 'LANG:X', 'inflectional'}
C/op            {'LANG:X', 'inflectional', 'OP:C/OP'}
rel             {'OP:REL', 'inflectional', 'LANG:X'}
Q               {'OP', 'OP:Q', 'LANG:X', 'inflectional', 'OP:WH'}
