dummy          {'dummy', 'LANG:EN'}
a               {'-COMP:A', 'TAIL:V', 'P', '-SPEC:*', '-COMP:T/fin', 'COMP:ARE/inf', '-SPEC:T/prt', '-SPEC:ADV', '-SPEC:v', 'LANG:IT', '-SPEC:iR', 'PF:a', '-SPEC:iWH', '-SPEC:C/fin', '-COMP:uWH', '!COMP:*', '-VAL', '-COMP:T', 'adjoinable', 'LF:to', '-ARG', '-SPEC:N', '-SPEC:C', '-SPEC:V', 'COMP:φ', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:N'}
a_D             {'D', 'LANG:EN', '!PROBE:N', '-ARG', '-COMP:uR', '-SPEC:C', '-COMP:T/fin', '-SPEC:V', '-SPEC:MA/lla', 'COMP:φ', '-EDGE:*', '-SPEC:P', '-SPEC:Neg/fin', 'COMP:n', 'PF:D', 'φ', 'LF:D', '!COMP:*', 'adjoinable', 'COMP:N', '-SPEC:T/fin', '-SPEC:INF', '-COMP:P'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'COMP:P', 'LANG:EN', '-COMP:Neg', 'SPEC:ADV', '-COMP:T/fin', 'ASP', 'COMP:D', 'COMP:φ', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'CLASS:TR', 'ARG', 'SPEC:P', 'PHI:DET:_', 'LF:admire', '-COMP:v', 'PF:admire', '!COMP:*', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:Neg', '-SPEC:T/fin', '-COMP:N', '-COMP:P'}
admire*         ['LANG:EN']
T/fin*          {'-COMP:INF', 'SPEC:FORCE', 'LANG:EN', 'SPEC:C/fin', '-SPEC:TO/inf', 'FIN', '-adjoinable', 'SPEC:φ', '-SPEC:N', '-SPEC:C', '-COMP:T/fin', '-SPEC:V', 'NO_NUMBER', 'LF:T', '-SPEC:T/prt', '-SPEC:v', 'PHI:PER:_', 'SPEC:TO/inf', 'T/fin', "PF:T/fin'", 'ARG', 'COMP:T/prt', 'NO_DET', '!SPEC:*', '-VAL', '!COMP:*', '!PROBE:V', 'COMP:v', '-SPEC:Neg', 'T', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:V'}
v*              {'LANG:EN', 'ARG', 'NO_DET', 'PHI:PER:_', 'LF:v', '-VAL', 'v', '!PROBE:V', 'SPEC:φ', '!COMP:*', 'NO_NUMBER', '-SPEC:N', 'ASP', 'PHI:GEN:_', 'COMP:V', 'PF:v'}
admire**        ['LANG:EN']
T/fin**         {'-COMP:INF', 'SPEC:FORCE', 'LANG:EN', 'FIN', '-COMP:T/fin', 'NO_NUMBER', 'LF:T', '-SPEC:T/prt', '-SPEC:v', 'ARG', 'COMP:T/prt', 'NO_DET', '!SPEC:*', '-VAL', '!COMP:*', '!PROBE:V', 'PHI:GEN:_', '-SPEC:Neg', 'T', 'COMP:V', "PF:T/fin''", 'SPEC:C/fin', '-SPEC:TO/inf', '-adjoinable', 'SPEC:φ', '-SPEC:N', '-SPEC:C', '-SPEC:V', 'NO_PERSON', 'SPEC:TO/inf', 'T/fin', 'PHI:PER:3', 'COMP:v', '-SPEC:T/fin'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'PF:adora', 'COMP:P', 'SPEC:ADV', 'ASP', 'COMP:φ', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'LANG:IT', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', 'LF:admire', '-COMP:v', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N'}
antaa           ['LANG:FI']
anta-           {'COMP:P', 'SPEC:φ', 'SPEC:ADV', 'ASP', 'COMP:φ', '-COMP:V', 'LF:give', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', '-COMP:v', '!COMP:*', '-VAL', 'CLASS:DITR', '-COMP:FIN', '+SEM:directional', 'LANG:FI', 'PHI:NUM:_', '-SPEC:T/fin', 'PHI:GEN:_', 'ASP:BOUNDED', 'PF:antaa', '-COMP:N'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'COMP:P', 'LANG:EN', 'LF:ask', 'SPEC:φ', 'PF:ask', 'SPEC:ADV', 'ASP', 'COMP:φ', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SEM:internal', 'SPEC:P', '-COMP:v', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimen_gen     ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'PF:avain', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:v', '-SEM:directional', 'LF:key', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', 'LANG:FI', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:v', '-SEM:directional', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', 'PF:auto', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', 'LANG:FI', '-SPEC:T/fin', 'LF:car', '-SPEC:INF', '-COMP:N'}
bank            {'-COMP:A', 'COMP:R', 'LANG:EN', 'COMP:D/rel', '-COMP:VA/inf', 'LF:bank_inst', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:v', 'PF:bank1', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', 'FREQ:1', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
bank            {'-COMP:A', 'COMP:R', 'LANG:EN', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', 'LF:bank_river', '-COMP:v', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', 'PF:bank2', '-COMP:AUX', '-COMP:C/fin', 'FREQ:2', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
barn            {'-COMP:A', 'COMP:R', '-SPEC:R', 'LANG:EN', 'COMP:P', 'LF:barn', 'COMP:D/rel', '-COMP:VA/inf', 'PF:barn', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', 'N', '-SPEC:ADV', '-COMP:AUX', '-COMP:V', 'COMP:uR', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:C/fin', '-COMP:v', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
city            {'-COMP:A', 'COMP:R', '-SPEC:R', 'LANG:EN', 'COMP:P', 'COMP:D/rel', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', 'N', '-SPEC:ADV', '-COMP:AUX', '-COMP:V', 'COMP:uR', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:T/prt', 'LF:city', 'SPEC:A', 'COMP:C', '-SPEC:C/fin', '-COMP:v', '-SPEC:T/fin', '-SPEC:INF', 'PF:city', '-COMP:N'}
che             ['LANG:IT']
che-            {'-COMP:A', 'COMP:R', 'LF:who', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'LANG:IT', 'PHI_N', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:*', '-COMP:v', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N', 'PF:che'}
chiamato        ['LANG:IT']
chiamata-       {'COMP:P', 'LF:called', 'SPEC:ADV', 'ASP', '-COMP:V', 'PF:chiamato', '-SPEC:FORCE', 'PHI:PER:_', 'LANG:IT', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', '-COMP:v', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N'}
claims          ['LANG:EN']
claim-          {'COMP:P', 'LANG:EN', 'SPEC:φ', 'SPEC:ADV', 'ASP', 'LF:claim', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', 'PF:claim', 'COMP:T/fin', '-COMP:v', '-COMP:φ', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N'}
danno           {'LF:damage', '-COMP:A', 'COMP:R', '-SPEC:R', 'COMP:P', 'COMP:D/rel', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', 'N', '-SPEC:ADV', '-COMP:AUX', '-COMP:V', 'COMP:uR', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-COMP:WH', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:C/fin', '-COMP:v', 'PF:danno', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'COMP:P', 'PF:detest', 'SPEC:ADV', 'ASP', 'COMP:ARE/inf', 'COMP:φ', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'LANG:IT', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SEM:internal', 'SPEC:P', '-COMP:v', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', 'LF:detest', '-COMP:N'}
devono          ['LANG:EN']
deva-           {'COMP:P', 'SPEC:φ', 'SPEC:ADV', 'COMP:ARE/inf', 'LF:must', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'LANG:IT', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SEM:internal', 'SPEC:P', '-COMP:v', 'PF:deva', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N', '-ASP'}
di              {'-COMP:A', '-adjoinable', '-SPEC:N', 'P', '-SPEC:C', 'LF:of', '-COMP:T/fin', '-SPEC:T/prt', '-SPEC:ADV', '-SPEC:v', '-SPEC:V', 'COMP:φ', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:FORCE', 'PF:di', '-SPEC:iR', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:iWH', '-SPEC:C/fin', '-COMP:uWH', '!COMP:*', '-VAL', '-COMP:T', 'SPEC:*', 'PHI:NUM:_', 'LANG:FI', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:N'}
does            {'-COMP:INF', 'SPEC:FORCE', 'LANG:EN', 'FIN', 'PHI:NUM:SG', '-COMP:T/fin', '-SPEC:T/prt', '-SPEC:v', 'PHI:PER:_', 'PF:does', 'ARG', 'COMP:T/prt', 'PHI:GEN:M', 'PHI:GEN:F', '!COMP:*', '!PROBE:V', '!SPEC:*', 'PHI:GEN:_', 'SPEC:*', '-SPEC:Neg', 'T', 'VAL', 'COMP:V', 'SPEC:C/fin', 'LF:does', '-SPEC:TO/inf', '-adjoinable', 'SPEC:φ', '-SPEC:N', '-SPEC:C', '-SPEC:V', 'SPEC:TO/inf', 'T/fin', 'PHI:DET:_', 'PHI:PER:3', 'COMP:Neg', 'PHI:NUM:_', 'COMP:v', '-SPEC:T/fin'}
does_C          ['LANG:EN']
does-           {'-COMP:INF', 'SPEC:FORCE', 'LANG:EN', 'FIN', 'PHI:NUM:SG', '-COMP:T/fin', '-SPEC:T/prt', '-SPEC:v', 'PHI:PER:_', 'PF:does', 'ARG', 'COMP:T/prt', 'PHI:GEN:M', 'PHI:GEN:F', '!COMP:*', '!PROBE:V', '!SPEC:*', 'PHI:GEN:_', 'SPEC:*', '-SPEC:Neg', 'T', 'VAL', 'COMP:V', 'SPEC:C/fin', 'LF:does', '-SPEC:TO/inf', '-adjoinable', 'SPEC:φ', '-SPEC:N', '-SPEC:C', '-SPEC:V', 'SPEC:TO/inf', 'T/fin', 'PHI:DET:_', 'PHI:PER:3', 'COMP:Neg', 'PHI:NUM:_', 'COMP:v', '-SPEC:T/fin'}
dorme           ['LANG:IT']
dorme-          {'!SPEC:φ', 'LANG:EN', 'COMP:P', 'CLASS:INTR', 'PF:dorme', 'SPEC:φ', 'SPEC:ADV', 'ASP', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', '-COMP:MA/inf', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', '-COMP:v', 'LF:sleep', '-VAL', '-COMP:φ', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N'}
disappeared     ['LANG:EN']
disappear-      {'COMP:P', 'LANG:EN', 'CLASS:INTR', 'SPEC:φ', 'SPEC:ADV', 'ASP', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', '-COMP:MA/inf', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', '-COMP:v', 'LF:disappear', '-VAL', '-COMP:φ', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N', 'PF:disappear'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'LF:easy', 'LANG:EN', '2SPEC', '0', 'PF:easy', 'SPEC:φ'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'FIN', 'PF:ei', 'NEG', '!COMP:T', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'SEM:internal', 'COMP:T/prt', '-SPEC:T', '!COMP:*', '!SPEC:*', 'POL:NEG', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', 'SPEC:*', '-SPEC:T/fin', 'Neg/fin', 'VAL', 'LF:neg', '%SPEC:INF'}
e-              {'FIN', 'PF:ei', 'NEG', '!COMP:T', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'SEM:internal', 'COMP:T/prt', '-SPEC:T', '!COMP:*', '!SPEC:*', 'POL:NEG', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', 'SPEC:*', '-SPEC:T/fin', 'Neg/fin', 'VAL', 'LF:neg', '%SPEC:INF'}
elaa            ['LANG:FI']
ela-            {'COMP:P', 'CLASS:INTR', 'SPEC:φ', 'SPEC:ADV', 'ASP', 'PF:elaa', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', '-COMP:MA/inf', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', '-COMP:v', '-VAL', '-COMP:φ', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', 'LF:live'}
etsii           ['LANG:FI']
etsi-           {'COMP:P', 'SPEC:ADV', 'ASP', 'LF:search', 'COMP:φ', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', '!COMP:φ', 'V', 'CLASS:TR', 'ARG', 'SPEC:P', 'PHI:DET:_', '-COMP:v', '!COMP:*', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', 'PF:etsi', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', '-COMP:P'}
etta            {'COMP:C/fin', 'COMP:T/fin', '!PROBE:FIN', 'FIN', '-ARG', 'LF:that', '!COMP:*', '-VAL', '-SPEC:*', 'LANG:FI', '-SPEC:φ', 'FORCE', 'PF:etta'}
fell            ['LANG:EN']
fell-           {'!SPEC:φ', 'LANG:EN', 'COMP:P', 'CLASS:INTR', 'LF:fell', 'SPEC:φ', 'SPEC:ADV', 'ASP', 'PF:fell', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', '-COMP:MA/inf', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', '-COMP:v', '-VAL', '-COMP:φ', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N'}
flow'           {'COMP:P', 'LANG:EN', 'PF:flow', 'SPEC:φ', 'SPEC:ADV', 'ASP', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', '-COMP:v', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N', 'LF:flow'}
from            {'-COMP:A', 'LANG:EN', 'P', '-SPEC:*', '-COMP:T/fin', 'PF:from', '-SPEC:T/prt', '-SPEC:ADV', '-SPEC:v', 'PHI:PER:_', '-SPEC:iR', 'ARG', '-SPEC:iWH', '-SPEC:C/fin', '-COMP:uWH', '!COMP:*', '-VAL', '-COMP:T', 'adjoinable', 'PHI:GEN:_', '-float', 'TAIL:V,+SEM:directional', 'LF:from', '-SPEC:N', '-SPEC:C', '-SPEC:V', 'COMP:φ', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:FORCE', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:N'}
gave            ['LANG:EN']
give-           {'COMP:P', 'LANG:EN', 'SPEC:φ', 'SPEC:ADV', 'ASP', 'COMP:φ', '-COMP:V', 'LF:give', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', '-COMP:v', '!COMP:*', '-VAL', 'PF:give', 'CLASS:DITR', '-COMP:FIN', '+SEM:directional', 'PHI:NUM:_', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:N'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'LF:Giuseppe', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'LANG:IT', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:v', '-SEM:directional', 'D:REF:PROPER_NAME', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', 'PF:Giuseppe', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'LF:want', 'COMP:P', 'PF:haluaa', '-SPEC:*', 'SPEC:ADV', 'ASP', 'COMP:φ', '-COMP:V', 'COMP:A/inf', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'CLASS:TR', 'ARG', 'SEM:internal', 'SPEC:P', 'PHI:DET:_', '-COMP:v', '!COMP:*', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', '-SPEC:T/fin', 'ASP:BOUNDED', '-COMP:N', '-COMP:P'}
hairitsee       ['LANG:FI']
hairitse-       {'COMP:P', 'SPEC:φ', 'SPEC:ADV', 'ASP', 'COMP:φ', 'LF:disturb', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', '!COMP:φ', 'CLASS:TR', 'V', 'ARG', 'SPEC:P', 'PHI:DET:_', 'PF:hairitsee', '-COMP:v', '!COMP:*', '-VAL', '-COMP:FIN', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', '-COMP:P'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'COMP:P', 'SPEC:φ', 'SPEC:ADV', '-COMP:V', 'LF:have', '-SPEC:FORCE', 'PHI:PER:_', 'LANG:IT', 'PF:ha', 'SPEC:TO/inf', 'V', 'COMP:T', 'ARG', 'SEM:internal', 'SPEC:P', 'PHI:DET:_', '-COMP:v', '-VAL', 'PHI:NUM:_', 'SPEC:*', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N', '-ASP'}
horse           {'-COMP:A', 'COMP:R', '-SPEC:R', 'LANG:EN', 'COMP:P', 'COMP:D/rel', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', 'N', '-SPEC:ADV', 'LF:horse', '-COMP:V', 'COMP:uR', '-COMP:AUX', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:P', 'PF:horse', '-COMP:WH', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:C/fin', '-COMP:v', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'COMP:P', 'CLASS:INTR', 'SPEC:φ', 'PF:havia', 'SPEC:ADV', 'ASP', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', '-COMP:MA/inf', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', '-COMP:v', 'LF:disappear', '-VAL', '-COMP:φ', 'PHI:NUM:_', 'LANG:FI', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N'}
Helsingissa     ['LANG:FI']
Helsinki        ['LANG:FI']
Helsinki-       {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'COMP:T/prt', 'SPEC:A', 'LF:Helsinki', '-SPEC:C/fin', '-COMP:v', 'D:REF:PROPER_NAME', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'PF:Helsinki', 'COMP:C', 'LANG:FI', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'COMP:P', 'SPEC:φ', 'SPEC:ADV', 'ASP', 'COMP:φ', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', '!COMP:φ', 'V', 'CLASS:TR', 'ARG', 'PF:ihaile-', 'SPEC:P', 'PHI:DET:_', 'LF:admire', '-COMP:v', '!COMP:*', '-VAL', '-COMP:FIN', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', '-COMP:P'}
il              {'D', '!PROBE:N', '-ARG', '-COMP:uR', '-SPEC:C', '-COMP:T/fin', '-SPEC:V', '-SPEC:MA/lla', 'COMP:φ', '-EDGE:*', '-SPEC:P', '-SPEC:Neg/fin', 'LANG:IT', 'COMP:n', 'φ', '!COMP:*', 'COMP:N', 'adjoinable', 'PF:il', 'LF:the', '-SPEC:T/fin', '-SPEC:INF', '-COMP:P'}
i               {'D', '!PROBE:N', '-ARG', '-COMP:uR', '-SPEC:C', '-COMP:T/fin', '-SPEC:V', '-SPEC:MA/lla', 'COMP:φ', '-EDGE:*', '-SPEC:P', '-SPEC:Neg/fin', 'LANG:IT', 'COMP:n', 'φ', '!COMP:*', 'COMP:N', 'adjoinable', 'PF:il', 'LF:the', '-SPEC:T/fin', '-SPEC:INF', '-COMP:P'}
in              {'-COMP:A', '-SPEC:N', 'P', '-SPEC:C', '-COMP:T/fin', '-SPEC:V', '-SPEC:T/prt', '-SPEC:ADV', '-SPEC:v', 'COMP:φ', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:FORCE', 'LANG:IT', '-SPEC:iR', 'PF:in', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:iWH', '-SPEC:C/fin', '-COMP:uWH', '!COMP:*', '-VAL', '-COMP:T', 'adjoinable', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:ADV', 'LF:in', '-SPEC:INF', '-COMP:N'}
infermieri      {'-COMP:A', 'COMP:R', '-SPEC:R', 'COMP:P', 'PF:infermieri', 'COMP:D/rel', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', 'N', '-SPEC:ADV', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'LF:nurses', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-COMP:WH', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:C/fin', '-COMP:v', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
is              ['LANG:EN']
be-             {'COMP:P', 'LANG:EN', '-COMP:TO/inf', '-ARG', 'SPEC:φ', 'SPEC:ADV', 'PF:be', 'ASP', '-COMP:V', '-SPEC:FORCE', 'SPEC:TO/inf', 'COPULA', 'V', 'SPEC:P', 'LF:be', '-COMP:v', '!COMP:*', '-VAL', '-SPEC:T/fin', '-COMP:N'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'COMP:P', 'CLASS:INTR', 'LF:sit', 'SPEC:φ', 'SPEC:ADV', 'ASP', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'PF:istuu', '-COMP:MA/inf', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', '-COMP:v', '-VAL', '-COMP:φ', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:N'}
John            ['LANG:EN']
John-           {'-COMP:A', 'COMP:R', 'LANG:EN', 'COMP:D/rel', '-COMP:VA/inf', 'LF:John', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:v', '-SEM:directional', 'D:REF:PROPER_NAME', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-adjoinable', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', '-SPEC:T/fin', '-SPEC:INF', 'PF:John', '-COMP:N'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'-COMP:A', 'COMP:R', 'LF:who', 'COMP:D/rel', '-COMP:VA/inf', 'PF:joka', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'PHI_N', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:*', '-COMP:v', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', 'LANG:FI', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:v', '-SEM:directional', 'LF:Jukka', 'D:REF:PROPER_NAME', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', 'PF:Jukka', 'LANG:FI', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'COMP:P', 'PF:juokse-', 'SPEC:ADV', 'ASP', '-COMP:V', 'LF:run', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', '-COMP:v', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:N'}
kaksi           {'NUM', '-COMP:QN', 'PHI:NUM:SG', '-COMP:D', 'PF:kaksi', 'COMP:φ', 'PHI:PER:_', 'COMP:n', 'TAIL:ARG,VAL,FIN', 'PHI:DET:_', 'LF:two', 'ARG', 'φ', '!COMP:*', '-VAL', 'COMP:N', 'SPEC:*', 'PHI:NUM:_', 'LANG:FI', 'PHI:GEN:_'}
kaksi           {'LANG:EN', 'NUM', '-COMP:QN', '-COMP:D', 'PF:kaksi', 'COMP:φ', 'PHI:PER:_', 'COMP:n', 'TAIL:ARG,ASP:BOUNDED', 'PHI:DET:_', 'ARG', 'LF:two', 'φ', '!COMP:*', '-VAL', 'COMP:N', 'SPEC:*', 'PHI:NUM:_', 'PHI:GEN:_', 'TAIL:*POL:NEG'}
kaksi_1         {'NUM', '-COMP:QN', 'PHI:NUM:SG', '-COMP:D', 'PF:kaksi', 'COMP:φ', 'PHI:PER:_', 'COMP:n', 'TAIL:ARG,VAL,FIN', 'PHI:DET:_', 'LF:two', 'ARG', 'φ', '!COMP:*', '-VAL', 'COMP:N', 'SPEC:*', 'PHI:NUM:_', 'LANG:FI', 'PHI:GEN:_'}
kaksi_2         {'LANG:EN', 'NUM', '-COMP:QN', '-COMP:D', 'PF:kaksi', 'COMP:φ', 'PHI:PER:_', 'COMP:n', 'TAIL:ARG,ASP:BOUNDED', 'PHI:DET:_', 'ARG', 'LF:two', 'φ', '!COMP:*', '-VAL', 'COMP:N', 'SPEC:*', 'PHI:NUM:_', 'PHI:GEN:_', 'TAIL:*POL:NEG'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'LF:two', 'φ', 'NUM', '-COMP:QN', 'COMP:N', 'SPEC:*', 'LANG:FI', '-COMP:D', 'PF:kaksi', 'COMP:φ', 'COMP:n'}
kaupunkia       ['LANG:EN']
kaupunki-       {'-COMP:A', 'COMP:R', '-SPEC:R', 'COMP:D/rel', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', 'N', '-SPEC:ADV', '-COMP:AUX', '-COMP:V', 'COMP:uR', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:T/prt', 'LF:city', 'SPEC:A', 'COMP:C', '-SPEC:C/fin', '-COMP:v', 'LANG:FI', 'PF:kaupunki', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N', '-COMP:P'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'COMP:P', '!COMP:A/inf', '-SPEC:*', 'SEM:external', 'SPEC:ADV', 'ASP', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'LF:order', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', 'PF:kaske', '-COMP:v', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:N'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-COMP:A', 'COMP:R', '-SPEC:R', 'COMP:P', 'COMP:D/rel', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', 'N', '-SPEC:ADV', '-COMP:AUX', '-COMP:V', 'COMP:uR', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:C/fin', '-COMP:v', 'PF:kello', 'LF:watch', 'LANG:FI', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
kello0-         {'LF:watch', 'LANG:FI', '2SPEC', 'SPEC:φ', '0', 'PF:kello'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-COMP:A', 'COMP:R', 'LANG:EN', 'COMP:D/rel', '-COMP:VA/inf', 'PF:key', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:v', '-SEM:directional', 'LF:key', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
kirja           ['LANG:FI']
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'PF:kirja', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:v', '-SEM:directional', '-SPEC:R', 'COMP:P', 'LF:book', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', 'LANG:FI', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
knows           ['LANG:EN']
know-           {'COMP:P', 'PF:know', 'LANG:EN', 'LF:know', 'SPEC:ADV', 'ASP', 'COMP:φ', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'CLASS:TR', 'ARG', 'SPEC:P', 'PHI:DET:_', '-COMP:v', '!COMP:*', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N', '-COMP:P'}
kohti           {'-COMP:A', 'PF:kohti', 'TAIL:V', '-SPEC:N', 'P', '-SPEC:C', '-COMP:T/fin', '-SPEC:V', '-SPEC:T/prt', '-SPEC:ADV', '-SPEC:v', 'COMP:φ', '-SPEC:Neg/fin', 'LF:towards', '-SPEC:P', '-SPEC:iR', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:iWH', '-SPEC:C/fin', '-COMP:uWH', '!COMP:*', '-VAL', '-COMP:T', 'adjoinable', 'SPEC:*', 'LANG:FI', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:ADV', 'PHI:GEN:_', '-SPEC:INF', '-COMP:N'}
koko            {'D', '!PROBE:N', 'PF:koko', '-COMP:uR', '-ARG', '-SPEC:C', '-COMP:T/fin', '-SPEC:V', '-SPEC:MA/lla', 'COMP:φ', '-EDGE:*', '-SPEC:P', '-SPEC:Neg/fin', 'COMP:n', 'φ', '!COMP:*', 'COMP:N', 'adjoinable', 'LANG:FI', '-SPEC:T/fin', '-SPEC:INF', 'LF:all', '-COMP:P', 'TAIL:T'}
kuka            ['LANG:FI']
KUKA            ['LANG:FI']
kuka-           {'-COMP:A', 'COMP:R', '-COMP:N', 'LF:who', 'COMP:D/rel', '-COMP:VA/inf', 'PHI', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:v', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', 'LANG:FI', '-SPEC:T/fin', '-SPEC:INF', 'PF:kuka'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'COMP:P', 'PF:kuorsaa', 'SPEC:ADV', '-COMP:T/fin', 'ASP', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', '-COMP:WH', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', '-COMP:v', '-COMP:φ', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', 'LF:snore', 'LANG:FI', '-SPEC:T/fin', '-COMP:N'}
kysyi           ['LANG:EN']
kysy-           {'COMP:P', 'LF:ask', 'PF:kysya', 'SPEC:ADV', 'ASP', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', '!PROBE:FORCE:OP:WH', '-COMP:v', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:N'}
lahella         {'-COMP:A', '!SPEC:φ', 'P', '-COMP:T/fin', '-SPEC:T/prt', '-SPEC:ADV', '-SPEC:v', '-SPEC:INF', 'PHI:PER:_', '-SPEC:iR', 'PF:lahella', 'LF:near', 'ARG', '-SPEC:iWH', '-SPEC:C/fin', '-COMP:uWH', '!SPEC:*', '!COMP:*', '-COMP:T', 'adjoinable', 'SPEC:*', 'PHI:GEN:_', 'VAL', 'COMP:V', '-SPEC:N', '-SPEC:C', '-SPEC:V', 'COMP:φ', '-COMP:C/fin', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:FORCE', 'PHI:DET:_', 'INF', 'PHI:NUM:_', 'COMP:v', 'LANG:FI', '-SPEC:T/fin', '-COMP:ADV', '-COMP:FORCE', '-COMP:N'}
lahella         {'-COMP:A', '-SPEC:N', 'P', '-SPEC:C', '-COMP:T/fin', '-SPEC:V', '-SPEC:T/prt', '-SPEC:ADV', '-SPEC:v', 'COMP:φ', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:iR', 'PHI:PER:_', 'PF:lahella', 'LF:near', '!COMP:φ', 'PHI:DET:_', 'ARG', '-SPEC:iWH', '-SPEC:C/fin', '-COMP:uWH', '!COMP:*', '-VAL', '-COMP:T', 'adjoinable', 'SPEC:*', 'LANG:FI', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:ADV', 'PHI:GEN:_', '-SPEC:INF', '-COMP:N'}
lahella_1       {'-COMP:A', '-SPEC:N', 'P', '-SPEC:C', '-COMP:T/fin', '-SPEC:V', '-SPEC:T/prt', '-SPEC:ADV', '-SPEC:v', 'COMP:φ', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:iR', 'PHI:PER:_', 'PF:lahella', 'LF:near', '!COMP:φ', 'PHI:DET:_', 'ARG', '-SPEC:iWH', '-SPEC:C/fin', '-COMP:uWH', '!COMP:*', '-VAL', '-COMP:T', 'adjoinable', 'SPEC:*', 'LANG:FI', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:ADV', 'PHI:GEN:_', '-SPEC:INF', '-COMP:N'}
lahella_2       {'-COMP:A', '!SPEC:φ', 'P', '-COMP:T/fin', '-SPEC:T/prt', '-SPEC:ADV', '-SPEC:v', '-SPEC:INF', 'PHI:PER:_', '-SPEC:iR', 'PF:lahella', 'LF:near', 'ARG', '-SPEC:iWH', '-SPEC:C/fin', '-COMP:uWH', '!SPEC:*', '!COMP:*', '-COMP:T', 'adjoinable', 'SPEC:*', 'PHI:GEN:_', 'VAL', 'COMP:V', '-SPEC:N', '-SPEC:C', '-SPEC:V', 'COMP:φ', '-COMP:C/fin', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:FORCE', 'PHI:DET:_', 'INF', 'PHI:NUM:_', 'COMP:v', 'LANG:FI', '-SPEC:T/fin', '-COMP:ADV', '-COMP:FORCE', '-COMP:N'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'COMP:P', 'PF:lahtea', 'CLASS:INTR', 'SPEC:φ', 'SPEC:ADV', 'ASP', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', '-COMP:MA/inf', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'LF:leave', 'SPEC:P', 'COMP:PP', '-COMP:v', '-COMP:φ', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:N'}
lavano          ['LANG:IT']
lava-           {'COMP:P', 'SPEC:ADV', 'ASP', 'COMP:φ', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'LANG:IT', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'SPEC:P', 'ARG', '-COMP:v', '!COMP:*', 'PF:lava', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', 'LF:wash', '-SPEC:T/fin', '-COMP:N'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'PF:le', 'D', '!PROBE:N', '-ARG', '-COMP:uR', '-SPEC:C', '-COMP:T/fin', '-SPEC:V', '-SPEC:MA/lla', 'LF:φ', '-EDGE:*', 'COMP:φ', '-SPEC:P', '-SPEC:Neg/fin', 'LANG:IT', 'COMP:n', 'φ', '!COMP:*', 'COMP:N', 'adjoinable', '-SPEC:T/fin', '-SPEC:INF', '-COMP:P'}
leaves          ['LANG:EN']
leave           {'!SPEC:φ', 'LANG:EN', 'COMP:P', 'SPEC:ADV', '-COMP:T/fin', 'ASP', 'PF:leave', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'LF:leave', 'SPEC:P', '-COMP:v', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N'}
leave-          {'!SPEC:φ', 'LANG:EN', 'COMP:P', 'SPEC:ADV', '-COMP:T/fin', 'ASP', 'PF:leave', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'LF:leave', 'SPEC:P', '-COMP:v', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N'}
like-           {'COMP:P', 'LANG:EN', 'SPEC:ADV', 'ASP', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'LF:like', 'SPEC:TO/inf', '!COMP:φ', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', '-COMP:v', '-VAL', 'PF:like', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N'}
likes           ['LANG:EN']
like            {'COMP:P', 'LANG:EN', 'SPEC:ADV', 'ASP', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'LF:like', 'SPEC:TO/inf', '!COMP:φ', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', '-COMP:v', '-VAL', 'PF:like', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N'}
little          ['LANG:EN']
little-         {'LF:little', 'LANG:EN', 'PF:little-', '2SPEC', '0', 'SPEC:φ'}
lle             {'-COMP:A', 'P', '-SPEC:*', '-COMP:T/fin', '-SPEC:T/prt', '-SPEC:ADV', '-SPEC:v', 'PHI:PER:_', '-SPEC:iR', 'ARG', 'LF:for', '-SPEC:iWH', '-SPEC:C/fin', '-COMP:uWH', '!COMP:*', '-VAL', '-COMP:T', '+SEM:directional', 'adjoinable', 'PHI:GEN:_', 'TAIL:V,+SEM:directional', '-SPEC:N', '-SPEC:C', '-SPEC:V', 'PF:P(lle)', 'COMP:φ', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:FORCE', 'PHI:DET:_', 'PHI:NUM:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:N'}
lla             {'-COMP:A', 'P', 'TAIL:*V', '-COMP:T/fin', '-SPEC:T/prt', '-SPEC:ADV', '-SPEC:v', 'PHI:PER:_', '-SPEC:iR', 'ARG', '-SPEC:iWH', '-SPEC:C/fin', 'LF:by', '-COMP:uWH', '!COMP:*', '-VAL', '-COMP:T', 'adjoinable', 'SPEC:*', 'PHI:GEN:_', 'PF:P(lla)', 'TAIL:T', '-SPEC:N', '-SPEC:C', '-SPEC:V', 'COMP:φ', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:FORCE', 'PHI:DET:_', 'PHI:NUM:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:N'}
Luisa           ['LANG:IT']
Luisa-          {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'LANG:IT', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:v', '-SEM:directional', 'D:REF:PROPER_NAME', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', 'PF:Luisa', '-COMP:WH', '-SPEC:FORCE', 'LF:Luisa', 'COMP:C', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'PF:luke', 'COMP:P', 'LF:read', 'SPEC:ADV', 'ASP', 'COMP:φ', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'CLASS:TR', 'ARG', 'SPEC:P', 'PHI:DET:_', '-COMP:v', '!COMP:*', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', '-COMP:P'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'COMP:P', 'LF:find', 'SPEC:ADV', 'ASP', 'PF:loyta-', 'COMP:φ', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', '!COMP:φ', 'V', 'CLASS:TR', 'ARG', 'SPEC:P', 'PHI:DET:_', '-COMP:v', '!COMP:*', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', '-SPEC:T/fin', 'ASP:BOUNDED', '-COMP:N', '-COMP:P'}
Mary            ['LANG:EN']
Mary-           {'-COMP:A', 'COMP:R', 'LANG:EN', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:v', '-SEM:directional', 'D:REF:PROPER_NAME', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-adjoinable', '-SPEC:N', '-SPEC:V', '-COMP:D', 'PF:Mary', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', 'LF:Mary', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
Merja           ['LANG:FI']
Merja_nom       ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merjaahan       ['LANG:FI']
Merja-          {'-COMP:A', 'COMP:R', '-COMP:N', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'LF:Merja', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:v', '-SEM:directional', 'D:REF:PROPER_NAME', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-adjoinable', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', 'LANG:FI', '-SPEC:T/fin', '-SPEC:INF', 'PF:Merja'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
meren           ['LANG:FI']
mere-           {'-COMP:A', 'COMP:R', '-SPEC:R', 'COMP:P', 'PF:meri', 'COMP:D/rel', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', 'N', '-SPEC:ADV', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'LF:ocean', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:C/fin', '-COMP:v', 'LANG:FI', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
mies            ['LANG:EN']
mies-           {'-COMP:A', 'COMP:R', '-SPEC:R', 'COMP:P', 'COMP:D/rel', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', 'N', '-SPEC:ADV', '-COMP:AUX', '-COMP:V', 'COMP:uR', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'LF:man', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:C/fin', '-COMP:v', 'LANG:FI', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N', 'PF:mies'}
mistake         {'-COMP:A', 'COMP:R', '-SPEC:R', 'LANG:EN', 'COMP:P', 'COMP:D/rel', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', 'N', '-SPEC:ADV', '-COMP:AUX', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'LF:mistake', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:C/fin', '-COMP:v', 'PF:mistake', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-COMP:A', 'COMP:R', '-SPEC:R', 'COMP:P', 'COMP:D/rel', '-COMP:VA/inf', 'PF:mika-', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', 'N', '-SPEC:ADV', '-COMP:AUX', '-COMP:V', 'COMP:uR', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:C/fin', '-COMP:v', 'LANG:FI', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N', 'LF:what'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'COMP:P', 'LANGN:EN', 'SPEC:ADV', 'ASP', 'COMP:φ', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'LF:move', 'SPEC:TO/inf', 'V', 'CLASS:TR', 'PF:move', 'ARG', 'SPEC:P', 'PHI:DET:_', '-COMP:v', '!COMP:*', '-VAL', 'PHI:NUM:_', '+SEM:directional', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N', '-COMP:P'}
mukavasti       ['LANG:EN']
mukava-         {'LF:comfortably', 'LANG:FI', 'PF:mukavasti', '2SPEC', '0', 'SPEC:φ'}
must            {'-COMP:INF', 'SPEC:FORCE', 'LANG:EN', 'COMP:V', 'SPEC:C/fin', '-SPEC:TO/inf', 'FIN', 'PF:must', '-adjoinable', 'SPEC:φ', '-SPEC:N', '-SPEC:C', '-COMP:T/fin', '-SPEC:V', 'LF:must', '-SPEC:T/prt', '-SPEC:v', 'PHI:PER:_', 'MODAL', 'T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'ARG', 'COMP:T/prt', 'COMP:Neg', '!COMP:*', '!PROBE:V', '!SPEC:*', 'COMP:v', 'PHI:NUM:_', '-SPEC:Neg', 'T', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:*', 'VAL'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'COMP:P', 'LF:sell', 'SPEC:ADV', '-COMP:T/fin', 'ASP', 'COMP:φ', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'PF:myy', 'SPEC:TO/inf', '-COMP:Neg/fin', 'V', 'CLASS:TR', 'ARG', 'SPEC:P', 'PHI:DET:_', '-COMP:v', '!COMP:*', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', '-SPEC:T/fin', 'ASP:BOUNDED', '-COMP:N', '-COMP:P'}
nainen          {'-COMP:A', 'COMP:R', '-SPEC:R', 'COMP:P', '-COMP:N', 'COMP:D/rel', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', 'N', '-SPEC:ADV', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'PF:nainen', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:C/fin', '-COMP:v', 'LANG:FI', '-SPEC:T/fin', '-SPEC:INF', 'LF:woman'}
naki            ['LANG:FI']
nakee           ['LANG:FI']
nake-           {'-COMP:MA/tta', 'COMP:P', 'SPEC:ADV', 'ASP', 'COMP:φ', '-COMP:V', 'PF:nake', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'CLASS:TR', 'ARG', 'SPEC:P', 'PHI:DET:_', 'LF:see', '-COMP:ESSA/inf', '-COMP:v', '-COMP:MA/ssa', '!COMP:*', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', '-SPEC:T/fin', 'ASP:BOUNDED', '-COMP:N', '-COMP:P'}
nayttaa         ['LANG:FI']
naytta-         {'!SPEC:φ', 'COMP:P', '-COMP:N', '!COMP:VA/inf', '-ARG', 'SPEC:ADV', 'ASP', '-COMP:V', '-SPEC:FORCE', 'LF:seem', 'SPEC:TO/inf', 'V', 'SPEC:P', 'SEM:internal', '-COMP:v', 'LANG:FI', 'PF:naytta', '-SPEC:T/fin', 'VAL'}
ndo             {'COMP:V', 'LANG:EN', 'LF:ing', 'PRG', 'PF:PRG', '!COMP:*', 'INF', '?ARG', 'COMP:v', '-COMP:T/fin', '-SPEC:V', '-SPEC:T/fin', '-COMP:FORCE', 'VAL', '-COMP:C/fin'}
ne              {'D', 'PHI:NUM:PL', '!PROBE:N', '-ARG', '-COMP:uR', '-SPEC:C', '-COMP:T/fin', '-SPEC:V', '-SPEC:INF', '-SPEC:MA/lla', 'COMP:φ', '-EDGE:*', '-SPEC:P', '-SPEC:Neg/fin', 'COMP:n', 'φ', 'PHI:PER:3', '!COMP:*', 'COMP:N', 'adjoinable', 'LANG:FI', '-SPEC:T/fin', 'LF:those', '-COMP:P', 'PF:ne'}
niiden          ['LANG:EN']
nen             {'PF:a', 'LF:ing', 'COMP:0', '-SPEC:A', 'TAIL:φ', 'SPEC:*', 'LANG:FI', 'A', '-SPEC:φ'}
not             {'Neg', 'LF:not', 'LANG:EN', 'ARG', '-COMP:C', 'PHI:DET:_', '!COMP:*', '-VAL', 'POL:NEG', '-COMP:FIN', 'PF:not', 'SPEC:*', '-COMP:φ', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:GEN:_', 'PHI:PER:_'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'COMP:P', 'CLASS:INTR', 'SPEC:φ', 'SPEC:ADV', '-COMP:T/fin', 'PF:nukku', 'ASP', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', '-COMP:MA/inf', 'SPEC:TO/inf', '-COMP:Neg/fin', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', '-COMP:v', 'LF:sleep', '-VAL', '-COMP:T', '-COMP:φ', 'PHI:NUM:_', 'LANG:FI', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-COMP:A', 'COMP:R', '-SPEC:R', 'COMP:P', 'COMP:D/rel', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', 'N', '-SPEC:ADV', '-COMP:AUX', '-COMP:V', 'COMP:uR', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:P', 'LF:possessions', '-COMP:WH', 'PF:omaisuuden', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:C/fin', '-COMP:v', 'LANG:FI', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
operatoria      ['LANG:IT']
operatoria-     {'2SPEC', 'PF:operatoria', 'SPEC:φ', '0', 'LF:operation', 'LANG:IT'}
ostaa           ['LANG:FI']
osta-           {'COMP:P', 'LF:buy', 'SPEC:ADV', 'ASP', 'COMP:φ', '-COMP:V', 'PF:osta', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'CLASS:TR', 'ARG', 'SPEC:P', 'PHI:DET:_', '-COMP:v', '!COMP:*', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', '-SPEC:T/fin', 'ASP:BOUNDED', '-COMP:N', '-COMP:P'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:v', 'SEM:nonreferential', 'LF:day', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', 'PF:paiva', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', 'LANG:FI', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
past            {'-COMP:A', 'LANG:EN', '-SPEC:N', 'P', '-SPEC:C', '-SPEC:*', '-COMP:T/fin', '-SPEC:V', '-SPEC:T/prt', '-SPEC:ADV', '-SPEC:v', 'COMP:φ', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:FORCE', 'PF:past', '-SPEC:iR', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:iWH', '-SPEC:C/fin', '-COMP:uWH', '!COMP:*', '-VAL', '-COMP:T', 'LF:past', 'adjoinable', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:N', '-float'}
Pariisia        ['LANG:FI']
Pariisi-        {'-COMP:A', 'COMP:R', '-SPEC:R', 'COMP:P', 'COMP:D/rel', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', 'N', '-SPEC:ADV', '-COMP:AUX', '-COMP:V', 'COMP:uR', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'LF:Paris', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:C/fin', 'PF:Pariisi', '-COMP:v', 'LANG:FI', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekkahan        ['LANG:FI']
PEKKA           ['LANG:EN']
Pekka-          {'-COMP:A', 'COMP:R', 'PF:Pekka', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:v', '-SEM:directional', 'D:REF:PROPER_NAME', '-SPEC:R', 'COMP:P', 'LF:Pekka', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', 'LANG:FI', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'COMP:P', 'LF:fear', 'SPEC:ADV', 'ASP', 'PF:pelkaa', 'COMP:φ', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'CLASS:TR', 'ARG', 'SPEC:P', 'PHI:DET:_', '-COMP:v', '!COMP:*', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', '-COMP:P'}
persuades       ['LANG:EN']
persuade-       {'COMP:P', 'LANG:EN', 'SPEC:ADV', 'SEM:external', 'PF:persuade', 'ASP', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', 'LF:persuade', '-COMP:v', 'COMP:TO/inf', '!COMP:*', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N'}
peruuntui       ['LANG:FI']
peruuntu-       {'COMP:P', 'SPEC:φ', 'SPEC:ADV', 'ASP', 'PF:peruuntui', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'LF:cancelled', 'ARG', 'SPEC:P', '-COMP:v', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:N'}
pesi            ['LANG:FI']
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'COMP:P', 'SPEC:ADV', 'ASP', 'COMP:φ', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'CLASS:TR', 'ARG', 'SPEC:P', 'PHI:DET:_', '-COMP:v', '!COMP:*', 'PF:pese_asp', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', 'LF:wash', 'LANG:FI', '-SPEC:T/fin', 'ASP:BOUNDED', '-COMP:N', '-COMP:P'}
pese-           {'COMP:P', 'PF:pese', 'SPEC:ADV', 'ASP', 'COMP:φ', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'CLASS:TR', 'ARG', 'SPEC:P', 'PHI:DET:_', '-COMP:v', '!COMP:*', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', 'LF:wash', '-SPEC:T/fin', '-COMP:N', '-COMP:P'}
petardi         {'-COMP:A', 'COMP:R', '-SPEC:R', 'COMP:P', 'COMP:D/rel', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:N', '-SPEC:V', 'PF:petardi', '-COMP:D', 'N', '-SPEC:ADV', '-COMP:AUX', '-COMP:V', 'COMP:uR', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-COMP:WH', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:C/fin', '-COMP:v', 'LF:firecrackers', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
pieni           ['LANG:FI']
pieni-          {'PF:pieni-', 'LANG:FI', '2SPEC', '0', 'LF:small', 'SPEC:φ'}
poikien         ['LANG:FI']
poika-          {'-COMP:A', 'COMP:R', '-SPEC:R', 'COMP:P', 'COMP:D/rel', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', 'N', '-SPEC:ADV', '-COMP:AUX', '-COMP:V', 'COMP:uR', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:C/fin', '-COMP:v', 'PF:poika', 'LANG:FI', 'LF:boy', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
puhelinta       ['LANG:FI']
puhelin-        {'LANG:FI', '2SPEC', 'PF:puhelin', '0', 'LF:phone', 'SPEC:φ'}
punainen        ['LANG:FI']
puna-           {'PF:puna-', 'LANG:FI', '2SPEC', '0', 'LF:red', 'SPEC:φ'}
presupposto     {'-COMP:A', 'COMP:R', '-SPEC:R', 'COMP:P', 'COMP:D/rel', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:N', 'PF:presupposto', '-SPEC:V', '-COMP:D', 'N', '-SPEC:ADV', '-COMP:AUX', '-COMP:V', 'COMP:uR', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-COMP:WH', '-SPEC:FORCE', 'LF:presupposition', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:C/fin', '-COMP:v', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
primary         {'-COMP:A', 'COMP:R', '-SPEC:R', 'COMP:P', 'COMP:D/rel', 'PF:primary', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', 'LF:nurse', 'N', '-SPEC:ADV', '-COMP:AUX', '-COMP:V', 'COMP:uR', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-COMP:WH', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:C/fin', '-COMP:v', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
promises        ['LANG:EN']
promise-        {'COMP:P', 'LANG:EN', 'SPEC:φ', 'SPEC:ADV', 'ASP', 'COMP:φ', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SEM:internal', 'SPEC:P', 'PF:promise', '-COMP:v', '-VAL', 'LF:promise', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N'}
problem         {'-COMP:A', 'COMP:R', '-SPEC:R', 'LANG:EN', 'COMP:P', 'COMP:D/rel', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:N', 'LF:problem', '-SPEC:V', '-COMP:D', 'N', '-SPEC:ADV', '-COMP:AUX', '-COMP:V', 'COMP:uR', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:A', 'PF:problem', 'COMP:C', '-SPEC:C/fin', '-COMP:v', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
pyytaa          ['LANG:FI']
pyyta-          {'COMP:P', 'LF:ask', 'SPEC:ADV', 'SEM:external', 'ASP', 'PF:pyyda', 'COMP:φ', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'CLASS:TR', 'ARG', 'SPEC:P', 'PHI:DET:_', '-COMP:v', '!COMP:*', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', '-COMP:P'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'COMP:P', 'LANG:EN', 'CLASS:INTR', 'SPEC:φ', 'SPEC:ADV', '-COMP:T/fin', 'ASP', 'LF:race', '-COMP:V', 'PF:race', '-SPEC:FORCE', 'LAMG:EN', '-COMP:MA/inf', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', '-COMP:v', '!COMP:*', '-VAL', '-COMP:φ', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N'}
raukesi         ['LANG:FI']
raukea-         {'COMP:P', 'SPEC:ADV', 'LF:terminate', 'ASP', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', 'PF:raukea', '-COMP:v', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:N'}
red             ['LANG:EN']
red-            {'PF:red', 'LANG:EN', '2SPEC', '0', 'LF:red', 'SPEC:φ'}
saavuttaa       ['LANG:FI']
saavutta-       {'COMP:P', 'LF:reach', 'SPEC:ADV', 'ASP', 'PF:saavutta-', 'COMP:φ', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', '!COMP:φ', 'CLASS:TR', 'V', 'ARG', 'SPEC:P', 'PHI:DET:_', '-COMP:v', '!COMP:*', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', '-SPEC:T/fin', 'ASP:BOUNDED', '-COMP:N', '-COMP:P'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'COMP:P', 'PF:sano-', 'SPEC:φ', 'SPEC:ADV', 'ASP', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'COMP:FORCE', 'SPEC:P', '-COMP:v', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', 'COMP:VA/inf', '-SPEC:T/fin', 'LF:say', '-COMP:N'}
said            ['LANG:EN']
say'            {'COMP:P', 'LANG:EN', '!COMP:FORCE', 'SPEC:φ', 'SPEC:ADV', 'ASP', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'PF:say', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', '-COMP:v', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', 'LF:say', '-COMP:N'}
say-            {'COMP:P', 'LANG:EN', '!COMP:FORCE', 'SPEC:φ', 'SPEC:ADV', 'ASP', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'PF:say', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', '-COMP:v', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', 'LF:say', '-COMP:N'}
sala            ['LANG:IT']
sala-           {'-COMP:A', 'COMP:R', '-SPEC:R', 'COMP:P', 'COMP:D/rel', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:N', 'LF:room', '-SPEC:V', '-COMP:D', 'N', '-SPEC:ADV', '-COMP:AUX', '-COMP:V', 'COMP:uR', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-COMP:WH', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:C/fin', '-COMP:v', 'PF:sala', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
scoppiati       ['LANG:IT']
scoppia-        {'COMP:P', 'SPEC:ADV', 'ASP', 'LF:explode', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'LANG:IT', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', '-COMP:v', 'PF:scoppia', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N'}
sentenza        {'-COMP:A', 'COMP:R', '-SPEC:R', 'COMP:P', 'COMP:D/rel', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', 'N', '-SPEC:ADV', '-COMP:AUX', '-COMP:V', 'COMP:uR', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-COMP:WH', '-SPEC:FORCE', 'PF:sentenza', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:C/fin', '-COMP:v', '-SPEC:T/fin', 'LF:sentence', '-SPEC:INF', '-COMP:N'}
Seine           ['LANG:EN']
Seine-          {'-COMP:A', 'COMP:R', 'LANG:EN', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'LF:Seine', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:v', 'D:REF:PROPER_NAME', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'PF:Seine', '-SPEC:FORCE', 'COMP:C', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
sembrano        ['LANG:IT']
sembra-         {'COMP:P', 'LANG:EN', 'PF:sembra', '-ARG', 'SPEC:φ', 'SPEC:ADV', '-COMP:V', '-SPEC:FORCE', 'LF:seem', 'SPEC:TO/inf', 'V', 'SPEC:P', '-COMP:v', '-COMP:φ', '-VAL', '!COMP:ARE/inf', '-SPEC:T/fin', '-COMP:N', '-ASP'}
sleeps          ['LANG:EN']
sleep           {'COMP:P', 'LANG:EN', 'CLASS:INTR', 'SPEC:φ', 'SPEC:ADV', 'ASP', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', '-COMP:MA/inf', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', 'PF:sleep', 'LF:sleep', '-COMP:v', '-VAL', '-COMP:φ', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N'}
sleep-          {'COMP:P', 'LANG:EN', 'CLASS:INTR', 'SPEC:φ', 'SPEC:ADV', 'ASP', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', '-COMP:MA/inf', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', 'PF:sleep', 'LF:sleep', '-COMP:v', '-VAL', '-COMP:φ', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N'}
solution        {'-COMP:A', 'COMP:R', '-SPEC:R', 'LANG:EN', 'PF:solution', 'COMP:P', 'COMP:D/rel', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', 'N', 'LF:solution', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-COMP:AUX', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:C/fin', '-COMP:v', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-COMP:A', 'COMP:R', 'LF:agreement', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:v', '-SPEC:R', 'COMP:P', 'COMP:R/D', '!COMP:A/inf', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', 'LANG:FI', 'PF:sopimus', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
spinge          ['LANG:IT']
spinge-         {'SPEC:ADV', 'ASP', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'LANG:IT', 'LF:push', 'SPEC:TO/inf', '!COMP:φ', 'V', 'PHI:DET:_', 'ARG', 'PF:spinge', 'SPEC:P', '-COMP:v', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N', '-COMP:P'}
ssa             {'-COMP:A', 'TAIL:V', 'P', '-COMP:T/fin', '-SPEC:T/prt', '-SPEC:ADV', '-SPEC:v', 'PHI:PER:_', '-SPEC:iR', 'COMP:n/MA', 'ARG', '-SPEC:iWH', '-SPEC:C/fin', '-COMP:uWH', '!COMP:*', '-VAL', '-COMP:T', 'adjoinable', 'SPEC:*', 'PHI:GEN:_', 'LF:in', 'PF:ssa', '-SPEC:N', '-SPEC:C', '-SPEC:V', 'COMP:φ', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:FORCE', 'PHI:DET:_', 'PHI:NUM:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:N'}
stanno          ['LANG:IT']
sta-            {'COMP:P', 'LANG:EN', 'LF:stay', 'SPEC:φ', 'SPEC:ADV', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SEM:internal', 'SPEC:P', '-COMP:v', 'PF:sta', 'COMP:PRG', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N', '-ASP'}
sti             {'LF:by', '-ARG', '!COMP:*', '-SPEC:N', 'adjoinable', 'SPEC:*', 'LANG:FI', '-SPEC:FORCE', 'PF:sti', '-SPEC:T/fin', 'ADV', '-SPEC:Neg/fin', 'TAIL:T'}
sukka           ['LANG:EN']
sukka_0acc      ['LANG:EN']
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukan_acc       ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-COMP:A', 'COMP:R', '-SPEC:R', 'COMP:P', '-COMP:N', 'COMP:D/rel', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', 'N', '-SPEC:ADV', '-COMP:AUX', '-COMP:V', 'COMP:uR', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:T/prt', 'LF:socks', 'SPEC:A', 'COMP:C', '-SPEC:C/fin', '-COMP:v', 'LANG:FI', '-SPEC:T/fin', '-SPEC:INF', 'PF:sukka-'}
surprised       ['LANG:EN']
surprise-       {'COMP:P', 'LANG:EN', 'SPEC:ADV', '-COMP:T/fin', 'ASP', 'COMP:φ', '-COMP:V', 'LF:surprise', '-SPEC:FORCE', '-COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'CLASS:TR', 'ARG', 'SPEC:P', 'PHI:DET:_', '-COMP:v', '!COMP:*', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N', 'PF:surprise'}
talo            ['LANG:EN']
taloa           ['LANG:EN']
talona          ['LANG:EN']
taloksi         ['LANG:EN']
talo-           {'-COMP:A', 'COMP:R', '-SPEC:R', 'COMP:P', 'LF:house', 'COMP:D/rel', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', 'N', '-SPEC:ADV', '-COMP:AUX', '-COMP:V', 'COMP:uR', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:C/fin', '-COMP:v', 'PF:talo', 'LANG:FI', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
tama            ['LANG:EN']
tama-           {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'PHI', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:v', '-SPEC:R', 'COMP:P', 'COMP:R/D', 'LF:this', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', 'PF:tama', 'LANG:FI', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'COMP:P', 'PF:taytyy', 'FIN', '!COMP:A/inf', 'SPEC:ADV', 'LF:must', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'MODAL', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', '-COMP:v', '-VAL', 'PHI:NUM:_', 'SPEC:*', 'PHI:GEN:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', '-ASP'}
teki            ['LANG:FI']
teke-           {'PF:teke', 'COMP:P', 'LF:make', 'SPEC:ADV', 'ASP', 'COMP:φ', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', '!COMP:φ', 'V', 'CLASS:TR', 'ARG', 'SPEC:P', 'PHI:DET:_', '-COMP:v', '-COMP:A/inf', '!COMP:*', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', '-SPEC:T/fin', 'ASP:BOUNDED', '-COMP:N', '-COMP:P'}
that            {'FORCE:DECL', 'COMP:C/fin', 'LANG:EN', 'COMP:T/fin', 'FIN', '-ARG', 'LF:that', '!COMP:*', '-VAL', '-SPEC:*', 'PF:that', '!PROBE:FIN', 'FORCE'}
the             {'D', 'LANG:EN', '!PROBE:N', '-ARG', 'PHI:NUM:SG', '-COMP:uR', '-SPEC:C', '-COMP:T/fin', '-SPEC:V', '-SPEC:MA/lla', 'COMP:φ', '-EDGE:*', '-SPEC:P', '-SPEC:Neg/fin', 'PHI:DET:DEF', 'COMP:n', 'PF:the', 'φ', 'PHI:PER:3', '!COMP:*', 'COMP:N', 'adjoinable', 'LF:the', '-SPEC:T/fin', '-SPEC:INF', '-COMP:P'}
to              {'-COMP:A', 'LANG:EN', 'TAIL:V', 'P', '-SPEC:*', '-COMP:T/fin', '-SPEC:T/prt', '-SPEC:ADV', '-SPEC:v', 'PHI:PER:_', '-SPEC:iR', 'ARG', '-SPEC:iWH', '-SPEC:C/fin', '-COMP:uWH', '!COMP:*', '-VAL', '-COMP:T', '+SEM:directional', 'adjoinable', 'PHI:GEN:_', 'PF:to', '-float', 'LF:to', '-SPEC:N', '-SPEC:C', '-SPEC:V', 'COMP:φ', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:FORCE', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:N'}
to_inf          {'LANG:EN', '?ARG', '-COMP:T/fin', '-SPEC:V', 'LF:TO/inf', '-SPEC:v', 'TO/inf', '-COMP:C/fin', 'PF:TO/inf', '!COMP:*', 'INF', '-VAL', 'adjoinable', 'COMP:v', '-SPEC:T/fin', '-COMP:FORCE', 'COMP:V'}
towards         {'-COMP:A', 'LANG:EN', 'TAIL:V', 'P', '-SPEC:*', '-COMP:T/fin', '-SPEC:T/prt', '-SPEC:ADV', '-SPEC:v', 'PF:towards', 'PHI:PER:_', 'LF:towards', '-SPEC:iR', 'ARG', '-SPEC:iWH', '-SPEC:C/fin', '-COMP:uWH', '!COMP:*', '-VAL', '-COMP:T', 'adjoinable', 'PHI:GEN:_', '-float', '-SPEC:N', '-SPEC:C', '-SPEC:V', 'COMP:φ', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:FORCE', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:N'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'COMP:P', 'LF:nudge', 'PF:tonaise', 'SPEC:ADV', 'ASP', 'COMP:φ', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'CLASS:TR', 'ARG', 'SPEC:P', 'PHI:DET:_', '-COMP:v', '!COMP:*', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', '-COMP:P'}
tta             {'-COMP:A', 'P', '-COMP:T/fin', '-SPEC:T/prt', '-SPEC:ADV', '-SPEC:v', 'PHI:PER:_', '-SPEC:iR', 'COMP:n/MA', 'ARG', '-SPEC:iWH', '-SPEC:C/fin', '-COMP:uWH', '!COMP:*', '-VAL', '-COMP:T', 'adjoinable', 'SPEC:*', 'PHI:GEN:_', '-SPEC:N', '-SPEC:C', '-SPEC:V', 'COMP:φ', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:FORCE', 'PHI:DET:_', 'PF:tta', 'PHI:NUM:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:ADV', 'ADV', '-SPEC:INF', '-COMP:N', 'LF:without'}
tries           ['LANG:EN']
try-            {'COMP:P', 'LANG:EN', 'SPEC:φ', '!COMP:TO/inf', 'SPEC:ADV', 'ASP', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', '!COMP:-ARG', 'ARG', 'SEM:internal', 'SPEC:P', 'PHI:DET:_', '-COMP:v', 'PF:try', '-VAL', 'PHI:NUM:_', 'LF:try', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N'}
verifiche       {'-COMP:A', 'COMP:R', '-SPEC:R', 'COMP:P', '-COMP:N', 'COMP:D/rel', '-COMP:VA/inf', 'COMP:R/D', 'LF:verification', '-SPEC:N', '-SPEC:V', '-COMP:D', 'N', '-SPEC:ADV', '-COMP:AUX', '-COMP:V', 'COMP:uR', '-SPEC:uWH', '-COMP:C/fin', '-SPEC:P', 'LANG:IT', '-COMP:WH', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:C/fin', '-COMP:v', '-SPEC:T/fin', '-SPEC:INF', 'PF:verifiche'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'COMP:P', 'CLASS:INTR', 'LF:flow', 'SPEC:φ', 'SPEC:ADV', 'ASP', 'PF:virtaa', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', '-COMP:MA/inf', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', '-COMP:v', '-COMP:φ', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:N', '!COMP:P'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'LF:want', 'LANG:EN', 'COMP:P', 'PF:volu', '-SPEC:*', 'SPEC:ADV', 'ASP', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SEM:internal', 'SPEC:P', '-COMP:v', '!COMP:*', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'COMP:P', 'LANG:EN', 'PF:voitta', 'SPEC:ADV', 'ASP', 'COMP:φ', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'CLASS:TR', 'ARG', 'SPEC:P', 'PHI:DET:_', 'SEM:achievement', '-COMP:v', '!COMP:*', '-VAL', 'LF:win', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', 'ASP:BOUNDED', '-COMP:N', '-COMP:P'}
wants           ['LANG:EN']
want-           {'LF:want', 'LANG:EN', 'COMP:P', '-SPEC:TO/inf', 'SPEC:ADV', 'ASP', 'COMP:φ', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'V', 'CLASS:TR', 'SPEC:P', 'ARG', 'PHI:DET:_', '-COMP:v', 'COMP:TO/inf', '!COMP:*', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', 'PF:want', '-COMP:N', '-COMP:P'}
what            ['LANG:EN']
what-           {'-COMP:A', 'COMP:R', 'LANG:EN', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'PHI_N', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:*', '-COMP:v', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', 'PF:what', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N', 'LF:what'}
which           {'D', 'LANG:EN', '!PROBE:N', '-ARG', '-COMP:uR', 'LF:which', '-SPEC:C', '-COMP:T/fin', '-SPEC:V', '-SPEC:MA/lla', 'COMP:φ', '-EDGE:*', 'DIS:WH', '-SPEC:P', '-SPEC:Neg/fin', 'COMP:n', 'φ', 'OP:WH', 'PF:which', '!COMP:*', 'adjoinable', 'COMP:N', '-SPEC:T/fin', '-SPEC:INF', '-COMP:P'}
who             ['LANG:EN']
who-            {'-COMP:A', 'COMP:R', 'LANG:EN', 'LF:who', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'PHI_N', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:*', '-COMP:v', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', 'PF:who', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
whether         {'COMP:C/fin', 'OP:Q', 'LANG:EN', 'COMP:T/fin', 'FIN', 'OP:WH', 'Q', '-ARG', '!COMP:*', '-VAL', '-SPEC:*', 'LF:whether', '!PROBE:FIN', 'FORCE', 'PF:whether'}
yrittaa         ['LANG:FI']
yritta-         {'COMP:P', 'LANG:EN', '!COMP:A/inf', 'SPEC:φ', 'SPEC:ADV', 'ASP', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', '!COMP:-ARG', 'ARG', 'SEM:internal', 'SPEC:P', 'PHI:DET:_', '-COMP:v', '-VAL', 'PHI:NUM:_', 'LF:try', 'PHI:GEN:_', 'PF:yritta', '-SPEC:T/fin', '-COMP:N'}
mina            ['LANG:EN']
mina-           {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'PHI_N', 'COMP:T/prt', 'SPEC:A', 'PF:mina', '-SPEC:C/fin', '-COMP:*', '-COMP:v', 'LF:I', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', 'LANG:FI', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
sina            ['LANG:EN']
sina-           {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'PHI_N', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:*', '-COMP:v', 'LF:you', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'PF:sina', '-SPEC:FORCE', 'COMP:C', 'LANG:FI', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
han             ['LANG:EN']
han-            {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'PHI_N', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:*', '-COMP:v', 'PF:han', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', 'LANG:FI', 'LF:s/he', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'PHI_N', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:*', '-COMP:v', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'PF:me', 'COMP:C', 'LANG:FI', '-SPEC:T/fin', 'LF:we', '-SPEC:INF', '-COMP:N'}
te              ['LANG:EN']
te-             {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'PHI_N', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:*', '-COMP:v', 'LF:you', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', 'LANG:FI', 'PF:te', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'PHI_N', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:*', '-COMP:v', 'PF:he', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', 'LF:they', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', 'LANG:FI', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
se              ['LANG:EN']
se              ['LANG:EN']
sen             ['LANG:EN']
sita            ['LANG:EN']
se-             {'D', 'LF:the/that', '!PROBE:N', '-ARG', '-COMP:uR', '-SPEC:C', '-COMP:T/fin', '-SPEC:V', '-SPEC:MA/lla', 'COMP:φ', '-EDGE:*', 'PF:se', '-SPEC:P', '-SPEC:Neg/fin', 'COMP:n', 'φ', '!COMP:*', 'COMP:N', 'adjoinable', 'LANG:FI', '-SPEC:T/fin', '-SPEC:INF', '-COMP:P'}
I               ['LANG:EN']
I-              {'-COMP:A', 'COMP:R', 'LANG:EN', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'PHI_N', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:*', '-COMP:v', 'LF:I', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'PF:I', 'COMP:C', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
you             ['LANG:EN']
you-            {'-COMP:A', 'COMP:R', 'LANG:EN', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'PHI_N', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:*', '-COMP:v', 'LF:you', 'PF:you', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
he              ['LANG:EN']
he-             {'-COMP:A', 'COMP:R', 'LANG:EN', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'PHI_N', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:*', '-COMP:v', 'PF:he', '-SPEC:R', 'COMP:P', 'COMP:R/D', 'LF:he', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
she             ['LANG:EN']
she-            {'-COMP:A', 'COMP:R', 'LANG:EN', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'PHI_N', 'LF:she', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:*', '-COMP:v', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'PF:she', 'COMP:C', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
we              ['LANG:EN']
we-             {'-COMP:A', 'COMP:R', 'LANG:EN', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'PF:we', 'PHI_N', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:*', '-COMP:v', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', '-SPEC:T/fin', 'LF:we', '-SPEC:INF', '-COMP:N'}
you_pl          ['LANG:EN']
you_pl-         {'-COMP:A', 'COMP:R', 'LANG:EN', 'COMP:D/rel', '-COMP:VA/inf', 'PF:you_pl', 'PHI', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:v', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N', 'LF:you_pl'}
they            ['LANG:EN']
they-           {'-COMP:A', 'COMP:R', 'LANG:EN', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'PHI_N', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:*', '-COMP:v', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', 'LF:they', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N', 'PF:they'}
it              ['LANG:EN']
it-             {'D', 'LANG:EN', '!PROBE:N', '-ARG', '-COMP:uR', '-SPEC:C', 'LF:it/that', '-COMP:T/fin', '-SPEC:V', '-SPEC:MA/lla', 'COMP:φ', '-EDGE:*', '-SPEC:P', '-SPEC:Neg/fin', 'COMP:n', 'φ', '!COMP:*', 'COMP:N', 'adjoinable', 'PF:it', '-SPEC:T/fin', '-SPEC:INF', '-COMP:P'}
io              ['LANG:EN']
io-             {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'LANG:IT', 'PHI_N', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:*', '-COMP:v', 'LF:I', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', 'PF:io', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
tu              ['LANG:EN']
tu-             {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'LANG:IT', 'PHI_N', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:*', '-COMP:v', 'LF:you', '-SPEC:R', 'COMP:P', 'PF:tu', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
lui             ['LANG:EN']
lui-            {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'PF:lui', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'LANG:IT', 'PHI_N', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:*', '-COMP:v', '-SPEC:R', 'COMP:P', 'COMP:R/D', 'LF:he', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
lei             ['LANG:EN']
lei-            {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'PF:lei', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'LANG:IT', 'PHI_N', 'LF:she', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:*', '-COMP:v', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
noi             ['LANG:EN']
noi-            {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'LANG:IT', 'PHI_N', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:*', '-COMP:v', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'PF:noi', 'COMP:C', '-SPEC:T/fin', 'LF:we', '-SPEC:INF', '-COMP:N'}
voi             ['LANG:EN']
voi-            {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'LANG:IT', 'PHI_N', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:*', '-COMP:v', 'PF:voi', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N', 'LF:you_pl'}
loro            ['LANG:EN']
loro-           {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'LANG:IT', 'PHI_N', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:*', '-COMP:v', 'PF:loro', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', 'LF:they', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
mi              ['LANG:EN']
mi-             {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'LANG:IT', 'PHI_N', 'PF:mi(cl)', 'COMP:T/prt', 'SPEC:A', 'LF:me', 'CL', '-SPEC:C/fin', '-COMP:*', '-COMP:v', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
la              ['LANG:EN']
la-             {'-COMP:A', 'COMP:R', 'LF:her', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', 'PF:la(cl)', '-SPEC:uWH', 'LANG:IT', 'PHI_N', 'COMP:T/prt', 'SPEC:A', 'CL', '-SPEC:C/fin', '-COMP:*', '-COMP:v', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
lo              ['LANG:EN']
lo-             {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'LANG:IT', 'PHI_N', 'COMP:T/prt', 'SPEC:A', 'CL', '-SPEC:C/fin', '-COMP:*', '-COMP:v', '-SPEC:R', 'COMP:P', 'PF:lo(cl)', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', 'LF:him', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
si              ['LANG:EN']
si-             {'-COMP:A', 'COMP:R', 'PF:si(cl)', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'LANG:IT', 'PHI_N', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:*', '-COMP:v', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'CAL:CL', 'COMP:C', 'LF:3sg', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-COMP:A', 'COMP:R', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'LANG:IT', 'PHI_N', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', 'LF:there', '-COMP:*', '-COMP:v', '-SPEC:R', 'COMP:P', 'COMP:R/D', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', 'PF:ci', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'COMP:C', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
[-n]            {'PHI:HUM:HUM', 'PHI', 'PHI:NUM:SG', 'LANG:FI', 'inflectional', 'PHI:DET:DEF', 'PHI:PER:1'}
[-t]            {'PHI:HUM:HUM', 'PHI', 'LANG:FI', 'PHI:DET:DEF', 'inflectional', 'PHI:PER:2', 'PHI:NUM:SG'}
[-V]            {'PHI', 'LANG:FI', 'inflectional', 'PHI:PER:3', 'PHI:NUM:SG'}
[-mme]          {'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI', 'LANG:FI', 'inflectional', 'PHI:DET:DEF', 'PHI:PER:1'}
[-mme]          {'PHI:HUM:HUM', 'PHI:NUM:PL', 'LANG:FI', 'PHI:DET:DEF', 'inflectional', 'PHI:PER:1'}
[-tte]          {'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI', 'LANG:FI', 'inflectional', 'PHI:PER:2', 'PHI:DET:DEF'}
[-vat]          {'PHI:NUM:PL', 'PHI', 'LANG:FI', 'inflectional', 'PHI:PER:3'}
[-ni]           {'PHI:HUM:HUM', 'PHI', 'PHI:NUM:SG', 'LANG:FI', 'inflectional', 'PHI:DET:DEF', 'PHI:PER:1'}
[-si]           {'PHI:HUM:HUM', 'PHI', 'LANG:FI', 'PHI:DET:DEF', 'inflectional', 'PHI:PER:2', 'PHI:NUM:SG'}
[-nsa]          {'PHI', 'LANG:FI', 'inflectional', 'PHI:PER:3', 'PHI:NUM:SG'}
[-an]           {'PHI', 'LANG:FI', 'PHI:DET:DEF', 'inflectional', 'PHI:PER:3', 'PHI:NUM:SG'}
[-nne]          {'PHI:HUM:HUM', 'PHI:NUM:PL', 'LANG:FI', 'inflectional', 'PHI:PER:2', 'PHI:DET:DEF'}
[-s]            {'LANG:EN', 'PHI', 'inflectional', 'PHI:PER:3', 'PHI:GEN:M', 'PHI:GEN:F', 'PHI:NUM:SG'}
[-0]            {'PHI:NUM:PL', 'LANG:EN', 'PHI:PER:3', 'PHI:GEN:N', 'PHI:PER:2', 'PHI:PER:1', 'PHI:NUM:SG', 'PHI', 'inflectional', 'PHI:DET:DEF'}
[-o]            {'PHI:HUM:HUM', 'PHI', 'PHI:NUM:SG', 'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI:PER:1'}
[-i]            {'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI:PER:2', 'PHI:NUM:SG'}
[-a]            {'PHI', 'PHI:DET:DEF', 'inflectional', 'PHI:PER:3', 'LANG:IT', 'PHI:NUM:SG'}
[-e]            {'PHI', 'PHI:DET:DEF', 'inflectional', 'PHI:PER:3', 'LANG:IT', 'PHI:NUM:SG'}
[-iamo]         {'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI', 'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI:PER:1'}
[-te]           {'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI', 'PHI:DET:DEF', 'inflectional', 'PHI:PER:2', 'LANG:IT'}
[-no]           {'PHI:NUM:PL', 'PHI', 'PHI:DET:DEF', 'inflectional', 'PHI:PER:3', 'LANG:IT'}
[-nom]          {'adjoinable', 'LANG:EN', 'TAIL:FIN,ARG,VAL', 'inflectional', 'NOM'}
[-par]          {'TAIL:ARG,-VAL', 'adjoinable', 'LANG:FI', 'inflectional', 'PAR'}
[-gen]          {'LANG:EN', 'TAIL:INF,ARG', 'inflectional', 'GEN', '-float'}
gen             {'LANG:EN', 'TAIL:INF,ARG', 'inflectional', 'GEN', '-float'}
[-n_acc]        {'n-ACC', 'adjoinable', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'inflectional', 'TAIL:*POL:NEG', 'TAIL:PHI'}
[-t_acc]        {'adjoinable', 'TAIL:ARG,ASP:BOUNDED', 't-ACC', 'LANG:FI', 'inflectional', 'TAIL:*POL:NEG'}
[-0_acc]        {'adjoinable', '0_ACC', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'inflectional', 'TAIL:*POL:NEG', 'TAIL:*PHI'}
[-ess]          {'LANG:FI', 'PF:na', 'inflectional', '#essiivi', 'LF:as', 'TAIL:V'}
[-trs]          {'PF:ksi', 'LANG:FI', 'inflectional', 'LF:to', 'TAIL:V', '#translatiivi'}
[-ine]          {'LANG:FI', 'inflectional', 'LF:in', 'PF:ssa', 'TAIL:V', '#inessiivi'}
[-ela]          {'LF:from', 'LANG:FI', 'inflectional', '#elatiivi', 'TAIL:V', 'PF:sta'}
[-ill]          {'LF:into', '#illatiivi', 'LANG:FI', 'inflectional', 'PF:an', 'TAIL:V'}
[-ade]          {'LANG:FI', 'inflectional', 'PF:lla', '#adessiivi', 'LF:at', 'TAIL:V'}
[-abl]          {'LF:from', 'LANG:FI', 'inflectional', 'PF:lta', 'TAIL:V', '#ablatiivi'}
[-all]          {'PF:lle', '#allatiivi', 'LANG:FI', 'inflectional', 'LF:to', 'TAIL:V'}
[-abe]          {'LANG:FI', '#abessiivi', 'inflectional', 'TAIL:V', 'LF:without', 'PF:tta'}
[-kom]          {'LANG:FI', 'inflectional', '#komitatiivi', 'PF:ine', 'TAIL:V', 'LF:together'}
[-ins]          {'LANG:FI', 'inflectional', 'LF:with', 'TAIL:V', 'PF:n', '#instruktiivi'}
asp             {'LANG:EN', 'inflectional', 'ASP:BOUNDED'}
[hAn]           {'OVERT_SCOPE', 'LANG:FI', 'OP:FAM', 'inflectional', 'DIS:FAM'}
[pA]            {'OP:POL', 'OVERT_SCOPE', 'LANG:FI', 'inflectional', 'DIS:POL'}
[kO]            {'OP:Q', 'OVERT_SCOPE', 'LANG:FI', 'FORCE:OP:WH', 'inflectional', 'OP:WH', 'DIS:WH'}
[foc]           {'DIS:FOC', 'OP:FOC', 'LANG:FI', 'inflectional'}
a'              {'a', 'PF:a', 'LF:A', 'LANG:X'}
b'              {'b', 'LANG:X', 'LF:B', 'PF:b'}
b''             {'LANG:EN', '-COMP:c', 'PF:b', 'b', 'LF:B'}
c''             {'c', 'LANG:EN', 'SPEC:a', 'PF:c', 'LF:C'}
c'              {'c', 'LF:C', 'PF:c', 'LANG:X'}
d'              {'LANG:', 'd', 'PF:d', 'LF:D'}
a''             ['LANG:EN']
x'              {'x', 'LANG:X', 'PF:x', 'LF:X'}
y'              {'y', 'PF:y', 'LF:Y', 'LANG:X'}
z'              {'z', 'PF:x', 'LF:Z', 'LANG:X'}
John'           {"N'", 'PF:John', 'LANG:X', 'LF:John'}
admires'        {'PF:admires', 'LF:admires', 'LANG:X', "V'"}
admires''       {'COMP:P', 'LANG:EN', 'PF:admires', 'SPEC:φ', 'LF:admires', 'SPEC:ADV', 'ASP', '-COMP:V', '-SPEC:FORCE', 'PHI:PER:_', 'SPEC:TO/inf', 'V', 'PHI:DET:_', 'ARG', 'SPEC:P', '-COMP:v', '-VAL', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:N'}
Mary'           {"N'", 'LANG:X', 'PF:Mary', 'LF:mary'}
T/fin           {'-COMP:INF', 'SPEC:FORCE', 'LANG:EN', 'COMP:V', 'SPEC:C/fin', '-SPEC:TO/inf', 'FIN', '-adjoinable', 'SPEC:φ', '-SPEC:N', '-SPEC:C', '-COMP:T/fin', '-SPEC:V', '-SPEC:T/prt', 'LF:T', '-SPEC:v', 'PHI:PER:_', 'SPEC:TO/inf', 'T/fin', 'PHI:DET:_', 'ARG', 'COMP:T/prt', '!COMP:*', '!PROBE:V', '!SPEC:*', 'COMP:v', 'PHI:NUM:_', '-SPEC:Neg', 'PF:T', 'T', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:*', 'VAL'}
v               {'LANG:EN', 'PHI:DET:_', 'ARG', 'PHI:PER:_', 'LF:v', '!PROBE:V', 'v', '-VAL', 'SPEC:φ', '!COMP:*', '-SPEC:N', 'ASP', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:V', 'PF:v'}
C/fin           {'LANG:EN', 'LF:C/fin', 'PF:C', 'FIN', 'COMP:Neg/fin', '-ARG', '-SPEC:N', 'C', '-COMP:T/prt', '!PROBE:FIN', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:T/fin', 'C/fin', '!COMP:*', 'SPEC:*', '-SPEC:T/fin', '-COMP:FORCE', 'VAL'}
T               {'COMP:V', 'LANG:EN', '-SPEC:NEG', 'FIN', 'SPEC:φ', '-SPEC:N', '-SPEC:V', 'LF:T', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'COMP:T/prt', '-COMP:NEG', '!COMP:*', '!PROBE:V', 'PHI:NUM:_', 'COMP:v', 'PHI:GEN:_', 'SPEC:*', 'PF:T', 'T', '-SPEC:T/fin', 'VAL'}
T/prt           {'LANG:EN', 'FIN', '-SPEC:N', 'SPEC:φ', 'LF:T/prt', '-SPEC:V', 'PF:T/prt', 'COMP:φ', 'VAL', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', 'T/prt', 'ARG', 'COMP:T/prt', '-COMP:NEG', '-SPEC:C/fin', '!COMP:*', '!PROBE:V', 'PHI:NUM:_', 'COMP:v', 'SPEC:*', 'PHI:GEN:_', 'T', '-SPEC:T/fin', 'COMP:V'}
a0              {'LANG:EN', 'COMP:0', '-adjoinable', '-SPEC:A', 'PF:A', 'TAIL:φ', 'A', '-SPEC:φ', 'LF:A'}
n               {'-COMP:A', 'COMP:R', '!SPEC:φ', 'LANG:EN', 'COMP:D/rel', '-COMP:VA/inf', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'PHI:PER:_', 'COMP:T/prt', 'SPEC:A', 'ARG', 'φ', '-SPEC:C/fin', '-COMP:v', 'PF:n', '!COMP:*', '!SPEC:*', 'PHI:GEN:_', 'SPEC:*', 'VAL', 'COMP:V', '-SPEC:R', 'COMP:P', 'COMP:R/D', 'COMP:0', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', 'LF:n', '-COMP:C/fin', '-SPEC:FORCE', 'n', '-SPEC:P', '-COMP:WH', 'PHI:DET:_', 'COMP:C', 'INF', 'PHI:NUM:_', 'COMP:v', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
impass          {'LANG:EN', 'PHI:DET:_', 'ARG', 'PF:impass', 'LF:impass', '!PROBE:V', '-VAL', 'v', 'SPEC:φ', '!COMP:*', '-SPEC:N', 'ASP', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:V', 'PHI:PER:_'}
cau             {'LANG:EN', 'PHI:DET:_', 'ARG', 'PF:Cau', '!PROBE:V', '-VAL', 'v', 'SPEC:φ', '!COMP:*', '-SPEC:N', 'ASP', 'PHI:NUM:_', 'PHI:GEN:_', 'LF:v/Cause', 'COMP:V', 'PHI:PER:_'}
φ               {'COMP:N', 'LANG:EN', 'φ', 'COMP:D/rel', 'LF:φ', 'PF:φ', '-SPEC:T'}
INF             {'LANG:EN', 'PF:INF', '!COMP:*', 'INF', 'LF:INF', 'COMP:v', '-COMP:T/fin', '-SPEC:V', '-SPEC:T/fin', '-COMP:FORCE', 'COMP:V', '-COMP:C/fin'}
prtcpl          {'COMP:V', 'LANG:EN', '-SPEC:NEG', 'FIN', '-SPEC:N', 'SPEC:φ', 'LF:T/prt', '-COMP:T/fin', '-SPEC:V', 'PF:T/prt', 'COMP:φ', '-COMP:C/fin', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', 'T/prt', 'ARG', 'COMP:T/prt', '-COMP:NEG', '-SPEC:C/fin', '!COMP:*', 'INF', '!PROBE:V', 'SPEC:*', 'COMP:v', 'PHI:NUM:_', 'T', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:FORCE', 'VAL'}
TO/inf          {'LANG:EN', '!COMP:V', '?ARG', '-COMP:T/fin', '-SPEC:V', 'LF:TO/inf', '-SPEC:v', 'TO/inf', '-COMP:C/fin', 'PF:TO/inf', '!COMP:*', 'INF', '-VAL', 'adjoinable', 'COMP:v', '-SPEC:T/fin', '-COMP:FORCE', 'COMP:V'}
A/inf           {'LANG:EN', 'LF:A/inf', '?ARG', '-COMP:T/fin', 'PF:A/inf', '-SPEC:V', '-COMP:C/fin', '-SPEC:Neg/fin', '!COMP:*', 'INF', '-VAL', 'SPEC:*', 'COMP:v', '-SPEC:T/fin', '-COMP:FORCE', 'COMP:V', 'A/inf'}
ARE/inf         {'LANG:EN', '-adjoinable', '?ARG', '-COMP:T/fin', '-SPEC:V', 'LF:ARE/inf', 'VAL', '-COMP:C/fin', 'PF:are', '!COMP:*', 'INF', 'SPEC:*', 'COMP:v', '-SPEC:T/fin', '-COMP:FORCE', 'COMP:V', 'ARE/inf'}
ESSA/inf        {'LANG:EN', '-SPEC:N', '?ARG', 'PF:essa', '-COMP:T/fin', '-SPEC:V', 'LF:while', '-SPEC:Neg/fin', '-COMP:C/fin', 'ESSA/inf', '-SPEC:FORCE', '!COMP:*', 'INF', 'adjoinable', 'SPEC:*', 'COMP:v', '-SPEC:T/fin', 'ADV', '?VAL', 'COMP:V', '-COMP:FORCE', 'TAIL:T'}
TUA/inf         {'COMP:V', 'LANG:EN', 'TUA/inf', '-SPEC:N', '-COMP:T/fin', '-SPEC:V', 'VAL', 'LF:after', '-SPEC:Neg/fin', '-COMP:C/fin', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '!SPEC:*', 'INF', '!COMP:*', 'adjoinable', 'COMP:v', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', 'SPEC:*', 'ADV', '-COMP:FORCE', 'PF:tua', 'TAIL:T'}
VA/inf          {'LANG:EN', 'VA/inf', 'LF:VA', '-SPEC:N', '-COMP:T/fin', '-SPEC:V', 'VAL', '-COMP:C/fin', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '!COMP:*', 'INF', 'PHI:NUM:_', 'SPEC:*', 'COMP:v', 'PHI:GEN:_', '-SPEC:T/fin', 'PF:vAn', '-COMP:FORCE', 'COMP:V'}
MA/ssa          {'LANG:EN', 'MA/ssa', 'LF:in_doing', 'TAIL:V', '-SPEC:N', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', 'MA/inf', 'ARG', 'PF:massa', '-VAL', 'adjoinable', 'COMP:v', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', 'ADV', 'COMP:V'}
MA/tta          {'PF:matta', 'LANG:EN', 'MA/inf', 'ARG', 'PHI:DET:_', 'PHI:PER:_', 'LF:without_doing', '-SPEC:N', '-VAL', 'adjoinable', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:FORCE', '-SPEC:T/fin', 'ADV', '-SPEC:Neg/fin', 'TAIL:T'}
MA/lla          {'LANG:EN', 'LF:by_doing', 'PHI:PER:_', 'MA/inf', 'ARG', 'adjoinable', 'PHI:GEN:_', 'SPEC:*', 'VAL', 'COMP:V', 'TAIL:T', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:FORCE', 'PHI:DET:_', 'PHI:NUM:_', 'COMP:v', '-SPEC:T/fin', 'ADV', 'PF:malla'}
MA/inf          {'LANG:EN', 'TAIL:V', 'PHI:PER:_', 'MA/inf', 'ARG', 'PF:maan', 'adjoinable', 'PHI:GEN:_', 'SPEC:*', 'VAL', 'COMP:V', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:FORCE', 'PHI:DET:_', 'LF:to_do', 'PHI:NUM:_', 'COMP:v', '-SPEC:T/fin', 'ADV'}
E/inf           {'LF:by', '-ARG', '-SPEC:N', '-VAL', 'adjoinable', 'SPEC:*', 'LANG:FI', '-SPEC:FORCE', '-SPEC:T/fin', 'ADV', 'PF:en', '-SPEC:Neg/fin', 'TAIL:T'}
BE-             {'COMP:P', 'LANG:EN', '-ARG', 'SPEC:φ', 'SPEC:ADV', '-COMP:T/fin', 'ASP', 'COMP:φ', '-COMP:V', '-SPEC:FORCE', 'LF:BE', 'SPEC:TO/inf', 'COPULA', 'V', 'COMP:T/prt', 'SPEC:P', '-COMP:v', '!COMP:*', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PF:BE'}
D               {'D', 'LANG:EN', 'COMP:D/rel', '!PROBE:N', '-ARG', '-COMP:uR', '-SPEC:C', '-COMP:T/fin', '-SPEC:V', '-SPEC:MA/lla', 'COMP:φ', '-EDGE:*', '-SPEC:P', '-SPEC:Neg/fin', 'COMP:n', 'PF:D', 'φ', '-SPEC:T', 'LF:D', '!COMP:*', 'adjoinable', 'COMP:N', '-SPEC:T/fin', '-SPEC:INF', '-COMP:P'}
D/rel           {'D', 'LANG:EN', 'COMP:D/rel', '-ARG', '-COMP:uR', '-SPEC:C', '-COMP:T/fin', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:INF', 'OP', '-COMP:C/fin', '-SPEC:P', '-SPEC:Neg/fin', 'D/rel', 'φ', '-SPEC:T', 'OP:REL', '!COMP:*', '-COMP:φ', 'adjoinable', 'COMP:N', '-SPEC:T/fin', 'OP:_', '!PROBE:N', 'LF:D/rel', 'PF:D/rel'}
P               {'-COMP:A', 'LANG:EN', 'PF:P', '-SPEC:N', 'P', '-SPEC:C', '-SPEC:*', '-COMP:T/fin', '-SPEC:V', '-SPEC:T/prt', '-SPEC:ADV', '-SPEC:v', 'COMP:φ', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:iR', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:iWH', '-SPEC:C/fin', 'LF:P', '-COMP:uWH', '!COMP:*', '-VAL', '-COMP:T', 'adjoinable', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:N', '-float'}
pro             ['LANG:EN']
pro-            {'-COMP:A', 'COMP:R', 'LANG:EN', 'COMP:D/rel', '-COMP:VA/inf', 'PHI', 'N', '-SPEC:ADV', '-COMP:V', 'COMP:uR', '-SPEC:uWH', 'COMP:T/prt', 'SPEC:A', '-SPEC:C/fin', '-COMP:v', '-SPEC:R', 'COMP:P', 'COMP:R/D', 'PF:(pro)', '-SPEC:N', '-SPEC:V', '-COMP:D', '-COMP:AUX', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', '-SPEC:FORCE', 'LF:pro', 'COMP:C', '-SPEC:T/fin', '-SPEC:INF', '-COMP:N'}
cl              {'RIGHT:ARE/inf', 'LANG:EN', 'LEFT:T/fin', 'inflectional', 'LEFT:D,CL', 'CL', 'RIGHT:PRG'}
inc             {'LANG:EN', 'INCORPORATED', 'inflectional'}
sg              {'LANG:EN', 'inflectional', 'PHI:NUM:SG'}
pl              {'PHI:NUM:PL', 'LANG:EN', 'inflectional'}
1p              {'LANG:EN', 'inflectional', 'PHI:PER:1'}
2p              {'PHI:PER:2', 'LANG:EN', 'inflectional'}
3p              {'LANG:EN', 'inflectional', 'PHI:PER:3'}
def             {'LANG:EN', 'inflectional', 'PHI:DET:DEF'}
indef           {'LANG:EN', 'PHI:DET:INDEF', 'inflectional'}
hum             {'PHI:HUM:HUM', 'LANG:EN', 'inflectional'}
nonhum          {'PHI:HUM:NONHUM', 'LANG:EN', 'inflectional'}
m               {'PHI:GEN:M', 'LANG:EN', 'inflectional'}
f               {'LANG:EN', 'PHI:GEN:F', 'inflectional'}
proper_name     {'LANG:EN', 'D:REF:NAME', 'inflectional'}
nom             {'LANG:EN', 'NOM', 'inflectional', 'TAIL:FIN,!COMP:*,VAL'}
acc             {'TAIL:v', 'ACC', 'LANG:EN', 'inflectional'}
dat             {'TAIL:v', 'DAT', 'LANG:EN', 'inflectional'}
V1              {'-EDGE:*', '-SPEC:*', 'LANG:EN', 'inflectional'}
uC/op           {'uC/op', 'LANG:EN', 'inflectional'}
wh              {'LANG:EN', 'inflectional', 'OP:_', 'OP:WH', 'DIS:WH'}
wh_             {'LANG:EN', '-COMP:OP', 'inflectional', 'OP:_', 'OP'}
top             {'DIS:TOP', 'LANG:EN', 'OP:TOP', 'inflectional'}
foc             {'DIS:FOC', 'OP:FOC', 'LANG:EN', 'inflectional'}
fam             {'DIS:FAM', 'LANG:EN', 'OP:FAM', 'inflectional'}
pol             {'OP:POL', 'LANG:EN', 'DIS:POL', 'inflectional'}
C/op            {'OP:C/OP', 'DIS:C/OP', 'LANG:EN', 'inflectional'}
d/rel           {'adjoinable', 'SPEC:D', 'LANG:EN', 'inflectional', 'OP:_', '-COMP:C/fin', 'OP:REL'}
Q               {'OP:Q', 'LANG:EN', '-COMP:OP', 'inflectional', 'OP', 'OP:WH', 'DIS:WH'}
