
# Universal lexical redundancy rules

# Basic lexical categories
FORCE 	:: -ARG -PHI FIN !COMP:* -E !PROBE:FIN COMP:T/fin COMP:C/fin
C/fin 	:: -ARG E FIN C !COMP:* -COMP:C/fin -COMP:T/prt COMP:T/fin -COMP:FORCE !PROBE:FIN -SPEC:T/fin -SPEC:C/fin -SPEC:N COMP:Neg/fin
T/fin 	:: ARG E T FIN !COMP:* -SPEC:C SPEC:T/prt COMP:v COMP:V -COMP:INF -COMP:T/fin !PROBE:V SPEC:φ SPEC:D SPEC:C/fin -SPEC:T/fin -SPEC:N -SPEC:Neg SPEC:FORCE -SPEC:V -SPEC:v SPEC:TO/inf -adjoinable
T/prt 	:: ARG FIN T !COMP:* COMP:v COMP:V COMP:T/prt -COMP:NEG !PROBE:V -SPEC:C/fin E SPEC:φ -SPEC:N -SPEC:T/fin -SPEC:FORCE -SPEC:V
T 		:: ARG TAM E COMP:* COMP:v COMP:V -COMP:φ -COMP:D -COMP:NEG !PROBE:V SPEC:φ SPEC:D -COMP:Neg/fin -SPEC:N -SPEC:T/fin -SPEC:FORCE -SPEC:V -SPEC:NEG
Neg/fin :: ARG !E FIN NEG COMP:T/prt -SPEC:T -COMP:T/fin -SPEC:T/fin %SPEC:INF SEM:internal
v   	:: ARG -PHI ASP !COMP:* COMP:V -SPEC:v -SPEC:T/fin !PROBE:V SPEC:φ -SPEC:N
D   	:: φ -ARG !COMP:* -COMP:P -COMP:T/fin -SPEC:MA/lla -SPEC:P -E -SPEC:C -SPEC:INF -SPEC:V COMP:n COMP:N COMP:φ -COMP:T/fin -SPEC:T/fin -SPEC:Neg/fin -COMP:uR !PROBE:N
D/rel	:: φ D -ARG OP OP:REL OP:_ !COMP:* -COMP:C/fin -COMP:φ -SPEC:MA/lla -SPEC:P -SPEC:C -SPEC:INF -SPEC:V COMP:N -COMP:T/fin -SPEC:T/fin -SPEC:Neg/fin -COMP:uR !PROBE:N adjoinable
N   	:: -COMP:D COMP:D/rel -COMP:φ COMP:P COMP:D/rel -COMP:VA/inf -COMP:A -COMP:T/fin COMP:C -COMP:AUX -SPEC:FORCE -COMP:C/fin SPEC:A COMP:R COMP:R/D -COMP:N -SPEC:uWH -SPEC:R -SPEC:V -COMP:V -COMP:v -SPEC:P -SPEC:N -SPEC:C/fin -SPEC:T/fin COMP:uR -SPEC:ADV -COMP:WH
V   	:: ARG -PHI ASP -SPEC:T/fin -SPEC:FORCE SPEC:ADV -COMP:N -COMP:V -COMP:v SPEC:P SPEC:TO/inf
P   	:: ARG -PHI !COMP:* COMP:φ -COMP:N -COMP:ADV -COMP:T/fin -COMP:T -COMP:A -SPEC:iR -SPEC:iWH -SPEC:C -SPEC:C/fin adjoinable -SPEC:ADV -SPEC:T/fin -SPEC:Neg/fin -SPEC:N -SPEC:P -SPEC:T/prt -SPEC:V -SPEC:FORCE -SPEC:v -COMP:uWH
ADV 	:: -SPEC:N -SPEC:FORCE -SPEC:Neg/fin -SPEC:T/fin adjoinable
A 		:: COMP:0 TAIL:φ -SPEC:A -SPEC:φ
INF		:: TAM !COMP:* COMP:v COMP:V -COMP:T/fin -COMP:FORCE -COMP:C/fin -SPEC:T/fin -SPEC:V
n		:: φ ARG INF !COMP:* COMP:0 COMP:V COMP:v !E !SPEC:φ
0		:: SPEC:φ 2SPEC -COMP:φ
NUM		:: φ COMP:φ COMP:N COMP:n -COMP:D -COMP:QN
DET		:: φ COMP:φ -COMP:DET 
QN		:: φ COMP:φ COMP:N COMP:NUM
OP		:: -COMP:OP:_
φ		:: COMP:N -SPEC:T COMP:D/rel

#CP-complementary (assume opposite for V2 languages)
C/fin PHON	:: -EDGE:*

N LANG:FI	:: -COMP:T/prt

# Other lexical categories
WH  			:: -COMP:C/fin -COMP:ADV
WH_ 			:: !COMP:* -SPEC:T/fin E
OP:REL   		:: -COMP:C/fin SPEC:D adjoinable
FORCE:OP:REL	:: adjoinable
PHI_N			:: -COMP:*
Q				:: OP:WH OP:Q

# Connection between operator features and force (language specific)
OP FIN			:: !1EDGE 
OP:WH FIN		:: FORCE:WH
OP:Q FIN		:: FORCE:WH

OP:WH			:: DIS:WH OP
OP:Q			:: DIS:WH OP
OP:Q LANG:FI	:: OVERT_SCOPE DIS:WH OP
OP:FAM LANG:FI	:: OVERT_SCOPE DIS:FAM OP
OP:POL LANG:FI	:: OVERT_SCOPE DIS:POL OP
OP:REL LANG:FI	:: OVERT_SCOPE OP
OP:FOC LANG:FI	:: DIS:FOC OP

# Verb classess
CLASS/TR 		:: !COMP:* -COMP:P COMP:φ -COMP:ADV
CLASS/INTR 		:: -COMP:φ SPEC:φ -COMP:INF
CLASS/DITR 		:: !COMP:* SPEC:φ COMP:φ

# Nouns and nounlike elements
R:REF:PROPER_NAME :: -COMP:INF

# Language-specific redundancy rules
# English
P LANG:EN		::	-E -float
T/fin LANG:EN	::	!E SPEC:φ SPEC:FORCE
A LANG:EN		::	-adjoinable
ACC LANG:EN		::	-adjoinable -float
NOM LANG:EN		::  -adjoinable -float
NOM LANG:IT		::	-adjoinable -float
D LANG:EN		::	-E
φ LANG:EN		::	-E

# Finnish
A LANG:FI 		::  -adjoinable
WH LANG:FI		::	WH_
P LANG:FI		::	E ADV
ADV LANG:FI		::	E
A LANG:FI		::	E


