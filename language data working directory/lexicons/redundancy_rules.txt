
# ========================
# Lexical redundancy rules
# ========================

# Left periphery

	FORCE	::	FORCE						+PROBE:Fin -SPEC:T/fin
	C/fin 	:: 	C Fin 						+PROBE:Fin +COMP:T,Fin,T/fin
	C		:: 	 							-SPEC:MA/A
	T/fin 	:: 	Φ T/fin EF* T Fin 			+COMP:T/prt,ASP,COPULA
	T/prt 	:: 	Φ Fin T 					+COMP:ASP
	T 		:: 	Φ TAM π						+COMP:ASP
	Neg/fin :: 	Φ EF* Fin NEG !ΦPF POL:NEG 	+COMP:T
	C/wh	::  C C/fin LF:C OP EF			+COMP:T/fin

# Verbal domain

	v   		:: 	Φ Φ θSPEC ASP 			+COMP:V -COMP:V/INTR,v,IMPSS +SPEC:D,φ,ø
	V   		:: 	Φ θSPEC θCOMP ASP κ 	-SPEC:Fin
	COPULA		::	Φ V LF:be 				+COMP:T/prt
	v*			:: 	EF* V θSPEC				+COMP:V
	V/TR 		:: 	θCOMP					+COMP:Inf,P,D,φ,V
	V/INTR 		:: 	θSPEC θCOMP				+COMP:P,ø -COMP:D,φ +SPEC:D,φ,ø
	ε LANG:FI	::  			 			!wCOMP:θ -wCOMP:P

# Nominal domain

	D   	:: 	REF						+PROBE:N +COMP:Q,Qn,Num,φ,N +SPEC:D,ø
	D/rel	:: 	adjoinable				+PROBE:N +COMP:Q,Qn,Num,φ,N +SPEC:D,ø
	N   	:: 	Φ κ θSPEC				+COMP:P,ø,C/rel,φ +SPEC:D,φ,ø
	P   	:: 	Adv adjoinable θCOMP	+COMP:D,φ
	A 		:: 	κ						-SPEC:A
	a		::  Φ
	n		:: 	Φ ?ΦLF Inf				-COMP:n
	√		:: 	SPEC:φ 2SPEC 			+COMP:P,ø,C/rel
	Num		::  Num 					-COMP:D -COMP:QN
	Qn		:: 	 						+PROBE:N +COMP:Num,φ,N
	φ		:: 	REF φ ?ΦLF Inf Φ		+PROBE:N +COMP:P,N +SPEC:D,φ,ø
	a0		::	A						+COMP:A,√,0
	Neg		:: 							-SPEC:N
	Agr		::	Fin

	R_exp	:: iPHI:PRON:NONPRON	R:NEW
	R_pron	:: iPHI:PRON:PRON		R:NEW:REF
	R_refl	:: iPHI:PRON:PRON		R:OLD:REF
	sg 		:: iPHI:NUM:SG
	pl 		:: iPHI:NUM:PL
	1p 		:: iPHI:PER:1
	2p 		:: iPHI:PER:2
	3p 		:: iPHI:PER:3
	3sg		:: iPHI:PER:3 iPHI:NUM:SG iPHI:DET:DEF
	def 	:: iPHI:DET:DEF
	udef	:: iPHI:DET:UDEF
	indef 	:: iPHI:DET:INDEF
	hum 	:: iPHI:HUM:HUM
	nonhum 	:: iPHI:HUM:NONHUM
	m		:: iPHI:GEN:M
	f		:: iPHI:GEN:F

# Operators

	|FOC	::	OP:FOC
	OP		:: 	-COMP:OP
	
# Others

	Adv 	::	adjoinable 					
	Inf		::	-COMP:Fin -SPEC:T/fin,V

# Phi-strength
	
	OC		:: -ΦLF -ΦPF
	EF?		:: Φ
	EF*		:: Φ
	Φ		:: PHI:NUM:_ PHI:PER:_ PHI:DET:_

# Generic case features

	[NOM]	:: TAIL:T/fin
	[ACC]	:: TAIL:v
	[PAR]	:: TAIL:v
	[GEN]	:: TAIL:Inf

#
# Language specific rules
#

# FINNISH
	
	# Spellout
	
		LANG:FI COPULA			:: PF:ole-
		LANG:FI prs				:: PF:-V
		LANG:FI pst	T/fin		:: PF:-i
		LANG:FI prs T/fin		:: PF:-V
		LANF:FI pst T/prt 		:: PF:-nUt
		LANG:FI	pst IMPSS		:: PF:-Vn
		LANG:FI cond			:: PF:-isi
		LANG:FI pot				:: PF:-ne
		LANG:FI Fin K			:: PF:-Vn
		LANG:FI ε				:: PC:#X#
		LANG:FI V				:: PC:X. PC:X#
		LANG:FI T				:: PC:#X PC:.X
		LANG:FI v				:: PC:.X PC:#X

	# Finnish edge behavior
		
		T/fin LANG:FI	::  EF*
		Adv LANG:FI		::	EF
		P LANG:FI		::  EF
		V LANG:FI		::	-ΦPF
		A LANG:FI		::	EF
		VA/inf LANG:FI	::	EF*
		V LANG:FI		::	EF
		v LANG:FI		::  -ΦPF
		Fin LANG:FI		::  EF* ?ΦLF
		T/prt LANG:FI	::	EF*
		φ LANG:FI		::  EF* ?ΦLF +SPEC:D,φ,ø
		EF LANG:FI		::  PHI:HUM:_ PHI:PRON:_
		EF* LANG:FI		::  PHI:HUM:_ PHI:PRON:_
	
	# Inflectional morphemes
	
		LANG:FI OP:Q		::	-mCOMP=OP:Q,OP:POL,OP:FAM,OP:DE/EM
		LANG:FI OP:DE/EM	::	+mCOMP=OP:POL,OP:Q,OP:WH/else
		LANG:FI OP:FAM		::	-mCOMP=OP:FAM,OP:DE/EM
		LANG:FI OP:POL		::	-mCOMP=OP:POL,OP:Q,OP:DE/EM,OP:FAM
	
	# Other rules
	
		N LANG:FI		:: -COMP:T/prt
		n LANG:FI		:: -COMP:IMPSS
		A LANG:FI 		::  nonadjoinable
		TA*				:: V COMP:V
		LANG:FI P		:: +COMP:D,φ,ø

# ENGLISH

	P LANG:EN		::	nonfloat -SPEC:φ +COMP:D,φ
	T/fin LANG:EN	::	EF* PF:T +SELF:ΦLF
	A LANG:EN		::	nonadjoinable
	ACC LANG:EN		::	nonadjoinable nonfloat
	NOM LANG:EN		::  nonadjoinable nonfloat
	D LANG:EN		:: EF
	φ LANG:EN		:: -SPEC:φ
	OP:REL LANG:EN	:: SCOPE
	LANG:EN T prs	:: PF:T
	LANG:EN T pst	:: PF:-ed PER ΦPF PC:#X
	T/prt LANG:EN	:: PF:-ed LF:prtc
	LANG:EN N		:: -COMP:D
	LANG:EN pst	 	:: ΦPF PER
	LANG:EN OP:WH	:: -insitu

# ITALIAN

	P LANG:IT		:: EF
	NOM LANG:IT		:: nonadjoinable nonfloat
	LANG:IT T prs	:: PF:-0
	LANG:IT T pst	:: PF:-ava
	LANG:TI T/fin	:: EF*
	