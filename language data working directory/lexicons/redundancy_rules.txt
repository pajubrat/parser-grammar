
# Universal lexical redundancy rules

# Basic lexical categories
FORCE	:: -ARG -Φ/PF -EF:* Fin !COMP:* !PROBE:Fin COMP:T/fin COMP:C/fin
C/fin 	:: -ARG Fin C -COMP:C/fin -COMP:T/prt COMP:T/fin !PROBE:Fin COMP:Neg/fin !COMP:* -SPEC:N -SPEC:T/fin -SPEC:C/fin -COMP:FORCE 
C		:: -SPEC:MA/A
T/fin 	:: ARG EF:φ T Fin !SELF:Φ/12 !COMP:* -SPEC:C SPEC:T/prt COMP:v COMP:V -COMP:Inf -COMP:T/fin !PROBE:V SPEC:φ SPEC:D SPEC:C/fin -SPEC:T/fin -SPEC:N -SPEC:Neg SPEC:FORCE -SPEC:V -SPEC:v SPEC:TO/inf
T/prt 	:: ARG Fin T EF:φ !COMP:* COMP:v COMP:V COMP:T/prt -COMP:NEG !PROBE:V -SPEC:C/fin -SPEC:N -SPEC:T/fin -SPEC:FORCE -SPEC:V -PER
T 		:: ARG COMP:* COMP:v COMP:V -COMP:φ -COMP:D -COMP:NEG !PROBE:V -COMP:Neg/fin -SPEC:N -SPEC:T/fin -SPEC:FORCE -SPEC:V -SPEC:NEG
Neg/fin :: ARG EF:φ Fin NEG COMP:T/prt COMP:T -SPEC:T -SPEC:T/fin %SPEC:Inf SEM:internal
v   	:: ARG -Φ/PF ASP !COMP:* COMP:V -SPEC:v -SPEC:T/fin !PROBE:V SPEC:φ -SPEC:N
D   	:: φ -ARG !COMP:* -COMP:D -COMP:v -COMP:V -COMP:P -COMP:T/fin -COMP:Neg/fin -COMP:T -SPEC:MA.ade/inf -SPEC:Neg -SPEC:P -SPEC:C -SPEC:Inf -SPEC:V COMP:n COMP:N -COMP:T/fin -SPEC:T/fin -SPEC:Neg/fin -COMP:uR !PROBE:N
D/rel	:: φ D -ARG OP OP:REL COMP:* -COMP:C/fin -COMP:φ -SPEC:MA.ade/inf -SPEC:P -SPEC:C -SPEC:Inf -SPEC:V COMP:N -COMP:T/fin -SPEC:T/fin -SPEC:Neg/fin -COMP:uR !PROBE:N adjoinable
N   	:: -COMP:D -COMP:T/fin -COMP:MA/A -COMP:Neg -COMP:T/prt COMP:D/rel -COMP:φ COMP:P COMP:VA/inf -COMP:A COMP:C -COMP:AUX -SPEC:FORCE SPEC:A COMP:R COMP:R/D -COMP:N SPEC:φ -SPEC:uWH -SPEC:R -SPEC:V -COMP:V -COMP:v -SPEC:P -SPEC:N -SPEC:C/fin -SPEC:T/fin COMP:uR -SPEC:Adv -COMP:WH
V   	:: ARG -Φ/PF ASP -SPEC:T/fin -SPEC:FORCE SPEC:Adv -COMP:N -COMP:V -COMP:T/prt -COMP:v SPEC:P SPEC:TO/inf
P   	:: ARG COMP:φ -COMP:MA/A -SPEC:Neg -COMP:N -COMP:Neg -COMP:Adv -SPEC:Adv -COMP:T/fin -COMP:T -COMP:A -SPEC:iR -SPEC:iWH -SPEC:C -SPEC:C/fin adjoinable -SPEC:Adv -SPEC:T/fin -SPEC:Neg/fin -SPEC:N -SPEC:P -SPEC:T/prt -SPEC:V -SPEC:FORCE -SPEC:v -COMP:uWH
Adv 	:: -SPEC:N -SPEC:FORCE -SPEC:Neg/fin -SPEC:T/fin adjoinable
A 		:: COMP:0 TAIL:φ -SPEC:A
Inf		:: TAM COMP:v COMP:V -COMP:T/fin -COMP:FORCE -COMP:C/fin -SPEC:T/fin -SPEC:V
n		:: φ EF:φ ARG Inf !COMP:* COMP:0 COMP:V COMP:v
0		:: SPEC:φ 2SPEC -COMP:φ
Num		:: φ COMP:φ COMP:N COMP:n -COMP:D -COMP:QN
DET		:: φ COMP:φ -COMP:DET 
QN		:: φ COMP:φ COMP:N COMP:Num
φ		:: COMP:N -SPEC:T -SPEC:P COMP:D/rel !COMP:*
MA/A	:: A
VA/A	:: A
Neg		:: -SPEC:N SPEC:D
ARG		:: -COMP:PER

#Universal operator rules
OP				:: -COMP:MA/A
OP:WH			::	DIS:WH OP
WH  			:: -COMP:C/fin -COMP:Adv
OP:REL   		:: -COMP:C/fin SPEC:D adjoinable
FORCE:OP:REL	:: adjoinable
Q				:: OP:WH OP:Q
OP Fin			:: !1EDGE 
OP:WH Fin		:: FORCE:WH
OP:Q Fin		:: FORCE:WH
OP:WH			:: DIS:WH OP
OP:Q			:: DIS:WH OP

# Verb classess
CLASS/TR 		:: !COMP:* -COMP:P COMP:φ -COMP:Adv
CLASS/INTR 		:: -COMP:φ SPEC:φ COMP:P
CLASS/DITR 		:: !COMP:* SPEC:φ COMP:φ
PHI_N			:: -COMP:*

# Universal rules related to the edge feature
!EF:φ		:: EF:φ

# Nouns and nounlike elements
R:REF:PROPER_NAME :: -COMP:Inf

#
# Language specific rules
#
# ==> FINNISH
# CP-complementary (assume opposite for V2 languages)
C/fin PHON	:: -EF:*
C/fin		:: !COMP:Φ/PF

# Finnish edge behavior
P LANG:FI		::	EF:* Adv
Adv LANG:FI		::	EF:*
A LANG:FI		::	EF:*
T/fin LANG:FI	:: !EF:*
φ LANG:FI		::	EF:φ

# Other rules
N LANG:FI	:: -COMP:T/prt
A LANG:FI 	::  -adjoinable

# Finnish specific operator features
OP:WH LANG:FI	:: OP OP*
OP:REL LANG:FI	:: OP OP* !SCOPE
OP:Q LANG:FI	:: OP !SCOPE DIS:WH
OP:FAM LANG:FI	:: OP !SCOPE DIS:FAM
OP:POL LANG:FI	:: OP !SCOPE DIS:POL
OP:FOC LANG:FI	:: OP DIS:FOC

# ===> ENGLISH
P LANG:EN		::	-Φ/PF -EF:* -EF:φ -float !COMP:*
Adv LANG:EN		::	-Φ/PF -EF:*
n LANG:EN		::  -Φ/PF
T/fin LANG:EN	::	!EF:φ EF:φ SPEC:FORCE
A LANG:EN		::	-adjoinable
ACC LANG:EN		::	-adjoinable -float
NOM LANG:EN		::  -adjoinable -float
D LANG:EN		::	-SPEC:φ
φ LANG:EN		::	-SPEC:φ
OP:REL LANG:EN	::	!SCOPE

# ==> ITALIAN
P LANG:IT		::  -Φ/PF -EF:* -EF:φ !COMP:*
NOM LANG:IT		::	-adjoinable -float

# => HUNGARIAN
WH:OP LANG:HU	:: OP*
D LANG:HU		:: EF:*