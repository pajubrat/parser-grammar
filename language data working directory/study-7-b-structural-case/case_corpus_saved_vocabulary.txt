dummy          {'LANG:EN', 'dummy'}
a               {'!COMP:*', '-SPEC:T/prt', '-SPEC:V', 'LF:to', 'adjoinable', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:T', '-SPEC:C', '-VAL', '-SPEC:Neg/fin', 'COMP:ARE/inf', 'LANG:IT', '-COMP:A', '-COMP:T/fin', '-SPEC:*', '-COMP:ADV', '-ARG', 'TAIL:V', '-SPEC:C/fin', '-SPEC:iR', 'P', '-COMP:uWH', '-SPEC:v', '-SPEC:INF', '-COMP:N', 'PF:a', '-SPEC:P', 'COMP:φ', '-SPEC:iWH', '-SPEC:N', '-SPEC:T/fin'}
a_D             {'LF:D', '-EDGE:*', '!COMP:*', '-COMP:T/fin', 'LANG:EN', '-SPEC:MA/lla', '-SPEC:V', 'adjoinable', '-ARG', 'PF:D', '!PROBE:N', '-SPEC:C', '-SPEC:Neg/fin', 'φ', 'D', '-SPEC:INF', '-COMP:P', '-SPEC:P', 'COMP:φ', '-COMP:uR', 'COMP:N', 'COMP:n', '-SPEC:T/fin'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-COMP:T/fin', '!COMP:*', 'PHI:NUM:_', 'LANG:EN', 'PF:admire', 'LF:admire', 'SPEC:P', '-COMP:V', 'ASP', 'CLASS:TR', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:v', 'PHI:DET:_', '-COMP:N', '-COMP:Neg', 'SPEC:ADV', 'SPEC:TO/inf', '-COMP:P', 'COMP:D', 'COMP:φ', '-SPEC:Neg', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
admire*         ['LANG:EN']
T/fin*          {'-COMP:T/fin', '!COMP:*', 'COMP:V', 'LANG:EN', 'SPEC:φ', '-SPEC:T/prt', '!SPEC:*', 'T/fin', '-adjoinable', 'LF:T', '-SPEC:V', 'COMP:v', 'PHI:GEN:_', '!PROBE:V', 'ARG', '-SPEC:C', '-VAL', 'NO_DET', 'SPEC:C/fin', '-SPEC:v', '-SPEC:TO/inf', 'SPEC:TO/inf', 'T', 'COMP:T/prt', "PF:T/fin'", 'SPEC:FORCE', '-SPEC:Neg', 'NO_NUMBER', '-COMP:INF', 'FIN', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin'}
v*              {'v', '!COMP:*', 'COMP:V', 'LANG:EN', 'PF:v', 'SPEC:φ', 'PHI:PER:_', 'LF:v', 'ASP', 'PHI:GEN:_', 'NO_NUMBER', '!PROBE:V', 'ARG', '-SPEC:N', '-VAL', 'NO_DET'}
admire**        ['LANG:EN']
T/fin**         {'!COMP:*', 'COMP:V', 'SPEC:φ', '-SPEC:T/prt', 'T/fin', '-adjoinable', 'LF:T', '-SPEC:V', "PF:T/fin''", 'PHI:GEN:_', '!PROBE:V', '-SPEC:C', '-VAL', 'NO_DET', 'SPEC:C/fin', 'SPEC:TO/inf', 'COMP:T/prt', '-SPEC:Neg', 'NO_NUMBER', '-COMP:T/fin', 'LANG:EN', '!SPEC:*', 'COMP:v', 'NO_PERSON', 'PHI:PER:3', 'ARG', '-SPEC:v', '-SPEC:TO/inf', 'T', 'SPEC:FORCE', '-COMP:INF', 'FIN', '-SPEC:N', '-SPEC:T/fin'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'PHI:NUM:_', 'LF:admire', 'SPEC:P', '-COMP:V', 'ASP', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:φ', 'LANG:IT', 'COMP:P', 'PF:adora', 'PHI:PER:_', '-SPEC:T/fin'}
antaa           ['LANG:FI']
anta-           {'!COMP:*', 'PHI:NUM:_', 'SPEC:φ', 'SPEC:P', '-COMP:V', 'ASP', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:FIN', 'PF:antaa', '-COMP:v', 'PHI:DET:_', '-COMP:N', '+SEM:directional', 'SPEC:ADV', 'SPEC:TO/inf', 'LF:give', 'COMP:φ', 'ASP:BOUNDED', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin', 'CLASS:DITR'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'PHI:NUM:_', 'LANG:EN', 'SPEC:φ', 'SPEC:P', '-COMP:V', 'ASP', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', '-VAL', 'SEM:internal', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:φ', 'COMP:P', 'LF:ask', 'PHI:PER:_', '-SPEC:T/fin', 'PF:ask'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimen_gen     ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'LF:key', 'COMP:R', '-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-SEM:directional', 'COMP:C', '-SPEC:C/fin', 'PF:avain', 'LANG:FI', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'PF:auto', 'LF:car', 'COMP:R', '-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-SEM:directional', 'COMP:C', '-SPEC:C/fin', 'LANG:FI', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
bank            {'COMP:R/D', '-COMP:VA/inf', 'PF:bank1', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'LANG:EN', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', 'FREQ:1', '-COMP:N', 'COMP:uR', '-SPEC:P', 'LF:bank_inst', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
bank            {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', 'PF:bank2', '-COMP:A', 'LANG:EN', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'LF:bank_river', 'SPEC:A', 'COMP:P', '-SPEC:N', 'FREQ:2'}
barn            {'LF:barn', 'LANG:EN', 'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', 'COMP:C', '-SPEC:V', '-SPEC:C/fin', 'N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-SPEC:uWH', '-COMP:v', 'COMP:R', '-SPEC:R', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'COMP:T/prt', '-COMP:C/fin', 'SPEC:A', 'COMP:P', 'PF:barn', '-COMP:AUX', '-SPEC:N', '-SPEC:T/fin', '-COMP:A'}
city            {'LANG:EN', 'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', 'COMP:C', '-SPEC:V', '-SPEC:C/fin', 'N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-SPEC:uWH', '-COMP:v', 'COMP:R', '-SPEC:R', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'PF:city', 'COMP:T/prt', '-COMP:C/fin', 'SPEC:A', 'COMP:P', '-COMP:AUX', '-SPEC:N', 'LF:city', '-SPEC:T/fin', '-COMP:A'}
che             ['LANG:IT']
che-            {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'PF:che', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', 'LF:who', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
chiamato        ['LANG:IT']
chiamata-       {'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'ASP', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', '-VAL', 'PF:chiamato', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'LANG:IT', 'COMP:P', 'LF:called', 'PHI:PER:_', '-SPEC:T/fin'}
claims          ['LANG:EN']
claim-          {'PHI:NUM:_', 'LANG:EN', 'SPEC:φ', 'SPEC:P', 'PF:claim', '-COMP:V', 'LF:claim', 'ASP', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', '-COMP:φ', '-VAL', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:T/fin', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
danno           {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', 'COMP:C', '-SPEC:V', '-SPEC:C/fin', 'N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', '-COMP:WH', 'LF:damage', '-SPEC:uWH', 'PF:danno', '-COMP:v', 'COMP:R', '-SPEC:R', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'COMP:T/prt', 'LANG:IT', '-COMP:C/fin', 'SPEC:A', 'COMP:P', '-COMP:AUX', '-SPEC:N', '-SPEC:T/fin', '-COMP:A'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'ASP', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'PF:detest', 'ARG', '-VAL', 'LF:detest', 'SEM:internal', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:φ', 'COMP:ARE/inf', 'LANG:IT', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
devono          ['LANG:EN']
deva-           {'PHI:NUM:_', 'SPEC:φ', 'SPEC:P', '-COMP:V', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', '-VAL', 'SEM:internal', '-COMP:v', 'LF:must', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'PF:deva', 'COMP:ARE/inf', 'LANG:IT', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin', '-ASP'}
di              {'-COMP:T/fin', '!COMP:*', 'PHI:NUM:_', '-COMP:ADV', '-SPEC:T/prt', '-adjoinable', '-SPEC:V', '-SPEC:C/fin', '-SPEC:iR', 'PHI:GEN:_', 'LANG:FI', 'P', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:T', '-SPEC:C', '-VAL', 'ARG', '-SPEC:Neg/fin', '-COMP:uWH', '-SPEC:v', '-SPEC:INF', 'PHI:DET:_', '-COMP:N', 'PF:di', '-SPEC:P', 'COMP:φ', '-SPEC:iWH', 'SPEC:*', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin', 'LF:of', '-COMP:A'}
does            {'!COMP:*', 'COMP:V', 'PHI:NUM:_', 'PF:does', 'SPEC:φ', '-SPEC:T/prt', 'T/fin', '-adjoinable', '-SPEC:V', 'PHI:GEN:_', '!PROBE:V', 'VAL', '-SPEC:C', 'SPEC:C/fin', 'LF:does', 'PHI:DET:_', 'COMP:Neg', 'PHI:GEN:M', 'SPEC:TO/inf', 'COMP:T/prt', '-SPEC:Neg', 'PHI:GEN:F', 'PHI:NUM:SG', '-COMP:T/fin', 'LANG:EN', '!SPEC:*', 'COMP:v', 'PHI:PER:3', 'ARG', '-SPEC:v', '-SPEC:TO/inf', 'T', 'SPEC:FORCE', '-COMP:INF', 'FIN', 'SPEC:*', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin'}
does_C          ['LANG:EN']
does-           {'!COMP:*', 'COMP:V', 'PHI:NUM:_', 'PF:does', 'SPEC:φ', '-SPEC:T/prt', 'T/fin', '-adjoinable', '-SPEC:V', 'PHI:GEN:_', '!PROBE:V', 'VAL', '-SPEC:C', 'SPEC:C/fin', 'LF:does', 'PHI:DET:_', 'COMP:Neg', 'PHI:GEN:M', 'SPEC:TO/inf', 'COMP:T/prt', '-SPEC:Neg', 'PHI:GEN:F', 'PHI:NUM:SG', '-COMP:T/fin', 'LANG:EN', '!SPEC:*', 'COMP:v', 'PHI:PER:3', 'ARG', '-SPEC:v', '-SPEC:TO/inf', 'T', 'SPEC:FORCE', '-COMP:INF', 'FIN', 'SPEC:*', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin'}
dorme           ['LANG:IT']
dorme-          {'PHI:NUM:_', 'LANG:EN', 'SPEC:φ', 'SPEC:P', '-COMP:V', '!SPEC:φ', 'ASP', 'PHI:GEN:_', 'LF:sleep', '-SPEC:FORCE', 'V', 'PF:dorme', 'ARG', '-VAL', '-COMP:φ', 'CLASS:INTR', '-COMP:v', '-COMP:MA/inf', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
disappeared     ['LANG:EN']
disappear-      {'PHI:NUM:_', 'LANG:EN', 'SPEC:φ', 'SPEC:P', '-COMP:V', 'ASP', 'PF:disappear', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'LF:disappear', 'ARG', '-VAL', '-COMP:φ', 'CLASS:INTR', '-COMP:v', '-COMP:MA/inf', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'LF:easy', 'LANG:EN', '2SPEC', 'SPEC:φ', 'PF:easy', '0'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'!COMP:*', 'PHI:NUM:_', '!COMP:T', '!SPEC:*', 'PHI:GEN:_', '-SPEC:T/fin', 'VAL', 'ARG', 'LANG:FI', 'POL:NEG', 'SEM:internal', 'PHI:DET:_', 'NEG', 'COMP:T/prt', 'LF:neg', 'FIN', '%SPEC:INF', '-SPEC:T', 'SPEC:*', 'PF:ei', 'PHI:PER:_', 'Neg/fin'}
e-              {'!COMP:*', 'PHI:NUM:_', '!COMP:T', '!SPEC:*', 'PHI:GEN:_', '-SPEC:T/fin', 'VAL', 'ARG', 'LANG:FI', 'POL:NEG', 'SEM:internal', 'PHI:DET:_', 'NEG', 'COMP:T/prt', 'LF:neg', 'FIN', '%SPEC:INF', '-SPEC:T', 'SPEC:*', 'PF:ei', 'PHI:PER:_', 'Neg/fin'}
elaa            ['LANG:FI']
ela-            {'PHI:NUM:_', 'SPEC:φ', 'SPEC:P', '-COMP:V', 'ASP', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', 'PF:elaa', '-VAL', '-COMP:φ', 'CLASS:INTR', 'LF:live', '-COMP:v', '-COMP:MA/inf', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
etsii           ['LANG:FI']
etsi-           {'!COMP:*', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'ASP', 'CLASS:TR', 'PHI:GEN:_', 'LF:search', 'LANG:FI', 'PF:etsi', 'V', '-SPEC:FORCE', 'ARG', '-VAL', '-COMP:v', 'PHI:DET:_', '-COMP:N', '!COMP:φ', 'SPEC:ADV', 'SPEC:TO/inf', '-COMP:P', 'COMP:φ', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
etta            {'!COMP:*', '-SPEC:*', 'FORCE', 'LF:that', 'PF:etta', 'COMP:T/fin', '!PROBE:FIN', '-ARG', 'COMP:C/fin', '-SPEC:φ', 'LANG:FI', 'FIN', '-VAL'}
fell            ['LANG:EN']
fell-           {'PHI:NUM:_', 'LANG:EN', 'SPEC:φ', 'SPEC:P', '-COMP:V', '!SPEC:φ', 'PF:fell', 'ASP', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:φ', 'CLASS:INTR', '-COMP:v', '-COMP:MA/inf', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'LF:fell', 'PHI:PER:_', '-SPEC:T/fin'}
flow'           {'PHI:NUM:_', 'LANG:EN', 'SPEC:φ', 'PF:flow', 'SPEC:P', '-COMP:V', 'ASP', 'LF:flow', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
from            {'!COMP:*', 'PHI:NUM:_', 'TAIL:V,+SEM:directional', '-SPEC:T/prt', '-SPEC:V', 'adjoinable', 'PHI:GEN:_', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:T', '-SPEC:C', '-VAL', '-SPEC:Neg/fin', 'PHI:DET:_', 'LF:from', '-COMP:A', '-COMP:T/fin', 'LANG:EN', '-COMP:ADV', '-SPEC:*', '-float', '-SPEC:C/fin', '-SPEC:iR', 'P', 'ARG', '-COMP:uWH', '-SPEC:v', 'PF:from', '-SPEC:INF', '-COMP:N', '-SPEC:P', 'COMP:φ', '-SPEC:iWH', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin'}
gave            ['LANG:EN']
give-           {'!COMP:*', 'PHI:NUM:_', 'LANG:EN', 'SPEC:φ', 'SPEC:P', '-COMP:V', 'ASP', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', 'PF:give', '-VAL', '-COMP:FIN', '-COMP:v', 'PHI:DET:_', '-COMP:N', '+SEM:directional', 'SPEC:ADV', 'SPEC:TO/inf', 'LF:give', 'COMP:φ', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin', 'CLASS:DITR'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'LF:Giuseppe', 'COMP:R', '-SPEC:R', 'D:REF:PROPER_NAME', 'COMP:T/prt', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-SEM:directional', 'COMP:C', '-SPEC:C/fin', 'PF:Giuseppe', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'!COMP:*', 'PHI:NUM:_', '-SPEC:*', 'SPEC:P', '-COMP:V', 'PF:haluaa', 'ASP', 'CLASS:TR', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', '-VAL', 'SEM:internal', '-COMP:v', 'PHI:DET:_', '-COMP:N', '-COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:A/inf', 'LF:want', 'COMP:φ', 'ASP:BOUNDED', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
hairitsee       ['LANG:FI']
hairitse-       {'!COMP:*', 'PHI:NUM:_', 'SPEC:φ', 'SPEC:P', '-COMP:V', 'ASP', 'CLASS:TR', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:FIN', '-COMP:v', 'LF:disturb', 'PHI:DET:_', '-COMP:N', '!COMP:φ', 'SPEC:ADV', 'SPEC:TO/inf', '-COMP:P', 'COMP:φ', 'PF:hairitsee', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'PHI:NUM:_', 'SPEC:φ', 'SPEC:P', '-COMP:V', 'COMP:T', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', '-VAL', 'SEM:internal', 'LF:have', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'LANG:IT', 'COMP:P', 'SPEC:*', 'PF:ha', 'PHI:PER:_', '-SPEC:T/fin', '-ASP'}
horse           {'LANG:EN', 'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', 'COMP:C', '-SPEC:V', '-SPEC:C/fin', 'N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-SPEC:uWH', '-COMP:v', 'COMP:R', '-SPEC:R', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'COMP:T/prt', 'PF:horse', '-COMP:C/fin', 'SPEC:A', 'COMP:P', '-COMP:AUX', '-SPEC:N', 'LF:horse', '-SPEC:T/fin', '-COMP:A'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'PHI:NUM:_', 'SPEC:φ', 'SPEC:P', '-COMP:V', 'ASP', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'LF:disappear', 'ARG', '-VAL', '-COMP:φ', 'CLASS:INTR', '-COMP:v', '-COMP:MA/inf', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'PF:havia', 'PHI:PER:_', '-SPEC:T/fin'}
Helsingissa     ['LANG:FI']
Helsinki        ['LANG:FI']
Helsinki-       {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'PF:Helsinki', 'D:REF:PROPER_NAME', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:C', '-SPEC:C/fin', 'LANG:FI', 'N', '-COMP:WH', 'LF:Helsinki', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'!COMP:*', 'PHI:NUM:_', 'SPEC:φ', 'LF:admire', 'SPEC:P', '-COMP:V', 'ASP', 'CLASS:TR', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:FIN', 'PF:ihaile-', '-COMP:v', 'PHI:DET:_', '-COMP:N', '!COMP:φ', 'SPEC:ADV', 'SPEC:TO/inf', '-COMP:P', 'COMP:φ', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
il              {'-EDGE:*', '!COMP:*', '-COMP:T/fin', 'PF:il', '-SPEC:MA/lla', '-SPEC:V', 'adjoinable', '-ARG', '!PROBE:N', '-SPEC:C', '-SPEC:Neg/fin', 'φ', 'D', '-SPEC:INF', 'LF:the', '-COMP:P', '-SPEC:P', 'COMP:φ', 'LANG:IT', '-COMP:uR', 'COMP:N', 'COMP:n', '-SPEC:T/fin'}
i               {'-EDGE:*', '!COMP:*', '-COMP:T/fin', 'PF:il', '-SPEC:MA/lla', '-SPEC:V', 'adjoinable', '-ARG', '!PROBE:N', '-SPEC:C', '-SPEC:Neg/fin', 'φ', 'D', '-SPEC:INF', 'LF:the', '-COMP:P', '-SPEC:P', 'COMP:φ', 'LANG:IT', '-COMP:uR', 'COMP:N', 'COMP:n', '-SPEC:T/fin'}
in              {'-COMP:T/fin', '!COMP:*', 'PHI:NUM:_', '-COMP:ADV', '-SPEC:T/prt', '-SPEC:V', 'adjoinable', '-SPEC:C/fin', '-SPEC:iR', 'PHI:GEN:_', '-SPEC:N', 'P', '-SPEC:FORCE', '-SPEC:ADV', 'ARG', '-COMP:T', '-SPEC:C', '-VAL', '-SPEC:Neg/fin', '-COMP:uWH', '-SPEC:v', '-SPEC:INF', 'PHI:DET:_', '-COMP:N', '-SPEC:P', 'COMP:φ', 'PF:in', 'LANG:IT', '-SPEC:iWH', 'LF:in', 'PHI:PER:_', '-SPEC:T/fin', '-COMP:A'}
infermieri      {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', 'COMP:C', '-SPEC:V', '-SPEC:C/fin', 'N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-SPEC:uWH', 'LF:nurses', '-COMP:v', 'COMP:R', '-SPEC:R', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'PF:infermieri', 'COMP:T/prt', 'LANG:IT', '-COMP:C/fin', 'SPEC:A', 'COMP:P', '-COMP:AUX', '-SPEC:N', '-SPEC:T/fin', '-COMP:A'}
is              ['LANG:EN']
be-             {'!COMP:*', 'LANG:EN', 'SPEC:φ', 'SPEC:P', '-COMP:V', '-ARG', 'ASP', 'COPULA', '-SPEC:FORCE', 'V', 'PF:be', '-VAL', 'LF:be', '-COMP:v', '-COMP:N', 'SPEC:TO/inf', 'SPEC:ADV', '-COMP:TO/inf', 'COMP:P', '-SPEC:T/fin'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'PHI:NUM:_', 'SPEC:φ', 'SPEC:P', '-COMP:V', 'ASP', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:φ', 'CLASS:INTR', '-COMP:v', '-COMP:MA/inf', 'PHI:DET:_', '-COMP:N', 'LF:sit', 'SPEC:ADV', 'SPEC:TO/inf', 'PF:istuu', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
John            ['LANG:EN']
John-           {'COMP:R/D', '-COMP:VA/inf', '-adjoinable', '-COMP:V', 'COMP:D/rel', '-SPEC:V', 'LF:John', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'D:REF:PROPER_NAME', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-SEM:directional', 'LANG:EN', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'PF:John', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:C', '-SPEC:C/fin', 'LANG:FI', 'N', '-COMP:WH', 'PF:joka', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', 'LF:who', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', 'LF:Jukka', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'D:REF:PROPER_NAME', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-SEM:directional', 'PF:Jukka', 'COMP:C', '-SPEC:C/fin', 'LANG:FI', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'PF:juokse-', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'ASP', 'LF:run', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
kaksi           {'!COMP:*', 'PHI:NUM:_', 'NUM', 'PHI:GEN:_', 'LANG:FI', 'ARG', '-COMP:D', 'TAIL:ARG,VAL,FIN', '-VAL', 'φ', 'PHI:DET:_', 'COMP:φ', '-COMP:QN', 'PHI:NUM:SG', 'COMP:N', 'COMP:n', 'SPEC:*', 'PHI:PER:_', 'LF:two', 'PF:kaksi'}
kaksi           {'!COMP:*', 'PHI:NUM:_', 'LANG:EN', 'NUM', 'PHI:GEN:_', 'ARG', '-COMP:D', '-VAL', 'TAIL:*POL:NEG', 'φ', 'PHI:DET:_', 'COMP:φ', 'TAIL:ARG,ASP:BOUNDED', '-COMP:QN', 'COMP:N', 'COMP:n', 'SPEC:*', 'PHI:PER:_', 'LF:two', 'PF:kaksi'}
kaksi_1         {'!COMP:*', 'PHI:NUM:_', 'NUM', 'PHI:GEN:_', 'LANG:FI', 'ARG', '-COMP:D', 'TAIL:ARG,VAL,FIN', '-VAL', 'φ', 'PHI:DET:_', 'COMP:φ', '-COMP:QN', 'PHI:NUM:SG', 'COMP:N', 'COMP:n', 'SPEC:*', 'PHI:PER:_', 'LF:two', 'PF:kaksi'}
kaksi_2         {'!COMP:*', 'PHI:NUM:_', 'LANG:EN', 'NUM', 'PHI:GEN:_', 'ARG', '-COMP:D', '-VAL', 'TAIL:*POL:NEG', 'φ', 'PHI:DET:_', 'COMP:φ', 'TAIL:ARG,ASP:BOUNDED', '-COMP:QN', 'COMP:N', 'COMP:n', 'SPEC:*', 'PHI:PER:_', 'LF:two', 'PF:kaksi'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'φ', 'NUM', 'COMP:φ', '-COMP:QN', 'LANG:FI', 'COMP:N', 'COMP:n', 'SPEC:*', '-COMP:D', 'LF:two', 'PF:kaksi'}
kaupunkia       ['LANG:EN']
kaupunki-       {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', 'COMP:C', '-SPEC:V', '-SPEC:C/fin', 'LANG:FI', 'N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-SPEC:uWH', 'PF:kaupunki', '-COMP:v', 'COMP:R', '-SPEC:R', '-SPEC:INF', '-COMP:N', '-COMP:P', 'COMP:uR', '-SPEC:P', 'COMP:T/prt', '-COMP:C/fin', 'SPEC:A', '-COMP:AUX', '-SPEC:N', 'LF:city', '-SPEC:T/fin', '-COMP:A'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'PHI:NUM:_', '-SPEC:*', 'SPEC:P', '-COMP:V', 'ASP', 'LF:order', 'PHI:GEN:_', 'SEM:external', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', 'PF:kaske', '-VAL', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', '!COMP:A/inf', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', 'COMP:C', '-SPEC:V', '-SPEC:C/fin', '-SPEC:N', 'LANG:FI', 'N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-SPEC:uWH', '-COMP:v', 'COMP:R', '-SPEC:R', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'COMP:T/prt', '-COMP:C/fin', 'SPEC:A', 'COMP:P', '-COMP:AUX', 'PF:kello', '-SPEC:T/fin', 'LF:watch', '-COMP:A'}
kello0-         {'LANG:FI', '2SPEC', 'SPEC:φ', 'PF:kello', 'LF:watch', '0'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'LF:key', 'COMP:R', '-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-SEM:directional', 'LANG:EN', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', 'PF:key', '-SPEC:T/fin'}
kirja           ['LANG:FI']
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'LF:book', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', 'PF:kirja', '-SEM:directional', '-COMP:A', 'COMP:C', '-SPEC:C/fin', 'LANG:FI', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
knows           ['LANG:EN']
know-           {'!COMP:*', 'PHI:NUM:_', 'LANG:EN', 'SPEC:P', '-COMP:V', 'ASP', 'CLASS:TR', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', '-VAL', 'PF:know', 'LF:know', '-COMP:v', 'PHI:DET:_', '-COMP:N', '-COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:φ', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
kohti           {'-COMP:T/fin', '!COMP:*', 'PHI:NUM:_', '-COMP:ADV', '-SPEC:T/prt', '-SPEC:V', 'TAIL:V', 'adjoinable', '-SPEC:C/fin', '-SPEC:iR', 'PHI:GEN:_', 'P', 'LANG:FI', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:T', '-SPEC:C', '-VAL', 'ARG', '-SPEC:Neg/fin', '-COMP:uWH', '-SPEC:v', '-SPEC:INF', 'PHI:DET:_', 'PF:kohti', '-COMP:N', '-SPEC:P', 'COMP:φ', '-SPEC:iWH', 'SPEC:*', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin', 'LF:towards', '-COMP:A'}
koko            {'-EDGE:*', '!COMP:*', '-COMP:T/fin', '-SPEC:MA/lla', '-SPEC:V', 'adjoinable', '-ARG', 'LF:all', 'LANG:FI', '!PROBE:N', '-SPEC:C', '-SPEC:Neg/fin', 'φ', 'D', '-SPEC:INF', '-COMP:P', '-SPEC:P', 'COMP:φ', '-COMP:uR', 'COMP:N', 'COMP:n', 'TAIL:T', '-SPEC:T/fin', 'PF:koko'}
kuka            ['LANG:FI']
KUKA            ['LANG:FI']
kuka-           {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:C', '-SPEC:C/fin', 'PF:kuka', 'LANG:FI', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'LF:who', '-SPEC:P', 'SPEC:A', 'COMP:P', 'PHI', '-SPEC:T/fin'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'-COMP:T/fin', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'ASP', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', '-COMP:WH', '-COMP:φ', '-VAL', '-COMP:v', 'PHI:DET:_', 'PF:kuorsaa', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin', 'LF:snore'}
kysyi           ['LANG:EN']
kysy-           {'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'ASP', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '!PROBE:FORCE:OP:WH', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'PF:kysya', 'SPEC:TO/inf', 'COMP:P', 'LF:ask', 'PHI:PER:_', '-SPEC:T/fin'}
lahella         {'!COMP:*', 'COMP:V', 'PHI:NUM:_', '-SPEC:T/prt', '-SPEC:V', 'adjoinable', 'PHI:GEN:_', 'VAL', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:T', '-SPEC:C', 'LF:near', '-SPEC:Neg/fin', 'PHI:DET:_', '-COMP:C/fin', 'INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '!SPEC:*', '!SPEC:φ', 'COMP:v', '-SPEC:C/fin', '-SPEC:iR', 'P', 'LANG:FI', 'ARG', '-COMP:uWH', '-SPEC:v', '-COMP:FORCE', 'PF:lahella', '-SPEC:INF', '-COMP:N', '-SPEC:P', 'COMP:φ', '-SPEC:iWH', 'SPEC:*', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin'}
lahella         {'-COMP:T/fin', '!COMP:*', 'PHI:NUM:_', '-COMP:ADV', '-SPEC:T/prt', '-SPEC:V', 'adjoinable', '-SPEC:C/fin', '-SPEC:iR', 'PHI:GEN:_', 'P', '-SPEC:FORCE', '-SPEC:ADV', 'LANG:FI', '-COMP:T', '-SPEC:C', '-VAL', 'LF:near', 'ARG', '-SPEC:Neg/fin', '-COMP:uWH', '-SPEC:v', 'PF:lahella', '-SPEC:INF', 'PHI:DET:_', '-COMP:N', '!COMP:φ', '-SPEC:P', 'COMP:φ', '-SPEC:iWH', 'SPEC:*', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin', '-COMP:A'}
lahella_1       {'-COMP:T/fin', '!COMP:*', 'PHI:NUM:_', '-COMP:ADV', '-SPEC:T/prt', '-SPEC:V', 'adjoinable', '-SPEC:C/fin', '-SPEC:iR', 'PHI:GEN:_', 'P', '-SPEC:FORCE', '-SPEC:ADV', 'LANG:FI', '-COMP:T', '-SPEC:C', '-VAL', 'LF:near', 'ARG', '-SPEC:Neg/fin', '-COMP:uWH', '-SPEC:v', 'PF:lahella', '-SPEC:INF', 'PHI:DET:_', '-COMP:N', '!COMP:φ', '-SPEC:P', 'COMP:φ', '-SPEC:iWH', 'SPEC:*', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin', '-COMP:A'}
lahella_2       {'!COMP:*', 'COMP:V', 'PHI:NUM:_', '-SPEC:T/prt', '-SPEC:V', 'adjoinable', 'PHI:GEN:_', 'VAL', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:T', '-SPEC:C', 'LF:near', '-SPEC:Neg/fin', 'PHI:DET:_', '-COMP:C/fin', 'INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '!SPEC:*', '!SPEC:φ', 'COMP:v', '-SPEC:C/fin', '-SPEC:iR', 'P', 'LANG:FI', 'ARG', '-COMP:uWH', '-SPEC:v', '-COMP:FORCE', 'PF:lahella', '-SPEC:INF', '-COMP:N', '-SPEC:P', 'COMP:φ', '-SPEC:iWH', 'SPEC:*', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'PHI:NUM:_', 'SPEC:φ', 'SPEC:P', '-COMP:V', 'ASP', 'PHI:GEN:_', 'PF:lahtea', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', '-COMP:φ', '-VAL', 'CLASS:INTR', '-COMP:v', '-COMP:MA/inf', 'PHI:DET:_', 'COMP:PP', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'LF:leave', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
lavano          ['LANG:IT']
lava-           {'!COMP:*', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'ASP', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', 'PF:lava', '-VAL', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'LF:wash', 'COMP:φ', 'LANG:IT', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-EDGE:*', '!COMP:*', '-COMP:T/fin', '-SPEC:MA/lla', '-SPEC:V', 'adjoinable', '-ARG', '!PROBE:N', '-SPEC:C', '-SPEC:Neg/fin', 'LF:φ', 'φ', 'PF:le', 'D', '-SPEC:INF', '-COMP:P', '-SPEC:P', 'COMP:φ', 'LANG:IT', '-COMP:uR', 'COMP:N', 'COMP:n', '-SPEC:T/fin'}
leaves          ['LANG:EN']
leave           {'-COMP:T/fin', 'PHI:NUM:_', 'LANG:EN', 'SPEC:P', '-COMP:V', '!SPEC:φ', 'ASP', 'PF:leave', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'LF:leave', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
leave-          {'-COMP:T/fin', 'PHI:NUM:_', 'LANG:EN', 'SPEC:P', '-COMP:V', '!SPEC:φ', 'ASP', 'PF:leave', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'LF:leave', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
like-           {'LF:like', 'PHI:NUM:_', 'LANG:EN', 'SPEC:P', '-COMP:V', 'ASP', 'PF:like', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:v', 'PHI:DET:_', '-COMP:N', '!COMP:φ', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
likes           ['LANG:EN']
like            {'LF:like', 'PHI:NUM:_', 'LANG:EN', 'SPEC:P', '-COMP:V', 'ASP', 'PF:like', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:v', 'PHI:DET:_', '-COMP:N', '!COMP:φ', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
little          ['LANG:EN']
little-         {'PF:little-', 'LANG:EN', '2SPEC', 'SPEC:φ', 'LF:little', '0'}
lle             {'!COMP:*', 'PHI:NUM:_', 'TAIL:V,+SEM:directional', '-SPEC:T/prt', '-SPEC:V', 'adjoinable', 'PHI:GEN:_', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:T', '-SPEC:C', '-VAL', '-SPEC:Neg/fin', 'PHI:DET:_', '+SEM:directional', 'PF:P(lle)', 'LF:for', '-COMP:A', '-COMP:T/fin', '-SPEC:*', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:iR', 'P', 'LANG:FI', 'ARG', '-COMP:uWH', '-SPEC:v', '-SPEC:INF', '-COMP:N', '-SPEC:P', 'COMP:φ', '-SPEC:iWH', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin'}
lla             {'!COMP:*', 'PHI:NUM:_', '-SPEC:T/prt', '-SPEC:V', 'adjoinable', 'TAIL:*V', 'PHI:GEN:_', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:T', '-SPEC:C', '-VAL', '-SPEC:Neg/fin', 'LF:by', 'PHI:DET:_', 'PF:P(lla)', 'TAIL:T', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:iR', 'P', 'LANG:FI', 'ARG', '-COMP:uWH', '-SPEC:v', '-SPEC:INF', '-COMP:N', '-SPEC:P', 'COMP:φ', '-SPEC:iWH', 'SPEC:*', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin'}
Luisa           ['LANG:IT']
Luisa-          {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', 'PF:Luisa', '-COMP:D', 'COMP:R', '-SPEC:R', 'D:REF:PROPER_NAME', 'COMP:T/prt', 'LANG:IT', '-COMP:C/fin', 'LF:Luisa', '-COMP:AUX', '-COMP:A', '-SEM:directional', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'!COMP:*', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'LF:read', 'ASP', 'CLASS:TR', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', '-VAL', 'PF:luke', '-COMP:v', 'PHI:DET:_', '-COMP:N', '-COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:φ', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'!COMP:*', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'ASP', 'CLASS:TR', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', '-VAL', 'PF:loyta-', 'LF:find', '-COMP:v', 'PHI:DET:_', '-COMP:N', '!COMP:φ', 'SPEC:ADV', 'SPEC:TO/inf', '-COMP:P', 'COMP:φ', 'ASP:BOUNDED', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
Mary            ['LANG:EN']
Mary-           {'PF:Mary', 'COMP:R/D', '-COMP:VA/inf', '-adjoinable', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'LF:Mary', 'COMP:R', '-SPEC:R', 'D:REF:PROPER_NAME', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-SEM:directional', 'LANG:EN', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
Merja           ['LANG:FI']
Merja_nom       ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merjaahan       ['LANG:FI']
Merja-          {'COMP:R/D', '-COMP:VA/inf', '-adjoinable', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'D:REF:PROPER_NAME', 'PF:Merja', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-SEM:directional', 'LF:Merja', 'COMP:C', '-SPEC:C/fin', 'LANG:FI', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
meren           ['LANG:FI']
mere-           {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'LF:ocean', 'COMP:D/rel', '-SPEC:V', 'COMP:C', '-SPEC:C/fin', 'LANG:FI', 'N', 'PF:meri', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-SPEC:uWH', '-COMP:v', 'COMP:R', '-SPEC:R', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'COMP:T/prt', '-COMP:C/fin', 'SPEC:A', 'COMP:P', '-COMP:AUX', '-SPEC:N', '-SPEC:T/fin', '-COMP:A'}
mies            ['LANG:EN']
mies-           {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'LF:man', 'COMP:D/rel', '-SPEC:V', 'COMP:C', '-SPEC:C/fin', 'LANG:FI', 'N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-SPEC:uWH', '-COMP:v', 'COMP:R', '-SPEC:R', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'COMP:T/prt', '-COMP:C/fin', 'SPEC:A', 'COMP:P', '-COMP:AUX', '-SPEC:N', '-SPEC:T/fin', 'PF:mies', '-COMP:A'}
mistake         {'LANG:EN', 'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', 'COMP:C', '-SPEC:V', '-SPEC:C/fin', 'N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-SPEC:uWH', 'PF:mistake', '-COMP:v', 'COMP:R', '-SPEC:R', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'COMP:T/prt', '-COMP:C/fin', 'SPEC:A', 'COMP:P', '-COMP:AUX', '-SPEC:N', '-SPEC:T/fin', 'LF:mistake', '-COMP:A'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'PF:mika-', 'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', 'COMP:C', '-SPEC:V', '-SPEC:C/fin', 'LANG:FI', 'N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-SPEC:uWH', 'LF:what', '-COMP:v', 'COMP:R', '-SPEC:R', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'COMP:T/prt', '-COMP:C/fin', 'SPEC:A', 'COMP:P', '-COMP:AUX', '-SPEC:N', '-SPEC:T/fin', '-COMP:A'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'!COMP:*', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'ASP', 'CLASS:TR', 'PHI:GEN:_', 'LF:move', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:v', 'PHI:DET:_', '-COMP:N', '+SEM:directional', 'SPEC:ADV', 'SPEC:TO/inf', '-COMP:P', 'COMP:φ', 'LANGN:EN', 'COMP:P', 'PF:move', 'PHI:PER:_', '-SPEC:T/fin'}
mukavasti       ['LANG:EN']
mukava-         {'LANG:FI', '2SPEC', 'SPEC:φ', 'PF:mukavasti', 'LF:comfortably', '0'}
must            {'-COMP:T/fin', '!COMP:*', 'PF:must', 'COMP:V', 'LANG:EN', 'PHI:NUM:_', 'SPEC:φ', '-SPEC:T/prt', '!SPEC:*', 'T/fin', '-adjoinable', '-SPEC:V', 'COMP:v', 'PHI:GEN:_', '!PROBE:V', 'VAL', 'ARG', '-SPEC:N', '-SPEC:C', 'SPEC:C/fin', '-SPEC:v', '-SPEC:TO/inf', 'LF:must', 'PHI:DET:_', 'COMP:Neg', 'SPEC:TO/inf', 'T', 'COMP:T/prt', 'SPEC:FORCE', '-SPEC:Neg', '-COMP:INF', 'FIN', 'SPEC:*', 'MODAL', 'PHI:PER:_', '-SPEC:T/fin'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'-COMP:T/fin', '!COMP:*', 'PHI:NUM:_', 'PF:myy', 'LF:sell', 'SPEC:P', '-COMP:V', 'ASP', 'CLASS:TR', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', '-COMP:Neg/fin', '-VAL', '-COMP:v', 'PHI:DET:_', '-COMP:N', '-COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:φ', 'ASP:BOUNDED', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
naki            ['LANG:FI']
nakee           ['LANG:FI']
nake-           {'!COMP:*', 'PHI:NUM:_', 'PF:nake', 'LF:see', '-COMP:ESSA/inf', 'SPEC:P', '-COMP:MA/ssa', '-COMP:V', 'ASP', 'CLASS:TR', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:v', '-COMP:MA/tta', 'PHI:DET:_', '-COMP:N', '-COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:φ', 'ASP:BOUNDED', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
nayttaa         ['LANG:FI']
naytta-         {'SPEC:P', 'LF:seem', '!SPEC:φ', '-COMP:V', '-ARG', 'ASP', 'VAL', 'LANG:FI', 'V', '-SPEC:FORCE', 'PF:naytta', 'SEM:internal', '-COMP:v', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', '!COMP:VA/inf', 'COMP:P', '-SPEC:T/fin'}
ndo             {'-COMP:T/fin', '!COMP:*', 'COMP:V', 'LF:ing', 'LANG:EN', '-COMP:FORCE', '?ARG', 'COMP:v', '-SPEC:V', '-COMP:C/fin', 'VAL', 'INF', 'PRG', '-SPEC:T/fin', 'PF:PRG'}
ne              {'-EDGE:*', '!COMP:*', '-COMP:T/fin', '-SPEC:MA/lla', '-SPEC:V', 'adjoinable', '-ARG', 'PHI:PER:3', 'LANG:FI', '!PROBE:N', 'PHI:NUM:PL', '-SPEC:C', '-SPEC:Neg/fin', 'φ', 'D', '-SPEC:INF', 'PF:ne', '-COMP:P', '-SPEC:P', 'COMP:φ', '-COMP:uR', 'COMP:N', 'COMP:n', 'LF:those', '-SPEC:T/fin'}
niiden          ['LANG:EN']
nen             {'LF:ing', 'A', 'COMP:0', 'PF:a', 'TAIL:φ', '-SPEC:φ', 'LANG:FI', '-SPEC:A', 'SPEC:*'}
not             {'Neg', '!COMP:*', '-COMP:FIN', 'PHI:NUM:_', 'POL:NEG', 'LANG:EN', 'PF:not', 'PHI:PER:_', 'PHI:DET:_', '-COMP:C', 'PHI:GEN:_', 'ARG', 'SPEC:*', '-COMP:φ', 'LF:not', '-VAL', '-SPEC:T/fin'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-COMP:T/fin', 'PHI:NUM:_', 'SPEC:φ', 'SPEC:P', '-COMP:V', 'ASP', 'PHI:GEN:_', 'LF:sleep', 'LANG:FI', 'V', '-SPEC:FORCE', '-COMP:T', 'ARG', '-COMP:Neg/fin', '-VAL', '-COMP:φ', 'PF:nukku', 'CLASS:INTR', '-COMP:MA/inf', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'COMP:R/D', 'PF:omaisuuden', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', 'COMP:C', '-SPEC:V', '-SPEC:C/fin', 'LANG:FI', 'N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-SPEC:uWH', '-COMP:v', 'COMP:R', '-SPEC:R', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'LF:possessions', 'COMP:T/prt', '-COMP:C/fin', 'SPEC:A', 'COMP:P', '-COMP:AUX', '-SPEC:N', '-SPEC:T/fin', '-COMP:A'}
operatoria      ['LANG:IT']
operatoria-     {'LANG:IT', 'PF:operatoria', '2SPEC', 'SPEC:φ', 'LF:operation', '0'}
ostaa           ['LANG:FI']
osta-           {'!COMP:*', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'ASP', 'CLASS:TR', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', '-VAL', 'LF:buy', '-COMP:v', 'PHI:DET:_', 'PF:osta', '-COMP:N', '-COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:φ', 'ASP:BOUNDED', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'LF:day', 'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', 'SEM:nonreferential', 'PF:paiva', '-COMP:A', 'COMP:C', '-SPEC:C/fin', 'LANG:FI', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
past            {'-COMP:T/fin', '!COMP:*', 'PHI:NUM:_', 'LANG:EN', '-COMP:ADV', '-SPEC:*', '-SPEC:T/prt', '-float', '-SPEC:V', 'adjoinable', '-SPEC:C/fin', '-SPEC:iR', 'PHI:GEN:_', 'P', '-SPEC:FORCE', '-SPEC:ADV', 'ARG', '-COMP:T', '-SPEC:C', 'LF:past', '-VAL', '-SPEC:Neg/fin', '-COMP:uWH', '-SPEC:v', '-SPEC:INF', 'PHI:DET:_', '-COMP:N', '-SPEC:P', 'COMP:φ', 'PF:past', '-SPEC:iWH', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin', '-COMP:A'}
Pariisia        ['LANG:FI']
Pariisi-        {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', 'COMP:C', '-SPEC:V', '-SPEC:C/fin', 'LANG:FI', 'N', '-SPEC:FORCE', '-SPEC:ADV', 'PF:Pariisi', '-COMP:D', '-COMP:WH', '-SPEC:uWH', '-COMP:v', 'COMP:R', '-SPEC:R', '-SPEC:INF', '-COMP:N', 'COMP:uR', 'LF:Paris', '-SPEC:P', 'COMP:T/prt', '-COMP:C/fin', 'SPEC:A', 'COMP:P', '-COMP:AUX', '-SPEC:N', '-SPEC:T/fin', '-COMP:A'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekkahan        ['LANG:FI']
PEKKA           ['LANG:EN']
Pekka-          {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'D:REF:PROPER_NAME', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', 'PF:Pekka', '-SEM:directional', '-COMP:A', 'COMP:C', '-SPEC:C/fin', 'LANG:FI', 'N', 'LF:Pekka', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'!COMP:*', 'LF:fear', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'ASP', 'CLASS:TR', 'PHI:GEN:_', 'PF:pelkaa', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:v', 'PHI:DET:_', '-COMP:N', '-COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:φ', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
persuades       ['LANG:EN']
persuade-       {'!COMP:*', 'PHI:NUM:_', 'LANG:EN', 'SPEC:P', '-COMP:V', 'ASP', 'PHI:GEN:_', 'SEM:external', '-SPEC:FORCE', 'V', 'ARG', '-VAL', 'PF:persuade', 'COMP:TO/inf', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'LF:persuade', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
peruuntui       ['LANG:FI']
peruuntu-       {'PHI:NUM:_', 'SPEC:φ', 'SPEC:P', 'LF:cancelled', '-COMP:V', 'ASP', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', '-VAL', 'PF:peruuntui', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
pesi            ['LANG:FI']
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'!COMP:*', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'ASP', 'CLASS:TR', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', 'PF:pese_asp', '-VAL', '-COMP:v', 'PHI:DET:_', '-COMP:N', '-COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'LF:wash', 'COMP:φ', 'ASP:BOUNDED', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
pese-           {'!COMP:*', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'ASP', 'CLASS:TR', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', '-VAL', 'PF:pese', '-COMP:v', 'PHI:DET:_', '-COMP:N', '-COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'LF:wash', 'COMP:φ', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
petardi         {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', 'COMP:C', '-SPEC:V', '-SPEC:C/fin', 'N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', '-COMP:A', '-COMP:WH', '-SPEC:uWH', '-COMP:v', 'COMP:R', '-SPEC:R', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'COMP:T/prt', 'LANG:IT', '-COMP:C/fin', 'SPEC:A', 'COMP:P', 'LF:firecrackers', '-COMP:AUX', '-SPEC:N', '-SPEC:T/fin', 'PF:petardi'}
pieni           ['LANG:FI']
pieni-          {'PF:pieni-', 'SPEC:φ', 'LANG:FI', 'LF:small', '2SPEC', '0'}
poikien         ['LANG:FI']
poika-          {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', 'COMP:C', '-SPEC:V', '-SPEC:C/fin', 'LANG:FI', 'N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', '-COMP:WH', 'LF:boy', '-SPEC:uWH', '-COMP:v', 'COMP:R', '-SPEC:R', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'COMP:T/prt', '-COMP:C/fin', 'SPEC:A', 'COMP:P', 'PF:poika', '-COMP:AUX', '-SPEC:N', '-SPEC:T/fin', '-COMP:A'}
puhelinta       ['LANG:FI']
puhelin-        {'PF:puhelin', 'LF:phone', 'LANG:FI', '2SPEC', 'SPEC:φ', '0'}
punainen        ['LANG:FI']
puna-           {'PF:puna-', 'LANG:FI', '2SPEC', 'SPEC:φ', 'LF:red', '0'}
presupposto     {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', 'COMP:C', '-SPEC:V', '-SPEC:C/fin', '-SPEC:N', 'N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-SPEC:uWH', '-COMP:v', 'COMP:R', '-SPEC:R', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'COMP:T/prt', 'LANG:IT', 'LF:presupposition', '-COMP:C/fin', 'SPEC:A', 'COMP:P', '-COMP:AUX', 'PF:presupposto', '-SPEC:T/fin', '-COMP:A'}
primary         {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', 'COMP:C', '-SPEC:V', '-SPEC:C/fin', 'PF:primary', 'N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-SPEC:uWH', 'LF:nurse', '-COMP:v', 'COMP:R', '-SPEC:R', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'COMP:T/prt', 'LANG:IT', '-COMP:C/fin', 'SPEC:A', 'COMP:P', '-COMP:AUX', '-SPEC:N', '-SPEC:T/fin', '-COMP:A'}
promises        ['LANG:EN']
promise-        {'PHI:NUM:_', 'LANG:EN', 'SPEC:φ', 'PF:promise', 'SPEC:P', '-COMP:V', 'ASP', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'LF:promise', 'ARG', '-VAL', 'SEM:internal', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:φ', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
problem         {'LANG:EN', 'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', 'COMP:C', '-SPEC:V', '-SPEC:C/fin', 'N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-SPEC:uWH', '-COMP:v', 'COMP:R', '-SPEC:R', '-SPEC:INF', 'LF:problem', 'PF:problem', '-COMP:N', 'COMP:uR', '-SPEC:P', 'COMP:T/prt', '-COMP:C/fin', 'SPEC:A', 'COMP:P', '-COMP:AUX', '-SPEC:N', '-SPEC:T/fin', '-COMP:A'}
pyytaa          ['LANG:FI']
pyyta-          {'!COMP:*', 'PHI:NUM:_', 'SPEC:P', 'PF:pyyda', '-COMP:V', 'ASP', 'CLASS:TR', 'PHI:GEN:_', 'SEM:external', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:v', 'PHI:DET:_', '-COMP:N', '-COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:φ', 'COMP:P', 'LF:ask', 'PHI:PER:_', '-SPEC:T/fin'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'-COMP:T/fin', '!COMP:*', 'PHI:NUM:_', 'LANG:EN', 'SPEC:φ', 'LF:race', 'SPEC:P', '-COMP:V', 'ASP', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:φ', 'LAMG:EN', 'CLASS:INTR', '-COMP:v', '-COMP:MA/inf', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'PF:race', 'PHI:PER:_', '-SPEC:T/fin'}
raukesi         ['LANG:FI']
raukea-         {'PF:raukea', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'ASP', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin', 'LF:terminate'}
red             ['LANG:EN']
red-            {'LANG:EN', '2SPEC', 'SPEC:φ', 'PF:red', 'LF:red', '0'}
saavuttaa       ['LANG:FI']
saavutta-       {'!COMP:*', 'PHI:NUM:_', 'PF:saavutta-', 'SPEC:P', '-COMP:V', 'ASP', 'CLASS:TR', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'LF:reach', 'ARG', '-VAL', '-COMP:v', 'PHI:DET:_', '-COMP:N', '!COMP:φ', 'SPEC:ADV', 'SPEC:TO/inf', '-COMP:P', 'COMP:φ', 'ASP:BOUNDED', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'PHI:NUM:_', 'SPEC:φ', 'SPEC:P', '-COMP:V', 'ASP', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', '-VAL', 'COMP:FORCE', 'PF:sano-', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'COMP:VA/inf', 'PHI:PER:_', '-SPEC:T/fin', 'LF:say'}
said            ['LANG:EN']
say'            {'PHI:NUM:_', 'LANG:EN', 'SPEC:φ', 'SPEC:P', '!COMP:FORCE', '-COMP:V', 'ASP', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', '-VAL', 'PF:say', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin', 'LF:say'}
say-            {'PHI:NUM:_', 'LANG:EN', 'SPEC:φ', 'SPEC:P', '!COMP:FORCE', '-COMP:V', 'ASP', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', '-VAL', 'PF:say', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin', 'LF:say'}
sala            ['LANG:IT']
sala-           {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', 'COMP:C', '-SPEC:V', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-SPEC:uWH', '-COMP:v', 'COMP:R', '-SPEC:R', '-SPEC:INF', 'PF:sala', '-COMP:N', 'COMP:uR', '-SPEC:P', 'COMP:T/prt', 'LANG:IT', '-COMP:C/fin', 'SPEC:A', 'COMP:P', '-COMP:AUX', '-SPEC:N', 'LF:room', '-COMP:A'}
scoppiati       ['LANG:IT']
scoppia-        {'PHI:NUM:_', 'PF:scoppia', 'SPEC:P', '-COMP:V', 'ASP', 'LF:explode', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'LANG:IT', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
sentenza        {'LF:sentence', 'PF:sentenza', 'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', 'COMP:C', '-SPEC:V', '-SPEC:C/fin', 'N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-SPEC:uWH', '-COMP:v', 'COMP:R', '-SPEC:R', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'COMP:T/prt', 'LANG:IT', '-COMP:C/fin', 'SPEC:A', 'COMP:P', '-COMP:AUX', '-SPEC:N', '-SPEC:T/fin', '-COMP:A'}
Seine           ['LANG:EN']
Seine-          {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'LF:Seine', 'COMP:R', '-SPEC:R', 'D:REF:PROPER_NAME', 'PF:Seine', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'LANG:EN', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
sembrano        ['LANG:IT']
sembra-         {'LANG:EN', 'PF:sembra', 'SPEC:φ', 'SPEC:P', 'LF:seem', '-COMP:V', '-ARG', '-SPEC:FORCE', 'V', '-COMP:φ', '-VAL', '!COMP:ARE/inf', '-COMP:v', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', '-SPEC:T/fin', '-ASP'}
sleeps          ['LANG:EN']
sleep           {'PHI:NUM:_', 'LANG:EN', 'SPEC:φ', 'SPEC:P', '-COMP:V', 'ASP', 'PHI:GEN:_', 'LF:sleep', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:φ', 'CLASS:INTR', '-COMP:v', '-COMP:MA/inf', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'PF:sleep', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
sleep-          {'PHI:NUM:_', 'LANG:EN', 'SPEC:φ', 'SPEC:P', '-COMP:V', 'ASP', 'PHI:GEN:_', 'LF:sleep', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:φ', 'CLASS:INTR', '-COMP:v', '-COMP:MA/inf', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'PF:sleep', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
solution        {'LF:solution', 'LANG:EN', 'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', 'COMP:C', '-SPEC:V', '-SPEC:C/fin', 'N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-SPEC:uWH', '-COMP:v', 'COMP:R', '-SPEC:R', 'PF:solution', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'COMP:T/prt', '-COMP:C/fin', 'SPEC:A', 'COMP:P', '-COMP:AUX', '-SPEC:N', '-SPEC:T/fin', '-COMP:A'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'COMP:R/D', '-COMP:VA/inf', 'LF:agreement', '-COMP:V', 'COMP:D/rel', '-SPEC:V', 'PF:sopimus', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:C', '-SPEC:C/fin', 'LANG:FI', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', '!COMP:A/inf', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
spinge          ['LANG:IT']
spinge-         {'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'LF:push', 'ASP', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:v', 'PHI:DET:_', '-COMP:N', '-COMP:P', '!COMP:φ', 'SPEC:ADV', 'SPEC:TO/inf', 'PF:spinge', 'LANG:IT', 'PHI:PER:_', '-SPEC:T/fin'}
ssa             {'!COMP:*', 'PHI:NUM:_', '-SPEC:T/prt', '-SPEC:V', 'adjoinable', 'PHI:GEN:_', '-SPEC:N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:T', '-SPEC:C', '-VAL', '-SPEC:Neg/fin', 'PHI:DET:_', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', 'COMP:n/MA', 'TAIL:V', '-SPEC:C/fin', '-SPEC:iR', 'P', 'LANG:FI', 'ARG', '-COMP:uWH', '-SPEC:v', '-SPEC:INF', '-COMP:N', '-SPEC:P', 'COMP:φ', '-SPEC:iWH', 'PF:ssa', 'SPEC:*', 'LF:in', 'PHI:PER:_', '-SPEC:T/fin'}
stanno          ['LANG:IT']
sta-            {'PHI:NUM:_', 'LANG:EN', 'SPEC:φ', 'SPEC:P', '-COMP:V', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', '-VAL', 'PF:sta', 'SEM:internal', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'COMP:PRG', 'LF:stay', 'PHI:PER:_', '-SPEC:T/fin', '-ASP'}
sti             {'!COMP:*', 'LF:by', 'ADV', '-ARG', 'adjoinable', '-SPEC:N', 'LANG:FI', 'SPEC:*', '-SPEC:FORCE', 'TAIL:T', 'PF:sti', '-SPEC:T/fin', '-SPEC:Neg/fin'}
sukka           ['LANG:EN']
sukka_0acc      ['LANG:EN']
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukan_acc       ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', 'COMP:C', '-SPEC:V', '-SPEC:C/fin', 'LANG:FI', 'N', '-SPEC:FORCE', 'LF:socks', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-SPEC:uWH', '-COMP:v', 'COMP:R', '-SPEC:R', '-SPEC:INF', 'PF:sukka-', '-COMP:N', 'COMP:uR', '-SPEC:P', 'COMP:T/prt', '-COMP:C/fin', 'SPEC:A', 'COMP:P', '-COMP:AUX', '-SPEC:N', '-SPEC:T/fin', '-COMP:A'}
surprised       ['LANG:EN']
surprise-       {'-COMP:T/fin', '!COMP:*', 'PF:surprise', 'PHI:NUM:_', 'LANG:EN', 'SPEC:P', '-COMP:V', 'ASP', 'CLASS:TR', 'PHI:GEN:_', '-SPEC:FORCE', 'LF:surprise', 'V', 'ARG', '-VAL', '-COMP:v', 'PHI:DET:_', '-COMP:N', '-COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:φ', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
talo            ['LANG:EN']
taloa           ['LANG:EN']
talona          ['LANG:EN']
taloksi         ['LANG:EN']
talo-           {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', 'COMP:C', '-SPEC:V', '-SPEC:C/fin', 'PF:talo', 'LANG:FI', 'N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-SPEC:uWH', '-COMP:v', 'COMP:R', '-SPEC:R', '-SPEC:INF', 'LF:house', '-COMP:N', 'COMP:uR', '-SPEC:P', 'COMP:T/prt', '-COMP:C/fin', 'SPEC:A', 'COMP:P', '-COMP:AUX', '-SPEC:N', '-SPEC:T/fin', '-COMP:A'}
tama            ['LANG:EN']
tama-           {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:C', '-SPEC:C/fin', 'LANG:FI', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'LF:this', 'COMP:uR', '-SPEC:P', 'PF:tama', 'SPEC:A', 'COMP:P', 'PHI', '-SPEC:T/fin'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:v', 'LF:must', 'PHI:DET:_', '-COMP:N', 'PF:taytyy', 'SPEC:ADV', 'SPEC:TO/inf', '!COMP:A/inf', 'COMP:P', 'FIN', 'SPEC:*', 'MODAL', 'PHI:PER:_', '-SPEC:T/fin', '-ASP'}
teki            ['LANG:FI']
teke-           {'!COMP:*', 'PHI:NUM:_', 'PF:teke', 'SPEC:P', '-COMP:V', 'ASP', 'CLASS:TR', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:A/inf', '-COMP:v', 'LF:make', 'PHI:DET:_', '-COMP:N', '!COMP:φ', 'SPEC:ADV', 'SPEC:TO/inf', '-COMP:P', 'COMP:φ', 'ASP:BOUNDED', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
that            {'!COMP:*', 'LANG:EN', '-SPEC:*', 'FORCE', 'PF:that', 'LF:that', 'COMP:T/fin', '!PROBE:FIN', '-ARG', 'COMP:C/fin', 'FIN', '-VAL', 'FORCE:DECL'}
the             {'-EDGE:*', '!COMP:*', '-COMP:T/fin', 'LANG:EN', '-SPEC:MA/lla', '-SPEC:V', 'adjoinable', '-ARG', 'PHI:PER:3', '-SPEC:T/fin', '!PROBE:N', '-SPEC:C', '-SPEC:Neg/fin', 'φ', 'D', 'PF:the', 'LF:the', '-SPEC:INF', '-COMP:P', 'PHI:DET:DEF', '-SPEC:P', 'COMP:φ', '-COMP:uR', 'COMP:N', 'COMP:n', 'PHI:NUM:SG'}
to              {'!COMP:*', 'PHI:NUM:_', '-SPEC:T/prt', '-SPEC:V', 'LF:to', 'adjoinable', 'PHI:GEN:_', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:T', '-SPEC:C', '-VAL', '-SPEC:Neg/fin', 'PF:to', 'PHI:DET:_', '+SEM:directional', '-COMP:A', '-COMP:T/fin', '-SPEC:*', 'LANG:EN', '-COMP:ADV', '-float', 'TAIL:V', '-SPEC:C/fin', '-SPEC:iR', 'P', 'ARG', '-COMP:uWH', '-SPEC:v', '-SPEC:INF', '-COMP:N', '-SPEC:P', 'COMP:φ', '-SPEC:iWH', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin'}
to_inf          {'-COMP:T/fin', 'LF:TO/inf', '!COMP:*', 'COMP:V', 'LANG:EN', 'COMP:v', 'adjoinable', '-SPEC:V', '-VAL', 'PF:TO/inf', 'TO/inf', '-SPEC:v', '-COMP:FORCE', '?ARG', '-COMP:C/fin', 'INF', '-SPEC:T/fin'}
towards         {'!COMP:*', 'PHI:NUM:_', '-SPEC:T/prt', '-SPEC:V', 'adjoinable', 'PHI:GEN:_', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:T', '-SPEC:C', '-VAL', '-SPEC:Neg/fin', 'PHI:DET:_', '-COMP:A', '-COMP:T/fin', 'LANG:EN', '-COMP:ADV', '-SPEC:*', '-float', 'TAIL:V', '-SPEC:C/fin', '-SPEC:iR', 'P', 'ARG', '-COMP:uWH', '-SPEC:v', '-SPEC:INF', '-COMP:N', '-SPEC:P', 'COMP:φ', '-SPEC:iWH', '-SPEC:N', 'PF:towards', 'PHI:PER:_', '-SPEC:T/fin', 'LF:towards'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'!COMP:*', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'ASP', 'PF:tonaise', 'CLASS:TR', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:v', 'PHI:DET:_', 'LF:nudge', '-COMP:N', '-COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:φ', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
tta             {'!COMP:*', 'PHI:NUM:_', '-SPEC:T/prt', '-SPEC:V', 'adjoinable', 'PHI:GEN:_', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:T', '-SPEC:C', '-VAL', '-SPEC:Neg/fin', 'PHI:DET:_', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', 'COMP:n/MA', '-SPEC:C/fin', '-SPEC:iR', 'P', 'LANG:FI', 'ARG', '-COMP:uWH', 'PF:tta', 'LF:without', '-SPEC:v', '-SPEC:INF', '-COMP:N', 'ADV', '-SPEC:P', 'COMP:φ', '-SPEC:iWH', 'SPEC:*', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin'}
tries           ['LANG:EN']
try-            {'PHI:NUM:_', 'LANG:EN', 'SPEC:φ', 'SPEC:P', '-COMP:V', 'LF:try', 'ASP', 'PHI:GEN:_', 'PF:try', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '!COMP:TO/inf', 'SEM:internal', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', '!COMP:-ARG', 'PHI:PER:_', '-SPEC:T/fin'}
verifiche       {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', 'COMP:C', '-SPEC:V', '-SPEC:C/fin', 'N', 'LF:verification', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-SPEC:uWH', '-COMP:v', 'COMP:R', '-SPEC:R', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'COMP:T/prt', 'LANG:IT', '-COMP:C/fin', 'SPEC:A', 'COMP:P', '-COMP:AUX', '-SPEC:N', 'PF:verifiche', '-SPEC:T/fin', '-COMP:A'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'PHI:NUM:_', 'SPEC:φ', 'SPEC:P', '-COMP:V', 'ASP', 'LF:flow', 'PHI:GEN:_', 'LANG:FI', '-SPEC:FORCE', 'V', 'ARG', '-COMP:φ', '-VAL', 'CLASS:INTR', '-COMP:v', '-COMP:MA/inf', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', '!COMP:P', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin', 'PF:virtaa'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'!COMP:*', 'PHI:NUM:_', '-SPEC:*', 'LANG:EN', 'SPEC:P', '-COMP:V', 'ASP', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', '-VAL', 'PF:volu', 'SEM:internal', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'LF:want', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'!COMP:*', 'PHI:NUM:_', 'LANG:EN', 'PHI:PER:_', 'SPEC:P', '-COMP:V', 'ASP', 'CLASS:TR', 'PHI:GEN:_', 'LF:win', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:v', 'PHI:DET:_', 'PF:voitta', '-COMP:N', '-COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:φ', 'ASP:BOUNDED', 'COMP:P', 'SEM:achievement', '-SPEC:T/fin'}
wants           ['LANG:EN']
want-           {'!COMP:*', 'PHI:NUM:_', 'LANG:EN', 'PF:want', 'SPEC:P', '-COMP:V', 'ASP', 'CLASS:TR', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', '-VAL', 'COMP:TO/inf', '-COMP:v', '-SPEC:TO/inf', 'PHI:DET:_', '-COMP:N', '-COMP:P', 'SPEC:ADV', 'LF:want', 'COMP:φ', 'COMP:P', 'PHI:PER:_', '-SPEC:T/fin'}
what            ['LANG:EN']
what-           {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'PF:what', 'LF:what', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'LANG:EN', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
which           {'-EDGE:*', '!COMP:*', '-COMP:T/fin', 'LANG:EN', '-SPEC:MA/lla', '-SPEC:V', 'adjoinable', '-ARG', '!PROBE:N', 'OP:WH', '-SPEC:C', 'PF:which', '-SPEC:Neg/fin', 'φ', 'D', '-SPEC:INF', '-COMP:P', 'DIS:WH', '-SPEC:P', 'COMP:φ', '-COMP:uR', 'COMP:N', 'COMP:n', '-SPEC:T/fin', 'LF:which'}
who             ['LANG:EN']
who-            {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'LANG:EN', 'COMP:C', 'PF:who', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', 'LF:who', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
whether         {'!COMP:*', 'LF:whether', 'LANG:EN', '-SPEC:*', 'FORCE', 'PF:whether', 'OP:Q', '!PROBE:FIN', '-ARG', 'COMP:T/fin', 'Q', 'COMP:C/fin', 'FIN', 'OP:WH', '-VAL'}
yrittaa         ['LANG:FI']
yritta-         {'PHI:NUM:_', 'LANG:EN', 'SPEC:φ', 'PF:yritta', 'SPEC:P', '-COMP:V', 'LF:try', 'ASP', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', '-VAL', 'SEM:internal', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', '!COMP:A/inf', 'COMP:P', '!COMP:-ARG', 'PHI:PER:_', '-SPEC:T/fin'}
mina            ['LANG:EN']
mina-           {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', 'LF:I', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'PF:mina', 'COMP:C', '-SPEC:C/fin', 'LANG:FI', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
sina            ['LANG:EN']
sina-           {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'PF:sina', 'COMP:C', '-SPEC:C/fin', 'LANG:FI', 'N', 'LF:you', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
han             ['LANG:EN']
han-            {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:C', '-SPEC:C/fin', 'LANG:FI', 'N', 'PF:han', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'LF:s/he', '-COMP:*', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', 'LF:we', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'PF:me', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:C', '-SPEC:C/fin', 'LANG:FI', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
te              ['LANG:EN']
te-             {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:C', '-SPEC:C/fin', 'LANG:FI', 'N', 'LF:you', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin', 'PF:te'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'COMP:R/D', '-COMP:VA/inf', 'PF:he', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:C', '-SPEC:C/fin', 'LANG:FI', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', 'LF:they', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
se              ['LANG:EN']
sen             ['LANG:EN']
sita            ['LANG:EN']
se-             {'-EDGE:*', '!COMP:*', '-COMP:T/fin', '-SPEC:MA/lla', '-SPEC:V', 'adjoinable', '-ARG', 'LANG:FI', '!PROBE:N', '-SPEC:C', 'PF:se', '-SPEC:Neg/fin', 'φ', 'LF:the/that', 'D', '-SPEC:INF', '-COMP:P', '-SPEC:P', 'COMP:φ', '-COMP:uR', 'COMP:N', 'COMP:n', '-SPEC:T/fin'}
I               ['LANG:EN']
I-              {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', 'LF:I', '-COMP:C/fin', 'PF:I', '-COMP:AUX', '-COMP:A', 'LANG:EN', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
you             ['LANG:EN']
you-            {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', 'PF:you', '-COMP:A', 'LANG:EN', 'COMP:C', '-SPEC:C/fin', 'N', 'LF:you', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
he              ['LANG:EN']
he-             {'COMP:R/D', '-COMP:VA/inf', 'PF:he', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', 'LF:he', '-COMP:D', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'LANG:EN', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
she             ['LANG:EN']
she-            {'PF:she', 'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'LANG:EN', 'LF:she', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
we              ['LANG:EN']
we-             {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', 'LF:we', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'LANG:EN', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', 'PF:we', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
you_pl          ['LANG:EN']
you_pl-         {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'LANG:EN', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', 'PF:you_pl', '-COMP:v', '-SPEC:INF', '-COMP:N', 'LF:you_pl', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', 'PHI', '-SPEC:T/fin'}
they            ['LANG:EN']
they-           {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'LANG:EN', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', 'PF:they', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', 'LF:they', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
it              ['LANG:EN']
it-             {'-EDGE:*', '!COMP:*', '-COMP:T/fin', 'LANG:EN', '-SPEC:MA/lla', '-SPEC:V', 'adjoinable', '-ARG', '!PROBE:N', '-SPEC:C', 'LF:it/that', '-SPEC:Neg/fin', 'φ', 'D', '-SPEC:INF', 'PF:it', '-COMP:P', '-SPEC:P', 'COMP:φ', '-COMP:uR', 'COMP:N', 'COMP:n', '-SPEC:T/fin'}
io              ['LANG:EN']
io-             {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', 'PF:io', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', 'LF:I', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
tu              ['LANG:EN']
tu-             {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', 'PF:tu', '-COMP:A', 'COMP:C', '-SPEC:C/fin', 'N', 'LF:you', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
lui             ['LANG:EN']
lui-            {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', 'PF:lui', '-SPEC:FORCE', '-SPEC:ADV', 'LF:he', '-COMP:D', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
lei             ['LANG:EN']
lei-            {'PF:lei', 'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'LF:she', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
noi             ['LANG:EN']
noi-            {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', 'LF:we', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'PF:noi', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
voi             ['LANG:EN']
voi-            {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'PF:voi', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'LF:you_pl', '-COMP:*', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
loro            ['LANG:EN']
loro-           {'COMP:R/D', 'PF:loro', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', 'LF:they', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
mi              ['LANG:EN']
mi-             {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'CL', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'LF:me', 'COMP:P', 'PF:mi(cl)', '-SPEC:N', '-SPEC:T/fin'}
la              ['LANG:EN']
la-             {'COMP:R/D', '-COMP:VA/inf', 'PF:la(cl)', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'PHI_N', 'LF:her', 'COMP:T/prt', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'CL', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
lo              ['LANG:EN']
lo-             {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'LF:him', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'CL', 'PF:lo(cl)', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
si              ['LANG:EN']
si-             {'PF:si(cl)', 'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', 'LANG:IT', 'LF:3sg', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'CAL:CL', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'LF:there', 'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'PHI_N', 'COMP:T/prt', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'PF:ci', 'COMP:C', '-SPEC:C/fin', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', '-COMP:*', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', '-SPEC:N', '-SPEC:T/fin'}
[-n]            {'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI', 'PHI:PER:1', 'PHI:NUM:SG', 'PHI:DET:DEF'}
[-t]            {'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI', 'PHI:NUM:SG', 'PHI:PER:2', 'PHI:DET:DEF'}
[-V]            {'inflectional', 'PHI:PER:3', 'LANG:FI', 'PHI', 'PHI:NUM:SG'}
[-mme]          {'inflectional', 'PHI:HUM:HUM', 'PHI', 'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:1', 'PHI:DET:DEF'}
[-mme]          {'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:1', 'PHI:DET:DEF'}
[-tte]          {'inflectional', 'PHI:HUM:HUM', 'PHI', 'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:2', 'PHI:DET:DEF'}
[-vat]          {'inflectional', 'PHI', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:PL'}
[-ni]           {'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI', 'PHI:PER:1', 'PHI:NUM:SG', 'PHI:DET:DEF'}
[-si]           {'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI', 'PHI:NUM:SG', 'PHI:PER:2', 'PHI:DET:DEF'}
[-nsa]          {'inflectional', 'PHI:PER:3', 'LANG:FI', 'PHI', 'PHI:NUM:SG'}
[-an]           {'inflectional', 'PHI:PER:3', 'LANG:FI', 'PHI', 'PHI:NUM:SG', 'PHI:DET:DEF'}
[-nne]          {'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:2', 'PHI:DET:DEF'}
[-s]            {'inflectional', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:EN', 'PHI:GEN:F', 'PHI', 'PHI:GEN:M'}
[-0]            {'LANG:EN', 'PHI:GEN:N', 'PHI:DET:DEF', 'inflectional', 'PHI:PER:3', 'PHI:NUM:PL', 'PHI', 'PHI:NUM:SG', 'PHI:PER:2', 'PHI:PER:1'}
[-o]            {'inflectional', 'PHI:HUM:HUM', 'LANG:IT', 'PHI', 'PHI:PER:1', 'PHI:NUM:SG', 'PHI:DET:DEF'}
[-i]            {'inflectional', 'PHI:HUM:HUM', 'LANG:IT', 'PHI', 'PHI:NUM:SG', 'PHI:PER:2', 'PHI:DET:DEF'}
[-a]            {'inflectional', 'PHI:PER:3', 'LANG:IT', 'PHI', 'PHI:NUM:SG', 'PHI:DET:DEF'}
[-e]            {'inflectional', 'PHI:PER:3', 'LANG:IT', 'PHI', 'PHI:NUM:SG', 'PHI:DET:DEF'}
[-iamo]         {'inflectional', 'PHI:HUM:HUM', 'LANG:IT', 'PHI', 'PHI:NUM:PL', 'PHI:PER:1', 'PHI:DET:DEF'}
[-te]           {'inflectional', 'PHI:HUM:HUM', 'LANG:IT', 'PHI', 'PHI:NUM:PL', 'PHI:PER:2', 'PHI:DET:DEF'}
[-no]           {'inflectional', 'PHI', 'PHI:PER:3', 'LANG:IT', 'PHI:NUM:PL', 'PHI:DET:DEF'}
[-nom]          {'inflectional', 'adjoinable', 'LANG:EN', 'NOM', 'TAIL:FIN,ARG,VAL'}
[-par]          {'inflectional', 'PAR', 'adjoinable', 'LANG:FI', 'TAIL:ARG,-VAL'}
[-gen]          {'inflectional', 'LANG:EN', 'GEN', 'TAIL:INF,ARG', '-float'}
gen             {'inflectional', 'LANG:EN', 'GEN', 'TAIL:INF,ARG', '-float'}
[-n_acc]        {'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable', 'LANG:FI', 'TAIL:PHI', 'n-ACC', 'TAIL:*POL:NEG'}
[-t_acc]        {'inflectional', 'adjoinable', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 't-ACC', 'TAIL:*POL:NEG'}
[-0_acc]        {'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable', 'TAIL:*PHI', 'LANG:FI', 'TAIL:*POL:NEG', '0_ACC'}
[-ess]          {'LF:as', '#essiivi', 'inflectional', 'TAIL:V', 'PF:na', 'LANG:FI'}
[-trs]          {'inflectional', 'TAIL:V', 'LF:to', '#translatiivi', 'LANG:FI', 'PF:ksi'}
[-ine]          {'inflectional', 'TAIL:V', 'LANG:FI', 'PF:ssa', 'LF:in', '#inessiivi'}
[-ela]          {'inflectional', '#elatiivi', 'TAIL:V', 'LF:from', 'LANG:FI', 'PF:sta'}
[-ill]          {'inflectional', 'TAIL:V', 'LF:into', 'PF:an', 'LANG:FI', '#illatiivi'}
[-ade]          {'inflectional', 'TAIL:V', '#adessiivi', 'LANG:FI', 'LF:at', 'PF:lla'}
[-abl]          {'inflectional', 'TAIL:V', '#ablatiivi', 'PF:lta', 'LANG:FI', 'LF:from'}
[-all]          {'inflectional', 'TAIL:V', 'LF:to', 'LANG:FI', 'PF:lle', '#allatiivi'}
[-abe]          {'inflectional', 'PF:tta', 'LF:without', '#abessiivi', 'TAIL:V', 'LANG:FI'}
[-kom]          {'inflectional', 'PF:ine', 'TAIL:V', '#komitatiivi', 'LANG:FI', 'LF:together'}
[-ins]          {'inflectional', 'TAIL:V', 'LANG:FI', 'LF:with', '#instruktiivi', 'PF:n'}
asp             {'inflectional', 'LANG:EN', 'ASP:BOUNDED'}
[hAn]           {'inflectional', 'LANG:FI', 'OVERT_SCOPE', 'DIS:FAM', 'OP:FAM'}
[pA]            {'inflectional', 'LANG:FI', 'OVERT_SCOPE', 'DIS:POL', 'OP:POL'}
[kO]            {'inflectional', 'OVERT_SCOPE', 'LANG:FI', 'OP:WH', 'FORCE:OP:WH', 'OP:Q', 'DIS:WH'}
[foc]           {'inflectional', 'LANG:FI', 'OP:FOC', 'DIS:FOC'}
a'              {'a', 'LF:A', 'PF:a', 'LANG:X'}
b'              {'LF:B', 'LANG:X', 'b', 'PF:b'}
b''             {'LF:B', 'LANG:EN', 'b', 'PF:b', '-COMP:c'}
c''             {'c', 'LANG:EN', 'SPEC:a', 'PF:c', 'LF:C'}
c'              {'c', 'PF:c', 'LANG:X', 'LF:C'}
d'              {'LF:D', 'LANG:', 'PF:d', 'd'}
a''             ['LANG:EN']
x'              {'x', 'LANG:X', 'LF:X', 'PF:x'}
y'              {'LF:Y', 'LANG:X', 'y', 'PF:y'}
z'              {'LANG:X', 'PF:x', 'LF:Z', 'z'}
John'           {"N'", 'LANG:X', 'PF:John', 'LF:John'}
admires'        {'PF:admires', 'LF:admires', 'LANG:X', "V'"}
admires''       {'PHI:NUM:_', 'LANG:EN', 'SPEC:φ', 'SPEC:P', '-COMP:V', 'ASP', 'LF:admires', 'PHI:GEN:_', '-SPEC:FORCE', 'V', 'ARG', '-VAL', '-COMP:v', 'PHI:DET:_', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'PF:admires', 'PHI:PER:_', '-SPEC:T/fin'}
Mary'           {'LF:mary', "N'", 'PF:Mary', 'LANG:X'}
T/fin           {'-COMP:T/fin', '!COMP:*', 'COMP:V', 'PHI:NUM:_', 'LANG:EN', 'SPEC:φ', '-SPEC:T/prt', '!SPEC:*', 'T/fin', '-adjoinable', 'LF:T', '-SPEC:V', 'COMP:v', 'PHI:GEN:_', '!PROBE:V', 'VAL', 'ARG', '-SPEC:C', 'SPEC:C/fin', '-SPEC:v', '-SPEC:TO/inf', 'PHI:DET:_', 'PF:T', 'SPEC:TO/inf', 'T', 'COMP:T/prt', 'SPEC:FORCE', '-SPEC:Neg', '-COMP:INF', 'FIN', 'SPEC:*', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin'}
v               {'v', '!COMP:*', 'COMP:V', 'PHI:NUM:_', 'LANG:EN', 'PF:v', 'PHI:DET:_', 'SPEC:φ', 'PHI:PER:_', 'LF:v', 'ASP', 'PHI:GEN:_', '!PROBE:V', 'ARG', '-SPEC:N', '-VAL'}
C/fin           {'!COMP:*', 'LANG:EN', 'C/fin', '-ARG', '-SPEC:C/fin', 'VAL', 'C', '-COMP:FORCE', 'PF:C', 'COMP:Neg/fin', 'LF:C/fin', 'COMP:T/fin', '!PROBE:FIN', '-COMP:C/fin', 'FIN', 'SPEC:*', '-COMP:T/prt', '-SPEC:N', '-SPEC:T/fin'}
T               {'!COMP:*', 'COMP:V', 'PHI:NUM:_', 'LANG:EN', 'SPEC:φ', 'LF:T', 'COMP:v', '-SPEC:V', 'PHI:GEN:_', '-COMP:NEG', 'VAL', 'ARG', '!PROBE:V', '-SPEC:FORCE', 'PHI:DET:_', 'PF:T', '-SPEC:NEG', 'T', 'COMP:T/prt', 'FIN', 'SPEC:*', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin'}
T/prt           {'!COMP:*', 'COMP:V', 'PHI:NUM:_', 'LANG:EN', 'SPEC:φ', 'PF:T/prt', '-SPEC:V', 'COMP:v', 'T/prt', '-SPEC:C/fin', 'PHI:GEN:_', '-COMP:NEG', 'VAL', 'ARG', '!PROBE:V', '-SPEC:FORCE', 'LF:T/prt', 'PHI:DET:_', 'T', 'COMP:T/prt', 'COMP:φ', 'FIN', 'SPEC:*', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin'}
a0              {'LF:A', 'LANG:EN', 'A', '-adjoinable', 'COMP:0', 'TAIL:φ', '-SPEC:φ', '-SPEC:A', 'PF:A'}
n               {'!COMP:*', 'COMP:V', 'PHI:NUM:_', 'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', 'PHI:GEN:_', 'VAL', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'PHI:DET:_', 'n', 'COMP:T/prt', '-COMP:C/fin', 'INF', '-COMP:AUX', 'PF:n', '-COMP:A', 'LANG:EN', 'LF:n', '!SPEC:*', '!SPEC:φ', 'COMP:C', 'COMP:v', '-SPEC:C/fin', 'N', 'ARG', '-COMP:WH', '-SPEC:uWH', 'φ', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:0', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', 'SPEC:*', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin'}
impass          {'v', '!COMP:*', 'COMP:V', 'PHI:NUM:_', 'LANG:EN', 'PHI:DET:_', 'PF:impass', 'SPEC:φ', 'PHI:PER:_', 'ASP', 'LF:impass', '!PROBE:V', 'PHI:GEN:_', 'ARG', '-SPEC:N', '-VAL'}
cau             {'v', '!COMP:*', 'COMP:V', 'PHI:NUM:_', 'LANG:EN', 'PHI:DET:_', 'SPEC:φ', 'PHI:PER:_', 'LF:v/Cause', 'ASP', 'PHI:GEN:_', '!PROBE:V', 'PF:Cau', 'ARG', '-SPEC:N', '-VAL'}
φ               {'φ', 'LF:φ', 'LANG:EN', 'COMP:N', '-VAL', 'PF:φ'}
INF             {'-COMP:T/fin', '!COMP:*', 'COMP:V', '-COMP:FORCE', 'LANG:EN', 'PF:INF', 'COMP:v', '-SPEC:V', 'LF:INF', '-COMP:C/fin', 'INF', '-SPEC:T/fin'}
prtcpl          {'-COMP:T/fin', '!COMP:*', 'COMP:V', 'PHI:NUM:_', 'LANG:EN', 'SPEC:φ', 'PF:T/prt', '-SPEC:V', 'COMP:v', 'T/prt', '-SPEC:C/fin', 'PHI:GEN:_', '-COMP:NEG', 'VAL', '!PROBE:V', '-SPEC:FORCE', 'ARG', 'LF:T/prt', '-COMP:FORCE', 'PHI:DET:_', '-SPEC:NEG', 'T', 'COMP:T/prt', 'COMP:φ', '-COMP:C/fin', 'FIN', 'SPEC:*', 'INF', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin'}
TO/inf          {'-COMP:T/fin', 'LF:TO/inf', '!COMP:*', 'COMP:V', 'LANG:EN', 'COMP:v', 'adjoinable', '-SPEC:V', '-VAL', 'PF:TO/inf', 'TO/inf', '-SPEC:v', '!COMP:V', '-COMP:FORCE', '?ARG', '-COMP:C/fin', 'INF', '-SPEC:T/fin'}
A/inf           {'-COMP:T/fin', '!COMP:*', 'PF:A/inf', 'COMP:V', 'LANG:EN', 'COMP:v', '-SPEC:V', '?VAL', 'A/inf', '-SPEC:Neg/fin', '-COMP:FORCE', 'LF:A/inf', '?ARG', '-COMP:C/fin', 'SPEC:*', 'INF', '-SPEC:T/fin'}
ARE/inf         {'-COMP:T/fin', '!COMP:*', 'COMP:V', 'LANG:EN', '-adjoinable', 'PF:are', 'COMP:v', '-SPEC:V', 'VAL', '-COMP:FORCE', '?ARG', '-COMP:C/fin', 'LF:ARE/inf', 'SPEC:*', 'INF', 'ARE/inf', '-SPEC:T/fin'}
ESSA/inf        {'-COMP:T/fin', '!COMP:*', 'COMP:V', 'LANG:EN', 'COMP:v', 'adjoinable', '-SPEC:V', 'PF:essa', '-SPEC:N', '-SPEC:FORCE', '?VAL', '-SPEC:Neg/fin', '-COMP:FORCE', 'LF:while', 'ADV', '?ARG', '-COMP:C/fin', 'ESSA/inf', 'SPEC:*', 'INF', 'TAIL:T', '-SPEC:T/fin'}
TUA/inf         {'-COMP:T/fin', '!COMP:*', 'COMP:V', 'PHI:NUM:_', 'LANG:EN', '!SPEC:*', 'COMP:v', 'adjoinable', '-SPEC:V', 'PHI:GEN:_', '-SPEC:N', 'VAL', 'ARG', '-SPEC:FORCE', 'LF:after', '-SPEC:Neg/fin', '-COMP:FORCE', 'PHI:DET:_', 'TUA/inf', 'ADV', '-COMP:C/fin', 'PF:tua', 'SPEC:*', 'INF', 'TAIL:T', 'PHI:PER:_', '-SPEC:T/fin'}
VA/inf          {'-COMP:T/fin', '!COMP:*', 'COMP:V', 'PHI:NUM:_', 'LANG:EN', 'COMP:v', '-SPEC:V', 'PF:vAn', 'PHI:GEN:_', 'VAL', 'ARG', 'VA/inf', '-COMP:FORCE', 'PHI:DET:_', '-COMP:C/fin', 'LF:VA', 'INF', '-SPEC:N', 'SPEC:*', 'PHI:PER:_', '-SPEC:T/fin'}
MA/ssa          {'COMP:V', 'PHI:NUM:_', '-SPEC:*', 'LANG:EN', 'MA/inf', 'MA/ssa', 'COMP:v', 'TAIL:V', 'adjoinable', 'PHI:GEN:_', 'ARG', '-SPEC:FORCE', '-VAL', '-SPEC:Neg/fin', 'PHI:DET:_', 'ADV', 'LF:in_doing', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin', 'PF:massa'}
MA/tta          {'PHI:NUM:_', 'LANG:EN', 'PHI:DET:_', 'PHI:PER:_', 'MA/inf', '-SPEC:Neg/fin', 'ADV', 'adjoinable', 'PHI:GEN:_', '-SPEC:N', 'ARG', '-SPEC:FORCE', 'TAIL:T', '-VAL', '-SPEC:T/fin', 'PF:matta', 'LF:without_doing'}
MA/lla          {'COMP:V', 'PHI:NUM:_', 'MA/inf', 'adjoinable', 'PHI:GEN:_', 'VAL', '-SPEC:FORCE', 'PF:malla', '-SPEC:Neg/fin', 'PHI:DET:_', 'TAIL:T', 'LANG:EN', 'COMP:v', 'ARG', 'LF:by_doing', 'ADV', 'SPEC:*', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin'}
MA/inf          {'COMP:V', 'PHI:NUM:_', 'MA/inf', 'PF:maan', 'adjoinable', 'PHI:GEN:_', 'VAL', '-SPEC:FORCE', '-SPEC:Neg/fin', 'PHI:DET:_', 'LF:to_do', 'LANG:EN', 'COMP:v', 'TAIL:V', 'ARG', 'ADV', 'SPEC:*', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin'}
E/inf           {'PF:en', 'LF:by', 'ADV', '-ARG', 'adjoinable', '-SPEC:N', 'LANG:FI', 'SPEC:*', '-SPEC:FORCE', 'TAIL:T', '-VAL', '-SPEC:T/fin', '-SPEC:Neg/fin'}
BE-             {'-COMP:T/fin', '!COMP:*', 'LANG:EN', 'SPEC:φ', 'SPEC:P', '-COMP:V', '-ARG', 'ASP', 'COPULA', '-SPEC:FORCE', 'V', '-VAL', 'PF:BE', '-COMP:v', '-COMP:N', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:φ', 'COMP:T/prt', 'COMP:P', 'LF:BE', '-SPEC:T/fin'}
D               {'LF:D', '-EDGE:*', '!COMP:*', '-COMP:T/fin', 'LANG:EN', '-SPEC:MA/lla', '-SPEC:V', 'adjoinable', '-ARG', 'PF:D', '!PROBE:N', '-SPEC:C', '-VAL', '-SPEC:Neg/fin', 'φ', 'D', '-SPEC:INF', '-COMP:P', '-SPEC:P', 'COMP:φ', '-COMP:uR', 'COMP:N', 'COMP:n', '-SPEC:T/fin'}
D/rel           {'-COMP:T/fin', '!COMP:*', 'LF:D/rel', 'OP:_', 'LANG:EN', '-SPEC:MA/lla', '-SPEC:V', 'adjoinable', '-ARG', 'D/rel', 'OP', '!PROBE:N', 'OP:REL', '-SPEC:C', '-VAL', '-COMP:φ', '-SPEC:Neg/fin', 'φ', 'D', '-SPEC:INF', 'PF:D/rel', '-SPEC:P', '-COMP:C/fin', '-COMP:uR', 'COMP:N', '-SPEC:T/fin'}
P               {'-COMP:T/fin', '!COMP:*', 'PHI:NUM:_', 'LANG:EN', '-COMP:ADV', '-SPEC:*', '-SPEC:T/prt', 'PHI:PER:_', '-float', 'PF:P', '-SPEC:V', 'adjoinable', '-SPEC:C/fin', '-SPEC:iR', 'PHI:GEN:_', 'P', '-SPEC:FORCE', '-SPEC:ADV', 'ARG', '-COMP:T', '-SPEC:C', '-VAL', '-SPEC:Neg/fin', '-COMP:uWH', '-SPEC:v', '-SPEC:INF', 'PHI:DET:_', '-COMP:N', '-SPEC:P', 'COMP:φ', '-SPEC:iWH', '-SPEC:N', 'LF:P', '-SPEC:T/fin', '-COMP:A'}
pro             ['LANG:EN']
pro-            {'COMP:R/D', '-COMP:VA/inf', '-COMP:V', 'COMP:D/rel', '-SPEC:V', '-SPEC:N', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:D', 'COMP:R', '-SPEC:R', 'COMP:T/prt', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'LANG:EN', 'LF:pro', 'COMP:C', '-SPEC:C/fin', 'PF:(pro)', 'N', '-COMP:WH', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:uR', '-SPEC:P', 'SPEC:A', 'COMP:P', 'PHI', '-SPEC:T/fin'}
cl              {'inflectional', 'CL', 'LANG:EN', 'RIGHT:ARE/inf', 'RIGHT:PRG', 'LEFT:D,CL', 'LEFT:T/fin'}
inc             {'inflectional', 'LANG:EN', 'INCORPORATED'}
sg              {'inflectional', 'LANG:EN', 'PHI:NUM:SG'}
pl              {'inflectional', 'LANG:EN', 'PHI:NUM:PL'}
1p              {'inflectional', 'LANG:EN', 'PHI:PER:1'}
2p              {'inflectional', 'LANG:EN', 'PHI:PER:2'}
3p              {'inflectional', 'PHI:PER:3', 'LANG:EN'}
def             {'inflectional', 'LANG:EN', 'PHI:DET:DEF'}
indef           {'inflectional', 'PHI:DET:INDEF', 'LANG:EN'}
hum             {'inflectional', 'PHI:HUM:HUM', 'LANG:EN'}
nonhum          {'inflectional', 'LANG:EN', 'PHI:HUM:NONHUM'}
m               {'inflectional', 'LANG:EN', 'PHI:GEN:M'}
f               {'inflectional', 'LANG:EN', 'PHI:GEN:F'}
proper_name     {'inflectional', 'D:REF:NAME', 'LANG:EN'}
nom             {'inflectional', 'TAIL:FIN,!COMP:*,VAL', 'LANG:EN', 'NOM'}
acc             {'inflectional', 'ACC', 'TAIL:v', 'LANG:EN'}
dat             {'inflectional', 'TAIL:v', 'LANG:EN', 'DAT'}
V1              {'inflectional', '-EDGE:*', 'LANG:EN', '-SPEC:*'}
uC/op           {'inflectional', 'uC/op', 'LANG:EN'}
wh              {'inflectional', 'OP:_', 'LANG:EN', 'OP:WH', 'DIS:WH'}
wh_             {'inflectional', 'OP:_', 'LANG:EN', 'OP', '-COMP:OP'}
top             {'inflectional', 'OP:TOP', 'DIS:TOP', 'LANG:EN'}
foc             {'inflectional', 'LANG:EN', 'OP:FOC', 'DIS:FOC'}
fam             {'inflectional', 'LANG:EN', 'DIS:FAM', 'OP:FAM'}
pol             {'inflectional', 'DIS:POL', 'LANG:EN', 'OP:POL'}
C/op            {'inflectional', 'LANG:EN', 'OP:C/OP', 'DIS:C/OP'}
d/rel           {'inflectional', 'adjoinable', 'OP:_', '-COMP:C/fin', 'LANG:EN', 'OP:REL', 'SPEC:D'}
Q               {'inflectional', 'LANG:EN', 'OP', 'OP:WH', '-COMP:OP', 'OP:Q', 'DIS:WH'}
