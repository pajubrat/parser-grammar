ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'-COMP:ADV', 'LANG:IT', '-COMP:A', 'PF:a', 'COMP:ARE/inf', '-SPEC:FORCE', '-SPEC:Neg/fin', '-SPEC:iR', 'COMP:D', '-SPEC:INF', '-ARG', '-SPEC:v', '-SPEC:ADV', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', '-SPEC:N', '-VAL', 'adjoinable', 'TAIL:V', '-COMP:T', '-COMP:uWH', '-SPEC:V', '-SPEC:C/fin', '-SPEC:iWH', '-SPEC:*', 'P', '!COMP:*', '-COMP:N', 'LF:to', '-SPEC:P'}
a_D             {'LANG:EN', 'PF:D', '-SPEC:Neg/fin', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', 'LF:D', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', '-COMP:P', 'adjoinable', '-COMP:uR', 'D', '-SPEC:V', 'COMP:N', '!PROBE:N', '!COMP:*', '-COMP:D', 'OP', '-SPEC:P'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'LANG:EN', 'LF:admire', '-SPEC:Neg', '-SPEC:FORCE', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', '-COMP:T/fin', 'PHI:NUM:_', '-COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', '-COMP:Neg', '!COMP:*', 'COMP:P', '-COMP:N', 'ASP', 'PF:admire', 'CLASS:TR'}
admire*         ['LANG:EN']
T/fin*          {'LANG:EN', '-VAL', "PF:T/fin'", 'CAT:T/fin', 'NO_DET', 'LF:T', '!SPEC:*', 'NO_NUMBER'}
v*              {'PF:v', 'LANG:EN', 'CAT:v', '-VAL', 'NO_DET', 'LF:v', 'NO_NUMBER'}
admire**        ['LANG:EN']
T/fin**         {'LANG:EN', 'PHI:PER:3', '-VAL', 'NO_PERSON', 'CAT:T/fin', 'NO_DET', 'LF:T', '!SPEC:*', "PF:T/fin''", 'NO_NUMBER'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'LANG:IT', 'LF:admire', '-SPEC:FORCE', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'ASP', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', 'PF:adora', '-COMP:N', 'COMP:P'}
antaa           ['LANG:FI']
anta-           {'-SPEC:FORCE', 'CLASS:DITR', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:P', 'ASP', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'LANG:FI', 'PF:antaa', 'SPEC:D', '+SEM:directional', '!COMP:*', '-COMP:FIN', 'LF:give', 'ASP:BOUNDED', '-COMP:N'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'LANG:EN', 'SEM:internal', '-SPEC:FORCE', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', 'PF:ask', 'SPEC:D', 'COMP:P', '-COMP:N', 'ASP', 'LF:ask'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'PF:avain', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SEM:directional', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', '-COMP:VA/inf', 'LF:key', 'LANG:FI', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'LF:car', 'COMP:D/rel', 'PF:auto', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SEM:directional', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', '-COMP:VA/inf', 'LANG:FI', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
bank            {'LANG:EN', 'COMP:D/rel', 'COMP:R', 'LF:bank_inst', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', 'FREQ:1', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', '-COMP:VA/inf', '-SPEC:C/fin', 'PF:bank1', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
bank            {'LANG:EN', 'COMP:D/rel', 'PF:bank2', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', 'FREQ:2', '-SPEC:N', '-SPEC:V', '-COMP:VA/inf', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'COMP:P', 'SPEC:A', 'LF:bank_river', '-COMP:N', '-COMP:WH', '-SPEC:P'}
barn            {'LANG:EN', 'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', 'LF:barn', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', 'PF:barn', '-SPEC:V', '-COMP:VA/inf', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
city            {'LANG:EN', 'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', 'PF:city', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', 'LF:city', '-SPEC:V', '-COMP:VA/inf', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
che             ['LANG:IT']
che-            {'LANG:IT', 'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PHI_N', 'LF:who', '-SPEC:V', '-COMP:VA/inf', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:N', 'PF:che', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D'}
chiamato        ['LANG:IT']
chiamata-       {'LANG:IT', 'LF:called', 'PF:chiamato', '-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', 'COMP:P', '-COMP:N', 'ASP'}
claims          ['LANG:EN']
claim-          {'LANG:EN', 'PF:claim', 'COMP:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', 'LF:claim', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', 'SPEC:D', '-COMP:D', '-COMP:N', 'ASP'}
danno           {'LANG:IT', 'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', 'LF:damage', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', 'PF:danno', '-SPEC:N', '-SPEC:V', '-COMP:VA/inf', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'LANG:IT', 'SEM:internal', 'COMP:ARE/inf', '-SPEC:FORCE', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'LF:detest', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', 'PF:detest', 'COMP:P', '-COMP:N', 'ASP'}
devono          ['LANG:EN']
deva-           {'LANG:IT', 'COMP:ARE/inf', 'SEM:internal', '-SPEC:FORCE', '-ASP', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P', 'LF:must', 'V', 'SPEC:ADV', 'PHI:GEN:_', 'SPEC:D', 'COMP:P', '-COMP:N', 'PF:deva'}
di              {'-COMP:ADV', 'LF:of', 'SPEC:*', '-COMP:A', '-SPEC:P', '-SPEC:FORCE', '-SPEC:iR', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:INF', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:v', 'ARG', '-SPEC:ADV', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', 'PHI:NUM:_', '-SPEC:N', '-VAL', '-COMP:T', '-COMP:uWH', '-SPEC:V', '-SPEC:C/fin', 'LANG:FI', '-SPEC:iWH', '-adjoinable', 'P', '!COMP:*', '-COMP:N', 'PF:di'}
does            {'LANG:EN', 'SPEC:*', 'PHI:PER:3', '-SPEC:Neg', '-COMP:INF', '!PROBE:V', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', '-COMP:T/fin', 'PF:does', 'PHI:GEN:_', 'SPEC:C/fin', '-SPEC:V', 'T/fin', 'COMP:Neg', 'COMP:V', '!SPEC:*', 'T', 'SPEC:FORCE', 'PHI:GEN:M', '-SPEC:v', 'ARG', 'LF:does', 'FIN', '-SPEC:T/fin', '-SPEC:C', 'VAL', '-SPEC:N', 'PHI:NUM:_', 'COMP:v', '-SPEC:TO/inf', 'COMP:T/prt', 'PHI:NUM:SG', 'SPEC:D', '!COMP:*', 'PHI:GEN:F'}
does_C          ['LANG:EN']
does-           {'LANG:EN', 'SPEC:*', 'PHI:PER:3', '-SPEC:Neg', '-COMP:INF', '!PROBE:V', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', '-COMP:T/fin', 'PF:does', 'PHI:GEN:_', 'SPEC:C/fin', '-SPEC:V', 'T/fin', 'COMP:Neg', 'COMP:V', '!SPEC:*', 'T', 'SPEC:FORCE', 'PHI:GEN:M', '-SPEC:v', 'ARG', 'LF:does', 'FIN', '-SPEC:T/fin', '-SPEC:C', 'VAL', '-SPEC:N', 'PHI:NUM:_', 'COMP:v', '-SPEC:TO/inf', 'COMP:T/prt', 'PHI:NUM:SG', 'SPEC:D', '!COMP:*', 'PHI:GEN:F'}
dorme           ['LANG:IT']
dorme-          {'LANG:EN', '-COMP:MA/inf', 'PF:dorme', '-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'CLASS:INTR', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:P', 'LF:sleep', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', 'SPEC:D', '-COMP:D', '-COMP:N', 'ASP', '!SPEC:D'}
disappeared     ['LANG:EN']
disappear-      {'LANG:EN', '-COMP:MA/inf', 'LF:disappear', '-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'CLASS:INTR', '-SPEC:T/fin', 'PF:disappear', 'COMP:P', 'PHI:NUM:_', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', 'SPEC:D', '-COMP:D', '-COMP:N', 'ASP'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'LANG:EN', 'SPEC:D', 'LF:easy', 'PF:easy', '0', '2SPEC'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'SPEC:*', '!COMP:T', 'LF:neg', 'SEM:internal', 'Neg/fin', '%SPEC:INF', 'POL:NEG', '-SPEC:T', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'FIN', 'NEG', '-SPEC:T/fin', 'VAL', 'PHI:NUM:_', 'LANG:FI', 'COMP:T/prt', '!COMP:*', '!SPEC:*', 'PF:ei'}
e-              {'SPEC:*', '!COMP:T', 'LF:neg', 'SEM:internal', 'Neg/fin', '%SPEC:INF', 'POL:NEG', '-SPEC:T', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'FIN', 'NEG', '-SPEC:T/fin', 'VAL', 'PHI:NUM:_', 'LANG:FI', 'COMP:T/prt', '!COMP:*', '!SPEC:*', 'PF:ei'}
elaa            ['LANG:FI']
ela-            {'-COMP:MA/inf', '-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'LF:live', 'ARG', 'CLASS:INTR', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'LANG:FI', 'PF:elaa', 'SPEC:D', '-COMP:D', '-COMP:N', 'ASP'}
etsii           ['LANG:FI']
etsi-           {'PF:etsi', '-SPEC:FORCE', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', '!COMP:D', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:P', '-COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'LANG:FI', '!COMP:*', 'CLASS:TR', '-COMP:N', 'ASP', 'LF:search'}
etta            {'PF:etta', 'FORCE', '-VAL', 'COMP:T/fin', 'LANG:FI', '-SPEC:D', '-SPEC:*', '!PROBE:FIN', '!COMP:*', 'COMP:C/fin', '-ARG', 'LF:that', 'FIN'}
fell            ['LANG:EN']
fell-           {'LANG:EN', '-COMP:MA/inf', '-SPEC:FORCE', 'LF:fell', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'CLASS:INTR', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', 'PF:fell', 'SPEC:D', '-COMP:D', '-COMP:N', 'ASP'}
flow'           {'LANG:EN', 'LF:flow', '-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PF:flow', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', 'SPEC:D', 'COMP:P', '-COMP:N', 'ASP'}
from            {'-COMP:ADV', 'LANG:EN', '-COMP:A', 'PF:from', 'TAIL:V,+SEM:directional', '-SPEC:FORCE', '-SPEC:Neg/fin', 'LF:from', '-SPEC:iR', 'COMP:D', '-SPEC:INF', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:v', 'ARG', '-SPEC:ADV', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', 'PHI:NUM:_', '-SPEC:N', '-VAL', 'PHI:GEN:_', 'adjoinable', '-COMP:T', '-COMP:uWH', '-SPEC:V', '-SPEC:C/fin', '-SPEC:iWH', '-SPEC:*', 'P', '-float', '!COMP:*', '-COMP:N', '-SPEC:P'}
gave            ['LANG:EN']
give-           {'LANG:EN', '-SPEC:FORCE', 'CLASS:DITR', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PF:give', 'PHI:GEN:_', 'SPEC:D', '+SEM:directional', '!COMP:*', '-COMP:FIN', 'LF:give', 'ASP', '-COMP:N'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'LANG:IT', 'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', 'LF:Giuseppe', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', 'PF:Giuseppe', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SEM:directional', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', '-COMP:VA/inf', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'COMP:A/inf', 'SEM:internal', '-SPEC:FORCE', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'ASP', '-COMP:P', 'LF:want', '-VAL', 'SPEC:P', 'V', 'SPEC:ADV', 'PF:haluaa', 'LANG:FI', '-SPEC:*', '!COMP:*', 'COMP:P', '-COMP:N', 'ASP:BOUNDED', 'CLASS:TR'}
hairitsee       ['LANG:FI']
hairitse-       {'LF:disturb', '-SPEC:FORCE', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', '!COMP:D', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:hairitsee', 'COMP:P', '-COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'LANG:FI', 'SPEC:D', '!COMP:*', '-COMP:FIN', '-COMP:N', 'ASP', 'CLASS:TR'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'LANG:IT', 'SPEC:*', 'PF:ha', 'LF:have', 'SEM:internal', '-SPEC:FORCE', '-ASP', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:T', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', 'SPEC:D', '-COMP:N', 'COMP:P'}
horse           {'LANG:EN', 'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', 'LF:horse', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', '-COMP:VA/inf', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', 'PF:horse', '-COMP:WH', '-SPEC:P'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'-COMP:MA/inf', 'LF:disappear', '-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'CLASS:INTR', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PF:havia', 'LANG:FI', 'SPEC:D', '-COMP:D', '-COMP:N', 'ASP'}
Helsingissa     ['LANG:FI']
Helsinki        ['LANG:FI']
Helsinki-       {'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', 'PF:Helsinki', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', 'LF:Helsinki', '-SPEC:V', '-COMP:VA/inf', 'LANG:FI', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'LF:admire', '-SPEC:FORCE', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PF:ihaile-', 'PHI:PER:_', '!COMP:D', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:P', '-COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'LANG:FI', '!COMP:*', '-COMP:FIN', '-COMP:N', 'ASP', 'CLASS:TR'}
il              {'LANG:IT', 'PF:il', '-SPEC:Neg/fin', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', '-COMP:P', 'adjoinable', '-COMP:uR', 'D', '-SPEC:V', 'COMP:N', '!PROBE:N', '!COMP:*', '-COMP:D', 'OP', 'LF:the', '-SPEC:P'}
i               {'LANG:IT', 'PF:il', '-SPEC:Neg/fin', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', '-COMP:P', 'adjoinable', '-COMP:uR', 'D', '-SPEC:V', 'COMP:N', '!PROBE:N', '!COMP:*', '-COMP:D', 'OP', 'LF:the', '-SPEC:P'}
in              {'-COMP:ADV', 'PF:in', 'LANG:IT', '-COMP:A', '-SPEC:FORCE', '-SPEC:Neg/fin', '-SPEC:iR', 'COMP:D', '-SPEC:INF', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:v', 'ARG', '-SPEC:ADV', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', 'LF:in', '-SPEC:N', 'PHI:NUM:_', '-VAL', 'PHI:GEN:_', 'adjoinable', '-COMP:T', '-COMP:uWH', '-SPEC:V', '-SPEC:C/fin', '-SPEC:iWH', 'P', '!COMP:*', '-COMP:N', '-SPEC:P'}
infermieri      {'LANG:IT', 'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:P', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', '-COMP:VA/inf', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'COMP:P', 'SPEC:A', 'LF:nurses', '-COMP:N', '-COMP:WH', 'PF:infermieri'}
is              ['LANG:EN']
be-             {'LANG:EN', '-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PF:be', '-COMP:TO/inf', '-ARG', 'LF:be', '-SPEC:T/fin', 'COPULA', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'SPEC:D', '!COMP:*', 'COMP:P', '-COMP:N', 'ASP'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'-COMP:MA/inf', 'LF:sit', '-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', 'PF:istuu', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'CLASS:INTR', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'LANG:FI', 'SPEC:D', '-COMP:D', '-COMP:N', 'ASP'}
John            ['LANG:EN']
John-           {'LANG:EN', 'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', '-SPEC:V', '-COMP:VA/inf', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-COMP:C/fin', '-SPEC:INF', '-SEM:directional', '-SPEC:T/fin', 'LF:John', '-SPEC:N', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', '-adjoinable', 'PF:John'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PHI_N', 'LF:who', '-SPEC:V', '-COMP:VA/inf', 'LANG:FI', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', 'PF:joka', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:N', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'COMP:D/rel', 'LF:Jukka', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SEM:directional', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', 'PF:Jukka', '-SPEC:V', '-COMP:VA/inf', 'LANG:FI', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:juokse-', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'LANG:FI', 'LF:run', 'COMP:P', '-COMP:N', 'ASP'}
kaksi           {'PHI:NUM:_', 'NUM', 'SPEC:*', 'LF:two', '-VAL', 'PF:kaksi', 'LANG:FI', 'COMP:N', 'PHI:NUM:SG', 'TAIL:ARG,VAL,FIN', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'COMP:n'}
kaksi           {'LANG:EN', 'NUM', 'SPEC:*', 'LF:two', 'PF:kaksi', 'TAIL:*POL:NEG', 'COMP:N', 'COMP:n', 'TAIL:ARG,ASP:BOUNDED'}
kaksi_1         {'PHI:NUM:_', 'NUM', 'SPEC:*', 'LF:two', '-VAL', 'PF:kaksi', 'LANG:FI', 'COMP:N', 'PHI:NUM:SG', 'TAIL:ARG,VAL,FIN', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'COMP:n'}
kaksi_2         {'LANG:EN', 'NUM', 'SPEC:*', 'LF:two', 'PF:kaksi', 'TAIL:*POL:NEG', 'COMP:N', 'COMP:n', 'TAIL:ARG,ASP:BOUNDED'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'LANG:FI', 'NUM', 'COMP:N', 'LF:two', 'SPEC:*', 'PF:kaksi', 'COMP:n'}
kaupunkia       ['LANG:EN']
kaupunki        {'COMP:D/rel', 'COMP:R', 'PF:kaupunki', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-COMP:P', 'LF:city', '-SPEC:V', '-COMP:VA/inf', 'LANG:FI', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', '-COMP:N', '-COMP:WH', '-SPEC:P'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'-SPEC:FORCE', 'LF:order', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', '!COMP:A/inf', 'SEM:external', 'PF:kaske', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'ASP', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'LANG:FI', '-COMP:N', 'COMP:P'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', 'PF:kello', 'LF:watch', '-SPEC:N', '-SPEC:V', '-COMP:VA/inf', 'LANG:FI', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
kello0-         {'PF:kello', 'LF:watch', 'LANG:FI', 'SPEC:D', '0', '2SPEC'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'LANG:EN', 'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', 'PF:key', '-SPEC:N', '-SPEC:V', '-COMP:VA/inf', 'LF:key', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
kirja           ['LANG:FI']
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:P', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', 'PF:kirja', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SEM:directional', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', '-COMP:VA/inf', 'LANG:FI', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', 'LF:book'}
knows           ['LANG:EN']
know-           {'LANG:EN', '-SPEC:FORCE', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:P', 'LF:know', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', 'PF:know', '!COMP:*', 'COMP:P', '-COMP:N', 'ASP', 'CLASS:TR'}
kohti           {'-COMP:ADV', 'SPEC:*', '-COMP:A', '-SPEC:FORCE', 'LF:towards', '-SPEC:iR', '-SPEC:Neg/fin', 'COMP:D', 'PF:kohti', '-SPEC:INF', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:v', 'ARG', '-SPEC:ADV', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', 'PHI:NUM:_', '-SPEC:N', '-VAL', 'adjoinable', 'TAIL:V', '-COMP:T', '-COMP:uWH', '-SPEC:V', '-SPEC:C/fin', 'LANG:FI', '-SPEC:iWH', 'P', '!COMP:*', '-COMP:N', '-SPEC:P'}
koko            {'LF:all', '-SPEC:Neg/fin', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', '-COMP:P', 'adjoinable', '-COMP:uR', 'D', '-SPEC:V', 'LANG:FI', 'TAIL:T', 'COMP:N', '!PROBE:N', '!COMP:*', '-COMP:D', 'PF:koko', 'OP', '-SPEC:P'}
kuka            ['LANG:FI']
kuka-           {'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', 'LF:who', '-SPEC:V', '-COMP:VA/inf', 'LANG:FI', 'PHI', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'PF:kuka', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'LF:snore', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', '-COMP:T/fin', 'PHI:NUM:_', 'ASP', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'LANG:FI', 'PF:kuorsaa', '-COMP:D', '-COMP:N', 'COMP:P', '-COMP:WH'}
lahella         {'-COMP:ADV', 'SPEC:*', '-SPEC:iR', '-SPEC:Neg/fin', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:ADV', '-COMP:T/fin', 'PF:lahella', '-COMP:T', '-SPEC:V', 'LANG:FI', 'COMP:V', 'P', '-COMP:N', '!SPEC:*', '-SPEC:P', '-COMP:A', '-COMP:FORCE', '-SPEC:FORCE', 'COMP:D', '-COMP:C/fin', '-SPEC:INF', '-SPEC:v', 'ARG', 'INF', '-SPEC:T/fin', 'PHI:NUM:_', '-SPEC:C', 'VAL', '-SPEC:N', 'LF:near', 'adjoinable', 'COMP:v', '-COMP:uWH', '-SPEC:C/fin', '-SPEC:iWH', '!COMP:*', '!SPEC:D'}
lahella         {'-COMP:ADV', 'SPEC:*', '-COMP:A', '-SPEC:FORCE', '-SPEC:iR', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:INF', '!COMP:D', 'PHI:PER:_', '-SPEC:v', 'ARG', '-SPEC:ADV', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', 'PHI:NUM:_', '-SPEC:N', 'PHI:DET:_', 'LF:near', '-VAL', 'PF:lahella', 'adjoinable', '-COMP:T', '-COMP:uWH', '-SPEC:V', '-SPEC:C/fin', 'LANG:FI', '-SPEC:iWH', 'P', '!COMP:*', '-COMP:N', '-SPEC:P'}
lahella_1       {'-COMP:ADV', 'SPEC:*', '-COMP:A', '-SPEC:FORCE', '-SPEC:iR', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:INF', '!COMP:D', 'PHI:PER:_', '-SPEC:v', 'ARG', '-SPEC:ADV', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', 'PHI:NUM:_', '-SPEC:N', 'PHI:DET:_', 'LF:near', '-VAL', 'PF:lahella', 'adjoinable', '-COMP:T', '-COMP:uWH', '-SPEC:V', '-SPEC:C/fin', 'LANG:FI', '-SPEC:iWH', 'P', '!COMP:*', '-COMP:N', '-SPEC:P'}
lahella_2       {'-COMP:ADV', 'SPEC:*', '-SPEC:iR', '-SPEC:Neg/fin', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:ADV', '-COMP:T/fin', 'PF:lahella', '-COMP:T', '-SPEC:V', 'LANG:FI', 'COMP:V', 'P', '-COMP:N', '!SPEC:*', '-SPEC:P', '-COMP:A', '-COMP:FORCE', '-SPEC:FORCE', 'COMP:D', '-COMP:C/fin', '-SPEC:INF', '-SPEC:v', 'ARG', 'INF', '-SPEC:T/fin', 'PHI:NUM:_', '-SPEC:C', 'VAL', '-SPEC:N', 'LF:near', 'adjoinable', 'COMP:v', '-COMP:uWH', '-SPEC:C/fin', '-SPEC:iWH', '!COMP:*', '!SPEC:D'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'LF:leave', '-COMP:MA/inf', '-SPEC:FORCE', 'COMP:PP', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'CLASS:INTR', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PF:lahtea', 'LANG:FI', 'SPEC:D', '-COMP:D', '-COMP:N', 'ASP'}
lavano          ['LANG:IT']
lava-           {'LANG:IT', '-SPEC:FORCE', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PF:lava', 'PHI:GEN:_', 'LF:wash', '!COMP:*', 'COMP:P', '-COMP:N', 'ASP'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'LANG:IT', 'PF:le', '-SPEC:Neg/fin', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', 'LF:D', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', '-COMP:P', 'adjoinable', '-COMP:uR', 'D', '-SPEC:V', 'COMP:N', '!PROBE:N', '!COMP:*', '-COMP:D', 'OP', '-SPEC:P'}
leaves          ['LANG:EN']
leave           {'LF:leave', 'LANG:EN', '-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', '-COMP:T/fin', 'PHI:NUM:_', 'ASP', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', 'PF:leave', '-COMP:N', 'COMP:P', '!SPEC:D'}
leave-          {'LF:leave', 'LANG:EN', '-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', '-COMP:T/fin', 'PHI:NUM:_', 'ASP', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', 'PF:leave', '-COMP:N', 'COMP:P', '!SPEC:D'}
like-           {'LANG:EN', '-SPEC:FORCE', '-COMP:v', 'LF:like', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', '!COMP:D', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'ASP', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PF:like', 'PHI:GEN:_', '-COMP:N', 'COMP:P'}
likes           ['LANG:EN']
like            {'LANG:EN', '-SPEC:FORCE', '-COMP:v', 'LF:like', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', '!COMP:D', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'ASP', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PF:like', 'PHI:GEN:_', '-COMP:N', 'COMP:P'}
little          ['LANG:EN']
little-         {'LANG:EN', '2SPEC', 'SPEC:D', 'PF:little-', '0', 'LF:little'}
lle             {'-COMP:ADV', '-COMP:A', 'TAIL:V,+SEM:directional', '-SPEC:FORCE', 'LF:for', '-SPEC:Neg/fin', '-SPEC:iR', 'COMP:D', '-SPEC:INF', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:v', 'ARG', '-SPEC:ADV', 'PF:P(lle)', '-COMP:T/fin', '-SPEC:T/fin', '-SPEC:C', '-SPEC:N', 'PHI:NUM:_', '-VAL', 'adjoinable', '-COMP:T', '-COMP:uWH', '-SPEC:V', '-SPEC:C/fin', 'LANG:FI', '-SPEC:iWH', '-SPEC:*', 'P', '+SEM:directional', '!COMP:*', '-COMP:N', '-SPEC:P'}
lla             {'-COMP:ADV', 'SPEC:*', '-COMP:A', '-SPEC:FORCE', '-SPEC:iR', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:INF', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:v', 'ARG', '-SPEC:ADV', '-SPEC:T/fin', '-COMP:T/fin', 'LF:by', '-SPEC:C', '-SPEC:N', 'PHI:NUM:_', '-VAL', 'adjoinable', '-COMP:T', 'PF:P(lla)', '-COMP:uWH', '-SPEC:V', '-SPEC:C/fin', 'TAIL:T', 'LANG:FI', '-SPEC:iWH', 'P', '!COMP:*', '-COMP:N', 'TAIL:*V', '-SPEC:P'}
Luisa           ['LANG:IT']
Luisa-          {'LANG:IT', 'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'LF:Luisa', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SEM:directional', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', '-COMP:VA/inf', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'PF:Luisa', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'-SPEC:FORCE', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'ASP', '-COMP:P', '-VAL', 'LF:read', 'SPEC:P', 'V', 'SPEC:ADV', 'LANG:FI', '!COMP:*', 'COMP:P', '-COMP:N', 'PF:luke', 'CLASS:TR'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'-SPEC:FORCE', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', '!COMP:D', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'ASP', '-COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PF:loyta-', 'LF:find', 'LANG:FI', '!COMP:*', 'COMP:P', '-COMP:N', 'ASP:BOUNDED', 'CLASS:TR'}
Mary            ['LANG:EN']
Mary-           {'LANG:EN', 'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', 'PF:Mary', '-SPEC:uWH', '-SPEC:ADV', '-SPEC:V', '-COMP:VA/inf', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-COMP:C/fin', 'LF:Mary', '-SPEC:INF', '-SEM:directional', '-SPEC:T/fin', '-SPEC:N', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', '-adjoinable'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', 'LF:Merja', '-COMP:V', '-SPEC:uWH', 'PF:Merja', '-SPEC:ADV', '-SPEC:V', '-COMP:VA/inf', 'LANG:FI', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-COMP:C/fin', '-SPEC:INF', '-SEM:directional', '-SPEC:T/fin', '-SPEC:N', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', '-adjoinable'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'LF:by', '-SPEC:N', 'PF:malla', 'SPEC:*', 'adjoinable', 'COMP:v', '-SPEC:FORCE', 'TAIL:T', 'LANG:FI', '-SPEC:Neg/fin', 'ADV', 'MA/inf', '-SPEC:T/fin'}
meren           ['LANG:FI']
mere-           {'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', 'PF:meri', '-SPEC:N', '-SPEC:V', '-COMP:VA/inf', 'LANG:FI', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', 'LF:ocean', '-COMP:WH', '-SPEC:P'}
mies            {'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', 'PF:mies', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', '-COMP:VA/inf', 'LANG:FI', 'SPEC:A', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'LF:man', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
mistake         {'LANG:EN', 'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'PF:mistake', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', '-COMP:VA/inf', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:WH', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', 'LF:mistake', '-SPEC:P'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', 'LF:what', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', 'PF:mika-', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', '-COMP:VA/inf', 'LANG:FI', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'-SPEC:FORCE', 'LF:move', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'LANGN:EN', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:P', '-COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', '+SEM:directional', '!COMP:*', 'PF:move', '-COMP:N', 'ASP', 'CLASS:TR'}
mukavasti       ['LANG:EN']
mukava-         {'LANG:FI', 'SPEC:D', 'LF:comfortably', 'PF:mukavasti', '0', '2SPEC'}
must            {'LANG:EN', 'SPEC:*', 'T', '-SPEC:Neg', '-COMP:INF', 'SPEC:FORCE', '!PROBE:V', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:v', 'ARG', 'MODAL', 'FIN', '-COMP:T/fin', '-SPEC:T/fin', '-SPEC:C', 'VAL', '-SPEC:N', 'PHI:NUM:_', 'PHI:GEN:_', 'LF:must', 'COMP:v', 'PF:must', 'SPEC:C/fin', '-SPEC:V', '-SPEC:TO/inf', 'COMP:T/prt', 'T/fin', 'COMP:Neg', 'COMP:V', 'SPEC:D', '!COMP:*', '!SPEC:*'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'-SPEC:FORCE', 'PF:myy', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'LF:sell', '-SPEC:T/fin', '-COMP:T/fin', 'PHI:NUM:_', 'ASP', '-COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'LANG:FI', '!COMP:*', 'COMP:P', '-COMP:N', 'ASP:BOUNDED', 'CLASS:TR'}
naki            ['LANG:FI']
nakee           ['LANG:FI']
nake-           {'-SPEC:FORCE', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', 'LF:see', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:P', 'ASP', '-COMP:P', 'PF:nake', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', '-COMP:MA/tta', '-COMP:ESSA/inf', 'LANG:FI', '!COMP:*', 'CLASS:TR', '-COMP:N', 'ASP:BOUNDED', '-COMP:MA/ssa'}
nayttaa         ['LANG:FI']
naytta-         {'LF:seem', 'SEM:internal', '-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', '-ARG', '-SPEC:T/fin', 'PF:naytta', 'VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'LANG:FI', 'COMP:P', '-COMP:N', 'ASP', '!SPEC:D', '!COMP:VA/inf'}
ndo             {'-COMP:T/fin', 'VAL', 'LANG:EN', 'PRG', '?ARG', '-COMP:FORCE', 'COMP:v', '-SPEC:V', 'LF:ing', 'COMP:V', 'PF:PRG', '-COMP:C/fin', '!COMP:*', 'INF', '-SPEC:T/fin'}
ne              {'PHI:PER:3', 'PHI:NUM:PL', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', '-COMP:P', 'LF:those', 'adjoinable', '-COMP:uR', 'D', '-SPEC:V', 'LANG:FI', 'COMP:N', '!PROBE:N', '!COMP:*', 'PF:ne', 'OP', '-SPEC:P'}
niiden          ['LANG:EN']
nen             {'COMP:0', 'SPEC:*', 'TAIL:D', 'PF:a', 'A', 'LF:ing', 'LANG:FI', '-SPEC:D', '-SPEC:A'}
not             {'PHI:NUM:_', 'LF:not', 'LANG:EN', 'SPEC:*', '-VAL', 'PHI:GEN:_', '-COMP:C', 'Neg', '-COMP:D', 'PF:not', 'POL:NEG', 'PHI:PER:_', '!COMP:*', '-COMP:FIN', 'PHI:DET:_', 'ARG', '-SPEC:T/fin'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-COMP:MA/inf', '-SPEC:FORCE', 'PF:nukku', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'CLASS:INTR', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'PHI:NUM:_', '-COMP:Neg/fin', 'LF:sleep', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', '-COMP:T', 'LANG:FI', 'SPEC:D', '-COMP:D', '-COMP:N', 'ASP'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', 'PF:omaisuuden', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', 'LF:possessions', '-SPEC:V', '-COMP:VA/inf', 'LANG:FI', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
operatoria      ['LANG:IT']
operatoria-     {'LANG:IT', 'LF:operation', 'SPEC:D', '2SPEC', '0', 'PF:operatoria'}
ostaa           ['LANG:FI']
osta-           {'-SPEC:FORCE', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'LF:buy', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'ASP', '-COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PF:osta', 'LANG:FI', '!COMP:*', 'COMP:P', '-COMP:N', 'ASP:BOUNDED', 'CLASS:TR'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', 'SEM:nonreferential', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', 'PF:paiva', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'LF:day', 'LANG:FI', '-COMP:VA/inf', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
past            {'-COMP:ADV', 'LANG:EN', '-COMP:A', '-SPEC:FORCE', '-SPEC:Neg/fin', '-SPEC:iR', 'COMP:D', '-SPEC:INF', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:v', 'PF:past', 'LF:past', '-SPEC:ADV', '-COMP:T/fin', 'ARG', '-SPEC:T/fin', '-SPEC:C', '-SPEC:N', 'PHI:NUM:_', '-VAL', 'PHI:GEN:_', 'adjoinable', '-COMP:T', '-COMP:uWH', '-SPEC:V', '-SPEC:C/fin', '-SPEC:iWH', '-SPEC:*', 'P', '-float', '!COMP:*', '-COMP:N', '-SPEC:P'}
Pariisia        ['LANG:FI']
Pariisi-        {'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', 'PF:Pariisi', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', 'LF:Paris', '-SPEC:V', '-COMP:VA/inf', 'LANG:FI', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SEM:directional', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', 'PF:Pekka', 'COMP:uR', '-SPEC:V', '-COMP:VA/inf', 'LANG:FI', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'LF:Pekka', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'-SPEC:FORCE', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'LF:fear', 'LANG:FI', '!COMP:*', 'COMP:P', '-COMP:N', 'ASP', 'PF:pelkaa', 'CLASS:TR'}
persuades       ['LANG:EN']
persuade-       {'LANG:EN', 'PF:persuade', 'LF:persuade', '-SPEC:FORCE', 'COMP:TO/inf', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'SEM:external', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', '!COMP:*', 'COMP:P', '-COMP:N', 'ASP'}
peruuntui       ['LANG:FI']
peruuntu-       {'-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:peruuntui', 'ASP', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'LANG:FI', 'SPEC:D', '-COMP:N', 'COMP:P', 'LF:cancelled'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'PF:pese_asp', '-SPEC:FORCE', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'ASP', '-COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'LF:wash', 'LANG:FI', '!COMP:*', 'COMP:P', '-COMP:N', 'ASP:BOUNDED', 'CLASS:TR'}
pese-           {'!COMP:*', '-SPEC:FORCE', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'LF:wash', 'LANG:FI', 'PF:pese', 'COMP:P', '-COMP:N', 'ASP', 'CLASS:TR'}
petardi         {'LANG:IT', 'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'PF:petardi', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', 'LF:firecrackers', '-SPEC:V', '-COMP:VA/inf', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
pieni           ['LANG:FI']
pieni-          {'LANG:FI', 'SPEC:D', 'LF:small', 'PF:pieni-', '0', '2SPEC'}
poikien         ['LANG:FI']
poika-          {'COMP:D/rel', 'PF:poika', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', 'LF:boy', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', '-COMP:VA/inf', 'LANG:FI', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
puhelinta       ['LANG:FI']
puhelin-        {'LANG:FI', 'LF:phone', 'SPEC:D', 'PF:puhelin', '0', '2SPEC'}
punainen        ['LANG:FI']
puna-           {'LANG:FI', 'SPEC:D', 'LF:red', 'PF:puna-', '0', '2SPEC'}
presupposto     {'LANG:IT', 'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', 'PF:presupposto', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', 'LF:presupposition', '-SPEC:N', '-SPEC:V', '-COMP:VA/inf', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
primary         {'LANG:IT', 'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', 'PF:primary', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', 'LF:nurse', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', '-COMP:VA/inf', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
promises        ['LANG:EN']
promise-        {'LANG:EN', 'SEM:internal', '-SPEC:FORCE', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'LF:promise', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', 'SPEC:D', 'COMP:P', '-COMP:N', 'ASP', 'PF:promise'}
problem         {'LANG:EN', 'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'PF:problem', '-COMP:VA/inf', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'LF:problem', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
pyytaa          ['LANG:FI']
pyyta-          {'-SPEC:FORCE', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', 'PF:pyyda', '-COMP:V', 'SEM:external', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'LANG:FI', '!COMP:*', 'COMP:P', '-COMP:N', 'ASP', 'LF:ask', 'CLASS:TR'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'LF:race', 'LANG:EN', 'PF:race', '-COMP:MA/inf', '-SPEC:FORCE', 'LAMG:EN', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'CLASS:INTR', '-COMP:T/fin', '-SPEC:T/fin', 'PHI:NUM:_', 'ASP', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', 'SPEC:D', '-COMP:D', '-COMP:N', 'COMP:P'}
raukesi         ['LANG:FI']
raukea-         {'-SPEC:FORCE', '-COMP:v', 'PF:raukea', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'LF:terminate', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'LANG:FI', 'COMP:P', '-COMP:N', 'ASP'}
red             ['LANG:EN']
red-            {'LANG:EN', 'PF:red', 'SPEC:D', 'LF:red', '0', '2SPEC'}
saavuttaa       ['LANG:FI']
saavutta-       {'LF:reach', '-SPEC:FORCE', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', '!COMP:D', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'ASP', '-COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'LANG:FI', '!COMP:*', 'COMP:P', '-COMP:N', 'ASP:BOUNDED', 'PF:saavutta-', 'CLASS:TR'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'-SPEC:FORCE', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'COMP:FORCE', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'PF:sano-', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:VA/inf', '-COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'LANG:FI', 'SPEC:D', '!COMP:*', 'COMP:P', 'LF:say', 'ASP', '-COMP:N', 'CLASS:TR'}
said            ['LANG:EN']
say'            {'LANG:EN', '-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:say', 'ASP', '!COMP:FORCE', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', 'SPEC:D', 'LF:say', 'COMP:P', '-COMP:N'}
say-            {'LANG:EN', '-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:say', 'ASP', '!COMP:FORCE', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', 'SPEC:D', 'LF:say', 'COMP:P', '-COMP:N'}
sala            ['LANG:IT']
sala-           {'LF:room', 'LANG:IT', 'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'PF:sala', '-COMP:VA/inf', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
scoppiati       ['LANG:IT']
scoppia-        {'LANG:IT', 'LF:explode', '-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'PF:scoppia', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', 'COMP:P', '-COMP:N', 'ASP'}
sentenza        {'LANG:IT', 'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', 'LF:sentence', '-SPEC:N', '-SPEC:V', '-COMP:VA/inf', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'COMP:P', 'SPEC:A', 'PF:sentenza', '-COMP:N', '-COMP:WH', '-SPEC:P'}
Seine           ['LANG:EN']
Seine-          {'PF:Seine', 'LANG:EN', 'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', 'LF:Seine', '-SPEC:V', '-COMP:VA/inf', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
sembrano        ['LANG:IT']
sembra-         {'LANG:EN', 'LF:seem', '-SPEC:FORCE', '-ASP', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', '-ARG', '-SPEC:T/fin', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'SPEC:D', '!COMP:ARE/inf', '-COMP:D', 'PF:sembra', 'COMP:P', '-COMP:N'}
sleeps          ['LANG:EN']
sleep           {'LANG:EN', '-COMP:MA/inf', '-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'CLASS:INTR', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:P', 'LF:sleep', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', 'PF:sleep', 'SPEC:D', '-COMP:D', '-COMP:N', 'ASP'}
sleep-          {'LANG:EN', '-COMP:MA/inf', '-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'CLASS:INTR', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:P', 'LF:sleep', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', 'PF:sleep', 'SPEC:D', '-COMP:D', '-COMP:N', 'ASP'}
solution        {'LANG:EN', 'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:N', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', 'PF:solution', '-SPEC:V', '-COMP:VA/inf', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', 'LF:solution', '-COMP:WH', '-SPEC:P'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', 'LF:agreement', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '!COMP:A/inf', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'PF:sopimus', 'LANG:FI', '-COMP:VA/inf', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
spinge          ['LANG:IT']
spinge-         {'LANG:IT', '-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', '!COMP:D', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', 'LF:push', 'PF:spinge', 'ASP', '-COMP:N'}
ssa             {'-COMP:ADV', 'COMP:n/MA', 'SPEC:*', '-COMP:A', '-SPEC:FORCE', '-SPEC:iR', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:INF', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:v', 'ARG', '-SPEC:ADV', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', 'LF:in', 'PF:ssa', '-SPEC:N', 'PHI:NUM:_', '-VAL', 'adjoinable', 'TAIL:V', '-COMP:T', '-COMP:uWH', '-SPEC:V', '-SPEC:C/fin', 'LANG:FI', '-SPEC:iWH', 'P', '!COMP:*', '-COMP:N', '-SPEC:P'}
stanno          ['LANG:IT']
sta-            {'LANG:EN', 'SEM:internal', '-SPEC:FORCE', '-ASP', 'LF:stay', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'COMP:PRG', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', 'SPEC:D', 'PF:sta', '-COMP:N', 'COMP:P'}
sti             {'LF:by', 'ADV', '-SPEC:N', 'SPEC:*', 'adjoinable', '-SPEC:FORCE', 'TAIL:T', 'LANG:FI', '-SPEC:Neg/fin', '!COMP:*', '-ARG', 'PF:sti', '-SPEC:T/fin'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', 'LF:socks', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', '-COMP:VA/inf', 'LANG:FI', 'PF:sukka-', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
surprised       ['LANG:EN']
surprise-       {'LANG:EN', '-SPEC:FORCE', 'LF:surprise', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', '-COMP:T/fin', 'PHI:NUM:_', '-COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', 'PF:surprise', '!COMP:*', 'COMP:P', '-COMP:N', 'ASP', 'CLASS:TR'}
talo            {'LF:house', 'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', 'PF:talo', '-SPEC:N', '-SPEC:V', '-COMP:VA/inf', 'LANG:FI', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
tama            ['LANG:EN']
tama-           {'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', 'LF:this', '-COMP:C/fin', 'PF:tama', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', '-COMP:VA/inf', 'LANG:FI', 'PHI', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'SPEC:*', '-SPEC:FORCE', '-ASP', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PF:taytyy', '!COMP:A/inf', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'MODAL', 'FIN', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P', 'LF:must', 'V', 'SPEC:ADV', 'LANG:FI', '-COMP:N', 'COMP:P'}
teki            ['LANG:FI']
teke-           {'-SPEC:FORCE', 'LF:make', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', '!COMP:D', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'ASP', 'PF:teke', '-COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', '-COMP:A/inf', 'LANG:FI', '!COMP:*', 'COMP:P', '-COMP:N', 'ASP:BOUNDED', 'CLASS:TR'}
that            {'LANG:EN', '!COMP:*', 'FORCE', '-VAL', 'COMP:T/fin', '-SPEC:*', '!PROBE:FIN', 'PF:that', 'COMP:C/fin', '-ARG', 'LF:that', 'FIN'}
the             {'LANG:EN', '-SPEC:Neg/fin', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', '-COMP:P', 'adjoinable', '-COMP:uR', 'D', '-SPEC:V', 'COMP:N', 'PHI:DEF:DEF', '!PROBE:N', 'PF:the', '!COMP:*', '-COMP:D', 'OP', 'LF:the', '-SPEC:P'}
to              {'-COMP:ADV', 'LANG:EN', '-SPEC:Neg/fin', '-SPEC:iR', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:ADV', '-COMP:T/fin', 'PHI:GEN:_', 'TAIL:V', '-COMP:T', '-SPEC:V', '-SPEC:*', 'P', '-float', '+SEM:directional', '-COMP:N', '-SPEC:P', '-COMP:A', '-SPEC:FORCE', 'COMP:D', '-SPEC:INF', '-SPEC:v', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', '-SPEC:C', '-SPEC:N', '-VAL', 'adjoinable', '-COMP:uWH', '-SPEC:C/fin', '-SPEC:iWH', 'PF:to', '!COMP:*', 'LF:to'}
to_inf          {'LANG:EN', '?ARG', '-COMP:FORCE', 'PF:TO/inf', '-COMP:C/fin', 'TO/inf', '-SPEC:v', 'INF', 'LF:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', '-VAL', 'adjoinable', 'COMP:v', '-SPEC:V', 'COMP:V', '!COMP:*'}
towards         {'-COMP:ADV', 'LANG:EN', '-COMP:A', '-SPEC:FORCE', 'LF:towards', '-SPEC:Neg/fin', '-SPEC:iR', 'COMP:D', '-SPEC:INF', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:v', 'ARG', '-SPEC:ADV', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', 'PF:towards', '-SPEC:N', 'PHI:NUM:_', '-VAL', 'PHI:GEN:_', 'adjoinable', 'TAIL:V', '-COMP:T', '-COMP:uWH', '-SPEC:V', '-SPEC:C/fin', '-SPEC:iWH', '-SPEC:*', 'P', '-float', '!COMP:*', '-COMP:N', '-SPEC:P'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'-SPEC:FORCE', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'LF:nudge', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'LANG:FI', '!COMP:*', 'COMP:P', '-COMP:N', 'ASP', 'PF:tonaise', 'CLASS:TR'}
tta             {'-COMP:ADV', 'COMP:n/MA', 'SPEC:*', '-COMP:A', '-SPEC:FORCE', '-SPEC:iR', '-SPEC:Neg/fin', 'COMP:D', 'LF:without', 'ADV', '-SPEC:INF', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:v', 'ARG', '-SPEC:ADV', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', 'PHI:NUM:_', '-SPEC:N', '-VAL', 'adjoinable', '-COMP:T', '-COMP:uWH', '-SPEC:V', '-SPEC:C/fin', 'LANG:FI', '-SPEC:iWH', 'P', '!COMP:*', '-COMP:N', 'PF:tta', '-SPEC:P'}
tries           ['LANG:EN']
try-            {'LANG:EN', 'SEM:internal', '-SPEC:FORCE', '-COMP:v', 'PF:try', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', '!COMP:-ARG', '!COMP:TO/inf', 'SPEC:D', 'LF:try', '-COMP:N', 'ASP'}
verifiche       {'LANG:IT', 'COMP:D/rel', 'COMP:R', 'PF:verifiche', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', 'LF:verification', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', '-COMP:VA/inf', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'-COMP:MA/inf', 'LF:flow', '-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PF:virtaa', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'CLASS:INTR', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:P', '!COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'LANG:FI', 'SPEC:D', '-COMP:D', '-COMP:N', 'ASP'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'LANG:EN', 'PF:volu', 'SEM:internal', '-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'LF:want', '-VAL', 'SPEC:P', 'V', 'SPEC:ADV', 'PHI:GEN:_', '-SPEC:*', '!COMP:*', 'COMP:P', '-COMP:N', 'ASP'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'LANG:EN', 'SEM:achievement', '-SPEC:FORCE', 'PF:voitta', '-COMP:v', 'COMP:D', 'SPEC:TO/inf', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'ASP', '-COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', '!COMP:*', 'COMP:P', '-COMP:N', 'ASP:BOUNDED', 'LF:win', 'CLASS:TR'}
wants           ['LANG:EN']
want-           {'LANG:EN', '-SPEC:FORCE', 'COMP:TO/inf', '-COMP:v', 'COMP:D', '-COMP:V', 'PHI:PER:_', 'PF:want', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:P', 'LF:want', '-VAL', 'SPEC:P', 'V', 'SPEC:ADV', 'PHI:GEN:_', '-SPEC:TO/inf', '!COMP:*', 'COMP:P', '-COMP:N', 'ASP', 'CLASS:TR'}
what            ['LANG:EN']
what-           {'LANG:EN', 'COMP:D/rel', '-SPEC:R', 'COMP:C', 'LF:what', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PHI_N', 'PF:what', '-SPEC:V', '-COMP:VA/inf', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:N', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D'}
which           {'LANG:EN', 'PF:which', '-SPEC:Neg/fin', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', '-COMP:P', 'LF:which', 'adjoinable', '-COMP:uR', 'D', '-SPEC:V', 'OP:WH', 'COMP:N', '!PROBE:N', '!COMP:*', '-COMP:D', 'OP', '-SPEC:P'}
who             ['LANG:EN']
who-            {'LANG:EN', 'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PHI_N', 'LF:who', '-SPEC:V', '-COMP:VA/inf', 'PF:who', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:N', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D'}
whether         {'LANG:EN', 'FORCE', 'COMP:T/fin', 'Q', 'COMP:C/fin', '-ARG', 'FIN', 'LF:whether', '-VAL', 'PF:whether', 'OP:WH', '-SPEC:*', '!PROBE:FIN', '!COMP:*', 'OP', 'OP:Q'}
yrittaa         ['LANG:FI']
yritta-         {'LANG:EN', 'PF:yritta', 'SEM:internal', '-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', '!COMP:A/inf', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:P', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', '!COMP:-ARG', 'SPEC:D', 'LF:try', '-COMP:N', 'ASP'}
mina            ['LANG:EN']
mina-           {'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PHI_N', '-SPEC:V', '-COMP:VA/inf', 'LANG:FI', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', 'LF:I', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:N', 'PF:mina', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D'}
sina            ['LANG:EN']
sina-           {'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PF:sina', 'PHI_N', '-SPEC:V', '-COMP:VA/inf', 'LANG:FI', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', 'LF:you', '-SPEC:FORCE', 'N', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:N', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D'}
han             ['LANG:EN']
han-            {'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PHI_N', '-SPEC:V', '-COMP:VA/inf', 'LANG:FI', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'PF:han', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-COMP:C/fin', '-SPEC:INF', 'LF:s/he', '-SPEC:T/fin', '-SPEC:N', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PHI_N', '-SPEC:V', '-COMP:VA/inf', 'LANG:FI', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', 'LF:we', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:N', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'PF:me', 'COMP:R/D'}
te              ['LANG:EN']
te-             {'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PHI_N', '-SPEC:V', '-COMP:VA/inf', 'PF:te', 'LANG:FI', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', 'LF:you', '-SPEC:FORCE', 'N', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:N', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PHI_N', 'PF:he', '-SPEC:V', '-COMP:VA/inf', 'LANG:FI', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:N', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'LF:they'}
se              {'LF:the/that', '-SPEC:Neg/fin', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', 'PF:se', '-COMP:P', 'adjoinable', '-COMP:uR', 'D', '-SPEC:V', 'LANG:FI', 'COMP:N', '!PROBE:N', '!COMP:*', '-COMP:D', 'OP', '-SPEC:P'}
sen             {'LF:the/that', 'TAIL:ASP', 'TAIL:PHI', '-SPEC:Neg/fin', 'PF:sen', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', '-COMP:P', 'adjoinable', '-COMP:uR', 'D', '-SPEC:V', 'LANG:FI', 'TAIL:*POL:NEG', 'COMP:N', '!PROBE:N', '!COMP:*', '-COMP:D', 'OP', '-SPEC:P'}
I               ['LANG:EN']
I-              {'LANG:EN', 'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PHI_N', '-SPEC:V', '-COMP:VA/inf', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', 'LF:I', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:N', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'PF:I', 'COMP:R/D'}
you             ['LANG:EN']
you-            {'LANG:EN', 'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PHI_N', '-SPEC:V', '-COMP:VA/inf', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'PF:you', 'COMP:R', '-COMP:AUX', '-COMP:A', 'LF:you', '-SPEC:FORCE', 'N', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:N', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D'}
he              ['LANG:EN']
he-             {'LANG:EN', 'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PHI_N', 'PF:he', '-SPEC:V', '-COMP:VA/inf', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:N', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'LF:he'}
she             ['LANG:EN']
she-            {'LANG:EN', 'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', 'PF:she', '-SPEC:ADV', 'PHI_N', '-SPEC:V', '-COMP:VA/inf', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:N', '-COMP:*', 'LF:she', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D'}
we              ['LANG:EN']
we-             {'LANG:EN', 'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PHI_N', '-SPEC:V', '-COMP:VA/inf', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', 'PF:we', 'LF:we', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:N', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D'}
you_pl          ['LANG:EN']
you_pl-         {'LANG:EN', 'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', 'LF:you_pl', '-SPEC:N', 'PF:you_pl', '-SPEC:V', '-COMP:VA/inf', '-SPEC:C/fin', 'PHI', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
they            ['LANG:EN']
they-           {'LANG:EN', 'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PHI_N', 'PF:they', '-SPEC:V', '-COMP:VA/inf', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:N', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'LF:they'}
it              ['LANG:EN']
it-             {'LANG:EN', '-SPEC:Neg/fin', 'LF:it/that', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', '-COMP:P', 'PF:it', 'adjoinable', '-COMP:uR', 'D', '-SPEC:V', 'COMP:N', '!PROBE:N', '!COMP:*', '-COMP:D', 'OP', '-SPEC:P'}
io              ['LANG:EN']
io-             {'LANG:IT', 'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PHI_N', '-SPEC:V', '-COMP:VA/inf', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', 'LF:I', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:N', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'PF:io', 'COMP:R/D'}
tu              ['LANG:EN']
tu-             {'LANG:IT', 'COMP:D/rel', 'PF:tu', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PHI_N', '-SPEC:V', '-COMP:VA/inf', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', 'LF:you', '-SPEC:FORCE', 'N', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:N', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D'}
lui             ['LANG:EN']
lui-            {'LANG:IT', 'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PHI_N', '-SPEC:V', '-COMP:VA/inf', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', 'PF:lui', '-SPEC:N', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'LF:he'}
lei             ['LANG:EN']
lei-            {'LANG:IT', 'PF:lei', 'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PHI_N', '-SPEC:V', '-COMP:VA/inf', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:N', '-COMP:*', 'LF:she', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D'}
noi             ['LANG:EN']
noi-            {'LANG:IT', 'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PHI_N', '-SPEC:V', '-COMP:VA/inf', 'PF:noi', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', 'LF:we', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:N', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D'}
voi             ['LANG:EN']
voi-            {'LANG:IT', 'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'LF:you_pl', 'PHI_N', 'PF:voi', '-SPEC:V', '-COMP:VA/inf', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:N', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D'}
loro            ['LANG:EN']
loro-           {'LANG:IT', 'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PHI_N', '-SPEC:V', '-COMP:VA/inf', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', 'PF:loro', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:N', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'LF:they'}
mi              ['LANG:EN']
mi-             {'LANG:IT', 'COMP:D/rel', 'PF:mi(cl)', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PHI_N', '-SPEC:V', '-COMP:VA/inf', 'LF:me', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-COMP:C/fin', '-SPEC:INF', 'CL', '-SPEC:T/fin', '-SPEC:N', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D'}
la              ['LANG:EN']
la-             {'LANG:IT', 'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PHI_N', '-SPEC:V', '-COMP:VA/inf', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-COMP:C/fin', '-SPEC:INF', 'CL', '-SPEC:T/fin', 'LF:her', '-SPEC:N', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'PF:la(cl)'}
lo              ['LANG:EN']
lo-             {'LANG:IT', 'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PF:lo(cl)', 'PHI_N', '-SPEC:V', '-COMP:VA/inf', 'LF:him', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-COMP:C/fin', '-SPEC:INF', 'CL', '-SPEC:T/fin', '-SPEC:N', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D'}
si              ['LANG:EN']
si-             {'LF:3sg', 'LANG:IT', 'COMP:D/rel', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PHI_N', '-SPEC:V', '-COMP:VA/inf', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:N', '-COMP:*', 'PF:si(cl)', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', 'CAL:CL'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'LANG:IT', 'COMP:D/rel', 'PF:ci', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-SPEC:uWH', '-SPEC:ADV', 'PHI_N', '-SPEC:V', '-COMP:VA/inf', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', 'LF:there', '-COMP:C/fin', '-SPEC:INF', '-SPEC:T/fin', '-SPEC:N', '-COMP:*', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D'}
[-n]            {'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:1', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-t]            {'PHI:HUM:HUM', 'LANG:FI', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:2'}
[-V]            {'LANG:FI', 'PHI', 'inflectional', 'PHI:PER:3', 'PHI:NUM:SG'}
[-mme]          {'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:1', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:PL'}
[-mme]          {'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:1', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:PL'}
[-tte]          {'PHI:HUM:HUM', 'LANG:FI', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:PER:2', 'PHI:NUM:PL'}
[-vat]          {'LANG:FI', 'PHI', 'inflectional', 'PHI:PER:3', 'PHI:NUM:PL'}
[-ni]           {'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:1', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-si]           {'PHI:HUM:HUM', 'LANG:FI', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:2'}
[-nsa]          {'LANG:FI', 'PHI', 'inflectional', 'PHI:PER:3', 'PHI:NUM:SG'}
[-an]           {'LANG:FI', 'PHI', 'inflectional', 'PHI:PER:3', 'PHI:NUM:SG', 'PHI:DET:DET'}
[-nne]          {'PHI:HUM:HUM', 'LANG:FI', 'inflectional', 'PHI:DET:DEF', 'PHI:PER:2', 'PHI:NUM:PL'}
[-s]            {'LANG:EN', 'PHI', 'inflectional', 'PHI:PER:3', 'PHI:NUM:SG', 'PHI:GEN:M', 'PHI:GEN:F'}
[-0]            {'LANG:EN', 'PHI:PER:1', 'PHI:PER:3', 'PHI:PER:2', 'PHI:NUM:PL', 'PHI', 'inflectional', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:GEN:N'}
[-o]            {'PHI:HUM:HUM', 'LANG:IT', 'PHI:PER:1', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-i]            {'PHI:HUM:HUM', 'LANG:IT', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:2'}
[-a]            {'LANG:IT', 'PHI', 'inflectional', 'PHI:PER:3', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-e]            {'LANG:IT', 'PHI', 'inflectional', 'PHI:PER:3', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-iamo]         {'PHI:HUM:HUM', 'LANG:IT', 'PHI:PER:1', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:PL'}
[-te]           {'PHI:HUM:HUM', 'LANG:IT', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:PER:2', 'PHI:NUM:PL'}
[-no]           {'LANG:IT', 'PHI', 'inflectional', 'PHI:PER:3', 'PHI:DET:DEF', 'PHI:NUM:PL'}
[-nom]          {'LANG:EN', 'inflectional', 'adjoinable', 'NOM', 'TAIL:FIN,ARG,VAL'}
[-par]          {'LANG:FI', 'inflectional', 'TAIL:ARG,-VAL', 'adjoinable', 'PAR'}
[-gen]          {'LANG:EN', 'GEN', 'inflectional', '-float', 'TAIL:INF,ARG'}
gen             {'LANG:EN', 'GEN', 'inflectional', '-float', 'TAIL:INF,ARG'}
[-n_acc]        {'TAIL:PHI', 'LANG:FI', 'TAIL:*POL:NEG', 'inflectional', 'adjoinable', 'n-ACC', 'TAIL:ARG,ASP:BOUNDED'}
[-t_acc]        {'LANG:FI', 'TAIL:*POL:NEG', 'inflectional', 'adjoinable', 't-ACC', 'TAIL:ARG,ASP:BOUNDED'}
[-0_acc]        {'LANG:FI', 'TAIL:*POL:NEG', 'inflectional', 'TAIL:*PHI', 'adjoinable', '0_ACC', 'TAIL:ARG,ASP:BOUNDED'}
asp             {'LANG:EN', 'inflectional', 'ASP:BOUNDED'}
a'              {'LANG:X', 'PF:a', 'a', 'LF:A'}
b'              {'LANG:X', 'b', 'LF:B', 'PF:b'}
b''             {'b', 'LANG:EN', 'PF:b', 'LF:B', '-COMP:c'}
c''             {'PF:c', 'LANG:EN', 'c', 'LF:C', 'SPEC:a'}
c'              {'LF:C', 'c', 'PF:c', 'LANG:X'}
d'              {'PF:d', 'LANG:', 'LF:D', 'd'}
a''             ['LANG:EN']
x'              {'LANG:X', 'x', 'PF:x', 'LF:X'}
y'              {'LANG:X', 'PF:y', 'y', 'LF:Y'}
z'              {'LANG:X', 'LF:Z', 'PF:x', 'z'}
John'           {'LANG:X', "N'", 'LF:John', 'PF:John'}
admires'        {'LANG:X', 'LF:admires', "V'", 'PF:admires'}
admires''       {'LANG:EN', 'LF:admires', '-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', 'PF:admires', '-COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'ASP', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'PHI:GEN:_', 'SPEC:D', '-COMP:N', 'COMP:P'}
Mary'           {'LANG:X', "N'", 'LF:mary', 'PF:Mary'}
T/fin           {'LANG:EN', 'SPEC:*', 'T', '-SPEC:Neg', 'PF:T', '-COMP:INF', 'SPEC:FORCE', '!PROBE:V', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:v', 'ARG', 'FIN', '-COMP:T/fin', '-SPEC:T/fin', '-SPEC:C', 'VAL', '-SPEC:N', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:v', 'SPEC:C/fin', '-SPEC:V', '-SPEC:TO/inf', 'COMP:T/prt', 'T/fin', 'COMP:V', 'SPEC:D', '!COMP:*', 'LF:T', '!SPEC:*'}
v               {'PHI:NUM:_', 'LANG:EN', '-SPEC:N', '-VAL', 'PHI:GEN:_', 'v', 'PF:v', '!PROBE:V', 'COMP:V', 'SPEC:D', '!COMP:*', 'PHI:PER:_', 'PHI:DET:_', 'ASP', 'ARG', 'LF:v'}
C/fin           {'LANG:EN', 'SPEC:*', 'COMP:T/fin', 'C/fin', 'C', '-COMP:C/fin', '-COMP:T/prt', 'PF:C', '-ARG', 'COMP:Neg/fin', 'FIN', '-SPEC:T/fin', 'VAL', '-SPEC:N', '-SPEC:C/fin', '!PROBE:FIN', '!COMP:*', 'LF:C/fin'}
T               {'-COMP:NEG', 'LANG:EN', 'SPEC:*', 'T', '-SPEC:FORCE', 'PF:T', '!PROBE:V', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'FIN', '-SPEC:T/fin', 'PHI:NUM:_', 'VAL', '-SPEC:N', 'PHI:GEN:_', 'COMP:v', '-SPEC:V', 'COMP:T/prt', 'COMP:V', 'SPEC:D', '!COMP:*', 'LF:T'}
T/prt           {'-COMP:NEG', 'LANG:EN', 'SPEC:*', 'LF:T/prt', 'T', '-SPEC:FORCE', '!PROBE:V', 'COMP:D', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'FIN', '-SPEC:T/fin', 'PHI:NUM:_', 'VAL', '-SPEC:N', 'PHI:GEN:_', 'COMP:v', 'T/prt', '-SPEC:V', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:V', 'SPEC:D', '!COMP:*', 'PF:T/prt'}
a0              {'COMP:0', 'LANG:EN', 'PF:A', 'TAIL:D', 'A', '-adjoinable', '-SPEC:D', '-SPEC:A', 'LF:A'}
n               {'COMP:0', 'LANG:EN', 'COMP:D/rel', 'SPEC:*', '-SPEC:R', 'COMP:C', '-COMP:v', 'n', '-COMP:V', '-SPEC:uWH', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:ADV', 'PHI:GEN:_', '-SPEC:V', '-COMP:VA/inf', 'COMP:V', 'COMP:uR', 'SPEC:A', '!SPEC:*', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P', 'COMP:R', 'LF:n', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', '-COMP:C/fin', '-SPEC:INF', 'ARG', 'INF', '-SPEC:T/fin', 'PHI:NUM:_', 'VAL', 'PF:n', '-SPEC:N', 'COMP:v', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:R/D', '!COMP:*', '!SPEC:D'}
impass          {'PHI:NUM:_', 'LANG:EN', '-SPEC:N', '-VAL', 'LF:impass', 'PHI:GEN:_', 'v', '!PROBE:V', 'COMP:V', 'SPEC:D', '!COMP:*', 'PHI:PER:_', 'PF:impass', 'ASP', 'ARG', 'PHI:DET:_'}
cau             {'PHI:NUM:_', 'LANG:EN', '-SPEC:N', 'PF:Cau', '-VAL', 'PHI:GEN:_', 'v', '!PROBE:V', 'COMP:V', 'SPEC:D', '!COMP:*', 'PHI:PER:_', 'PHI:DET:_', 'ASP', 'ARG', 'LF:v/Cause'}
INF             {'-COMP:T/fin', 'LANG:EN', 'PF:INF', '-COMP:FORCE', 'COMP:v', '-SPEC:V', 'COMP:V', '-COMP:C/fin', '!COMP:*', 'LF:INF', 'INF', '-SPEC:T/fin'}
prtcpl          {'-COMP:NEG', 'LANG:EN', 'SPEC:*', 'LF:T/prt', '-COMP:FORCE', 'T', '-SPEC:FORCE', '!PROBE:V', 'COMP:D', '-COMP:C/fin', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'INF', 'FIN', '-COMP:T/fin', '-SPEC:T/fin', 'VAL', '-SPEC:N', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:v', 'T/prt', '-SPEC:V', '-SPEC:C/fin', 'COMP:T/prt', 'COMP:V', 'SPEC:D', '!COMP:*', 'PF:T/prt'}
TO/inf          {'LANG:EN', '?ARG', '-COMP:FORCE', 'PF:TO/inf', '-COMP:C/fin', 'TO/inf', '-SPEC:v', 'INF', 'LF:TO/inf', '-COMP:T/fin', '!COMP:V', '-SPEC:T/fin', '-VAL', 'adjoinable', 'COMP:v', '-SPEC:V', 'COMP:V', '!COMP:*'}
A/inf           {'LANG:EN', 'SPEC:*', '?ARG', '-COMP:FORCE', '-SPEC:Neg/fin', '-COMP:C/fin', 'LF:A/inf', 'INF', '-SPEC:T/fin', '-COMP:T/fin', 'COMP:v', '?VAL', '-SPEC:V', 'A/inf', 'COMP:V', '!COMP:*', 'PF:A/inf'}
ARE/inf         {'LF:ARE/inf', 'LANG:EN', 'SPEC:*', 'PF:are', '?ARG', '-COMP:FORCE', '-COMP:C/fin', 'INF', '-SPEC:T/fin', '-COMP:T/fin', 'VAL', 'COMP:v', '-SPEC:V', '-adjoinable', 'COMP:V', '!COMP:*', 'ARE/inf'}
ESSA/inf        {'ESSA/inf', 'SPEC:*', 'LANG:EN', '?ARG', '-COMP:FORCE', 'PF:essa', '-SPEC:FORCE', '-SPEC:Neg/fin', '-COMP:C/fin', 'ADV', 'INF', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:N', 'adjoinable', 'COMP:v', '?VAL', 'LF:while', '-SPEC:V', 'TAIL:T', 'COMP:V', '!COMP:*'}
TUA/inf         {'LANG:EN', 'SPEC:*', '-COMP:FORCE', '-SPEC:FORCE', 'PF:tua', '-SPEC:Neg/fin', '-COMP:C/fin', 'ADV', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'INF', 'TUA/inf', '-COMP:T/fin', '-SPEC:T/fin', 'VAL', '-SPEC:N', 'PHI:NUM:_', 'LF:after', 'PHI:GEN:_', 'adjoinable', 'COMP:v', '-SPEC:V', 'TAIL:T', 'COMP:V', '!COMP:*', '!SPEC:*'}
VA/inf          {'LANG:EN', 'SPEC:*', '-COMP:FORCE', '-COMP:C/fin', 'LF:VA', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'INF', '-SPEC:T/fin', '-COMP:T/fin', 'PHI:NUM:_', 'VAL', '-SPEC:N', 'PHI:GEN:_', 'PF:vAn', 'COMP:v', 'VA/inf', '-SPEC:V', 'COMP:V', '!COMP:*', '!SPEC:*'}
MA/ssa          {'LANG:EN', '-SPEC:FORCE', 'PF:massa', '-SPEC:Neg/fin', 'MA/ssa', 'ADV', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'MA/inf', '-SPEC:T/fin', 'PHI:NUM:_', '-SPEC:N', '-VAL', 'PHI:GEN:_', 'adjoinable', 'COMP:v', 'TAIL:V', '-SPEC:*', 'COMP:V', 'LF:in_doing'}
MA/tta          {'PHI:NUM:_', 'LF:without_doing', 'LANG:EN', '-SPEC:N', '-VAL', 'PHI:GEN:_', 'adjoinable', '-SPEC:FORCE', 'PF:matta', 'TAIL:T', '-SPEC:Neg/fin', 'ADV', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'MA/inf', '-SPEC:T/fin'}
MA/lla          {'LANG:EN', 'PF:malla', '-SPEC:Neg/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:GEN:_', 'COMP:V', 'LF:by_doing', '-SPEC:FORCE', 'ADV', 'ARG', 'MA/inf', '-SPEC:T/fin', 'PHI:NUM:_', '-SPEC:N', '-VAL', 'adjoinable', 'COMP:v', 'TAIL:T'}
MA/inf          {'LF:to_do', 'LANG:EN', '-SPEC:Neg/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:GEN:_', 'TAIL:V', 'PF:maan', 'COMP:V', '-SPEC:FORCE', 'ADV', 'ARG', 'MA/inf', '-SPEC:T/fin', 'PHI:NUM:_', '-SPEC:N', '-VAL', 'adjoinable', 'COMP:v'}
E/inf           {'LF:by', '-SPEC:N', 'SPEC:*', '-VAL', 'adjoinable', '-SPEC:FORCE', 'PF:en', 'TAIL:T', 'LANG:FI', '-SPEC:Neg/fin', 'ADV', '-ARG', '-SPEC:T/fin'}
BE-             {'LANG:EN', 'PF:BE', '-SPEC:FORCE', 'LF:BE', '-COMP:v', 'SPEC:TO/inf', '-COMP:V', '-ARG', '-SPEC:T/fin', 'COPULA', '-COMP:T/fin', '-VAL', 'SPEC:P', 'SPEC:ADV', 'V', 'COMP:T/prt', 'SPEC:D', '!COMP:*', 'COMP:P', '-COMP:N', 'ASP'}
D               {'LANG:EN', 'PF:D', '-SPEC:Neg/fin', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', 'LF:D', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', '-COMP:P', 'adjoinable', '-COMP:uR', 'D', '-SPEC:V', 'COMP:N', '!PROBE:N', '!COMP:*', '-COMP:D', 'OP', '-SPEC:P'}
D/rel           {'LANG:EN', 'LF:D/rel', 'OP:_', '-SPEC:Neg/fin', 'OP:REL', '-COMP:C/fin', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', 'PF:D/rel', 'adjoinable', '-COMP:uR', 'D', 'D/rel', '-SPEC:V', 'COMP:N', 'inflectional', '!PROBE:N', '!COMP:*', '-COMP:D', 'OP', '-SPEC:P'}
P               {'-COMP:ADV', 'LANG:EN', '-COMP:A', '-SPEC:FORCE', 'LF:P', '-SPEC:Neg/fin', '-SPEC:iR', 'COMP:D', '-SPEC:INF', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:v', 'ARG', '-SPEC:ADV', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', 'PHI:NUM:_', '-SPEC:N', '-VAL', 'PHI:GEN:_', 'adjoinable', '-COMP:T', '-COMP:uWH', '-SPEC:V', '-SPEC:C/fin', '-SPEC:iWH', '-SPEC:*', 'P', '-float', '!COMP:*', '-COMP:N', 'PF:P', '-SPEC:P'}
pro             ['LANG:EN']
pro-            {'LANG:EN', 'COMP:D/rel', 'COMP:R', '-COMP:AUX', '-COMP:A', '-SPEC:FORCE', 'N', 'PF:(pro)', '-SPEC:R', 'COMP:C', '-COMP:v', '-COMP:V', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:INF', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', 'LF:pro', '-SPEC:V', '-COMP:VA/inf', '-SPEC:C/fin', 'PHI', 'COMP:T/prt', 'COMP:R/D', 'COMP:uR', 'SPEC:A', 'COMP:P', '-COMP:N', '-COMP:WH', '-SPEC:P'}
cl              {'LEFT:D,CL', 'LANG:EN', 'inflectional', 'RIGHT:PRG', 'RIGHT:ARE/inf', 'LEFT:T/fin', 'CL'}
inc             {'LANG:EN', 'INCORPORATED', 'inflectional'}
sg              {'LANG:EN', 'inflectional', 'PHI:NUM:SG'}
pl              {'LANG:EN', 'inflectional', 'PHI:NUM:PL'}
1p              {'LANG:EN', 'PHI:PER:1', 'inflectional'}
2p              {'PHI:PER:2', 'LANG:EN', 'inflectional'}
3p              {'LANG:EN', 'inflectional', 'PHI:PER:3'}
def             {'LANG:EN', 'inflectional', 'PHI:DET:DEF'}
indef           {'LANG:EN', 'inflectional', 'PHI:DET:INDEF'}
hum             {'PHI:HUM:HUM', 'LANG:EN', 'inflectional'}
nonhum          {'PHI:HUM:NONHUM', 'inflectional', 'LANG:EN'}
m               {'PHI:GEN:M', 'LANG:EN', 'inflectional'}
f               {'LANG:EN', 'inflectional', 'PHI:GEN:F'}
nom             {'NOM', 'inflectional', 'TAIL:FIN,!COMP:*,VAL', 'LANG:EN'}
acc             {'LANG:EN', 'inflectional', 'TAIL:v', 'ACC'}
dat             {'DAT', 'LANG:EN', 'inflectional', 'TAIL:v'}
uC/op           {'uC/op', 'inflectional', 'LANG:EN'}
wh              {'OP:_', 'OP:WH', 'LANG:EN', 'inflectional'}
wh_             {'OP:_', 'LANG:EN', 'inflectional', 'FORCE:OP:WH', 'OP'}
top             {'LANG:EN', 'inflectional', 'OP:TOP'}
foc             {'LANG:EN', 'inflectional', 'OP:FOC'}
C/op            {'LANG:EN', 'inflectional', 'OP:C/OP'}
Q               {'OP:WH', 'LANG:EN', 'inflectional', 'OP', 'OP:Q'}
