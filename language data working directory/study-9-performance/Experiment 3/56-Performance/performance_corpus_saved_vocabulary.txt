ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'COMP:ARE/inf', '-SPEC:C', '-COMP:T', '-SPEC:FORCE', '-SPEC:P', 'LANG:IT', '-SPEC:C/fin', '-SPEC:v', 'PF:a', '-SPEC:T/fin', '-SPEC:*', '-SPEC:iR', '-SPEC:ADV', '!COMP:*', '-SPEC:iWH', '-COMP:uWH', '-COMP:A', '-SPEC:V', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', 'LF:to', 'COMP:D', 'TAIL:V', 'adjoinable', '-VAL', 'P', '-COMP:ADV', '-SPEC:N', '-ARG'}
a_D             {'-SPEC:C', '-ARG', '-SPEC:P', 'LF:D', '-SPEC:T/fin', '-COMP:D', 'COMP:N', 'PF:D', '!COMP:*', 'OP', '-SPEC:V', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', '-COMP:P', 'D', 'LANG:EN', '-COMP:uR', 'adjoinable'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', '-SPEC:Neg', 'PHI:GEN:_', 'LF:admire', '!COMP:*', '-COMP:Neg', '-COMP:v', 'SPEC:ADV', 'SPEC:TO/inf', 'PF:admire', 'COMP:P', 'CLASS:TR', 'ARG', '-COMP:N', '-COMP:T/fin', 'V', 'COMP:D', 'ASP', 'SPEC:P', '-COMP:P', 'LANG:EN', '-VAL', 'PHI:NUM:_'}
admire*         ['LANG:EN']
T/fin*          {'LF:T', 'NO_DET', '!SPEC:*', "PF:T/fin'", '-VAL', 'LANG:EN', 'NO_NUMBER', 'CAT:T/fin'}
v*              {'PF:v', 'NO_DET', 'CAT:v', 'LANG:EN', '-VAL', 'NO_NUMBER', 'LF:v'}
admire**        ['LANG:EN']
T/fin**         {'LF:T', 'NO_DET', "PF:T/fin''", '!SPEC:*', 'PHI:PER:3', 'NO_PERSON', 'LANG:EN', '-VAL', 'NO_NUMBER', 'CAT:T/fin'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'-SPEC:FORCE', 'PHI:PER:_', 'LANG:IT', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:admire', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'ARG', '-COMP:N', 'V', 'ASP', 'COMP:D', 'SPEC:P', 'PF:adora', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
antaa           ['LANG:FI']
anta-           {'LANG:FI', '-SPEC:FORCE', 'PHI:PER:_', 'ASP:BOUNDED', '-COMP:FIN', 'PHI:DET:_', '-COMP:V', '+SEM:directional', '-SPEC:T/fin', 'SPEC:D', '!COMP:*', '-COMP:v', 'CLASS:DITR', 'SPEC:ADV', 'PF:antaa', 'SPEC:TO/inf', 'COMP:P', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'COMP:D', 'LF:give', '-VAL', 'PHI:NUM:_'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:D', 'SEM:internal', '-COMP:v', 'SPEC:ADV', 'SPEC:TO/inf', 'LF:ask', 'COMP:P', 'ARG', '-COMP:N', 'V', 'ASP', 'COMP:D', 'SPEC:P', 'PF:ask', 'LANG:EN', '-VAL', 'PHI:NUM:_'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'LANG:FI', '-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', 'LF:key', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'PF:avain', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', '-SEM:directional', '-SPEC:N'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'LANG:FI', '-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', 'PF:auto', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'LF:car', 'COMP:D/rel', '-SEM:directional', '-SPEC:N'}
bank            {'-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', 'LF:bank_inst', '-SPEC:ADV', 'FREQ:1', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'PF:bank1', '-SPEC:V', 'COMP:R/D', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'LANG:EN', '-SPEC:N'}
bank            {'-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', 'PF:bank2', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'FREQ:2', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'LF:bank_river', 'COMP:C', 'COMP:D/rel', 'LANG:EN', '-SPEC:N'}
barn            {'-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', 'LF:barn', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'PF:barn', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'LANG:EN', '-SPEC:N'}
city            {'-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', 'PF:city', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'LF:city', 'LANG:EN', '-SPEC:N'}
che             ['LANG:IT']
che-            {'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'SPEC:A', '-COMP:A', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', 'PF:che', '-SPEC:INF', 'COMP:C', 'LF:who', 'COMP:D/rel', 'PHI_N', '-SPEC:N'}
chiamato        ['LANG:IT']
chiamata-       {'-SPEC:FORCE', 'PHI:PER:_', 'LF:called', 'LANG:IT', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'ARG', '-COMP:N', 'V', 'ASP', 'PF:chiamato', 'SPEC:P', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
claims          ['LANG:EN']
claim-          {'COMP:T/fin', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:D', 'SPEC:D', '-COMP:v', 'SPEC:ADV', 'LF:claim', 'SPEC:TO/inf', 'COMP:P', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'PHI:NUM:_', 'LANG:EN', '-VAL', 'PF:claim'}
danno           {'-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'LANG:IT', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', 'LF:damage', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'PF:danno', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', '-SPEC:N'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'COMP:ARE/inf', '-SPEC:FORCE', 'PHI:PER:_', 'LANG:IT', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PF:detest', 'PHI:GEN:_', 'SEM:internal', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'LF:detest', 'ARG', '-COMP:N', 'V', 'ASP', 'COMP:D', 'SPEC:P', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
devono          ['LANG:EN']
deva-           {'COMP:ARE/inf', '-SPEC:FORCE', 'PHI:PER:_', 'LANG:IT', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:D', 'PF:deva', 'SEM:internal', '-COMP:v', 'SPEC:TO/inf', '-ASP', 'COMP:P', 'ARG', '-COMP:N', 'V', 'SPEC:P', 'PHI:NUM:_', 'SPEC:ADV', '-VAL', 'LF:must'}
di              {'LANG:FI', '-SPEC:C', '-adjoinable', '-COMP:T', '-SPEC:FORCE', '-SPEC:P', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:C/fin', '-SPEC:v', '-SPEC:T/fin', '-SPEC:iR', '-SPEC:ADV', '!COMP:*', '-SPEC:iWH', '-COMP:uWH', 'LF:of', '-COMP:A', '-SPEC:V', 'PF:di', 'ARG', '-COMP:N', 'SPEC:*', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:INF', 'COMP:D', 'PHI:NUM:_', '-VAL', 'P', '-COMP:ADV', '-SPEC:N'}
does            {'-SPEC:C', 'FIN', 'SPEC:FORCE', 'COMP:v', '-SPEC:v', 'PF:does', 'COMP:Neg', 'PHI:PER:3', '-SPEC:V', 'SPEC:TO/inf', 'PHI:GEN:M', 'LF:does', 'ARG', 'PHI:NUM:SG', '-COMP:T/fin', '-COMP:INF', 'COMP:V', '!PROBE:V', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:GEN:F', 'PHI:DET:_', 'COMP:T/prt', '-SPEC:T/fin', '-SPEC:Neg', 'PHI:GEN:_', 'SPEC:D', '!COMP:*', 'T/fin', 'VAL', 'T', '!SPEC:*', 'SPEC:*', 'SPEC:C/fin', 'LANG:EN', '-SPEC:TO/inf', '-SPEC:N'}
does_C          ['LANG:EN']
does-           {'-SPEC:C', 'FIN', 'SPEC:FORCE', 'COMP:v', '-SPEC:v', 'PF:does', 'COMP:Neg', 'PHI:PER:3', '-SPEC:V', 'SPEC:TO/inf', 'PHI:GEN:M', 'LF:does', 'ARG', 'PHI:NUM:SG', '-COMP:T/fin', '-COMP:INF', 'COMP:V', '!PROBE:V', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:GEN:F', 'PHI:DET:_', 'COMP:T/prt', '-SPEC:T/fin', '-SPEC:Neg', 'PHI:GEN:_', 'SPEC:D', '!COMP:*', 'T/fin', 'VAL', 'T', '!SPEC:*', 'SPEC:*', 'SPEC:C/fin', 'LANG:EN', '-SPEC:TO/inf', '-SPEC:N'}
dorme           ['LANG:IT']
dorme-          {'-SPEC:FORCE', 'PHI:PER:_', '-COMP:MA/inf', '!SPEC:D', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PF:dorme', 'PHI:GEN:_', '-COMP:D', 'SPEC:D', 'CLASS:INTR', '-COMP:v', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'LF:sleep', 'LANG:EN', '-VAL', 'PHI:NUM:_'}
disappeared     ['LANG:EN']
disappear-      {'-SPEC:FORCE', 'PHI:PER:_', 'LF:disappear', '-COMP:MA/inf', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:D', 'SPEC:D', 'CLASS:INTR', 'PF:disappear', '-COMP:v', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'LANG:EN', '-VAL', 'PHI:NUM:_'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'PF:easy', 'SPEC:D', 'LF:easy', '0', 'LANG:EN', '2SPEC'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'POL:NEG', 'LANG:FI', 'PF:ei', '-SPEC:T', 'PHI:PER:_', 'FIN', 'PHI:DET:_', 'COMP:T/prt', '-SPEC:T/fin', '!COMP:*', 'LF:neg', 'SEM:internal', 'Neg/fin', '!COMP:T', 'VAL', '!SPEC:*', 'NEG', 'ARG', 'SPEC:*', '%SPEC:INF', 'PHI:NUM:_'}
e-              {'POL:NEG', 'LANG:FI', 'PF:ei', '-SPEC:T', 'PHI:PER:_', 'FIN', 'PHI:DET:_', 'COMP:T/prt', '-SPEC:T/fin', '!COMP:*', 'LF:neg', 'SEM:internal', 'Neg/fin', '!COMP:T', 'VAL', '!SPEC:*', 'NEG', 'ARG', 'SPEC:*', '%SPEC:INF', 'PHI:NUM:_'}
elaa            ['LANG:FI']
ela-            {'LANG:FI', '-SPEC:FORCE', 'PHI:PER:_', '-COMP:MA/inf', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', '-COMP:D', 'SPEC:D', 'CLASS:INTR', '-COMP:v', 'LF:live', 'SPEC:TO/inf', 'COMP:P', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'SPEC:ADV', '-VAL', 'PF:elaa', 'PHI:NUM:_'}
etsii           ['LANG:FI']
etsi-           {'LANG:FI', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', '!COMP:*', 'LF:search', '-COMP:v', 'SPEC:TO/inf', 'PF:etsi', 'COMP:P', 'CLASS:TR', '!COMP:D', 'ARG', '-COMP:N', 'V', 'ASP', 'COMP:D', 'SPEC:P', '-COMP:P', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
etta            {'LANG:FI', '!PROBE:FIN', 'COMP:T/fin', 'PF:etta', 'FIN', 'LF:that', '-SPEC:*', 'FORCE', '-SPEC:D', 'COMP:C/fin', '!COMP:*', '-VAL', '-ARG'}
fell            ['LANG:EN']
fell-           {'-SPEC:FORCE', 'PHI:PER:_', '-COMP:MA/inf', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:D', 'SPEC:D', 'CLASS:INTR', '-COMP:v', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'PF:fell', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'LANG:EN', '-VAL', 'LF:fell', 'PHI:NUM:_'}
flow'           {'-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', 'PF:flow', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'LF:flow', 'COMP:P', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'PHI:NUM:_'}
from            {'-SPEC:C', '-COMP:T', '-SPEC:FORCE', '-SPEC:P', 'LF:from', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:C/fin', '-SPEC:v', '-SPEC:T/fin', '-SPEC:iR', '-SPEC:*', 'PHI:GEN:_', '-SPEC:ADV', '!COMP:*', '-SPEC:iWH', '-COMP:uWH', 'PF:from', '-COMP:A', 'TAIL:V,+SEM:directional', '-SPEC:V', 'ARG', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', '-float', 'COMP:D', 'PHI:NUM:_', 'LANG:EN', '-VAL', 'P', '-COMP:ADV', '-SPEC:N', 'adjoinable'}
gave            ['LANG:EN']
give-           {'-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:FIN', '-COMP:V', '+SEM:directional', 'PF:give', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:D', '!COMP:*', '-COMP:v', 'CLASS:DITR', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'COMP:D', 'LF:give', '-VAL', 'LANG:EN', 'PHI:NUM:_'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'LANG:IT', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'PF:Giuseppe', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'LF:Giuseppe', '-SEM:directional', '-SPEC:N'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'LANG:FI', '-SPEC:FORCE', 'PHI:PER:_', 'ASP:BOUNDED', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', '-SPEC:*', 'PF:haluaa', 'SEM:internal', '!COMP:*', '-COMP:v', 'LF:want', 'SPEC:TO/inf', 'COMP:P', 'COMP:A/inf', 'CLASS:TR', 'ARG', '-COMP:N', 'V', 'ASP', 'COMP:D', 'SPEC:P', '-COMP:P', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
hairitsee       ['LANG:FI']
hairitse-       {'LANG:FI', 'PF:hairitsee', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:FIN', '-COMP:V', '-SPEC:T/fin', 'SPEC:D', '!COMP:*', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'CLASS:TR', '!COMP:D', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'COMP:D', '-COMP:P', 'SPEC:ADV', '-VAL', 'LF:disturb', 'PHI:NUM:_'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'LF:have', '-SPEC:FORCE', 'PHI:PER:_', 'LANG:IT', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:D', 'SEM:internal', '-COMP:v', 'SPEC:TO/inf', '-ASP', 'COMP:P', 'COMP:T', 'SPEC:*', 'ARG', '-COMP:N', 'V', 'SPEC:P', 'SPEC:ADV', '-VAL', 'PF:ha', 'PHI:NUM:_'}
horse           {'-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', 'LF:horse', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'PF:horse', 'COMP:C', 'COMP:D/rel', 'LANG:EN', '-SPEC:N'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'LANG:FI', '-SPEC:FORCE', 'PHI:PER:_', 'LF:disappear', '-COMP:MA/inf', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', '-COMP:D', 'SPEC:D', 'CLASS:INTR', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'PF:havia', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
Helsingissa     ['LANG:FI']
Helsinki        ['LANG:FI']
Helsinki-       {'LANG:FI', '-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', 'PF:Helsinki', '-SPEC:uWH', '-COMP:v', 'LF:Helsinki', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', '-SPEC:N'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'LANG:FI', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:FIN', '-COMP:V', '-SPEC:T/fin', 'PF:ihaile-', 'LF:admire', '!COMP:*', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'CLASS:TR', '!COMP:D', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'COMP:D', '-COMP:P', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
il              {'-SPEC:C', '-ARG', '-SPEC:P', 'LANG:IT', 'PF:il', '-SPEC:T/fin', '-COMP:D', 'COMP:N', '!COMP:*', 'OP', '-SPEC:V', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', '-COMP:P', 'D', '-COMP:uR', 'LF:the', 'adjoinable'}
i               {'-SPEC:C', '-ARG', '-SPEC:P', 'LANG:IT', 'PF:il', '-SPEC:T/fin', '-COMP:D', 'COMP:N', '!COMP:*', 'OP', '-SPEC:V', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', '-COMP:P', 'D', '-COMP:uR', 'LF:the', 'adjoinable'}
in              {'-SPEC:C', '-COMP:T', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:P', 'PHI:PER:_', 'LANG:IT', 'PHI:DET:_', '-SPEC:C/fin', '-SPEC:v', '-SPEC:T/fin', '-SPEC:iR', 'PHI:GEN:_', '-SPEC:ADV', 'PF:in', '!COMP:*', '-SPEC:iWH', '-COMP:uWH', '-COMP:A', '-SPEC:V', 'ARG', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', 'COMP:D', 'PHI:NUM:_', '-VAL', 'P', 'LF:in', '-SPEC:N', 'adjoinable'}
infermieri      {'-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'LANG:IT', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'PF:infermieri', 'N', '-SPEC:ADV', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', 'LF:nurses', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', '-SPEC:N'}
is              ['LANG:EN']
be-             {'-SPEC:FORCE', '-COMP:TO/inf', '-COMP:V', '-SPEC:T/fin', 'SPEC:D', 'PF:be', '!COMP:*', '-COMP:v', 'SPEC:ADV', 'SPEC:TO/inf', 'COPULA', 'COMP:P', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'LANG:EN', '-VAL', 'LF:be', '-ARG'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'LANG:FI', '-SPEC:FORCE', 'PHI:PER:_', '-COMP:MA/inf', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', '-COMP:D', 'SPEC:D', 'CLASS:INTR', 'LF:sit', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'ARG', '-COMP:N', 'PF:istuu', 'V', 'ASP', 'SPEC:P', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
John            ['LANG:EN']
John-           {'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'SPEC:A', 'LF:John', '-COMP:A', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', 'PF:John', '-SEM:directional', '-SPEC:R', '-adjoinable', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'LANG:EN', '-SPEC:N'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'LANG:FI', 'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'SPEC:A', '-COMP:A', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', 'PF:joka', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', '-SPEC:INF', 'COMP:C', 'LF:who', 'COMP:D/rel', 'PHI_N', '-SPEC:N'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'LANG:FI', '-SPEC:R', '-SPEC:FORCE', 'PF:Jukka', '-COMP:AUX', '-SPEC:P', 'COMP:R', 'COMP:uR', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'LF:Jukka', '-SEM:directional', '-SPEC:N'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'LANG:FI', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'LF:run', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'SPEC:ADV', '-VAL', 'PHI:NUM:_', 'PF:juokse-'}
kaksi           {'LANG:FI', 'TAIL:ARG,VAL,FIN', 'NUM', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'PHI:NUM:SG', 'PF:kaksi', 'SPEC:*', 'LF:two', 'COMP:N', 'COMP:n', '-VAL', 'PHI:NUM:_'}
kaksi           {'NUM', 'TAIL:*POL:NEG', 'SPEC:*', 'TAIL:ARG,ASP:BOUNDED', 'PF:kaksi', 'LF:two', 'COMP:N', 'COMP:n', 'LANG:EN'}
kaksi_1         {'LANG:FI', 'TAIL:ARG,VAL,FIN', 'NUM', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'PHI:NUM:SG', 'PF:kaksi', 'SPEC:*', 'LF:two', 'COMP:N', 'COMP:n', '-VAL', 'PHI:NUM:_'}
kaksi_2         {'NUM', 'TAIL:*POL:NEG', 'SPEC:*', 'TAIL:ARG,ASP:BOUNDED', 'PF:kaksi', 'LF:two', 'COMP:N', 'COMP:n', 'LANG:EN'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'LANG:FI', 'LF:two', 'COMP:N', 'NUM', 'COMP:n', 'SPEC:*', 'PF:kaksi'}
kaupunkia       ['LANG:EN']
kaupunki        {'LANG:FI', '-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'PF:kaupunki', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', '-COMP:P', 'LF:city', 'COMP:D/rel', '-SPEC:N'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'!COMP:A/inf', 'LANG:FI', 'PF:kaske', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', '-COMP:v', 'LF:order', 'SPEC:TO/inf', 'COMP:P', 'ARG', '-COMP:N', 'SEM:external', 'V', 'ASP', 'SPEC:P', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'LANG:FI', '-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', 'LF:watch', '-SPEC:INF', 'COMP:C', 'PF:kello', 'COMP:D/rel', '-SPEC:N'}
kello0-         {'LF:watch', 'LANG:FI', 'PF:kello', 'SPEC:D', '0', '2SPEC'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'PF:key', 'COMP:R', 'COMP:uR', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', 'LF:key', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'LANG:EN', '-SPEC:N'}
kirja           ['LANG:FI']
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'LANG:FI', '-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', 'PF:kirja', '-SPEC:ADV', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'LF:book', 'COMP:D/rel', '-SEM:directional', '-SPEC:N'}
knows           ['LANG:EN']
know-           {'-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', 'LF:know', '-SPEC:T/fin', 'PHI:GEN:_', '!COMP:*', '-COMP:v', 'SPEC:ADV', 'SPEC:TO/inf', 'PF:know', 'COMP:P', 'CLASS:TR', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'COMP:D', '-COMP:P', 'LANG:EN', '-VAL', 'PHI:NUM:_'}
kohti           {'LANG:FI', '-SPEC:C', '-COMP:T', '-SPEC:FORCE', '-SPEC:P', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:C/fin', '-SPEC:v', '-SPEC:T/fin', '-SPEC:iR', 'PF:kohti', '-SPEC:ADV', '!COMP:*', '-SPEC:iWH', '-COMP:uWH', '-COMP:A', 'LF:towards', '-SPEC:V', 'ARG', '-COMP:N', 'SPEC:*', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:INF', 'COMP:D', 'TAIL:V', 'PHI:NUM:_', '-VAL', 'P', '-COMP:ADV', '-SPEC:N', 'adjoinable'}
koko            {'LANG:FI', '-SPEC:C', 'LF:all', '-ARG', '-SPEC:P', '-SPEC:T/fin', '-COMP:D', 'COMP:N', '!COMP:*', 'TAIL:T', 'OP', '-SPEC:V', 'PF:koko', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', '-COMP:P', 'D', '-COMP:uR', 'adjoinable'}
kuka            ['LANG:FI']
kuka-           {'LANG:FI', '-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', 'PF:kuka', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'LF:who', 'COMP:D/rel', 'PHI', '-SPEC:N'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'LANG:FI', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', '-COMP:D', 'PF:kuorsaa', '-COMP:v', 'SPEC:TO/inf', '-COMP:WH', 'COMP:P', 'ARG', '-COMP:N', 'V', '-COMP:T/fin', 'ASP', 'SPEC:P', 'SPEC:ADV', '-VAL', 'LF:snore', 'PHI:NUM:_'}
lahella         {'LANG:FI', '-SPEC:C', '-SPEC:C/fin', 'COMP:v', '-SPEC:v', '-SPEC:ADV', '-SPEC:iWH', '-COMP:uWH', '-COMP:A', '-SPEC:V', '-COMP:C/fin', 'ARG', '-COMP:N', '-COMP:T/fin', 'COMP:D', 'COMP:V', 'P', 'INF', 'adjoinable', 'PHI:NUM:_', '-COMP:T', '-SPEC:FORCE', '-SPEC:P', 'PHI:PER:_', 'PHI:DET:_', '!SPEC:D', '-SPEC:T/fin', '-SPEC:iR', '!COMP:*', 'VAL', 'LF:near', '!SPEC:*', 'SPEC:*', '-SPEC:Neg/fin', '-SPEC:INF', 'PF:lahella', '-COMP:FORCE', '-COMP:ADV', '-SPEC:N'}
lahella         {'LANG:FI', '-SPEC:C', '-VAL', '-COMP:T', '-SPEC:FORCE', '-SPEC:P', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:C/fin', '-SPEC:v', '-SPEC:T/fin', '-SPEC:iR', '-SPEC:ADV', '!COMP:*', '-SPEC:iWH', '-COMP:uWH', '-COMP:A', '-SPEC:V', 'LF:near', '!COMP:D', 'ARG', '-COMP:N', 'SPEC:*', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:INF', 'COMP:D', 'PHI:NUM:_', 'PF:lahella', 'P', '-COMP:ADV', '-SPEC:N', 'adjoinable'}
lahella_1       {'LANG:FI', '-SPEC:C', '-VAL', '-COMP:T', '-SPEC:FORCE', '-SPEC:P', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:C/fin', '-SPEC:v', '-SPEC:T/fin', '-SPEC:iR', '-SPEC:ADV', '!COMP:*', '-SPEC:iWH', '-COMP:uWH', '-COMP:A', '-SPEC:V', 'LF:near', '!COMP:D', 'ARG', '-COMP:N', 'SPEC:*', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:INF', 'COMP:D', 'PHI:NUM:_', 'PF:lahella', 'P', '-COMP:ADV', '-SPEC:N', 'adjoinable'}
lahella_2       {'LANG:FI', '-SPEC:C', '-SPEC:C/fin', 'COMP:v', '-SPEC:v', '-SPEC:ADV', '-SPEC:iWH', '-COMP:uWH', '-COMP:A', '-SPEC:V', '-COMP:C/fin', 'ARG', '-COMP:N', '-COMP:T/fin', 'COMP:D', 'COMP:V', 'P', 'INF', 'adjoinable', 'PHI:NUM:_', '-COMP:T', '-SPEC:FORCE', '-SPEC:P', 'PHI:PER:_', 'PHI:DET:_', '!SPEC:D', '-SPEC:T/fin', '-SPEC:iR', '!COMP:*', 'VAL', 'LF:near', '!SPEC:*', 'SPEC:*', '-SPEC:Neg/fin', '-SPEC:INF', 'PF:lahella', '-COMP:FORCE', '-COMP:ADV', '-SPEC:N'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'LANG:FI', 'COMP:PP', '-SPEC:FORCE', 'PHI:PER:_', '-COMP:MA/inf', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', '-COMP:D', 'SPEC:D', 'CLASS:INTR', 'LF:leave', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'SPEC:ADV', '-VAL', 'PF:lahtea', 'PHI:NUM:_'}
lavano          ['LANG:IT']
lava-           {'PF:lava', '-SPEC:FORCE', 'PHI:PER:_', 'LANG:IT', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', '!COMP:*', 'LF:wash', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'ARG', '-COMP:N', 'V', 'SPEC:P', 'COMP:D', 'ASP', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-SPEC:C', '-ARG', '-SPEC:P', 'LANG:IT', 'LF:D', 'PF:le', '-SPEC:T/fin', '-COMP:D', 'COMP:N', '!COMP:*', 'OP', '-SPEC:V', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', '-COMP:P', 'D', '-COMP:uR', 'adjoinable'}
leaves          ['LANG:EN']
leave           {'PF:leave', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '!SPEC:D', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:leave', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'ARG', '-COMP:N', 'V', '-COMP:T/fin', 'ASP', 'SPEC:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'PHI:NUM:_'}
leave-          {'PF:leave', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '!SPEC:D', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:leave', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'ARG', '-COMP:N', 'V', '-COMP:T/fin', 'ASP', 'SPEC:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'PHI:NUM:_'}
like-           {'-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:like', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '!COMP:D', 'ARG', 'PF:like', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'PHI:NUM:_'}
likes           ['LANG:EN']
like            {'-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:like', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '!COMP:D', 'ARG', 'PF:like', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'PHI:NUM:_'}
little          ['LANG:EN']
little-         {'PF:little-', 'SPEC:D', '0', 'LANG:EN', '2SPEC', 'LF:little'}
lle             {'LANG:FI', '-SPEC:C', '-COMP:T', '-SPEC:FORCE', '-SPEC:P', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:C/fin', '+SEM:directional', '-SPEC:v', 'PF:P(lle)', '-SPEC:*', '-SPEC:T/fin', '-SPEC:iR', '-SPEC:ADV', 'LF:for', '!COMP:*', '-SPEC:iWH', '-COMP:uWH', '-COMP:A', 'TAIL:V,+SEM:directional', '-SPEC:V', 'ARG', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', 'COMP:D', 'PHI:NUM:_', '-VAL', 'P', '-COMP:ADV', '-SPEC:N', 'adjoinable'}
lla             {'LANG:FI', '-SPEC:C', '-COMP:T', '-SPEC:FORCE', '-SPEC:P', 'LF:by', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:C/fin', '-SPEC:v', '-SPEC:T/fin', '-SPEC:iR', '-SPEC:ADV', '!COMP:*', '-SPEC:iWH', '-COMP:uWH', 'TAIL:T', '-COMP:A', '-SPEC:V', 'TAIL:*V', 'ARG', '-COMP:N', 'SPEC:*', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:INF', 'COMP:D', 'PHI:NUM:_', '-VAL', 'PF:P(lla)', 'P', '-COMP:ADV', '-SPEC:N', 'adjoinable'}
Luisa           ['LANG:IT']
Luisa-          {'-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'LANG:IT', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'LF:Luisa', 'N', '-SPEC:ADV', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', 'PF:Luisa', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', '-SEM:directional', '-SPEC:N'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'LANG:FI', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PF:luke', '!COMP:*', '-COMP:v', 'SPEC:TO/inf', 'LF:read', 'COMP:P', 'CLASS:TR', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'COMP:D', '-COMP:P', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'LANG:FI', '-SPEC:FORCE', 'PHI:PER:_', 'ASP:BOUNDED', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', '!COMP:*', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'CLASS:TR', '!COMP:D', 'LF:find', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'COMP:D', 'PF:loyta-', '-COMP:P', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
Mary            ['LANG:EN']
Mary-           {'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'SPEC:A', '-COMP:A', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SEM:directional', '-SPEC:R', '-adjoinable', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'PF:Mary', 'COMP:R/D', 'LF:Mary', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'LANG:EN', '-SPEC:N'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'LANG:FI', 'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'SPEC:A', '-COMP:A', 'PF:Merja', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', 'LF:Merja', '-SEM:directional', '-SPEC:R', '-adjoinable', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', '-SPEC:N'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'LANG:FI', 'MA/inf', '-SPEC:FORCE', 'LF:by', 'ADV', 'COMP:v', '-SPEC:T/fin', '-SPEC:Neg/fin', 'SPEC:*', 'PF:malla', 'adjoinable', '-SPEC:N', 'TAIL:T'}
meren           ['LANG:FI']
mere-           {'LANG:FI', '-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', 'PF:meri', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'LF:ocean', '-SPEC:N'}
mies            {'LANG:FI', '-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'LF:man', 'N', '-SPEC:ADV', 'PF:mies', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', '-SPEC:N'}
mistake         {'-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', 'LF:mistake', '-SPEC:P', 'COMP:R', 'COMP:uR', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'PF:mistake', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'LANG:EN', '-SPEC:N'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'LANG:FI', '-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', '-SPEC:N', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'LF:what', 'PF:mika-'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '+SEM:directional', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:move', '!COMP:*', 'LANGN:EN', 'PF:move', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'CLASS:TR', 'ARG', '-COMP:N', 'V', 'ASP', 'COMP:D', 'SPEC:P', '-COMP:P', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
mukavasti       ['LANG:EN']
mukava-         {'LANG:FI', 'SPEC:D', '0', 'PF:mukavasti', 'LF:comfortably', '2SPEC'}
must            {'-SPEC:C', 'PHI:PER:_', 'FIN', 'SPEC:FORCE', 'COMP:v', 'COMP:T/prt', 'PHI:DET:_', '-SPEC:v', '-SPEC:T/fin', '-SPEC:Neg', 'PHI:GEN:_', 'SPEC:D', '-SPEC:N', '!COMP:*', 'T/fin', 'COMP:Neg', 'VAL', '-SPEC:V', 'SPEC:TO/inf', 'T', '!SPEC:*', 'ARG', 'SPEC:*', 'SPEC:C/fin', '-COMP:T/fin', 'MODAL', '-COMP:INF', '-SPEC:TO/inf', 'COMP:V', 'PHI:NUM:_', 'LANG:EN', 'PF:must', '!PROBE:V', 'LF:must'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'LANG:FI', '-SPEC:FORCE', 'LF:sell', 'PHI:PER:_', 'ASP:BOUNDED', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', '!COMP:*', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'CLASS:TR', 'ARG', '-COMP:N', 'V', '-COMP:T/fin', 'COMP:D', 'ASP', 'SPEC:P', '-COMP:P', 'SPEC:ADV', '-VAL', 'PF:myy', 'PHI:NUM:_'}
naki            ['LANG:FI']
nakee           ['LANG:FI']
nake-           {'LANG:FI', '-SPEC:FORCE', 'PHI:PER:_', 'ASP:BOUNDED', 'PHI:DET:_', 'PF:nake', '-COMP:V', '-SPEC:T/fin', 'LF:see', '-COMP:ESSA/inf', '!COMP:*', '-COMP:MA/tta', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'CLASS:TR', '-COMP:MA/ssa', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'COMP:D', '-COMP:P', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
nayttaa         ['LANG:FI']
naytta-         {'LANG:FI', '-SPEC:FORCE', '!SPEC:D', '-COMP:V', '-SPEC:T/fin', 'PF:naytta', 'SEM:internal', '!COMP:VA/inf', '-COMP:v', 'VAL', 'LF:seem', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'SPEC:ADV', '-ARG'}
ndo             {'VAL', '?ARG', 'LF:ing', '-SPEC:V', '-COMP:C/fin', 'COMP:v', '-SPEC:T/fin', '-COMP:T/fin', 'PRG', 'COMP:V', 'PF:PRG', '!COMP:*', '-COMP:FORCE', 'LANG:EN', 'INF'}
ne              {'LANG:FI', '-SPEC:C', '-ARG', '-SPEC:P', 'LF:those', '-SPEC:T/fin', '-COMP:D', 'COMP:N', '!COMP:*', 'PHI:PER:3', 'OP', '-SPEC:V', 'PHI:NUM:PL', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:Neg/fin', '-SPEC:INF', 'PF:ne', '-COMP:T/fin', '-COMP:P', 'D', '-COMP:uR', 'adjoinable'}
niiden          ['LANG:EN']
nen             {'LANG:FI', 'LF:ing', 'A', 'SPEC:*', 'PF:a', '-SPEC:D', '-SPEC:A', 'COMP:0', 'TAIL:D'}
not             {'Neg', 'POL:NEG', 'PHI:PER:_', 'PHI:DET:_', 'PF:not', '-COMP:FIN', 'ARG', 'LF:not', '-SPEC:T/fin', 'SPEC:*', 'PHI:GEN:_', '-COMP:D', 'LANG:EN', '-COMP:C', '-VAL', '!COMP:*', 'PHI:NUM:_'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-COMP:T', 'LANG:FI', '-SPEC:FORCE', 'PHI:PER:_', '-COMP:MA/inf', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', '-COMP:D', 'SPEC:D', 'CLASS:INTR', 'PF:nukku', '-COMP:Neg/fin', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'ARG', '-COMP:N', 'V', '-COMP:T/fin', 'ASP', 'SPEC:P', 'LF:sleep', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'LANG:FI', '-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-SPEC:uWH', '-COMP:v', 'LF:possessions', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'PF:omaisuuden', '-SPEC:N'}
operatoria      ['LANG:IT']
operatoria-     {'SPEC:D', '0', 'LANG:IT', 'LF:operation', '2SPEC', 'PF:operatoria'}
ostaa           ['LANG:FI']
osta-           {'LANG:FI', '-SPEC:FORCE', 'PF:osta', 'PHI:PER:_', 'ASP:BOUNDED', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', '!COMP:*', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'CLASS:TR', 'ARG', '-COMP:N', 'LF:buy', 'V', 'ASP', 'SPEC:P', 'COMP:D', '-COMP:P', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'LANG:FI', '-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', 'PF:paiva', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', 'LF:day', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'SEM:nonreferential', '-SPEC:N'}
past            {'-SPEC:C', '-COMP:T', '-SPEC:FORCE', '-SPEC:P', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:C/fin', '-SPEC:v', '-SPEC:T/fin', '-SPEC:iR', '-SPEC:*', 'PHI:GEN:_', '-SPEC:ADV', '-SPEC:N', '!COMP:*', '-SPEC:iWH', '-COMP:uWH', '-COMP:A', 'LF:past', '-SPEC:V', 'ARG', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', '-float', 'COMP:D', 'PHI:NUM:_', 'LANG:EN', '-VAL', 'P', '-COMP:ADV', 'PF:past', 'adjoinable'}
Pariisia        ['LANG:FI']
Pariisi-        {'LANG:FI', '-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', 'PF:Pariisi', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'LF:Paris', 'COMP:D/rel', '-SPEC:N'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'LANG:FI', '-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', 'PF:Pekka', '-SPEC:uWH', '-COMP:A', '-COMP:v', 'COMP:R/D', '-SPEC:V', 'LF:Pekka', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', '-SEM:directional', '-SPEC:N'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'LANG:FI', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'LF:fear', '!COMP:*', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'CLASS:TR', 'ARG', '-COMP:N', 'V', 'ASP', 'PF:pelkaa', 'SPEC:P', 'COMP:D', '-COMP:P', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
persuades       ['LANG:EN']
persuade-       {'-SPEC:FORCE', 'PHI:PER:_', 'LF:persuade', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', '!COMP:*', '-COMP:v', 'SPEC:ADV', 'SPEC:TO/inf', 'PF:persuade', 'COMP:P', 'ARG', '-COMP:N', 'SEM:external', 'V', 'ASP', 'SPEC:P', 'LANG:EN', '-VAL', 'PHI:NUM:_', 'COMP:TO/inf'}
peruuntui       ['LANG:FI']
peruuntu-       {'LANG:FI', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'PF:peruuntui', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'LF:cancelled', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'LANG:FI', '-SPEC:FORCE', 'PHI:PER:_', 'ASP:BOUNDED', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', '!COMP:*', 'LF:wash', '-COMP:v', 'PF:pese_asp', 'SPEC:TO/inf', 'COMP:P', 'CLASS:TR', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'COMP:D', '-COMP:P', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
pese-           {'LANG:FI', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', '!COMP:*', 'LF:wash', '-COMP:v', 'PF:pese', 'SPEC:TO/inf', 'COMP:P', 'CLASS:TR', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'COMP:D', '-COMP:P', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
petardi         {'LF:firecrackers', '-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'LANG:IT', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'PF:petardi', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', '-SPEC:N'}
pieni           ['LANG:FI']
pieni-          {'LANG:FI', 'SPEC:D', 'LF:small', '0', '2SPEC', 'PF:pieni-'}
poikien         ['LANG:FI']
poika-          {'LANG:FI', '-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', 'PF:poika', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', 'LF:boy', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', '-SPEC:N'}
puhelinta       ['LANG:FI']
puhelin-        {'LANG:FI', 'LF:phone', 'SPEC:D', '0', '2SPEC', 'PF:puhelin'}
punainen        ['LANG:FI']
puna-           {'LANG:FI', 'PF:puna-', 'SPEC:D', '0', '2SPEC', 'LF:red'}
presupposto     {'-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'LANG:IT', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'PF:presupposto', 'N', '-SPEC:ADV', 'LF:presupposition', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', '-SPEC:N'}
primary         {'PF:primary', '-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'LANG:IT', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', 'LF:nurse', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', '-SPEC:N'}
promises        ['LANG:EN']
promise-        {'-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', 'LF:promise', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:D', 'SEM:internal', 'PF:promise', '-COMP:v', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'ARG', '-COMP:N', 'V', 'ASP', 'COMP:D', 'SPEC:P', 'LANG:EN', '-VAL', 'PHI:NUM:_'}
problem         {'LF:problem', '-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'PF:problem', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'LANG:EN', '-SPEC:N'}
pyytaa          ['LANG:FI']
pyyta-          {'LANG:FI', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PF:pyyda', '!COMP:*', '-COMP:v', 'SPEC:TO/inf', 'LF:ask', 'COMP:P', 'CLASS:TR', 'ARG', '-COMP:N', 'SEM:external', 'V', 'ASP', 'SPEC:P', 'COMP:D', '-COMP:P', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'-SPEC:FORCE', 'PHI:PER:_', 'LAMG:EN', '-COMP:MA/inf', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:D', 'SPEC:D', 'CLASS:INTR', '-COMP:v', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'PF:race', 'LF:race', 'ARG', '-COMP:N', 'V', '-COMP:T/fin', 'ASP', 'SPEC:P', 'LANG:EN', '-VAL', 'PHI:NUM:_'}
raukesi         ['LANG:FI']
raukea-         {'LANG:FI', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PF:raukea', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'SPEC:ADV', '-VAL', 'LF:terminate', 'PHI:NUM:_'}
red             ['LANG:EN']
red-            {'2SPEC', 'SPEC:D', '0', 'PF:red', 'LANG:EN', 'LF:red'}
saavuttaa       ['LANG:FI']
saavutta-       {'LANG:FI', '-SPEC:FORCE', 'PHI:PER:_', 'ASP:BOUNDED', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', '!COMP:*', '-COMP:v', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'CLASS:TR', '!COMP:D', 'ARG', '-COMP:N', 'LF:reach', 'V', 'ASP', 'SPEC:P', 'COMP:D', 'PF:saavutta-', '-COMP:P', '-VAL', 'PHI:NUM:_'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'LANG:FI', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'SPEC:D', 'COMP:VA/inf', 'COMP:FORCE', '!COMP:*', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'CLASS:TR', 'LF:say', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'COMP:D', '-COMP:P', 'SPEC:ADV', '-VAL', 'PHI:NUM:_', 'PF:sano-'}
said            ['LANG:EN']
say'            {'-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', '!COMP:FORCE', 'PHI:GEN:_', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'LF:say', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'SPEC:ADV', '-VAL', 'PF:say', 'LANG:EN', 'PHI:NUM:_'}
say-            {'-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', '!COMP:FORCE', 'PHI:GEN:_', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'LF:say', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'SPEC:ADV', '-VAL', 'PF:say', 'LANG:EN', 'PHI:NUM:_'}
sala            ['LANG:IT']
sala-           {'-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'LANG:IT', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', 'LF:room', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'PF:sala', 'COMP:D/rel', '-SPEC:N'}
scoppiati       ['LANG:IT']
scoppia-        {'-SPEC:FORCE', 'PHI:PER:_', 'LANG:IT', 'PHI:DET:_', 'LF:explode', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'PF:scoppia', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
sentenza        {'-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'LANG:IT', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', '-SPEC:N', 'SPEC:A', 'PF:sentenza', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'LF:sentence'}
Seine           ['LANG:EN']
Seine-          {'-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', 'PF:Seine', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'LANG:EN', 'LF:Seine', '-SPEC:N'}
sembrano        ['LANG:IT']
sembra-         {'PF:sembra', '-SPEC:FORCE', '-COMP:V', '-SPEC:T/fin', '-COMP:D', 'SPEC:D', '-COMP:v', 'SPEC:ADV', '!COMP:ARE/inf', 'LF:seem', 'SPEC:TO/inf', '-ASP', 'COMP:P', '-COMP:N', 'V', 'SPEC:P', 'LANG:EN', '-VAL', '-ARG'}
sleeps          ['LANG:EN']
sleep           {'PF:sleep', '-SPEC:FORCE', 'PHI:PER:_', '-COMP:MA/inf', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:D', 'SPEC:D', 'CLASS:INTR', '-COMP:v', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'LF:sleep', 'LANG:EN', '-VAL', 'PHI:NUM:_'}
sleep-          {'PF:sleep', '-SPEC:FORCE', 'PHI:PER:_', '-COMP:MA/inf', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:D', 'SPEC:D', 'CLASS:INTR', '-COMP:v', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'LF:sleep', 'LANG:EN', '-VAL', 'PHI:NUM:_'}
solution        {'-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'PF:solution', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'LF:solution', 'COMP:C', 'COMP:D/rel', 'LANG:EN', '-SPEC:N'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'!COMP:A/inf', 'LANG:FI', '-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'PF:sopimus', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'LF:agreement', 'COMP:D/rel', '-SPEC:N'}
spinge          ['LANG:IT']
spinge-         {'-SPEC:FORCE', 'PHI:PER:_', 'LANG:IT', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:push', '-COMP:v', 'PF:spinge', 'SPEC:TO/inf', '!COMP:D', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', '-COMP:P', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
ssa             {'LANG:FI', '-SPEC:C', '-COMP:T', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:P', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:C/fin', '-SPEC:v', '-SPEC:T/fin', '-SPEC:iR', '-SPEC:ADV', 'COMP:n/MA', '!COMP:*', '-SPEC:iWH', '-COMP:uWH', '-COMP:A', '-SPEC:V', 'ARG', '-COMP:N', 'SPEC:*', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:INF', 'COMP:D', 'TAIL:V', 'PHI:NUM:_', 'PF:ssa', '-VAL', 'P', 'LF:in', '-SPEC:N', 'adjoinable'}
stanno          ['LANG:IT']
sta-            {'-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PF:sta', 'PHI:GEN:_', 'SPEC:D', 'LF:stay', 'SEM:internal', '-COMP:v', 'SPEC:ADV', 'SPEC:TO/inf', '-ASP', 'COMP:P', 'ARG', '-COMP:N', 'V', 'SPEC:P', 'COMP:PRG', 'LANG:EN', '-VAL', 'PHI:NUM:_'}
sti             {'LANG:FI', '-SPEC:FORCE', '-ARG', 'LF:by', 'ADV', '-SPEC:T/fin', 'PF:sti', '-SPEC:Neg/fin', 'SPEC:*', 'adjoinable', '!COMP:*', '-SPEC:N', 'TAIL:T'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'LANG:FI', '-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', 'LF:socks', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', 'PF:sukka-', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', '-SPEC:N'}
surprised       ['LANG:EN']
surprise-       {'-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', '!COMP:*', '-COMP:v', 'SPEC:ADV', 'SPEC:TO/inf', 'PF:surprise', 'COMP:P', 'CLASS:TR', 'ARG', '-COMP:N', '-COMP:T/fin', 'V', 'ASP', 'LF:surprise', 'SPEC:P', 'COMP:D', 'LANG:EN', '-COMP:P', '-VAL', 'PHI:NUM:_'}
talo            {'LF:house', 'LANG:FI', '-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', '-SPEC:N', 'PF:talo'}
tama            ['LANG:EN']
tama-           {'LANG:FI', '-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'LF:this', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'PF:tama', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'PHI', '-SPEC:N'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'!COMP:A/inf', 'LANG:FI', '-SPEC:FORCE', 'PHI:PER:_', 'FIN', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PF:taytyy', '-COMP:v', 'SPEC:TO/inf', '-ASP', 'COMP:P', 'SPEC:*', 'ARG', '-COMP:N', 'V', 'MODAL', 'SPEC:P', 'PHI:NUM:_', 'SPEC:ADV', '-VAL', 'LF:must'}
teki            ['LANG:FI']
teke-           {'LANG:FI', '-SPEC:FORCE', 'PHI:PER:_', '-COMP:A/inf', 'ASP:BOUNDED', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PF:teke', '!COMP:*', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'CLASS:TR', '!COMP:D', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'COMP:D', '-COMP:P', 'SPEC:ADV', '-VAL', 'LF:make', 'PHI:NUM:_'}
that            {'!PROBE:FIN', 'PF:that', 'COMP:T/fin', 'FIN', 'LF:that', '-SPEC:*', 'FORCE', 'COMP:C/fin', 'LANG:EN', '!COMP:*', '-VAL', '-ARG'}
the             {'-SPEC:C', 'PHI:DEF:DEF', '-ARG', '-SPEC:P', '-SPEC:T/fin', '-COMP:D', 'COMP:N', '!COMP:*', 'OP', 'PF:the', '-SPEC:V', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', '-COMP:P', 'D', 'LANG:EN', '-COMP:uR', 'LF:the', 'adjoinable'}
to              {'-SPEC:C', '-SPEC:C/fin', '+SEM:directional', '-SPEC:v', '-SPEC:*', '-SPEC:ADV', 'PF:to', '-SPEC:iWH', '-COMP:uWH', '-COMP:A', '-SPEC:V', 'ARG', '-COMP:N', '-COMP:T/fin', '-float', 'COMP:D', 'TAIL:V', '-VAL', 'P', 'PHI:NUM:_', 'adjoinable', '-COMP:T', '-SPEC:FORCE', '-SPEC:P', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:T/fin', '-SPEC:iR', 'PHI:GEN:_', '!COMP:*', '-SPEC:Neg/fin', '-SPEC:INF', 'LF:to', 'LANG:EN', '-COMP:ADV', '-SPEC:N'}
to_inf          {'PF:TO/inf', '?ARG', 'COMP:v', '-SPEC:v', '-SPEC:T/fin', 'TO/inf', 'LF:TO/inf', '!COMP:*', '-SPEC:V', '-COMP:C/fin', '-COMP:T/fin', 'COMP:V', '-VAL', '-COMP:FORCE', 'LANG:EN', 'INF', 'adjoinable'}
towards         {'-SPEC:C', '-COMP:T', '-SPEC:FORCE', '-SPEC:P', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:C/fin', '-SPEC:v', '-SPEC:T/fin', '-SPEC:iR', '-SPEC:*', 'PHI:GEN:_', '-SPEC:ADV', '!COMP:*', '-SPEC:iWH', '-COMP:uWH', '-COMP:A', 'LF:towards', '-SPEC:V', 'PF:towards', 'ARG', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', '-float', 'COMP:D', 'TAIL:V', 'PHI:NUM:_', 'LANG:EN', '-VAL', 'P', '-COMP:ADV', '-SPEC:N', 'adjoinable'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'PF:tonaise', 'LANG:FI', 'LF:nudge', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', '!COMP:*', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'CLASS:TR', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'COMP:D', '-COMP:P', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
tta             {'LANG:FI', '-SPEC:C', '-COMP:T', '-SPEC:FORCE', '-SPEC:P', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:C/fin', '-SPEC:v', '-SPEC:T/fin', '-SPEC:iR', '-SPEC:ADV', 'COMP:n/MA', '!COMP:*', '-SPEC:iWH', 'PF:tta', '-COMP:uWH', '-COMP:A', '-SPEC:V', 'ADV', 'ARG', '-COMP:N', 'SPEC:*', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:INF', 'COMP:D', 'PHI:NUM:_', 'LF:without', '-VAL', 'P', '-COMP:ADV', '-SPEC:N', 'adjoinable'}
tries           ['LANG:EN']
try-            {'LF:try', '!COMP:-ARG', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:D', 'PF:try', 'SEM:internal', '-COMP:v', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'ARG', '-COMP:N', 'V', '!COMP:TO/inf', 'ASP', 'SPEC:P', 'LANG:EN', '-VAL', 'PHI:NUM:_'}
verifiche       {'-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'LANG:IT', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'N', 'PF:verifiche', '-SPEC:ADV', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'LF:verification', 'COMP:D/rel', '-SPEC:N'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'LANG:FI', '-SPEC:FORCE', 'PHI:PER:_', '-COMP:MA/inf', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', '-COMP:D', 'SPEC:D', 'CLASS:INTR', '-COMP:v', '!COMP:P', 'SPEC:TO/inf', 'LF:flow', 'COMP:P', 'PF:virtaa', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'SPEC:ADV', '-VAL', 'PHI:NUM:_'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', '-SPEC:*', 'PHI:GEN:_', 'SEM:internal', 'PF:volu', '!COMP:*', '-COMP:v', 'LF:want', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'LANG:EN', '-VAL', 'PHI:NUM:_'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'-SPEC:FORCE', 'PHI:PER:_', 'LF:win', 'ASP:BOUNDED', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'SEM:achievement', '!COMP:*', '-COMP:v', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'CLASS:TR', 'ARG', '-COMP:N', 'V', 'PF:voitta', 'ASP', 'SPEC:P', 'COMP:D', '-COMP:P', 'LANG:EN', '-VAL', 'PHI:NUM:_'}
wants           ['LANG:EN']
want-           {'-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', '!COMP:*', '-COMP:v', 'LF:want', 'SPEC:ADV', 'COMP:P', 'CLASS:TR', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'PF:want', 'COMP:D', '-COMP:P', 'LANG:EN', '-VAL', '-SPEC:TO/inf', 'PHI:NUM:_', 'COMP:TO/inf'}
what            ['LANG:EN']
what-           {'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'SPEC:A', '-COMP:A', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', 'LF:what', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:T/prt', 'PF:what', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'LANG:EN', 'PHI_N', '-SPEC:N'}
which           {'-SPEC:C', '-ARG', '-SPEC:P', '-SPEC:T/fin', '-COMP:D', 'COMP:N', 'OP:WH', '!COMP:*', 'LF:which', 'OP', '-SPEC:V', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', '-COMP:P', 'D', 'LANG:EN', '-COMP:uR', 'PF:which', 'adjoinable'}
who             ['LANG:EN']
who-            {'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'SPEC:A', 'PF:who', '-COMP:A', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', '-SPEC:INF', 'COMP:C', 'LF:who', 'COMP:D/rel', 'LANG:EN', 'PHI_N', '-SPEC:N'}
whether         {'COMP:T/fin', 'FIN', '-SPEC:*', 'FORCE', 'OP:WH', '!COMP:*', 'OP', '!PROBE:FIN', 'OP:Q', 'PF:whether', 'Q', 'COMP:C/fin', 'LF:whether', 'LANG:EN', '-VAL', '-ARG'}
yrittaa         ['LANG:FI']
yritta-         {'LF:try', '!COMP:A/inf', '!COMP:-ARG', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:D', 'SEM:internal', 'PF:yritta', '-COMP:v', 'SPEC:ADV', 'SPEC:TO/inf', 'COMP:P', 'ARG', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'LANG:EN', '-VAL', 'PHI:NUM:_'}
mina            ['LANG:EN']
mina-           {'LANG:FI', 'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'SPEC:A', '-COMP:A', 'LF:I', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', '-SPEC:INF', 'PF:mina', 'COMP:C', 'COMP:D/rel', 'PHI_N', '-SPEC:N'}
sina            ['LANG:EN']
sina-           {'LANG:FI', 'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'SPEC:A', '-COMP:A', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', 'LF:you', 'PF:sina', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'PHI_N', '-SPEC:N'}
han             ['LANG:EN']
han-            {'LANG:FI', 'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'SPEC:A', '-COMP:A', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', 'PF:han', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'PHI_N', 'LF:s/he', '-SPEC:N'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'LANG:FI', 'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'SPEC:A', '-COMP:A', 'LF:we', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', 'PF:me', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'PHI_N', '-SPEC:N'}
te              ['LANG:EN']
te-             {'LANG:FI', 'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'SPEC:A', '-COMP:A', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', 'LF:you', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', 'PF:te', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'PHI_N', '-SPEC:N'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'LANG:FI', 'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'SPEC:A', '-COMP:A', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', 'LF:they', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'PF:he', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'PHI_N', '-SPEC:N'}
se              {'LANG:FI', '-SPEC:C', '-ARG', '-SPEC:P', 'LF:the/that', '-SPEC:T/fin', '-COMP:D', 'COMP:N', '!COMP:*', 'OP', 'PF:se', '-SPEC:V', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', '-COMP:P', 'D', '-COMP:uR', 'adjoinable'}
sen             {'LANG:FI', '-SPEC:C', '-ARG', '-SPEC:P', 'PF:sen', 'LF:the/that', 'TAIL:*POL:NEG', '-SPEC:T/fin', 'TAIL:PHI', '-COMP:D', 'COMP:N', '!COMP:*', 'OP', '-SPEC:V', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', '-COMP:P', 'D', '-COMP:uR', 'adjoinable', 'TAIL:ASP'}
I               ['LANG:EN']
I-              {'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'SPEC:A', '-COMP:A', 'LF:I', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', '-SPEC:INF', 'COMP:C', 'PF:I', 'COMP:D/rel', 'LANG:EN', 'PHI_N', '-SPEC:N'}
you             ['LANG:EN']
you-            {'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'SPEC:A', '-COMP:A', 'PF:you', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', 'LF:you', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'LANG:EN', 'PHI_N', '-SPEC:N'}
he              ['LANG:EN']
he-             {'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'SPEC:A', '-COMP:A', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'PF:he', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', 'LF:he', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'LANG:EN', 'PHI_N', '-SPEC:N'}
she             ['LANG:EN']
she-            {'LF:she', 'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'PF:she', 'SPEC:A', '-COMP:A', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'LANG:EN', 'PHI_N', '-SPEC:N'}
we              ['LANG:EN']
we-             {'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'SPEC:A', '-COMP:A', 'LF:we', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:T/prt', 'PF:we', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'LANG:EN', 'PHI_N', '-SPEC:N'}
you_pl          ['LANG:EN']
you_pl-         {'-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'PF:you_pl', 'N', 'LF:you_pl', '-SPEC:ADV', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'LANG:EN', 'PHI', '-SPEC:N'}
they            ['LANG:EN']
they-           {'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'SPEC:A', '-COMP:A', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', 'LF:they', 'PHI_N', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'LANG:EN', 'PF:they', '-SPEC:N'}
it              ['LANG:EN']
it-             {'-SPEC:C', '-ARG', '-SPEC:P', 'PF:it', 'LF:it/that', '-SPEC:T/fin', '-COMP:D', 'COMP:N', '!COMP:*', 'OP', '-SPEC:V', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', '-COMP:P', 'D', 'LANG:EN', '-COMP:uR', 'adjoinable'}
io              ['LANG:EN']
io-             {'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'SPEC:A', '-COMP:A', 'LF:I', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'PHI_N', 'PF:io', '-SPEC:N'}
tu              ['LANG:EN']
tu-             {'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'SPEC:A', '-COMP:A', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', 'LF:you', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', 'PF:tu', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'PHI_N', '-SPEC:N'}
lui             ['LANG:EN']
lui-            {'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'SPEC:A', '-COMP:A', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', '-SPEC:T/fin', 'N', 'PF:lui', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', 'LF:he', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'PHI_N', '-SPEC:N'}
lei             ['LANG:EN']
lei-            {'LF:she', 'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'PF:lei', 'SPEC:A', '-COMP:A', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'PHI_N', '-SPEC:N'}
noi             ['LANG:EN']
noi-            {'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'SPEC:A', '-COMP:A', 'LF:we', '-SPEC:V', 'PF:noi', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'PHI_N', '-SPEC:N'}
voi             ['LANG:EN']
voi-            {'COMP:R', '-SPEC:C/fin', '-COMP:V', 'LF:you_pl', '-SPEC:ADV', 'SPEC:A', '-COMP:A', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', 'PF:voi', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'PHI_N', '-SPEC:N'}
loro            ['LANG:EN']
loro-           {'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'SPEC:A', '-COMP:A', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', 'LF:they', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', '-SPEC:T/fin', 'N', 'PF:loro', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'PHI_N', '-SPEC:N'}
mi              ['LANG:EN']
mi-             {'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', '-SPEC:N', 'SPEC:A', '-COMP:A', 'CL', '-SPEC:V', '-COMP:C/fin', 'LF:me', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'PHI_N', 'PF:mi(cl)'}
la              ['LANG:EN']
la-             {'COMP:R', '-SPEC:C/fin', 'LF:her', '-COMP:V', '-SPEC:ADV', 'SPEC:A', '-COMP:A', 'CL', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'PF:la(cl)', '-COMP:N', '-COMP:VA/inf', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'PHI_N', '-SPEC:N'}
lo              ['LANG:EN']
lo-             {'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', '-SPEC:N', 'SPEC:A', '-COMP:A', 'CL', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', 'PF:lo(cl)', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'PHI_N', 'LF:him'}
si              ['LANG:EN']
si-             {'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'PF:si(cl)', 'SPEC:A', '-COMP:A', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', '-SPEC:T/fin', 'LF:3sg', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'PHI_N', 'CAL:CL', '-SPEC:N'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'COMP:R', '-SPEC:C/fin', '-COMP:V', '-SPEC:ADV', 'SPEC:A', '-COMP:A', 'PF:ci', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', 'LF:there', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:uWH', '-COMP:v', 'COMP:R/D', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'PHI_N', '-SPEC:N'}
[-n]            {'PHI:HUM:HUM', 'LANG:FI', 'PHI:DET:DEF', 'inflectional', 'PHI', 'PHI:PER:1', 'PHI:NUM:SG'}
[-t]            {'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:2', 'PHI:DET:DEF', 'inflectional', 'PHI', 'PHI:NUM:SG'}
[-V]            {'LANG:FI', 'inflectional', 'PHI', 'PHI:PER:3', 'PHI:NUM:SG'}
[-mme]          {'PHI:HUM:HUM', 'LANG:FI', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI', 'PHI:PER:1', 'inflectional'}
[-mme]          {'PHI:HUM:HUM', 'LANG:FI', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:1', 'inflectional'}
[-tte]          {'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI', 'inflectional'}
[-vat]          {'LANG:FI', 'PHI:NUM:PL', 'inflectional', 'PHI', 'PHI:PER:3'}
[-ni]           {'PHI:HUM:HUM', 'LANG:FI', 'PHI:DET:DEF', 'inflectional', 'PHI', 'PHI:PER:1', 'PHI:NUM:SG'}
[-si]           {'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:2', 'PHI:DET:DEF', 'inflectional', 'PHI', 'PHI:NUM:SG'}
[-nsa]          {'LANG:FI', 'inflectional', 'PHI', 'PHI:PER:3', 'PHI:NUM:SG'}
[-an]           {'LANG:FI', 'PHI:DET:DET', 'inflectional', 'PHI', 'PHI:PER:3', 'PHI:NUM:SG'}
[-nne]          {'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:NUM:PL', 'inflectional'}
[-s]            {'PHI:GEN:F', 'PHI:GEN:M', 'PHI', 'LANG:EN', 'PHI:PER:3', 'PHI:NUM:SG', 'inflectional'}
[-0]            {'PHI:PER:2', 'PHI:NUM:PL', 'inflectional', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:PER:1', 'PHI:NUM:SG', 'LANG:EN', 'PHI', 'PHI:PER:3'}
[-o]            {'PHI:HUM:HUM', 'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI:PER:1', 'PHI', 'PHI:NUM:SG'}
[-i]            {'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI', 'PHI:NUM:SG'}
[-a]            {'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI', 'PHI:PER:3', 'PHI:NUM:SG'}
[-e]            {'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI', 'PHI:PER:3', 'PHI:NUM:SG'}
[-iamo]         {'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:PL', 'LANG:IT', 'PHI:PER:1', 'PHI', 'inflectional'}
[-te]           {'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:NUM:PL', 'LANG:IT', 'PHI', 'inflectional'}
[-no]           {'PHI:DET:DEF', 'PHI:NUM:PL', 'LANG:IT', 'PHI', 'PHI:PER:3', 'inflectional'}
[-nom]          {'NOM', 'inflectional', 'TAIL:FIN,ARG,VAL', 'LANG:EN', 'adjoinable'}
[-par]          {'LANG:FI', 'TAIL:ARG,-VAL', 'inflectional', 'PAR', 'adjoinable'}
[-gen]          {'-float', 'GEN', 'inflectional', 'LANG:EN', 'TAIL:INF,ARG'}
gen             {'-float', 'GEN', 'inflectional', 'LANG:EN', 'TAIL:INF,ARG'}
[-n_acc]        {'LANG:FI', 'TAIL:PHI', 'inflectional', 'n-ACC', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable'}
[-t_acc]        {'LANG:FI', 'inflectional', 't-ACC', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable'}
[-0_acc]        {'LANG:FI', 'adjoinable', 'inflectional', 'TAIL:*PHI', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', '0_ACC'}
asp             {'LANG:EN', 'ASP:BOUNDED', 'inflectional'}
a'              {'LF:A', 'a', 'PF:a', 'LANG:X'}
b'              {'LF:B', 'LANG:X', 'b', 'PF:b'}
b''             {'b', 'PF:b', '-COMP:c', 'LANG:EN', 'LF:B'}
c''             {'SPEC:a', 'LANG:EN', 'PF:c', 'LF:C', 'c'}
c'              {'PF:c', 'LF:C', 'c', 'LANG:X'}
d'              {'LF:D', 'PF:d', 'LANG:', 'd'}
a''             ['LANG:EN']
x'              {'LF:X', 'x', 'PF:x', 'LANG:X'}
y'              {'PF:y', 'LF:Y', 'y', 'LANG:X'}
z'              {'z', 'LF:Z', 'PF:x', 'LANG:X'}
John'           {'LANG:X', 'LF:John', "N'", 'PF:John'}
admires'        {"V'", 'LF:admires', 'LANG:X', 'PF:admires'}
admires''       {'-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:D', '-COMP:v', 'LF:admires', 'SPEC:TO/inf', 'COMP:P', 'ARG', 'PF:admires', '-COMP:N', 'V', 'ASP', 'SPEC:P', 'SPEC:ADV', '-VAL', 'LANG:EN', 'PHI:NUM:_'}
Mary'           {'PF:Mary', 'LF:mary', "N'", 'LANG:X'}
T/fin           {'-SPEC:C', 'PHI:PER:_', 'FIN', 'SPEC:FORCE', 'COMP:v', 'COMP:T/prt', 'PHI:DET:_', '-SPEC:v', '-SPEC:T/fin', '-SPEC:Neg', 'PHI:GEN:_', 'SPEC:D', '!COMP:*', 'T/fin', 'PF:T', 'LF:T', 'VAL', '-SPEC:V', 'SPEC:TO/inf', 'T', '!SPEC:*', 'ARG', 'SPEC:*', 'SPEC:C/fin', '-COMP:T/fin', '-COMP:INF', 'PHI:NUM:_', 'COMP:V', 'LANG:EN', '-SPEC:TO/inf', '!PROBE:V', '-SPEC:N'}
v               {'v', 'PF:v', 'PHI:PER:_', 'PHI:DET:_', 'LF:v', 'ARG', 'ASP', 'PHI:GEN:_', 'SPEC:D', 'PHI:NUM:_', 'COMP:V', 'LANG:EN', '!COMP:*', '-VAL', '!PROBE:V', '-SPEC:N'}
C/fin           {'COMP:T/fin', 'FIN', '-COMP:T/prt', 'C', '-SPEC:C/fin', 'C/fin', '-SPEC:T/fin', '!COMP:*', 'VAL', '!PROBE:FIN', 'COMP:Neg/fin', 'LF:C/fin', '-COMP:C/fin', 'SPEC:*', 'PF:C', 'LANG:EN', '-SPEC:N', '-ARG'}
T               {'-SPEC:FORCE', 'PHI:PER:_', 'FIN', 'PHI:DET:_', 'COMP:v', 'COMP:T/prt', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:D', '!COMP:*', 'PF:T', 'LF:T', 'VAL', '-SPEC:V', '-COMP:NEG', 'T', 'ARG', 'SPEC:*', 'PHI:NUM:_', 'COMP:V', 'LANG:EN', '!PROBE:V', '-SPEC:N'}
T/prt           {'-SPEC:FORCE', 'PHI:PER:_', 'FIN', 'PHI:DET:_', 'COMP:T/prt', 'COMP:v', '-SPEC:C/fin', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:D', '!COMP:*', 'T/prt', 'VAL', 'LF:T/prt', '-SPEC:V', 'PF:T/prt', '-COMP:NEG', 'T', 'ARG', 'SPEC:*', 'COMP:D', 'PHI:NUM:_', 'COMP:V', 'LANG:EN', '!PROBE:V', '-SPEC:N'}
a0              {'A', '-adjoinable', 'PF:A', '-SPEC:D', 'LANG:EN', 'TAIL:D', 'COMP:0', 'LF:A', '-SPEC:A'}
n               {'COMP:R', '-SPEC:C/fin', 'COMP:v', '-COMP:V', 'LF:n', '-SPEC:ADV', 'SPEC:A', '-COMP:A', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', '-COMP:VA/inf', 'ARG', 'COMP:V', 'COMP:0', 'INF', 'PHI:NUM:_', 'PF:n', '-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'PHI:PER:_', 'PHI:DET:_', 'COMP:T/prt', '!SPEC:D', '-SPEC:T/fin', 'N', 'PHI:GEN:_', '!COMP:*', '-SPEC:uWH', '-COMP:v', 'VAL', 'COMP:R/D', '!SPEC:*', 'SPEC:*', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'LANG:EN', 'n', '-SPEC:N'}
impass          {'v', '-VAL', 'PHI:PER:_', 'PHI:DET:_', 'LF:impass', 'ARG', 'ASP', 'PHI:GEN:_', 'SPEC:D', 'PHI:NUM:_', 'COMP:V', 'LANG:EN', '!COMP:*', 'PF:impass', '!PROBE:V', '-SPEC:N'}
cau             {'v', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'PF:Cau', 'ASP', 'PHI:GEN:_', 'SPEC:D', 'PHI:NUM:_', 'COMP:V', 'LANG:EN', '!COMP:*', '-VAL', 'LF:v/Cause', '!PROBE:V', '-SPEC:N'}
INF             {'LF:INF', '-SPEC:V', '-COMP:C/fin', 'COMP:v', 'PF:INF', '-SPEC:T/fin', '-COMP:T/fin', 'COMP:V', 'LANG:EN', '!COMP:*', '-COMP:FORCE', 'INF'}
prtcpl          {'-SPEC:FORCE', 'PHI:PER:_', 'FIN', 'PHI:DET:_', 'COMP:v', '-SPEC:C/fin', 'COMP:T/prt', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:D', '-SPEC:N', '!COMP:*', 'T/prt', 'VAL', 'LF:T/prt', '-SPEC:V', 'PF:T/prt', '-COMP:NEG', '-COMP:C/fin', 'T', 'ARG', 'SPEC:*', '-COMP:T/fin', 'COMP:D', 'PHI:NUM:_', 'COMP:V', 'LANG:EN', '-COMP:FORCE', '!PROBE:V', 'INF'}
TO/inf          {'PF:TO/inf', '?ARG', 'COMP:v', '-SPEC:v', '-SPEC:T/fin', 'TO/inf', 'LF:TO/inf', '!COMP:*', '-SPEC:V', '-COMP:C/fin', '-COMP:T/fin', '!COMP:V', 'COMP:V', 'LANG:EN', '-VAL', '-COMP:FORCE', 'INF', 'adjoinable'}
A/inf           {'?ARG', 'COMP:v', '-SPEC:T/fin', 'PF:A/inf', '!COMP:*', 'A/inf', '-SPEC:V', '-COMP:C/fin', 'SPEC:*', '-SPEC:Neg/fin', 'LF:A/inf', '-COMP:T/fin', 'COMP:V', 'INF', '-COMP:FORCE', 'LANG:EN', '?VAL'}
ARE/inf         {'?ARG', '-adjoinable', 'COMP:v', '-SPEC:T/fin', 'PF:are', '!COMP:*', 'VAL', 'ARE/inf', '-SPEC:V', '-COMP:C/fin', 'SPEC:*', '-COMP:T/fin', 'COMP:V', '-COMP:FORCE', 'LANG:EN', 'INF', 'LF:ARE/inf'}
ESSA/inf        {'?ARG', '-SPEC:FORCE', 'COMP:v', '-SPEC:T/fin', 'PF:essa', '-SPEC:N', '!COMP:*', 'LF:while', 'TAIL:T', '-SPEC:V', '-COMP:C/fin', 'ADV', 'SPEC:*', '-SPEC:Neg/fin', '-COMP:T/fin', '?VAL', 'COMP:V', 'LANG:EN', '-COMP:FORCE', 'ESSA/inf', 'INF', 'adjoinable'}
TUA/inf         {'-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', 'COMP:v', '-SPEC:T/fin', 'TUA/inf', 'PHI:GEN:_', 'PF:tua', '-SPEC:N', '!COMP:*', 'LF:after', 'TAIL:T', 'VAL', '-SPEC:V', '-COMP:C/fin', 'ADV', '!SPEC:*', 'ARG', '-SPEC:Neg/fin', 'SPEC:*', '-COMP:T/fin', 'PHI:NUM:_', 'COMP:V', 'LANG:EN', '-COMP:FORCE', 'INF', 'adjoinable'}
VA/inf          {'INF', 'PHI:PER:_', 'PHI:DET:_', 'COMP:v', 'VA/inf', '-SPEC:T/fin', 'PHI:GEN:_', '!COMP:*', 'VAL', '-SPEC:V', 'PF:vAn', '-COMP:C/fin', '!SPEC:*', 'ARG', 'SPEC:*', '-COMP:T/fin', 'PHI:NUM:_', 'COMP:V', 'LF:VA', '-COMP:FORCE', 'LANG:EN', '-SPEC:N'}
MA/ssa          {'PF:massa', 'LF:in_doing', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', 'COMP:v', '-SPEC:T/fin', '-SPEC:*', 'PHI:GEN:_', 'MA/ssa', 'MA/inf', 'ADV', 'ARG', '-SPEC:Neg/fin', 'TAIL:V', 'PHI:NUM:_', 'COMP:V', '-VAL', 'LANG:EN', '-SPEC:N', 'adjoinable'}
MA/tta          {'MA/inf', '-SPEC:FORCE', 'PHI:PER:_', 'LF:without_doing', 'ADV', 'PHI:DET:_', 'ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', 'PHI:GEN:_', 'PHI:NUM:_', 'adjoinable', 'LANG:EN', 'PF:matta', '-VAL', '-SPEC:N', 'TAIL:T'}
MA/lla          {'COMP:v', 'TAIL:T', 'MA/inf', 'ARG', 'COMP:V', '-VAL', 'PHI:NUM:_', 'adjoinable', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:T/fin', 'PHI:GEN:_', 'ADV', '-SPEC:Neg/fin', 'PF:malla', 'LANG:EN', 'LF:by_doing', '-SPEC:N'}
MA/inf          {'COMP:v', 'PF:maan', 'MA/inf', 'ARG', 'LF:to_do', 'TAIL:V', 'COMP:V', '-VAL', 'PHI:NUM:_', 'adjoinable', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:T/fin', 'PHI:GEN:_', 'ADV', '-SPEC:Neg/fin', 'LANG:EN', '-SPEC:N'}
E/inf           {'LANG:FI', '-SPEC:FORCE', 'LF:by', 'ADV', '-SPEC:T/fin', '-SPEC:Neg/fin', 'SPEC:*', 'TAIL:T', 'adjoinable', 'PF:en', '-VAL', '-SPEC:N', '-ARG'}
BE-             {'PF:BE', '-SPEC:FORCE', 'COMP:T/prt', '-COMP:V', '-SPEC:T/fin', 'SPEC:D', '!COMP:*', 'LF:BE', '-COMP:v', 'SPEC:ADV', 'SPEC:TO/inf', 'COPULA', 'COMP:P', '-COMP:N', 'V', '-COMP:T/fin', 'ASP', 'SPEC:P', 'LANG:EN', '-VAL', '-ARG'}
D               {'-SPEC:C', '-ARG', '-SPEC:P', 'LF:D', '-SPEC:T/fin', '-COMP:D', 'COMP:N', 'PF:D', '!COMP:*', 'OP', '-SPEC:V', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', '-COMP:P', 'D', 'LANG:EN', '-COMP:uR', 'adjoinable'}
D/rel           {'-SPEC:C', 'OP:_', '-ARG', '-SPEC:P', 'LF:D/rel', '-SPEC:T/fin', 'OP:REL', '-COMP:D', 'COMP:N', '!COMP:*', 'OP', '-SPEC:V', 'D/rel', '!PROBE:N', '-COMP:C/fin', 'inflectional', '-SPEC:MA/lla', 'PF:D/rel', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', '-COMP:uR', 'D', 'LANG:EN', 'adjoinable'}
P               {'-SPEC:C', '-COMP:T', '-SPEC:FORCE', '-SPEC:P', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:C/fin', '-SPEC:v', '-SPEC:T/fin', '-SPEC:iR', '-SPEC:*', 'PHI:GEN:_', '-SPEC:ADV', '!COMP:*', '-SPEC:iWH', '-COMP:uWH', '-COMP:A', '-SPEC:V', 'LF:P', 'PF:P', 'ARG', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', '-float', 'COMP:D', 'PHI:NUM:_', 'LANG:EN', '-VAL', 'P', '-COMP:ADV', '-SPEC:N', 'adjoinable'}
pro             ['LANG:EN']
pro-            {'-SPEC:R', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:P', 'COMP:uR', 'COMP:R', '-SPEC:C/fin', 'PF:(pro)', '-COMP:V', 'COMP:T/prt', '-SPEC:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-SPEC:uWH', '-COMP:v', '-COMP:A', 'COMP:R/D', '-SPEC:V', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '-COMP:N', 'LF:pro', '-COMP:VA/inf', '-SPEC:INF', 'COMP:C', 'COMP:D/rel', 'LANG:EN', 'PHI', '-SPEC:N'}
cl              {'LEFT:D,CL', 'CL', 'RIGHT:ARE/inf', 'LEFT:T/fin', 'RIGHT:PRG', 'inflectional', 'LANG:EN'}
inc             {'INCORPORATED', 'LANG:EN', 'inflectional'}
sg              {'LANG:EN', 'PHI:NUM:SG', 'inflectional'}
pl              {'LANG:EN', 'PHI:NUM:PL', 'inflectional'}
1p              {'PHI:PER:1', 'LANG:EN', 'inflectional'}
2p              {'PHI:PER:2', 'LANG:EN', 'inflectional'}
3p              {'LANG:EN', 'PHI:PER:3', 'inflectional'}
def             {'LANG:EN', 'PHI:DET:DEF', 'inflectional'}
indef           {'LANG:EN', 'PHI:DET:INDEF', 'inflectional'}
hum             {'PHI:HUM:HUM', 'LANG:EN', 'inflectional'}
nonhum          {'LANG:EN', 'PHI:HUM:NONHUM', 'inflectional'}
m               {'PHI:GEN:M', 'LANG:EN', 'inflectional'}
f               {'PHI:GEN:F', 'LANG:EN', 'inflectional'}
nom             {'LANG:EN', 'NOM', 'TAIL:FIN,!COMP:*,VAL', 'inflectional'}
acc             {'TAIL:v', 'LANG:EN', 'ACC', 'inflectional'}
dat             {'LANG:EN', 'DAT', 'TAIL:v', 'inflectional'}
uC/op           {'LANG:EN', 'uC/op', 'inflectional'}
wh              {'OP:_', 'LANG:EN', 'OP:WH', 'inflectional'}
wh_             {'OP', 'OP:_', 'FORCE:OP:WH', 'inflectional', 'LANG:EN'}
top             {'OP:TOP', 'LANG:EN', 'inflectional'}
foc             {'LANG:EN', 'OP:FOC', 'inflectional'}
C/op            {'LANG:EN', 'OP:C/OP', 'inflectional'}
Q               {'OP', 'OP:WH', 'inflectional', 'OP:Q', 'LANG:EN'}
