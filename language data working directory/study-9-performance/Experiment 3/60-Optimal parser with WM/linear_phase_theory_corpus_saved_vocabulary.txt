ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'P', '!COMP:*', '-SPEC:N', '-COMP:N', 'LF:to', '-SPEC:INF', '-ARG', '-SPEC:*', 'COMP:ARE/inf', '-SPEC:Neg/fin', '-SPEC:iWH', '-COMP:T', '-SPEC:v', 'COMP:D', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:V', '-COMP:T/fin', 'LANG:IT', '-COMP:ADV', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:iR', '-VAL', '-SPEC:C', '-COMP:uWH', '-SPEC:P', 'adjoinable', 'PF:a', 'TAIL:V'}
a_D             {'!COMP:*', '-SPEC:INF', '-ARG', '-COMP:D', '-SPEC:Neg/fin', '-COMP:T/fin', '-COMP:P', '-SPEC:V', 'PF:D', 'LF:D', 'OP', '-SPEC:MA/lla', '!PROBE:N', 'D', 'COMP:N', '-SPEC:C', '-SPEC:P', '-COMP:uR', 'adjoinable', 'LANG:EN', '-SPEC:T/fin'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', 'PF:admire', 'COMP:D', '-SPEC:FORCE', '-COMP:Neg', '-COMP:T/fin', 'SPEC:ADV', '-COMP:P', '-SPEC:Neg', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'LF:admire', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:TR', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', 'ASP'}
admire*         ['LANG:EN']
T/fin*          {'NO_DET', "PF:T/fin'", 'LF:T', 'NO_NUMBER', '-VAL', 'CAT:T/fin', 'LANG:EN', '!SPEC:*'}
v*              {'PF:v', 'LF:v', 'NO_DET', 'CAT:v', 'LANG:EN', 'NO_NUMBER', '-VAL'}
admire**        ['LANG:EN']
T/fin**         {"PF:T/fin''", 'NO_DET', 'LF:T', 'NO_NUMBER', '-VAL', 'PHI:PER:3', 'CAT:T/fin', 'NO_PERSON', 'LANG:EN', '!SPEC:*'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'-COMP:v', '-COMP:N', 'SPEC:P', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'LANG:IT', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'LF:admire', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'PF:adora', '-COMP:V', '-SPEC:T/fin', 'ASP'}
antaa           ['LANG:FI']
anta-           {'!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', 'LANG:FI', 'ASP:BOUNDED', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', '-COMP:FIN', 'LF:give', 'SPEC:D', 'V', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-VAL', 'PF:antaa', 'PHI:DET:_', '+SEM:directional', '-COMP:V', 'CLASS:DITR', '-SPEC:T/fin', 'ASP'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'-COMP:v', '-COMP:N', 'SPEC:P', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'LF:ask', 'SPEC:D', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'PF:ask', 'SEM:internal', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', 'ASP'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'PF:avain', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', 'LF:key', '-SEM:directional', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-SPEC:R', '-COMP:WH'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'LF:car', '-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'LANG:FI', 'SPEC:A', 'PF:auto', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SEM:directional', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-SPEC:R', '-COMP:WH'}
bank            {'-SPEC:N', '-COMP:v', 'PF:bank1', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'FREQ:1', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', 'LF:bank_inst', '-COMP:V', 'LANG:EN', '-SPEC:R', '-COMP:WH'}
bank            {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'SPEC:A', 'LF:bank_river', '-SPEC:FORCE', 'PF:bank2', '-SPEC:V', '-SPEC:C/fin', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:V', 'LANG:EN', '-SPEC:R', '-COMP:WH', 'FREQ:2'}
barn            {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'PF:barn', 'COMP:C', '-COMP:A', '-SPEC:T/fin', 'LF:barn', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:V', 'LANG:EN', '-SPEC:R', '-COMP:WH'}
city            {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', 'LF:city', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', 'PF:city', '-SPEC:P', '-COMP:V', 'LANG:EN', '-SPEC:R', '-COMP:WH'}
che             ['LANG:IT']
che-            {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'LANG:IT', 'LF:who', 'COMP:C', '-COMP:A', '-SPEC:ADV', 'PF:che', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:*'}
chiamato        ['LANG:IT']
chiamata-       {'-COMP:v', '-COMP:N', 'SPEC:P', '-SPEC:FORCE', 'SPEC:ADV', 'PF:chiamato', 'LANG:IT', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'LF:called', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'ASP'}
claims          ['LANG:EN']
claim-          {'-COMP:v', '-COMP:N', 'SPEC:P', '-COMP:D', 'COMP:T/fin', '-SPEC:FORCE', 'SPEC:ADV', 'SPEC:D', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'PF:claim', 'LF:claim', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', 'ASP'}
danno           {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'PF:danno', 'COMP:R/D', 'COMP:R', 'LF:damage', 'LANG:IT', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-SPEC:R', '-COMP:WH'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'-COMP:v', '-COMP:N', 'SPEC:P', 'COMP:ARE/inf', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'PF:detest', 'LANG:IT', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'SEM:internal', 'LF:detest', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'ASP'}
devono          ['LANG:EN']
deva-           {'-COMP:v', '-COMP:N', 'SPEC:P', 'COMP:ARE/inf', '-SPEC:FORCE', 'SPEC:ADV', 'SPEC:D', 'LANG:IT', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'PF:deva', 'ARG', 'SPEC:TO/inf', 'SEM:internal', 'COMP:P', 'PHI:PER:_', '-VAL', '-ASP', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'LF:must'}
di              {'P', '!COMP:*', '-SPEC:N', '-COMP:N', '-SPEC:INF', 'LANG:FI', '-SPEC:iWH', '-SPEC:Neg/fin', '-COMP:T', '-SPEC:v', 'COMP:D', '-SPEC:C/fin', '-SPEC:FORCE', 'PF:di', '-SPEC:V', '-COMP:T/fin', 'SPEC:*', '-COMP:ADV', 'PHI:NUM:_', '-adjoinable', 'ARG', '-COMP:A', '-SPEC:ADV', '-SPEC:iR', '-VAL', 'PHI:PER:_', 'LF:of', '-SPEC:C', '-COMP:uWH', '-SPEC:P', 'PHI:DET:_', '-SPEC:T/fin'}
does            {'!COMP:*', 'SPEC:FORCE', 'COMP:Neg', '-SPEC:V', 'PHI:GEN:F', 'SPEC:D', 'FIN', 'COMP:v', 'ARG', 'SPEC:TO/inf', 'COMP:V', '-COMP:INF', 'PHI:NUM:SG', '-SPEC:C', 'LF:does', '!PROBE:V', 'T', '!SPEC:*', '-SPEC:T/fin', '-SPEC:N', 'T/fin', 'PF:does', 'PHI:PER:3', 'PHI:GEN:M', '-SPEC:v', 'SPEC:C/fin', '-COMP:T/fin', '-SPEC:TO/inf', '-SPEC:Neg', 'SPEC:*', 'COMP:T/prt', 'PHI:NUM:_', 'PHI:GEN:_', 'VAL', 'PHI:PER:_', 'PHI:DET:_', 'LANG:EN'}
does_C          ['LANG:EN']
does-           {'!COMP:*', 'SPEC:FORCE', 'COMP:Neg', '-SPEC:V', 'PHI:GEN:F', 'SPEC:D', 'FIN', 'COMP:v', 'ARG', 'SPEC:TO/inf', 'COMP:V', '-COMP:INF', 'PHI:NUM:SG', '-SPEC:C', 'LF:does', '!PROBE:V', 'T', '!SPEC:*', '-SPEC:T/fin', '-SPEC:N', 'T/fin', 'PF:does', 'PHI:PER:3', 'PHI:GEN:M', '-SPEC:v', 'SPEC:C/fin', '-COMP:T/fin', '-SPEC:TO/inf', '-SPEC:Neg', 'SPEC:*', 'COMP:T/prt', 'PHI:NUM:_', 'PHI:GEN:_', 'VAL', 'PHI:PER:_', 'PHI:DET:_', 'LANG:EN'}
dorme           ['LANG:IT']
dorme-          {'-COMP:v', '!SPEC:D', '-COMP:N', 'SPEC:P', '-COMP:MA/inf', '-COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'SPEC:D', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'PF:dorme', 'COMP:P', '-VAL', 'PHI:PER:_', 'PHI:DET:_', 'CLASS:INTR', 'LF:sleep', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', 'ASP'}
disappeared     ['LANG:EN']
disappear-      {'-COMP:v', '-COMP:N', 'SPEC:P', '-COMP:MA/inf', 'PF:disappear', '-COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'LF:disappear', 'SPEC:D', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:INTR', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', 'ASP'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'PF:easy', '0', 'LANG:EN', 'LF:easy', 'SPEC:D', '2SPEC'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'POL:NEG', '!COMP:*', '!COMP:T', 'LANG:FI', 'SPEC:*', '-SPEC:T', 'COMP:T/prt', 'NEG', 'PHI:NUM:_', 'FIN', 'ARG', '%SPEC:INF', 'VAL', 'SEM:internal', 'Neg/fin', 'PHI:PER:_', 'PF:ei', 'PHI:DET:_', 'LF:neg', '!SPEC:*', '-SPEC:T/fin'}
e-              {'POL:NEG', '!COMP:*', '!COMP:T', 'LANG:FI', 'SPEC:*', '-SPEC:T', 'COMP:T/prt', 'NEG', 'PHI:NUM:_', 'FIN', 'ARG', '%SPEC:INF', 'VAL', 'SEM:internal', 'Neg/fin', 'PHI:PER:_', 'PF:ei', 'PHI:DET:_', 'LF:neg', '!SPEC:*', '-SPEC:T/fin'}
elaa            ['LANG:FI']
ela-            {'LF:live', '-COMP:v', '-COMP:N', 'SPEC:P', '-COMP:MA/inf', '-COMP:D', 'LANG:FI', 'PF:elaa', '-SPEC:FORCE', 'SPEC:ADV', 'SPEC:D', 'V', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:INTR', '-COMP:V', '-SPEC:T/fin', 'ASP'}
etsii           ['LANG:FI']
etsi-           {'!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', 'LANG:FI', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'PF:etsi', '-COMP:P', 'LF:search', 'V', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', '!COMP:D', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:TR', '-COMP:V', '-SPEC:T/fin', 'ASP'}
etta            {'!COMP:*', 'FORCE', 'PF:etta', '-ARG', '-SPEC:*', 'LANG:FI', '-VAL', '!PROBE:FIN', 'COMP:T/fin', '-SPEC:D', 'LF:that', 'COMP:C/fin', 'FIN'}
fell            ['LANG:EN']
fell-           {'-COMP:v', '-COMP:N', 'LF:fell', 'SPEC:P', '-COMP:MA/inf', '-COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'PF:fell', 'SPEC:D', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:INTR', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', 'ASP'}
flow'           {'-COMP:v', '-COMP:N', 'SPEC:P', '-SPEC:FORCE', 'SPEC:ADV', 'SPEC:D', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'PF:flow', 'LF:flow', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', 'ASP'}
from            {'P', '!COMP:*', '-SPEC:N', '-COMP:N', '-SPEC:INF', '-SPEC:*', '-SPEC:Neg/fin', 'TAIL:V,+SEM:directional', 'LF:from', '-SPEC:iWH', '-float', '-COMP:T', '-SPEC:v', 'COMP:D', '-SPEC:V', '-SPEC:C/fin', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:ADV', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', '-COMP:A', '-SPEC:ADV', '-SPEC:iR', '-VAL', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:C', 'PF:from', '-COMP:uWH', '-SPEC:P', 'adjoinable', 'LANG:EN', '-SPEC:T/fin'}
gave            ['LANG:EN']
give-           {'PF:give', '!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', '-COMP:FIN', 'LF:give', 'SPEC:D', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', '+SEM:directional', '-COMP:V', 'LANG:EN', 'CLASS:DITR', '-SPEC:T/fin', 'ASP'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SPEC:N', '-COMP:v', '-COMP:N', 'PF:Giuseppe', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SEM:directional', '-SPEC:uWH', '-SPEC:P', 'LF:Giuseppe', '-COMP:V', '-SPEC:R', '-COMP:WH'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', 'PF:haluaa', '-SPEC:*', 'LANG:FI', 'ASP:BOUNDED', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', '-COMP:P', 'V', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', 'SEM:internal', 'LF:want', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:TR', '-COMP:V', 'COMP:A/inf', '-SPEC:T/fin', 'ASP'}
hairitsee       ['LANG:FI']
hairitse-       {'!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', 'LANG:FI', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', '-COMP:FIN', '-COMP:P', 'SPEC:D', 'V', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', '!COMP:D', 'PF:hairitsee', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'LF:disturb', 'CLASS:TR', '-COMP:V', '-SPEC:T/fin', 'ASP'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'-COMP:v', '-COMP:N', 'SPEC:P', '-SPEC:FORCE', 'PF:ha', 'SPEC:ADV', 'SPEC:*', 'SPEC:D', 'LANG:IT', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'SEM:internal', 'LF:have', 'COMP:P', '-VAL', 'PHI:PER:_', '-ASP', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'COMP:T'}
horse           {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'LF:horse', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', 'PF:horse', 'LANG:EN', '-SPEC:R', '-COMP:WH', '-COMP:V'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'-COMP:v', '-COMP:N', 'SPEC:P', '-COMP:MA/inf', 'PF:havia', '-COMP:D', 'LANG:FI', '-SPEC:FORCE', 'SPEC:ADV', 'LF:disappear', 'SPEC:D', 'V', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:INTR', '-COMP:V', '-SPEC:T/fin', 'ASP'}
Helsingissa     ['LANG:FI']
Helsinki        ['LANG:FI']
Helsinki-       {'-COMP:WH', '-COMP:v', '-SPEC:N', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'LANG:FI', 'LF:Helsinki', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-SPEC:R', 'PF:Helsinki'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', 'LANG:FI', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', '-COMP:FIN', '-COMP:P', 'PF:ihaile-', 'V', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', '!COMP:D', 'LF:admire', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:TR', '-COMP:V', '-SPEC:T/fin', 'ASP'}
il              {'!COMP:*', '-SPEC:INF', '-ARG', '-COMP:D', '-SPEC:Neg/fin', '-COMP:T/fin', '-COMP:P', '-SPEC:V', 'LANG:IT', 'PF:il', 'OP', '-SPEC:MA/lla', '!PROBE:N', 'D', 'COMP:N', '-SPEC:C', '-SPEC:P', '-COMP:uR', 'adjoinable', '-SPEC:T/fin', 'LF:the'}
i               {'!COMP:*', '-SPEC:INF', '-ARG', '-COMP:D', '-SPEC:Neg/fin', '-COMP:T/fin', '-COMP:P', '-SPEC:V', 'LANG:IT', 'PF:il', 'OP', '-SPEC:MA/lla', '!PROBE:N', 'D', 'COMP:N', '-SPEC:C', '-SPEC:P', '-COMP:uR', 'adjoinable', '-SPEC:T/fin', 'LF:the'}
in              {'P', '!COMP:*', '-SPEC:N', '-COMP:N', '-SPEC:INF', 'PF:in', '-SPEC:Neg/fin', '-SPEC:iWH', '-COMP:T', '-SPEC:v', 'COMP:D', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:V', '-COMP:T/fin', 'LANG:IT', '-COMP:ADV', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', '-COMP:A', '-SPEC:ADV', '-SPEC:iR', '-VAL', 'PHI:PER:_', 'PHI:DET:_', 'LF:in', '-SPEC:C', '-COMP:uWH', '-SPEC:P', 'adjoinable', '-SPEC:T/fin'}
infermieri      {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', 'LF:nurses', '-COMP:C/fin', '-SPEC:INF', 'PF:infermieri', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-SPEC:R', '-COMP:WH'}
is              ['LANG:EN']
be-             {'COPULA', '!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', 'PF:be', '-ARG', '-SPEC:FORCE', 'SPEC:ADV', 'SPEC:D', 'ASP', 'V', '-COMP:TO/inf', 'SPEC:TO/inf', 'COMP:P', '-VAL', 'LF:be', 'LANG:EN', '-SPEC:T/fin', '-COMP:V'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'-COMP:v', '-COMP:N', 'SPEC:P', '-COMP:MA/inf', '-COMP:D', 'LANG:FI', '-SPEC:FORCE', 'SPEC:ADV', 'SPEC:D', 'PF:istuu', 'V', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:INTR', 'LF:sit', '-COMP:V', '-SPEC:T/fin', 'ASP'}
John            ['LANG:EN']
John-           {'-COMP:v', 'N', 'PF:John', '-COMP:AUX', '-COMP:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', '-adjoinable', 'COMP:C', '-COMP:A', '-SPEC:ADV', 'LF:John', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', '-SEM:directional', '-SPEC:uWH', '-SPEC:P', 'LANG:EN'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', 'LANG:FI', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'LF:who', 'COMP:C', '-COMP:A', '-SPEC:ADV', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'PF:joka', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:*'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'LANG:FI', 'SPEC:A', 'LF:Jukka', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'PF:Jukka', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SEM:directional', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-SPEC:R', '-COMP:WH'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'-COMP:v', '-COMP:N', 'SPEC:P', 'LANG:FI', '-SPEC:FORCE', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'PF:juokse-', '-COMP:V', '-SPEC:T/fin', 'LF:run', 'ASP'}
kaksi           {'ARG', 'PF:kaksi', 'LF:two', 'PHI:PER:_', 'TAIL:ARG,VAL,FIN', '-VAL', 'LANG:FI', 'COMP:n', 'PHI:NUM:SG', 'COMP:N', 'PHI:DET:_', 'SPEC:*', 'NUM', 'PHI:NUM:_'}
kaksi           {'PF:kaksi', 'LF:two', 'COMP:N', 'COMP:n', 'TAIL:*POL:NEG', 'LANG:EN', 'SPEC:*', 'NUM', 'TAIL:ARG,ASP:BOUNDED'}
kaksi_1         {'ARG', 'PF:kaksi', 'LF:two', 'PHI:PER:_', 'TAIL:ARG,VAL,FIN', '-VAL', 'LANG:FI', 'COMP:n', 'PHI:NUM:SG', 'COMP:N', 'PHI:DET:_', 'SPEC:*', 'NUM', 'PHI:NUM:_'}
kaksi_2         {'PF:kaksi', 'LF:two', 'COMP:N', 'COMP:n', 'TAIL:*POL:NEG', 'LANG:EN', 'SPEC:*', 'NUM', 'TAIL:ARG,ASP:BOUNDED'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'COMP:n', 'PF:kaksi', 'COMP:N', 'LF:two', 'SPEC:*', 'NUM', 'LANG:FI'}
kaupunkia       ['LANG:EN']
kaupunki        {'PF:kaupunki', '-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', '-COMP:P', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', 'LF:city', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-SPEC:R', '-COMP:WH'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'-COMP:v', '-COMP:N', 'SPEC:P', 'SEM:external', 'LANG:FI', '-SPEC:FORCE', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', 'PF:kaske', '!COMP:A/inf', 'LF:order', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'ASP'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'LF:watch', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-SPEC:R', '-COMP:WH', 'PF:kello'}
kello0-         {'PF:kello', '0', '2SPEC', 'SPEC:D', 'LF:watch', 'LANG:FI'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'PF:key', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', 'LF:key', '-SPEC:uWH', '-SPEC:P', '-COMP:V', 'LANG:EN', '-SPEC:R', '-COMP:WH'}
kirja           ['LANG:FI']
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'LANG:FI', 'SPEC:A', 'PF:kirja', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'LF:book', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SEM:directional', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-SPEC:R', '-COMP:WH'}
knows           ['LANG:EN']
know-           {'!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', 'LF:know', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', '-COMP:P', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'PF:know', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:TR', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', 'ASP'}
kohti           {'P', '!COMP:*', '-SPEC:N', '-COMP:N', '-SPEC:INF', 'LANG:FI', '-SPEC:iWH', '-SPEC:Neg/fin', '-COMP:T', '-SPEC:v', 'PF:kohti', 'COMP:D', '-SPEC:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:T/fin', 'SPEC:*', '-COMP:ADV', 'PHI:NUM:_', 'ARG', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', 'LF:towards', '-SPEC:iR', '-VAL', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:C', '-COMP:uWH', '-SPEC:P', 'adjoinable', 'TAIL:V'}
koko            {'TAIL:T', 'LF:all', '!COMP:*', '-COMP:D', '-SPEC:INF', '-ARG', 'LANG:FI', '-SPEC:Neg/fin', 'PF:koko', '-COMP:T/fin', '-COMP:P', '-SPEC:V', 'OP', '-SPEC:MA/lla', '!PROBE:N', 'D', 'COMP:N', '-SPEC:C', '-SPEC:P', '-COMP:uR', 'adjoinable', '-SPEC:T/fin'}
kuka            ['LANG:FI']
kuka-           {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'LF:who', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', 'PHI', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-SPEC:R', '-COMP:WH', 'PF:kuka'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'-COMP:v', '-COMP:N', 'SPEC:P', '-COMP:D', 'LANG:FI', '-SPEC:FORCE', 'SPEC:ADV', '-COMP:T/fin', 'V', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', '-SPEC:T/fin', 'COMP:P', 'PF:kuorsaa', '-VAL', 'PHI:PER:_', 'PHI:DET:_', 'LF:snore', '-COMP:V', '-COMP:WH', 'ASP'}
lahella         {'!COMP:*', 'LF:near', '!SPEC:D', '-COMP:C/fin', 'LANG:FI', '-SPEC:iWH', '-SPEC:V', 'COMP:v', 'ARG', '-COMP:A', 'COMP:V', 'PF:lahella', '-SPEC:ADV', '-SPEC:C', 'INF', '!SPEC:*', '-SPEC:T/fin', 'P', '-SPEC:N', '-COMP:N', '-COMP:FORCE', '-SPEC:INF', '-SPEC:Neg/fin', '-COMP:T', '-SPEC:v', 'COMP:D', '-SPEC:C/fin', '-SPEC:FORCE', '-COMP:T/fin', 'SPEC:*', '-COMP:ADV', 'PHI:NUM:_', 'VAL', '-SPEC:iR', 'PHI:PER:_', 'PHI:DET:_', '-COMP:uWH', '-SPEC:P', 'adjoinable'}
lahella         {'P', 'LF:near', '!COMP:*', '-SPEC:N', '-COMP:N', '-SPEC:INF', 'LANG:FI', '-SPEC:iWH', '-SPEC:Neg/fin', '-COMP:T', '-SPEC:v', 'COMP:D', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:V', '-COMP:T/fin', 'SPEC:*', '-COMP:ADV', 'PHI:NUM:_', 'ARG', '-COMP:A', '!COMP:D', 'PF:lahella', '-SPEC:ADV', '-SPEC:iR', '-VAL', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:C', '-COMP:uWH', '-SPEC:P', 'adjoinable', '-SPEC:T/fin'}
lahella_1       {'P', 'LF:near', '!COMP:*', '-SPEC:N', '-COMP:N', '-SPEC:INF', 'LANG:FI', '-SPEC:iWH', '-SPEC:Neg/fin', '-COMP:T', '-SPEC:v', 'COMP:D', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:V', '-COMP:T/fin', 'SPEC:*', '-COMP:ADV', 'PHI:NUM:_', 'ARG', '-COMP:A', '!COMP:D', 'PF:lahella', '-SPEC:ADV', '-SPEC:iR', '-VAL', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:C', '-COMP:uWH', '-SPEC:P', 'adjoinable', '-SPEC:T/fin'}
lahella_2       {'!COMP:*', 'LF:near', '!SPEC:D', '-COMP:C/fin', 'LANG:FI', '-SPEC:iWH', '-SPEC:V', 'COMP:v', 'ARG', '-COMP:A', 'COMP:V', 'PF:lahella', '-SPEC:ADV', '-SPEC:C', 'INF', '!SPEC:*', '-SPEC:T/fin', 'P', '-SPEC:N', '-COMP:N', '-COMP:FORCE', '-SPEC:INF', '-SPEC:Neg/fin', '-COMP:T', '-SPEC:v', 'COMP:D', '-SPEC:C/fin', '-SPEC:FORCE', '-COMP:T/fin', 'SPEC:*', '-COMP:ADV', 'PHI:NUM:_', 'VAL', '-SPEC:iR', 'PHI:PER:_', 'PHI:DET:_', '-COMP:uWH', '-SPEC:P', 'adjoinable'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'-COMP:v', '-COMP:N', 'SPEC:P', '-COMP:MA/inf', '-COMP:D', 'LANG:FI', '-SPEC:FORCE', 'SPEC:ADV', 'SPEC:D', 'PF:lahtea', 'V', 'COMP:PP', 'ARG', 'SPEC:TO/inf', 'PHI:NUM:_', 'LF:leave', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:INTR', '-COMP:V', '-SPEC:T/fin', 'ASP'}
lavano          ['LANG:IT']
lava-           {'!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', 'LF:wash', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'LANG:IT', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'PF:lava', 'COMP:P', '-VAL', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'ASP'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'!COMP:*', 'PF:le', '-SPEC:INF', '-ARG', '-COMP:D', '-SPEC:Neg/fin', '-COMP:T/fin', '-COMP:P', '-SPEC:V', 'LANG:IT', 'LF:D', 'OP', '-SPEC:MA/lla', '!PROBE:N', 'D', 'COMP:N', '-SPEC:C', '-SPEC:P', '-COMP:uR', 'adjoinable', '-SPEC:T/fin'}
leaves          ['LANG:EN']
leave           {'-COMP:v', '!SPEC:D', '-COMP:N', 'SPEC:P', 'PF:leave', '-SPEC:FORCE', 'SPEC:ADV', '-COMP:T/fin', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'LF:leave', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', 'ASP'}
leave-          {'-COMP:v', '!SPEC:D', '-COMP:N', 'SPEC:P', 'PF:leave', '-SPEC:FORCE', 'SPEC:ADV', '-COMP:T/fin', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'LF:leave', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', 'ASP'}
like-           {'-COMP:v', '-COMP:N', 'SPEC:P', 'LF:like', '-SPEC:FORCE', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'PF:like', '!COMP:D', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', 'ASP'}
likes           ['LANG:EN']
like            {'-COMP:v', '-COMP:N', 'SPEC:P', 'LF:like', '-SPEC:FORCE', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'PF:like', '!COMP:D', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', 'ASP'}
little          ['LANG:EN']
little-         {'LF:little', '0', 'LANG:EN', 'SPEC:D', 'PF:little-', '2SPEC'}
lle             {'P', '!COMP:*', '-SPEC:N', '-COMP:N', 'PF:P(lle)', '-SPEC:INF', '-SPEC:*', 'LANG:FI', 'TAIL:V,+SEM:directional', '-SPEC:iWH', '-SPEC:Neg/fin', '-COMP:T', '-SPEC:v', 'COMP:D', '-SPEC:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:ADV', 'PHI:NUM:_', 'ARG', '-COMP:A', '-SPEC:ADV', 'LF:for', '-SPEC:iR', '-VAL', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:C', '-COMP:uWH', '-SPEC:P', '+SEM:directional', 'adjoinable', '-SPEC:T/fin'}
lla             {'TAIL:T', 'P', '!COMP:*', 'TAIL:*V', '-SPEC:N', '-COMP:N', '-SPEC:INF', 'LANG:FI', '-SPEC:iWH', '-SPEC:Neg/fin', '-COMP:T', '-SPEC:v', 'COMP:D', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:V', '-COMP:T/fin', 'SPEC:*', '-COMP:ADV', 'PHI:NUM:_', 'ARG', '-COMP:A', 'LF:by', '-SPEC:ADV', '-SPEC:iR', '-VAL', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:C', '-COMP:uWH', '-SPEC:P', 'PF:P(lla)', 'adjoinable', '-SPEC:T/fin'}
Luisa           ['LANG:IT']
Luisa-          {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', 'PF:Luisa', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SEM:directional', '-SPEC:uWH', 'LF:Luisa', '-SPEC:P', '-COMP:V', '-SPEC:R', '-COMP:WH'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', 'LANG:FI', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', '-COMP:P', 'V', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', 'LF:read', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:TR', '-COMP:V', 'PF:luke', '-SPEC:T/fin', 'ASP'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', 'LANG:FI', 'ASP:BOUNDED', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', '-COMP:P', 'V', 'PHI:NUM:_', 'LF:find', 'ARG', 'SPEC:TO/inf', '!COMP:D', 'PF:loyta-', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:TR', '-COMP:V', '-SPEC:T/fin', 'ASP'}
Mary            ['LANG:EN']
Mary-           {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', '-adjoinable', 'COMP:C', '-COMP:A', '-SPEC:ADV', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', 'LF:Mary', '-COMP:VA/inf', 'COMP:P', '-SEM:directional', '-SPEC:uWH', '-SPEC:P', 'LANG:EN', 'PF:Mary'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', 'LANG:FI', '-SPEC:V', 'LF:Merja', 'COMP:R/D', 'COMP:R', 'COMP:uR', '-adjoinable', 'COMP:C', '-COMP:A', '-SPEC:ADV', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', 'PF:Merja', '-COMP:VA/inf', 'COMP:P', '-SEM:directional', '-SPEC:uWH', '-SPEC:P'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'COMP:v', 'TAIL:T', '-SPEC:N', 'ADV', 'PF:malla', 'LF:by', 'LANG:FI', '-SPEC:Neg/fin', '-SPEC:FORCE', 'adjoinable', 'SPEC:*', '-SPEC:T/fin', 'MA/inf'}
meren           ['LANG:FI']
mere-           {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'PF:meri', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', 'LF:ocean', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-SPEC:R', '-COMP:WH'}
mies            {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'LF:man', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-SPEC:R', '-COMP:WH', 'PF:mies'}
mistake         {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'SPEC:A', 'LF:mistake', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', 'PF:mistake', 'LANG:EN', '-SPEC:R', '-COMP:WH', '-COMP:V'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'PF:mika-', '-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'LF:what', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-SPEC:R', '-COMP:WH'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'!COMP:*', 'LANGN:EN', '-COMP:v', '-COMP:N', 'SPEC:P', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', '-COMP:P', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'LF:move', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:TR', '+SEM:directional', '-COMP:V', 'PF:move', '-SPEC:T/fin', 'ASP'}
mukavasti       ['LANG:EN']
mukava-         {'LF:comfortably', '2SPEC', '0', 'PF:mukavasti', 'SPEC:D', 'LANG:FI'}
must            {'!COMP:*', '-SPEC:N', 'T/fin', 'PF:must', 'SPEC:FORCE', '-SPEC:v', 'COMP:Neg', 'SPEC:C/fin', '-SPEC:V', '-COMP:T/fin', '-SPEC:TO/inf', '-SPEC:Neg', 'SPEC:*', 'COMP:T/prt', 'SPEC:D', 'PHI:NUM:_', 'FIN', 'COMP:v', 'ARG', 'SPEC:TO/inf', 'PHI:GEN:_', 'VAL', 'COMP:V', '-COMP:INF', 'PHI:PER:_', 'T', '-SPEC:C', 'PHI:DET:_', '!PROBE:V', 'MODAL', 'LANG:EN', '!SPEC:*', '-SPEC:T/fin', 'LF:must'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', 'LANG:FI', 'ASP:BOUNDED', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', '-COMP:T/fin', '-COMP:P', 'V', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', 'PF:myy', 'LF:sell', 'COMP:P', '-VAL', 'PHI:PER:_', 'PHI:DET:_', 'CLASS:TR', '-COMP:V', '-SPEC:T/fin', 'ASP'}
naki            ['LANG:FI']
nakee           ['LANG:FI']
nake-           {'!COMP:*', '-COMP:ESSA/inf', '-COMP:MA/ssa', '-COMP:v', '-COMP:N', 'SPEC:P', 'LANG:FI', 'ASP:BOUNDED', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', '-COMP:P', 'LF:see', 'PF:nake', '-COMP:MA/tta', 'V', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:TR', '-COMP:V', '-SPEC:T/fin', 'ASP'}
nayttaa         ['LANG:FI']
naytta-         {'-COMP:v', '!SPEC:D', '-COMP:N', 'SPEC:P', '-ARG', 'LANG:FI', 'PF:naytta', '-SPEC:FORCE', 'SPEC:ADV', 'V', '!COMP:VA/inf', 'SPEC:TO/inf', 'LF:seem', 'VAL', 'SEM:internal', 'COMP:P', '-COMP:V', '-SPEC:T/fin', 'ASP'}
ndo             {'COMP:v', '!COMP:*', 'PF:PRG', 'VAL', '-COMP:FORCE', 'COMP:V', '-COMP:C/fin', '?ARG', 'LF:ing', 'PRG', 'INF', 'LANG:EN', '-COMP:T/fin', '-SPEC:V', '-SPEC:T/fin'}
ne              {'!COMP:*', '-SPEC:INF', '-ARG', '-COMP:D', 'PHI:PER:3', 'LANG:FI', '-SPEC:Neg/fin', '-COMP:T/fin', '-COMP:P', '-SPEC:V', 'PHI:NUM:PL', 'LF:those', 'PF:ne', 'OP', '-SPEC:MA/lla', '!PROBE:N', 'D', 'COMP:N', '-SPEC:C', '-SPEC:P', '-COMP:uR', 'adjoinable', '-SPEC:T/fin'}
niiden          ['LANG:EN']
nen             {'LANG:FI', 'COMP:0', 'LF:ing', '-SPEC:D', 'PF:a', 'A', '-SPEC:A', 'TAIL:D', 'SPEC:*'}
not             {'POL:NEG', 'PF:not', 'ARG', '-COMP:C', '!COMP:*', 'LF:not', '-COMP:D', 'PHI:PER:_', '-VAL', 'Neg', 'PHI:DET:_', '-COMP:FIN', 'SPEC:*', 'LANG:EN', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:GEN:_'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-COMP:v', '-COMP:MA/inf', '-COMP:N', 'SPEC:P', '-COMP:Neg/fin', '-COMP:D', 'LANG:FI', '-COMP:T', '-SPEC:FORCE', 'SPEC:ADV', '-COMP:T/fin', 'SPEC:D', 'V', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', '-SPEC:T/fin', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:INTR', 'LF:sleep', '-COMP:V', 'PF:nukku', 'ASP'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'PF:omaisuuden', '-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', 'LF:possessions', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-SPEC:R', '-COMP:WH'}
operatoria      ['LANG:IT']
operatoria-     {'PF:operatoria', '0', 'LF:operation', 'SPEC:D', 'LANG:IT', '2SPEC'}
ostaa           ['LANG:FI']
osta-           {'!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', 'LANG:FI', 'ASP:BOUNDED', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', '-COMP:P', 'V', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'LF:buy', 'CLASS:TR', 'PF:osta', '-COMP:V', '-SPEC:T/fin', 'ASP'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'LF:day', '-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'PF:paiva', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:V', 'SEM:nonreferential', '-SPEC:R', '-COMP:WH'}
past            {'P', '!COMP:*', '-SPEC:N', '-COMP:N', '-SPEC:INF', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:iWH', '-COMP:T', '-float', '-SPEC:v', 'COMP:D', '-SPEC:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:ADV', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', '-COMP:A', '-SPEC:ADV', '-SPEC:iR', '-VAL', 'PF:past', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:C', '-COMP:uWH', '-SPEC:P', 'adjoinable', 'LANG:EN', '-SPEC:T/fin', 'LF:past'}
Pariisia        ['LANG:FI']
Pariisi-        {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'PF:Pariisi', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', 'LF:Paris', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-SPEC:R', '-COMP:WH'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'LF:Pekka', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', 'PF:Pekka', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SEM:directional', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-SPEC:R', '-COMP:WH'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'!COMP:*', 'PF:pelkaa', '-COMP:v', '-COMP:N', 'SPEC:P', 'LANG:FI', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', '-COMP:P', 'V', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:TR', 'LF:fear', '-COMP:V', '-SPEC:T/fin', 'ASP'}
persuades       ['LANG:EN']
persuade-       {'!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', 'SEM:external', '-SPEC:FORCE', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'COMP:TO/inf', 'COMP:P', '-VAL', 'PHI:PER:_', 'PHI:DET:_', 'PF:persuade', 'LF:persuade', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', 'ASP'}
peruuntui       ['LANG:FI']
peruuntu-       {'-COMP:v', '-COMP:N', 'SPEC:P', 'LF:cancelled', 'LANG:FI', 'PF:peruuntui', '-SPEC:FORCE', 'SPEC:ADV', 'SPEC:D', 'V', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'ASP'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', 'LANG:FI', 'ASP:BOUNDED', 'LF:wash', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', '-COMP:P', 'V', 'PF:pese_asp', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:TR', '-COMP:V', '-SPEC:T/fin', 'ASP'}
pese-           {'!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', 'LANG:FI', 'LF:wash', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', '-COMP:P', 'V', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:TR', '-COMP:V', 'PF:pese', '-SPEC:T/fin', 'ASP'}
petardi         {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'PF:petardi', 'N', 'LF:firecrackers', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-SPEC:R', '-COMP:WH'}
pieni           ['LANG:FI']
pieni-          {'2SPEC', '0', 'LF:small', 'PF:pieni-', 'SPEC:D', 'LANG:FI'}
poikien         ['LANG:FI']
poika-          {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', 'LF:boy', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:V', 'PF:poika', '-SPEC:R', '-COMP:WH'}
puhelinta       ['LANG:FI']
puhelin-        {'2SPEC', '0', 'LF:phone', 'PF:puhelin', 'SPEC:D', 'LANG:FI'}
punainen        ['LANG:FI']
puna-           {'2SPEC', '0', 'PF:puna-', 'SPEC:D', 'LF:red', 'LANG:FI'}
presupposto     {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'PF:presupposto', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'LF:presupposition', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-SPEC:R', '-COMP:WH'}
primary         {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', 'COMP:C', '-COMP:A', 'PF:primary', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', 'LF:nurse', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-SPEC:R', '-COMP:WH'}
promises        ['LANG:EN']
promise-        {'-COMP:v', '-COMP:N', 'SPEC:P', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'LF:promise', 'SPEC:D', 'PF:promise', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'SEM:internal', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', 'ASP'}
problem         {'-SPEC:N', '-COMP:v', '-COMP:N', 'PF:problem', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:V', 'LANG:EN', 'LF:problem', '-SPEC:R', '-COMP:WH'}
pyytaa          ['LANG:FI']
pyyta-          {'!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', 'SEM:external', 'LANG:FI', 'PF:pyyda', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', '-COMP:P', 'LF:ask', 'V', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:TR', '-COMP:V', '-SPEC:T/fin', 'ASP'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'-COMP:v', '-COMP:N', 'SPEC:P', '-COMP:MA/inf', '-COMP:D', '-SPEC:FORCE', 'SPEC:ADV', '-COMP:T/fin', 'SPEC:D', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'LAMG:EN', 'PF:race', 'COMP:P', 'PHI:PER:_', 'LF:race', '-VAL', 'PHI:DET:_', 'CLASS:INTR', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', 'ASP'}
raukesi         ['LANG:FI']
raukea-         {'-COMP:v', '-COMP:N', 'SPEC:P', 'LANG:FI', '-SPEC:FORCE', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PF:raukea', '-VAL', 'PHI:PER:_', 'PHI:DET:_', '-COMP:V', 'LF:terminate', '-SPEC:T/fin', 'ASP'}
red             ['LANG:EN']
red-            {'0', 'PF:red', 'LANG:EN', 'SPEC:D', 'LF:red', '2SPEC'}
saavuttaa       ['LANG:FI']
saavutta-       {'!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', 'LANG:FI', 'ASP:BOUNDED', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', 'PF:saavutta-', '-COMP:P', 'V', 'PHI:NUM:_', 'LF:reach', 'ARG', 'SPEC:TO/inf', '!COMP:D', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:TR', '-COMP:V', '-SPEC:T/fin', 'ASP'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', 'LF:say', 'COMP:VA/inf', 'LANG:FI', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', '-COMP:P', 'SPEC:D', 'V', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', 'PF:sano-', 'COMP:FORCE', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:TR', '-COMP:V', '-SPEC:T/fin', 'ASP'}
said            ['LANG:EN']
say'            {'-COMP:v', '-COMP:N', 'SPEC:P', 'LF:say', '-SPEC:FORCE', 'SPEC:ADV', 'SPEC:D', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-VAL', 'PF:say', 'PHI:DET:_', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', '!COMP:FORCE', 'ASP'}
say-            {'-COMP:v', '-COMP:N', 'SPEC:P', 'LF:say', '-SPEC:FORCE', 'SPEC:ADV', 'SPEC:D', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-VAL', 'PF:say', 'PHI:DET:_', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', '!COMP:FORCE', 'ASP'}
sala            ['LANG:IT']
sala-           {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'LANG:IT', 'LF:room', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:V', 'PF:sala', '-SPEC:R', '-COMP:WH'}
scoppiati       ['LANG:IT']
scoppia-        {'PF:scoppia', '-COMP:v', '-COMP:N', 'SPEC:P', '-SPEC:FORCE', 'SPEC:ADV', 'LANG:IT', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'LF:explode', '-COMP:V', '-SPEC:T/fin', 'ASP'}
sentenza        {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'PF:sentenza', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:V', 'LF:sentence', '-SPEC:R', '-COMP:WH'}
Seine           ['LANG:EN']
Seine-          {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', 'LF:Seine', '-SPEC:INF', 'PF:Seine', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:V', 'LANG:EN', '-SPEC:R', '-COMP:WH'}
sembrano        ['LANG:IT']
sembra-         {'PF:sembra', '-COMP:v', '-COMP:N', 'SPEC:P', '-COMP:D', '-ARG', '-SPEC:FORCE', 'SPEC:ADV', 'SPEC:D', 'V', 'SPEC:TO/inf', 'LF:seem', 'COMP:P', '-VAL', '-ASP', '!COMP:ARE/inf', '-COMP:V', 'LANG:EN', '-SPEC:T/fin'}
sleeps          ['LANG:EN']
sleep           {'-COMP:v', '-COMP:N', 'SPEC:P', '-COMP:MA/inf', '-COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'PF:sleep', 'SPEC:D', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:INTR', 'LF:sleep', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', 'ASP'}
sleep-          {'-COMP:v', '-COMP:N', 'SPEC:P', '-COMP:MA/inf', '-COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'PF:sleep', 'SPEC:D', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:INTR', 'LF:sleep', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', 'ASP'}
solution        {'LF:solution', '-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', 'PF:solution', '-SPEC:P', '-COMP:V', 'LANG:EN', '-SPEC:R', '-COMP:WH'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '!COMP:A/inf', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', 'PF:sopimus', 'LF:agreement', '-COMP:V', '-SPEC:R', '-COMP:WH'}
spinge          ['LANG:IT']
spinge-         {'-COMP:v', '-COMP:N', 'SPEC:P', '-SPEC:FORCE', 'PF:spinge', 'SPEC:ADV', '-COMP:P', 'ASP', 'LANG:IT', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', '!COMP:D', 'PHI:PER:_', '-VAL', 'PHI:DET:_', '-COMP:V', '-SPEC:T/fin', 'LF:push'}
ssa             {'P', '!COMP:*', '-SPEC:N', '-COMP:N', 'COMP:n/MA', '-SPEC:INF', 'PF:ssa', 'LANG:FI', '-SPEC:iWH', '-SPEC:Neg/fin', '-COMP:T', '-SPEC:v', 'COMP:D', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:V', '-COMP:T/fin', 'SPEC:*', '-COMP:ADV', 'PHI:NUM:_', 'ARG', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:iR', '-VAL', 'PHI:PER:_', 'PHI:DET:_', 'LF:in', '-SPEC:C', '-COMP:uWH', '-SPEC:P', 'adjoinable', 'TAIL:V'}
stanno          ['LANG:IT']
sta-            {'LF:stay', '-COMP:v', '-COMP:N', 'SPEC:P', '-SPEC:FORCE', 'SPEC:ADV', 'SPEC:D', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', '-SPEC:T/fin', 'SEM:internal', 'COMP:P', 'COMP:PRG', '-VAL', 'PHI:PER:_', '-ASP', 'PHI:DET:_', '-COMP:V', 'LANG:EN', 'PF:sta'}
sti             {'TAIL:T', '!COMP:*', '-SPEC:N', 'ADV', 'LF:by', '-ARG', 'PF:sti', 'LANG:FI', '-SPEC:Neg/fin', '-SPEC:FORCE', 'adjoinable', 'SPEC:*', '-SPEC:T/fin'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', 'PF:sukka-', '-SPEC:uWH', 'LF:socks', '-SPEC:P', '-COMP:V', '-SPEC:R', '-COMP:WH'}
surprised       ['LANG:EN']
surprise-       {'!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', 'LF:surprise', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', '-COMP:T/fin', '-COMP:P', 'V', 'PHI:NUM:_', 'PF:surprise', 'ARG', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:TR', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', 'ASP'}
talo            {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'PF:talo', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', 'LF:house', '-SPEC:P', '-COMP:V', '-SPEC:R', '-COMP:WH'}
tama            ['LANG:EN']
tama-           {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'LANG:FI', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'LF:this', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', 'PF:tama', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', 'PHI', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-SPEC:R', '-COMP:WH'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'-COMP:v', '-COMP:N', 'SPEC:P', 'PF:taytyy', 'LANG:FI', '-SPEC:FORCE', 'SPEC:ADV', 'SPEC:*', 'V', 'FIN', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', '!COMP:A/inf', 'COMP:P', 'PHI:PER:_', '-VAL', '-ASP', 'PHI:DET:_', 'MODAL', '-COMP:V', '-SPEC:T/fin', 'LF:must'}
teki            ['LANG:FI']
teke-           {'-COMP:A/inf', '!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', 'LANG:FI', 'ASP:BOUNDED', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', '-COMP:P', 'ASP', 'V', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', '!COMP:D', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'LF:make', 'CLASS:TR', 'PF:teke', '-SPEC:T/fin', '-COMP:V'}
that            {'!COMP:*', 'FORCE', 'PF:that', '-ARG', '-SPEC:*', '-VAL', '!PROBE:FIN', 'COMP:T/fin', 'LANG:EN', 'LF:that', 'COMP:C/fin', 'FIN'}
the             {'!COMP:*', '-SPEC:INF', '-ARG', '-COMP:D', '-SPEC:Neg/fin', '-COMP:T/fin', '-COMP:P', '-SPEC:V', 'PHI:DEF:DEF', 'PF:the', 'OP', '-SPEC:MA/lla', '!PROBE:N', 'D', 'COMP:N', '-SPEC:C', '-SPEC:P', '-COMP:uR', 'adjoinable', 'LANG:EN', '-SPEC:T/fin', 'LF:the'}
to              {'!COMP:*', '-SPEC:*', 'PF:to', '-SPEC:iWH', '-float', '-SPEC:V', 'ARG', '-COMP:A', '-SPEC:ADV', '-SPEC:C', 'TAIL:V', '-SPEC:T/fin', 'P', '-SPEC:N', '-COMP:N', 'LF:to', '-SPEC:INF', '-SPEC:Neg/fin', '-COMP:T', '-SPEC:v', 'COMP:D', '-SPEC:C/fin', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:ADV', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:iR', '-VAL', 'PHI:PER:_', 'PHI:DET:_', '-COMP:uWH', '-SPEC:P', '+SEM:directional', 'adjoinable', 'LANG:EN'}
to_inf          {'!COMP:*', '-COMP:FORCE', '-COMP:C/fin', 'TO/inf', '-SPEC:v', 'LF:TO/inf', '-COMP:T/fin', '-SPEC:V', 'COMP:v', 'COMP:V', '-VAL', '?ARG', 'PF:TO/inf', 'adjoinable', 'INF', 'LANG:EN', '-SPEC:T/fin'}
towards         {'P', '!COMP:*', '-SPEC:N', '-COMP:N', '-SPEC:INF', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:iWH', '-COMP:T', '-float', '-SPEC:v', 'COMP:D', '-SPEC:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:ADV', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', 'LF:towards', '-SPEC:iR', '-VAL', 'PHI:PER:_', 'PF:towards', 'PHI:DET:_', '-SPEC:C', '-COMP:uWH', '-SPEC:P', 'adjoinable', 'LANG:EN', 'TAIL:V'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', 'LANG:FI', 'LF:nudge', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', '-COMP:P', 'V', 'PHI:NUM:_', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:TR', 'PF:tonaise', '-COMP:V', '-SPEC:T/fin', 'ASP'}
tta             {'P', '!COMP:*', '-SPEC:N', '-COMP:N', 'COMP:n/MA', 'ADV', '-SPEC:INF', 'LANG:FI', '-SPEC:iWH', '-SPEC:Neg/fin', 'LF:without', '-COMP:T', '-SPEC:v', 'COMP:D', '-SPEC:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:T/fin', 'SPEC:*', '-COMP:ADV', 'PHI:NUM:_', 'ARG', '-COMP:A', '-SPEC:ADV', '-SPEC:iR', '-VAL', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:C', '-COMP:uWH', '-SPEC:P', 'PF:tta', 'adjoinable', '-SPEC:T/fin'}
tries           ['LANG:EN']
try-            {'!COMP:TO/inf', '-COMP:v', '-COMP:N', 'SPEC:P', 'LF:try', '-SPEC:FORCE', 'SPEC:ADV', 'SPEC:D', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'PF:try', '!COMP:-ARG', 'SEM:internal', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', 'ASP'}
verifiche       {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'PF:verifiche', 'LANG:IT', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:V', 'LF:verification', '-SPEC:R', '-COMP:WH'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'-COMP:v', '-COMP:N', 'SPEC:P', '-COMP:MA/inf', '-COMP:D', '!COMP:P', 'LANG:FI', '-SPEC:FORCE', 'SPEC:ADV', 'SPEC:D', 'V', 'PHI:NUM:_', 'PF:virtaa', 'ARG', 'SPEC:TO/inf', 'LF:flow', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:INTR', '-COMP:V', '-SPEC:T/fin', 'ASP'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', '-SPEC:*', '-SPEC:FORCE', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'PF:volu', 'ARG', 'SPEC:TO/inf', 'SEM:internal', 'LF:want', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', 'ASP'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'!COMP:*', '-COMP:v', '-COMP:N', 'LF:win', 'SPEC:P', 'ASP:BOUNDED', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', 'PF:voitta', '-COMP:P', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'CLASS:TR', 'SEM:achievement', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', 'ASP'}
wants           ['LANG:EN']
want-           {'!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', '-COMP:P', '-SPEC:TO/inf', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'LF:want', 'COMP:TO/inf', 'COMP:P', '-VAL', 'PHI:PER:_', 'PHI:DET:_', 'CLASS:TR', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', 'ASP', 'PF:want'}
what            ['LANG:EN']
what-           {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', 'PF:what', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:C', '-COMP:A', '-SPEC:ADV', 'LF:what', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-COMP:*', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', 'LANG:EN'}
which           {'!COMP:*', '-SPEC:INF', '-ARG', '-COMP:D', '-SPEC:Neg/fin', '-COMP:T/fin', 'PF:which', '-COMP:P', '-SPEC:V', 'LF:which', 'OP', '-SPEC:MA/lla', '!PROBE:N', 'D', 'COMP:N', 'OP:WH', '-SPEC:C', '-SPEC:P', '-COMP:uR', 'adjoinable', 'LANG:EN', '-SPEC:T/fin'}
who             ['LANG:EN']
who-            {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'LF:who', 'COMP:C', '-COMP:A', '-SPEC:ADV', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-COMP:*', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', 'PF:who', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', 'LANG:EN'}
whether         {'!COMP:*', 'FORCE', '-ARG', '-SPEC:*', 'COMP:T/fin', 'LF:whether', 'COMP:C/fin', 'OP:Q', 'PF:whether', 'FIN', 'OP', 'Q', '-VAL', 'OP:WH', '!PROBE:FIN', 'LANG:EN'}
yrittaa         ['LANG:FI']
yritta-         {'-COMP:v', '-COMP:N', 'SPEC:P', 'LF:try', '-SPEC:FORCE', 'SPEC:ADV', 'SPEC:D', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', '!COMP:-ARG', '!COMP:A/inf', 'SEM:internal', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'PF:yritta', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', 'ASP'}
mina            ['LANG:EN']
mina-           {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', 'LANG:FI', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:C', '-COMP:A', '-SPEC:ADV', 'PF:mina', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', 'LF:I', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:*'}
sina            ['LANG:EN']
sina-           {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', 'LANG:FI', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:C', '-COMP:A', '-SPEC:ADV', 'PF:sina', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'LF:you', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:*'}
han             ['LANG:EN']
han-            {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', 'LANG:FI', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'LF:s/he', 'COMP:C', '-COMP:A', '-SPEC:ADV', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'PF:han', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:*'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-COMP:v', 'LF:we', 'N', '-COMP:AUX', '-COMP:C/fin', 'LANG:FI', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:C', '-COMP:A', '-SPEC:ADV', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:*', 'PF:me'}
te              ['LANG:EN']
te-             {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', 'LANG:FI', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:C', '-COMP:A', '-SPEC:ADV', 'PF:te', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'LF:you', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:*'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', 'LANG:FI', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:C', '-COMP:A', '-SPEC:ADV', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', 'PF:he', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', 'LF:they', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:*'}
se              {'!COMP:*', '-SPEC:INF', '-ARG', '-COMP:D', 'LANG:FI', '-SPEC:Neg/fin', 'LF:the/that', '-COMP:T/fin', '-COMP:P', 'PF:se', '-SPEC:V', 'OP', '-SPEC:MA/lla', '!PROBE:N', 'D', 'COMP:N', '-SPEC:C', '-SPEC:P', '-COMP:uR', 'adjoinable', '-SPEC:T/fin'}
sen             {'!COMP:*', '-SPEC:INF', '-ARG', '-COMP:D', 'LANG:FI', '-SPEC:Neg/fin', 'LF:the/that', '-COMP:T/fin', '-COMP:P', '-SPEC:V', 'TAIL:ASP', 'TAIL:PHI', 'OP', '-SPEC:MA/lla', '!PROBE:N', 'D', 'COMP:N', '-SPEC:C', 'PF:sen', 'TAIL:*POL:NEG', '-SPEC:P', '-COMP:uR', 'adjoinable', '-SPEC:T/fin'}
I               ['LANG:EN']
I-              {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'PF:I', 'COMP:C', '-COMP:A', '-SPEC:ADV', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-COMP:*', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', 'LF:I', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', 'LANG:EN'}
you             ['LANG:EN']
you-            {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:C', '-COMP:A', '-SPEC:ADV', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-COMP:*', '-SPEC:N', 'PF:you', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'LF:you', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', 'LANG:EN'}
he              ['LANG:EN']
he-             {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:C', '-COMP:A', '-SPEC:ADV', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-COMP:*', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', 'PF:he', '-SPEC:C/fin', 'LF:he', 'COMP:T/prt', 'PHI_N', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', 'LANG:EN'}
she             ['LANG:EN']
she-            {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:C', '-COMP:A', 'PF:she', '-SPEC:ADV', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-COMP:*', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', 'LF:she', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', 'LANG:EN'}
we              ['LANG:EN']
we-             {'-COMP:v', 'LF:we', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:V', 'PF:we', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:C', '-COMP:A', '-SPEC:ADV', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-COMP:*', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', 'LANG:EN'}
you_pl          ['LANG:EN']
you_pl-         {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'N', '-COMP:AUX', '-COMP:C/fin', 'LF:you_pl', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'PF:you_pl', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', 'PHI', '-SPEC:uWH', '-SPEC:P', '-COMP:V', 'LANG:EN', '-SPEC:R', '-COMP:WH'}
they            ['LANG:EN']
they-           {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:C', '-COMP:A', '-SPEC:ADV', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-COMP:*', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', 'PF:they', 'LF:they', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', 'LANG:EN'}
it              ['LANG:EN']
it-             {'!COMP:*', '-SPEC:INF', '-ARG', '-COMP:D', 'PF:it', '-SPEC:Neg/fin', '-COMP:T/fin', '-COMP:P', '-SPEC:V', 'OP', '-SPEC:MA/lla', 'LF:it/that', '!PROBE:N', 'D', 'COMP:N', '-SPEC:C', '-SPEC:P', '-COMP:uR', 'adjoinable', 'LANG:EN', '-SPEC:T/fin'}
io              ['LANG:EN']
io-             {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'LANG:IT', 'COMP:C', '-COMP:A', '-SPEC:ADV', 'PF:io', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', 'LF:I', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:*'}
tu              ['LANG:EN']
tu-             {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', 'PF:tu', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'LANG:IT', 'COMP:C', '-COMP:A', '-SPEC:ADV', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'LF:you', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:*'}
lui             ['LANG:EN']
lui-            {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'LANG:IT', 'COMP:C', '-COMP:A', '-SPEC:ADV', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:D/rel', 'PF:lui', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'LF:he', 'COMP:T/prt', 'PHI_N', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:*'}
lei             ['LANG:EN']
lei-            {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', 'PF:lei', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'LANG:IT', 'COMP:C', '-COMP:A', '-SPEC:ADV', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', 'LF:she', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:*'}
noi             ['LANG:EN']
noi-            {'-COMP:v', 'LF:we', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'LANG:IT', 'COMP:C', '-COMP:A', '-SPEC:ADV', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', 'PF:noi', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:*'}
voi             ['LANG:EN']
voi-            {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', 'LF:you_pl', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'LANG:IT', 'COMP:C', '-COMP:A', '-SPEC:ADV', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'SPEC:A', 'PF:voi', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:*'}
loro            ['LANG:EN']
loro-           {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'LANG:IT', 'COMP:C', '-COMP:A', '-SPEC:ADV', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', 'LF:they', 'PF:loro', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:*'}
mi              ['LANG:EN']
mi-             {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:V', 'LF:me', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'LANG:IT', 'CL', 'COMP:C', '-COMP:A', '-SPEC:ADV', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'PF:mi(cl)', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:*'}
la              ['LANG:EN']
la-             {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'LANG:IT', 'PF:la(cl)', 'CL', 'COMP:C', '-COMP:A', '-SPEC:ADV', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'LF:her', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:*'}
lo              ['LANG:EN']
lo-             {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'LANG:IT', 'CL', 'COMP:C', '-COMP:A', '-SPEC:ADV', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:D/rel', 'LF:him', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', 'PF:lo(cl)', '-COMP:*'}
si              ['LANG:EN']
si-             {'PF:si(cl)', '-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'LANG:IT', 'COMP:C', '-COMP:A', '-SPEC:ADV', '-COMP:V', 'CAL:CL', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'LF:3sg', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:*'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-COMP:v', 'N', '-COMP:AUX', '-COMP:C/fin', 'LF:there', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'LANG:IT', 'COMP:C', '-COMP:A', '-SPEC:ADV', '-COMP:V', '-SPEC:R', '-COMP:WH', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'PF:ci', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', '-SPEC:P', '-COMP:*'}
[-n]            {'PHI:NUM:SG', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'inflectional', 'PHI', 'PHI:PER:1'}
[-t]            {'PHI:NUM:SG', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:DET:DEF', 'inflectional', 'PHI'}
[-V]            {'PHI', 'LANG:FI', 'PHI:NUM:SG', 'inflectional', 'PHI:PER:3'}
[-mme]          {'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:PL', 'inflectional', 'PHI', 'PHI:PER:1'}
[-mme]          {'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:PL', 'inflectional', 'LANG:FI', 'PHI:PER:1'}
[-tte]          {'LANG:FI', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:NUM:PL', 'inflectional', 'PHI'}
[-vat]          {'PHI', 'LANG:FI', 'PHI:NUM:PL', 'inflectional', 'PHI:PER:3'}
[-ni]           {'PHI:NUM:SG', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'inflectional', 'PHI', 'PHI:PER:1'}
[-si]           {'PHI:NUM:SG', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:DET:DEF', 'inflectional', 'PHI'}
[-nsa]          {'PHI', 'LANG:FI', 'PHI:NUM:SG', 'inflectional', 'PHI:PER:3'}
[-an]           {'PHI', 'LANG:FI', 'PHI:NUM:SG', 'inflectional', 'PHI:DET:DET', 'PHI:PER:3'}
[-nne]          {'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:PL', 'inflectional', 'PHI:PER:2'}
[-s]            {'PHI:GEN:M', 'PHI', 'PHI:NUM:SG', 'LANG:EN', 'PHI:GEN:F', 'inflectional', 'PHI:PER:3'}
[-0]            {'PHI:DET:DEF', 'inflectional', 'PHI', 'PHI:PER:2', 'PHI:PER:3', 'PHI:GEN:N', 'PHI:NUM:SG', 'LANG:EN', 'PHI:NUM:PL', 'PHI:PER:1'}
[-o]            {'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI', 'PHI:PER:1'}
[-i]            {'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI'}
[-a]            {'PHI', 'PHI:NUM:SG', 'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI:PER:3'}
[-e]            {'PHI', 'PHI:NUM:SG', 'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI:PER:3'}
[-iamo]         {'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:PL', 'inflectional', 'LANG:IT', 'PHI', 'PHI:PER:1'}
[-te]           {'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:NUM:PL', 'inflectional', 'LANG:IT', 'PHI'}
[-no]           {'PHI', 'PHI:DET:DEF', 'PHI:NUM:PL', 'inflectional', 'LANG:IT', 'PHI:PER:3'}
[-nom]          {'TAIL:FIN,ARG,VAL', 'LANG:EN', 'NOM', 'adjoinable', 'inflectional'}
[-par]          {'PAR', 'adjoinable', 'TAIL:ARG,-VAL', 'inflectional', 'LANG:FI'}
[-gen]          {'GEN', '-float', 'TAIL:INF,ARG', 'LANG:EN', 'inflectional'}
gen             {'GEN', '-float', 'TAIL:INF,ARG', 'LANG:EN', 'inflectional'}
[-n_acc]        {'TAIL:PHI', 'TAIL:*POL:NEG', 'adjoinable', 'n-ACC', 'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI'}
[-t_acc]        {'TAIL:*POL:NEG', 'adjoinable', 't-ACC', 'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI'}
[-0_acc]        {'0_ACC', 'TAIL:*POL:NEG', 'adjoinable', 'TAIL:*PHI', 'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI'}
asp             {'ASP:BOUNDED', 'LANG:EN', 'inflectional'}
a'              {'PF:a', 'LANG:X', 'a', 'LF:A'}
b'              {'PF:b', 'LF:B', 'b', 'LANG:X'}
b''             {'PF:b', 'LF:B', '-COMP:c', 'LANG:EN', 'b'}
c''             {'LANG:EN', 'c', 'SPEC:a', 'PF:c', 'LF:C'}
c'              {'c', 'PF:c', 'LANG:X', 'LF:C'}
d'              {'LF:D', 'PF:d', 'LANG:', 'd'}
a''             ['LANG:EN']
x'              {'x', 'PF:x', 'LANG:X', 'LF:X'}
y'              {'PF:y', 'LF:Y', 'LANG:X', 'y'}
z'              {'LF:Z', 'PF:x', 'z', 'LANG:X'}
John'           {"N'", 'LANG:X', 'LF:John', 'PF:John'}
admires'        {'LF:admires', 'PF:admires', "V'", 'LANG:X'}
admires''       {'-COMP:v', '-COMP:N', 'SPEC:P', 'LF:admires', 'PF:admires', '-SPEC:FORCE', 'SPEC:ADV', 'SPEC:D', 'V', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-VAL', 'PHI:DET:_', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', 'ASP'}
Mary'           {"N'", 'LF:mary', 'LANG:X', 'PF:Mary'}
T/fin           {'!COMP:*', '-SPEC:N', 'T/fin', 'LF:T', 'SPEC:FORCE', '-SPEC:v', 'SPEC:C/fin', 'PF:T', '-SPEC:V', '-COMP:T/fin', '-SPEC:TO/inf', '-SPEC:Neg', 'SPEC:*', 'COMP:T/prt', 'SPEC:D', 'PHI:NUM:_', 'FIN', 'COMP:v', 'ARG', 'SPEC:TO/inf', 'PHI:GEN:_', 'VAL', 'COMP:V', '-COMP:INF', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:C', '!PROBE:V', 'T', 'LANG:EN', '!SPEC:*', '-SPEC:T/fin'}
v               {'!COMP:*', '-SPEC:N', 'ARG', 'PF:v', 'v', 'LF:v', 'COMP:V', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'PHI:NUM:_', '!PROBE:V', 'LANG:EN', 'SPEC:D', 'ASP', 'PHI:GEN:_'}
C/fin           {'C/fin', '!COMP:*', '-SPEC:N', 'C', '-ARG', '-COMP:C/fin', 'PF:C', '-COMP:T/prt', 'COMP:T/fin', '-SPEC:C/fin', 'LANG:EN', 'SPEC:*', 'FIN', 'COMP:Neg/fin', 'VAL', '!PROBE:FIN', 'LF:C/fin', '-SPEC:T/fin'}
T               {'!COMP:*', '-SPEC:N', 'LF:T', '-SPEC:FORCE', 'PF:T', '-COMP:NEG', '-SPEC:V', 'SPEC:*', 'COMP:T/prt', 'SPEC:D', 'PHI:NUM:_', 'FIN', 'COMP:v', 'ARG', 'PHI:GEN:_', 'VAL', 'COMP:V', 'PHI:PER:_', 'PHI:DET:_', '!PROBE:V', 'T', 'LANG:EN', '-SPEC:T/fin'}
T/prt           {'!COMP:*', '-SPEC:N', 'PF:T/prt', 'T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:D', '-COMP:NEG', '-SPEC:V', 'SPEC:*', 'COMP:T/prt', 'SPEC:D', 'PHI:NUM:_', 'FIN', 'COMP:v', 'ARG', 'PHI:GEN:_', 'VAL', 'COMP:V', 'PHI:PER:_', 'T', 'PHI:DET:_', '!PROBE:V', 'LF:T/prt', 'LANG:EN', '-SPEC:T/fin'}
a0              {'-adjoinable', 'PF:A', 'COMP:0', '-SPEC:D', 'LF:A', 'LANG:EN', 'A', '-SPEC:A', 'TAIL:D'}
n               {'!COMP:*', '-COMP:v', '!SPEC:D', 'N', '-COMP:AUX', '-COMP:C/fin', 'COMP:0', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:v', 'ARG', 'PF:n', 'COMP:C', '-COMP:A', 'COMP:V', '-SPEC:ADV', 'n', 'INF', '-COMP:V', '!SPEC:*', '-COMP:WH', '-SPEC:R', '-SPEC:T/fin', '-SPEC:N', '-COMP:N', 'COMP:D/rel', '-SPEC:INF', 'SPEC:A', '-SPEC:FORCE', '-SPEC:C/fin', 'SPEC:*', 'COMP:T/prt', 'PHI:NUM:_', 'PHI:GEN:_', 'VAL', 'LF:n', '-COMP:VA/inf', 'COMP:P', 'PHI:PER:_', '-SPEC:uWH', 'PHI:DET:_', '-SPEC:P', 'LANG:EN'}
impass          {'ARG', '!COMP:*', '-SPEC:N', 'v', 'LF:impass', 'COMP:V', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'PHI:NUM:_', 'PF:impass', '!PROBE:V', 'LANG:EN', 'SPEC:D', 'ASP', 'PHI:GEN:_'}
cau             {'!COMP:*', '-SPEC:N', 'ARG', 'v', 'COMP:V', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'LF:v/Cause', 'PF:Cau', '!PROBE:V', 'PHI:NUM:_', 'LANG:EN', 'SPEC:D', 'ASP', 'PHI:GEN:_'}
INF             {'COMP:v', '!COMP:*', 'PF:INF', '-COMP:FORCE', 'COMP:V', 'LF:INF', '-COMP:C/fin', '-COMP:T/fin', '-SPEC:V', 'INF', 'LANG:EN', '-SPEC:T/fin'}
prtcpl          {'!COMP:*', '-SPEC:N', 'PF:T/prt', '-COMP:FORCE', '-COMP:C/fin', 'T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:D', '-COMP:NEG', '-SPEC:V', '-COMP:T/fin', 'SPEC:*', 'COMP:T/prt', 'SPEC:D', 'PHI:NUM:_', 'FIN', 'COMP:v', 'ARG', 'PHI:GEN:_', 'VAL', 'COMP:V', 'LF:T/prt', 'PHI:PER:_', 'PHI:DET:_', '!PROBE:V', 'T', 'INF', 'LANG:EN', '-SPEC:T/fin'}
TO/inf          {'!COMP:*', '-COMP:FORCE', '-COMP:C/fin', 'TO/inf', '-SPEC:v', 'LF:TO/inf', '-COMP:T/fin', '-SPEC:V', 'COMP:v', 'COMP:V', '!COMP:V', '-VAL', '?ARG', 'PF:TO/inf', 'adjoinable', 'INF', 'LANG:EN', '-SPEC:T/fin'}
A/inf           {'!COMP:*', '-COMP:FORCE', 'PF:A/inf', '-COMP:C/fin', 'LF:A/inf', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:V', 'SPEC:*', '?VAL', 'COMP:v', 'COMP:V', 'A/inf', '?ARG', 'INF', 'LANG:EN', '-SPEC:T/fin'}
ARE/inf         {'!COMP:*', '-COMP:FORCE', '-COMP:C/fin', '-COMP:T/fin', 'PF:are', '-SPEC:V', 'SPEC:*', 'COMP:v', '-adjoinable', 'VAL', 'COMP:V', 'LF:ARE/inf', 'ARE/inf', '?ARG', 'INF', 'LANG:EN', '-SPEC:T/fin'}
ESSA/inf        {'TAIL:T', '!COMP:*', '-SPEC:N', '-COMP:FORCE', 'ESSA/inf', 'ADV', '-COMP:C/fin', '-SPEC:Neg/fin', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:V', 'SPEC:*', '?VAL', 'COMP:v', 'LF:while', 'COMP:V', '?ARG', 'PF:essa', 'adjoinable', 'INF', 'LANG:EN', '-SPEC:T/fin'}
TUA/inf         {'TAIL:T', '!COMP:*', '-SPEC:N', '-COMP:FORCE', 'ADV', '-COMP:C/fin', 'PF:tua', '-SPEC:Neg/fin', 'LF:after', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:V', 'SPEC:*', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:v', 'ARG', 'TUA/inf', 'VAL', 'COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'adjoinable', 'INF', 'LANG:EN', '!SPEC:*', '-SPEC:T/fin'}
VA/inf          {'!COMP:*', '-SPEC:N', '-COMP:FORCE', '-COMP:C/fin', '-COMP:T/fin', '-SPEC:V', 'SPEC:*', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:v', 'ARG', 'PF:vAn', 'VAL', 'COMP:V', 'LF:VA', 'PHI:PER:_', 'PHI:DET:_', 'VA/inf', 'INF', 'LANG:EN', '!SPEC:*', '-SPEC:T/fin'}
MA/ssa          {'-SPEC:N', 'ADV', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:FORCE', 'TAIL:V', 'PF:massa', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:v', 'ARG', 'COMP:V', 'LF:in_doing', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'MA/ssa', 'adjoinable', 'LANG:EN', '-SPEC:T/fin', 'MA/inf'}
MA/tta          {'TAIL:T', 'ARG', '-SPEC:N', 'ADV', 'PF:matta', 'PHI:PER:_', '-VAL', '-SPEC:Neg/fin', 'PHI:DET:_', '-SPEC:FORCE', 'PHI:NUM:_', 'LF:without_doing', 'adjoinable', 'LANG:EN', '-SPEC:T/fin', 'MA/inf', 'PHI:GEN:_'}
MA/lla          {'ADV', 'COMP:v', 'ARG', 'COMP:V', 'LF:by_doing', '-SPEC:T/fin', 'MA/inf', 'TAIL:T', '-SPEC:N', 'PF:malla', '-SPEC:Neg/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:GEN:_', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'adjoinable', 'LANG:EN'}
MA/inf          {'ADV', 'LF:to_do', 'COMP:v', 'ARG', 'COMP:V', '-SPEC:T/fin', 'TAIL:V', 'MA/inf', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:GEN:_', 'PF:maan', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'adjoinable', 'LANG:EN'}
E/inf           {'TAIL:T', '-SPEC:N', 'PF:en', 'ADV', 'LF:by', '-ARG', '-VAL', 'LANG:FI', '-SPEC:Neg/fin', '-SPEC:FORCE', 'adjoinable', 'SPEC:*', '-SPEC:T/fin'}
BE-             {'COPULA', '!COMP:*', '-COMP:v', '-COMP:N', 'SPEC:P', '-ARG', '-SPEC:FORCE', 'SPEC:ADV', '-COMP:T/fin', 'COMP:T/prt', 'SPEC:D', 'V', 'SPEC:TO/inf', '-SPEC:T/fin', 'COMP:P', 'LF:BE', '-VAL', '-COMP:V', 'LANG:EN', 'PF:BE', 'ASP'}
D               {'!COMP:*', '-SPEC:INF', '-ARG', '-COMP:D', '-SPEC:Neg/fin', '-COMP:T/fin', '-COMP:P', '-SPEC:V', 'PF:D', 'LF:D', 'OP', '-SPEC:MA/lla', '!PROBE:N', 'D', 'COMP:N', '-SPEC:C', '-SPEC:P', '-COMP:uR', 'adjoinable', 'LANG:EN', '-SPEC:T/fin'}
D/rel           {'!COMP:*', 'D/rel', '-COMP:D', '-ARG', 'OP:_', '-COMP:C/fin', '-SPEC:INF', '-SPEC:Neg/fin', 'inflectional', 'OP:REL', 'PF:D/rel', '-SPEC:V', '-COMP:T/fin', 'LF:D/rel', 'OP', '-SPEC:MA/lla', '!PROBE:N', 'D', 'COMP:N', '-SPEC:C', '-SPEC:P', '-COMP:uR', 'adjoinable', 'LANG:EN', '-SPEC:T/fin'}
P               {'P', '!COMP:*', '-SPEC:N', '-COMP:N', '-SPEC:INF', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:iWH', '-COMP:T', '-float', '-SPEC:v', 'COMP:D', '-SPEC:C/fin', '-SPEC:V', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:ADV', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:iR', '-VAL', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:C', '-COMP:uWH', 'LF:P', '-SPEC:P', 'adjoinable', 'LANG:EN', 'PF:P'}
pro             ['LANG:EN']
pro-            {'-SPEC:N', '-COMP:v', '-COMP:N', 'COMP:D/rel', 'PF:(pro)', 'N', '-COMP:AUX', '-COMP:C/fin', '-SPEC:INF', 'SPEC:A', 'LF:pro', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', 'COMP:R', 'COMP:uR', 'COMP:T/prt', 'COMP:C', '-COMP:A', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:P', 'PHI', '-SPEC:uWH', '-SPEC:P', '-COMP:V', 'LANG:EN', '-SPEC:R', '-COMP:WH'}
cl              {'RIGHT:PRG', 'LEFT:T/fin', 'LEFT:D,CL', 'CL', 'LANG:EN', 'inflectional', 'RIGHT:ARE/inf'}
inc             {'INCORPORATED', 'LANG:EN', 'inflectional'}
sg              {'LANG:EN', 'PHI:NUM:SG', 'inflectional'}
pl              {'LANG:EN', 'PHI:NUM:PL', 'inflectional'}
1p              {'LANG:EN', 'inflectional', 'PHI:PER:1'}
2p              {'LANG:EN', 'inflectional', 'PHI:PER:2'}
3p              {'LANG:EN', 'inflectional', 'PHI:PER:3'}
def             {'LANG:EN', 'PHI:DET:DEF', 'inflectional'}
indef           {'LANG:EN', 'PHI:DET:INDEF', 'inflectional'}
hum             {'LANG:EN', 'PHI:HUM:HUM', 'inflectional'}
nonhum          {'LANG:EN', 'inflectional', 'PHI:HUM:NONHUM'}
m               {'PHI:GEN:M', 'inflectional', 'LANG:EN'}
f               {'LANG:EN', 'PHI:GEN:F', 'inflectional'}
nom             {'LANG:EN', 'NOM', 'inflectional', 'TAIL:FIN,!COMP:*,VAL'}
acc             {'ACC', 'inflectional', 'LANG:EN', 'TAIL:v'}
dat             {'LANG:EN', 'DAT', 'inflectional', 'TAIL:v'}
uC/op           {'LANG:EN', 'uC/op', 'inflectional'}
wh              {'OP:WH', 'LANG:EN', 'OP:_', 'inflectional'}
wh_             {'LANG:EN', 'OP', 'FORCE:OP:WH', 'OP:_', 'inflectional'}
top             {'OP:TOP', 'inflectional', 'LANG:EN'}
foc             {'LANG:EN', 'OP:FOC', 'inflectional'}
C/op            {'OP:C/OP', 'LANG:EN', 'inflectional'}
Q               {'OP:WH', 'OP', 'LANG:EN', 'inflectional', 'OP:Q'}
