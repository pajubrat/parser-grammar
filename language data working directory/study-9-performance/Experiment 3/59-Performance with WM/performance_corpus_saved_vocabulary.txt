ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'-SPEC:iR', '-SPEC:T/fin', 'adjoinable', '-COMP:T', 'PF:a', '-COMP:T/fin', '-SPEC:P', 'LANG:IT', '-SPEC:*', '-ARG', 'COMP:ARE/inf', '-SPEC:Neg/fin', 'TAIL:V', '-SPEC:INF', 'P', 'COMP:D', '-SPEC:iWH', 'LF:to', '-SPEC:C/fin', '-SPEC:N', '-COMP:uWH', '-SPEC:C', '-SPEC:v', '-SPEC:ADV', '!COMP:*', '-COMP:N', '-COMP:ADV', '-COMP:A', '-VAL', '-SPEC:V', '-SPEC:FORCE'}
a_D             {'-SPEC:T/fin', '-SPEC:MA/lla', 'adjoinable', 'COMP:N', '-COMP:P', '-COMP:T/fin', '-SPEC:P', '-SPEC:Neg/fin', '-ARG', '-SPEC:INF', 'LF:D', 'PF:D', '-COMP:D', 'LANG:EN', 'D', '-SPEC:C', '!PROBE:N', '!COMP:*', '-COMP:uR', 'OP', '-SPEC:V'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-SPEC:T/fin', '-SPEC:Neg', '-COMP:Neg', 'ARG', 'SPEC:P', '-COMP:T/fin', '-COMP:P', 'PHI:GEN:_', 'LF:admire', '-COMP:V', 'COMP:D', 'SPEC:TO/inf', 'PHI:NUM:_', 'CLASS:TR', 'ASP', 'LANG:EN', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:v', 'PF:admire', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
admire*         ['LANG:EN']
T/fin*          {'NO_NUMBER', 'LANG:EN', 'CAT:T/fin', 'LF:T', "PF:T/fin'", '-VAL', '!SPEC:*', 'NO_DET'}
v*              {'NO_NUMBER', 'LANG:EN', '-VAL', 'PF:v', 'LF:v', 'CAT:v', 'NO_DET'}
admire**        ['LANG:EN']
T/fin**         {'NO_NUMBER', 'LANG:EN', 'CAT:T/fin', 'LF:T', '-VAL', "PF:T/fin''", 'NO_PERSON', '!SPEC:*', 'NO_DET', 'PHI:PER:3'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'-SPEC:T/fin', 'ARG', 'SPEC:P', 'PHI:GEN:_', 'LANG:IT', 'LF:admire', '-COMP:V', 'COMP:D', 'SPEC:TO/inf', 'PF:adora', 'PHI:NUM:_', 'ASP', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
antaa           ['LANG:FI']
anta-           {'-SPEC:T/fin', 'PF:antaa', 'LF:give', 'CLASS:DITR', 'ARG', 'SPEC:P', '-COMP:V', 'LANG:FI', 'ASP:BOUNDED', 'COMP:D', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'PHI:PER:_', '+SEM:directional', '!COMP:*', '-COMP:N', '-COMP:FIN', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'-SPEC:T/fin', 'PF:ask', 'ARG', 'SPEC:P', 'PHI:GEN:_', '-COMP:V', 'COMP:D', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'LF:ask', 'LANG:EN', 'PHI:PER:_', 'SEM:internal', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', 'LF:key', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:V', 'LANG:FI', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', '-SEM:directional', 'PF:avain', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:V', 'LANG:FI', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', 'LF:car', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', '-SEM:directional', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE', 'PF:auto'}
bank            {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', 'LF:bank_inst', '-SPEC:P', '-COMP:V', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', 'PF:bank1', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'LANG:EN', 'COMP:R/D', '-SPEC:ADV', 'FREQ:1', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
bank            {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:V', '-SPEC:INF', 'COMP:C', 'FREQ:2', '-SPEC:C/fin', 'PF:bank2', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'LANG:EN', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', 'LF:bank_river', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
barn            {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', 'PF:barn', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:V', '-SPEC:INF', 'COMP:C', 'LF:barn', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'LANG:EN', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
city            {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:V', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', 'PF:city', '-SPEC:R', 'SPEC:A', 'LANG:EN', 'COMP:R/D', '-SPEC:ADV', '-COMP:WH', '-SPEC:V', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', 'LF:city', '-COMP:C/fin', '-SPEC:FORCE'}
che             ['LANG:IT']
che-            {'COMP:R', 'COMP:T/prt', 'N', 'LF:who', '-SPEC:uWH', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', 'LANG:IT', '-COMP:V', '-SPEC:INF', '-SPEC:N', '-COMP:WH', '-COMP:*', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P', 'PF:che'}
chiamato        ['LANG:IT']
chiamata-       {'-SPEC:T/fin', 'COMP:P', 'ARG', 'SPEC:P', 'PHI:GEN:_', 'LANG:IT', '-COMP:V', 'SPEC:TO/inf', 'PF:chiamato', 'PHI:NUM:_', 'ASP', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'LF:called', '-SPEC:FORCE', 'PHI:DET:_'}
claims          ['LANG:EN']
claim-          {'LF:claim', '-SPEC:T/fin', 'ARG', 'SPEC:P', 'PHI:GEN:_', '-COMP:V', 'PF:claim', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'COMP:T/fin', '-COMP:D', 'ASP', 'LANG:EN', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
danno           {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', 'LANG:IT', '-COMP:V', '-SPEC:INF', 'COMP:C', 'PF:danno', 'LF:damage', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'-SPEC:T/fin', 'ARG', 'SPEC:P', 'PHI:GEN:_', 'LF:detest', 'LANG:IT', 'COMP:ARE/inf', '-COMP:V', 'COMP:D', 'SPEC:TO/inf', 'PHI:NUM:_', 'SPEC:ADV', 'ASP', 'PHI:PER:_', 'SEM:internal', '-COMP:N', '-COMP:v', 'V', 'PF:detest', '-VAL', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
devono          ['LANG:EN']
deva-           {'-SPEC:T/fin', 'ARG', 'LF:must', 'SPEC:P', 'PHI:GEN:_', 'PF:deva', 'LANG:IT', 'COMP:ARE/inf', '-COMP:V', '-SPEC:FORCE', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'PHI:PER:_', 'SEM:internal', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-ASP', 'PHI:DET:_'}
di              {'-SPEC:iR', 'PF:di', '-SPEC:T/fin', '-COMP:T', 'ARG', '-COMP:T/fin', '-SPEC:P', '-SPEC:Neg/fin', 'LANG:FI', '-SPEC:INF', 'P', 'COMP:D', '-SPEC:iWH', 'PHI:NUM:_', '-SPEC:C/fin', 'LF:of', '-adjoinable', '-SPEC:N', '-COMP:uWH', '-SPEC:C', '-SPEC:v', '-SPEC:ADV', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:ADV', '-COMP:A', '-VAL', 'SPEC:*', '-SPEC:V', '-SPEC:FORCE', 'PHI:DET:_'}
does            {'COMP:T/prt', 'PF:does', '-COMP:T/fin', 'PHI:GEN:_', 'SPEC:C/fin', 'SPEC:*', 'VAL', 'SPEC:D', 'PHI:NUM:_', 'SPEC:FORCE', 'PHI:GEN:M', 'LANG:EN', '-SPEC:C', '-SPEC:v', 'COMP:V', 'PHI:NUM:SG', 'FIN', '!SPEC:*', '-SPEC:T/fin', '-SPEC:Neg', 'ARG', 'PHI:GEN:F', 'PHI:PER:3', 'LF:does', 'SPEC:TO/inf', '-COMP:INF', '-SPEC:N', 'T', 'PHI:PER:_', '!COMP:*', '!PROBE:V', 'COMP:v', '-SPEC:TO/inf', 'COMP:Neg', '-SPEC:V', 'PHI:DET:_', 'T/fin'}
does_C          ['LANG:EN']
does-           {'COMP:T/prt', 'PF:does', '-COMP:T/fin', 'PHI:GEN:_', 'SPEC:C/fin', 'SPEC:*', 'VAL', 'SPEC:D', 'PHI:NUM:_', 'SPEC:FORCE', 'PHI:GEN:M', 'LANG:EN', '-SPEC:C', '-SPEC:v', 'COMP:V', 'PHI:NUM:SG', 'FIN', '!SPEC:*', '-SPEC:T/fin', '-SPEC:Neg', 'ARG', 'PHI:GEN:F', 'PHI:PER:3', 'LF:does', 'SPEC:TO/inf', '-COMP:INF', '-SPEC:N', 'T', 'PHI:PER:_', '!COMP:*', '!PROBE:V', 'COMP:v', '-SPEC:TO/inf', 'COMP:Neg', '-SPEC:V', 'PHI:DET:_', 'T/fin'}
dorme           ['LANG:IT']
dorme-          {'-SPEC:T/fin', 'PF:dorme', 'ARG', 'SPEC:P', 'PHI:GEN:_', 'LF:sleep', '-COMP:V', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'ASP', '-COMP:D', 'LANG:EN', 'PHI:PER:_', '-COMP:MA/inf', '!SPEC:D', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'PHI:DET:_', 'COMP:P', '-SPEC:FORCE', 'CLASS:INTR'}
disappeared     ['LANG:EN']
disappear-      {'-SPEC:T/fin', 'ARG', 'SPEC:P', 'PHI:GEN:_', '-COMP:V', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'SPEC:ADV', 'ASP', '-COMP:D', 'LANG:EN', 'CLASS:INTR', 'PHI:PER:_', '-COMP:MA/inf', '-COMP:N', '-COMP:v', 'V', 'PF:disappear', '-VAL', 'PHI:DET:_', 'COMP:P', '-SPEC:FORCE', 'LF:disappear'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'LANG:EN', 'PF:easy', '2SPEC', 'LF:easy', '0', 'SPEC:D'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'-SPEC:T/fin', 'COMP:T/prt', 'ARG', '!COMP:T', '%SPEC:INF', 'PF:ei', 'POL:NEG', 'LANG:FI', '-SPEC:T', 'VAL', 'SPEC:*', 'PHI:NUM:_', 'Neg/fin', 'NEG', 'PHI:PER:_', '!COMP:*', 'SEM:internal', 'FIN', '!SPEC:*', 'PHI:DET:_', 'LF:neg'}
e-              {'-SPEC:T/fin', 'COMP:T/prt', 'ARG', '!COMP:T', '%SPEC:INF', 'PF:ei', 'POL:NEG', 'LANG:FI', '-SPEC:T', 'VAL', 'SPEC:*', 'PHI:NUM:_', 'Neg/fin', 'NEG', 'PHI:PER:_', '!COMP:*', 'SEM:internal', 'FIN', '!SPEC:*', 'PHI:DET:_', 'LF:neg'}
elaa            ['LANG:FI']
ela-            {'-SPEC:T/fin', 'ARG', 'SPEC:P', 'LF:live', 'PF:elaa', '-COMP:V', 'LANG:FI', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'ASP', '-COMP:D', 'PHI:PER:_', '-COMP:MA/inf', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'PHI:DET:_', 'COMP:P', '-SPEC:FORCE', 'CLASS:INTR'}
etsii           ['LANG:FI']
etsi-           {'-SPEC:T/fin', 'ARG', 'SPEC:P', '-COMP:P', 'PF:etsi', '-COMP:V', 'LANG:FI', 'COMP:D', 'SPEC:TO/inf', 'PHI:NUM:_', 'CLASS:TR', 'ASP', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:v', 'LF:search', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_', '!COMP:D'}
etta            {'FORCE', 'COMP:T/fin', 'LF:that', '-SPEC:D', '!COMP:*', '-SPEC:*', '-ARG', 'FIN', 'LANG:FI', '-VAL', 'PF:etta', '!PROBE:FIN', 'COMP:C/fin'}
fell            ['LANG:EN']
fell-           {'-SPEC:T/fin', 'ARG', 'SPEC:P', 'PHI:GEN:_', '-COMP:V', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'ASP', '-COMP:D', 'LF:fell', 'LANG:EN', 'PHI:PER:_', 'PF:fell', '-COMP:MA/inf', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'PHI:DET:_', 'COMP:P', '-SPEC:FORCE', 'CLASS:INTR'}
flow'           {'-SPEC:T/fin', 'ARG', 'LF:flow', 'SPEC:P', 'PHI:GEN:_', '-COMP:V', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'PF:flow', 'ASP', 'LANG:EN', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
from            {'-SPEC:iR', '-SPEC:T/fin', 'adjoinable', '-float', '-COMP:T', 'ARG', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:P', '-SPEC:Neg/fin', '-SPEC:*', 'LF:from', '-SPEC:INF', 'P', 'PF:from', 'COMP:D', '-SPEC:iWH', 'TAIL:V,+SEM:directional', '-SPEC:C/fin', 'PHI:NUM:_', '-SPEC:N', '-COMP:uWH', 'LANG:EN', '-SPEC:C', '-SPEC:v', '-SPEC:ADV', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:ADV', '-COMP:A', '-VAL', '-SPEC:V', '-SPEC:FORCE', 'PHI:DET:_'}
gave            ['LANG:EN']
give-           {'-SPEC:T/fin', 'LF:give', 'CLASS:DITR', 'ARG', 'SPEC:P', 'PHI:GEN:_', '-COMP:V', 'PF:give', 'COMP:D', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'LANG:EN', 'PHI:PER:_', '+SEM:directional', '!COMP:*', '-COMP:N', '-COMP:FIN', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', 'LANG:IT', '-COMP:V', 'LF:Giuseppe', 'PF:Giuseppe', 'COMP:C', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', '-SEM:directional', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'-SPEC:T/fin', 'ARG', 'SPEC:P', '-COMP:P', '-SPEC:*', '-COMP:V', '-SPEC:FORCE', 'COMP:A/inf', 'LANG:FI', 'ASP:BOUNDED', 'COMP:D', 'SPEC:TO/inf', 'PHI:NUM:_', 'CLASS:TR', 'ASP', 'PF:haluaa', 'PHI:PER:_', '!COMP:*', 'SEM:internal', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', 'LF:want', 'PHI:DET:_'}
hairitsee       ['LANG:FI']
hairitse-       {'-SPEC:T/fin', 'ARG', 'LF:disturb', 'SPEC:P', '-COMP:P', '-COMP:V', 'LANG:FI', 'COMP:D', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'CLASS:TR', 'ASP', 'PF:hairitsee', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:FIN', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_', '!COMP:D'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'-SPEC:T/fin', 'ARG', 'SPEC:P', 'PHI:GEN:_', 'LANG:IT', '-COMP:V', '-SPEC:FORCE', 'PF:ha', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', 'SEM:internal', 'COMP:T', 'LF:have', '-COMP:N', 'V', '-COMP:v', '-VAL', 'SPEC:*', 'COMP:P', '-ASP', 'PHI:DET:_'}
horse           {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', 'PF:horse', '-SPEC:P', '-COMP:V', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'LANG:EN', 'LF:horse', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'-SPEC:T/fin', 'ARG', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'ASP', '-COMP:D', 'CLASS:INTR', 'PHI:PER:_', '-COMP:MA/inf', 'PF:havia', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'PHI:DET:_', 'COMP:P', '-SPEC:FORCE', 'LF:disappear'}
Helsingissa     ['LANG:FI']
Helsinki        ['LANG:FI']
Helsinki-       {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:V', 'LANG:FI', '-SPEC:INF', 'LF:Helsinki', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', 'PF:Helsinki', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'-SPEC:T/fin', 'ARG', 'SPEC:P', '-COMP:P', 'PF:ihaile-', 'LF:admire', '-COMP:V', 'LANG:FI', 'COMP:D', 'SPEC:TO/inf', 'PHI:NUM:_', 'CLASS:TR', 'ASP', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:FIN', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_', '!COMP:D'}
il              {'-SPEC:T/fin', '-SPEC:MA/lla', 'adjoinable', 'COMP:N', '-COMP:P', '-COMP:T/fin', '-SPEC:P', 'LANG:IT', '-SPEC:Neg/fin', '-ARG', '-SPEC:INF', '-COMP:D', 'OP', 'PF:il', '-SPEC:C', 'D', '!PROBE:N', '!COMP:*', 'LF:the', '-COMP:uR', '-SPEC:V'}
i               {'-SPEC:T/fin', '-SPEC:MA/lla', 'adjoinable', 'COMP:N', '-COMP:P', '-COMP:T/fin', '-SPEC:P', 'LANG:IT', '-SPEC:Neg/fin', '-ARG', '-SPEC:INF', '-COMP:D', 'OP', 'PF:il', '-SPEC:C', 'D', '!PROBE:N', '!COMP:*', 'LF:the', '-COMP:uR', '-SPEC:V'}
in              {'-SPEC:iR', '-SPEC:T/fin', 'adjoinable', '-COMP:T', 'ARG', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:P', 'LANG:IT', '-SPEC:Neg/fin', '-SPEC:INF', 'P', 'COMP:D', '-SPEC:iWH', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:N', '-COMP:uWH', '-SPEC:C', '-SPEC:v', '-SPEC:ADV', 'PHI:PER:_', '!COMP:*', 'LF:in', '-COMP:N', '-COMP:ADV', '-COMP:A', '-VAL', '-SPEC:V', 'PF:in', '-SPEC:FORCE', 'PHI:DET:_'}
infermieri      {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', 'LANG:IT', '-COMP:V', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', 'PF:infermieri', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'LF:nurses', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
is              ['LANG:EN']
be-             {'-SPEC:T/fin', 'SPEC:P', '-ARG', '-COMP:V', 'COPULA', 'SPEC:TO/inf', 'PF:be', 'SPEC:D', 'ASP', 'LF:be', 'LANG:EN', '-COMP:TO/inf', '!COMP:*', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'-SPEC:T/fin', 'COMP:P', 'ARG', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'ASP', '-COMP:D', 'PHI:PER:_', '-COMP:MA/inf', 'LF:sit', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'PHI:DET:_', 'PF:istuu', '-SPEC:FORCE', 'CLASS:INTR'}
John            ['LANG:EN']
John-           {'COMP:R', 'COMP:T/prt', 'PF:John', 'N', '-SPEC:uWH', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'LANG:EN', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', '-COMP:V', '-SPEC:INF', '-adjoinable', '-SPEC:N', '-COMP:WH', 'LF:John', '-SEM:directional', '-COMP:v', '-SPEC:V', 'COMP:P'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'COMP:R', 'COMP:T/prt', 'N', 'LF:who', '-SPEC:uWH', 'LANG:FI', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', '-COMP:V', '-SPEC:INF', '-SPEC:N', '-COMP:WH', '-COMP:*', 'PHI_N', '-COMP:v', 'PF:joka', '-SPEC:V', 'COMP:P'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', 'LF:Jukka', '-COMP:V', 'LANG:FI', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', 'PF:Jukka', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', '-SEM:directional', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'-SPEC:T/fin', 'LF:run', 'ARG', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:TO/inf', 'PHI:NUM:_', 'ASP', 'PF:juokse-', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
kaksi           {'LF:two', 'COMP:N', 'COMP:n', 'PHI:PER:_', 'ARG', 'PHI:NUM:SG', 'TAIL:ARG,VAL,FIN', 'LANG:FI', '-VAL', 'PF:kaksi', 'SPEC:*', 'PHI:DET:_', 'PHI:NUM:_', 'NUM'}
kaksi           {'TAIL:*POL:NEG', 'LF:two', 'COMP:N', 'LANG:EN', 'COMP:n', 'PF:kaksi', 'SPEC:*', 'TAIL:ARG,ASP:BOUNDED', 'NUM'}
kaksi_1         {'LF:two', 'COMP:N', 'COMP:n', 'PHI:PER:_', 'ARG', 'PHI:NUM:SG', 'TAIL:ARG,VAL,FIN', 'LANG:FI', '-VAL', 'PF:kaksi', 'SPEC:*', 'PHI:DET:_', 'PHI:NUM:_', 'NUM'}
kaksi_2         {'TAIL:*POL:NEG', 'LF:two', 'COMP:N', 'LANG:EN', 'COMP:n', 'PF:kaksi', 'SPEC:*', 'TAIL:ARG,ASP:BOUNDED', 'NUM'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'LANG:FI', 'SPEC:*', 'LF:two', 'PF:kaksi', 'COMP:n', 'COMP:N', 'NUM'}
kaupunkia       ['LANG:EN']
kaupunki        {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'N', '-SPEC:uWH', '-COMP:AUX', '-COMP:P', '-SPEC:P', '-COMP:V', 'PF:kaupunki', 'LANG:FI', 'COMP:C', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', '-SPEC:V', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', 'LF:city', '-COMP:C/fin', '-SPEC:FORCE'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'-SPEC:T/fin', 'LF:order', 'PF:kaske', 'ARG', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:TO/inf', 'PHI:NUM:_', 'ASP', 'PHI:PER:_', '!COMP:A/inf', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'SEM:external', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'LF:watch', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:V', 'LANG:FI', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', 'PF:kello', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
kello0-         {'LANG:FI', '2SPEC', 'LF:watch', '0', 'PF:kello', 'SPEC:D'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', 'LF:key', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:V', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'LANG:EN', 'COMP:R/D', '-SPEC:ADV', 'PF:key', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
kirja           ['LANG:FI']
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', 'PF:kirja', '-SPEC:P', '-COMP:V', 'LANG:FI', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', '-SEM:directional', '-COMP:N', 'LF:book', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
knows           ['LANG:EN']
know-           {'-SPEC:T/fin', 'ARG', 'SPEC:P', '-COMP:P', 'PHI:GEN:_', '-COMP:V', 'PF:know', 'COMP:D', 'SPEC:TO/inf', 'PHI:NUM:_', 'CLASS:TR', 'ASP', 'LF:know', 'LANG:EN', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
kohti           {'-SPEC:iR', '-SPEC:T/fin', 'adjoinable', '-COMP:T', 'ARG', '-COMP:T/fin', '-SPEC:P', '-SPEC:Neg/fin', 'TAIL:V', 'LANG:FI', '-SPEC:INF', 'P', 'COMP:D', '-SPEC:iWH', 'PHI:NUM:_', '-SPEC:C/fin', 'LF:towards', '-SPEC:N', '-COMP:uWH', '-SPEC:C', '-SPEC:v', '-SPEC:ADV', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:ADV', '-COMP:A', '-VAL', 'PF:kohti', 'SPEC:*', '-SPEC:V', '-SPEC:FORCE', 'PHI:DET:_'}
koko            {'-SPEC:T/fin', '-SPEC:MA/lla', 'adjoinable', 'COMP:N', '-COMP:P', '-COMP:T/fin', '-SPEC:P', '-SPEC:Neg/fin', '-ARG', 'LANG:FI', '-SPEC:INF', 'TAIL:T', '-COMP:D', '-SPEC:C', 'D', '!PROBE:N', '!COMP:*', 'LF:all', 'PF:koko', '-COMP:uR', 'OP', '-SPEC:V'}
kuka            ['LANG:FI']
kuka-           {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', 'LF:who', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:V', 'LANG:FI', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', '-SPEC:V', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', 'PF:kuka', 'PHI', '-COMP:C/fin', '-SPEC:FORCE'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'-SPEC:T/fin', 'PF:kuorsaa', 'LF:snore', 'ARG', '-COMP:T/fin', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:TO/inf', 'PHI:NUM:_', 'ASP', '-COMP:D', '-COMP:WH', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
lahella         {'-SPEC:iR', 'adjoinable', 'INF', '-COMP:T', '-COMP:T/fin', '-SPEC:Neg/fin', 'LANG:FI', 'VAL', 'COMP:D', '-SPEC:iWH', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:C', '-SPEC:v', '-SPEC:ADV', 'COMP:V', '!SPEC:D', '-COMP:N', '-COMP:ADV', '-COMP:A', '!SPEC:*', '-COMP:C/fin', '-SPEC:FORCE', 'LF:near', '-SPEC:T/fin', 'ARG', '-SPEC:P', '-SPEC:INF', 'P', '-SPEC:N', 'PF:lahella', '-COMP:uWH', '-COMP:FORCE', 'PHI:PER:_', '!COMP:*', 'COMP:v', 'SPEC:*', '-SPEC:V', 'PHI:DET:_'}
lahella         {'LF:near', '-SPEC:iR', '-SPEC:T/fin', 'adjoinable', '-COMP:T', 'ARG', '-COMP:T/fin', '-SPEC:P', '-SPEC:Neg/fin', 'LANG:FI', '-SPEC:INF', 'P', 'COMP:D', '-SPEC:iWH', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:N', 'PF:lahella', '-COMP:uWH', '-SPEC:C', '-SPEC:v', '-SPEC:ADV', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:ADV', '-COMP:A', '-VAL', 'SPEC:*', '-SPEC:V', '-SPEC:FORCE', 'PHI:DET:_', '!COMP:D'}
lahella_1       {'LF:near', '-SPEC:iR', '-SPEC:T/fin', 'adjoinable', '-COMP:T', 'ARG', '-COMP:T/fin', '-SPEC:P', '-SPEC:Neg/fin', 'LANG:FI', '-SPEC:INF', 'P', 'COMP:D', '-SPEC:iWH', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:N', 'PF:lahella', '-COMP:uWH', '-SPEC:C', '-SPEC:v', '-SPEC:ADV', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:ADV', '-COMP:A', '-VAL', 'SPEC:*', '-SPEC:V', '-SPEC:FORCE', 'PHI:DET:_', '!COMP:D'}
lahella_2       {'-SPEC:iR', 'adjoinable', 'INF', '-COMP:T', '-COMP:T/fin', '-SPEC:Neg/fin', 'LANG:FI', 'VAL', 'COMP:D', '-SPEC:iWH', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:C', '-SPEC:v', '-SPEC:ADV', 'COMP:V', '!SPEC:D', '-COMP:N', '-COMP:ADV', '-COMP:A', '!SPEC:*', '-COMP:C/fin', '-SPEC:FORCE', 'LF:near', '-SPEC:T/fin', 'ARG', '-SPEC:P', '-SPEC:INF', 'P', '-SPEC:N', 'PF:lahella', '-COMP:uWH', '-COMP:FORCE', 'PHI:PER:_', '!COMP:*', 'COMP:v', 'SPEC:*', '-SPEC:V', 'PHI:DET:_'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'-SPEC:T/fin', 'ARG', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'ASP', '-COMP:D', 'PF:lahtea', 'PHI:PER:_', 'LF:leave', '-COMP:MA/inf', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:PP', 'PHI:DET:_', 'COMP:P', '-SPEC:FORCE', 'CLASS:INTR'}
lavano          ['LANG:IT']
lava-           {'PF:lava', '-SPEC:T/fin', 'COMP:P', 'ARG', 'SPEC:P', 'PHI:GEN:_', 'LANG:IT', '-COMP:V', 'COMP:D', 'SPEC:TO/inf', 'PHI:NUM:_', 'ASP', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'LF:wash', '-SPEC:FORCE', 'PHI:DET:_'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-SPEC:T/fin', '-SPEC:MA/lla', 'adjoinable', 'COMP:N', '-COMP:P', '-COMP:T/fin', '-SPEC:P', 'LANG:IT', '-SPEC:Neg/fin', '-ARG', '-SPEC:INF', 'LF:D', '-COMP:D', '-SPEC:C', 'D', '!PROBE:N', '!COMP:*', '-COMP:uR', 'OP', '-SPEC:V', 'PF:le'}
leaves          ['LANG:EN']
leave           {'-SPEC:T/fin', 'ARG', 'SPEC:P', '-COMP:T/fin', 'PHI:GEN:_', 'PF:leave', '-COMP:V', 'SPEC:TO/inf', 'PHI:NUM:_', 'ASP', 'LANG:EN', 'PHI:PER:_', 'LF:leave', '!SPEC:D', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
leave-          {'-SPEC:T/fin', 'ARG', 'SPEC:P', '-COMP:T/fin', 'PHI:GEN:_', 'PF:leave', '-COMP:V', 'SPEC:TO/inf', 'PHI:NUM:_', 'ASP', 'LANG:EN', 'PHI:PER:_', 'LF:leave', '!SPEC:D', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
like-           {'-SPEC:T/fin', 'LF:like', 'ARG', 'SPEC:P', 'PHI:GEN:_', '-COMP:V', 'SPEC:TO/inf', 'PHI:NUM:_', 'ASP', 'LANG:EN', 'PHI:PER:_', 'PF:like', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_', '!COMP:D'}
likes           ['LANG:EN']
like            {'-SPEC:T/fin', 'LF:like', 'ARG', 'SPEC:P', 'PHI:GEN:_', '-COMP:V', 'SPEC:TO/inf', 'PHI:NUM:_', 'ASP', 'LANG:EN', 'PHI:PER:_', 'PF:like', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_', '!COMP:D'}
little          ['LANG:EN']
little-         {'LF:little', 'LANG:EN', 'PF:little-', '2SPEC', '0', 'SPEC:D'}
lle             {'-SPEC:iR', '-SPEC:T/fin', 'adjoinable', 'LF:for', '-COMP:T', 'ARG', '-COMP:T/fin', '-SPEC:P', '-SPEC:Neg/fin', '-SPEC:*', 'LANG:FI', '-SPEC:INF', 'P', 'COMP:D', '-SPEC:iWH', 'TAIL:V,+SEM:directional', '-SPEC:C/fin', 'PHI:NUM:_', '-SPEC:N', '-COMP:uWH', '-SPEC:C', '-SPEC:v', '-SPEC:ADV', 'PHI:PER:_', '+SEM:directional', 'PF:P(lle)', '!COMP:*', '-COMP:N', '-COMP:ADV', '-COMP:A', '-VAL', '-SPEC:V', '-SPEC:FORCE', 'PHI:DET:_'}
lla             {'-SPEC:iR', '-SPEC:T/fin', 'adjoinable', '-COMP:T', 'ARG', '-COMP:T/fin', '-SPEC:P', '-SPEC:Neg/fin', 'LANG:FI', '-SPEC:INF', 'P', 'COMP:D', '-SPEC:iWH', 'PHI:NUM:_', 'TAIL:*V', 'TAIL:T', '-SPEC:C/fin', '-SPEC:N', '-COMP:uWH', '-SPEC:C', '-SPEC:v', '-SPEC:ADV', 'PHI:PER:_', 'LF:by', '!COMP:*', '-COMP:N', '-COMP:ADV', '-COMP:A', '-VAL', 'SPEC:*', '-SPEC:V', '-SPEC:FORCE', 'PHI:DET:_', 'PF:P(lla)'}
Luisa           ['LANG:IT']
Luisa-          {'PF:Luisa', 'COMP:R', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:T/fin', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', 'LANG:IT', '-COMP:V', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', 'LF:Luisa', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', '-SEM:directional', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'-SPEC:T/fin', 'ARG', 'SPEC:P', '-COMP:P', '-COMP:V', 'LANG:FI', 'LF:read', 'PF:luke', 'COMP:D', 'SPEC:TO/inf', 'PHI:NUM:_', 'CLASS:TR', 'ASP', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'-SPEC:T/fin', 'ARG', 'SPEC:P', '-COMP:P', '-COMP:V', 'LF:find', 'LANG:FI', 'PF:loyta-', 'ASP:BOUNDED', 'COMP:D', 'SPEC:TO/inf', 'PHI:NUM:_', 'CLASS:TR', 'ASP', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_', '!COMP:D'}
Mary            ['LANG:EN']
Mary-           {'COMP:R', 'COMP:T/prt', 'PF:Mary', 'N', '-SPEC:uWH', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'LANG:EN', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'LF:Mary', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', '-COMP:V', '-SPEC:INF', '-adjoinable', '-SPEC:N', '-COMP:WH', '-SEM:directional', '-COMP:v', '-SPEC:V', 'COMP:P'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'COMP:R', 'COMP:T/prt', 'N', 'LF:Merja', '-SPEC:uWH', 'PF:Merja', 'LANG:FI', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', '-COMP:V', '-SPEC:INF', '-adjoinable', '-SPEC:N', '-COMP:WH', '-SEM:directional', '-COMP:v', '-SPEC:V', 'COMP:P'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'-SPEC:T/fin', '-SPEC:N', 'MA/inf', 'adjoinable', 'PF:malla', 'ADV', 'LF:by', '-SPEC:Neg/fin', 'COMP:v', 'LANG:FI', 'SPEC:*', '-SPEC:FORCE', 'TAIL:T'}
meren           ['LANG:FI']
mere-           {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:V', 'LANG:FI', '-SPEC:INF', 'COMP:C', 'LF:ocean', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', 'PF:meri', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
mies            {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', 'PF:mies', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:V', 'LANG:FI', 'LF:man', 'COMP:C', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
mistake         {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:V', 'PF:mistake', 'COMP:C', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'LANG:EN', 'COMP:R/D', '-SPEC:ADV', 'LF:mistake', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-SPEC:FORCE', '-COMP:V', 'LANG:FI', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', 'PF:mika-', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', 'LF:what'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'-SPEC:T/fin', 'LANGN:EN', 'ARG', 'SPEC:P', '-COMP:P', 'PHI:GEN:_', '-COMP:V', 'COMP:D', 'SPEC:TO/inf', 'PHI:NUM:_', 'LF:move', 'CLASS:TR', 'ASP', 'PHI:PER:_', '+SEM:directional', '!COMP:*', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_', 'PF:move'}
mukavasti       ['LANG:EN']
mukava-         {'PF:mukavasti', 'LANG:FI', '2SPEC', '0', 'LF:comfortably', 'SPEC:D'}
must            {'-SPEC:T/fin', 'COMP:T/prt', '-SPEC:Neg', 'ARG', 'LF:must', '-COMP:T/fin', 'PHI:GEN:_', '!SPEC:*', 'PF:must', 'SPEC:C/fin', 'SPEC:*', 'MODAL', 'VAL', 'SPEC:TO/inf', 'SPEC:D', '-COMP:INF', 'PHI:NUM:_', 'SPEC:FORCE', '-SPEC:N', 'LANG:EN', '-SPEC:C', '-SPEC:v', 'COMP:V', 'T', 'PHI:PER:_', '!COMP:*', '!PROBE:V', 'FIN', 'COMP:v', '-SPEC:TO/inf', 'COMP:Neg', '-SPEC:V', 'PHI:DET:_', 'T/fin'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'-SPEC:T/fin', 'ARG', 'SPEC:P', 'LF:sell', '-COMP:T/fin', '-COMP:P', '-COMP:V', 'LANG:FI', 'ASP:BOUNDED', 'COMP:D', 'SPEC:TO/inf', 'PF:myy', 'PHI:NUM:_', 'CLASS:TR', 'ASP', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
naki            ['LANG:FI']
nakee           ['LANG:FI']
nake-           {'-SPEC:T/fin', 'ARG', 'SPEC:P', '-COMP:P', 'PF:nake', '-COMP:V', 'LANG:FI', '-COMP:ESSA/inf', 'ASP:BOUNDED', 'COMP:D', 'SPEC:TO/inf', 'PHI:NUM:_', 'CLASS:TR', 'ASP', 'PHI:PER:_', 'LF:see', '!COMP:*', '-COMP:MA/ssa', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-COMP:MA/tta', '-SPEC:FORCE', 'PHI:DET:_'}
nayttaa         ['LANG:FI']
naytta-         {'-SPEC:T/fin', 'SPEC:P', '-ARG', '-COMP:V', 'PF:naytta', 'LANG:FI', 'VAL', 'SPEC:TO/inf', 'ASP', '!COMP:VA/inf', 'SEM:internal', '!SPEC:D', '-COMP:N', '-COMP:v', 'LF:seem', 'V', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE'}
ndo             {'-SPEC:T/fin', 'PF:PRG', 'INF', 'LANG:EN', '-COMP:FORCE', 'COMP:V', '-COMP:T/fin', '!COMP:*', '?ARG', 'PRG', 'COMP:v', 'VAL', '-SPEC:V', '-COMP:C/fin', 'LF:ing'}
ne              {'-SPEC:T/fin', '-SPEC:MA/lla', 'adjoinable', 'COMP:N', '-COMP:P', '-COMP:T/fin', '-SPEC:P', '-SPEC:Neg/fin', '-ARG', 'PF:ne', 'LANG:FI', '-SPEC:INF', 'PHI:PER:3', 'LF:those', '-COMP:D', '-SPEC:C', 'PHI:NUM:PL', 'D', '!PROBE:N', '!COMP:*', '-COMP:uR', 'OP', '-SPEC:V'}
niiden          ['LANG:EN']
nen             {'-SPEC:A', '-SPEC:D', 'PF:a', 'TAIL:D', 'LANG:FI', 'COMP:0', 'A', 'SPEC:*', 'LF:ing'}
not             {'-SPEC:T/fin', '-COMP:D', '-COMP:C', 'LANG:EN', 'PHI:PER:_', 'ARG', 'PHI:GEN:_', '!COMP:*', 'PHI:NUM:_', '-COMP:FIN', 'POL:NEG', '-VAL', 'SPEC:*', 'PHI:DET:_', 'Neg', 'PF:not', 'LF:not'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-SPEC:T/fin', '-COMP:Neg/fin', '-COMP:T', 'ARG', 'SPEC:P', '-COMP:T/fin', 'LF:sleep', '-COMP:V', 'LANG:FI', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'ASP', '-COMP:D', 'PHI:PER:_', 'PF:nukku', '-COMP:MA/inf', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'PHI:DET:_', 'COMP:P', '-SPEC:FORCE', 'CLASS:INTR'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'COMP:R', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:T/fin', '-COMP:VA/inf', 'COMP:P', 'LF:possessions', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:V', 'LANG:FI', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', 'PF:omaisuuden', '-SPEC:FORCE'}
operatoria      ['LANG:IT']
operatoria-     {'2SPEC', 'PF:operatoria', 'SPEC:D', '0', 'LF:operation', 'LANG:IT'}
ostaa           ['LANG:FI']
osta-           {'-SPEC:T/fin', 'ARG', 'SPEC:P', '-COMP:P', 'PF:osta', '-COMP:V', 'LANG:FI', 'ASP:BOUNDED', 'COMP:D', 'SPEC:TO/inf', 'PHI:NUM:_', 'CLASS:TR', 'ASP', 'LF:buy', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', 'PF:paiva', '-SPEC:P', '-COMP:V', 'LANG:FI', '-SPEC:INF', 'COMP:C', 'SEM:nonreferential', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', 'LF:day', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
past            {'-SPEC:iR', '-SPEC:T/fin', 'adjoinable', '-float', '-COMP:T', 'ARG', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:P', '-SPEC:Neg/fin', '-SPEC:*', '-SPEC:INF', 'P', 'COMP:D', '-SPEC:iWH', 'PHI:NUM:_', '-SPEC:C/fin', 'LF:past', '-SPEC:N', '-COMP:uWH', 'LANG:EN', '-SPEC:C', '-SPEC:v', '-SPEC:ADV', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:ADV', '-COMP:A', '-VAL', '-SPEC:V', '-SPEC:FORCE', 'PHI:DET:_', 'PF:past'}
Pariisia        ['LANG:FI']
Pariisi-        {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', 'LF:Paris', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:V', 'LANG:FI', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'PF:Pariisi', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:V', 'LANG:FI', 'LF:Pekka', 'COMP:C', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', '-SEM:directional', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE', 'PF:Pekka'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'-SPEC:T/fin', 'LF:fear', 'ARG', 'SPEC:P', '-COMP:P', 'PF:pelkaa', '-COMP:V', 'LANG:FI', 'COMP:D', 'SPEC:TO/inf', 'PHI:NUM:_', 'CLASS:TR', 'ASP', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
persuades       ['LANG:EN']
persuade-       {'-SPEC:T/fin', 'LF:persuade', 'ARG', 'SPEC:P', 'PHI:GEN:_', '-COMP:V', 'PF:persuade', 'SPEC:TO/inf', 'PHI:NUM:_', 'ASP', 'LANG:EN', 'PHI:PER:_', '!COMP:*', 'COMP:TO/inf', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'SEM:external', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
peruuntui       ['LANG:FI']
peruuntu-       {'-SPEC:T/fin', 'ARG', 'SPEC:P', '-COMP:V', 'LANG:FI', 'LF:cancelled', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'PF:peruuntui', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'-SPEC:T/fin', 'COMP:P', 'PF:pese_asp', 'ARG', 'SPEC:P', '-COMP:P', '-COMP:V', 'LANG:FI', 'ASP:BOUNDED', 'COMP:D', 'SPEC:TO/inf', 'PHI:NUM:_', 'CLASS:TR', 'ASP', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'LF:wash', '-SPEC:FORCE', 'PHI:DET:_'}
pese-           {'-SPEC:T/fin', 'COMP:P', 'ARG', 'SPEC:P', '-COMP:P', '-COMP:V', 'LANG:FI', 'COMP:D', 'SPEC:TO/inf', 'PHI:NUM:_', 'PF:pese', 'CLASS:TR', 'ASP', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'LF:wash', '-SPEC:FORCE', 'PHI:DET:_'}
petardi         {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', 'LANG:IT', '-COMP:V', '-SPEC:INF', 'COMP:C', 'PF:petardi', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', 'LF:firecrackers', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
pieni           ['LANG:FI']
pieni-          {'PF:pieni-', 'LANG:FI', '2SPEC', '0', 'SPEC:D', 'LF:small'}
poikien         ['LANG:FI']
poika-          {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:V', 'LANG:FI', '-SPEC:INF', 'COMP:C', 'LF:boy', 'PF:poika', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
puhelinta       ['LANG:FI']
puhelin-        {'PF:puhelin', 'LF:phone', 'LANG:FI', '2SPEC', '0', 'SPEC:D'}
punainen        ['LANG:FI']
puna-           {'PF:puna-', 'LANG:FI', '2SPEC', '0', 'LF:red', 'SPEC:D'}
presupposto     {'COMP:R', 'COMP:D/rel', 'LF:presupposition', 'COMP:T/prt', '-SPEC:T/fin', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', 'LANG:IT', '-COMP:V', '-SPEC:INF', 'COMP:C', 'PF:presupposto', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
primary         {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'PF:primary', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', 'LANG:IT', '-COMP:V', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE', 'LF:nurse'}
promises        ['LANG:EN']
promise-        {'-SPEC:T/fin', 'ARG', 'SPEC:P', 'PHI:GEN:_', '-COMP:V', 'COMP:D', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'LF:promise', 'LANG:EN', 'PHI:PER:_', 'SEM:internal', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'PHI:DET:_', 'COMP:P', '-SPEC:FORCE', 'PF:promise'}
problem         {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:V', 'PF:problem', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'LF:problem', 'SPEC:A', 'LANG:EN', 'COMP:R/D', '-SPEC:ADV', '-COMP:WH', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
pyytaa          ['LANG:FI']
pyyta-          {'-SPEC:T/fin', 'ARG', 'SPEC:P', '-COMP:P', '-COMP:V', 'LANG:FI', 'COMP:D', 'SPEC:TO/inf', 'PHI:NUM:_', 'PF:pyyda', 'CLASS:TR', 'ASP', 'LF:ask', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'SEM:external', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'-SPEC:T/fin', 'PF:race', 'ARG', '-COMP:T/fin', 'SPEC:P', 'PHI:GEN:_', '-COMP:V', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'LF:race', '-COMP:D', 'LANG:EN', 'PHI:PER:_', '-COMP:MA/inf', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'PHI:DET:_', 'COMP:P', 'LAMG:EN', '-SPEC:FORCE', 'CLASS:INTR'}
raukesi         ['LANG:FI']
raukea-         {'-SPEC:T/fin', 'PF:raukea', 'ARG', 'SPEC:P', '-COMP:V', 'LF:terminate', 'LANG:FI', 'SPEC:TO/inf', 'PHI:NUM:_', 'ASP', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
red             ['LANG:EN']
red-            {'LANG:EN', 'PF:red', '2SPEC', '0', 'LF:red', 'SPEC:D'}
saavuttaa       ['LANG:FI']
saavutta-       {'-SPEC:T/fin', 'LF:reach', 'ARG', 'SPEC:P', '-COMP:P', '-COMP:V', 'LANG:FI', 'ASP:BOUNDED', 'COMP:D', 'SPEC:TO/inf', 'PHI:NUM:_', 'CLASS:TR', 'ASP', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'PF:saavutta-', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_', '!COMP:D'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'-SPEC:T/fin', 'ARG', 'PF:sano-', 'LF:say', 'SPEC:P', '-COMP:P', '-COMP:V', 'LANG:FI', 'COMP:FORCE', 'COMP:D', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'CLASS:TR', 'ASP', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:VA/inf', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
said            ['LANG:EN']
say'            {'-SPEC:T/fin', 'ARG', 'LF:say', 'SPEC:P', 'PHI:GEN:_', '-COMP:V', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'PF:say', 'LANG:EN', 'PHI:PER:_', '!COMP:FORCE', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
say-            {'-SPEC:T/fin', 'ARG', 'LF:say', 'SPEC:P', 'PHI:GEN:_', '-COMP:V', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'PF:say', 'LANG:EN', 'PHI:PER:_', '!COMP:FORCE', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
sala            ['LANG:IT']
sala-           {'COMP:R', 'LF:room', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:T/fin', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', 'LANG:IT', '-COMP:V', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', 'PF:sala', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
scoppiati       ['LANG:IT']
scoppia-        {'-SPEC:T/fin', 'PF:scoppia', 'LF:explode', 'ARG', 'SPEC:P', 'PHI:GEN:_', 'LANG:IT', '-COMP:V', 'SPEC:TO/inf', 'PHI:NUM:_', 'ASP', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
sentenza        {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'LF:sentence', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', 'LANG:IT', '-COMP:V', 'PF:sentenza', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
Seine           ['LANG:EN']
Seine-          {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', 'LF:Seine', 'PF:Seine', '-COMP:V', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'LANG:EN', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
sembrano        ['LANG:IT']
sembra-         {'-SPEC:T/fin', 'SPEC:P', '-ARG', '!COMP:ARE/inf', '-COMP:V', '-SPEC:FORCE', 'SPEC:TO/inf', 'SPEC:D', 'SPEC:ADV', '-COMP:D', 'LANG:EN', '-COMP:N', '-COMP:v', 'LF:seem', 'PF:sembra', 'V', '-VAL', 'COMP:P', '-ASP'}
sleeps          ['LANG:EN']
sleep           {'-SPEC:T/fin', 'ARG', 'SPEC:P', 'PHI:GEN:_', 'LF:sleep', 'PF:sleep', '-COMP:V', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'ASP', '-COMP:D', 'LANG:EN', 'PHI:PER:_', '-COMP:MA/inf', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'PHI:DET:_', 'COMP:P', '-SPEC:FORCE', 'CLASS:INTR'}
sleep-          {'-SPEC:T/fin', 'ARG', 'SPEC:P', 'PHI:GEN:_', 'LF:sleep', 'PF:sleep', '-COMP:V', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'ASP', '-COMP:D', 'LANG:EN', 'PHI:PER:_', '-COMP:MA/inf', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'PHI:DET:_', 'COMP:P', '-SPEC:FORCE', 'CLASS:INTR'}
solution        {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'PF:solution', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:V', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'LANG:EN', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE', 'LF:solution'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', 'LF:agreement', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', 'PF:sopimus', '-COMP:V', 'LANG:FI', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', '!COMP:A/inf', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
spinge          ['LANG:IT']
spinge-         {'-SPEC:T/fin', 'ARG', 'SPEC:P', '-COMP:P', 'PHI:GEN:_', 'LANG:IT', '-COMP:V', 'PF:spinge', 'SPEC:TO/inf', 'PHI:NUM:_', 'ASP', 'PHI:PER:_', 'LF:push', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:DET:_', '!COMP:D'}
ssa             {'-SPEC:iR', '-SPEC:T/fin', 'adjoinable', '-COMP:T', 'ARG', '-COMP:T/fin', '-SPEC:P', '-SPEC:Neg/fin', 'TAIL:V', 'LANG:FI', '-SPEC:INF', 'P', 'COMP:D', '-SPEC:iWH', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:N', '-COMP:uWH', '-SPEC:C', '-SPEC:v', '-SPEC:ADV', 'PHI:PER:_', 'PHI:DET:_', '!COMP:*', 'LF:in', '-COMP:N', '-COMP:ADV', '-COMP:A', 'COMP:n/MA', '-VAL', 'SPEC:*', '-SPEC:V', '-SPEC:FORCE', 'PF:ssa'}
stanno          ['LANG:IT']
sta-            {'-SPEC:T/fin', 'ARG', 'SPEC:P', 'PHI:GEN:_', '-COMP:V', '-SPEC:FORCE', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'SPEC:ADV', 'LANG:EN', 'PHI:PER:_', 'LF:stay', 'SEM:internal', 'PF:sta', '-COMP:N', 'V', 'COMP:PRG', '-COMP:v', '-VAL', 'COMP:P', '-ASP', 'PHI:DET:_'}
sti             {'-SPEC:T/fin', '-SPEC:N', 'adjoinable', 'ADV', 'LF:by', '!COMP:*', '-SPEC:Neg/fin', '-ARG', 'LANG:FI', 'PF:sti', 'SPEC:*', '-SPEC:FORCE', 'TAIL:T'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'COMP:R', 'LF:socks', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:T/fin', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:V', 'LANG:FI', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE', 'PF:sukka-'}
surprised       ['LANG:EN']
surprise-       {'-SPEC:T/fin', 'LF:surprise', 'COMP:P', 'ARG', 'SPEC:P', '-COMP:T/fin', '-COMP:P', 'PHI:GEN:_', '-COMP:V', 'COMP:D', 'SPEC:TO/inf', 'PHI:NUM:_', 'CLASS:TR', 'ASP', 'LANG:EN', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'PF:surprise', '-SPEC:FORCE', 'PHI:DET:_'}
talo            {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'PF:talo', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:V', 'LANG:FI', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', 'LF:house', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
tama            ['LANG:EN']
tama-           {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', 'PF:tama', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:V', 'LANG:FI', '-SPEC:INF', 'LF:this', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', '-SPEC:V', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', 'PHI', '-COMP:C/fin', '-SPEC:FORCE'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'-SPEC:T/fin', 'ARG', 'LF:must', 'SPEC:P', '-COMP:V', '-SPEC:FORCE', 'LANG:FI', 'MODAL', 'PF:taytyy', 'SPEC:TO/inf', 'PHI:NUM:_', 'PHI:PER:_', '!COMP:A/inf', '-COMP:N', 'FIN', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'SPEC:*', 'COMP:P', '-ASP', 'PHI:DET:_'}
teki            ['LANG:FI']
teke-           {'-SPEC:T/fin', 'ARG', 'SPEC:P', '-COMP:P', '-COMP:V', 'LANG:FI', 'ASP:BOUNDED', 'COMP:D', 'SPEC:TO/inf', 'PF:teke', 'PHI:NUM:_', 'CLASS:TR', 'ASP', 'PHI:PER:_', '!COMP:*', 'LF:make', '-COMP:v', '-COMP:N', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-COMP:A/inf', '-SPEC:FORCE', 'PHI:DET:_', '!COMP:D'}
that            {'FORCE', 'COMP:T/fin', 'LF:that', 'LANG:EN', 'PF:that', '!COMP:*', '-SPEC:*', '-ARG', 'FIN', '-VAL', '!PROBE:FIN', 'COMP:C/fin'}
the             {'-SPEC:T/fin', '-SPEC:MA/lla', 'adjoinable', 'COMP:N', '-COMP:P', '-COMP:T/fin', '-SPEC:P', '-SPEC:Neg/fin', '-ARG', 'PHI:DEF:DEF', '-SPEC:INF', 'PF:the', '-COMP:D', 'OP', 'LANG:EN', 'D', '-SPEC:C', '!PROBE:N', '!COMP:*', 'LF:the', '-COMP:uR', '-SPEC:V'}
to              {'-SPEC:iR', 'adjoinable', '-COMP:T', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:Neg/fin', '-SPEC:*', 'COMP:D', '-SPEC:iWH', 'PHI:NUM:_', '-SPEC:C/fin', 'LANG:EN', '-SPEC:C', '-SPEC:v', '-SPEC:ADV', '-COMP:N', '-COMP:ADV', '-COMP:A', '-VAL', '-SPEC:FORCE', '-SPEC:T/fin', '-float', 'ARG', '-SPEC:P', 'TAIL:V', 'PF:to', '-SPEC:INF', 'P', 'LF:to', '-SPEC:N', '-COMP:uWH', 'PHI:PER:_', '+SEM:directional', '!COMP:*', '-SPEC:V', 'PHI:DET:_'}
to_inf          {'TO/inf', '-SPEC:T/fin', 'adjoinable', 'INF', '-COMP:T/fin', 'LF:TO/inf', 'PF:TO/inf', '-SPEC:v', 'LANG:EN', '-COMP:FORCE', 'COMP:V', '!COMP:*', '?ARG', 'COMP:v', '-VAL', '-SPEC:V', '-COMP:C/fin'}
towards         {'-SPEC:iR', '-SPEC:T/fin', 'PF:towards', 'adjoinable', '-float', '-COMP:T', 'ARG', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:P', '-SPEC:Neg/fin', '-SPEC:*', 'TAIL:V', '-SPEC:INF', 'P', 'COMP:D', '-SPEC:iWH', 'PHI:NUM:_', '-SPEC:C/fin', 'LF:towards', '-SPEC:N', '-COMP:uWH', 'LANG:EN', '-SPEC:C', '-SPEC:v', '-SPEC:ADV', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:ADV', '-COMP:A', '-VAL', '-SPEC:V', '-SPEC:FORCE', 'PHI:DET:_'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'-SPEC:T/fin', 'COMP:P', 'ARG', 'SPEC:P', '-COMP:P', '-COMP:V', 'LANG:FI', 'COMP:D', 'SPEC:TO/inf', 'PHI:NUM:_', 'CLASS:TR', 'ASP', 'PF:tonaise', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'LF:nudge', '-SPEC:FORCE', 'PHI:DET:_'}
tta             {'-SPEC:iR', '-SPEC:T/fin', 'adjoinable', '-COMP:T', 'ARG', '-COMP:T/fin', '-SPEC:P', '-SPEC:Neg/fin', '-SPEC:FORCE', 'LANG:FI', '-SPEC:INF', 'P', 'COMP:D', '-SPEC:iWH', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:N', '-COMP:uWH', '-SPEC:C', '-SPEC:v', 'ADV', '-SPEC:ADV', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:ADV', '-COMP:A', '-VAL', 'COMP:n/MA', 'SPEC:*', '-SPEC:V', 'PF:tta', 'LF:without', 'PHI:DET:_'}
tries           ['LANG:EN']
try-            {'-SPEC:T/fin', 'ARG', 'SPEC:P', 'PHI:GEN:_', '-COMP:V', '-SPEC:FORCE', 'SPEC:TO/inf', 'PF:try', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'LANG:EN', 'PHI:PER:_', 'SEM:internal', '-COMP:N', '!COMP:-ARG', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '!COMP:TO/inf', 'LF:try', 'PHI:DET:_'}
verifiche       {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'PF:verifiche', 'N', '-SPEC:uWH', '-COMP:AUX', 'LF:verification', 'LANG:IT', '-SPEC:P', '-COMP:V', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'-SPEC:T/fin', 'ARG', 'LF:flow', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'ASP', '-COMP:D', 'PHI:PER:_', '!COMP:P', '-COMP:MA/inf', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'PF:virtaa', 'PHI:DET:_', 'COMP:P', '-SPEC:FORCE', 'CLASS:INTR'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'-SPEC:T/fin', 'ARG', 'SPEC:P', 'PHI:GEN:_', '-SPEC:*', '-COMP:V', '-SPEC:FORCE', 'PF:volu', 'SPEC:TO/inf', 'PHI:NUM:_', 'ASP', 'LANG:EN', 'PHI:PER:_', '!COMP:*', 'SEM:internal', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', 'LF:want', 'PHI:DET:_'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'-SPEC:T/fin', 'ARG', 'SPEC:P', '-COMP:P', 'PHI:GEN:_', '-COMP:V', 'ASP:BOUNDED', 'COMP:D', 'SPEC:TO/inf', 'PHI:NUM:_', 'CLASS:TR', 'ASP', 'LANG:EN', 'PHI:PER:_', 'LF:win', '!COMP:*', '-COMP:N', 'PF:voitta', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'SEM:achievement', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
wants           ['LANG:EN']
want-           {'-SPEC:T/fin', 'ARG', 'SPEC:P', '-COMP:P', 'PHI:GEN:_', '-COMP:V', 'PF:want', '-SPEC:FORCE', 'COMP:D', 'PHI:NUM:_', 'CLASS:TR', 'SPEC:ADV', 'ASP', 'LANG:EN', 'PHI:PER:_', '!COMP:*', 'COMP:TO/inf', '-COMP:N', '-COMP:v', 'V', '-SPEC:TO/inf', '-VAL', 'COMP:P', 'LF:want', 'PHI:DET:_'}
what            ['LANG:EN']
what-           {'COMP:R', 'COMP:T/prt', 'N', '-SPEC:uWH', 'COMP:C', 'PF:what', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'LANG:EN', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', '-COMP:V', '-SPEC:INF', '-SPEC:N', '-COMP:WH', '-COMP:*', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P', 'LF:what'}
which           {'-SPEC:T/fin', '-SPEC:MA/lla', 'adjoinable', 'COMP:N', '-COMP:P', 'OP:WH', '-COMP:T/fin', '-SPEC:P', '-SPEC:Neg/fin', '-ARG', '-SPEC:INF', 'PF:which', '-COMP:D', 'LANG:EN', 'D', '-SPEC:C', '!PROBE:N', 'LF:which', '!COMP:*', '-COMP:uR', 'OP', '-SPEC:V'}
who             ['LANG:EN']
who-            {'COMP:R', 'COMP:T/prt', 'N', 'LF:who', '-SPEC:uWH', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'LANG:EN', 'COMP:R/D', 'PF:who', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', '-COMP:V', '-SPEC:INF', '-SPEC:N', '-COMP:WH', '-COMP:*', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P'}
whether         {'PF:whether', 'LF:whether', 'OP:WH', '-SPEC:*', '-ARG', 'Q', '!PROBE:FIN', 'COMP:C/fin', 'FORCE', 'COMP:T/fin', 'LANG:EN', '!COMP:*', 'OP:Q', 'FIN', '-VAL', 'OP'}
yrittaa         ['LANG:FI']
yritta-         {'-SPEC:T/fin', 'ARG', 'SPEC:P', 'PHI:GEN:_', '-COMP:V', '-SPEC:FORCE', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'LANG:EN', 'PHI:PER:_', '!COMP:A/inf', 'PF:yritta', 'SEM:internal', '-COMP:N', '!COMP:-ARG', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', 'LF:try', 'PHI:DET:_'}
mina            ['LANG:EN']
mina-           {'COMP:R', 'COMP:T/prt', 'N', '-SPEC:uWH', 'LANG:FI', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'COMP:R/D', '-SPEC:ADV', 'PF:mina', '-COMP:N', 'LF:I', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', '-COMP:V', '-SPEC:INF', '-SPEC:N', '-COMP:WH', '-COMP:*', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P'}
sina            ['LANG:EN']
sina-           {'COMP:R', 'COMP:T/prt', 'N', '-SPEC:uWH', 'LANG:FI', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', '-COMP:V', '-SPEC:INF', 'LF:you', 'PF:sina', '-SPEC:N', '-COMP:WH', '-COMP:*', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P'}
han             ['LANG:EN']
han-            {'COMP:R', 'COMP:T/prt', 'N', '-SPEC:uWH', 'LANG:FI', 'COMP:C', 'LF:s/he', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', '-COMP:V', '-SPEC:INF', 'PF:han', '-SPEC:N', '-COMP:WH', '-COMP:*', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'COMP:R', 'COMP:T/prt', 'N', '-SPEC:uWH', 'LANG:FI', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'LF:we', 'COMP:R/D', '-SPEC:ADV', 'PF:me', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', '-COMP:V', '-SPEC:INF', '-SPEC:N', '-COMP:WH', '-COMP:*', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P'}
te              ['LANG:EN']
te-             {'COMP:R', 'COMP:T/prt', 'N', '-SPEC:uWH', 'LANG:FI', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', 'PF:te', '-COMP:V', '-SPEC:INF', 'LF:you', '-SPEC:N', '-COMP:WH', '-COMP:*', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'COMP:R', 'COMP:T/prt', 'LF:they', 'N', '-SPEC:uWH', 'LANG:FI', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', 'PF:he', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', '-COMP:V', '-SPEC:INF', '-SPEC:N', '-COMP:WH', '-COMP:*', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P'}
se              {'-SPEC:T/fin', '-SPEC:MA/lla', 'adjoinable', 'COMP:N', '-COMP:P', '-COMP:T/fin', '-SPEC:P', '-SPEC:Neg/fin', 'LF:the/that', '-ARG', 'LANG:FI', '-SPEC:INF', 'PF:se', '-COMP:D', '-SPEC:C', 'D', '!PROBE:N', '!COMP:*', '-COMP:uR', 'OP', '-SPEC:V'}
sen             {'-SPEC:T/fin', 'TAIL:*POL:NEG', '-SPEC:MA/lla', 'adjoinable', 'COMP:N', '-COMP:P', 'TAIL:ASP', '-COMP:T/fin', '-SPEC:P', '-SPEC:Neg/fin', 'LF:the/that', '-ARG', 'LANG:FI', '-SPEC:INF', 'PF:sen', '-COMP:D', '-SPEC:C', 'D', '!PROBE:N', 'TAIL:PHI', '!COMP:*', '-COMP:uR', 'OP', '-SPEC:V'}
I               ['LANG:EN']
I-              {'COMP:R', 'COMP:T/prt', 'N', '-SPEC:uWH', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'LANG:EN', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', 'LF:I', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', '-COMP:V', '-SPEC:INF', '-SPEC:N', 'PF:I', '-COMP:WH', '-COMP:*', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P'}
you             ['LANG:EN']
you-            {'COMP:R', 'COMP:T/prt', 'N', '-SPEC:uWH', 'PF:you', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'LANG:EN', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', '-COMP:V', '-SPEC:INF', 'LF:you', '-SPEC:N', '-COMP:WH', '-COMP:*', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P'}
he              ['LANG:EN']
he-             {'COMP:R', 'COMP:T/prt', 'N', '-SPEC:uWH', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'LANG:EN', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', 'PF:he', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', '-COMP:V', '-SPEC:INF', '-SPEC:N', '-COMP:WH', '-COMP:*', 'LF:he', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P'}
she             ['LANG:EN']
she-            {'COMP:R', 'COMP:T/prt', 'N', '-SPEC:uWH', 'LF:she', 'PF:she', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'LANG:EN', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', '-COMP:V', '-SPEC:INF', '-SPEC:N', '-COMP:WH', '-COMP:*', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P'}
we              ['LANG:EN']
we-             {'COMP:R', 'COMP:T/prt', 'N', '-SPEC:uWH', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'LANG:EN', 'LF:we', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', 'PF:we', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', '-COMP:V', '-SPEC:INF', '-SPEC:N', '-COMP:WH', '-COMP:*', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P'}
you_pl          ['LANG:EN']
you_pl-         {'COMP:R', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:V', 'LF:you_pl', 'PF:you_pl', 'COMP:C', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'LANG:EN', 'COMP:R/D', '-SPEC:ADV', '-SPEC:V', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', 'PHI', '-COMP:C/fin', '-SPEC:FORCE'}
they            ['LANG:EN']
they-           {'COMP:R', 'COMP:T/prt', 'LF:they', 'N', '-SPEC:uWH', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'LANG:EN', 'COMP:R/D', '-SPEC:ADV', '-SPEC:V', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', '-COMP:V', '-SPEC:INF', '-SPEC:N', '-COMP:WH', '-COMP:*', 'PHI_N', '-COMP:v', 'PF:they', 'COMP:P'}
it              ['LANG:EN']
it-             {'LF:it/that', '-SPEC:T/fin', '-SPEC:MA/lla', 'adjoinable', 'COMP:N', 'PF:it', '-COMP:P', '-COMP:T/fin', '-SPEC:P', '-SPEC:Neg/fin', '-ARG', '-SPEC:INF', '-COMP:D', 'LANG:EN', 'D', '-SPEC:C', '!PROBE:N', '!COMP:*', '-COMP:uR', 'OP', '-SPEC:V'}
io              ['LANG:EN']
io-             {'COMP:R', 'COMP:T/prt', 'N', '-SPEC:uWH', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', 'LF:I', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', 'LANG:IT', '-COMP:V', '-SPEC:INF', '-SPEC:N', '-COMP:WH', '-COMP:*', 'PF:io', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P'}
tu              ['LANG:EN']
tu-             {'COMP:R', 'COMP:T/prt', 'N', '-SPEC:uWH', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', 'LANG:IT', '-COMP:V', '-SPEC:INF', 'LF:you', 'PF:tu', '-SPEC:N', '-COMP:WH', '-COMP:*', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P'}
lui             ['LANG:EN']
lui-            {'COMP:R', 'COMP:T/prt', 'N', '-SPEC:uWH', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', 'PF:lui', '-SPEC:P', 'LANG:IT', '-COMP:V', '-SPEC:INF', '-SPEC:N', '-COMP:WH', '-COMP:*', 'LF:he', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P'}
lei             ['LANG:EN']
lei-            {'COMP:R', 'COMP:T/prt', 'N', '-SPEC:uWH', 'LF:she', 'COMP:C', '-SPEC:C/fin', 'PF:lei', '-SPEC:R', 'SPEC:A', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', 'LANG:IT', '-COMP:V', '-SPEC:INF', '-SPEC:N', '-COMP:WH', '-COMP:*', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P'}
noi             ['LANG:EN']
noi-            {'COMP:R', 'COMP:T/prt', 'N', '-SPEC:uWH', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'LF:we', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', 'LANG:IT', '-COMP:V', '-SPEC:INF', 'PF:noi', '-SPEC:N', '-COMP:WH', '-COMP:*', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P'}
voi             ['LANG:EN']
voi-            {'COMP:R', 'COMP:T/prt', 'N', '-SPEC:uWH', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', 'LANG:IT', '-COMP:V', 'LF:you_pl', '-SPEC:INF', '-SPEC:N', '-COMP:WH', 'PF:voi', '-COMP:*', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P'}
loro            ['LANG:EN']
loro-           {'COMP:R', 'COMP:T/prt', 'LF:they', 'N', '-SPEC:uWH', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', 'PF:loro', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', 'LANG:IT', '-COMP:V', '-SPEC:INF', '-SPEC:N', '-COMP:WH', '-COMP:*', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P'}
mi              ['LANG:EN']
mi-             {'COMP:R', 'COMP:T/prt', 'CL', 'N', '-SPEC:uWH', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'LF:me', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', 'PF:mi(cl)', 'LANG:IT', '-SPEC:P', '-COMP:V', '-SPEC:INF', '-SPEC:N', '-COMP:WH', '-COMP:*', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P'}
la              ['LANG:EN']
la-             {'COMP:R', 'COMP:T/prt', 'CL', 'N', '-SPEC:uWH', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', 'LANG:IT', '-COMP:V', '-SPEC:INF', 'PF:la(cl)', '-SPEC:N', 'LF:her', '-COMP:WH', '-COMP:*', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P'}
lo              ['LANG:EN']
lo-             {'COMP:R', 'COMP:T/prt', 'CL', 'N', '-SPEC:uWH', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', 'LANG:IT', '-COMP:V', '-SPEC:INF', 'PF:lo(cl)', '-SPEC:N', '-COMP:WH', '-COMP:*', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P', 'LF:him'}
si              ['LANG:EN']
si-             {'COMP:R', 'COMP:T/prt', 'PF:si(cl)', 'N', '-SPEC:uWH', 'COMP:C', '-SPEC:C/fin', 'CAL:CL', '-SPEC:R', 'SPEC:A', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', 'LF:3sg', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', 'LANG:IT', '-COMP:V', '-SPEC:INF', '-SPEC:N', '-COMP:WH', '-COMP:*', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'COMP:R', 'COMP:T/prt', 'N', '-SPEC:uWH', 'COMP:C', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'PF:ci', 'COMP:R/D', '-SPEC:ADV', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:VA/inf', '-COMP:AUX', '-SPEC:P', 'LANG:IT', '-COMP:V', '-SPEC:INF', '-SPEC:N', 'LF:there', '-COMP:WH', '-COMP:*', 'PHI_N', '-COMP:v', '-SPEC:V', 'COMP:P'}
[-n]            {'LANG:FI', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional'}
[-t]            {'PHI:PER:2', 'LANG:FI', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional'}
[-V]            {'LANG:FI', 'PHI', 'PHI:PER:3', 'PHI:NUM:SG', 'inflectional'}
[-mme]          {'LANG:FI', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:PL', 'PHI:DET:DEF', 'inflectional'}
[-mme]          {'LANG:FI', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:DET:DEF', 'inflectional'}
[-tte]          {'PHI:PER:2', 'LANG:FI', 'PHI', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:DET:DEF', 'inflectional'}
[-vat]          {'LANG:FI', 'PHI', 'PHI:NUM:PL', 'PHI:PER:3', 'inflectional'}
[-ni]           {'LANG:FI', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional'}
[-si]           {'PHI:PER:2', 'LANG:FI', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional'}
[-nsa]          {'LANG:FI', 'PHI', 'PHI:PER:3', 'PHI:NUM:SG', 'inflectional'}
[-an]           {'LANG:FI', 'PHI:DET:DET', 'PHI', 'PHI:PER:3', 'PHI:NUM:SG', 'inflectional'}
[-nne]          {'PHI:PER:2', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:DET:DEF', 'inflectional'}
[-s]            {'PHI:GEN:F', 'PHI:GEN:M', 'LANG:EN', 'PHI', 'PHI:PER:3', 'PHI:NUM:SG', 'inflectional'}
[-0]            {'LANG:EN', 'PHI:NUM:PL', 'PHI:GEN:N', 'PHI:NUM:SG', 'PHI:PER:2', 'PHI:PER:1', 'PHI', 'PHI:PER:3', 'PHI:DET:DEF', 'inflectional'}
[-o]            {'PHI:PER:1', 'PHI:HUM:HUM', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:IT'}
[-i]            {'PHI:PER:2', 'PHI:HUM:HUM', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:IT'}
[-a]            {'PHI', 'PHI:PER:3', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:IT'}
[-e]            {'PHI', 'PHI:PER:3', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:IT'}
[-iamo]         {'PHI', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'inflectional', 'PHI:DET:DEF', 'LANG:IT'}
[-te]           {'PHI:PER:2', 'PHI', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'inflectional', 'PHI:DET:DEF', 'LANG:IT'}
[-no]           {'PHI', 'PHI:NUM:PL', 'PHI:PER:3', 'inflectional', 'PHI:DET:DEF', 'LANG:IT'}
[-nom]          {'NOM', 'TAIL:FIN,ARG,VAL', 'adjoinable', 'LANG:EN', 'inflectional'}
[-par]          {'PAR', 'LANG:FI', 'adjoinable', 'TAIL:ARG,-VAL', 'inflectional'}
[-gen]          {'TAIL:INF,ARG', '-float', 'LANG:EN', 'GEN', 'inflectional'}
gen             {'TAIL:INF,ARG', '-float', 'LANG:EN', 'GEN', 'inflectional'}
[-n_acc]        {'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'LANG:FI', 'adjoinable', 'n-ACC', 'TAIL:PHI', 'inflectional'}
[-t_acc]        {'t-ACC', 'TAIL:*POL:NEG', 'LANG:FI', 'adjoinable', 'TAIL:ARG,ASP:BOUNDED', 'inflectional'}
[-0_acc]        {'TAIL:*POL:NEG', '0_ACC', 'LANG:FI', 'adjoinable', 'TAIL:*PHI', 'TAIL:ARG,ASP:BOUNDED', 'inflectional'}
asp             {'LANG:EN', 'ASP:BOUNDED', 'inflectional'}
a'              {'PF:a', 'a', 'LF:A', 'LANG:X'}
b'              {'LF:B', 'b', 'PF:b', 'LANG:X'}
b''             {'b', '-COMP:c', 'LANG:EN', 'LF:B', 'PF:b'}
c''             {'SPEC:a', 'LANG:EN', 'PF:c', 'c', 'LF:C'}
c'              {'PF:c', 'c', 'LF:C', 'LANG:X'}
d'              {'LANG:', 'LF:D', 'd', 'PF:d'}
a''             ['LANG:EN']
x'              {'x', 'PF:x', 'LANG:X', 'LF:X'}
y'              {'LF:Y', 'PF:y', 'LANG:X', 'y'}
z'              {'LF:Z', 'PF:x', 'LANG:X', 'z'}
John'           {'LF:John', "N'", 'PF:John', 'LANG:X'}
admires'        {'PF:admires', "V'", 'LF:admires', 'LANG:X'}
admires''       {'-SPEC:T/fin', 'ARG', 'SPEC:P', 'PHI:GEN:_', 'PF:admires', '-COMP:V', 'SPEC:TO/inf', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'LANG:EN', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'LF:admires', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_'}
Mary'           {'LF:mary', "N'", 'PF:Mary', 'LANG:X'}
T/fin           {'-SPEC:T/fin', 'COMP:T/prt', '-SPEC:Neg', 'ARG', '-COMP:T/fin', 'PHI:GEN:_', 'LF:T', 'SPEC:C/fin', 'SPEC:*', 'VAL', 'SPEC:TO/inf', 'SPEC:D', '-COMP:INF', 'PHI:NUM:_', 'SPEC:FORCE', '-SPEC:N', 'PF:T', 'LANG:EN', '-SPEC:C', '-SPEC:v', 'COMP:V', 'T', 'PHI:PER:_', '!COMP:*', '!PROBE:V', 'FIN', 'COMP:v', '-SPEC:TO/inf', '!SPEC:*', '-SPEC:V', 'PHI:DET:_', 'T/fin'}
v               {'ASP', '-SPEC:N', 'PF:v', 'LF:v', 'LANG:EN', 'ARG', 'COMP:V', 'PHI:PER:_', 'PHI:GEN:_', '!COMP:*', '!PROBE:V', 'PHI:NUM:_', '-VAL', 'v', 'PHI:DET:_', 'SPEC:D'}
C/fin           {'-SPEC:T/fin', 'COMP:Neg/fin', 'PF:C', 'LF:C/fin', '-ARG', 'VAL', '!PROBE:FIN', '-COMP:T/prt', '-SPEC:C/fin', 'C', 'COMP:T/fin', '-SPEC:N', 'LANG:EN', '!COMP:*', 'FIN', 'SPEC:*', '-COMP:C/fin', 'C/fin'}
T               {'-SPEC:T/fin', 'COMP:T/prt', 'ARG', 'PHI:GEN:_', 'LF:T', 'VAL', 'SPEC:D', 'PHI:NUM:_', '-SPEC:N', 'PF:T', 'LANG:EN', 'T', 'PHI:PER:_', 'COMP:V', '!COMP:*', '!PROBE:V', 'FIN', 'COMP:v', '-COMP:NEG', 'SPEC:*', '-SPEC:V', '-SPEC:FORCE', 'PHI:DET:_'}
T/prt           {'LF:T/prt', '-SPEC:T/fin', 'COMP:T/prt', 'ARG', 'PHI:GEN:_', 'T/prt', 'VAL', 'COMP:D', 'SPEC:D', '-SPEC:C/fin', 'PHI:NUM:_', '-SPEC:N', 'LANG:EN', 'T', 'PHI:PER:_', 'COMP:V', '!COMP:*', '!PROBE:V', 'PF:T/prt', 'FIN', 'COMP:v', '-COMP:NEG', 'SPEC:*', '-SPEC:V', '-SPEC:FORCE', 'PHI:DET:_'}
a0              {'-adjoinable', '-SPEC:A', 'LANG:EN', '-SPEC:D', 'TAIL:D', 'LF:A', 'COMP:0', 'A', 'PF:A'}
n               {'COMP:R', 'LF:n', 'COMP:T/prt', 'INF', 'N', '-SPEC:uWH', 'PHI:GEN:_', 'COMP:C', 'COMP:0', 'VAL', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:R', 'SPEC:A', 'LANG:EN', 'COMP:R/D', '-SPEC:ADV', 'COMP:V', '-COMP:N', '-COMP:A', 'COMP:uR', '!SPEC:D', '!SPEC:*', '-COMP:C/fin', '-SPEC:FORCE', 'COMP:D/rel', 'PF:n', '-SPEC:T/fin', '-COMP:VA/inf', 'ARG', '-COMP:AUX', '-SPEC:P', '-COMP:V', '-SPEC:INF', '-SPEC:N', '-COMP:WH', 'PHI:PER:_', 'n', '!COMP:*', '-COMP:v', 'COMP:v', 'SPEC:*', '-SPEC:V', 'COMP:P', 'PHI:DET:_'}
impass          {'ASP', '-SPEC:N', 'LANG:EN', 'PF:impass', 'ARG', 'COMP:V', 'PHI:PER:_', 'PHI:GEN:_', '!COMP:*', '!PROBE:V', 'PHI:NUM:_', 'LF:impass', '-VAL', 'v', 'PHI:DET:_', 'SPEC:D'}
cau             {'ASP', '-SPEC:N', 'LANG:EN', 'PHI:PER:_', 'ARG', 'COMP:V', 'LF:v/Cause', '!COMP:*', '!PROBE:V', 'PF:Cau', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', 'v', 'PHI:DET:_', 'SPEC:D'}
INF             {'-SPEC:T/fin', 'INF', 'LANG:EN', '-COMP:FORCE', 'COMP:V', '-COMP:T/fin', '!COMP:*', 'PF:INF', 'LF:INF', 'COMP:v', '-SPEC:V', '-COMP:C/fin'}
prtcpl          {'LF:T/prt', '-SPEC:T/fin', 'COMP:T/prt', 'INF', 'ARG', '-COMP:T/fin', 'PHI:GEN:_', 'T/prt', 'VAL', 'COMP:D', 'SPEC:D', '-SPEC:C/fin', 'PHI:NUM:_', '-SPEC:N', 'LANG:EN', 'T', '-COMP:FORCE', 'COMP:V', 'PHI:PER:_', '!COMP:*', '!PROBE:V', 'PF:T/prt', 'FIN', '-COMP:NEG', 'COMP:v', 'SPEC:*', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE', 'PHI:DET:_'}
TO/inf          {'TO/inf', '-SPEC:T/fin', '-COMP:C/fin', 'adjoinable', 'INF', '-COMP:T/fin', 'PF:TO/inf', '-SPEC:v', 'LANG:EN', '-COMP:FORCE', 'COMP:V', '!COMP:V', '!COMP:*', '?ARG', 'COMP:v', '-VAL', '-SPEC:V', 'LF:TO/inf'}
A/inf           {'-SPEC:T/fin', 'INF', 'LF:A/inf', '-COMP:T/fin', '-SPEC:Neg/fin', 'A/inf', 'PF:A/inf', 'LANG:EN', '-COMP:FORCE', 'COMP:V', '?VAL', '!COMP:*', '?ARG', 'COMP:v', 'SPEC:*', '-SPEC:V', '-COMP:C/fin'}
ARE/inf         {'-SPEC:T/fin', 'INF', '-COMP:T/fin', 'LF:ARE/inf', 'VAL', '-adjoinable', 'LANG:EN', '-COMP:FORCE', 'ARE/inf', 'COMP:V', '!COMP:*', '?ARG', 'COMP:v', 'SPEC:*', '-SPEC:V', '-COMP:C/fin', 'PF:are'}
ESSA/inf        {'-SPEC:T/fin', 'adjoinable', 'INF', '-COMP:T/fin', 'ESSA/inf', '-SPEC:Neg/fin', 'PF:essa', 'TAIL:T', '-SPEC:N', 'LANG:EN', '-COMP:FORCE', 'ADV', 'COMP:V', '?VAL', '!COMP:*', '?ARG', 'COMP:v', 'SPEC:*', '-SPEC:V', '-COMP:C/fin', '-SPEC:FORCE', 'LF:while'}
TUA/inf         {'-COMP:C/fin', '-SPEC:T/fin', 'adjoinable', 'INF', 'ARG', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:Neg/fin', 'TUA/inf', '!SPEC:*', 'SPEC:*', 'VAL', 'PHI:NUM:_', 'TAIL:T', '-SPEC:N', 'LANG:EN', '-COMP:FORCE', 'ADV', 'COMP:V', 'PHI:PER:_', '!COMP:*', 'COMP:v', 'PF:tua', '-SPEC:V', 'LF:after', '-SPEC:FORCE', 'PHI:DET:_'}
VA/inf          {'-SPEC:T/fin', 'INF', 'ARG', '-COMP:T/fin', 'PHI:GEN:_', 'SPEC:*', 'VAL', 'PHI:NUM:_', '-SPEC:N', 'LANG:EN', '-COMP:FORCE', 'LF:VA', 'COMP:V', 'PHI:PER:_', '!COMP:*', 'PF:vAn', 'COMP:v', 'VA/inf', '!SPEC:*', '-SPEC:V', '-COMP:C/fin', 'PHI:DET:_'}
MA/ssa          {'-SPEC:T/fin', 'adjoinable', 'ARG', 'PHI:GEN:_', 'LF:in_doing', '-SPEC:Neg/fin', '-SPEC:*', 'TAIL:V', 'PF:massa', 'PHI:NUM:_', '-SPEC:N', 'MA/inf', 'LANG:EN', 'PHI:PER:_', 'ADV', 'MA/ssa', 'COMP:V', 'COMP:v', '-VAL', '-SPEC:FORCE', 'PHI:DET:_'}
MA/tta          {'-SPEC:T/fin', '-SPEC:N', 'MA/inf', 'adjoinable', 'LF:without_doing', 'LANG:EN', 'PHI:PER:_', 'ADV', 'ARG', 'PHI:GEN:_', '-SPEC:Neg/fin', '-VAL', 'PHI:DET:_', '-SPEC:FORCE', 'PHI:NUM:_', 'PF:matta', 'TAIL:T'}
MA/lla          {'adjoinable', 'PHI:GEN:_', '-SPEC:Neg/fin', 'LF:by_doing', 'PHI:NUM:_', 'TAIL:T', 'MA/inf', 'PF:malla', 'LANG:EN', 'ADV', 'COMP:V', '-VAL', '-SPEC:FORCE', '-SPEC:T/fin', 'ARG', '-SPEC:N', 'PHI:PER:_', 'COMP:v', 'PHI:DET:_'}
MA/inf          {'adjoinable', 'PHI:GEN:_', '-SPEC:Neg/fin', 'PHI:NUM:_', 'MA/inf', 'LANG:EN', 'ADV', 'COMP:V', '-VAL', '-SPEC:FORCE', '-SPEC:T/fin', 'ARG', 'TAIL:V', '-SPEC:N', 'PHI:PER:_', 'COMP:v', 'PHI:DET:_', 'PF:maan', 'LF:to_do'}
E/inf           {'-SPEC:T/fin', '-SPEC:N', 'adjoinable', 'ADV', 'LF:by', '-SPEC:Neg/fin', '-ARG', 'LANG:FI', '-VAL', 'SPEC:*', 'PF:en', '-SPEC:FORCE', 'TAIL:T'}
BE-             {'-SPEC:T/fin', 'COMP:T/prt', 'SPEC:P', '-COMP:T/fin', '-ARG', '-COMP:V', 'PF:BE', 'COPULA', 'SPEC:TO/inf', 'SPEC:D', 'ASP', 'LF:BE', 'LANG:EN', '!COMP:*', '-COMP:N', '-COMP:v', 'V', '-VAL', 'SPEC:ADV', 'COMP:P', '-SPEC:FORCE'}
D               {'-SPEC:T/fin', '-SPEC:MA/lla', 'adjoinable', 'COMP:N', '-COMP:P', '-COMP:T/fin', '-SPEC:P', '-SPEC:Neg/fin', '-ARG', '-SPEC:INF', 'LF:D', 'PF:D', '-COMP:D', 'LANG:EN', 'D', '-SPEC:C', '!PROBE:N', '!COMP:*', '-COMP:uR', 'OP', '-SPEC:V'}
D/rel           {'PF:D/rel', '-SPEC:T/fin', '-SPEC:MA/lla', 'adjoinable', 'COMP:N', 'D/rel', '-COMP:T/fin', '-SPEC:P', '-SPEC:Neg/fin', '-ARG', '-SPEC:INF', 'inflectional', '-COMP:D', 'LANG:EN', 'LF:D/rel', '-SPEC:C', 'D', 'OP:_', '!PROBE:N', 'OP:REL', '!COMP:*', '-COMP:uR', 'OP', '-SPEC:V', '-COMP:C/fin'}
P               {'-SPEC:iR', '-SPEC:T/fin', 'adjoinable', '-float', '-COMP:T', 'ARG', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:P', '-SPEC:Neg/fin', '-SPEC:*', '-SPEC:INF', 'P', 'COMP:D', '-SPEC:iWH', 'PHI:NUM:_', '-SPEC:C/fin', 'LF:P', '-SPEC:N', '-COMP:uWH', 'LANG:EN', '-SPEC:C', '-SPEC:v', '-SPEC:ADV', 'PHI:PER:_', '!COMP:*', '-COMP:N', '-COMP:ADV', '-COMP:A', '-VAL', 'PF:P', '-SPEC:V', '-SPEC:FORCE', 'PHI:DET:_'}
pro             ['LANG:EN']
pro-            {'COMP:R', 'COMP:D/rel', 'PF:(pro)', 'COMP:T/prt', '-SPEC:T/fin', '-COMP:VA/inf', 'COMP:P', 'N', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:V', '-SPEC:INF', 'COMP:C', '-SPEC:C/fin', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:WH', 'LANG:EN', 'COMP:R/D', '-SPEC:ADV', 'LF:pro', '-SPEC:V', '-COMP:N', '-COMP:A', 'COMP:uR', '-COMP:v', 'PHI', '-COMP:C/fin', '-SPEC:FORCE'}
cl              {'LEFT:D,CL', 'CL', 'RIGHT:ARE/inf', 'LANG:EN', 'LEFT:T/fin', 'RIGHT:PRG', 'inflectional'}
inc             {'LANG:EN', 'INCORPORATED', 'inflectional'}
sg              {'LANG:EN', 'PHI:NUM:SG', 'inflectional'}
pl              {'LANG:EN', 'PHI:NUM:PL', 'inflectional'}
1p              {'LANG:EN', 'PHI:PER:1', 'inflectional'}
2p              {'PHI:PER:2', 'LANG:EN', 'inflectional'}
3p              {'LANG:EN', 'PHI:PER:3', 'inflectional'}
def             {'LANG:EN', 'PHI:DET:DEF', 'inflectional'}
indef           {'LANG:EN', 'PHI:DET:INDEF', 'inflectional'}
hum             {'LANG:EN', 'PHI:HUM:HUM', 'inflectional'}
nonhum          {'LANG:EN', 'PHI:HUM:NONHUM', 'inflectional'}
m               {'LANG:EN', 'PHI:GEN:M', 'inflectional'}
f               {'LANG:EN', 'PHI:GEN:F', 'inflectional'}
nom             {'LANG:EN', 'NOM', 'TAIL:FIN,!COMP:*,VAL', 'inflectional'}
acc             {'TAIL:v', 'ACC', 'LANG:EN', 'inflectional'}
dat             {'TAIL:v', 'DAT', 'LANG:EN', 'inflectional'}
uC/op           {'LANG:EN', 'uC/op', 'inflectional'}
wh              {'LANG:EN', 'OP:_', 'OP:WH', 'inflectional'}
wh_             {'inflectional', 'OP', 'LANG:EN', 'OP:_', 'FORCE:OP:WH'}
top             {'LANG:EN', 'OP:TOP', 'inflectional'}
foc             {'LANG:EN', 'OP:FOC', 'inflectional'}
C/op            {'LANG:EN', 'OP:C/OP', 'inflectional'}
Q               {'OP:Q', 'OP', 'LANG:EN', 'OP:WH', 'inflectional'}
