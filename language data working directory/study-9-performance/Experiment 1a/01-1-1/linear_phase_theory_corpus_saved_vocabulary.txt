ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'COMP:ARE/inf', '-SPEC:*', '-COMP:T/fin', 'adjoinable', '-SPEC:ADV', 'LANG:IT', '-SPEC:INF', '-SPEC:iWH', '-COMP:ADV', '-COMP:uWH', '-SPEC:v', '!COMP:*', '-SPEC:V', 'COMP:D', '-SPEC:Neg/fin', '-COMP:N', '-SPEC:FORCE', '-COMP:T', '-SPEC:P', 'LF:to', 'TAIL:V', 'P', '-SPEC:C', '-SPEC:iR', 'PF:a', '-COMP:A', '-SPEC:T/fin', '-SPEC:N', '-ARG', '-VAL', '-SPEC:C/fin'}
a_D             {'-COMP:D', 'D', '-COMP:T/fin', 'OP', '!PROBE:N', 'adjoinable', '-SPEC:MA/lla', '-SPEC:INF', 'LANG:EN', '-COMP:uR', '-COMP:P', '!COMP:*', '-SPEC:V', '-SPEC:Neg/fin', 'COMP:N', '-SPEC:P', '-SPEC:C', 'PF:D', '-SPEC:T/fin', 'LF:D', '-ARG'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-COMP:T/fin', '-COMP:Neg', 'PHI:DET:_', 'LANG:EN', 'ASP', 'PHI:GEN:_', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'COMP:P', 'LF:admire', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:Neg', 'CLASS:TR', 'PF:admire', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
admire*         ['LANG:EN']
T/fin*          {'NO_DET', 'CAT:T/fin', 'LF:T', 'LANG:EN', '!SPEC:*', "PF:T/fin'", 'NO_NUMBER', '-VAL'}
v*              {'LANG:EN', '-VAL', 'NO_DET', 'LF:v', 'NO_NUMBER', 'PF:v', 'CAT:v'}
admire**        ['LANG:EN']
T/fin**         {'NO_DET', 'CAT:T/fin', 'LF:T', "PF:T/fin''", 'LANG:EN', 'PHI:PER:3', '!SPEC:*', 'NO_PERSON', 'NO_NUMBER', '-VAL'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'PHI:DET:_', 'LANG:IT', 'ASP', 'PHI:GEN:_', 'SPEC:TO/inf', 'COMP:P', 'LF:admire', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'PF:adora', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
antaa           ['LANG:FI']
anta-           {'ASP:BOUNDED', 'PHI:DET:_', '-COMP:FIN', 'ASP', 'SPEC:TO/inf', '!COMP:*', 'LANG:FI', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'PF:antaa', 'COMP:D', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'SPEC:D', 'CLASS:DITR', 'LF:give', '-VAL', '-SPEC:T/fin', 'PHI:NUM:_', '+SEM:directional', 'SPEC:P'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'LF:ask', 'PHI:DET:_', 'LANG:EN', 'ASP', 'PHI:GEN:_', 'SPEC:TO/inf', 'PF:ask', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', 'SPEC:D', '-COMP:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SEM:internal', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-SEM:directional', 'PF:avain', 'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', '-SPEC:INF', 'LF:key', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-SEM:directional', 'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', 'COMP:P', 'PF:auto', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'LF:car', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
bank            {'LF:bank_inst', 'PF:bank1', 'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', 'LANG:EN', '-SPEC:uWH', 'FREQ:1', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
bank            {'PF:bank2', 'COMP:R/D', 'COMP:D/rel', 'LF:bank_river', '-COMP:WH', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', 'LANG:EN', '-SPEC:uWH', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', 'FREQ:2', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
barn            {'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', 'LANG:EN', '-SPEC:uWH', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', 'PF:barn', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', 'LF:barn', '-SPEC:ADV', '-SPEC:C/fin'}
city            {'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', 'LANG:EN', 'LF:city', '-SPEC:uWH', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', 'PF:city', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
che             ['LANG:IT']
che-            {'COMP:R/D', '-COMP:*', '-COMP:WH', 'LANG:IT', '-SPEC:INF', 'LF:who', 'PF:che', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', '-SPEC:FORCE', '-COMP:v', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
chiamato        ['LANG:IT']
chiamata-       {'PHI:DET:_', 'LANG:IT', 'ASP', 'PHI:GEN:_', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', 'LF:called', '-COMP:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:chiamato', '-VAL', 'SPEC:P'}
claims          ['LANG:EN']
claim-          {'-COMP:D', 'COMP:T/fin', 'PHI:DET:_', 'LANG:EN', 'ASP', 'LF:claim', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', 'SPEC:D', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'PF:claim', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
danno           {'LF:damage', 'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', 'LANG:IT', '-SPEC:INF', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', 'PF:danno', '-SPEC:ADV', '-SPEC:C/fin'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'COMP:ARE/inf', 'PHI:DET:_', 'LANG:IT', 'ASP', 'PHI:GEN:_', 'SPEC:TO/inf', 'LF:detest', 'COMP:P', 'PF:detest', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SEM:internal', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
devono          ['LANG:EN']
deva-           {'COMP:ARE/inf', 'PHI:DET:_', 'LANG:IT', 'PHI:GEN:_', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', 'LF:must', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', 'PF:deva', 'SPEC:D', '-COMP:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SEM:internal', '-ASP', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
di              {'-COMP:T/fin', '-adjoinable', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:INF', '-SPEC:iWH', '-COMP:ADV', 'LF:of', '-COMP:uWH', '-SPEC:v', '!COMP:*', 'LANG:FI', '-SPEC:V', 'PHI:PER:_', 'COMP:D', 'ARG', '-SPEC:Neg/fin', '-COMP:N', '-SPEC:FORCE', '-COMP:T', 'PF:di', '-SPEC:P', 'SPEC:*', '-SPEC:C', '-SPEC:iR', '-COMP:A', '-SPEC:T/fin', '-SPEC:N', 'PHI:NUM:_', 'P', '-VAL', '-SPEC:C/fin'}
does            {'COMP:Neg', 'SPEC:C/fin', 'PHI:DET:_', '!PROBE:V', 'LANG:EN', 'PHI:GEN:_', '!COMP:*', '-SPEC:TO/inf', 'SPEC:D', 'COMP:T/prt', '-SPEC:C', 'PHI:GEN:F', 'PHI:PER:3', '-SPEC:T/fin', '-SPEC:N', '!SPEC:*', 'PF:does', 'PHI:NUM:_', 'COMP:V', '-COMP:T/fin', 'COMP:v', 'SPEC:FORCE', 'FIN', 'SPEC:TO/inf', '-SPEC:v', 'PHI:NUM:SG', 'T/fin', '-SPEC:V', 'LF:does', 'PHI:GEN:M', 'PHI:PER:_', 'ARG', '-COMP:INF', 'SPEC:*', '-SPEC:Neg', 'VAL', 'T'}
does_C          ['LANG:EN']
does-           {'COMP:Neg', 'SPEC:C/fin', 'PHI:DET:_', '!PROBE:V', 'LANG:EN', 'PHI:GEN:_', '!COMP:*', '-SPEC:TO/inf', 'SPEC:D', 'COMP:T/prt', '-SPEC:C', 'PHI:GEN:F', 'PHI:PER:3', '-SPEC:T/fin', '-SPEC:N', '!SPEC:*', 'PF:does', 'PHI:NUM:_', 'COMP:V', '-COMP:T/fin', 'COMP:v', 'SPEC:FORCE', 'FIN', 'SPEC:TO/inf', '-SPEC:v', 'PHI:NUM:SG', 'T/fin', '-SPEC:V', 'LF:does', 'PHI:GEN:M', 'PHI:PER:_', 'ARG', '-COMP:INF', 'SPEC:*', '-SPEC:Neg', 'VAL', 'T'}
dorme           ['LANG:IT']
dorme-          {'-COMP:D', 'PHI:DET:_', 'LANG:EN', 'ASP', 'PHI:GEN:_', 'SPEC:TO/inf', 'COMP:P', '-COMP:MA/inf', 'PHI:PER:_', 'V', 'SPEC:ADV', '!SPEC:D', 'PF:dorme', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'SPEC:D', 'CLASS:INTR', 'LF:sleep', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
disappeared     ['LANG:EN']
disappear-      {'-COMP:D', 'PHI:DET:_', 'LF:disappear', 'LANG:EN', 'ASP', 'PHI:GEN:_', 'SPEC:TO/inf', 'COMP:P', '-COMP:MA/inf', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'SPEC:D', 'PF:disappear', 'CLASS:INTR', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'0', '2SPEC', 'SPEC:D', 'LF:easy', 'PF:easy', 'LANG:EN'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'PHI:DET:_', 'POL:NEG', 'Neg/fin', 'FIN', '!COMP:*', 'PF:ei', 'LANG:FI', 'NEG', '!COMP:T', 'PHI:PER:_', 'ARG', 'SPEC:*', '%SPEC:INF', 'COMP:T/prt', 'VAL', 'PHI:NUM:_', '!SPEC:*', '-SPEC:T/fin', 'SEM:internal', 'LF:neg', '-SPEC:T'}
e-              {'PHI:DET:_', 'POL:NEG', 'Neg/fin', 'FIN', '!COMP:*', 'PF:ei', 'LANG:FI', 'NEG', '!COMP:T', 'PHI:PER:_', 'ARG', 'SPEC:*', '%SPEC:INF', 'COMP:T/prt', 'VAL', 'PHI:NUM:_', '!SPEC:*', '-SPEC:T/fin', 'SEM:internal', 'LF:neg', '-SPEC:T'}
elaa            ['LANG:FI']
ela-            {'-COMP:D', 'LF:live', 'PF:elaa', 'PHI:DET:_', 'ASP', 'SPEC:TO/inf', 'LANG:FI', 'COMP:P', '-COMP:MA/inf', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', 'SPEC:D', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'CLASS:INTR', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
etsii           ['LANG:FI']
etsi-           {'LF:search', 'PHI:DET:_', 'ASP', 'SPEC:TO/inf', '!COMP:D', '-COMP:P', '!COMP:*', 'LANG:FI', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'PF:etsi', 'CLASS:TR', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
etta            {'PF:etta', '-SPEC:*', 'COMP:T/fin', '-SPEC:D', 'LF:that', '!PROBE:FIN', 'FORCE', 'FIN', 'COMP:C/fin', '!COMP:*', 'LANG:FI', '-ARG', '-VAL'}
fell            ['LANG:EN']
fell-           {'-COMP:D', 'PHI:DET:_', 'LANG:EN', 'ASP', 'LF:fell', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', '-COMP:MA/inf', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', '-COMP:N', 'PF:fell', '-SPEC:FORCE', '-COMP:v', 'SPEC:D', 'CLASS:INTR', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
flow'           {'PHI:DET:_', 'LANG:EN', 'ASP', 'PHI:GEN:_', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', 'PF:flow', 'SPEC:D', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'PHI:NUM:_', '-SPEC:T/fin', 'LF:flow', '-VAL', 'SPEC:P'}
from            {'-SPEC:*', '-COMP:T/fin', 'adjoinable', '-SPEC:ADV', 'PHI:DET:_', 'TAIL:V,+SEM:directional', '-SPEC:INF', '-SPEC:iWH', 'LANG:EN', '-COMP:ADV', '-COMP:uWH', 'PHI:GEN:_', '-SPEC:v', '!COMP:*', 'LF:from', '-SPEC:V', 'PHI:PER:_', 'COMP:D', 'ARG', '-SPEC:Neg/fin', '-COMP:N', '-float', '-COMP:T', '-SPEC:FORCE', '-SPEC:P', '-SPEC:C', '-SPEC:iR', 'PF:from', '-COMP:A', '-SPEC:T/fin', '-SPEC:N', 'PHI:NUM:_', 'P', '-VAL', '-SPEC:C/fin'}
gave            ['LANG:EN']
give-           {'PF:give', 'PHI:DET:_', '-COMP:FIN', 'LANG:EN', 'ASP', 'PHI:GEN:_', 'SPEC:TO/inf', '!COMP:*', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'SPEC:D', 'CLASS:DITR', 'LF:give', '-VAL', '-SPEC:T/fin', 'PHI:NUM:_', '+SEM:directional', 'SPEC:P'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SEM:directional', 'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', 'LANG:IT', 'PF:Giuseppe', '-SPEC:INF', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', 'LF:Giuseppe', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'ASP:BOUNDED', '-SPEC:*', 'PHI:DET:_', 'COMP:A/inf', 'ASP', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'LANG:FI', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', 'LF:want', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'PF:haluaa', 'CLASS:TR', '-SPEC:T/fin', 'SEM:internal', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
hairitsee       ['LANG:FI']
hairitse-       {'PHI:DET:_', '-COMP:FIN', 'ASP', 'SPEC:TO/inf', '!COMP:D', '-COMP:P', '!COMP:*', 'LANG:FI', 'COMP:P', 'LF:disturb', 'PF:hairitsee', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', 'SPEC:D', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'CLASS:TR', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'LF:have', 'PHI:DET:_', 'LANG:IT', 'PF:ha', 'PHI:GEN:_', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', 'SPEC:D', 'SPEC:*', 'COMP:T', '-COMP:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SEM:internal', '-ASP', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
horse           {'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', 'LANG:EN', '-SPEC:uWH', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', 'PF:horse', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', 'LF:horse', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'-COMP:D', 'PHI:DET:_', 'LF:disappear', 'ASP', 'SPEC:TO/inf', 'LANG:FI', 'COMP:P', '-COMP:MA/inf', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'SPEC:D', 'CLASS:INTR', 'PF:havia', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
Helsingissa     ['LANG:FI']
Helsinki        ['LANG:FI']
Helsinki-       {'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', 'PF:Helsinki', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'LF:Helsinki', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'PF:ihaile-', 'PHI:DET:_', '-COMP:FIN', 'ASP', 'SPEC:TO/inf', '!COMP:D', '-COMP:P', '!COMP:*', 'LANG:FI', 'COMP:P', 'LF:admire', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'CLASS:TR', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
il              {'-COMP:D', 'D', '-COMP:T/fin', '!PROBE:N', 'adjoinable', '-SPEC:MA/lla', 'LANG:IT', '-SPEC:INF', '-COMP:uR', '-COMP:P', '!COMP:*', '-SPEC:V', '-SPEC:Neg/fin', 'COMP:N', '-SPEC:P', '-SPEC:C', 'PF:il', 'LF:the', '-SPEC:T/fin', 'OP', '-ARG'}
i               {'-COMP:D', 'D', '-COMP:T/fin', '!PROBE:N', 'adjoinable', '-SPEC:MA/lla', 'LANG:IT', '-SPEC:INF', '-COMP:uR', '-COMP:P', '!COMP:*', '-SPEC:V', '-SPEC:Neg/fin', 'COMP:N', '-SPEC:P', '-SPEC:C', 'PF:il', 'LF:the', '-SPEC:T/fin', 'OP', '-ARG'}
in              {'-COMP:T/fin', 'adjoinable', '-SPEC:ADV', 'PHI:DET:_', 'LANG:IT', 'PF:in', '-SPEC:INF', '-SPEC:iWH', '-COMP:ADV', '-COMP:uWH', 'PHI:GEN:_', 'LF:in', '-SPEC:v', '!COMP:*', '-SPEC:V', 'PHI:PER:_', 'COMP:D', 'ARG', '-SPEC:Neg/fin', '-COMP:N', '-SPEC:FORCE', '-COMP:T', '-SPEC:P', '-SPEC:C', '-SPEC:iR', '-COMP:A', '-SPEC:T/fin', '-SPEC:N', 'PHI:NUM:_', 'P', '-VAL', '-SPEC:C/fin'}
infermieri      {'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', 'PF:infermieri', 'LANG:IT', '-SPEC:INF', 'LF:nurses', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
is              ['LANG:EN']
be-             {'PF:be', 'LANG:EN', 'ASP', 'SPEC:TO/inf', '!COMP:*', 'COMP:P', 'V', '-COMP:TO/inf', 'SPEC:ADV', '-COMP:V', 'SPEC:D', '-COMP:N', 'LF:be', '-SPEC:FORCE', '-COMP:v', 'COPULA', '-SPEC:T/fin', '-ARG', '-VAL', 'SPEC:P'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'-COMP:D', 'PHI:DET:_', 'ASP', 'SPEC:TO/inf', 'LANG:FI', 'COMP:P', '-COMP:MA/inf', 'PF:istuu', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', 'LF:sit', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'SPEC:D', 'CLASS:INTR', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
John            ['LANG:EN']
John-           {'COMP:R/D', '-COMP:WH', '-SPEC:INF', 'LANG:EN', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', '-SEM:directional', 'COMP:D/rel', '-adjoinable', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', 'LF:John', '-SPEC:R', 'PF:John', 'N', '-SPEC:FORCE', '-COMP:v', '-COMP:AUX', '-SPEC:ADV'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'COMP:R/D', '-COMP:*', '-COMP:WH', '-SPEC:INF', 'LF:who', 'LANG:FI', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', 'PF:joka', '-SPEC:FORCE', '-COMP:v', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-SEM:directional', 'COMP:R/D', 'LF:Jukka', 'COMP:D/rel', '-COMP:WH', 'COMP:R', 'PF:Jukka', '-SPEC:INF', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'PHI:DET:_', 'PF:juokse-', 'ASP', 'SPEC:TO/inf', 'LANG:FI', 'COMP:P', 'LF:run', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
kaksi           {'TAIL:ARG,VAL,FIN', 'ARG', 'SPEC:*', 'PHI:DET:_', 'COMP:N', 'NUM', 'COMP:n', '-VAL', 'PHI:NUM:SG', 'LANG:FI', 'PHI:NUM:_', 'PF:kaksi', 'LF:two', 'PHI:PER:_'}
kaksi           {'TAIL:ARG,ASP:BOUNDED', 'SPEC:*', 'TAIL:*POL:NEG', 'COMP:N', 'NUM', 'LANG:EN', 'COMP:n', 'PF:kaksi', 'LF:two'}
kaksi_1         {'TAIL:ARG,VAL,FIN', 'ARG', 'SPEC:*', 'PHI:DET:_', 'COMP:N', 'NUM', 'COMP:n', '-VAL', 'PHI:NUM:SG', 'LANG:FI', 'PHI:NUM:_', 'PF:kaksi', 'LF:two', 'PHI:PER:_'}
kaksi_2         {'TAIL:ARG,ASP:BOUNDED', 'SPEC:*', 'TAIL:*POL:NEG', 'COMP:N', 'NUM', 'LANG:EN', 'COMP:n', 'PF:kaksi', 'LF:two'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'SPEC:*', 'NUM', 'LANG:FI', 'COMP:N', 'PF:kaksi', 'LF:two', 'COMP:n'}
kaupunkia       ['LANG:EN']
kaupunki        {'PF:kaupunki', 'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', 'LF:city', '-SPEC:uWH', '-COMP:P', 'LANG:FI', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'PHI:DET:_', 'LF:order', 'ASP', 'SPEC:TO/inf', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'V', 'SPEC:ADV', '!COMP:A/inf', 'ARG', 'PF:kaske', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:NUM:_', 'SEM:external', '-VAL', 'SPEC:P'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'LF:watch', 'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'PF:kello', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
kello0-         {'PF:kello', '0', 'LF:watch', '2SPEC', 'SPEC:D', 'LANG:FI'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'COMP:R/D', 'PF:key', 'COMP:D/rel', '-COMP:WH', 'COMP:R', '-SPEC:INF', 'LF:key', '-COMP:C/fin', 'LANG:EN', '-SPEC:uWH', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
kirja           ['LANG:FI']
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-SEM:directional', 'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:uWH', 'LF:book', 'LANG:FI', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'PF:kirja', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
knows           ['LANG:EN']
know-           {'PHI:DET:_', 'LANG:EN', 'ASP', 'PHI:GEN:_', 'LF:know', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', 'PF:know', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'CLASS:TR', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
kohti           {'-COMP:T/fin', 'adjoinable', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:INF', '-SPEC:iWH', '-COMP:ADV', '-COMP:uWH', '-SPEC:v', '!COMP:*', 'LANG:FI', '-SPEC:V', 'PHI:PER:_', 'LF:towards', 'COMP:D', 'ARG', 'PF:kohti', '-SPEC:Neg/fin', '-COMP:N', '-SPEC:FORCE', '-COMP:T', 'SPEC:*', '-SPEC:P', 'TAIL:V', '-SPEC:C', '-SPEC:iR', '-COMP:A', '-SPEC:T/fin', '-SPEC:N', 'PHI:NUM:_', 'P', '-VAL', '-SPEC:C/fin'}
koko            {'-COMP:D', 'D', '-COMP:T/fin', 'adjoinable', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:INF', '-COMP:uR', '-COMP:P', 'LF:all', 'TAIL:T', '!COMP:*', 'LANG:FI', '-SPEC:V', '-SPEC:Neg/fin', 'PF:koko', 'COMP:N', '-SPEC:P', '-SPEC:C', '-SPEC:T/fin', 'OP', '-ARG'}
kuka            ['LANG:FI']
kuka-           {'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', 'LF:who', 'PF:kuka', '-SPEC:uWH', 'LANG:FI', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', 'PHI', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:v', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'-COMP:D', 'LF:snore', '-COMP:T/fin', '-COMP:WH', 'PHI:DET:_', 'ASP', 'SPEC:TO/inf', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'PF:kuorsaa', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
lahella         {'PHI:DET:_', '-SPEC:INF', '-COMP:uWH', '!COMP:*', 'LANG:FI', '!SPEC:D', 'COMP:D', '-SPEC:Neg/fin', '-COMP:N', 'INF', '-COMP:T', '-SPEC:P', '-SPEC:C', '-SPEC:iR', '-COMP:A', '!SPEC:*', '-SPEC:T/fin', '-SPEC:N', 'PHI:NUM:_', 'P', '-SPEC:C/fin', 'COMP:V', '-COMP:T/fin', 'COMP:v', 'adjoinable', '-SPEC:iWH', 'PF:lahella', '-COMP:C/fin', '-COMP:ADV', '-SPEC:v', '-SPEC:V', 'PHI:PER:_', 'ARG', 'LF:near', '-SPEC:FORCE', 'SPEC:*', '-COMP:FORCE', 'VAL', '-SPEC:ADV'}
lahella         {'-COMP:T/fin', 'adjoinable', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:INF', '-SPEC:iWH', 'PF:lahella', '-COMP:ADV', '-COMP:uWH', '!COMP:D', '-SPEC:v', '!COMP:*', 'LANG:FI', '-SPEC:V', 'PHI:PER:_', 'COMP:D', 'LF:near', '-SPEC:Neg/fin', 'ARG', '-COMP:N', '-SPEC:FORCE', '-COMP:T', 'SPEC:*', '-SPEC:P', '-SPEC:C', '-SPEC:iR', '-COMP:A', '-SPEC:T/fin', '-SPEC:N', 'PHI:NUM:_', 'P', '-VAL', '-SPEC:C/fin'}
lahella_1       {'-COMP:T/fin', 'adjoinable', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:INF', '-SPEC:iWH', 'PF:lahella', '-COMP:ADV', '-COMP:uWH', '!COMP:D', '-SPEC:v', '!COMP:*', 'LANG:FI', '-SPEC:V', 'PHI:PER:_', 'COMP:D', 'LF:near', '-SPEC:Neg/fin', 'ARG', '-COMP:N', '-SPEC:FORCE', '-COMP:T', 'SPEC:*', '-SPEC:P', '-SPEC:C', '-SPEC:iR', '-COMP:A', '-SPEC:T/fin', '-SPEC:N', 'PHI:NUM:_', 'P', '-VAL', '-SPEC:C/fin'}
lahella_2       {'PHI:DET:_', '-SPEC:INF', '-COMP:uWH', '!COMP:*', 'LANG:FI', '!SPEC:D', 'COMP:D', '-SPEC:Neg/fin', '-COMP:N', 'INF', '-COMP:T', '-SPEC:P', '-SPEC:C', '-SPEC:iR', '-COMP:A', '!SPEC:*', '-SPEC:T/fin', '-SPEC:N', 'PHI:NUM:_', 'P', '-SPEC:C/fin', 'COMP:V', '-COMP:T/fin', 'COMP:v', 'adjoinable', '-SPEC:iWH', 'PF:lahella', '-COMP:C/fin', '-COMP:ADV', '-SPEC:v', '-SPEC:V', 'PHI:PER:_', 'ARG', 'LF:near', '-SPEC:FORCE', 'SPEC:*', '-COMP:FORCE', 'VAL', '-SPEC:ADV'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'-COMP:D', 'COMP:PP', 'PF:lahtea', 'PHI:DET:_', 'ASP', 'SPEC:TO/inf', 'LANG:FI', 'COMP:P', '-COMP:MA/inf', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', 'SPEC:D', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'CLASS:INTR', 'LF:leave', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
lavano          ['LANG:IT']
lava-           {'PHI:DET:_', 'LANG:IT', 'ASP', 'PHI:GEN:_', 'SPEC:TO/inf', '!COMP:*', 'COMP:P', 'LF:wash', 'PF:lava', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-COMP:D', 'PF:le', 'D', '-COMP:T/fin', 'OP', '!PROBE:N', 'adjoinable', '-SPEC:MA/lla', 'LANG:IT', '-SPEC:INF', '-COMP:uR', '-COMP:P', '!COMP:*', '-SPEC:V', '-SPEC:Neg/fin', 'COMP:N', '-SPEC:P', '-SPEC:C', '-SPEC:T/fin', 'LF:D', '-ARG'}
leaves          ['LANG:EN']
leave           {'-COMP:T/fin', 'PHI:DET:_', 'LANG:EN', 'ASP', 'PF:leave', 'PHI:GEN:_', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', '!SPEC:D', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'LF:leave', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
leave-          {'-COMP:T/fin', 'PHI:DET:_', 'LANG:EN', 'ASP', 'PF:leave', 'PHI:GEN:_', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', '!SPEC:D', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'LF:leave', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
like-           {'PHI:DET:_', 'LANG:EN', 'ASP', 'PHI:GEN:_', 'SPEC:TO/inf', '!COMP:D', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'LF:like', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:like', '-VAL', 'SPEC:P'}
likes           ['LANG:EN']
like            {'PHI:DET:_', 'LANG:EN', 'ASP', 'PHI:GEN:_', 'SPEC:TO/inf', '!COMP:D', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'LF:like', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:like', '-VAL', 'SPEC:P'}
little          ['LANG:EN']
little-         {'0', '2SPEC', 'LF:little', 'SPEC:D', 'PF:little-', 'LANG:EN'}
lle             {'-SPEC:*', '-COMP:T/fin', 'adjoinable', '-SPEC:ADV', 'PHI:DET:_', 'TAIL:V,+SEM:directional', '-SPEC:INF', '-SPEC:iWH', '-COMP:ADV', '-COMP:uWH', '-SPEC:v', '!COMP:*', 'LANG:FI', '-SPEC:V', 'PHI:PER:_', 'LF:for', 'COMP:D', 'ARG', '-SPEC:Neg/fin', '-COMP:N', '-SPEC:FORCE', '-COMP:T', '-SPEC:P', '-SPEC:C', '-SPEC:iR', '-VAL', '-COMP:A', '-SPEC:T/fin', 'PF:P(lle)', '-SPEC:N', 'PHI:NUM:_', 'P', '+SEM:directional', '-SPEC:C/fin'}
lla             {'-COMP:T/fin', 'adjoinable', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:INF', '-SPEC:iWH', '-COMP:ADV', '-COMP:uWH', '-SPEC:v', 'TAIL:T', '!COMP:*', 'LANG:FI', '-SPEC:V', 'PHI:PER:_', 'COMP:D', 'ARG', '-SPEC:Neg/fin', 'PF:P(lla)', '-COMP:N', '-SPEC:FORCE', '-COMP:T', 'SPEC:*', '-SPEC:P', 'TAIL:*V', '-SPEC:C', '-SPEC:iR', '-COMP:A', '-SPEC:T/fin', '-SPEC:N', 'PHI:NUM:_', 'P', '-VAL', 'LF:by', '-SPEC:C/fin'}
Luisa           ['LANG:IT']
Luisa-          {'-SEM:directional', 'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', 'LANG:IT', '-SPEC:INF', 'LF:Luisa', 'PF:Luisa', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'PHI:DET:_', 'LF:read', 'ASP', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'LANG:FI', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', '-VAL', 'CLASS:TR', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:luke', 'SPEC:P'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'ASP:BOUNDED', 'PHI:DET:_', 'ASP', 'SPEC:TO/inf', '!COMP:D', '-COMP:P', '!COMP:*', 'LANG:FI', 'COMP:P', 'PHI:PER:_', 'V', 'LF:find', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', '-VAL', 'CLASS:TR', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:loyta-', 'SPEC:P'}
Mary            ['LANG:EN']
Mary-           {'COMP:R/D', '-COMP:WH', '-SPEC:INF', 'LANG:EN', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', '-SEM:directional', 'COMP:D/rel', '-adjoinable', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'PF:Mary', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'LF:Mary', 'N', '-SPEC:FORCE', '-COMP:v', '-COMP:AUX', '-SPEC:ADV'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'COMP:R/D', '-COMP:WH', '-SPEC:INF', 'LANG:FI', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', 'LF:Merja', '-SPEC:C/fin', '-SEM:directional', 'COMP:D/rel', '-adjoinable', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', '-SPEC:FORCE', '-COMP:v', '-COMP:AUX', 'PF:Merja', '-SPEC:ADV'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'-SPEC:Neg/fin', 'COMP:v', 'adjoinable', 'SPEC:*', '-SPEC:FORCE', 'TAIL:T', 'PF:malla', '-SPEC:N', 'ADV', '-SPEC:T/fin', 'LANG:FI', 'MA/inf', 'LF:by'}
meren           ['LANG:FI']
mere-           {'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'PF:meri', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', 'LF:ocean', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
mies            {'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'LF:man', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', 'PF:mies', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
mistake         {'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', '-SPEC:INF', 'PF:mistake', '-COMP:C/fin', 'LANG:EN', '-SPEC:uWH', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', 'LF:mistake', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', 'LF:what', '-SPEC:uWH', 'LANG:FI', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', 'PF:mika-', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'LF:move', 'LANGN:EN', 'PHI:DET:_', 'ASP', 'PHI:GEN:_', 'SPEC:TO/inf', '-COMP:P', 'SPEC:P', '!COMP:*', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', '-VAL', 'CLASS:TR', '-SPEC:T/fin', 'PHI:NUM:_', '+SEM:directional', 'PF:move'}
mukavasti       ['LANG:EN']
mukava-         {'0', 'LF:comfortably', '2SPEC', 'PF:mukavasti', 'SPEC:D', 'LANG:FI'}
must            {'MODAL', 'COMP:Neg', 'SPEC:C/fin', 'COMP:V', '-COMP:T/fin', 'COMP:v', 'PHI:DET:_', 'SPEC:FORCE', '!PROBE:V', 'LANG:EN', 'PF:must', 'PHI:GEN:_', 'FIN', 'SPEC:TO/inf', '-SPEC:v', '!COMP:*', 'T/fin', '-SPEC:V', 'PHI:PER:_', 'LF:must', '-SPEC:TO/inf', 'ARG', '-COMP:INF', 'SPEC:D', 'SPEC:*', 'COMP:T/prt', '-SPEC:C', '-SPEC:Neg', 'VAL', 'T', '-SPEC:T/fin', '-SPEC:N', '!SPEC:*', 'PHI:NUM:_'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'ASP:BOUNDED', '-COMP:T/fin', 'PHI:DET:_', 'ASP', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'LANG:FI', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'CLASS:TR', 'LF:sell', 'PF:myy', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
naki            ['LANG:FI']
nakee           ['LANG:FI']
nake-           {'ASP:BOUNDED', 'PF:nake', '-COMP:ESSA/inf', '-COMP:MA/ssa', 'PHI:DET:_', 'ASP', 'SPEC:TO/inf', '-COMP:P', 'SPEC:P', '!COMP:*', 'LANG:FI', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'LF:see', 'CLASS:TR', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', '-COMP:MA/tta'}
nayttaa         ['LANG:FI']
naytta-         {'LF:seem', 'ASP', 'SPEC:TO/inf', 'LANG:FI', 'COMP:P', 'V', 'SPEC:ADV', '!SPEC:D', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'VAL', 'PF:naytta', '!COMP:VA/inf', 'SEM:internal', '-SPEC:T/fin', '-ARG', 'SPEC:P'}
ndo             {'COMP:V', '-COMP:T/fin', 'PF:PRG', 'COMP:v', 'INF', '-COMP:C/fin', 'LANG:EN', '-COMP:FORCE', 'VAL', 'PRG', 'LF:ing', '-SPEC:T/fin', '!COMP:*', '-SPEC:V', '?ARG'}
ne              {'-COMP:D', 'D', '-COMP:T/fin', '!PROBE:N', 'adjoinable', '-SPEC:MA/lla', '-SPEC:INF', '-COMP:uR', '-COMP:P', '!COMP:*', 'LANG:FI', '-SPEC:V', 'LF:those', '-SPEC:Neg/fin', 'PF:ne', 'COMP:N', '-SPEC:P', '-SPEC:C', 'PHI:PER:3', '-SPEC:T/fin', 'OP', 'PHI:NUM:PL', '-ARG'}
niiden          ['LANG:EN']
nen             {'-SPEC:A', '-SPEC:D', 'SPEC:*', 'COMP:0', 'A', 'TAIL:D', 'LF:ing', 'PF:a', 'LANG:FI'}
not             {'-COMP:D', 'ARG', '-COMP:C', 'SPEC:*', 'PF:not', 'PHI:DET:_', '-COMP:FIN', 'POL:NEG', 'LANG:EN', '-VAL', 'PHI:GEN:_', '-SPEC:T/fin', '!COMP:*', 'PHI:NUM:_', 'Neg', 'LF:not', 'PHI:PER:_'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-COMP:D', '-COMP:T/fin', 'PHI:DET:_', 'ASP', 'SPEC:TO/inf', 'LANG:FI', '-COMP:Neg/fin', '-COMP:MA/inf', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'PF:nukku', 'ARG', '-COMP:V', 'SPEC:D', '-COMP:N', '-COMP:T', '-SPEC:FORCE', '-COMP:v', 'CLASS:INTR', 'LF:sleep', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', 'PF:omaisuuden', '-SPEC:uWH', 'LANG:FI', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', 'LF:possessions', 'N', '-COMP:V', '-COMP:N', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:v', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
operatoria      ['LANG:IT']
operatoria-     {'0', 'LF:operation', '2SPEC', 'SPEC:D', 'PF:operatoria', 'LANG:IT'}
ostaa           ['LANG:FI']
osta-           {'ASP:BOUNDED', 'PF:osta', 'PHI:DET:_', 'ASP', 'SPEC:TO/inf', 'LF:buy', '-COMP:P', '!COMP:*', 'LANG:FI', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'CLASS:TR', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'COMP:R/D', 'PF:paiva', '-COMP:WH', 'COMP:D/rel', 'COMP:R', '-SPEC:INF', 'LF:day', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', 'SEM:nonreferential', '-SPEC:ADV', '-SPEC:C/fin'}
past            {'-SPEC:*', '-COMP:T/fin', 'adjoinable', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:INF', '-SPEC:iWH', 'LANG:EN', '-COMP:ADV', '-COMP:uWH', 'PHI:GEN:_', '-SPEC:v', '!COMP:*', '-SPEC:V', 'PHI:PER:_', 'COMP:D', 'ARG', '-SPEC:Neg/fin', '-COMP:N', '-float', '-COMP:T', '-SPEC:FORCE', '-SPEC:P', 'P', '-SPEC:C', '-SPEC:iR', '-COMP:A', '-SPEC:T/fin', '-SPEC:N', 'PF:past', 'PHI:NUM:_', 'LF:past', '-VAL', '-SPEC:C/fin'}
Pariisia        ['LANG:FI']
Pariisi-        {'COMP:R/D', 'LF:Paris', '-COMP:WH', 'COMP:D/rel', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', 'PF:Pariisi', '-SPEC:uWH', 'LANG:FI', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-SEM:directional', 'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:uWH', 'PF:Pekka', 'LANG:FI', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', 'LF:Pekka', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'PHI:DET:_', 'ASP', 'PF:pelkaa', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'LANG:FI', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', '-COMP:N', 'LF:fear', '-SPEC:FORCE', '-COMP:v', 'CLASS:TR', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
persuades       ['LANG:EN']
persuade-       {'PHI:DET:_', 'COMP:TO/inf', 'LANG:EN', 'ASP', 'PHI:GEN:_', 'PF:persuade', 'SPEC:TO/inf', 'SPEC:P', '!COMP:*', 'COMP:P', 'LF:persuade', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SEM:external'}
peruuntui       ['LANG:FI']
peruuntu-       {'PHI:DET:_', 'ASP', 'SPEC:TO/inf', 'LF:cancelled', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', 'SPEC:D', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'PF:peruuntui', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'ASP:BOUNDED', 'PHI:DET:_', 'ASP', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'LANG:FI', 'LF:wash', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'CLASS:TR', 'PHI:NUM:_', '-SPEC:T/fin', 'PF:pese_asp', '-VAL', 'SPEC:P'}
pese-           {'PHI:DET:_', 'ASP', 'SPEC:TO/inf', '-COMP:P', 'SPEC:P', '!COMP:*', 'LANG:FI', 'LF:wash', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'CLASS:TR', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'PF:pese'}
petardi         {'LF:firecrackers', 'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', 'PF:petardi', 'LANG:IT', '-SPEC:INF', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
pieni           ['LANG:FI']
pieni-          {'PF:pieni-', '0', 'LF:small', '2SPEC', 'SPEC:D', 'LANG:FI'}
poikien         ['LANG:FI']
poika-          {'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', 'LF:boy', '-SPEC:uWH', 'LANG:FI', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', 'PF:poika', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
puhelinta       ['LANG:FI']
puhelin-        {'0', '2SPEC', 'SPEC:D', 'LF:phone', 'PF:puhelin', 'LANG:FI'}
punainen        ['LANG:FI']
puna-           {'0', 'LF:red', '2SPEC', 'SPEC:D', 'LANG:FI', 'PF:puna-'}
presupposto     {'COMP:R/D', 'PF:presupposto', '-COMP:WH', 'COMP:D/rel', 'COMP:R', 'LANG:IT', '-SPEC:INF', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', 'LF:presupposition', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
primary         {'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', 'LANG:IT', '-SPEC:INF', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', 'LF:nurse', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:v', 'PF:primary', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
promises        ['LANG:EN']
promise-        {'PHI:DET:_', 'LANG:EN', 'ASP', 'PHI:GEN:_', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', 'SPEC:D', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'PF:promise', '-SPEC:T/fin', 'LF:promise', 'SEM:internal', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
problem         {'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', 'LANG:EN', '-SPEC:uWH', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'PF:problem', 'LF:problem', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
pyytaa          ['LANG:FI']
pyyta-          {'LF:ask', 'PHI:DET:_', 'ASP', 'PF:pyyda', 'SPEC:TO/inf', '-COMP:P', 'SPEC:P', '!COMP:*', 'LANG:FI', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'CLASS:TR', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SEM:external'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'-COMP:D', '-COMP:T/fin', 'PHI:DET:_', 'LANG:EN', 'ASP', 'LF:race', 'PHI:GEN:_', 'SPEC:TO/inf', 'COMP:P', '-COMP:MA/inf', 'LAMG:EN', 'PF:race', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'SPEC:D', 'CLASS:INTR', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
raukesi         ['LANG:FI']
raukea-         {'PHI:DET:_', 'PF:raukea', 'ASP', 'SPEC:TO/inf', 'LANG:FI', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'LF:terminate', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
red             ['LANG:EN']
red-            {'0', 'LF:red', '2SPEC', 'SPEC:D', 'PF:red', 'LANG:EN'}
saavuttaa       ['LANG:FI']
saavutta-       {'ASP:BOUNDED', 'PHI:DET:_', 'ASP', 'SPEC:TO/inf', '!COMP:D', '-COMP:P', '!COMP:*', 'LANG:FI', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', 'LF:reach', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'CLASS:TR', '-SPEC:T/fin', 'PF:saavutta-', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'PF:sano-', 'PHI:DET:_', 'LF:say', 'ASP', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'LANG:FI', 'COMP:P', 'COMP:FORCE', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', 'SPEC:D', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'CLASS:TR', 'COMP:VA/inf', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
said            ['LANG:EN']
say'            {'PHI:DET:_', 'LF:say', 'LANG:EN', 'ASP', 'PHI:GEN:_', 'SPEC:TO/inf', 'COMP:P', '!COMP:FORCE', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', 'SPEC:D', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'PF:say', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
say-            {'PHI:DET:_', 'LF:say', 'LANG:EN', 'ASP', 'PHI:GEN:_', 'SPEC:TO/inf', 'COMP:P', '!COMP:FORCE', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', 'SPEC:D', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'PF:say', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
sala            ['LANG:IT']
sala-           {'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', 'LANG:IT', '-SPEC:INF', '-COMP:C/fin', 'PF:sala', '-SPEC:uWH', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'LF:room', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
scoppiati       ['LANG:IT']
scoppia-        {'PHI:DET:_', 'LANG:IT', 'ASP', 'PHI:GEN:_', 'PF:scoppia', 'SPEC:TO/inf', 'LF:explode', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
sentenza        {'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', 'LANG:IT', '-SPEC:INF', '-COMP:C/fin', '-SPEC:uWH', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', 'PF:sentenza', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'LF:sentence', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
Seine           ['LANG:EN']
Seine-          {'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', 'LANG:EN', '-SPEC:uWH', 'LF:Seine', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:ADV', 'PF:Seine'}
sembrano        ['LANG:IT']
sembra-         {'-COMP:D', 'LF:seem', 'LANG:EN', 'SPEC:TO/inf', 'COMP:P', 'PF:sembra', 'V', 'SPEC:ADV', '-COMP:V', 'SPEC:D', '-COMP:N', '-SPEC:FORCE', '-COMP:v', '!COMP:ARE/inf', '-SPEC:T/fin', '-ASP', '-ARG', '-VAL', 'SPEC:P'}
sleeps          ['LANG:EN']
sleep           {'-COMP:D', 'PHI:DET:_', 'LANG:EN', 'ASP', 'PF:sleep', 'PHI:GEN:_', 'SPEC:TO/inf', 'COMP:P', '-COMP:MA/inf', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'SPEC:D', 'CLASS:INTR', 'LF:sleep', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
sleep-          {'-COMP:D', 'PHI:DET:_', 'LANG:EN', 'ASP', 'PF:sleep', 'PHI:GEN:_', 'SPEC:TO/inf', 'COMP:P', '-COMP:MA/inf', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'SPEC:D', 'CLASS:INTR', 'LF:sleep', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
solution        {'COMP:R/D', 'COMP:D/rel', 'PF:solution', '-COMP:WH', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', 'LANG:EN', '-SPEC:uWH', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', 'LF:solution', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', 'PF:sopimus', '-SPEC:R', '!COMP:A/inf', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', 'LF:agreement', '-SPEC:ADV', '-SPEC:C/fin'}
spinge          ['LANG:IT']
spinge-         {'PF:spinge', 'PHI:DET:_', 'LANG:IT', 'ASP', 'PHI:GEN:_', '-COMP:P', '!COMP:D', 'SPEC:TO/inf', 'LF:push', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
ssa             {'-COMP:T/fin', 'adjoinable', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:INF', '-SPEC:iWH', '-COMP:ADV', '-COMP:uWH', 'LF:in', '-SPEC:v', '!COMP:*', 'LANG:FI', '-SPEC:V', 'PHI:PER:_', 'PF:ssa', 'COMP:D', 'ARG', '-SPEC:Neg/fin', '-COMP:N', '-SPEC:FORCE', '-COMP:T', 'SPEC:*', '-SPEC:P', 'COMP:n/MA', 'TAIL:V', '-SPEC:C', '-SPEC:iR', '-COMP:A', '-SPEC:T/fin', '-SPEC:N', 'PHI:NUM:_', 'P', '-VAL', '-SPEC:C/fin'}
stanno          ['LANG:IT']
sta-            {'PHI:DET:_', 'LANG:EN', 'PHI:GEN:_', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', 'PF:sta', '-COMP:V', 'SPEC:D', 'COMP:PRG', '-COMP:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SEM:internal', 'LF:stay', '-ASP', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
sti             {'-SPEC:Neg/fin', '!COMP:*', 'adjoinable', 'SPEC:*', '-SPEC:FORCE', '-SPEC:N', 'TAIL:T', 'PF:sti', 'ADV', '-SPEC:T/fin', '-ARG', 'LF:by', 'LANG:FI'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'PF:sukka-', 'N', '-COMP:N', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:A', 'LF:socks', 'COMP:C', '-SPEC:P', '-COMP:v', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
surprised       ['LANG:EN']
surprise-       {'-COMP:T/fin', 'PHI:DET:_', 'LANG:EN', 'ASP', 'PHI:GEN:_', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'COMP:P', 'PHI:PER:_', 'PF:surprise', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'LF:surprise', 'CLASS:TR', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
talo            {'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', 'PF:talo', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:v', 'LF:house', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
tama            ['LANG:EN']
tama-           {'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', 'PF:tama', 'N', '-COMP:V', 'PHI', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-SPEC:FORCE', '-COMP:v', '-COMP:A', '-SPEC:N', 'LF:this', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'MODAL', 'PHI:DET:_', 'FIN', 'SPEC:TO/inf', 'LANG:FI', 'COMP:P', 'PHI:PER:_', 'LF:must', 'V', 'SPEC:ADV', '!COMP:A/inf', 'ARG', '-COMP:V', '-COMP:N', 'SPEC:*', '-SPEC:FORCE', '-COMP:v', 'PF:taytyy', '-SPEC:T/fin', '-ASP', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
teki            ['LANG:FI']
teke-           {'ASP:BOUNDED', 'PHI:DET:_', '-COMP:A/inf', 'ASP', 'SPEC:TO/inf', '!COMP:D', '-COMP:P', '!COMP:*', 'LF:make', 'LANG:FI', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', '-COMP:N', '-COMP:v', '-SPEC:FORCE', 'CLASS:TR', 'PF:teke', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
that            {'-SPEC:*', 'COMP:T/fin', 'LF:that', '!PROBE:FIN', 'FORCE', 'LANG:EN', '-ARG', 'FIN', 'COMP:C/fin', '!COMP:*', 'PF:that', '-VAL'}
the             {'-COMP:D', 'D', 'PF:the', '-COMP:T/fin', '!PROBE:N', 'adjoinable', '-SPEC:MA/lla', '-SPEC:INF', 'LANG:EN', '-COMP:uR', '-COMP:P', '!COMP:*', '-SPEC:V', 'PHI:DEF:DEF', '-SPEC:Neg/fin', 'COMP:N', '-SPEC:P', '-SPEC:C', 'LF:the', '-SPEC:T/fin', 'OP', '-ARG'}
to              {'PHI:DET:_', '-SPEC:INF', 'LANG:EN', '-COMP:uWH', 'PHI:GEN:_', '!COMP:*', 'COMP:D', '-SPEC:Neg/fin', '-COMP:N', '-float', '-COMP:T', '-SPEC:P', 'LF:to', 'TAIL:V', '-SPEC:C', '-SPEC:iR', '-COMP:A', '-SPEC:T/fin', '-SPEC:N', 'PHI:NUM:_', 'P', '-SPEC:C/fin', '-SPEC:*', '-COMP:T/fin', 'adjoinable', '-SPEC:iWH', '-COMP:ADV', '-SPEC:v', '-SPEC:V', 'PHI:PER:_', 'ARG', 'PF:to', '-SPEC:FORCE', '-VAL', '-SPEC:ADV', '+SEM:directional'}
to_inf          {'COMP:V', '-COMP:T/fin', 'COMP:v', 'adjoinable', '-COMP:C/fin', 'LANG:EN', '-SPEC:v', '!COMP:*', '-SPEC:V', '?ARG', 'INF', 'PF:TO/inf', '-COMP:FORCE', 'LF:TO/inf', '-SPEC:T/fin', 'TO/inf', '-VAL'}
towards         {'-SPEC:*', '-COMP:T/fin', 'adjoinable', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:INF', '-SPEC:iWH', 'LANG:EN', '-COMP:ADV', '-COMP:uWH', 'PHI:GEN:_', '-SPEC:v', '!COMP:*', '-SPEC:V', 'PHI:PER:_', 'LF:towards', 'PF:towards', 'COMP:D', '-SPEC:Neg/fin', 'ARG', '-COMP:N', '-float', '-COMP:T', '-SPEC:FORCE', '-SPEC:P', 'TAIL:V', '-SPEC:C', '-SPEC:iR', '-COMP:A', '-SPEC:T/fin', '-SPEC:N', 'PHI:NUM:_', 'P', '-VAL', '-SPEC:C/fin'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'PHI:DET:_', 'LF:nudge', 'ASP', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'LANG:FI', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'CLASS:TR', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:tonaise', '-VAL', 'SPEC:P'}
tta             {'-COMP:T/fin', 'adjoinable', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:INF', '-SPEC:iWH', '-COMP:ADV', '-COMP:uWH', '-SPEC:v', '!COMP:*', 'LANG:FI', '-SPEC:V', 'LF:without', 'PHI:PER:_', 'COMP:D', 'ARG', '-SPEC:Neg/fin', '-COMP:N', '-SPEC:FORCE', '-COMP:T', 'SPEC:*', '-SPEC:P', 'COMP:n/MA', '-SPEC:C', '-SPEC:iR', '-COMP:A', '-SPEC:T/fin', 'ADV', '-SPEC:N', 'PHI:NUM:_', 'P', '-VAL', 'PF:tta', '-SPEC:C/fin'}
tries           ['LANG:EN']
try-            {'!COMP:-ARG', 'PHI:DET:_', 'LANG:EN', 'ASP', 'PHI:GEN:_', 'SPEC:TO/inf', 'PF:try', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', 'LF:try', 'SPEC:D', '!COMP:TO/inf', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SEM:internal', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
verifiche       {'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', 'PF:verifiche', 'LANG:IT', '-SPEC:INF', '-COMP:C/fin', '-SPEC:uWH', 'LF:verification', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'-COMP:D', 'PHI:DET:_', '!COMP:P', 'ASP', 'SPEC:TO/inf', 'LANG:FI', 'COMP:P', 'PF:virtaa', '-COMP:MA/inf', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', 'SPEC:D', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'CLASS:INTR', 'PHI:NUM:_', '-SPEC:T/fin', 'LF:flow', '-VAL', 'SPEC:P'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'-SPEC:*', 'PHI:DET:_', 'LANG:EN', 'ASP', 'PHI:GEN:_', 'SPEC:TO/inf', '!COMP:*', 'COMP:P', 'PF:volu', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', '-COMP:V', 'LF:want', '-COMP:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SEM:internal', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'ASP:BOUNDED', 'PHI:DET:_', 'PF:voitta', 'LANG:EN', 'ASP', 'PHI:GEN:_', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', '-VAL', 'LF:win', 'CLASS:TR', '-SPEC:T/fin', 'PHI:NUM:_', 'SEM:achievement', 'SPEC:P'}
wants           ['LANG:EN']
want-           {'PHI:DET:_', 'COMP:TO/inf', 'LANG:EN', 'ASP', 'PHI:GEN:_', '-COMP:P', '!COMP:*', 'COMP:P', 'PHI:PER:_', '-SPEC:TO/inf', 'V', 'SPEC:ADV', 'COMP:D', 'ARG', '-COMP:V', 'LF:want', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'PF:want', 'CLASS:TR', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
what            ['LANG:EN']
what-           {'COMP:R/D', '-COMP:*', '-COMP:WH', '-SPEC:INF', 'LANG:EN', 'LF:what', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', 'PF:what', '-SPEC:C/fin', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', '-SPEC:FORCE', '-COMP:v', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
which           {'-COMP:D', 'D', '-COMP:T/fin', '!PROBE:N', 'adjoinable', 'LF:which', '-SPEC:MA/lla', '-SPEC:INF', 'LANG:EN', '-COMP:uR', '-COMP:P', '!COMP:*', '-SPEC:V', '-SPEC:Neg/fin', 'OP:WH', 'COMP:N', '-SPEC:P', '-SPEC:C', '-SPEC:T/fin', 'OP', '-ARG', 'PF:which'}
who             ['LANG:EN']
who-            {'COMP:R/D', '-COMP:*', '-COMP:WH', '-SPEC:INF', 'LANG:EN', 'LF:who', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', 'COMP:D/rel', 'COMP:R', 'PF:who', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', '-SPEC:FORCE', '-COMP:v', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
whether         {'PF:whether', 'Q', '-SPEC:*', 'COMP:T/fin', '!PROBE:FIN', 'LANG:EN', 'FORCE', 'FIN', 'COMP:C/fin', '!COMP:*', 'LF:whether', 'OP:Q', 'OP:WH', 'OP', '-ARG', '-VAL'}
yrittaa         ['LANG:FI']
yritta-         {'!COMP:-ARG', 'PHI:DET:_', 'PF:yritta', 'LANG:EN', 'ASP', 'PHI:GEN:_', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', '!COMP:A/inf', 'ARG', 'LF:try', 'SPEC:D', '-COMP:V', '-COMP:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:T/fin', 'SEM:internal', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
mina            ['LANG:EN']
mina-           {'COMP:R/D', '-COMP:*', '-COMP:WH', '-SPEC:INF', 'LANG:FI', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', 'PF:mina', '-SPEC:C/fin', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LF:I', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', '-SPEC:FORCE', '-COMP:v', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
sina            ['LANG:EN']
sina-           {'COMP:R/D', '-COMP:*', '-COMP:WH', '-SPEC:INF', 'LANG:FI', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', 'PF:sina', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', '-SPEC:FORCE', '-COMP:v', 'LF:you', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
han             ['LANG:EN']
han-            {'COMP:R/D', '-COMP:*', '-COMP:WH', '-SPEC:INF', 'LF:s/he', 'LANG:FI', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'PF:han', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', '-SPEC:FORCE', '-COMP:v', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'COMP:R/D', '-COMP:*', '-COMP:WH', '-SPEC:INF', 'LANG:FI', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'LF:we', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', 'PF:me', '-SPEC:R', 'N', '-SPEC:FORCE', '-COMP:v', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
te              ['LANG:EN']
te-             {'COMP:R/D', '-COMP:*', '-COMP:WH', '-SPEC:INF', 'LANG:FI', 'COMP:P', 'COMP:uR', 'PF:te', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', '-SPEC:FORCE', '-COMP:v', 'LF:you', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'COMP:R/D', '-COMP:*', '-COMP:WH', '-SPEC:INF', 'LANG:FI', 'PF:he', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', '-SPEC:FORCE', 'LF:they', '-COMP:v', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
se              {'-COMP:D', 'D', '-COMP:T/fin', '!PROBE:N', 'adjoinable', '-SPEC:MA/lla', '-SPEC:INF', '-COMP:uR', '-COMP:P', '!COMP:*', 'LANG:FI', '-SPEC:V', '-SPEC:Neg/fin', 'COMP:N', '-SPEC:P', '-SPEC:C', 'PF:se', '-SPEC:T/fin', 'OP', 'LF:the/that', '-ARG'}
sen             {'-COMP:D', 'D', '-COMP:T/fin', '!PROBE:N', 'adjoinable', '-SPEC:MA/lla', '-SPEC:INF', '-COMP:uR', '-COMP:P', '!COMP:*', 'LANG:FI', '-SPEC:V', 'TAIL:ASP', '-SPEC:Neg/fin', 'TAIL:*POL:NEG', 'COMP:N', '-SPEC:P', '-SPEC:C', '-ARG', '-SPEC:T/fin', 'OP', 'LF:the/that', 'TAIL:PHI', 'PF:sen'}
I               ['LANG:EN']
I-              {'COMP:R/D', '-COMP:*', '-COMP:WH', '-SPEC:INF', 'LANG:EN', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', 'PF:I', '-SPEC:C/fin', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LF:I', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', '-SPEC:FORCE', '-COMP:v', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
you             ['LANG:EN']
you-            {'COMP:R/D', '-COMP:*', '-COMP:WH', '-SPEC:INF', 'LANG:EN', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', '-SPEC:FORCE', '-COMP:v', 'PF:you', 'LF:you', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
he              ['LANG:EN']
he-             {'COMP:R/D', '-COMP:*', '-COMP:WH', '-SPEC:INF', 'LANG:EN', 'COMP:P', 'PF:he', 'LF:he', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', '-SPEC:FORCE', '-COMP:v', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
she             ['LANG:EN']
she-            {'COMP:R/D', '-COMP:*', '-COMP:WH', '-SPEC:INF', 'LANG:EN', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', 'LF:she', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'PF:she', 'N', '-SPEC:FORCE', '-COMP:v', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
we              ['LANG:EN']
we-             {'COMP:R/D', '-COMP:*', '-COMP:WH', '-SPEC:INF', 'LANG:EN', 'PF:we', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'LF:we', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', '-SPEC:FORCE', '-COMP:v', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
you_pl          ['LANG:EN']
you_pl-         {'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'PF:you_pl', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', 'LANG:EN', '-SPEC:uWH', 'LF:you_pl', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', 'PHI', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:v', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
they            ['LANG:EN']
they-           {'COMP:R/D', '-COMP:*', '-COMP:WH', '-SPEC:INF', 'LANG:EN', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'PF:they', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', '-SPEC:FORCE', 'LF:they', '-COMP:v', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
it              ['LANG:EN']
it-             {'-COMP:D', 'PF:it', 'D', '-COMP:T/fin', '!PROBE:N', 'adjoinable', '-SPEC:MA/lla', '-SPEC:INF', 'LANG:EN', '-COMP:uR', '-COMP:P', '!COMP:*', 'LF:it/that', '-SPEC:V', '-SPEC:Neg/fin', 'COMP:N', '-SPEC:P', '-SPEC:C', '-SPEC:T/fin', 'OP', '-ARG'}
io              ['LANG:EN']
io-             {'COMP:R/D', '-COMP:*', '-COMP:WH', 'LANG:IT', '-SPEC:INF', 'PF:io', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LF:I', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', '-SPEC:FORCE', '-COMP:v', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
tu              ['LANG:EN']
tu-             {'COMP:R/D', '-COMP:*', '-COMP:WH', 'LANG:IT', '-SPEC:INF', 'PF:tu', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', '-SPEC:FORCE', '-COMP:v', 'LF:you', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
lui             ['LANG:EN']
lui-            {'COMP:R/D', '-COMP:*', '-COMP:WH', 'LANG:IT', '-SPEC:INF', 'COMP:P', 'LF:he', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', 'PF:lui', '-SPEC:FORCE', '-COMP:v', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
lei             ['LANG:EN']
lei-            {'COMP:R/D', '-COMP:*', '-COMP:WH', 'LANG:IT', '-SPEC:INF', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', 'LF:she', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'PF:lei', 'N', '-SPEC:FORCE', '-COMP:v', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
noi             ['LANG:EN']
noi-            {'COMP:R/D', '-COMP:*', '-COMP:WH', 'LANG:IT', '-SPEC:INF', 'PF:noi', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'LF:we', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', '-SPEC:FORCE', '-COMP:v', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
voi             ['LANG:EN']
voi-            {'COMP:R/D', '-COMP:*', '-COMP:WH', 'LANG:IT', '-SPEC:INF', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'PF:voi', 'LF:you_pl', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', '-SPEC:FORCE', '-COMP:v', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
loro            ['LANG:EN']
loro-           {'COMP:R/D', '-COMP:*', '-COMP:WH', 'LANG:IT', '-SPEC:INF', 'PF:loro', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', '-SPEC:FORCE', 'LF:they', '-COMP:v', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
mi              ['LANG:EN']
mi-             {'COMP:R/D', '-COMP:*', '-COMP:WH', 'LANG:IT', '-SPEC:INF', 'LF:me', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', 'PF:mi(cl)', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', '-SPEC:FORCE', '-COMP:v', 'CL', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
la              ['LANG:EN']
la-             {'COMP:R/D', '-COMP:*', '-COMP:WH', 'LANG:IT', '-SPEC:INF', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'LF:her', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', '-SPEC:FORCE', '-COMP:v', 'CL', '-COMP:AUX', 'PHI_N', 'PF:la(cl)', '-SPEC:ADV'}
lo              ['LANG:EN']
lo-             {'COMP:R/D', '-COMP:*', '-COMP:WH', 'LANG:IT', '-SPEC:INF', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', 'LF:him', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'PF:lo(cl)', 'N', '-SPEC:FORCE', '-COMP:v', 'CL', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
si              ['LANG:EN']
si-             {'COMP:R/D', '-COMP:*', '-COMP:WH', 'LANG:IT', '-SPEC:INF', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-SPEC:C/fin', 'COMP:D/rel', 'COMP:R', 'LF:3sg', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', '-SPEC:FORCE', '-COMP:v', 'PF:si(cl)', 'CAL:CL', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'COMP:R/D', '-COMP:*', '-COMP:WH', 'LANG:IT', '-SPEC:INF', 'COMP:P', 'COMP:uR', '-COMP:V', '-COMP:N', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', 'LF:there', '-SPEC:N', '-SPEC:T/fin', 'PF:ci', '-SPEC:C/fin', 'COMP:D/rel', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'N', '-SPEC:FORCE', '-COMP:v', '-COMP:AUX', 'PHI_N', '-SPEC:ADV'}
[-n]            {'inflectional', 'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:FI', 'PHI', 'PHI:PER:1', 'PHI:HUM:HUM'}
[-t]            {'inflectional', 'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:FI', 'PHI', 'PHI:PER:2', 'PHI:HUM:HUM'}
[-V]            {'inflectional', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:FI', 'PHI'}
[-mme]          {'inflectional', 'PHI:DET:DEF', 'PHI:NUM:PL', 'LANG:FI', 'PHI', 'PHI:PER:1', 'PHI:HUM:HUM'}
[-mme]          {'inflectional', 'PHI:DET:DEF', 'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:1', 'PHI:HUM:HUM'}
[-tte]          {'inflectional', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:2', 'LANG:FI', 'PHI', 'PHI:HUM:HUM'}
[-vat]          {'inflectional', 'PHI:PER:3', 'PHI:NUM:PL', 'LANG:FI', 'PHI'}
[-ni]           {'inflectional', 'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:FI', 'PHI', 'PHI:PER:1', 'PHI:HUM:HUM'}
[-si]           {'inflectional', 'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:FI', 'PHI', 'PHI:PER:2', 'PHI:HUM:HUM'}
[-nsa]          {'inflectional', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:FI', 'PHI'}
[-an]           {'inflectional', 'PHI:PER:3', 'PHI:DET:DET', 'PHI:NUM:SG', 'LANG:FI', 'PHI'}
[-nne]          {'inflectional', 'PHI:DET:DEF', 'PHI:PER:2', 'LANG:FI', 'PHI:NUM:PL', 'PHI:HUM:HUM'}
[-s]            {'inflectional', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:NUM:SG', 'PHI', 'PHI:GEN:M', 'LANG:EN'}
[-0]            {'PHI:PER:2', 'inflectional', 'PHI:DET:DEF', 'PHI', 'LANG:EN', 'PHI:GEN:N', 'PHI:PER:3', 'PHI:NUM:SG', 'PHI:NUM:PL', 'PHI:PER:1'}
[-o]            {'inflectional', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI', 'LANG:IT', 'PHI:PER:1', 'PHI:HUM:HUM'}
[-i]            {'inflectional', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI', 'LANG:IT', 'PHI:PER:2', 'PHI:HUM:HUM'}
[-a]            {'inflectional', 'PHI:DET:DEF', 'PHI:PER:3', 'PHI:NUM:SG', 'PHI', 'LANG:IT'}
[-e]            {'inflectional', 'PHI:DET:DEF', 'PHI:PER:3', 'PHI:NUM:SG', 'PHI', 'LANG:IT'}
[-iamo]         {'inflectional', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI', 'LANG:IT', 'PHI:PER:1', 'PHI:HUM:HUM'}
[-te]           {'inflectional', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:2', 'PHI', 'LANG:IT', 'PHI:HUM:HUM'}
[-no]           {'inflectional', 'PHI:DET:DEF', 'PHI:PER:3', 'PHI:NUM:PL', 'PHI', 'LANG:IT'}
[-nom]          {'inflectional', 'adjoinable', 'NOM', 'TAIL:FIN,ARG,VAL', 'LANG:EN'}
[-par]          {'inflectional', 'PAR', 'TAIL:ARG,-VAL', 'adjoinable', 'LANG:FI'}
[-gen]          {'inflectional', 'GEN', '-float', 'TAIL:INF,ARG', 'LANG:EN'}
gen             {'inflectional', 'GEN', '-float', 'TAIL:INF,ARG', 'LANG:EN'}
[-n_acc]        {'TAIL:ARG,ASP:BOUNDED', 'inflectional', 'n-ACC', 'adjoinable', 'LANG:FI', 'TAIL:*POL:NEG', 'TAIL:PHI'}
[-t_acc]        {'TAIL:ARG,ASP:BOUNDED', 'inflectional', 't-ACC', 'adjoinable', 'LANG:FI', 'TAIL:*POL:NEG'}
[-0_acc]        {'TAIL:ARG,ASP:BOUNDED', 'inflectional', 'adjoinable', 'LANG:FI', 'TAIL:*POL:NEG', 'TAIL:*PHI', '0_ACC'}
asp             {'ASP:BOUNDED', 'inflectional', 'LANG:EN'}
a'              {'LANG:X', 'PF:a', 'a', 'LF:A'}
b'              {'LF:B', 'b', 'LANG:X', 'PF:b'}
b''             {'-COMP:c', 'LF:B', 'b', 'PF:b', 'LANG:EN'}
c''             {'SPEC:a', 'c', 'PF:c', 'LF:C', 'LANG:EN'}
c'              {'PF:c', 'c', 'LF:C', 'LANG:X'}
d'              {'PF:d', 'LANG:', 'd', 'LF:D'}
a''             ['LANG:EN']
x'              {'PF:x', 'x', 'LF:X', 'LANG:X'}
y'              {'PF:y', 'LF:Y', 'y', 'LANG:X'}
z'              {'PF:x', 'z', 'LF:Z', 'LANG:X'}
John'           {'PF:John', 'LF:John', 'LANG:X', "N'"}
admires'        {'PF:admires', "V'", 'LANG:X', 'LF:admires'}
admires''       {'PHI:DET:_', 'LANG:EN', 'ASP', 'PHI:GEN:_', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', 'V', 'SPEC:ADV', 'ARG', 'LF:admires', '-COMP:V', 'SPEC:D', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'PF:admires', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'SPEC:P'}
Mary'           {'LANG:X', 'LF:mary', 'PF:Mary', "N'"}
T/fin           {'SPEC:C/fin', 'COMP:V', '-COMP:T/fin', 'COMP:v', 'LF:T', 'PHI:DET:_', 'SPEC:FORCE', '!PROBE:V', 'LANG:EN', 'PHI:GEN:_', 'FIN', 'SPEC:TO/inf', '-SPEC:v', '!COMP:*', 'T/fin', '-SPEC:V', 'PHI:PER:_', '-SPEC:TO/inf', 'ARG', '-COMP:INF', 'SPEC:D', 'SPEC:*', 'COMP:T/prt', '-SPEC:C', '-SPEC:Neg', 'VAL', 'T', '-SPEC:T/fin', '-SPEC:N', '!SPEC:*', 'PHI:NUM:_', 'PF:T'}
v               {'COMP:V', 'ARG', 'v', 'SPEC:D', 'PHI:DET:_', 'PF:v', '!PROBE:V', 'LANG:EN', 'ASP', 'PHI:GEN:_', 'LF:v', '-SPEC:N', '!COMP:*', 'PHI:NUM:_', '-VAL', 'PHI:PER:_'}
C/fin           {'C/fin', 'PF:C', 'COMP:T/fin', '!PROBE:FIN', '-COMP:C/fin', 'LANG:EN', 'FIN', '!COMP:*', 'COMP:Neg/fin', 'SPEC:*', 'LF:C/fin', 'C', 'VAL', '-COMP:T/prt', '-SPEC:T/fin', '-SPEC:N', '-ARG', '-SPEC:C/fin'}
T               {'COMP:V', 'COMP:v', 'LF:T', 'PHI:DET:_', '!PROBE:V', 'LANG:EN', 'PHI:GEN:_', 'FIN', '!COMP:*', '-SPEC:V', 'PHI:PER:_', 'ARG', 'SPEC:D', '-SPEC:FORCE', 'SPEC:*', 'COMP:T/prt', 'VAL', 'T', '-SPEC:N', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:T', '-COMP:NEG'}
T/prt           {'COMP:V', 'COMP:v', 'PHI:DET:_', 'PF:T/prt', '!PROBE:V', 'LANG:EN', 'PHI:GEN:_', 'FIN', '!COMP:*', '-SPEC:V', '-COMP:NEG', 'PHI:PER:_', 'ARG', 'COMP:D', 'SPEC:D', 'SPEC:*', '-SPEC:FORCE', 'COMP:T/prt', 'LF:T/prt', 'VAL', 'T', '-SPEC:N', '-SPEC:T/fin', 'PHI:NUM:_', 'T/prt', '-SPEC:C/fin'}
a0              {'-SPEC:A', '-SPEC:D', '-adjoinable', 'LF:A', 'COMP:0', 'A', 'PF:A', 'LANG:EN', 'TAIL:D'}
n               {'COMP:R/D', '-COMP:WH', 'PHI:DET:_', 'n', '-SPEC:INF', 'LANG:EN', 'PHI:GEN:_', '!COMP:*', 'COMP:P', 'LF:n', '!SPEC:D', 'COMP:uR', '-COMP:V', '-COMP:N', 'INF', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '!SPEC:*', 'PHI:NUM:_', '-SPEC:C/fin', 'COMP:V', 'PF:n', 'COMP:D/rel', 'COMP:R', 'COMP:v', 'COMP:0', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'PHI:PER:_', 'ARG', 'N', '-SPEC:FORCE', '-COMP:v', 'SPEC:*', 'VAL', '-COMP:AUX', '-SPEC:ADV'}
impass          {'COMP:V', 'ARG', 'v', 'SPEC:D', 'PHI:DET:_', 'PHI:PER:_', '!PROBE:V', 'LANG:EN', 'ASP', '-VAL', 'PHI:GEN:_', '-SPEC:N', '!COMP:*', 'PHI:NUM:_', 'PF:impass', 'LF:impass'}
cau             {'COMP:V', 'ARG', 'v', 'SPEC:D', 'LF:v/Cause', 'PHI:DET:_', '!PROBE:V', 'LANG:EN', 'ASP', 'PF:Cau', 'PHI:GEN:_', '-SPEC:N', '!COMP:*', 'PHI:NUM:_', '-VAL', 'PHI:PER:_'}
INF             {'LF:INF', 'COMP:V', '-COMP:T/fin', 'PF:INF', 'COMP:v', 'INF', '-COMP:C/fin', 'LANG:EN', '-COMP:FORCE', '-SPEC:T/fin', '!COMP:*', '-SPEC:V'}
prtcpl          {'COMP:V', '-COMP:T/fin', 'COMP:v', 'PHI:DET:_', 'PF:T/prt', '!PROBE:V', 'LANG:EN', '-COMP:C/fin', 'PHI:GEN:_', 'FIN', '!COMP:*', '-SPEC:V', '-COMP:NEG', 'PHI:PER:_', 'COMP:D', 'ARG', 'SPEC:D', 'SPEC:*', 'INF', '-SPEC:FORCE', 'COMP:T/prt', '-COMP:FORCE', 'LF:T/prt', 'VAL', 'T', '-SPEC:N', '-SPEC:T/fin', 'PHI:NUM:_', 'T/prt', '-SPEC:C/fin'}
TO/inf          {'COMP:V', '-COMP:T/fin', 'COMP:v', 'adjoinable', '-COMP:C/fin', 'LANG:EN', '-SPEC:v', '!COMP:*', '-SPEC:V', '?ARG', 'INF', 'PF:TO/inf', '-COMP:FORCE', 'LF:TO/inf', '-SPEC:T/fin', 'TO/inf', '!COMP:V', '-VAL'}
A/inf           {'COMP:V', '-COMP:T/fin', 'COMP:v', '-COMP:C/fin', 'LANG:EN', '!COMP:*', '-SPEC:V', 'LF:A/inf', '?ARG', '-SPEC:Neg/fin', 'A/inf', '?VAL', 'SPEC:*', 'INF', '-COMP:FORCE', '-SPEC:T/fin', 'PF:A/inf'}
ARE/inf         {'COMP:V', '-COMP:T/fin', 'COMP:v', '-adjoinable', 'LF:ARE/inf', '-COMP:C/fin', 'LANG:EN', '!COMP:*', 'PF:are', '-SPEC:V', '?ARG', 'SPEC:*', 'INF', '-COMP:FORCE', 'VAL', '-SPEC:T/fin', 'ARE/inf'}
ESSA/inf        {'COMP:V', '-COMP:T/fin', 'PF:essa', 'COMP:v', 'adjoinable', '-COMP:C/fin', 'LANG:EN', 'TAIL:T', '!COMP:*', 'ESSA/inf', '-SPEC:V', '?ARG', '-SPEC:Neg/fin', '?VAL', 'SPEC:*', 'INF', '-SPEC:FORCE', '-COMP:FORCE', 'LF:while', '-SPEC:T/fin', 'ADV', '-SPEC:N'}
TUA/inf         {'COMP:V', '-COMP:T/fin', 'COMP:v', 'adjoinable', 'PHI:DET:_', '-COMP:C/fin', 'LANG:EN', 'TUA/inf', 'PHI:GEN:_', 'TAIL:T', 'LF:after', '!COMP:*', '-SPEC:V', 'PHI:PER:_', 'PF:tua', 'ARG', '-SPEC:Neg/fin', '-SPEC:FORCE', 'INF', 'SPEC:*', '-COMP:FORCE', 'VAL', '!SPEC:*', 'ADV', '-SPEC:T/fin', '-SPEC:N', 'PHI:NUM:_'}
VA/inf          {'COMP:V', '-COMP:T/fin', 'COMP:v', 'PHI:DET:_', '-COMP:C/fin', 'LANG:EN', 'PHI:GEN:_', 'VA/inf', '!COMP:*', '-SPEC:V', 'PHI:PER:_', 'ARG', 'SPEC:*', 'INF', '-COMP:FORCE', 'VAL', '-SPEC:N', 'LF:VA', '!SPEC:*', '-SPEC:T/fin', 'PF:vAn', 'PHI:NUM:_'}
MA/ssa          {'COMP:V', '-SPEC:*', 'COMP:v', 'adjoinable', 'PHI:DET:_', 'LANG:EN', 'MA/ssa', 'PHI:GEN:_', 'LF:in_doing', 'MA/inf', 'PHI:PER:_', 'ARG', '-SPEC:Neg/fin', '-SPEC:FORCE', 'TAIL:V', '-SPEC:N', 'ADV', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:massa', '-VAL'}
MA/tta          {'ARG', '-SPEC:Neg/fin', 'PF:matta', 'adjoinable', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:DET:_', 'TAIL:T', 'LANG:EN', 'PHI:GEN:_', '-SPEC:N', 'ADV', '-SPEC:T/fin', 'MA/inf', 'PHI:NUM:_', '-VAL', 'LF:without_doing'}
MA/lla          {'PHI:DET:_', 'LANG:EN', 'PHI:GEN:_', 'LF:by_doing', 'PF:malla', 'MA/inf', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:T/fin', 'ADV', 'PHI:NUM:_', 'COMP:V', 'COMP:v', 'adjoinable', 'TAIL:T', 'PHI:PER:_', 'ARG', '-SPEC:FORCE', '-VAL'}
MA/inf          {'PHI:DET:_', 'LANG:EN', 'PHI:GEN:_', 'MA/inf', '-SPEC:Neg/fin', 'PF:maan', 'TAIL:V', '-SPEC:N', 'ADV', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:V', 'COMP:v', 'adjoinable', 'PHI:PER:_', 'ARG', '-SPEC:FORCE', 'LF:to_do', '-VAL'}
E/inf           {'-SPEC:Neg/fin', 'PF:en', 'adjoinable', 'SPEC:*', '-SPEC:FORCE', 'TAIL:T', '-SPEC:N', 'ADV', '-SPEC:T/fin', 'LANG:FI', '-ARG', '-VAL', 'LF:by'}
BE-             {'-COMP:T/fin', 'LANG:EN', 'ASP', 'SPEC:TO/inf', '!COMP:*', 'COMP:P', 'V', 'SPEC:ADV', '-COMP:V', 'SPEC:D', '-COMP:N', '-SPEC:FORCE', '-COMP:v', 'COMP:T/prt', 'LF:BE', 'COPULA', '-SPEC:T/fin', 'PF:BE', '-ARG', '-VAL', 'SPEC:P'}
D               {'-COMP:D', 'D', '-COMP:T/fin', 'OP', '!PROBE:N', 'adjoinable', '-SPEC:MA/lla', '-SPEC:INF', 'LANG:EN', '-COMP:uR', '-COMP:P', '!COMP:*', '-SPEC:V', '-SPEC:Neg/fin', 'COMP:N', '-SPEC:P', '-SPEC:C', 'PF:D', '-SPEC:T/fin', 'LF:D', '-ARG'}
D/rel           {'-COMP:D', 'D', 'PF:D/rel', '-COMP:T/fin', 'adjoinable', '!PROBE:N', 'OP:_', '-SPEC:INF', '-SPEC:MA/lla', '-COMP:C/fin', 'LANG:EN', '-COMP:uR', '!COMP:*', '-SPEC:V', 'inflectional', '-SPEC:Neg/fin', 'OP:REL', 'LF:D/rel', 'COMP:N', '-SPEC:P', '-SPEC:C', '-SPEC:T/fin', 'OP', 'D/rel', '-ARG'}
P               {'-SPEC:*', '-COMP:T/fin', 'adjoinable', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:INF', '-SPEC:iWH', 'LANG:EN', 'LF:P', '-COMP:ADV', '-COMP:uWH', 'PHI:GEN:_', '-SPEC:v', '!COMP:*', '-SPEC:V', 'PHI:PER:_', 'COMP:D', 'ARG', '-SPEC:Neg/fin', '-COMP:N', '-float', '-COMP:T', '-SPEC:FORCE', '-SPEC:P', '-SPEC:C', '-SPEC:iR', 'PF:P', '-COMP:A', '-SPEC:T/fin', '-SPEC:N', 'PHI:NUM:_', 'P', '-VAL', '-SPEC:C/fin'}
pro             ['LANG:EN']
pro-            {'COMP:R/D', 'COMP:D/rel', '-COMP:WH', 'COMP:R', 'LF:pro', '-SPEC:INF', '-COMP:C/fin', 'LANG:EN', '-SPEC:uWH', 'COMP:P', '-SPEC:V', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-COMP:V', 'N', '-COMP:N', 'PHI', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:A', 'COMP:C', '-SPEC:P', '-COMP:v', 'PF:(pro)', '-COMP:A', '-SPEC:N', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:ADV', '-SPEC:C/fin'}
cl              {'RIGHT:PRG', 'inflectional', 'LEFT:T/fin', 'CL', 'LEFT:D,CL', 'RIGHT:ARE/inf', 'LANG:EN'}
inc             {'LANG:EN', 'inflectional', 'INCORPORATED'}
sg              {'LANG:EN', 'inflectional', 'PHI:NUM:SG'}
pl              {'inflectional', 'PHI:NUM:PL', 'LANG:EN'}
1p              {'inflectional', 'PHI:PER:1', 'LANG:EN'}
2p              {'LANG:EN', 'inflectional', 'PHI:PER:2'}
3p              {'inflectional', 'PHI:PER:3', 'LANG:EN'}
def             {'inflectional', 'PHI:DET:DEF', 'LANG:EN'}
indef           {'inflectional', 'PHI:DET:INDEF', 'LANG:EN'}
hum             {'inflectional', 'PHI:HUM:HUM', 'LANG:EN'}
nonhum          {'inflectional', 'PHI:HUM:NONHUM', 'LANG:EN'}
m               {'LANG:EN', 'inflectional', 'PHI:GEN:M'}
f               {'PHI:GEN:F', 'inflectional', 'LANG:EN'}
nom             {'LANG:EN', 'inflectional', 'NOM', 'TAIL:FIN,!COMP:*,VAL'}
acc             {'LANG:EN', 'inflectional', 'TAIL:v', 'ACC'}
dat             {'DAT', 'inflectional', 'TAIL:v', 'LANG:EN'}
uC/op           {'inflectional', 'uC/op', 'LANG:EN'}
wh              {'LANG:EN', 'inflectional', 'OP:_', 'OP:WH'}
wh_             {'inflectional', 'OP', 'FORCE:OP:WH', 'OP:_', 'LANG:EN'}
top             {'LANG:EN', 'inflectional', 'OP:TOP'}
foc             {'LANG:EN', 'inflectional', 'OP:FOC'}
C/op            {'inflectional', 'OP:C/OP', 'LANG:EN'}
Q               {'OP:Q', 'inflectional', 'OP:WH', 'OP', 'LANG:EN'}
