ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'-COMP:N', '-ARG', '-SPEC:C', '-SPEC:N', 'COMP:ARE/inf', '-SPEC:T/fin', '!COMP:*', '-COMP:A', '-SPEC:v', 'adjoinable', '-SPEC:P', '-SPEC:FORCE', 'COMP:D', '-SPEC:INF', '-SPEC:C/fin', 'TAIL:V', '-SPEC:ADV', '-SPEC:*', '-COMP:T', 'P', '-SPEC:Neg/fin', '-COMP:uWH', '-COMP:T/fin', '-VAL', '-COMP:ADV', 'LANG:IT', 'LF:to', 'PF:a', '-SPEC:iR', '-SPEC:V', '-SPEC:iWH'}
a_D             {'-ARG', '-SPEC:MA/lla', '-SPEC:C', '-SPEC:T/fin', '!COMP:*', '-COMP:uR', '-COMP:D', 'LF:D', 'LANG:EN', 'adjoinable', '-SPEC:P', '-SPEC:INF', 'PF:D', '-SPEC:Neg/fin', '!PROBE:N', 'COMP:N', '-COMP:T/fin', 'D', '-SPEC:V', 'OP', '-COMP:P'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-COMP:N', '-COMP:v', 'SPEC:P', '-SPEC:T/fin', 'CLASS:TR', 'SPEC:TO/inf', '!COMP:*', 'PHI:DET:_', 'PHI:GEN:_', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', 'ARG', 'PHI:PER:_', '-SPEC:Neg', 'ASP', 'PHI:NUM:_', 'LF:admire', '-COMP:T/fin', 'PF:admire', '-VAL', 'COMP:P', 'V', '-COMP:Neg', '-COMP:P'}
admire*         ['LANG:EN']
T/fin*          {'NO_NUMBER', '-VAL', 'NO_DET', 'LF:T', "PF:T/fin'", 'LANG:EN', '!SPEC:*', 'CAT:T/fin'}
v*              {'NO_NUMBER', 'CAT:v', 'PF:v', 'LANG:EN', 'LF:v', '-VAL', 'NO_DET'}
admire**        ['LANG:EN']
T/fin**         {'NO_NUMBER', 'NO_PERSON', '-VAL', 'NO_DET', 'PHI:PER:3', 'LF:T', "PF:T/fin''", 'LANG:EN', '!SPEC:*', 'CAT:T/fin'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:DET:_', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'COMP:D', 'ARG', 'PHI:PER:_', 'ASP', 'PF:adora', 'LF:admire', 'PHI:NUM:_', '-VAL', 'LANG:IT', 'COMP:P', 'V', '-COMP:v'}
antaa           ['LANG:FI']
anta-           {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', '!COMP:*', 'PHI:DET:_', 'LANG:FI', '-COMP:V', '-SPEC:FORCE', 'CLASS:DITR', 'SPEC:ADV', 'COMP:D', 'ARG', 'PHI:PER:_', 'LF:give', 'ASP', 'PHI:NUM:_', '+SEM:directional', '-VAL', 'ASP:BOUNDED', 'COMP:P', '-COMP:FIN', 'V', '-COMP:v', 'SPEC:D', 'PF:antaa'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'-COMP:N', 'SPEC:P', 'LF:ask', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:DET:_', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', 'ARG', 'PF:ask', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-VAL', 'COMP:P', 'SEM:internal', 'V', '-COMP:v', 'SPEC:D'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', 'LANG:FI', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', '-COMP:VA/inf', '-COMP:WH', 'COMP:P', 'LF:key', 'PF:avain', '-SPEC:uWH', 'COMP:C', '-SPEC:V', '-SEM:directional', '-COMP:v', 'N'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'LF:car', '-COMP:A', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', 'LANG:FI', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', '-COMP:VA/inf', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-SEM:directional', '-COMP:v', 'PF:auto', 'N'}
bank            {'LF:bank_inst', '-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'LANG:EN', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', 'FREQ:1', '-SPEC:ADV', '-COMP:VA/inf', 'PF:bank1', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-COMP:v', 'N'}
bank            {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'FREQ:2', 'LF:bank_river', 'LANG:EN', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', '-COMP:VA/inf', 'PF:bank2', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-COMP:v', 'N'}
barn            {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'LANG:EN', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', '-COMP:VA/inf', 'PF:barn', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', 'LF:barn', '-COMP:v', 'N'}
city            {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'LANG:EN', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'LF:city', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', '-COMP:VA/inf', 'PF:city', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-COMP:v', 'N'}
che             ['LANG:IT']
che-            {'-COMP:N', 'PF:che', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:VA/inf', 'LF:who', 'LANG:IT', 'COMP:P', '-SPEC:uWH', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', '-SPEC:ADV', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
chiamato        ['LANG:IT']
chiamata-       {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', 'LF:called', 'PHI:DET:_', 'PF:chiamato', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-VAL', 'LANG:IT', 'COMP:P', 'V', '-COMP:v'}
claims          ['LANG:EN']
claim-          {'-COMP:N', 'PF:claim', 'LF:claim', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:DET:_', '-COMP:D', 'COMP:T/fin', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-VAL', 'COMP:P', 'V', '-COMP:v', 'SPEC:D'}
danno           {'-COMP:N', '-COMP:C/fin', 'LF:damage', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', 'PF:danno', '-SPEC:R', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', '-COMP:VA/inf', '-COMP:WH', 'LANG:IT', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-COMP:v', 'N'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'COMP:ARE/inf', 'PHI:GEN:_', 'PHI:DET:_', '-COMP:V', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'LF:detest', 'ASP', 'PHI:NUM:_', 'PF:detest', '-VAL', 'LANG:IT', 'COMP:P', 'SEM:internal', 'V', '-COMP:v'}
devono          ['LANG:EN']
deva-           {'-COMP:N', 'LF:must', '-ASP', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'COMP:ARE/inf', 'PHI:GEN:_', 'PHI:DET:_', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'PHI:NUM:_', 'PF:deva', '-VAL', 'LANG:IT', 'COMP:P', 'SEM:internal', 'V', '-COMP:v', 'SPEC:D'}
di              {'-COMP:N', 'SPEC:*', '-SPEC:C', '-SPEC:N', '-SPEC:T/fin', '!COMP:*', '-COMP:A', 'PHI:DET:_', 'LANG:FI', '-SPEC:v', '-SPEC:P', '-SPEC:FORCE', 'COMP:D', '-SPEC:INF', 'LF:of', 'ARG', '-SPEC:C/fin', 'PHI:PER:_', '-SPEC:ADV', 'PHI:NUM:_', 'PF:di', '-COMP:T', 'P', '-SPEC:Neg/fin', '-COMP:uWH', '-COMP:T/fin', '-VAL', '-COMP:ADV', '-adjoinable', '-SPEC:iR', '-SPEC:V', '-SPEC:iWH'}
does            {'-SPEC:C', '-SPEC:T/fin', 'SPEC:TO/inf', '-SPEC:N', 'VAL', '!COMP:*', 'PHI:DET:_', '-SPEC:v', 'SPEC:C/fin', 'T/fin', 'LANG:EN', 'ARG', 'PF:does', '!PROBE:V', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:TO/inf', 'LF:does', 'SPEC:D', 'PHI:NUM:SG', 'SPEC:*', 'PHI:GEN:M', 'COMP:T/prt', 'PHI:GEN:_', 'COMP:V', '!SPEC:*', 'T', 'PHI:PER:_', '-SPEC:Neg', 'SPEC:FORCE', '-COMP:INF', 'PHI:GEN:F', 'COMP:Neg', 'COMP:v', '-SPEC:V', 'PHI:PER:3', 'FIN'}
does_C          ['LANG:EN']
does-           {'-SPEC:C', '-SPEC:T/fin', 'SPEC:TO/inf', '-SPEC:N', 'VAL', '!COMP:*', 'PHI:DET:_', '-SPEC:v', 'SPEC:C/fin', 'T/fin', 'LANG:EN', 'ARG', 'PF:does', '!PROBE:V', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:TO/inf', 'LF:does', 'SPEC:D', 'PHI:NUM:SG', 'SPEC:*', 'PHI:GEN:M', 'COMP:T/prt', 'PHI:GEN:_', 'COMP:V', '!SPEC:*', 'T', 'PHI:PER:_', '-SPEC:Neg', 'SPEC:FORCE', '-COMP:INF', 'PHI:GEN:F', 'COMP:Neg', 'COMP:v', '-SPEC:V', 'PHI:PER:3', 'FIN'}
dorme           ['LANG:IT']
dorme-          {'-COMP:N', '-COMP:MA/inf', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:DET:_', 'PF:dorme', '-COMP:D', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', '!SPEC:D', 'ASP', 'CLASS:INTR', 'PHI:NUM:_', 'LF:sleep', '-VAL', 'COMP:P', 'V', '-COMP:v', 'SPEC:D'}
disappeared     ['LANG:EN']
disappear-      {'-COMP:N', '-COMP:MA/inf', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:DET:_', '-COMP:D', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'ASP', 'CLASS:INTR', 'PHI:NUM:_', '-VAL', 'LF:disappear', 'COMP:P', 'V', 'PF:disappear', '-COMP:v', 'SPEC:D'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'2SPEC', '0', 'PF:easy', 'LANG:EN', 'LF:easy', 'SPEC:D'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'SPEC:*', 'LF:neg', 'COMP:T/prt', '-SPEC:T/fin', 'VAL', '!COMP:*', 'PHI:DET:_', 'LANG:FI', 'NEG', '%SPEC:INF', 'PF:ei', '!SPEC:*', 'ARG', 'PHI:PER:_', 'PHI:NUM:_', 'POL:NEG', '!COMP:T', 'SEM:internal', 'Neg/fin', '-SPEC:T', 'FIN'}
e-              {'SPEC:*', 'LF:neg', 'COMP:T/prt', '-SPEC:T/fin', 'VAL', '!COMP:*', 'PHI:DET:_', 'LANG:FI', 'NEG', '%SPEC:INF', 'PF:ei', '!SPEC:*', 'ARG', 'PHI:PER:_', 'PHI:NUM:_', 'POL:NEG', '!COMP:T', 'SEM:internal', 'Neg/fin', '-SPEC:T', 'FIN'}
elaa            ['LANG:FI']
ela-            {'-COMP:N', '-COMP:MA/inf', 'SPEC:P', 'PF:elaa', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:D', 'LANG:FI', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'ASP', 'CLASS:INTR', 'PHI:NUM:_', '-VAL', 'COMP:P', 'V', 'LF:live', '-COMP:v', 'SPEC:D'}
etsii           ['LANG:FI']
etsi-           {'-COMP:N', 'SPEC:P', '!COMP:D', '-SPEC:T/fin', 'CLASS:TR', 'SPEC:TO/inf', '!COMP:*', 'PHI:DET:_', 'LANG:FI', '-COMP:V', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', 'PF:etsi', 'ARG', 'PHI:PER:_', 'LF:search', 'ASP', 'PHI:NUM:_', '-VAL', 'COMP:P', 'V', '-COMP:v', '-COMP:P'}
etta            {'-SPEC:*', 'PF:etta', '-SPEC:D', '-ARG', '-VAL', 'LF:that', '!COMP:*', '!PROBE:FIN', 'LANG:FI', 'COMP:T/fin', 'FORCE', 'COMP:C/fin', 'FIN'}
fell            ['LANG:EN']
fell-           {'-COMP:N', 'PF:fell', '-COMP:MA/inf', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:DET:_', '-COMP:D', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'LF:fell', 'ASP', 'CLASS:INTR', 'PHI:NUM:_', '-VAL', 'COMP:P', 'V', '-COMP:v', 'SPEC:D'}
flow'           {'-COMP:N', 'SPEC:P', 'LF:flow', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:DET:_', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-VAL', 'COMP:P', 'PF:flow', 'V', '-COMP:v', 'SPEC:D'}
from            {'-COMP:N', '-float', '-SPEC:C', '-SPEC:N', '-SPEC:T/fin', 'PHI:GEN:_', '!COMP:*', '-COMP:A', 'PHI:DET:_', '-SPEC:v', 'LF:from', 'LANG:EN', '-SPEC:P', '-SPEC:FORCE', 'TAIL:V,+SEM:directional', 'COMP:D', 'ARG', 'adjoinable', '-SPEC:INF', '-SPEC:C/fin', 'PHI:PER:_', '-SPEC:ADV', '-SPEC:*', 'PHI:NUM:_', '-COMP:T', 'P', '-SPEC:Neg/fin', '-COMP:uWH', '-COMP:T/fin', '-VAL', '-COMP:ADV', '-SPEC:iR', '-SPEC:V', 'PF:from', '-SPEC:iWH'}
gave            ['LANG:EN']
give-           {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', '!COMP:*', 'PHI:DET:_', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'CLASS:DITR', 'SPEC:ADV', 'COMP:D', 'ARG', 'PHI:PER:_', 'LF:give', 'ASP', 'PHI:NUM:_', 'PF:give', '+SEM:directional', '-VAL', 'COMP:P', '-COMP:FIN', 'V', '-COMP:v', 'SPEC:D'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-COMP:N', '-COMP:C/fin', 'LF:Giuseppe', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', '-COMP:VA/inf', '-COMP:WH', 'LANG:IT', 'COMP:P', 'COMP:C', '-SPEC:uWH', 'PF:Giuseppe', '-SPEC:V', '-SEM:directional', '-COMP:v', 'N'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'CLASS:TR', 'SPEC:TO/inf', 'LF:want', '!COMP:*', 'PHI:DET:_', 'LANG:FI', '-COMP:V', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', 'PF:haluaa', 'ARG', 'PHI:PER:_', '-SPEC:*', 'ASP', 'PHI:NUM:_', 'COMP:A/inf', '-VAL', 'ASP:BOUNDED', 'COMP:P', 'SEM:internal', 'V', '-COMP:v', '-COMP:P'}
hairitsee       ['LANG:FI']
hairitse-       {'-COMP:N', 'SPEC:P', 'LF:disturb', '!COMP:D', '-SPEC:T/fin', 'CLASS:TR', 'SPEC:TO/inf', '!COMP:*', 'PHI:DET:_', 'LANG:FI', 'PF:hairitsee', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'COMP:D', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-VAL', 'COMP:P', '-COMP:FIN', 'V', '-COMP:v', '-COMP:P', 'SPEC:D'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'-COMP:N', '-COMP:v', 'SPEC:*', 'PF:ha', '-ASP', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:DET:_', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'PHI:NUM:_', 'LF:have', '-VAL', 'LANG:IT', 'COMP:P', 'SEM:internal', 'V', 'COMP:T', 'SPEC:D'}
horse           {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'LF:horse', 'LANG:EN', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', 'PF:horse', '-SPEC:ADV', '-COMP:VA/inf', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-COMP:v', 'N'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'-COMP:N', '-COMP:MA/inf', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PF:havia', 'PHI:DET:_', '-COMP:D', 'LANG:FI', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'ASP', 'CLASS:INTR', 'PHI:NUM:_', '-VAL', 'LF:disappear', 'COMP:P', 'V', '-COMP:v', 'SPEC:D'}
Helsingissa     ['LANG:FI']
Helsinki        ['LANG:FI']
Helsinki-       {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', 'LANG:FI', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', 'LF:Helsinki', '-COMP:VA/inf', '-COMP:WH', 'PF:Helsinki', 'COMP:P', '-SPEC:uWH', 'COMP:C', '-SPEC:V', '-COMP:v', 'N'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'-COMP:N', 'SPEC:P', '!COMP:D', '-SPEC:T/fin', 'CLASS:TR', 'SPEC:TO/inf', '!COMP:*', 'PHI:DET:_', 'LANG:FI', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'COMP:D', 'ARG', 'PHI:PER:_', 'PF:ihaile-', 'ASP', 'PHI:NUM:_', 'LF:admire', '-VAL', 'COMP:P', '-COMP:FIN', 'V', '-COMP:v', '-COMP:P'}
il              {'-ARG', '-SPEC:MA/lla', '-SPEC:C', '-SPEC:T/fin', '!COMP:*', '-COMP:uR', '-COMP:D', 'adjoinable', '-SPEC:P', 'PF:il', '-SPEC:INF', '-SPEC:Neg/fin', '!PROBE:N', 'COMP:N', '-COMP:T/fin', 'D', 'LANG:IT', 'LF:the', '-SPEC:V', 'OP', '-COMP:P'}
i               {'-ARG', '-SPEC:MA/lla', '-SPEC:C', '-SPEC:T/fin', '!COMP:*', '-COMP:uR', '-COMP:D', 'adjoinable', '-SPEC:P', 'PF:il', '-SPEC:INF', '-SPEC:Neg/fin', '!PROBE:N', 'COMP:N', '-COMP:T/fin', 'D', 'LANG:IT', 'LF:the', '-SPEC:V', 'OP', '-COMP:P'}
in              {'LF:in', '-COMP:N', '-SPEC:C', '-SPEC:N', '-SPEC:T/fin', 'PHI:GEN:_', '!COMP:*', 'PF:in', '-COMP:A', 'PHI:DET:_', '-SPEC:v', 'adjoinable', '-SPEC:P', '-SPEC:FORCE', 'COMP:D', '-SPEC:INF', '-SPEC:C/fin', 'ARG', 'PHI:PER:_', '-SPEC:ADV', 'PHI:NUM:_', '-COMP:T', 'P', '-SPEC:Neg/fin', '-COMP:uWH', '-COMP:T/fin', '-VAL', '-COMP:ADV', 'LANG:IT', '-SPEC:iR', '-SPEC:V', '-SPEC:iWH'}
infermieri      {'-COMP:N', 'LF:nurses', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', 'PF:infermieri', '-SPEC:INF', '-SPEC:ADV', '-COMP:VA/inf', '-COMP:WH', 'LANG:IT', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-COMP:v', 'N'}
is              ['LANG:EN']
be-             {'-COMP:N', '-COMP:v', 'SPEC:P', '-ARG', '-SPEC:T/fin', 'SPEC:TO/inf', '!COMP:*', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ASP', '-COMP:TO/inf', '-VAL', 'COMP:P', 'V', 'COPULA', 'LF:be', 'SPEC:D', 'PF:be'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'-COMP:N', '-COMP:MA/inf', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:D', 'LANG:FI', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'ASP', 'CLASS:INTR', 'PHI:NUM:_', '-VAL', 'COMP:P', 'PF:istuu', 'V', 'LF:sit', '-COMP:v', 'SPEC:D'}
John            ['LANG:EN']
John-           {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', 'LANG:EN', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:VA/inf', '-adjoinable', 'COMP:P', '-SPEC:uWH', 'PF:John', '-SEM:directional', 'N', 'LF:John', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', '-COMP:WH', 'COMP:C', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', 'LANG:FI', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:VA/inf', 'LF:who', 'COMP:P', '-SPEC:uWH', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', '-SPEC:ADV', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', 'PF:joka', '-COMP:v', 'COMP:R/D'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-COMP:N', '-COMP:v', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', 'LANG:FI', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', '-COMP:VA/inf', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', 'PF:Jukka', '-SEM:directional', 'N', 'LF:Jukka'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'-COMP:N', 'PF:juokse-', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'LANG:FI', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-VAL', 'COMP:P', 'V', '-COMP:v', 'LF:run'}
kaksi           {'PHI:NUM:_', 'PHI:NUM:SG', 'LF:two', 'COMP:n', 'SPEC:*', 'TAIL:ARG,VAL,FIN', 'COMP:N', '-VAL', 'PHI:DET:_', 'PF:kaksi', 'PHI:PER:_', 'LANG:FI', 'ARG', 'NUM'}
kaksi           {'LF:two', 'COMP:n', 'SPEC:*', 'TAIL:ARG,ASP:BOUNDED', 'COMP:N', 'PF:kaksi', 'LANG:EN', 'TAIL:*POL:NEG', 'NUM'}
kaksi_1         {'PHI:NUM:_', 'PHI:NUM:SG', 'LF:two', 'COMP:n', 'SPEC:*', 'TAIL:ARG,VAL,FIN', 'COMP:N', '-VAL', 'PHI:DET:_', 'PF:kaksi', 'PHI:PER:_', 'LANG:FI', 'ARG', 'NUM'}
kaksi_2         {'LF:two', 'COMP:n', 'SPEC:*', 'TAIL:ARG,ASP:BOUNDED', 'COMP:N', 'PF:kaksi', 'LANG:EN', 'TAIL:*POL:NEG', 'NUM'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'LANG:FI', 'LF:two', 'COMP:n', 'SPEC:*', 'COMP:N', 'PF:kaksi', 'NUM'}
kaupunkia       ['LANG:EN']
kaupunki        {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', 'LANG:FI', '-COMP:AUX', 'PF:kaupunki', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'LF:city', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', '-COMP:VA/inf', '-COMP:WH', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-COMP:v', '-COMP:P', 'N'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', '!COMP:A/inf', 'LANG:FI', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'PF:kaske', 'ASP', 'PHI:NUM:_', 'LF:order', '-VAL', 'COMP:P', 'V', 'SEM:external', '-COMP:v'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', 'LANG:FI', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', 'PF:kello', '-COMP:VA/inf', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', 'LF:watch', '-SPEC:V', '-COMP:v', 'N'}
kello0-         {'2SPEC', 'LANG:FI', '0', 'PF:kello', 'SPEC:D', 'LF:watch'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'LANG:EN', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', '-COMP:VA/inf', '-COMP:WH', 'COMP:P', 'PF:key', 'LF:key', '-SPEC:uWH', 'COMP:C', '-SPEC:V', '-COMP:v', 'N'}
kirja           ['LANG:FI']
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', 'LANG:FI', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', 'LF:book', '-COMP:VA/inf', 'PF:kirja', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-SEM:directional', '-COMP:v', 'N'}
knows           ['LANG:EN']
know-           {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'CLASS:TR', 'SPEC:TO/inf', '!COMP:*', 'PHI:DET:_', 'PHI:GEN:_', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'COMP:D', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'LF:know', '-VAL', 'COMP:P', 'V', 'PF:know', '-COMP:v', '-COMP:P'}
kohti           {'-COMP:N', 'SPEC:*', '-SPEC:C', '-SPEC:N', '-SPEC:T/fin', 'LF:towards', '!COMP:*', '-COMP:A', 'PHI:DET:_', 'LANG:FI', '-SPEC:v', 'PF:kohti', '-SPEC:P', '-SPEC:FORCE', 'COMP:D', 'adjoinable', '-SPEC:INF', 'ARG', '-SPEC:C/fin', 'PHI:PER:_', 'TAIL:V', '-SPEC:ADV', 'PHI:NUM:_', '-COMP:T', 'P', '-SPEC:Neg/fin', '-COMP:uWH', '-COMP:T/fin', '-VAL', '-COMP:ADV', '-SPEC:iR', '-SPEC:V', '-SPEC:iWH'}
koko            {'TAIL:T', '-ARG', '-SPEC:MA/lla', '-SPEC:C', '-SPEC:T/fin', '!COMP:*', '-COMP:uR', '-COMP:D', 'LANG:FI', 'LF:all', 'adjoinable', '-SPEC:P', '-SPEC:INF', 'PF:koko', '-SPEC:Neg/fin', '!PROBE:N', 'COMP:N', '-COMP:T/fin', 'D', '-SPEC:V', 'OP', '-COMP:P'}
kuka            ['LANG:FI']
kuka-           {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'PF:kuka', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', 'LANG:FI', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', 'PHI', '-SPEC:ADV', '-COMP:VA/inf', 'LF:who', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-COMP:v', 'N'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:D', 'LANG:FI', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'PF:kuorsaa', 'ASP', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:WH', '-VAL', 'COMP:P', 'V', '-COMP:v', 'LF:snore'}
lahella         {'-COMP:N', '-SPEC:C', '-SPEC:T/fin', '-SPEC:N', '!COMP:*', 'VAL', '-COMP:A', 'PHI:DET:_', 'LANG:FI', '-SPEC:v', '-SPEC:P', '-SPEC:FORCE', 'COMP:D', 'ARG', 'PHI:NUM:_', 'INF', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:iWH', 'SPEC:*', 'PF:lahella', '-COMP:C/fin', 'COMP:V', 'LF:near', 'adjoinable', '!SPEC:*', '-SPEC:INF', '-SPEC:C/fin', 'PHI:PER:_', '!SPEC:D', '-SPEC:ADV', '-COMP:T', 'P', '-COMP:uWH', '-COMP:ADV', '-SPEC:iR', '-SPEC:V', 'COMP:v', '-COMP:FORCE'}
lahella         {'-COMP:N', 'SPEC:*', '!COMP:D', 'PF:lahella', '-SPEC:C', '-SPEC:N', '-SPEC:T/fin', '!COMP:*', '-COMP:A', 'PHI:DET:_', 'LANG:FI', 'LF:near', '-SPEC:v', 'adjoinable', '-SPEC:P', '-SPEC:FORCE', 'COMP:D', '-SPEC:INF', '-SPEC:C/fin', 'ARG', 'PHI:PER:_', '-SPEC:ADV', 'PHI:NUM:_', '-COMP:T', 'P', '-SPEC:Neg/fin', '-COMP:uWH', '-COMP:T/fin', '-VAL', '-COMP:ADV', '-SPEC:iR', '-SPEC:V', '-SPEC:iWH'}
lahella_1       {'-COMP:N', 'SPEC:*', '!COMP:D', 'PF:lahella', '-SPEC:C', '-SPEC:N', '-SPEC:T/fin', '!COMP:*', '-COMP:A', 'PHI:DET:_', 'LANG:FI', 'LF:near', '-SPEC:v', 'adjoinable', '-SPEC:P', '-SPEC:FORCE', 'COMP:D', '-SPEC:INF', '-SPEC:C/fin', 'ARG', 'PHI:PER:_', '-SPEC:ADV', 'PHI:NUM:_', '-COMP:T', 'P', '-SPEC:Neg/fin', '-COMP:uWH', '-COMP:T/fin', '-VAL', '-COMP:ADV', '-SPEC:iR', '-SPEC:V', '-SPEC:iWH'}
lahella_2       {'-COMP:N', '-SPEC:C', '-SPEC:T/fin', '-SPEC:N', '!COMP:*', 'VAL', '-COMP:A', 'PHI:DET:_', 'LANG:FI', '-SPEC:v', '-SPEC:P', '-SPEC:FORCE', 'COMP:D', 'ARG', 'PHI:NUM:_', 'INF', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:iWH', 'SPEC:*', 'PF:lahella', '-COMP:C/fin', 'COMP:V', 'LF:near', 'adjoinable', '!SPEC:*', '-SPEC:INF', '-SPEC:C/fin', 'PHI:PER:_', '!SPEC:D', '-SPEC:ADV', '-COMP:T', 'P', '-COMP:uWH', '-COMP:ADV', '-SPEC:iR', '-SPEC:V', 'COMP:v', '-COMP:FORCE'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'-COMP:N', '-COMP:MA/inf', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'PF:lahtea', '-COMP:D', 'LANG:FI', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'LF:leave', 'ARG', 'PHI:PER:_', 'COMP:PP', 'ASP', 'CLASS:INTR', 'PHI:NUM:_', '-VAL', 'COMP:P', 'V', '-COMP:v', 'SPEC:D'}
lavano          ['LANG:IT']
lava-           {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', '!COMP:*', 'PHI:DET:_', 'LF:wash', '-COMP:V', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-VAL', 'LANG:IT', 'COMP:P', 'PF:lava', 'V', '-COMP:v'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-ARG', '-SPEC:MA/lla', '-SPEC:C', '-SPEC:T/fin', '!COMP:*', '-COMP:uR', '-COMP:D', 'LF:D', 'adjoinable', '-SPEC:P', '-SPEC:INF', '-SPEC:Neg/fin', '!PROBE:N', 'COMP:N', '-COMP:T/fin', 'D', 'LANG:IT', '-SPEC:V', 'OP', '-COMP:P', 'PF:le'}
leaves          ['LANG:EN']
leave           {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:DET:_', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'LF:leave', 'ARG', 'PHI:PER:_', '!SPEC:D', 'ASP', 'PHI:NUM:_', '-COMP:T/fin', '-VAL', 'COMP:P', 'PF:leave', 'V', '-COMP:v'}
leave-          {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:DET:_', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'LF:leave', 'ARG', 'PHI:PER:_', '!SPEC:D', 'ASP', 'PHI:NUM:_', '-COMP:T/fin', '-VAL', 'COMP:P', 'PF:leave', 'V', '-COMP:v'}
like-           {'-COMP:N', 'SPEC:P', '!COMP:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:DET:_', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'LF:like', 'ASP', 'PHI:NUM:_', 'PF:like', '-VAL', 'COMP:P', 'V', '-COMP:v'}
likes           ['LANG:EN']
like            {'-COMP:N', 'SPEC:P', '!COMP:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:DET:_', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'LF:like', 'ASP', 'PHI:NUM:_', 'PF:like', '-VAL', 'COMP:P', 'V', '-COMP:v'}
little          ['LANG:EN']
little-         {'LF:little', '0', '2SPEC', 'PF:little-', 'LANG:EN', 'SPEC:D'}
lle             {'-COMP:N', 'LF:for', '-SPEC:C', '-SPEC:N', '-SPEC:T/fin', '!COMP:*', '-COMP:A', 'PHI:DET:_', 'LANG:FI', '-SPEC:v', 'adjoinable', '-SPEC:P', '-SPEC:FORCE', 'COMP:D', 'TAIL:V,+SEM:directional', '-SPEC:INF', 'ARG', '-SPEC:C/fin', 'PHI:PER:_', '-SPEC:ADV', '-SPEC:*', 'PHI:NUM:_', '-COMP:T', 'P', '+SEM:directional', '-SPEC:Neg/fin', '-COMP:T/fin', '-COMP:uWH', '-VAL', '-COMP:ADV', '-SPEC:iR', '-SPEC:V', 'PF:P(lle)', '-SPEC:iWH'}
lla             {'TAIL:T', '-COMP:N', 'SPEC:*', '-SPEC:C', 'LF:by', '-SPEC:N', '-SPEC:T/fin', '!COMP:*', '-COMP:A', 'PHI:DET:_', 'LANG:FI', '-SPEC:v', 'adjoinable', '-SPEC:P', 'PF:P(lla)', '-SPEC:FORCE', 'COMP:D', '-SPEC:INF', 'ARG', '-SPEC:C/fin', 'PHI:PER:_', '-SPEC:ADV', 'PHI:NUM:_', '-COMP:T', 'P', '-SPEC:Neg/fin', '-COMP:uWH', '-COMP:T/fin', '-VAL', '-COMP:ADV', 'TAIL:*V', '-SPEC:iR', '-SPEC:V', '-SPEC:iWH'}
Luisa           ['LANG:IT']
Luisa-          {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', 'N', '-SPEC:R', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', 'PF:Luisa', '-SPEC:ADV', '-COMP:VA/inf', '-COMP:WH', 'LANG:IT', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-SEM:directional', '-COMP:v', 'LF:Luisa'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'CLASS:TR', 'SPEC:TO/inf', '!COMP:*', 'PHI:DET:_', 'LANG:FI', 'LF:read', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'COMP:D', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'PF:luke', '-VAL', 'COMP:P', 'V', '-COMP:v', '-COMP:P'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'-COMP:N', 'SPEC:P', '!COMP:D', '-SPEC:T/fin', 'CLASS:TR', 'SPEC:TO/inf', '!COMP:*', 'PHI:DET:_', 'LANG:FI', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'COMP:D', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-VAL', 'ASP:BOUNDED', 'COMP:P', 'V', '-COMP:P', '-COMP:v', 'PF:loyta-', 'LF:find'}
Mary            ['LANG:EN']
Mary-           {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', 'LANG:EN', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:VA/inf', '-adjoinable', 'COMP:P', 'PF:Mary', '-SPEC:uWH', '-SEM:directional', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', '-COMP:WH', 'COMP:C', '-SPEC:V', 'LF:Mary', '-COMP:v', 'COMP:R/D'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', 'LANG:FI', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:VA/inf', '-adjoinable', 'COMP:P', '-SPEC:uWH', 'LF:Merja', 'PF:Merja', '-SEM:directional', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', '-COMP:WH', 'COMP:C', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'PF:malla', 'TAIL:T', 'SPEC:*', '-SPEC:Neg/fin', 'LF:by', '-SPEC:N', '-SPEC:T/fin', 'MA/inf', 'LANG:FI', 'COMP:v', 'adjoinable', '-SPEC:FORCE', 'ADV'}
meren           ['LANG:FI']
mere-           {'LF:ocean', '-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', 'LANG:FI', '-COMP:AUX', 'PF:meri', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', '-COMP:VA/inf', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-COMP:v', 'N'}
mies            {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', 'PF:mies', '-COMP:A', 'COMP:T/prt', '-SPEC:R', 'LANG:FI', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', 'LF:man', '-SPEC:ADV', '-COMP:VA/inf', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-COMP:v', 'N'}
mistake         {'-COMP:N', 'PF:mistake', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'LANG:EN', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', '-COMP:VA/inf', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', 'LF:mistake', '-COMP:v', 'N'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', 'LANG:FI', '-COMP:AUX', 'LF:what', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', '-COMP:VA/inf', 'PF:mika-', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-COMP:v', 'N'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'CLASS:TR', 'SPEC:TO/inf', '!COMP:*', 'LANGN:EN', 'PHI:DET:_', 'PHI:GEN:_', '-COMP:V', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '+SEM:directional', 'LF:move', '-VAL', 'COMP:P', 'PF:move', 'V', '-COMP:v', '-COMP:P'}
mukavasti       ['LANG:EN']
mukava-         {'2SPEC', '0', 'LANG:FI', 'PF:mukavasti', 'LF:comfortably', 'SPEC:D'}
must            {'MODAL', 'LF:must', 'SPEC:*', '-SPEC:C', '-SPEC:T/fin', 'SPEC:TO/inf', '-SPEC:N', 'VAL', '!COMP:*', 'COMP:T/prt', 'COMP:V', 'PHI:DET:_', '-SPEC:v', 'PHI:GEN:_', 'SPEC:C/fin', 'T/fin', 'LANG:EN', '!SPEC:*', 'T', 'ARG', 'PHI:PER:_', '-SPEC:Neg', '!PROBE:V', 'PHI:NUM:_', 'SPEC:FORCE', '-COMP:INF', '-COMP:T/fin', '-SPEC:TO/inf', 'COMP:Neg', 'PF:must', 'COMP:v', '-SPEC:V', 'SPEC:D', 'FIN'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'CLASS:TR', 'SPEC:TO/inf', '!COMP:*', 'PHI:DET:_', 'LANG:FI', '-COMP:V', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', 'PF:myy', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-COMP:T/fin', '-VAL', 'ASP:BOUNDED', 'COMP:P', 'LF:sell', 'V', '-COMP:v', '-COMP:P'}
naki            ['LANG:FI']
nakee           ['LANG:FI']
nake-           {'-COMP:N', 'SPEC:P', 'PF:nake', '-SPEC:T/fin', 'CLASS:TR', 'SPEC:TO/inf', '!COMP:*', 'PHI:DET:_', 'LANG:FI', 'LF:see', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'COMP:D', '-COMP:MA/ssa', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-VAL', 'ASP:BOUNDED', 'COMP:P', '-COMP:ESSA/inf', 'V', '-COMP:v', '-COMP:P', '-COMP:MA/tta'}
nayttaa         ['LANG:FI']
naytta-         {'-COMP:N', 'SPEC:P', '-ARG', '-SPEC:T/fin', 'SPEC:TO/inf', 'VAL', 'LANG:FI', 'PF:naytta', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', '!COMP:VA/inf', '!SPEC:D', 'ASP', 'COMP:P', 'LF:seem', 'SEM:internal', 'V', '-COMP:v'}
ndo             {'?ARG', 'PRG', '-COMP:C/fin', 'INF', '-SPEC:T/fin', '-COMP:T/fin', 'VAL', 'PF:PRG', '!COMP:*', 'COMP:V', 'LF:ing', 'COMP:v', '-SPEC:V', 'LANG:EN', '-COMP:FORCE'}
ne              {'LF:those', '-ARG', '-SPEC:MA/lla', '-SPEC:C', '-SPEC:T/fin', '!COMP:*', '-COMP:uR', '-COMP:D', 'LANG:FI', 'adjoinable', '-SPEC:P', '-SPEC:INF', '-SPEC:Neg/fin', '!PROBE:N', 'COMP:N', '-COMP:T/fin', 'D', 'PHI:NUM:PL', '-SPEC:V', 'OP', 'PHI:PER:3', 'PF:ne', '-COMP:P'}
niiden          ['LANG:EN']
nen             {'SPEC:*', '-SPEC:D', 'COMP:0', 'PF:a', 'LANG:FI', 'A', 'LF:ing', '-SPEC:A', 'TAIL:D'}
not             {'PHI:NUM:_', 'SPEC:*', 'POL:NEG', '-SPEC:T/fin', 'PHI:GEN:_', '-VAL', 'PF:not', '!COMP:*', 'PHI:PER:_', 'Neg', '-COMP:FIN', '-COMP:D', 'PHI:DET:_', 'LANG:EN', '-COMP:C', 'LF:not', 'ARG'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-COMP:N', '-COMP:MA/inf', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:D', 'LANG:FI', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'PF:nukku', '-COMP:Neg/fin', 'ASP', 'CLASS:INTR', 'PHI:NUM:_', 'LF:sleep', '-COMP:T', '-COMP:T/fin', '-VAL', 'COMP:P', 'V', '-COMP:v', 'SPEC:D'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-COMP:N', 'PF:omaisuuden', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', 'LANG:FI', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', 'LF:possessions', '-COMP:VA/inf', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-COMP:v', 'N'}
operatoria      ['LANG:IT']
operatoria-     {'PF:operatoria', '0', '2SPEC', 'LF:operation', 'SPEC:D', 'LANG:IT'}
ostaa           ['LANG:FI']
osta-           {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'CLASS:TR', 'SPEC:TO/inf', '!COMP:*', 'PHI:DET:_', 'LANG:FI', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'COMP:D', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'PF:osta', '-VAL', 'ASP:BOUNDED', 'COMP:P', 'V', '-COMP:v', '-COMP:P', 'LF:buy'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-COMP:N', '-COMP:C/fin', 'SEM:nonreferential', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', 'LANG:FI', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', 'PF:paiva', 'LF:day', '-COMP:VA/inf', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-COMP:v', 'N'}
past            {'-COMP:N', '-float', '-SPEC:C', '-SPEC:N', '-SPEC:T/fin', 'PHI:GEN:_', '!COMP:*', '-COMP:A', 'PHI:DET:_', '-SPEC:v', 'LANG:EN', '-SPEC:P', '-SPEC:FORCE', 'COMP:D', 'LF:past', 'adjoinable', 'ARG', '-SPEC:INF', '-SPEC:C/fin', 'PHI:PER:_', '-SPEC:ADV', '-SPEC:*', 'PHI:NUM:_', '-COMP:T', 'P', '-SPEC:Neg/fin', '-COMP:uWH', '-COMP:T/fin', '-VAL', '-COMP:ADV', '-SPEC:iR', 'PF:past', '-SPEC:V', '-SPEC:iWH'}
Pariisia        ['LANG:FI']
Pariisi-        {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'LF:Paris', 'COMP:T/prt', '-SPEC:R', 'LANG:FI', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', '-COMP:VA/inf', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', 'PF:Pariisi', '-COMP:v', 'N'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', 'N', 'LANG:FI', '-SPEC:R', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', 'LF:Pekka', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', '-COMP:VA/inf', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-SEM:directional', '-COMP:v', 'PF:Pekka'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'-COMP:N', 'SPEC:P', 'LF:fear', '-SPEC:T/fin', 'CLASS:TR', 'SPEC:TO/inf', 'PF:pelkaa', '!COMP:*', 'PHI:DET:_', 'LANG:FI', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'COMP:D', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-VAL', 'COMP:P', 'V', '-COMP:v', '-COMP:P'}
persuades       ['LANG:EN']
persuade-       {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', '!COMP:*', 'PHI:DET:_', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-VAL', 'PF:persuade', 'COMP:P', 'V', 'LF:persuade', 'COMP:TO/inf', 'SEM:external', '-COMP:v'}
peruuntui       ['LANG:FI']
peruuntu-       {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PF:peruuntui', 'PHI:DET:_', 'LANG:FI', 'LF:cancelled', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-VAL', 'COMP:P', 'V', '-COMP:v', 'SPEC:D'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'CLASS:TR', 'SPEC:TO/inf', '!COMP:*', 'PHI:DET:_', 'PF:pese_asp', 'LANG:FI', 'LF:wash', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'COMP:D', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-VAL', 'ASP:BOUNDED', 'COMP:P', 'V', '-COMP:v', '-COMP:P'}
pese-           {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'CLASS:TR', 'SPEC:TO/inf', 'PF:pese', '!COMP:*', 'PHI:DET:_', 'LANG:FI', 'LF:wash', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'COMP:D', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-VAL', 'COMP:P', 'V', '-COMP:v', '-COMP:P'}
petardi         {'-COMP:N', 'LF:firecrackers', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', '-COMP:VA/inf', 'PF:petardi', '-COMP:WH', 'LANG:IT', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-COMP:v', 'N'}
pieni           ['LANG:FI']
pieni-          {'2SPEC', '0', 'PF:pieni-', 'LANG:FI', 'LF:small', 'SPEC:D'}
poikien         ['LANG:FI']
poika-          {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', 'LANG:FI', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', 'LF:boy', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', '-COMP:VA/inf', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', 'PF:poika', '-COMP:v', 'N'}
puhelinta       ['LANG:FI']
puhelin-        {'2SPEC', 'LANG:FI', 'PF:puhelin', '0', 'LF:phone', 'SPEC:D'}
punainen        ['LANG:FI']
puna-           {'PF:puna-', '0', 'LANG:FI', '2SPEC', 'LF:red', 'SPEC:D'}
presupposto     {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', '-COMP:VA/inf', 'LF:presupposition', '-COMP:WH', 'LANG:IT', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', 'PF:presupposto', '-COMP:v', 'N'}
primary         {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', 'PF:primary', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', 'LF:nurse', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', '-COMP:VA/inf', '-COMP:WH', 'LANG:IT', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-COMP:v', 'N'}
promises        ['LANG:EN']
promise-        {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:DET:_', 'PF:promise', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'COMP:D', 'SPEC:ADV', 'SPEC:D', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-VAL', 'COMP:P', 'SEM:internal', 'V', '-COMP:v', 'LF:promise'}
problem         {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'LF:problem', 'LANG:EN', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', '-COMP:VA/inf', '-COMP:WH', 'PF:problem', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-COMP:v', 'N'}
pyytaa          ['LANG:FI']
pyyta-          {'-COMP:N', 'SPEC:P', 'LF:ask', '-SPEC:T/fin', 'CLASS:TR', 'SPEC:TO/inf', '!COMP:*', 'PHI:DET:_', 'PF:pyyda', 'LANG:FI', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'COMP:D', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-VAL', 'COMP:P', 'V', 'SEM:external', '-COMP:v', '-COMP:P'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'LAMG:EN', '-COMP:N', '-COMP:MA/inf', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:DET:_', '-COMP:D', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'LF:race', 'ASP', 'CLASS:INTR', 'PHI:NUM:_', '-COMP:T/fin', '-VAL', 'COMP:P', 'PF:race', 'V', '-COMP:v', 'SPEC:D'}
raukesi         ['LANG:FI']
raukea-         {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'LF:terminate', 'PHI:DET:_', 'LANG:FI', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-VAL', 'PF:raukea', 'COMP:P', 'V', '-COMP:v'}
red             ['LANG:EN']
red-            {'2SPEC', '0', 'LANG:EN', 'LF:red', 'SPEC:D', 'PF:red'}
saavuttaa       ['LANG:FI']
saavutta-       {'-COMP:N', 'SPEC:P', '!COMP:D', '-SPEC:T/fin', 'CLASS:TR', 'SPEC:TO/inf', '!COMP:*', 'PHI:DET:_', 'LANG:FI', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'COMP:D', 'ARG', 'PF:saavutta-', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-VAL', 'ASP:BOUNDED', 'COMP:P', 'V', '-COMP:v', 'LF:reach', '-COMP:P'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'-COMP:N', 'COMP:VA/inf', 'SPEC:P', '-SPEC:T/fin', 'CLASS:TR', 'SPEC:TO/inf', '!COMP:*', 'PHI:DET:_', 'LANG:FI', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'COMP:FORCE', 'COMP:D', 'ARG', 'PHI:PER:_', 'PF:sano-', 'ASP', 'PHI:NUM:_', 'LF:say', '-VAL', 'COMP:P', 'V', '-COMP:v', '-COMP:P', 'SPEC:D'}
said            ['LANG:EN']
say'            {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', '!COMP:FORCE', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:DET:_', 'LANG:EN', '-SPEC:FORCE', '-COMP:V', 'PF:say', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'LF:say', '-VAL', 'COMP:P', 'V', '-COMP:v', 'SPEC:D'}
say-            {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', '!COMP:FORCE', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:DET:_', 'LANG:EN', '-SPEC:FORCE', '-COMP:V', 'PF:say', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', 'LF:say', '-VAL', 'COMP:P', 'V', '-COMP:v', 'SPEC:D'}
sala            ['LANG:IT']
sala-           {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', 'LF:room', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', '-COMP:VA/inf', '-COMP:WH', 'LANG:IT', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-COMP:v', 'N', 'PF:sala'}
scoppiati       ['LANG:IT']
scoppia-        {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:DET:_', 'LF:explode', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-VAL', 'LANG:IT', 'COMP:P', 'V', 'PF:scoppia', '-COMP:v'}
sentenza        {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', 'PF:sentenza', '-COMP:VA/inf', '-COMP:WH', 'LANG:IT', 'COMP:P', 'COMP:C', '-SPEC:uWH', 'LF:sentence', '-SPEC:V', '-COMP:v', 'N'}
Seine           ['LANG:EN']
Seine-          {'-COMP:N', 'LF:Seine', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'LANG:EN', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', '-COMP:VA/inf', 'PF:Seine', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-COMP:v', 'N'}
sembrano        ['LANG:IT']
sembra-         {'-COMP:N', 'SPEC:P', '-ASP', '-ARG', '-SPEC:T/fin', 'SPEC:TO/inf', '-COMP:D', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'PF:sembra', '-VAL', 'COMP:P', 'LF:seem', 'V', '-COMP:v', 'SPEC:D', '!COMP:ARE/inf'}
sleeps          ['LANG:EN']
sleep           {'-COMP:N', '-COMP:MA/inf', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:DET:_', '-COMP:D', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'SPEC:D', 'PHI:PER:_', 'ASP', 'CLASS:INTR', 'PHI:NUM:_', 'LF:sleep', '-VAL', 'COMP:P', 'V', '-COMP:v', 'PF:sleep'}
sleep-          {'-COMP:N', '-COMP:MA/inf', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:DET:_', '-COMP:D', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'SPEC:D', 'PHI:PER:_', 'ASP', 'CLASS:INTR', 'PHI:NUM:_', 'LF:sleep', '-VAL', 'COMP:P', 'V', '-COMP:v', 'PF:sleep'}
solution        {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'PF:solution', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'LANG:EN', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'LF:solution', '-COMP:VA/inf', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-COMP:v', 'N'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '!COMP:A/inf', 'LF:agreement', 'LANG:FI', '-SPEC:R', 'PF:sopimus', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', '-COMP:VA/inf', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-COMP:v', 'N'}
spinge          ['LANG:IT']
spinge-         {'-COMP:N', 'SPEC:P', '!COMP:D', 'PF:spinge', '-SPEC:T/fin', 'LF:push', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:DET:_', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-VAL', 'LANG:IT', 'V', '-COMP:v', '-COMP:P'}
ssa             {'LF:in', '-COMP:N', 'SPEC:*', '-SPEC:C', '-SPEC:N', '-SPEC:T/fin', '!COMP:*', '-COMP:A', 'PHI:DET:_', 'LANG:FI', '-SPEC:v', 'adjoinable', '-SPEC:P', '-SPEC:FORCE', 'COMP:D', '-SPEC:INF', '-SPEC:C/fin', 'ARG', 'PHI:PER:_', 'TAIL:V', 'COMP:n/MA', '-SPEC:ADV', 'PHI:NUM:_', '-COMP:T', 'P', '-SPEC:Neg/fin', '-COMP:uWH', '-COMP:T/fin', '-VAL', '-COMP:ADV', 'PF:ssa', '-SPEC:iR', '-SPEC:V', '-SPEC:iWH'}
stanno          ['LANG:IT']
sta-            {'-COMP:N', 'SPEC:P', '-ASP', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:PRG', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'PHI:NUM:_', 'LF:stay', '-VAL', 'COMP:P', 'SEM:internal', 'V', 'PF:sta', '-COMP:v', 'SPEC:D'}
sti             {'TAIL:T', 'PF:sti', 'SPEC:*', '-ARG', 'LF:by', '-SPEC:Neg/fin', '-SPEC:N', '!COMP:*', '-SPEC:T/fin', 'LANG:FI', 'adjoinable', '-SPEC:FORCE', 'ADV'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', 'LANG:FI', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', '-COMP:VA/inf', 'PF:sukka-', '-COMP:WH', 'LF:socks', 'COMP:P', '-SPEC:uWH', 'COMP:C', '-SPEC:V', '-COMP:v', 'N'}
surprised       ['LANG:EN']
surprise-       {'PF:surprise', '-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'CLASS:TR', 'SPEC:TO/inf', '!COMP:*', 'PHI:DET:_', 'PHI:GEN:_', 'LF:surprise', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'COMP:D', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-COMP:T/fin', '-VAL', 'COMP:P', 'V', '-COMP:v', '-COMP:P'}
talo            {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', 'LANG:FI', '-COMP:AUX', 'LF:house', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', '-SPEC:ADV', 'PF:talo', '-COMP:VA/inf', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-COMP:v', 'N'}
tama            ['LANG:EN']
tama-           {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', 'LANG:FI', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', 'PF:tama', 'PHI', '-SPEC:ADV', '-COMP:VA/inf', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', 'LF:this', '-COMP:v', 'N'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'MODAL', '-COMP:N', 'LF:must', 'SPEC:*', '-ASP', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PF:taytyy', 'PHI:DET:_', '!COMP:A/inf', 'LANG:FI', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'PHI:NUM:_', '-VAL', 'COMP:P', 'V', '-COMP:v', 'FIN'}
teki            ['LANG:FI']
teke-           {'-COMP:N', 'SPEC:P', '!COMP:D', '-SPEC:T/fin', 'CLASS:TR', 'SPEC:TO/inf', '!COMP:*', 'PHI:DET:_', 'LANG:FI', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'COMP:D', 'ARG', 'PHI:PER:_', 'ASP', 'LF:make', 'PHI:NUM:_', 'PF:teke', '-COMP:A/inf', '-VAL', 'ASP:BOUNDED', 'COMP:P', 'V', '-COMP:v', '-COMP:P'}
that            {'-SPEC:*', '-ARG', '-VAL', 'LF:that', '!COMP:*', '!PROBE:FIN', 'COMP:T/fin', 'COMP:C/fin', 'LANG:EN', 'FORCE', 'PF:that', 'FIN'}
the             {'PF:the', '-ARG', '-SPEC:MA/lla', '-SPEC:C', '-SPEC:T/fin', '!COMP:*', '-COMP:uR', '-COMP:D', 'LANG:EN', 'adjoinable', '-SPEC:P', '-SPEC:INF', 'PHI:DEF:DEF', '-SPEC:Neg/fin', '!PROBE:N', 'COMP:N', '-COMP:T/fin', 'D', 'LF:the', '-SPEC:V', 'OP', '-COMP:P'}
to              {'-COMP:N', '-SPEC:C', '-SPEC:N', '-SPEC:T/fin', '!COMP:*', '-COMP:A', 'PHI:DET:_', '-SPEC:v', 'LANG:EN', '-SPEC:P', '-SPEC:FORCE', 'COMP:D', 'ARG', 'TAIL:V', 'PHI:NUM:_', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:iWH', '-float', 'PHI:GEN:_', 'PF:to', 'adjoinable', '-SPEC:INF', '-SPEC:C/fin', 'PHI:PER:_', '-SPEC:ADV', '-SPEC:*', '-COMP:T', 'P', '+SEM:directional', '-COMP:uWH', '-VAL', '-COMP:ADV', 'LF:to', '-SPEC:iR', '-SPEC:V'}
to_inf          {'?ARG', '-COMP:C/fin', '-SPEC:T/fin', '!COMP:*', 'LF:TO/inf', 'COMP:V', '-SPEC:v', 'adjoinable', 'LANG:EN', 'INF', '-COMP:T/fin', '-VAL', 'TO/inf', 'COMP:v', '-SPEC:V', 'PF:TO/inf', '-COMP:FORCE'}
towards         {'-COMP:N', '-float', '-SPEC:C', '-SPEC:N', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:towards', '!COMP:*', '-COMP:A', 'PHI:DET:_', '-SPEC:v', 'LANG:EN', '-SPEC:P', '-SPEC:FORCE', 'COMP:D', 'adjoinable', '-SPEC:INF', 'ARG', '-SPEC:C/fin', 'PHI:PER:_', 'TAIL:V', '-SPEC:ADV', '-SPEC:*', 'PHI:NUM:_', 'PF:towards', '-COMP:T', 'P', '-SPEC:Neg/fin', '-COMP:uWH', '-COMP:T/fin', '-VAL', '-COMP:ADV', '-SPEC:iR', '-SPEC:V', '-SPEC:iWH'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'CLASS:TR', 'SPEC:TO/inf', '!COMP:*', 'PHI:DET:_', 'LANG:FI', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'COMP:D', 'ARG', 'PHI:PER:_', 'LF:nudge', 'ASP', 'PHI:NUM:_', '-VAL', 'PF:tonaise', 'COMP:P', 'V', '-COMP:v', '-COMP:P'}
tta             {'-COMP:N', 'SPEC:*', '-SPEC:C', '-SPEC:N', '-SPEC:T/fin', '!COMP:*', '-COMP:A', 'PHI:DET:_', 'LANG:FI', '-SPEC:v', 'adjoinable', '-SPEC:P', '-SPEC:FORCE', 'ADV', 'COMP:D', '-SPEC:INF', 'ARG', '-SPEC:C/fin', 'PHI:PER:_', 'COMP:n/MA', 'LF:without', '-SPEC:ADV', 'PHI:NUM:_', '-COMP:T', 'P', 'PF:tta', '-SPEC:Neg/fin', '-COMP:T/fin', '-COMP:uWH', '-VAL', '-COMP:ADV', '-SPEC:iR', '-SPEC:V', '-SPEC:iWH'}
tries           ['LANG:EN']
try-            {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:DET:_', 'LF:try', 'PF:try', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', '!COMP:TO/inf', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-VAL', 'COMP:P', '!COMP:-ARG', 'SEM:internal', 'V', '-COMP:v', 'SPEC:D'}
verifiche       {'-COMP:N', '-COMP:v', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'COMP:R/D', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:ADV', '-COMP:VA/inf', '-COMP:WH', 'LANG:IT', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', 'LF:verification', 'PF:verifiche', 'N'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'-COMP:N', '-COMP:MA/inf', 'SPEC:P', 'LF:flow', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:D', 'LANG:FI', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'ASP', 'CLASS:INTR', 'PHI:NUM:_', '-VAL', 'COMP:P', 'V', 'PF:virtaa', '!COMP:P', '-COMP:v', 'SPEC:D'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', 'LF:want', '!COMP:*', 'PHI:DET:_', 'PF:volu', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', '-SPEC:*', 'ASP', 'PHI:NUM:_', '-VAL', 'COMP:P', 'SEM:internal', 'V', '-COMP:v'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'-COMP:N', 'SPEC:P', 'SEM:achievement', '-SPEC:T/fin', 'CLASS:TR', 'SPEC:TO/inf', '!COMP:*', 'PHI:DET:_', 'PHI:GEN:_', 'LF:win', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'COMP:D', 'ARG', 'PHI:PER:_', 'PF:voitta', 'ASP', 'PHI:NUM:_', '-VAL', 'ASP:BOUNDED', 'COMP:P', 'V', '-COMP:v', '-COMP:P'}
wants           ['LANG:EN']
want-           {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'CLASS:TR', 'PHI:GEN:_', 'LF:want', '!COMP:*', 'PHI:DET:_', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'COMP:D', 'ARG', 'PHI:PER:_', 'ASP', 'PF:want', 'PHI:NUM:_', '-VAL', '-SPEC:TO/inf', 'COMP:P', 'V', 'COMP:TO/inf', '-COMP:v', '-COMP:P'}
what            ['LANG:EN']
what-           {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', 'LANG:EN', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'LF:what', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', '-SPEC:ADV', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', 'PF:what', '-COMP:v', 'COMP:R/D'}
which           {'OP', '-ARG', '-SPEC:MA/lla', '-SPEC:C', '-SPEC:T/fin', '!COMP:*', '-COMP:uR', '-COMP:D', 'LANG:EN', 'adjoinable', '-SPEC:P', '-SPEC:INF', 'LF:which', '-SPEC:Neg/fin', '!PROBE:N', 'COMP:N', 'PF:which', '-COMP:T/fin', 'D', '-SPEC:V', 'OP:WH', '-COMP:P'}
who             ['LANG:EN']
who-            {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', 'LANG:EN', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:VA/inf', 'LF:who', 'COMP:P', '-SPEC:uWH', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', '-SPEC:ADV', '-COMP:*', '-COMP:WH', 'PF:who', 'COMP:C', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
whether         {'OP', '-ARG', '!COMP:*', 'COMP:T/fin', 'LANG:EN', 'Q', '-SPEC:*', 'PF:whether', '-VAL', '!PROBE:FIN', 'LF:whether', 'FORCE', 'OP:WH', 'OP:Q', 'COMP:C/fin', 'FIN'}
yrittaa         ['LANG:FI']
yritta-         {'-COMP:N', 'PF:yritta', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:DET:_', '!COMP:A/inf', 'LF:try', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-VAL', 'COMP:P', '!COMP:-ARG', 'SEM:internal', 'V', '-COMP:v', 'SPEC:D'}
mina            ['LANG:EN']
mina-           {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'LF:I', '-COMP:A', 'LANG:FI', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'PF:mina', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', '-SPEC:ADV', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
sina            ['LANG:EN']
sina-           {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', 'LANG:FI', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', 'LF:you', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', 'N', '-COMP:v', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', '-SPEC:ADV', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', 'PF:sina', 'COMP:R/D'}
han             ['LANG:EN']
han-            {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', 'LANG:FI', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', 'PF:han', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', 'LF:s/he', '-SPEC:ADV', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', 'LANG:FI', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:VA/inf', 'PF:me', 'COMP:P', '-SPEC:uWH', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'LF:we', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', '-SPEC:ADV', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
te              ['LANG:EN']
te-             {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', 'LANG:FI', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', 'LF:you', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', 'N', '-COMP:v', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', '-SPEC:ADV', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', 'PF:te', 'COMP:R/D'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', 'LANG:FI', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', 'PF:he', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'LF:they', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', '-SPEC:ADV', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
se              {'LF:the/that', '-ARG', '-SPEC:MA/lla', '-SPEC:C', 'PF:se', '-SPEC:T/fin', '!COMP:*', '-COMP:uR', '-COMP:D', 'LANG:FI', 'adjoinable', '-SPEC:P', '-SPEC:INF', '-SPEC:Neg/fin', '!PROBE:N', 'COMP:N', '-COMP:T/fin', 'D', '-SPEC:V', 'OP', '-COMP:P'}
sen             {'TAIL:PHI', 'LF:the/that', '-ARG', '-SPEC:MA/lla', '-SPEC:C', 'TAIL:ASP', '-SPEC:T/fin', '!COMP:*', '-COMP:uR', '-COMP:D', 'LANG:FI', 'adjoinable', '-SPEC:P', 'TAIL:*POL:NEG', '-SPEC:INF', 'PF:sen', '-SPEC:Neg/fin', '!PROBE:N', 'COMP:N', '-COMP:T/fin', 'D', '-SPEC:V', 'OP', '-COMP:P'}
I               ['LANG:EN']
I-              {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'LF:I', '-COMP:A', 'LANG:EN', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', 'PF:I', '-SPEC:ADV', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
you             ['LANG:EN']
you-            {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', 'LANG:EN', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', 'LF:you', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', 'PF:you', '-SPEC:ADV', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
he              ['LANG:EN']
he-             {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', 'LANG:EN', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', 'PF:he', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', '-SPEC:ADV', '-COMP:*', '-COMP:WH', 'COMP:C', 'LF:he', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
she             ['LANG:EN']
she-            {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', 'PF:she', 'LANG:EN', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', 'LF:she', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', '-SPEC:ADV', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
we              ['LANG:EN']
we-             {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', 'LANG:EN', 'PF:we', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'LF:we', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', '-SPEC:ADV', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
you_pl          ['LANG:EN']
you_pl-         {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:D/rel', '-COMP:A', 'COMP:T/prt', 'PF:you_pl', '-SPEC:R', '-COMP:AUX', 'LANG:EN', '-SPEC:P', '-COMP:V', 'LF:you_pl', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', 'PHI', '-SPEC:ADV', '-COMP:VA/inf', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-COMP:v', 'N'}
they            ['LANG:EN']
they-           {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', 'LANG:EN', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:VA/inf', 'COMP:P', '-SPEC:uWH', 'PF:they', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'LF:they', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', '-SPEC:ADV', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
it              ['LANG:EN']
it-             {'LF:it/that', '-ARG', '-SPEC:MA/lla', '-SPEC:C', '-SPEC:T/fin', '!COMP:*', '-COMP:uR', '-COMP:D', 'LANG:EN', 'adjoinable', '-SPEC:P', '-SPEC:INF', 'PF:it', '-SPEC:Neg/fin', '!PROBE:N', 'COMP:N', '-COMP:T/fin', 'D', '-SPEC:V', 'OP', '-COMP:P'}
io              ['LANG:EN']
io-             {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'LF:I', '-COMP:A', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:VA/inf', 'LANG:IT', 'COMP:P', '-SPEC:uWH', 'PF:io', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', '-SPEC:ADV', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
tu              ['LANG:EN']
tu-             {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', '-SPEC:P', 'PF:tu', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', 'LF:you', '-COMP:VA/inf', 'LANG:IT', 'COMP:P', '-SPEC:uWH', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', '-SPEC:ADV', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
lui             ['LANG:EN']
lui-            {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', 'PF:lui', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:VA/inf', 'LANG:IT', 'COMP:P', '-SPEC:uWH', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', '-SPEC:ADV', '-COMP:*', '-COMP:WH', 'COMP:C', 'LF:he', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
lei             ['LANG:EN']
lei-            {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', 'PF:lei', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', 'LF:she', '-COMP:VA/inf', 'LANG:IT', 'COMP:P', '-SPEC:uWH', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', '-SPEC:ADV', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
noi             ['LANG:EN']
noi-            {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'PF:noi', '-COMP:A', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:VA/inf', 'LANG:IT', 'COMP:P', '-SPEC:uWH', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'LF:we', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', '-SPEC:ADV', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
voi             ['LANG:EN']
voi-            {'-COMP:N', 'PF:voi', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:VA/inf', 'LANG:IT', 'COMP:P', '-SPEC:uWH', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'LF:you_pl', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', '-SPEC:ADV', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
loro            ['LANG:EN']
loro-           {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:VA/inf', 'LANG:IT', 'COMP:P', '-SPEC:uWH', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'LF:they', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', '-SPEC:ADV', 'PF:loro', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
mi              ['LANG:EN']
mi-             {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:VA/inf', 'LANG:IT', 'COMP:P', '-SPEC:uWH', 'LF:me', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', 'PF:mi(cl)', '-SPEC:R', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', '-SPEC:ADV', 'CL', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
la              ['LANG:EN']
la-             {'-COMP:N', 'LF:her', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:VA/inf', 'LANG:IT', 'COMP:P', '-SPEC:uWH', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', 'PF:la(cl)', '-SPEC:ADV', 'CL', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
lo              ['LANG:EN']
lo-             {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'PF:lo(cl)', '-COMP:A', 'LF:him', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:VA/inf', 'LANG:IT', 'COMP:P', '-SPEC:uWH', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', '-SPEC:ADV', 'CL', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
si              ['LANG:EN']
si-             {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:VA/inf', 'LANG:IT', 'COMP:P', '-SPEC:uWH', 'N', '-COMP:C/fin', 'LF:3sg', 'COMP:D/rel', 'COMP:T/prt', 'PF:si(cl)', '-SPEC:R', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:INF', 'PHI_N', 'CAL:CL', '-SPEC:ADV', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', '-COMP:A', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:VA/inf', 'LANG:IT', 'COMP:P', '-SPEC:uWH', 'LF:there', 'N', '-COMP:C/fin', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'PF:ci', '-SPEC:C/fin', 'PHI_N', '-SPEC:INF', '-SPEC:ADV', '-COMP:*', '-COMP:WH', 'COMP:C', '-SPEC:V', '-COMP:v', 'COMP:R/D'}
[-n]            {'LANG:FI', 'inflectional', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI'}
[-t]            {'LANG:FI', 'inflectional', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:2', 'PHI'}
[-V]            {'LANG:FI', 'inflectional', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI'}
[-mme]          {'LANG:FI', 'inflectional', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI', 'PHI:NUM:PL'}
[-mme]          {'LANG:FI', 'inflectional', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:PL'}
[-tte]          {'LANG:FI', 'inflectional', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:2', 'PHI', 'PHI:NUM:PL'}
[-vat]          {'LANG:FI', 'inflectional', 'PHI', 'PHI:PER:3', 'PHI:NUM:PL'}
[-ni]           {'LANG:FI', 'inflectional', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI'}
[-si]           {'LANG:FI', 'inflectional', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:2', 'PHI'}
[-nsa]          {'LANG:FI', 'inflectional', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI'}
[-an]           {'LANG:FI', 'inflectional', 'PHI:NUM:SG', 'PHI:DET:DET', 'PHI:PER:3', 'PHI'}
[-nne]          {'LANG:FI', 'inflectional', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:2', 'PHI:NUM:PL'}
[-s]            {'inflectional', 'PHI:NUM:SG', 'PHI:GEN:F', 'LANG:EN', 'PHI:GEN:M', 'PHI:PER:3', 'PHI'}
[-0]            {'PHI:NUM:SG', 'PHI:PER:1', 'PHI:GEN:N', 'PHI:DET:DEF', 'PHI:NUM:PL', 'inflectional', 'LANG:EN', 'PHI:PER:2', 'PHI:PER:3', 'PHI'}
[-o]            {'inflectional', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI'}
[-i]            {'inflectional', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:2', 'LANG:IT', 'PHI'}
[-a]            {'inflectional', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:3', 'LANG:IT', 'PHI'}
[-e]            {'inflectional', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:3', 'LANG:IT', 'PHI'}
[-iamo]         {'inflectional', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI', 'LANG:IT', 'PHI:NUM:PL'}
[-te]           {'inflectional', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:2', 'PHI', 'LANG:IT', 'PHI:NUM:PL'}
[-no]           {'inflectional', 'PHI:DET:DEF', 'PHI', 'PHI:PER:3', 'LANG:IT', 'PHI:NUM:PL'}
[-nom]          {'inflectional', 'NOM', 'TAIL:FIN,ARG,VAL', 'adjoinable', 'LANG:EN'}
[-par]          {'LANG:FI', 'inflectional', 'PAR', 'adjoinable', 'TAIL:ARG,-VAL'}
[-gen]          {'inflectional', 'TAIL:INF,ARG', '-float', 'LANG:EN', 'GEN'}
gen             {'inflectional', 'TAIL:INF,ARG', '-float', 'LANG:EN', 'GEN'}
[-n_acc]        {'n-ACC', 'LANG:FI', 'inflectional', 'TAIL:PHI', 'adjoinable', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG'}
[-t_acc]        {'LANG:FI', 'inflectional', 't-ACC', 'adjoinable', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG'}
[-0_acc]        {'LANG:FI', 'inflectional', '0_ACC', 'adjoinable', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'TAIL:*PHI'}
asp             {'inflectional', 'LANG:EN', 'ASP:BOUNDED'}
a'              {'PF:a', 'LANG:X', 'LF:A', 'a'}
b'              {'b', 'LF:B', 'PF:b', 'LANG:X'}
b''             {'-COMP:c', 'b', 'LF:B', 'PF:b', 'LANG:EN'}
c''             {'SPEC:a', 'LF:C', 'LANG:EN', 'c', 'PF:c'}
c'              {'LF:C', 'c', 'LANG:X', 'PF:c'}
d'              {'d', 'LANG:', 'PF:d', 'LF:D'}
a''             ['LANG:EN']
x'              {'x', 'LF:X', 'LANG:X', 'PF:x'}
y'              {'PF:y', 'LANG:X', 'y', 'LF:Y'}
z'              {'LF:Z', 'z', 'LANG:X', 'PF:x'}
John'           {'LF:John', 'PF:John', "N'", 'LANG:X'}
admires'        {'LF:admires', 'PF:admires', "V'", 'LANG:X'}
admires''       {'-COMP:N', 'SPEC:P', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:DET:_', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'LF:admires', 'ARG', 'PHI:PER:_', 'ASP', 'PHI:NUM:_', '-VAL', 'COMP:P', 'PF:admires', 'V', '-COMP:v', 'SPEC:D'}
Mary'           {'PF:Mary', "N'", 'LF:mary', 'LANG:X'}
T/fin           {'PF:T', 'SPEC:*', '-SPEC:C', '-SPEC:T/fin', 'SPEC:TO/inf', '-SPEC:N', 'VAL', '!COMP:*', 'COMP:T/prt', 'COMP:V', 'PHI:DET:_', '-SPEC:v', 'PHI:GEN:_', 'SPEC:C/fin', 'LANG:EN', 'T/fin', '!SPEC:*', 'T', 'ARG', 'PHI:PER:_', '-SPEC:Neg', '!PROBE:V', 'PHI:NUM:_', 'SPEC:FORCE', '-COMP:INF', '-COMP:T/fin', '-SPEC:TO/inf', 'LF:T', 'COMP:v', '-SPEC:V', 'SPEC:D', 'FIN'}
v               {'!PROBE:V', 'v', 'ASP', 'PHI:NUM:_', '-SPEC:N', 'LF:v', 'PHI:GEN:_', '-VAL', '!COMP:*', 'PHI:DET:_', 'COMP:V', 'PHI:PER:_', 'PF:v', 'LANG:EN', 'ARG', 'SPEC:D'}
C/fin           {'SPEC:*', '-COMP:C/fin', 'LF:C/fin', '-SPEC:T/fin', '-ARG', '-SPEC:N', 'VAL', '!COMP:*', 'PF:C', 'COMP:T/fin', 'LANG:EN', 'C', '-SPEC:C/fin', 'COMP:Neg/fin', '-COMP:T/prt', '!PROBE:FIN', 'C/fin', 'FIN'}
T               {'PF:T', 'SPEC:*', 'COMP:T/prt', '-SPEC:N', '-SPEC:T/fin', 'PHI:GEN:_', 'VAL', '!COMP:*', 'PHI:DET:_', 'COMP:V', '-COMP:NEG', 'LANG:EN', '-SPEC:FORCE', 'T', 'ARG', 'PHI:PER:_', '!PROBE:V', 'PHI:NUM:_', 'LF:T', 'COMP:v', '-SPEC:V', 'SPEC:D', 'FIN'}
T/prt           {'SPEC:*', 'T/prt', 'COMP:T/prt', '-SPEC:N', '-SPEC:T/fin', 'PHI:GEN:_', 'VAL', '!COMP:*', 'PHI:DET:_', 'LF:T/prt', 'COMP:V', '-COMP:NEG', 'PF:T/prt', 'LANG:EN', '-SPEC:FORCE', 'COMP:D', '-SPEC:C/fin', 'T', 'ARG', 'PHI:PER:_', '!PROBE:V', 'PHI:NUM:_', 'COMP:v', '-SPEC:V', 'SPEC:D', 'FIN'}
a0              {'-SPEC:D', 'COMP:0', '-adjoinable', 'A', 'LANG:EN', 'PF:A', '-SPEC:A', 'LF:A', 'TAIL:D'}
n               {'-COMP:N', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'COMP:0', '-COMP:A', 'VAL', '!COMP:*', 'PHI:DET:_', 'LANG:EN', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', 'ARG', 'PHI:NUM:_', '-COMP:VA/inf', 'INF', 'COMP:P', '-SPEC:uWH', 'PF:n', 'N', 'LF:n', '-COMP:C/fin', 'SPEC:*', 'COMP:D/rel', 'COMP:T/prt', 'PHI:GEN:_', 'COMP:V', '-SPEC:R', '-COMP:AUX', '!SPEC:*', '-SPEC:INF', '-SPEC:C/fin', 'PHI:PER:_', '!SPEC:D', '-SPEC:ADV', '-COMP:WH', 'COMP:C', '-SPEC:V', 'COMP:v', 'n', '-COMP:v', 'COMP:R/D'}
impass          {'ARG', 'v', '!PROBE:V', 'ASP', 'PHI:NUM:_', '-SPEC:N', 'PHI:GEN:_', 'PF:impass', '-VAL', '!COMP:*', 'COMP:V', 'PHI:PER:_', 'PHI:DET:_', 'LANG:EN', 'LF:impass', 'SPEC:D'}
cau             {'!PROBE:V', 'v', 'ASP', 'PHI:NUM:_', '-SPEC:N', 'PHI:GEN:_', '-VAL', '!COMP:*', 'PHI:DET:_', 'COMP:V', 'PHI:PER:_', 'PF:Cau', 'LANG:EN', 'ARG', 'SPEC:D', 'LF:v/Cause'}
INF             {'-COMP:C/fin', 'INF', '-SPEC:T/fin', '-COMP:T/fin', 'LF:INF', '!COMP:*', 'COMP:V', 'PF:INF', 'COMP:v', '-SPEC:V', 'LANG:EN', '-COMP:FORCE'}
prtcpl          {'SPEC:*', 'T/prt', '-COMP:C/fin', '-SPEC:N', '-SPEC:T/fin', 'COMP:T/prt', 'PHI:GEN:_', 'VAL', '!COMP:*', 'PHI:DET:_', 'LF:T/prt', 'COMP:V', '-COMP:NEG', 'PF:T/prt', 'LANG:EN', '-SPEC:FORCE', 'T', 'COMP:D', '-SPEC:C/fin', 'ARG', 'PHI:PER:_', '!PROBE:V', 'PHI:NUM:_', 'INF', '-COMP:T/fin', 'COMP:v', '-SPEC:V', '-COMP:FORCE', 'SPEC:D', 'FIN'}
TO/inf          {'?ARG', '-COMP:C/fin', '-SPEC:T/fin', '!COMP:*', 'LF:TO/inf', 'COMP:V', '-SPEC:v', '!COMP:V', 'adjoinable', 'LANG:EN', 'INF', '-COMP:T/fin', '-VAL', 'TO/inf', 'COMP:v', '-SPEC:V', 'PF:TO/inf', '-COMP:FORCE'}
A/inf           {'?ARG', 'SPEC:*', '-COMP:C/fin', 'LF:A/inf', '-SPEC:T/fin', '!COMP:*', 'COMP:V', '?VAL', 'LANG:EN', 'PF:A/inf', 'INF', '-SPEC:Neg/fin', '-COMP:T/fin', 'A/inf', 'COMP:v', '-SPEC:V', '-COMP:FORCE'}
ARE/inf         {'?ARG', 'PF:are', 'SPEC:*', '-COMP:C/fin', '-SPEC:T/fin', 'VAL', '!COMP:*', 'COMP:V', 'LANG:EN', 'INF', 'LF:ARE/inf', '-COMP:T/fin', 'ARE/inf', '-adjoinable', 'COMP:v', '-SPEC:V', '-COMP:FORCE'}
ESSA/inf        {'TAIL:T', '?ARG', 'SPEC:*', '-COMP:C/fin', '-SPEC:N', '-SPEC:T/fin', '!COMP:*', 'COMP:V', '?VAL', 'LANG:EN', 'adjoinable', '-SPEC:FORCE', 'ADV', 'INF', '-SPEC:Neg/fin', 'PF:essa', '-COMP:T/fin', 'COMP:v', '-SPEC:V', 'LF:while', 'ESSA/inf', '-COMP:FORCE'}
TUA/inf         {'TAIL:T', '-COMP:C/fin', 'SPEC:*', '-SPEC:N', '-SPEC:T/fin', 'PHI:GEN:_', 'VAL', '!COMP:*', 'PHI:DET:_', 'COMP:V', 'LANG:EN', 'adjoinable', '!SPEC:*', 'ADV', '-SPEC:FORCE', 'ARG', 'PHI:PER:_', 'PHI:NUM:_', 'TUA/inf', 'INF', '-SPEC:Neg/fin', 'LF:after', 'PF:tua', '-COMP:T/fin', 'COMP:v', '-SPEC:V', '-COMP:FORCE'}
VA/inf          {'-COMP:C/fin', 'SPEC:*', '-SPEC:N', '-SPEC:T/fin', 'PHI:GEN:_', 'VA/inf', 'VAL', '!COMP:*', 'COMP:V', 'PHI:DET:_', 'LANG:EN', 'LF:VA', '!SPEC:*', 'ARG', 'PHI:PER:_', 'PHI:NUM:_', 'INF', 'PF:vAn', '-COMP:T/fin', 'COMP:v', '-SPEC:V', '-COMP:FORCE'}
MA/ssa          {'LF:in_doing', '-SPEC:N', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:DET:_', 'MA/ssa', 'COMP:V', 'PF:massa', 'adjoinable', 'LANG:EN', '-SPEC:FORCE', 'ADV', 'ARG', 'PHI:PER:_', 'TAIL:V', '-SPEC:*', 'PHI:NUM:_', '-SPEC:Neg/fin', '-VAL', 'MA/inf', 'COMP:v'}
MA/tta          {'TAIL:T', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:T/fin', 'PHI:GEN:_', '-VAL', 'PHI:DET:_', 'PHI:PER:_', 'MA/inf', 'adjoinable', 'LANG:EN', 'PF:matta', 'ADV', 'ARG', 'LF:without_doing'}
MA/lla          {'-SPEC:N', '-SPEC:T/fin', 'PHI:DET:_', 'LANG:EN', '-SPEC:FORCE', 'ADV', 'ARG', 'PHI:NUM:_', '-SPEC:Neg/fin', 'LF:by_doing', 'TAIL:T', 'PF:malla', 'PHI:GEN:_', 'COMP:V', 'adjoinable', 'PHI:PER:_', '-VAL', 'MA/inf', 'COMP:v'}
MA/inf          {'LF:to_do', '-SPEC:N', '-SPEC:T/fin', 'PHI:DET:_', 'LANG:EN', '-SPEC:FORCE', 'ADV', 'ARG', 'TAIL:V', 'PHI:NUM:_', '-SPEC:Neg/fin', 'PHI:GEN:_', 'COMP:V', 'adjoinable', 'PHI:PER:_', 'PF:maan', '-VAL', 'MA/inf', 'COMP:v'}
E/inf           {'TAIL:T', 'PF:en', 'SPEC:*', '-ARG', 'LF:by', '-SPEC:Neg/fin', '-SPEC:N', '-VAL', '-SPEC:T/fin', 'LANG:FI', 'adjoinable', '-SPEC:FORCE', 'ADV'}
BE-             {'PF:BE', '-COMP:N', 'SPEC:P', '-ARG', 'COMP:T/prt', '-SPEC:T/fin', 'SPEC:TO/inf', '!COMP:*', 'LANG:EN', '-COMP:V', '-SPEC:FORCE', 'SPEC:ADV', 'ASP', '-COMP:T/fin', '-VAL', 'LF:BE', 'COMP:P', 'V', 'COPULA', '-COMP:v', 'SPEC:D'}
D               {'-ARG', '-SPEC:MA/lla', '-SPEC:C', '-SPEC:T/fin', '!COMP:*', '-COMP:uR', '-COMP:D', 'LF:D', 'LANG:EN', 'adjoinable', '-SPEC:P', '-SPEC:INF', 'PF:D', '-SPEC:Neg/fin', '!PROBE:N', 'COMP:N', '-COMP:T/fin', 'D', '-SPEC:V', 'OP', '-COMP:P'}
D/rel           {'-COMP:C/fin', '-SPEC:C', '-SPEC:T/fin', '-ARG', '-SPEC:MA/lla', '!COMP:*', 'LF:D/rel', '-COMP:uR', '-COMP:D', 'inflectional', 'adjoinable', 'LANG:EN', '-SPEC:P', 'PF:D/rel', 'OP:_', '-SPEC:INF', 'D/rel', 'OP:REL', '-SPEC:Neg/fin', '!PROBE:N', 'COMP:N', '-COMP:T/fin', 'D', '-SPEC:V', 'OP'}
P               {'-COMP:N', '-float', '-SPEC:C', '-SPEC:N', '-SPEC:T/fin', 'PHI:GEN:_', '!COMP:*', '-COMP:A', 'PHI:DET:_', '-SPEC:v', 'LANG:EN', '-SPEC:P', '-SPEC:FORCE', 'COMP:D', 'adjoinable', '-SPEC:INF', 'ARG', '-SPEC:C/fin', 'PHI:PER:_', 'PF:P', '-SPEC:ADV', '-SPEC:*', 'PHI:NUM:_', '-COMP:T', 'P', '-SPEC:Neg/fin', '-COMP:uWH', '-COMP:T/fin', '-VAL', '-COMP:ADV', '-SPEC:iR', '-SPEC:V', 'LF:P', '-SPEC:iWH'}
pro             ['LANG:EN']
pro-            {'-COMP:N', '-COMP:C/fin', '-SPEC:N', 'SPEC:A', '-SPEC:T/fin', 'COMP:R', 'PF:(pro)', '-COMP:A', 'COMP:D/rel', 'COMP:T/prt', '-SPEC:R', '-COMP:AUX', 'LANG:EN', '-SPEC:P', '-COMP:V', '-SPEC:FORCE', 'COMP:uR', '-SPEC:C/fin', '-SPEC:INF', 'COMP:R/D', 'PHI', '-SPEC:ADV', '-COMP:VA/inf', 'LF:pro', '-COMP:WH', 'COMP:P', 'COMP:C', '-SPEC:uWH', '-SPEC:V', '-COMP:v', 'N'}
cl              {'LEFT:D,CL', 'RIGHT:ARE/inf', 'inflectional', 'LEFT:T/fin', 'CL', 'LANG:EN', 'RIGHT:PRG'}
inc             {'inflectional', 'LANG:EN', 'INCORPORATED'}
sg              {'inflectional', 'PHI:NUM:SG', 'LANG:EN'}
pl              {'inflectional', 'LANG:EN', 'PHI:NUM:PL'}
1p              {'inflectional', 'PHI:PER:1', 'LANG:EN'}
2p              {'inflectional', 'PHI:PER:2', 'LANG:EN'}
3p              {'inflectional', 'PHI:PER:3', 'LANG:EN'}
def             {'PHI:DET:DEF', 'inflectional', 'LANG:EN'}
indef           {'inflectional', 'PHI:DET:INDEF', 'LANG:EN'}
hum             {'inflectional', 'PHI:HUM:HUM', 'LANG:EN'}
nonhum          {'inflectional', 'PHI:HUM:NONHUM', 'LANG:EN'}
m               {'PHI:GEN:M', 'inflectional', 'LANG:EN'}
f               {'inflectional', 'PHI:GEN:F', 'LANG:EN'}
nom             {'inflectional', 'NOM', 'LANG:EN', 'TAIL:FIN,!COMP:*,VAL'}
acc             {'inflectional', 'TAIL:v', 'ACC', 'LANG:EN'}
dat             {'DAT', 'inflectional', 'TAIL:v', 'LANG:EN'}
uC/op           {'uC/op', 'inflectional', 'LANG:EN'}
wh              {'OP:WH', 'OP:_', 'inflectional', 'LANG:EN'}
wh_             {'OP', 'inflectional', 'FORCE:OP:WH', 'LANG:EN', 'OP:_'}
top             {'inflectional', 'OP:TOP', 'LANG:EN'}
foc             {'inflectional', 'OP:FOC', 'LANG:EN'}
C/op            {'inflectional', 'OP:C/OP', 'LANG:EN'}
Q               {'OP', 'inflectional', 'LANG:EN', 'OP:WH', 'OP:Q'}
