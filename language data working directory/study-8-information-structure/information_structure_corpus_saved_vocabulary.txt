ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'-SPEC:C/fin', '-COMP:N', '-SPEC:P', '-SPEC:iWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iR', 'LF:to', '-SPEC:Neg/fin', '-ARG', 'LANG:IT', '-SPEC:v', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', 'adjoinable', '-SPEC:*', '-VAL', '-SPEC:ADV', 'TAIL:V', 'P', 'PF:a', '!COMP:*', 'COMP:D', '-SPEC:C', '-COMP:A', 'COMP:ARE/inf', '-COMP:uWH', '-COMP:T', '-SPEC:INF'}
a_D             {'-SPEC:P', '-COMP:T/fin', 'D', '-SPEC:Neg/fin', '-ARG', 'PF:D', '-COMP:D', '-SPEC:V', 'COMP:N', 'OP', 'adjoinable', '-COMP:P', '-SPEC:MA/lla', '-COMP:uR', 'LANG:EN', '!COMP:*', '-SPEC:C', '!PROBE:N', 'LF:D', '-SPEC:T/fin', '-SPEC:INF'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'SPEC:P', '-SPEC:FORCE', '-SPEC:Neg', 'PF:admire', 'ARG', 'SPEC:TO/inf', 'COMP:P', '-COMP:P', 'LF:admire', 'PHI:PER:_', '-COMP:V', 'PHI:GEN:_', '-COMP:v', '-COMP:Neg', 'LANG:EN', 'ASP', 'COMP:D', 'CLASS:TR', 'SPEC:ADV', '!COMP:*', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
admire*         ['LANG:EN']
T/fin*          {'LF:T', 'T/fin', '!SPEC:*', '-SPEC:TO/inf', '-COMP:T/fin', '-SPEC:C', 'FIN', 'COMP:v', 'SPEC:D', 'COMP:T/prt', '-COMP:INF', '-SPEC:v', 'ARG', 'SPEC:TO/inf', '-SPEC:N', '-SPEC:Neg', 'COMP:V', '-SPEC:V', 'SPEC:FORCE', 'NO_NUMBER', 'PHI:PER:_', 'PHI:GEN:_', 'LANG:EN', 'NO_DET', '!COMP:*', 'T', "PF:T/fin'", '!PROBE:V', '-VAL', 'SPEC:C/fin', '-SPEC:T/fin'}
v*              {'PHI:PER:_', 'NO_NUMBER', 'PF:v', '!PROBE:V', 'PHI:GEN:_', 'LANG:EN', 'NO_DET', '!COMP:*', 'SPEC:D', 'ASP', 'LF:v', 'v', '-VAL', 'ARG', 'COMP:V', '-SPEC:N'}
admire**        ['LANG:EN']
T/fin**         {'LF:T', 'T/fin', '!SPEC:*', '-SPEC:TO/inf', '-COMP:T/fin', '-SPEC:C', 'FIN', 'COMP:v', 'SPEC:D', 'COMP:T/prt', '-COMP:INF', 'NO_PERSON', '-SPEC:v', 'PHI:PER:3', 'ARG', 'SPEC:TO/inf', '-SPEC:N', '-SPEC:Neg', 'COMP:V', '-SPEC:V', 'NO_NUMBER', 'SPEC:FORCE', 'PHI:GEN:_', 'LANG:EN', 'NO_DET', '!COMP:*', 'T', "PF:T/fin''", '!PROBE:V', '-VAL', 'SPEC:C/fin', '-SPEC:T/fin'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'PHI:NUM:_', 'PHI:DET:_', 'SPEC:P', 'LANG:IT', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PF:adora', 'LF:admire', 'PHI:PER:_', '-COMP:V', 'PHI:GEN:_', '-COMP:v', 'ASP', 'COMP:D', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
antaa           ['LANG:FI']
anta-           {'PHI:NUM:_', 'PF:antaa', 'LANG:FI', '+SEM:directional', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', '-SPEC:FORCE', 'ARG', '-COMP:FIN', 'SPEC:TO/inf', 'CLASS:DITR', 'COMP:P', 'PHI:PER:_', '-COMP:V', '-COMP:v', 'ASP', 'COMP:D', 'SPEC:ADV', 'LF:give', '!COMP:*', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin', 'ASP:BOUNDED'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'PHI:NUM:_', 'PF:ask', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', 'ASP', 'COMP:D', 'SPEC:ADV', 'V', 'SEM:internal', '-VAL', '-COMP:N', '-SPEC:T/fin', 'LF:ask'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'COMP:C', 'COMP:R/D', 'LANG:FI', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'PF:avain', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', 'LF:key', '-COMP:WH', '-SPEC:ADV', 'COMP:P', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', '-SEM:directional', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'COMP:C', 'COMP:R/D', 'LANG:FI', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'PF:auto', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', 'LF:car', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', '-SEM:directional', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
bank            {'COMP:C', 'COMP:R/D', '-SPEC:P', '-SPEC:R', 'FREQ:1', '-COMP:AUX', 'PF:bank1', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', 'LANG:EN', 'COMP:uR', '-COMP:VA/inf', 'LF:bank_inst', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
bank            {'COMP:C', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', 'FREQ:2', '-SPEC:N', '-SPEC:V', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'LF:bank_river', 'SPEC:A', '-COMP:v', 'LANG:EN', 'COMP:uR', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', 'PF:bank2', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
barn            {'COMP:C', 'COMP:R/D', 'PF:barn', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', 'LF:barn', 'LANG:EN', 'COMP:uR', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
city            {'LF:city', 'COMP:C', 'COMP:R/D', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-COMP:A', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', 'LANG:EN', 'COMP:uR', '-COMP:VA/inf', '-COMP:C/fin', 'PF:city', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
che             ['LANG:IT']
che-            {'-SPEC:R', '-COMP:AUX', '-COMP:*', '-SPEC:N', 'LF:who', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'PF:che', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'LANG:IT', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin'}
chiamato        ['LANG:IT']
chiamata-       {'PHI:NUM:_', 'PF:chiamato', 'PHI:DET:_', 'SPEC:P', 'LANG:IT', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'PHI:GEN:_', '-COMP:v', 'LF:called', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
claims          ['LANG:EN']
claim-          {'PHI:NUM:_', 'PF:claim', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', 'LF:claim', '-COMP:D', '-SPEC:FORCE', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', 'COMP:T/fin'}
danno           {'COMP:C', 'LF:damage', 'COMP:R/D', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'PF:danno', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'LANG:IT', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'PHI:NUM:_', '-COMP:N', 'PHI:DET:_', 'SPEC:P', 'LF:detest', 'LANG:IT', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'PHI:GEN:_', '-COMP:v', 'ASP', 'COMP:D', 'PF:detest', 'SPEC:ADV', 'V', 'SEM:internal', '-VAL', 'COMP:ARE/inf', '-SPEC:T/fin'}
devono          ['LANG:EN']
deva-           {'PHI:NUM:_', '-COMP:N', 'LF:must', '-ASP', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', 'LANG:IT', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'PF:deva', 'PHI:GEN:_', '-COMP:v', 'SPEC:ADV', 'V', 'SEM:internal', '-VAL', 'COMP:ARE/inf', '-SPEC:T/fin'}
di              {'PHI:NUM:_', '-SPEC:C/fin', '-COMP:N', '-SPEC:P', 'LANG:FI', '-SPEC:iWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iR', 'SPEC:*', 'PHI:DET:_', '-SPEC:Neg/fin', '-COMP:A', 'LF:of', '-SPEC:v', 'ARG', '-SPEC:T/fin', '-SPEC:N', '-SPEC:FORCE', '-SPEC:V', 'PF:di', '-SPEC:ADV', 'PHI:PER:_', 'P', '!COMP:*', 'COMP:D', '-SPEC:C', '-VAL', '-COMP:T', '-COMP:uWH', '-adjoinable', '-SPEC:INF'}
does            {'PHI:NUM:_', '!SPEC:*', '-SPEC:TO/inf', 'SPEC:*', 'COMP:v', 'PHI:GEN:M', '-COMP:INF', '-SPEC:v', 'PHI:PER:3', 'ARG', 'SPEC:TO/inf', '-SPEC:N', 'PHI:PER:_', 'LF:does', 'LANG:EN', 'PHI:GEN:F', 'COMP:Neg', '!PROBE:V', 'SPEC:C/fin', '-SPEC:T/fin', 'T/fin', '-COMP:T/fin', 'FIN', 'PHI:DET:_', 'SPEC:D', 'COMP:T/prt', 'VAL', '-SPEC:Neg', 'COMP:V', '-SPEC:V', 'SPEC:FORCE', 'PHI:GEN:_', '!COMP:*', 'T', 'PF:does', '-SPEC:C', 'PHI:NUM:SG'}
does_C          ['LANG:EN']
does-           {'PHI:NUM:_', '!SPEC:*', '-SPEC:TO/inf', 'SPEC:*', 'COMP:v', 'PHI:GEN:M', '-COMP:INF', '-SPEC:v', 'PHI:PER:3', 'ARG', 'SPEC:TO/inf', '-SPEC:N', 'PHI:PER:_', 'LF:does', 'LANG:EN', 'PHI:GEN:F', 'COMP:Neg', '!PROBE:V', 'SPEC:C/fin', '-SPEC:T/fin', 'T/fin', '-COMP:T/fin', 'FIN', 'PHI:DET:_', 'SPEC:D', 'COMP:T/prt', 'VAL', '-SPEC:Neg', 'COMP:V', '-SPEC:V', 'SPEC:FORCE', 'PHI:GEN:_', '!COMP:*', 'T', 'PF:does', '-SPEC:C', 'PHI:NUM:SG'}
dorme           ['LANG:IT']
dorme-          {'PHI:NUM:_', 'CLASS:INTR', '!SPEC:D', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', '-COMP:D', '-SPEC:FORCE', 'ARG', '-COMP:MA/inf', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'PF:dorme', 'LF:sleep', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
disappeared     ['LANG:EN']
disappear-      {'PHI:NUM:_', 'CLASS:INTR', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', '-COMP:D', 'PF:disappear', '-SPEC:FORCE', 'ARG', '-COMP:MA/inf', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', 'ASP', 'LF:disappear', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'0', 'SPEC:D', 'PF:easy', '2SPEC', 'LF:easy', 'LANG:EN'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'PHI:NUM:_', '!SPEC:*', 'PF:ei', 'LANG:FI', '-SPEC:T', 'SPEC:*', 'FIN', 'POL:NEG', 'PHI:DET:_', 'COMP:T/prt', '%SPEC:INF', 'VAL', 'ARG', 'Neg/fin', 'LF:neg', 'NEG', '!COMP:*', '!COMP:T', 'PHI:PER:_', 'SEM:internal', '-SPEC:T/fin'}
e-              {'PHI:NUM:_', '!SPEC:*', 'PF:ei', 'LANG:FI', '-SPEC:T', 'SPEC:*', 'FIN', 'POL:NEG', 'PHI:DET:_', 'COMP:T/prt', '%SPEC:INF', 'VAL', 'ARG', 'Neg/fin', 'LF:neg', 'NEG', '!COMP:*', '!COMP:T', 'PHI:PER:_', 'SEM:internal', '-SPEC:T/fin'}
elaa            ['LANG:FI']
ela-            {'PHI:NUM:_', 'CLASS:INTR', 'LANG:FI', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', '-COMP:D', '-SPEC:FORCE', 'ARG', '-COMP:MA/inf', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', 'LF:live', '-COMP:V', '-COMP:v', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin', 'PF:elaa'}
etsii           ['LANG:FI']
etsi-           {'!COMP:D', 'PHI:NUM:_', 'LF:search', 'LANG:FI', 'PHI:DET:_', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PF:etsi', '-COMP:P', 'PHI:PER:_', '-COMP:V', '-COMP:v', 'ASP', 'COMP:D', 'CLASS:TR', 'SPEC:ADV', '!COMP:*', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
etta            {'-SPEC:*', '!PROBE:FIN', 'COMP:C/fin', 'PF:etta', 'LF:that', 'LANG:FI', 'FORCE', 'FIN', '!COMP:*', '-SPEC:D', '-ARG', '-VAL', 'COMP:T/fin'}
fell            ['LANG:EN']
fell-           {'PF:fell', 'PHI:NUM:_', 'CLASS:INTR', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', '-COMP:D', '-SPEC:FORCE', 'LF:fell', 'ARG', '-COMP:MA/inf', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
flow'           {'PHI:NUM:_', 'PF:flow', 'PHI:DET:_', 'SPEC:D', 'LF:flow', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
from            {'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:P', '-SPEC:iWH', '-COMP:T/fin', '-COMP:ADV', 'LF:from', '-SPEC:iR', '-float', 'PHI:DET:_', '-SPEC:Neg/fin', '-COMP:A', '-SPEC:v', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:V', '-SPEC:*', 'adjoinable', 'TAIL:V,+SEM:directional', '-SPEC:ADV', 'PHI:PER:_', 'PHI:GEN:_', 'P', 'LANG:EN', '!COMP:*', 'COMP:D', 'PF:from', '-SPEC:C', '-VAL', '-COMP:N', '-COMP:uWH', '-COMP:T', '-SPEC:INF'}
gave            ['LANG:EN']
give-           {'PHI:NUM:_', '+SEM:directional', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', '-SPEC:FORCE', 'ARG', '-COMP:FIN', 'SPEC:TO/inf', 'CLASS:DITR', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'PF:give', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', 'ASP', 'COMP:D', 'SPEC:ADV', 'LF:give', '!COMP:*', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'COMP:C', 'COMP:R/D', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'LANG:IT', 'PF:Giuseppe', '-SPEC:FORCE', '-SPEC:V', 'LF:Giuseppe', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', '-SEM:directional', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'PHI:NUM:_', 'PF:haluaa', 'LANG:FI', 'PHI:DET:_', 'COMP:A/inf', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', '-SPEC:*', 'COMP:P', '-COMP:P', 'PHI:PER:_', '-COMP:V', '-COMP:v', 'ASP', 'COMP:D', 'CLASS:TR', 'SPEC:ADV', '!COMP:*', 'V', 'SEM:internal', '-VAL', '-COMP:N', '-SPEC:T/fin', 'LF:want', 'ASP:BOUNDED'}
hairitsee       ['LANG:FI']
hairitse-       {'!COMP:D', 'PHI:NUM:_', 'LANG:FI', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', '-SPEC:FORCE', 'ARG', '-COMP:FIN', 'SPEC:TO/inf', 'LF:disturb', 'COMP:P', '-COMP:P', 'PHI:PER:_', 'PF:hairitsee', '-COMP:V', '-COMP:v', 'ASP', 'COMP:D', 'CLASS:TR', 'SPEC:ADV', '!COMP:*', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'PF:ha', 'LF:have', 'PHI:NUM:_', 'SPEC:*', '-ASP', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', 'LANG:IT', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'PHI:GEN:_', 'COMP:T', '-COMP:v', 'SPEC:ADV', 'V', 'SEM:internal', '-VAL', '-COMP:N', '-SPEC:T/fin'}
horse           {'COMP:C', 'COMP:R/D', '-SPEC:P', 'LF:horse', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', 'LANG:EN', 'COMP:uR', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', 'PF:horse', '-SPEC:INF'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'PHI:NUM:_', 'CLASS:INTR', 'LANG:FI', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', '-COMP:D', '-SPEC:FORCE', 'ARG', '-COMP:MA/inf', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'PF:havia', '-COMP:v', 'ASP', 'LF:disappear', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
Helsingissa     ['LANG:FI']
Helsinki        ['LANG:FI']
Helsinki-       {'COMP:C', 'COMP:R/D', 'LANG:FI', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'PF:Helsinki', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', 'LF:Helsinki', '-COMP:WH', '-SPEC:ADV', 'COMP:P', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'!COMP:D', 'PHI:NUM:_', 'LANG:FI', 'PHI:DET:_', 'SPEC:P', '-SPEC:FORCE', 'ARG', '-COMP:FIN', 'SPEC:TO/inf', 'COMP:P', '-COMP:P', 'LF:admire', 'PHI:PER:_', '-COMP:V', '-COMP:v', 'PF:ihaile-', 'ASP', 'COMP:D', 'CLASS:TR', 'SPEC:ADV', '!COMP:*', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
il              {'-SPEC:P', '-COMP:T/fin', 'D', 'LF:the', '-SPEC:Neg/fin', '-ARG', 'LANG:IT', '-COMP:D', 'PF:il', 'COMP:N', 'OP', '-SPEC:V', 'adjoinable', '-COMP:P', '-SPEC:MA/lla', '-COMP:uR', '!COMP:*', '-SPEC:C', '!PROBE:N', '-SPEC:T/fin', '-SPEC:INF'}
i               {'-SPEC:P', '-COMP:T/fin', 'D', 'LF:the', '-SPEC:Neg/fin', '-ARG', 'LANG:IT', '-COMP:D', 'PF:il', 'COMP:N', 'OP', '-SPEC:V', 'adjoinable', '-COMP:P', '-SPEC:MA/lla', '-COMP:uR', '!COMP:*', '-SPEC:C', '!PROBE:N', '-SPEC:T/fin', '-SPEC:INF'}
in              {'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:P', '-SPEC:iWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iR', '-SPEC:C', 'PHI:DET:_', '-SPEC:Neg/fin', 'PF:in', 'LANG:IT', '-COMP:A', '-SPEC:v', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:V', 'adjoinable', '-SPEC:ADV', 'PHI:PER:_', 'PHI:GEN:_', 'P', '!COMP:*', 'COMP:D', 'LF:in', '-VAL', '-COMP:N', '-COMP:uWH', '-COMP:T', '-SPEC:INF'}
infermieri      {'COMP:C', 'COMP:R/D', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'PF:infermieri', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'LANG:IT', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', 'LF:nurses', '-COMP:v', 'COMP:uR', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
is              ['LANG:EN']
be-             {'-COMP:N', 'SPEC:D', '-ARG', 'SPEC:P', 'COPULA', '-SPEC:FORCE', 'SPEC:TO/inf', 'COMP:P', '-COMP:V', '-COMP:v', 'LANG:EN', 'PF:be', '!COMP:*', 'ASP', 'SPEC:ADV', 'V', 'LF:be', '-VAL', '-COMP:TO/inf', '-SPEC:T/fin'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'PHI:NUM:_', 'CLASS:INTR', 'PF:istuu', 'LANG:FI', 'LF:sit', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', '-COMP:D', '-SPEC:FORCE', 'ARG', '-COMP:MA/inf', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', '-COMP:v', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
John            ['LANG:EN']
John-           {'-SPEC:R', '-COMP:AUX', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'LANG:EN', 'COMP:uR', '-SEM:directional', '-SPEC:T/fin', '-SPEC:INF', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'PF:John', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'LF:John', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-adjoinable'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'LANG:FI', '-SPEC:R', '-COMP:AUX', 'PF:joka', '-COMP:*', '-SPEC:N', 'LF:who', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'COMP:C', 'COMP:R/D', 'LANG:FI', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'LF:Jukka', '-SPEC:ADV', 'COMP:P', '-COMP:V', 'N', 'PF:Jukka', '-SPEC:uWH', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', '-SEM:directional', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'PHI:NUM:_', 'LF:run', '-COMP:N', 'LANG:FI', 'PHI:DET:_', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', '-COMP:v', 'ASP', 'SPEC:ADV', 'V', '-VAL', 'PF:juokse-', '-SPEC:T/fin'}
kaksi           {'PF:kaksi', 'PHI:NUM:_', 'LANG:FI', 'NUM', 'TAIL:ARG,VAL,FIN', 'SPEC:*', 'PHI:DET:_', 'LF:two', 'COMP:n', 'PHI:PER:_', '-VAL', 'PHI:NUM:SG', 'ARG', 'COMP:N'}
kaksi           {'PF:kaksi', 'TAIL:ARG,ASP:BOUNDED', 'NUM', 'LANG:EN', 'SPEC:*', 'LF:two', 'COMP:n', 'TAIL:*POL:NEG', 'COMP:N'}
kaksi_1         {'PF:kaksi', 'PHI:NUM:_', 'LANG:FI', 'NUM', 'TAIL:ARG,VAL,FIN', 'SPEC:*', 'PHI:DET:_', 'LF:two', 'COMP:n', 'PHI:PER:_', '-VAL', 'PHI:NUM:SG', 'ARG', 'COMP:N'}
kaksi_2         {'PF:kaksi', 'TAIL:ARG,ASP:BOUNDED', 'NUM', 'LANG:EN', 'SPEC:*', 'LF:two', 'COMP:n', 'TAIL:*POL:NEG', 'COMP:N'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'PF:kaksi', 'LF:two', 'COMP:n', 'LANG:FI', 'NUM', 'SPEC:*', 'COMP:N'}
kaupunkia       ['LANG:EN']
kaupunki        {'LF:city', 'COMP:C', 'COMP:R/D', 'LANG:FI', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', 'PF:kaupunki', '-SPEC:V', '-SPEC:N', '-COMP:WH', '-COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'!COMP:A/inf', 'PHI:NUM:_', 'LF:order', 'LANG:FI', 'SEM:external', 'PHI:DET:_', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', '-SPEC:*', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'PF:kaske', '-COMP:v', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'LF:watch', 'COMP:C', 'COMP:R/D', 'LANG:FI', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', 'PF:kello', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
kello0-         {'LF:watch', 'PF:kello', '0', 'SPEC:D', 'LANG:FI', '2SPEC'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'PF:key', 'COMP:C', 'COMP:R/D', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', 'LF:key', '-COMP:WH', '-SPEC:ADV', 'COMP:P', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', 'LANG:EN', 'COMP:uR', '-COMP:VA/inf', '-SEM:directional', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
kirja           ['LANG:FI']
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'PF:kirja', 'COMP:C', 'COMP:R/D', 'LANG:FI', 'LF:book', '-SPEC:R', '-SPEC:P', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', '-SEM:directional', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
knows           ['LANG:EN']
know-           {'PHI:NUM:_', 'PHI:DET:_', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', '-COMP:P', 'PHI:PER:_', '-COMP:V', 'LF:know', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', 'ASP', 'COMP:D', 'CLASS:TR', 'SPEC:ADV', '!COMP:*', 'V', '-VAL', '-COMP:N', 'PF:know', '-SPEC:T/fin'}
kohti           {'LF:towards', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:P', 'LANG:FI', '-SPEC:iWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iR', 'SPEC:*', 'PHI:DET:_', '-SPEC:Neg/fin', '-COMP:A', 'PF:kohti', '-SPEC:v', 'ARG', '-SPEC:T/fin', '-SPEC:N', '-SPEC:FORCE', '-SPEC:V', 'adjoinable', '-SPEC:ADV', 'TAIL:V', 'PHI:PER:_', 'P', '!COMP:*', 'COMP:D', '-SPEC:C', '-VAL', '-COMP:N', '-COMP:uWH', '-COMP:T', '-SPEC:INF'}
koko            {'LF:all', 'TAIL:T', 'LANG:FI', '-SPEC:P', '-COMP:T/fin', 'D', '-SPEC:Neg/fin', '-ARG', '-COMP:D', '-SPEC:V', 'adjoinable', 'OP', 'COMP:N', '-COMP:P', '-SPEC:MA/lla', 'PF:koko', '-COMP:uR', '!COMP:*', '-SPEC:C', '!PROBE:N', '-SPEC:T/fin', '-SPEC:INF'}
kuka            ['LANG:FI']
KUKA            ['LANG:FI']
kuka-           {'COMP:C', 'COMP:R/D', 'LANG:FI', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', 'LF:who', '-COMP:WH', '-SPEC:ADV', 'COMP:P', '-COMP:V', 'N', '-SPEC:uWH', 'PF:kuka', 'PHI', 'SPEC:A', '-COMP:v', 'COMP:uR', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'PHI:NUM:_', 'LANG:FI', 'PF:kuorsaa', '-COMP:T/fin', 'PHI:DET:_', 'SPEC:P', '-COMP:D', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', '-COMP:WH', 'PHI:PER:_', '-COMP:V', 'LF:snore', '-COMP:v', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
kysyi           ['LANG:EN']
kysy-           {'PHI:NUM:_', 'LANG:FI', 'PHI:DET:_', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'PF:kysya', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'COMP:FORCE:OP:WH', '-COMP:v', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin', 'LF:ask'}
lahella         {'PHI:NUM:_', '-SPEC:C/fin', '!SPEC:*', 'LANG:FI', 'SPEC:*', 'COMP:v', '-SPEC:Neg/fin', '-SPEC:v', 'ARG', '-SPEC:N', '-SPEC:ADV', '-COMP:FORCE', 'PHI:PER:_', 'P', 'COMP:D', '-COMP:T', '-SPEC:T/fin', 'LF:near', '-SPEC:INF', '-SPEC:P', '!SPEC:D', '-SPEC:iWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iR', 'PHI:DET:_', 'VAL', '-SPEC:FORCE', 'COMP:V', 'adjoinable', '-SPEC:V', 'INF', '!COMP:*', '-COMP:C/fin', '-SPEC:C', '-COMP:A', '-COMP:N', '-COMP:uWH', 'PF:lahella'}
lahella         {'!COMP:D', '-SPEC:C/fin', 'PHI:NUM:_', '-COMP:N', '-SPEC:P', 'LANG:FI', '-SPEC:iWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iR', 'SPEC:*', 'PHI:DET:_', '-SPEC:Neg/fin', '-COMP:A', '-SPEC:v', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:V', 'adjoinable', '-SPEC:ADV', 'PHI:PER:_', 'P', '!COMP:*', 'COMP:D', '-SPEC:C', '-VAL', '-COMP:T', '-COMP:uWH', 'PF:lahella', '-SPEC:INF', 'LF:near'}
lahella_1       {'!COMP:D', '-SPEC:C/fin', 'PHI:NUM:_', '-COMP:N', '-SPEC:P', 'LANG:FI', '-SPEC:iWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iR', 'SPEC:*', 'PHI:DET:_', '-SPEC:Neg/fin', '-COMP:A', '-SPEC:v', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:V', 'adjoinable', '-SPEC:ADV', 'PHI:PER:_', 'P', '!COMP:*', 'COMP:D', '-SPEC:C', '-VAL', '-COMP:T', '-COMP:uWH', 'PF:lahella', '-SPEC:INF', 'LF:near'}
lahella_2       {'PHI:NUM:_', '-SPEC:C/fin', '!SPEC:*', 'LANG:FI', 'SPEC:*', 'COMP:v', '-SPEC:Neg/fin', '-SPEC:v', 'ARG', '-SPEC:N', '-SPEC:ADV', '-COMP:FORCE', 'PHI:PER:_', 'P', 'COMP:D', '-COMP:T', '-SPEC:T/fin', 'LF:near', '-SPEC:INF', '-SPEC:P', '!SPEC:D', '-SPEC:iWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iR', 'PHI:DET:_', 'VAL', '-SPEC:FORCE', 'COMP:V', 'adjoinable', '-SPEC:V', 'INF', '!COMP:*', '-COMP:C/fin', '-SPEC:C', '-COMP:A', '-COMP:N', '-COMP:uWH', 'PF:lahella'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'PHI:NUM:_', 'CLASS:INTR', 'LANG:FI', 'PF:lahtea', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', '-COMP:D', '-SPEC:FORCE', 'ARG', '-COMP:MA/inf', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', '-COMP:v', 'LF:leave', 'ASP', 'COMP:PP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
lavano          ['LANG:IT']
lava-           {'PHI:NUM:_', 'LF:wash', 'V', 'PHI:DET:_', 'SPEC:P', 'LANG:IT', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'PHI:GEN:_', '-COMP:v', '!COMP:*', 'COMP:D', 'ASP', 'SPEC:ADV', 'PF:lava', '-VAL', '-COMP:N', '-SPEC:T/fin'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-SPEC:P', '-COMP:T/fin', 'PF:le', 'D', '-SPEC:Neg/fin', '-ARG', 'LANG:IT', '-COMP:D', '-SPEC:V', 'COMP:N', 'OP', 'adjoinable', '-COMP:P', '-SPEC:MA/lla', '-COMP:uR', '!COMP:*', '-SPEC:C', '!PROBE:N', 'LF:D', '-SPEC:T/fin', '-SPEC:INF'}
leaves          ['LANG:EN']
leave           {'PF:leave', 'PHI:NUM:_', '!SPEC:D', '-COMP:T/fin', 'PHI:DET:_', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', 'LF:leave', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
leave-          {'PF:leave', 'PHI:NUM:_', '!SPEC:D', '-COMP:T/fin', 'PHI:DET:_', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', 'LF:leave', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
like-           {'!COMP:D', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', 'PF:like', '-COMP:V', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', 'LF:like', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
likes           ['LANG:EN']
like            {'!COMP:D', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', 'PF:like', '-COMP:V', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', 'LF:like', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
little          ['LANG:EN']
little-         {'0', 'SPEC:D', 'LF:little', 'PF:little-', '2SPEC', 'LANG:EN'}
lle             {'LF:for', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:P', 'LANG:FI', '-SPEC:iWH', '+SEM:directional', '-COMP:T/fin', 'PF:P(lle)', '-COMP:ADV', '-SPEC:iR', 'PHI:DET:_', '-SPEC:Neg/fin', '-COMP:A', '-SPEC:v', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:V', '-SPEC:*', 'adjoinable', 'TAIL:V,+SEM:directional', '-SPEC:ADV', 'PHI:PER:_', 'P', '!COMP:*', 'COMP:D', '-SPEC:C', '-VAL', '-COMP:N', '-COMP:uWH', '-COMP:T', '-SPEC:INF'}
lla             {'PHI:NUM:_', '-SPEC:C/fin', 'TAIL:T', 'TAIL:*V', 'LANG:FI', '-SPEC:P', '-SPEC:iWH', '-COMP:T/fin', '-COMP:ADV', 'SPEC:*', '-SPEC:iR', 'PHI:DET:_', 'LF:by', '-SPEC:Neg/fin', '-COMP:A', '-SPEC:v', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', '-SPEC:N', 'PF:P(lla)', '-SPEC:V', 'adjoinable', '-SPEC:ADV', 'PHI:PER:_', 'P', '!COMP:*', 'COMP:D', '-SPEC:C', '-VAL', '-COMP:N', '-COMP:uWH', '-COMP:T', '-SPEC:INF'}
Luisa           ['LANG:IT']
Luisa-          {'COMP:C', '-COMP:N', 'COMP:R/D', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'LANG:IT', '-SPEC:FORCE', 'PF:Luisa', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', '-SEM:directional', '-COMP:C/fin', '-COMP:A', 'LF:Luisa', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'PHI:NUM:_', 'LF:read', 'LANG:FI', 'PHI:DET:_', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', '-COMP:P', 'PHI:PER:_', '-COMP:V', '-COMP:v', 'ASP', 'PF:luke', 'CLASS:TR', 'COMP:D', 'SPEC:ADV', 'V', '!COMP:*', '-VAL', '-COMP:N', '-SPEC:T/fin'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'!COMP:D', 'PHI:NUM:_', 'LF:find', 'LANG:FI', 'PHI:DET:_', 'SPEC:P', 'PF:loyta-', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', '-COMP:P', 'PHI:PER:_', '-COMP:V', '-COMP:v', 'ASP', 'COMP:D', 'CLASS:TR', 'SPEC:ADV', '!COMP:*', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin', 'ASP:BOUNDED'}
Mary            ['LANG:EN']
Mary-           {'-SPEC:R', '-COMP:AUX', 'PF:Mary', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'LANG:EN', 'COMP:uR', '-SEM:directional', '-SPEC:T/fin', '-SPEC:INF', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', 'LF:Mary', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-adjoinable'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merjaahan       ['LANG:FI']
Merja-          {'LANG:FI', '-SPEC:R', '-COMP:AUX', 'LF:Merja', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', 'PF:Merja', '-SPEC:uWH', 'SPEC:A', 'COMP:uR', '-SEM:directional', '-SPEC:T/fin', '-SPEC:INF', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-adjoinable'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'TAIL:T', 'PF:malla', 'LANG:FI', 'adjoinable', 'SPEC:*', 'COMP:v', 'LF:by', '-SPEC:Neg/fin', 'MA/inf', 'ADV', '-SPEC:FORCE', '-SPEC:T/fin', '-SPEC:N'}
meren           ['LANG:FI']
mere-           {'COMP:C', 'COMP:R/D', 'LANG:FI', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'LF:ocean', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', '-COMP:C/fin', 'PF:meri', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
mies            {'COMP:C', 'COMP:R/D', 'LANG:FI', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'PF:mies', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', 'LF:man', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
mistake         {'COMP:C', 'COMP:R/D', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'PF:mistake', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', 'LF:mistake', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', 'LANG:EN', 'COMP:uR', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-SPEC:C/fin', 'COMP:C', 'COMP:R/D', 'LANG:FI', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'PF:mika-', 'SPEC:A', '-COMP:v', 'COMP:uR', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', 'LF:what', '-SPEC:T/fin', '-SPEC:INF'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'PHI:NUM:_', 'LF:move', 'PF:move', '+SEM:directional', 'PHI:DET:_', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', '-COMP:P', 'PHI:PER:_', '-COMP:V', 'PHI:GEN:_', 'LANGN:EN', '-COMP:v', 'ASP', 'COMP:D', 'CLASS:TR', 'SPEC:ADV', '!COMP:*', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
mukavasti       ['LANG:EN']
mukava-         {'0', 'SPEC:D', 'LF:comfortably', '2SPEC', 'LANG:FI', 'PF:mukavasti'}
must            {'T/fin', 'PHI:NUM:_', '!SPEC:*', '-SPEC:TO/inf', '-COMP:T/fin', 'LF:must', 'FIN', 'COMP:v', '-SPEC:C', 'SPEC:D', 'PHI:DET:_', 'COMP:T/prt', '-COMP:INF', 'SPEC:*', 'VAL', '-SPEC:v', 'ARG', 'SPEC:TO/inf', '-SPEC:N', '-SPEC:Neg', 'MODAL', 'COMP:V', '-SPEC:V', 'SPEC:FORCE', 'PHI:PER:_', 'PF:must', '!PROBE:V', 'PHI:GEN:_', 'LANG:EN', '!COMP:*', 'T', 'COMP:Neg', 'SPEC:C/fin', '-SPEC:T/fin'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'PHI:NUM:_', 'LANG:FI', '-COMP:T/fin', 'PHI:DET:_', 'SPEC:P', 'PF:myy', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', '-COMP:P', 'PHI:PER:_', '-COMP:V', 'LF:sell', '-COMP:v', 'ASP', 'COMP:D', 'CLASS:TR', 'SPEC:ADV', '!COMP:*', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin', 'ASP:BOUNDED'}
naki            ['LANG:FI']
nakee           ['LANG:FI']
nake-           {'PHI:NUM:_', 'LANG:FI', 'LF:see', 'PHI:DET:_', 'SPEC:P', 'PF:nake', '-SPEC:FORCE', 'ARG', '-COMP:MA/ssa', 'SPEC:TO/inf', 'COMP:P', '-COMP:ESSA/inf', '-COMP:MA/tta', '-COMP:P', 'PHI:PER:_', '-COMP:V', '-COMP:v', 'ASP', 'COMP:D', 'CLASS:TR', 'SPEC:ADV', '!COMP:*', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin', 'ASP:BOUNDED'}
nayttaa         ['LANG:FI']
naytta-         {'LANG:FI', '!SPEC:D', '-ARG', '!COMP:VA/inf', 'SPEC:P', 'VAL', '-SPEC:FORCE', 'SPEC:TO/inf', 'PF:naytta', 'LF:seem', 'COMP:P', '-COMP:V', '-COMP:v', 'ASP', 'SPEC:ADV', 'V', 'SEM:internal', '-COMP:N', '-SPEC:T/fin'}
ndo             {'COMP:V', '-COMP:FORCE', 'LF:ing', '?ARG', '-COMP:T/fin', 'INF', 'LANG:EN', 'COMP:v', '!COMP:*', '-SPEC:V', '-COMP:C/fin', 'VAL', 'PRG', '-SPEC:T/fin', 'PF:PRG'}
ne              {'-SPEC:P', 'LANG:FI', '-COMP:T/fin', 'D', 'PHI:NUM:PL', '-SPEC:Neg/fin', '-ARG', '-COMP:D', 'PHI:PER:3', '-SPEC:V', 'COMP:N', 'OP', 'adjoinable', 'PF:ne', '-COMP:P', '-SPEC:MA/lla', '-COMP:uR', '!COMP:*', '-SPEC:C', '!PROBE:N', 'LF:those', '-SPEC:T/fin', '-SPEC:INF'}
niiden          ['LANG:EN']
nen             {'LF:ing', 'LANG:FI', '-SPEC:A', 'TAIL:D', 'PF:a', 'COMP:0', 'SPEC:*', '-SPEC:D', 'A'}
not             {'Neg', 'PHI:NUM:_', 'PHI:GEN:_', 'LF:not', 'SPEC:*', 'POL:NEG', '-COMP:C', '!COMP:*', 'PF:not', 'LANG:EN', 'PHI:DET:_', 'PHI:PER:_', '-COMP:D', '-VAL', '-SPEC:T/fin', 'ARG', '-COMP:FIN'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'PHI:NUM:_', 'CLASS:INTR', '-COMP:Neg/fin', 'LANG:FI', '-COMP:T/fin', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', '-COMP:D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:MA/inf', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'LF:sleep', '-COMP:v', 'PF:nukku', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-COMP:T'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-SPEC:C/fin', 'COMP:C', 'COMP:R/D', 'LANG:FI', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', 'LF:possessions', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', '-COMP:C/fin', '-COMP:A', '-COMP:N', 'PF:omaisuuden', '-SPEC:T/fin', '-SPEC:INF'}
operatoria      ['LANG:IT']
operatoria-     {'0', 'LF:operation', 'SPEC:D', 'LANG:IT', 'PF:operatoria', '2SPEC'}
ostaa           ['LANG:FI']
osta-           {'LF:buy', 'PHI:NUM:_', 'LANG:FI', 'PHI:DET:_', 'PF:osta', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', '-COMP:P', 'PHI:PER:_', '-COMP:V', '-COMP:v', 'ASP', 'COMP:D', 'CLASS:TR', 'SPEC:ADV', '!COMP:*', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin', 'ASP:BOUNDED'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'COMP:C', 'COMP:R/D', 'LANG:FI', '-SPEC:P', '-SPEC:R', 'SEM:nonreferential', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-COMP:A', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', 'LF:day', '-COMP:v', 'COMP:uR', '-COMP:VA/inf', '-COMP:C/fin', 'PF:paiva', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
past            {'PHI:NUM:_', '-SPEC:C/fin', 'PF:past', 'LF:past', '-SPEC:P', '-SPEC:iWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iR', '-float', 'PHI:DET:_', '-SPEC:Neg/fin', '-COMP:A', '-SPEC:v', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:V', '-SPEC:*', 'adjoinable', '-SPEC:ADV', 'PHI:PER:_', 'PHI:GEN:_', 'P', 'LANG:EN', '!COMP:*', 'COMP:D', '-SPEC:C', '-VAL', '-COMP:N', '-COMP:uWH', '-COMP:T', '-SPEC:INF'}
Pariisia        ['LANG:FI']
Pariisi-        {'LF:Paris', 'COMP:C', 'COMP:R/D', 'LANG:FI', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', 'PF:Pariisi', '-SPEC:N', '-SPEC:V', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekkahan        ['LANG:FI']
PEKKA           ['LANG:EN']
Pekka-          {'COMP:C', 'COMP:R/D', 'LANG:FI', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', 'LF:Pekka', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', '-SEM:directional', '-COMP:C/fin', 'PF:Pekka', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'PF:pelkaa', 'PHI:NUM:_', 'LANG:FI', 'PHI:DET:_', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', '-COMP:P', 'PHI:PER:_', '-COMP:V', '-COMP:v', 'ASP', 'COMP:D', 'CLASS:TR', 'SPEC:ADV', '!COMP:*', 'V', 'LF:fear', '-VAL', '-COMP:N', '-SPEC:T/fin'}
persuades       ['LANG:EN']
persuade-       {'PHI:NUM:_', 'PF:persuade', 'SEM:external', 'PHI:DET:_', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'LF:persuade', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', '!COMP:*', 'COMP:TO/inf', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
peruuntui       ['LANG:FI']
peruuntu-       {'PHI:NUM:_', 'LANG:FI', 'LF:cancelled', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'PF:peruuntui', 'COMP:P', 'PHI:PER:_', '-COMP:V', '-COMP:v', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'PHI:NUM:_', 'LF:wash', 'LANG:FI', 'PF:pese_asp', 'PHI:DET:_', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', '-COMP:P', 'PHI:PER:_', '-COMP:V', '-COMP:v', 'ASP', 'COMP:D', 'CLASS:TR', 'SPEC:ADV', '!COMP:*', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin', 'ASP:BOUNDED'}
pese-           {'PF:pese', 'PHI:NUM:_', 'LF:wash', 'LANG:FI', 'PHI:DET:_', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', '-COMP:P', 'PHI:PER:_', '-COMP:V', '-COMP:v', 'ASP', 'COMP:D', 'CLASS:TR', 'SPEC:ADV', '!COMP:*', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
petardi         {'COMP:C', 'COMP:R/D', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'LANG:IT', '-SPEC:FORCE', 'LF:firecrackers', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'PF:petardi', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
pieni           ['LANG:FI']
pieni-          {'0', 'SPEC:D', '2SPEC', 'PF:pieni-', 'LANG:FI', 'LF:small'}
poikien         ['LANG:FI']
poika-          {'-SPEC:C/fin', 'COMP:C', 'COMP:R/D', 'LANG:FI', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'LF:boy', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', '-COMP:C/fin', '-COMP:A', '-COMP:N', 'PF:poika', '-SPEC:T/fin', '-SPEC:INF'}
puhelinta       ['LANG:FI']
puhelin-        {'0', 'SPEC:D', 'LANG:FI', 'PF:puhelin', 'LF:phone', '2SPEC'}
punainen        ['LANG:FI']
puna-           {'0', 'SPEC:D', 'LF:red', 'LANG:FI', 'PF:puna-', '2SPEC'}
presupposto     {'COMP:C', 'COMP:R/D', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'LANG:IT', '-SPEC:FORCE', 'PF:presupposto', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', 'LF:presupposition', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
primary         {'COMP:C', 'PF:primary', 'COMP:R/D', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'LANG:IT', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', '-SPEC:INF', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', 'LF:nurse'}
promises        ['LANG:EN']
promise-        {'PHI:NUM:_', 'PF:promise', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'LF:promise', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', 'ASP', 'COMP:D', 'SPEC:ADV', 'V', 'SEM:internal', '-VAL', '-COMP:N', '-SPEC:T/fin'}
problem         {'COMP:C', 'COMP:R/D', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'LF:problem', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', 'PF:problem', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', 'LANG:EN', 'COMP:uR', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
pyytaa          ['LANG:FI']
pyyta-          {'PF:pyyda', 'PHI:NUM:_', 'LANG:FI', 'SEM:external', 'PHI:DET:_', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', '-COMP:P', 'PHI:PER:_', '-COMP:V', '-COMP:v', 'ASP', 'COMP:D', 'CLASS:TR', 'SPEC:ADV', '!COMP:*', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin', 'LF:ask'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'LF:race', 'PHI:NUM:_', 'CLASS:INTR', '-COMP:T/fin', 'LAMG:EN', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', '-COMP:D', '-SPEC:FORCE', 'ARG', '-COMP:MA/inf', 'SPEC:TO/inf', 'PF:race', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
raukesi         ['LANG:FI']
raukea-         {'PHI:NUM:_', 'LANG:FI', 'PF:raukea', 'PHI:DET:_', 'SPEC:P', 'LF:terminate', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', '-COMP:v', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
red             ['LANG:EN']
red-            {'0', 'SPEC:D', 'LF:red', '2SPEC', 'PF:red', 'LANG:EN'}
saavuttaa       ['LANG:FI']
saavutta-       {'!COMP:D', 'PHI:NUM:_', 'LF:reach', 'LANG:FI', 'PHI:DET:_', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', '-COMP:P', 'PHI:PER:_', '-COMP:V', '-COMP:v', 'ASP', 'COMP:D', 'CLASS:TR', 'SPEC:ADV', '!COMP:*', 'V', 'PF:saavutta-', '-VAL', '-COMP:N', '-SPEC:T/fin', 'ASP:BOUNDED'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'PHI:NUM:_', 'LANG:FI', 'V', 'LF:say', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', '-COMP:P', 'PHI:PER:_', 'COMP:VA/inf', '-COMP:V', '-COMP:v', 'PF:sano-', 'ASP', 'COMP:D', 'CLASS:TR', 'SPEC:ADV', '!COMP:*', 'COMP:FORCE', '-VAL', '-COMP:N', '-SPEC:T/fin'}
said            ['LANG:EN']
say'            {'PHI:NUM:_', 'LF:say', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', '!COMP:FORCE', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', 'ASP', 'SPEC:ADV', 'V', 'PF:say', '-VAL', '-COMP:N', '-SPEC:T/fin'}
say-            {'PHI:NUM:_', 'LF:say', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', '!COMP:FORCE', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', 'ASP', 'SPEC:ADV', 'V', 'PF:say', '-VAL', '-COMP:N', '-SPEC:T/fin'}
sala            ['LANG:IT']
sala-           {'COMP:C', 'PF:sala', 'COMP:R/D', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'LANG:IT', '-SPEC:FORCE', 'LF:room', '-SPEC:N', '-SPEC:V', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
scoppiati       ['LANG:IT']
scoppia-        {'PHI:NUM:_', 'PHI:DET:_', 'SPEC:P', 'PF:scoppia', 'LANG:IT', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'LF:explode', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'PHI:GEN:_', '-COMP:v', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
sentenza        {'PF:sentenza', 'COMP:C', 'COMP:R/D', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'LANG:IT', '-SPEC:FORCE', 'LF:sentence', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
Seine           ['LANG:EN']
Seine-          {'COMP:C', 'PF:Seine', 'COMP:R/D', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'LF:Seine', 'SPEC:A', 'LANG:EN', 'COMP:uR', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
sembrano        ['LANG:IT']
sembra-         {'!COMP:ARE/inf', '-ASP', 'SPEC:D', '-ARG', 'SPEC:P', '-COMP:D', '-SPEC:FORCE', 'SPEC:TO/inf', 'LF:seem', 'COMP:P', '-COMP:V', '-COMP:v', 'LANG:EN', 'PF:sembra', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
sleeps          ['LANG:EN']
sleep           {'PHI:NUM:_', 'CLASS:INTR', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', '-COMP:D', '-SPEC:FORCE', 'ARG', '-COMP:MA/inf', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'LF:sleep', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', 'PF:sleep', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
sleep-          {'PHI:NUM:_', 'CLASS:INTR', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', '-COMP:D', '-SPEC:FORCE', 'ARG', '-COMP:MA/inf', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'LF:sleep', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', 'PF:sleep', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
solution        {'COMP:C', 'PF:solution', 'COMP:R/D', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'LF:solution', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', 'LANG:EN', 'COMP:uR', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'!COMP:A/inf', 'COMP:C', 'COMP:R/D', 'LANG:FI', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'PF:sopimus', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', 'LF:agreement', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
spinge          ['LANG:IT']
spinge-         {'!COMP:D', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:P', 'LANG:IT', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', '-COMP:P', 'PHI:PER:_', '-COMP:V', 'PF:spinge', 'PHI:GEN:_', 'LF:push', '-COMP:v', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
ssa             {'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:P', 'PF:ssa', 'LANG:FI', '-SPEC:iWH', '-COMP:T/fin', '-COMP:ADV', 'COMP:n/MA', 'SPEC:*', '-SPEC:iR', '-SPEC:C', 'PHI:DET:_', '-SPEC:Neg/fin', '-COMP:A', '-SPEC:v', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:V', 'adjoinable', '-SPEC:ADV', 'TAIL:V', 'PHI:PER:_', 'P', '!COMP:*', 'COMP:D', 'LF:in', '-VAL', '-COMP:N', '-COMP:uWH', '-COMP:T', '-SPEC:INF'}
stanno          ['LANG:IT']
sta-            {'PHI:NUM:_', 'LF:stay', 'COMP:PRG', 'PF:sta', '-ASP', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', 'SPEC:ADV', 'V', 'SEM:internal', '-VAL', '-COMP:N', '-SPEC:T/fin'}
sti             {'PF:sti', 'TAIL:T', 'LANG:FI', 'adjoinable', 'SPEC:*', 'LF:by', '!COMP:*', '-SPEC:Neg/fin', '-ARG', 'ADV', '-SPEC:FORCE', '-SPEC:T/fin', '-SPEC:N'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'PF:sukka-', 'COMP:C', 'COMP:R/D', 'LANG:FI', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', 'LF:socks', '-SPEC:uWH', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
surprised       ['LANG:EN']
surprise-       {'PHI:NUM:_', 'PF:surprise', '-COMP:T/fin', 'PHI:DET:_', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', '-COMP:P', 'PHI:PER:_', '-COMP:V', 'LF:surprise', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', 'ASP', 'COMP:D', 'CLASS:TR', 'SPEC:ADV', '!COMP:*', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
talo            {'COMP:C', 'PF:talo', 'COMP:R/D', 'LANG:FI', '-SPEC:P', 'LF:house', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
taloa           ['LANG:EN']
tama            ['LANG:EN']
tama-           {'COMP:C', 'COMP:R/D', 'LANG:FI', '-SPEC:P', 'PF:tama', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'LF:this', 'PHI', 'SPEC:A', '-COMP:v', 'COMP:uR', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'!COMP:A/inf', 'PHI:NUM:_', 'LANG:FI', 'LF:must', 'FIN', 'SPEC:*', '-ASP', 'PHI:DET:_', 'SPEC:P', 'PF:taytyy', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'MODAL', 'COMP:P', 'PHI:PER:_', '-COMP:V', '-COMP:v', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
teki            ['LANG:FI']
teke-           {'!COMP:D', 'PHI:NUM:_', 'LANG:FI', 'PHI:DET:_', 'SPEC:P', 'LF:make', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'PF:teke', 'COMP:P', '-COMP:P', 'PHI:PER:_', '-COMP:V', '-COMP:A/inf', '-COMP:v', 'ASP', 'COMP:D', 'CLASS:TR', 'SPEC:ADV', '!COMP:*', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin', 'ASP:BOUNDED'}
that            {'-SPEC:*', '!PROBE:FIN', 'COMP:C/fin', 'LF:that', 'PF:that', 'FORCE', 'LANG:EN', 'FIN', '!COMP:*', '-ARG', '-VAL', 'COMP:T/fin'}
the             {'PF:the', '-SPEC:P', '-COMP:T/fin', 'D', 'LF:the', '-SPEC:Neg/fin', '-ARG', '-COMP:D', '-SPEC:T/fin', 'PHI:PER:3', '-SPEC:V', 'COMP:N', 'OP', 'adjoinable', '-COMP:P', '-SPEC:MA/lla', '-COMP:uR', 'LANG:EN', 'PHI:DET:DEF', '!COMP:*', '-SPEC:C', '!PROBE:N', 'PHI:NUM:SG', '-SPEC:INF'}
to              {'PHI:NUM:_', '-SPEC:C/fin', 'LF:to', '-SPEC:Neg/fin', 'PF:to', '-COMP:A', '-SPEC:v', 'ARG', '-SPEC:N', '-SPEC:*', '-SPEC:ADV', 'TAIL:V', 'PHI:PER:_', 'P', 'LANG:EN', 'COMP:D', '-COMP:T', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:P', '-SPEC:iWH', '+SEM:directional', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iR', '-float', 'PHI:DET:_', '-SPEC:FORCE', '-SPEC:V', 'adjoinable', 'PHI:GEN:_', '!COMP:*', '-SPEC:C', '-VAL', '-COMP:N', '-COMP:uWH'}
to_inf          {'?ARG', 'TO/inf', '-COMP:T/fin', 'COMP:v', '-SPEC:v', '-SPEC:V', 'COMP:V', 'adjoinable', 'LF:TO/inf', '-COMP:FORCE', 'PF:TO/inf', 'INF', 'LANG:EN', '!COMP:*', '-COMP:C/fin', '-VAL', '-SPEC:T/fin'}
towards         {'LF:towards', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:P', '-SPEC:iWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iR', '-float', 'PHI:DET:_', '-SPEC:Neg/fin', '-COMP:A', '-SPEC:v', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', '-SPEC:N', 'PF:towards', '-SPEC:*', '-SPEC:V', '-SPEC:ADV', 'TAIL:V', 'adjoinable', 'PHI:PER:_', 'PHI:GEN:_', 'P', 'LANG:EN', '!COMP:*', 'COMP:D', '-SPEC:C', '-VAL', '-COMP:N', '-COMP:uWH', '-COMP:T', '-SPEC:INF'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'PHI:NUM:_', 'LANG:FI', 'PHI:DET:_', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'LF:nudge', '-COMP:P', 'PHI:PER:_', '-COMP:V', '-COMP:v', 'ASP', 'COMP:D', 'CLASS:TR', 'PF:tonaise', 'SPEC:ADV', 'V', '!COMP:*', '-VAL', '-COMP:N', '-SPEC:T/fin'}
tta             {'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:P', 'LANG:FI', '-SPEC:iWH', '-COMP:T/fin', '-COMP:ADV', 'COMP:n/MA', 'SPEC:*', '-SPEC:iR', 'PHI:DET:_', 'LF:without', '-SPEC:Neg/fin', 'ADV', '-SPEC:v', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', '-SPEC:N', '-SPEC:V', 'adjoinable', '-COMP:A', '-SPEC:ADV', 'PHI:PER:_', 'P', 'PF:tta', '!COMP:*', 'COMP:D', '-SPEC:C', '-VAL', '-COMP:N', '-COMP:uWH', '-COMP:T', '-SPEC:INF'}
tries           ['LANG:EN']
try-            {'PHI:NUM:_', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', '!COMP:-ARG', 'COMP:P', 'PHI:PER:_', '-COMP:V', '!COMP:TO/inf', 'PHI:GEN:_', 'LF:try', 'PF:try', 'LANG:EN', '-COMP:v', 'ASP', 'SPEC:ADV', 'V', 'SEM:internal', '-VAL', '-COMP:N', '-SPEC:T/fin'}
verifiche       {'COMP:C', 'COMP:R/D', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'LANG:IT', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'PF:verifiche', 'LF:verification', '-SPEC:ADV', 'COMP:P', '-COMP:V', 'N', '-SPEC:uWH', 'SPEC:A', '-COMP:v', '-COMP:VA/inf', 'COMP:uR', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'PHI:NUM:_', 'CLASS:INTR', 'LANG:FI', '!COMP:P', 'PHI:DET:_', 'SPEC:D', 'LF:flow', 'SPEC:P', 'PF:virtaa', '-COMP:D', '-SPEC:FORCE', 'ARG', '-COMP:MA/inf', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', '-COMP:V', '-COMP:v', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'PHI:NUM:_', 'PHI:DET:_', 'SPEC:P', 'PF:volu', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', '-SPEC:*', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', '!COMP:*', 'ASP', 'SPEC:ADV', 'V', 'SEM:internal', '-VAL', '-COMP:N', '-SPEC:T/fin', 'LF:want'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'PHI:NUM:_', 'SEM:achievement', 'PHI:DET:_', 'SPEC:P', 'LF:win', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', '-COMP:P', 'PHI:PER:_', 'PF:voitta', '-COMP:V', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', 'ASP', 'COMP:D', 'CLASS:TR', 'SPEC:ADV', '!COMP:*', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin', 'ASP:BOUNDED'}
wants           ['LANG:EN']
want-           {'PF:want', 'PHI:NUM:_', '-SPEC:TO/inf', 'PHI:DET:_', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'COMP:P', '-COMP:P', 'PHI:PER:_', '-COMP:V', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', 'ASP', 'COMP:TO/inf', 'CLASS:TR', 'COMP:D', 'SPEC:ADV', 'V', '!COMP:*', '-VAL', '-COMP:N', '-SPEC:T/fin', 'LF:want'}
what            ['LANG:EN']
what-           {'-SPEC:C/fin', '-SPEC:R', '-COMP:AUX', '-COMP:*', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'LANG:EN', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', 'PF:what', '-COMP:C/fin', '-COMP:A', '-COMP:N', 'LF:what'}
which           {'-SPEC:P', '-COMP:T/fin', 'D', '-SPEC:Neg/fin', '-ARG', 'OP:WH', '-COMP:D', 'LF:which', '-SPEC:T/fin', '-SPEC:V', 'COMP:N', 'OP', 'adjoinable', '-COMP:P', '-SPEC:MA/lla', '-COMP:uR', 'LANG:EN', '!COMP:*', '-SPEC:C', '!PROBE:N', 'PF:which', '-SPEC:INF'}
who             ['LANG:EN']
who-            {'-SPEC:R', '-COMP:AUX', '-COMP:*', '-SPEC:N', 'LF:who', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'LANG:EN', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'PF:who', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin'}
whether         {'PF:whether', 'OP:Q', 'FIN', 'LF:whether', '-ARG', 'OP:WH', 'OP', '-SPEC:*', 'Q', '!PROBE:FIN', 'COMP:C/fin', 'FORCE', 'LANG:EN', '!COMP:*', '-VAL', 'COMP:T/fin'}
yrittaa         ['LANG:FI']
yritta-         {'!COMP:A/inf', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', 'PF:yritta', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', '!COMP:-ARG', 'COMP:P', 'PHI:PER:_', '-COMP:V', 'PHI:GEN:_', 'LF:try', 'LANG:EN', '-COMP:v', 'ASP', 'SPEC:ADV', 'V', 'SEM:internal', '-VAL', '-COMP:N', '-SPEC:T/fin'}
mina            ['LANG:EN']
mina-           {'LANG:FI', '-SPEC:R', '-COMP:AUX', 'LF:I', '-COMP:*', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'PF:mina', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin'}
sina            ['LANG:EN']
sina-           {'LF:you', 'LANG:FI', '-SPEC:R', '-COMP:AUX', '-COMP:*', '-COMP:A', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', 'PF:sina', '-COMP:N', '-SPEC:C/fin'}
han             ['LANG:EN']
han-            {'LANG:FI', '-SPEC:R', '-COMP:AUX', '-COMP:*', '-SPEC:N', 'LF:s/he', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', 'COMP:R/D', 'PF:han', '-SPEC:P', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'LANG:FI', '-SPEC:R', '-COMP:AUX', '-COMP:*', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', '-COMP:N', 'COMP:R/D', '-SPEC:P', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', 'PF:me', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', 'LF:we', '-SPEC:C/fin'}
te              ['LANG:EN']
te-             {'LF:you', 'LANG:FI', '-SPEC:R', '-COMP:AUX', '-COMP:*', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', 'PF:te', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'LANG:FI', '-SPEC:R', '-COMP:AUX', '-COMP:*', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', 'PF:he', '-SPEC:uWH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'COMP:T/prt', 'COMP:D/rel', 'LF:they', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin'}
se              ['LANG:EN']
sen             ['LANG:EN']
sita            ['LANG:EN']
se-             {'-SPEC:P', 'LANG:FI', '-COMP:T/fin', 'D', '-SPEC:Neg/fin', '-ARG', '-COMP:D', '-SPEC:V', 'COMP:N', 'OP', 'adjoinable', '-COMP:P', '-SPEC:MA/lla', 'PF:se', 'LF:the/that', '-COMP:uR', '!COMP:*', '-SPEC:C', '!PROBE:N', '-SPEC:T/fin', '-SPEC:INF'}
I               ['LANG:EN']
I-              {'-SPEC:R', '-COMP:AUX', 'LF:I', '-COMP:*', 'PF:I', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'LANG:EN', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin'}
you             ['LANG:EN']
you-            {'LF:you', '-SPEC:R', '-COMP:AUX', '-COMP:*', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'LANG:EN', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'PF:you', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin'}
he              ['LANG:EN']
he-             {'-SPEC:R', '-COMP:AUX', '-COMP:*', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', 'PF:he', '-SPEC:uWH', 'LF:he', 'SPEC:A', 'LANG:EN', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin'}
she             ['LANG:EN']
she-            {'-SPEC:R', '-COMP:AUX', '-COMP:*', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'LANG:EN', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'PF:she', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', 'LF:she', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin'}
we              ['LANG:EN']
we-             {'-SPEC:R', 'PF:we', '-COMP:AUX', '-COMP:*', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'LANG:EN', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', '-COMP:N', 'COMP:R/D', '-SPEC:P', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', 'LF:we', '-SPEC:C/fin'}
you_pl          ['LANG:EN']
you_pl-         {'COMP:C', 'COMP:R/D', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'LF:you_pl', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-COMP:V', 'N', '-SPEC:uWH', 'PHI', 'SPEC:A', 'LANG:EN', 'PF:you_pl', 'COMP:uR', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
they            ['LANG:EN']
they-           {'-SPEC:R', 'PF:they', '-COMP:AUX', '-COMP:*', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'LANG:EN', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'COMP:T/prt', 'COMP:D/rel', 'LF:they', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin'}
it              ['LANG:EN']
it-             {'PF:it', '-SPEC:P', '-COMP:T/fin', 'D', '-SPEC:Neg/fin', '-ARG', '-COMP:D', '-SPEC:V', 'COMP:N', 'OP', 'adjoinable', '-COMP:P', '-SPEC:MA/lla', 'LF:it/that', '-COMP:uR', 'LANG:EN', '!COMP:*', '-SPEC:C', '!PROBE:N', '-SPEC:T/fin', '-SPEC:INF'}
io              ['LANG:EN']
io-             {'-SPEC:R', '-COMP:AUX', 'LF:I', '-COMP:*', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', 'COMP:R/D', 'PF:io', '-SPEC:P', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'LANG:IT', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin'}
tu              ['LANG:EN']
tu-             {'LF:you', '-SPEC:R', '-COMP:AUX', 'PF:tu', '-COMP:*', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'LANG:IT', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin'}
lui             ['LANG:EN']
lui-            {'-SPEC:R', '-COMP:AUX', '-COMP:*', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'LF:he', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'PF:lui', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'LANG:IT', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin'}
lei             ['LANG:EN']
lei-            {'-SPEC:R', '-COMP:AUX', '-COMP:*', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'PF:lei', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'LANG:IT', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', 'LF:she', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin'}
noi             ['LANG:EN']
noi-            {'-SPEC:R', '-COMP:AUX', '-COMP:*', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', '-COMP:N', 'COMP:R/D', '-SPEC:P', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'LANG:IT', '-SPEC:FORCE', 'PF:noi', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', 'LF:we', '-SPEC:C/fin'}
voi             ['LANG:EN']
voi-            {'-SPEC:R', '-COMP:AUX', '-COMP:*', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PF:voi', 'PHI_N', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'LF:you_pl', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'LANG:IT', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin'}
loro            ['LANG:EN']
loro-           {'-SPEC:R', '-COMP:AUX', '-COMP:*', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'COMP:T/prt', 'COMP:D/rel', 'LF:they', 'COMP:R', 'LANG:IT', '-SPEC:FORCE', 'PF:loro', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin'}
mi              ['LANG:EN']
mi-             {'-SPEC:R', '-COMP:AUX', '-COMP:*', '-SPEC:N', '-COMP:WH', 'CL', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'LANG:IT', 'LF:me', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', 'PF:mi(cl)', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin'}
la              ['LANG:EN']
la-             {'-SPEC:R', '-COMP:AUX', '-COMP:*', '-SPEC:N', '-COMP:WH', 'CL', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'COMP:uR', 'LF:her', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'PF:la(cl)', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'LANG:IT', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin'}
lo              ['LANG:EN']
lo-             {'-SPEC:R', '-COMP:AUX', '-COMP:*', '-SPEC:N', '-COMP:WH', 'CL', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'LANG:IT', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', 'LF:him', 'PF:lo(cl)', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin'}
si              ['LANG:EN']
si-             {'-SPEC:R', '-COMP:AUX', '-COMP:*', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'PF:si(cl)', 'COMP:uR', '-SPEC:T/fin', 'CAL:CL', '-SPEC:INF', 'PHI_N', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'LANG:IT', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', 'LF:3sg', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', '-COMP:A', '-COMP:N', '-SPEC:C/fin'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-SPEC:R', 'PF:ci', '-COMP:AUX', '-COMP:*', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'PHI_N', 'COMP:C', 'COMP:R/D', '-SPEC:P', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'LANG:IT', '-SPEC:FORCE', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', 'LF:there', '-COMP:A', '-COMP:N', '-SPEC:C/fin'}
[-n]            {'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:1', 'PHI'}
[-t]            {'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'PHI:HUM:HUM', 'PHI:PER:2', 'LANG:FI', 'PHI'}
[-V]            {'PHI:NUM:SG', 'inflectional', 'LANG:FI', 'PHI', 'PHI:PER:3'}
[-mme]          {'PHI:NUM:PL', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:1', 'PHI'}
[-mme]          {'PHI:NUM:PL', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:1'}
[-tte]          {'PHI:NUM:PL', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI:PER:2', 'LANG:FI', 'PHI'}
[-vat]          {'PHI:NUM:PL', 'inflectional', 'LANG:FI', 'PHI', 'PHI:PER:3'}
[-ni]           {'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:1', 'PHI'}
[-si]           {'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'PHI:HUM:HUM', 'PHI:PER:2', 'LANG:FI', 'PHI'}
[-nsa]          {'PHI:NUM:SG', 'inflectional', 'LANG:FI', 'PHI', 'PHI:PER:3'}
[-an]           {'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'LANG:FI', 'PHI', 'PHI:PER:3'}
[-nne]          {'PHI:NUM:PL', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI:PER:2', 'LANG:FI'}
[-s]            {'PHI:NUM:SG', 'inflectional', 'PHI:GEN:M', 'PHI:GEN:F', 'PHI', 'PHI:PER:3', 'LANG:EN'}
[-0]            {'inflectional', 'PHI:PER:1', 'PHI', 'PHI:PER:3', 'LANG:EN', 'PHI:NUM:PL', 'PHI:DET:DEF', 'PHI:PER:2', 'PHI:GEN:N', 'PHI:NUM:SG'}
[-o]            {'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'PHI:HUM:HUM', 'LANG:IT', 'PHI:PER:1', 'PHI'}
[-i]            {'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'PHI:HUM:HUM', 'PHI:PER:2', 'LANG:IT', 'PHI'}
[-a]            {'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'LANG:IT', 'PHI', 'PHI:PER:3'}
[-e]            {'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'LANG:IT', 'PHI', 'PHI:PER:3'}
[-iamo]         {'PHI:NUM:PL', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'LANG:IT', 'PHI:PER:1', 'PHI'}
[-te]           {'PHI:NUM:PL', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI:PER:2', 'LANG:IT', 'PHI'}
[-no]           {'PHI:NUM:PL', 'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI', 'PHI:PER:3'}
[-nom]          {'TAIL:FIN,ARG,VAL', 'inflectional', 'NOM', 'adjoinable', 'LANG:EN'}
[-par]          {'inflectional', 'TAIL:ARG,-VAL', 'LANG:FI', 'PAR', 'adjoinable'}
[-gen]          {'-float', 'inflectional', 'GEN', 'TAIL:INF,ARG', 'LANG:EN'}
gen             {'-float', 'inflectional', 'GEN', 'TAIL:INF,ARG', 'LANG:EN'}
[-n_acc]        {'TAIL:PHI', 'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'TAIL:*POL:NEG', 'n-ACC', 'adjoinable'}
[-t_acc]        {'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'adjoinable', 'TAIL:*POL:NEG', 't-ACC'}
[-0_acc]        {'inflectional', 'TAIL:*PHI', '0_ACC', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'TAIL:*POL:NEG', 'adjoinable'}
asp             {'inflectional', 'ASP:BOUNDED', 'LANG:EN'}
[hAn]           {'OP:FAM', 'inflectional', 'LANG:EN'}
[pA]            {'OP:POL', 'inflectional', 'LANG:EN'}
[kO]            {'OP', 'inflectional', 'OP:Q', 'OP:WH', 'LANG:EN'}
[foc]           {'inflectional', 'OP:FOC', 'LANG:EN'}
a'              {'LF:A', 'a', 'LANG:X', 'PF:a'}
b'              {'PF:b', 'LANG:X', 'LF:B', 'b'}
b''             {'LF:B', 'PF:b', 'b', '-COMP:c', 'LANG:EN'}
c''             {'SPEC:a', 'PF:c', 'c', 'LF:C', 'LANG:EN'}
c'              {'LF:C', 'LANG:X', 'c', 'PF:c'}
d'              {'d', 'LF:D', 'LANG:', 'PF:d'}
a''             ['LANG:EN']
x'              {'LANG:X', 'LF:X', 'PF:x', 'x'}
y'              {'LANG:X', 'y', 'LF:Y', 'PF:y'}
z'              {'z', 'LANG:X', 'PF:x', 'LF:Z'}
John'           {'LF:John', 'PF:John', 'LANG:X', "N'"}
admires'        {'LANG:X', 'LF:admires', "V'", 'PF:admires'}
admires''       {'LF:admires', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:D', 'SPEC:P', '-SPEC:FORCE', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', 'PF:admires', '-COMP:V', 'PHI:GEN:_', '-COMP:v', 'LANG:EN', 'ASP', 'SPEC:ADV', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
Mary'           {'LF:mary', 'PF:Mary', 'LANG:X', "N'"}
T/fin           {'LF:T', 'T/fin', 'PHI:NUM:_', '!SPEC:*', '-SPEC:TO/inf', '-COMP:T/fin', '-SPEC:C', 'FIN', 'COMP:v', 'PHI:DET:_', 'SPEC:D', 'SPEC:*', 'COMP:T/prt', '-COMP:INF', 'VAL', '-SPEC:v', 'ARG', 'SPEC:TO/inf', 'PF:T', '-SPEC:N', '-SPEC:Neg', 'COMP:V', '-SPEC:V', 'SPEC:FORCE', 'PHI:PER:_', 'PHI:GEN:_', 'LANG:EN', '!COMP:*', 'T', '!PROBE:V', 'SPEC:C/fin', '-SPEC:T/fin'}
v               {'PHI:NUM:_', 'PHI:PER:_', 'PF:v', '!PROBE:V', 'PHI:GEN:_', 'LANG:EN', 'PHI:DET:_', '!COMP:*', 'SPEC:D', 'ASP', 'LF:v', 'v', '-VAL', 'ARG', 'COMP:V', '-SPEC:N'}
C/fin           {'C', 'C/fin', 'COMP:Neg/fin', 'SPEC:*', 'FIN', '-ARG', 'VAL', '-SPEC:T/fin', '-COMP:T/prt', '-SPEC:N', '!PROBE:FIN', 'COMP:T/fin', 'LANG:EN', '!COMP:*', '-COMP:C/fin', 'LF:C/fin', '-SPEC:C/fin', 'PF:C'}
T               {'LF:T', '-COMP:NEG', 'PHI:NUM:_', 'SPEC:*', 'FIN', 'COMP:v', 'PHI:DET:_', 'SPEC:D', 'COMP:T/prt', 'VAL', '-SPEC:FORCE', 'ARG', 'COMP:V', 'PF:T', '-SPEC:V', '-SPEC:N', 'PHI:PER:_', 'PHI:GEN:_', 'LANG:EN', '!COMP:*', 'T', '!PROBE:V', '-SPEC:T/fin'}
T/prt           {'-COMP:NEG', 'PHI:NUM:_', 'T/prt', 'SPEC:*', 'FIN', 'COMP:v', 'PHI:DET:_', 'LF:T/prt', 'SPEC:D', 'COMP:T/prt', 'VAL', '-SPEC:FORCE', 'ARG', 'COMP:V', '-SPEC:V', '-SPEC:N', 'PHI:PER:_', 'PF:T/prt', 'PHI:GEN:_', 'LANG:EN', '!COMP:*', 'T', 'COMP:D', '!PROBE:V', '-SPEC:C/fin', '-SPEC:T/fin'}
a0              {'-adjoinable', 'LF:A', '-SPEC:A', 'TAIL:D', 'COMP:0', 'LANG:EN', '-SPEC:D', 'PF:A', 'A'}
n               {'PHI:NUM:_', '-SPEC:C/fin', '!SPEC:*', '-SPEC:R', 'LF:n', 'n', 'COMP:0', '-COMP:AUX', 'COMP:v', 'SPEC:*', 'ARG', '-SPEC:N', '-COMP:WH', '-SPEC:ADV', '-SPEC:uWH', 'SPEC:A', 'LANG:EN', 'COMP:uR', '-SPEC:T/fin', '-SPEC:INF', 'COMP:C', 'COMP:R/D', '-SPEC:P', '!SPEC:D', 'PHI:DET:_', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', 'VAL', '-SPEC:FORCE', 'COMP:V', '-SPEC:V', 'COMP:P', '-COMP:V', 'N', 'PHI:GEN:_', 'INF', '-COMP:v', '-COMP:VA/inf', '!COMP:*', '-COMP:C/fin', 'PHI:PER:_', '-COMP:A', '-COMP:N', 'PF:n'}
impass          {'LF:impass', 'PHI:NUM:_', 'PHI:PER:_', 'PF:impass', '!PROBE:V', 'PHI:GEN:_', 'LANG:EN', 'PHI:DET:_', '!COMP:*', 'SPEC:D', 'ASP', 'v', '-VAL', 'ARG', 'COMP:V', '-SPEC:N'}
cau             {'LF:v/Cause', 'PF:Cau', 'PHI:NUM:_', 'PHI:PER:_', '!PROBE:V', 'PHI:GEN:_', 'LANG:EN', 'PHI:DET:_', '!COMP:*', 'SPEC:D', 'ASP', 'v', '-VAL', 'ARG', 'COMP:V', '-SPEC:N'}
INF             {'-COMP:FORCE', '-COMP:T/fin', 'INF', 'LANG:EN', 'PF:INF', 'LF:INF', 'COMP:v', '!COMP:*', '-SPEC:V', '-COMP:C/fin', '-SPEC:T/fin', 'COMP:V'}
prtcpl          {'-COMP:NEG', 'PHI:NUM:_', 'T/prt', '-COMP:T/fin', 'SPEC:*', 'FIN', 'COMP:v', 'PHI:DET:_', 'LF:T/prt', 'SPEC:D', 'COMP:T/prt', 'VAL', '-SPEC:FORCE', 'ARG', 'COMP:V', '-SPEC:N', '-SPEC:V', '-COMP:FORCE', 'PHI:PER:_', 'PF:T/prt', 'PHI:GEN:_', 'INF', 'LANG:EN', '!COMP:*', 'T', 'COMP:D', '-COMP:C/fin', '!PROBE:V', '-SPEC:C/fin', '-SPEC:T/fin'}
TO/inf          {'?ARG', 'TO/inf', '-COMP:T/fin', 'COMP:v', '-SPEC:v', '!COMP:V', 'adjoinable', 'COMP:V', '-SPEC:V', 'LF:TO/inf', '-COMP:FORCE', 'PF:TO/inf', 'INF', 'LANG:EN', '!COMP:*', '-COMP:C/fin', '-VAL', '-SPEC:T/fin'}
A/inf           {'A/inf', '?ARG', '-COMP:T/fin', '?VAL', 'SPEC:*', 'COMP:v', '-SPEC:Neg/fin', '-SPEC:V', 'COMP:V', '-COMP:FORCE', 'LF:A/inf', 'INF', 'LANG:EN', '!COMP:*', '-COMP:C/fin', 'PF:A/inf', '-SPEC:T/fin'}
ARE/inf         {'?ARG', '-COMP:T/fin', 'SPEC:*', 'COMP:v', 'VAL', '-SPEC:T/fin', '-SPEC:V', 'COMP:V', 'ARE/inf', '-COMP:FORCE', 'LF:ARE/inf', 'INF', 'LANG:EN', '!COMP:*', '-COMP:C/fin', 'PF:are', '-adjoinable'}
ESSA/inf        {'?ARG', 'TAIL:T', '-COMP:T/fin', '?VAL', 'SPEC:*', 'COMP:v', '-SPEC:Neg/fin', 'ADV', '-SPEC:FORCE', 'ESSA/inf', '-SPEC:V', 'adjoinable', 'COMP:V', 'LF:while', '-SPEC:N', '-COMP:FORCE', 'INF', 'PF:essa', 'LANG:EN', '!COMP:*', '-COMP:C/fin', '-SPEC:T/fin'}
TUA/inf         {'PHI:NUM:_', '!SPEC:*', 'TAIL:T', '-COMP:T/fin', 'SPEC:*', 'PF:tua', 'COMP:v', 'PHI:DET:_', '-SPEC:Neg/fin', 'ADV', 'VAL', '-SPEC:FORCE', 'ARG', '-SPEC:V', 'adjoinable', 'COMP:V', '-SPEC:N', '-COMP:FORCE', 'PHI:GEN:_', 'LF:after', 'INF', 'LANG:EN', '!COMP:*', 'TUA/inf', '-COMP:C/fin', 'PHI:PER:_', '-SPEC:T/fin'}
VA/inf          {'PHI:NUM:_', '!SPEC:*', '-COMP:T/fin', 'SPEC:*', 'COMP:v', 'PHI:DET:_', 'VAL', 'ARG', 'COMP:V', '-SPEC:V', 'LF:VA', 'VA/inf', '-SPEC:N', '-COMP:FORCE', 'PHI:GEN:_', 'INF', 'LANG:EN', '!COMP:*', '-COMP:C/fin', 'PHI:PER:_', '-SPEC:T/fin', 'PF:vAn'}
MA/ssa          {'PHI:NUM:_', 'COMP:v', 'PHI:DET:_', 'LF:in_doing', '-SPEC:Neg/fin', 'MA/inf', 'MA/ssa', 'ADV', '-SPEC:FORCE', 'ARG', 'COMP:V', '-SPEC:N', 'adjoinable', '-SPEC:*', 'TAIL:V', 'PHI:GEN:_', 'LANG:EN', 'PHI:PER:_', '-VAL', '-SPEC:T/fin', 'PF:massa'}
MA/tta          {'-VAL', 'PF:matta', 'PHI:NUM:_', 'TAIL:T', 'PHI:GEN:_', 'LANG:EN', 'PHI:DET:_', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:N', 'PHI:PER:_', 'MA/inf', 'ADV', '-SPEC:FORCE', 'LF:without_doing', 'ARG', 'adjoinable'}
MA/lla          {'PHI:NUM:_', 'COMP:v', '-SPEC:Neg/fin', 'MA/inf', 'ADV', 'ARG', '-SPEC:N', 'PF:malla', 'LANG:EN', '-SPEC:T/fin', 'LF:by_doing', 'TAIL:T', 'PHI:DET:_', '-SPEC:FORCE', 'COMP:V', 'adjoinable', 'PHI:GEN:_', 'PHI:PER:_', '-VAL'}
MA/inf          {'PHI:NUM:_', 'PF:maan', 'COMP:v', '-SPEC:Neg/fin', 'MA/inf', 'ADV', 'ARG', '-SPEC:N', 'TAIL:V', 'LANG:EN', '-SPEC:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'COMP:V', 'adjoinable', 'LF:to_do', 'PHI:GEN:_', 'PHI:PER:_', '-VAL'}
E/inf           {'TAIL:T', 'LANG:FI', 'adjoinable', 'ADV', 'SPEC:*', 'LF:by', 'PF:en', '-ARG', '-SPEC:Neg/fin', '-VAL', '-SPEC:FORCE', '-SPEC:T/fin', '-SPEC:N'}
BE-             {'-COMP:T/fin', 'LF:BE', 'SPEC:D', '-ARG', 'COMP:T/prt', 'COPULA', 'SPEC:P', '-SPEC:FORCE', 'SPEC:TO/inf', 'COMP:P', '-COMP:V', '-COMP:v', 'LANG:EN', '!COMP:*', 'ASP', 'SPEC:ADV', 'PF:BE', 'V', '-VAL', '-COMP:N', '-SPEC:T/fin'}
D               {'-SPEC:P', '-COMP:T/fin', 'D', '-SPEC:Neg/fin', '-ARG', 'PF:D', '-COMP:D', '-SPEC:V', 'COMP:N', 'OP', 'adjoinable', '-COMP:P', '-SPEC:MA/lla', '-COMP:uR', 'LANG:EN', '!COMP:*', '-SPEC:C', '!PROBE:N', 'LF:D', '-SPEC:T/fin', '-SPEC:INF'}
D/rel           {'OP:_', 'D/rel', '-SPEC:P', '-COMP:T/fin', 'D', '-SPEC:Neg/fin', '-ARG', '-COMP:D', '-SPEC:V', 'adjoinable', 'OP', 'COMP:N', 'inflectional', '-SPEC:MA/lla', '-COMP:uR', 'OP:REL', 'LANG:EN', 'LF:D/rel', 'PF:D/rel', '!COMP:*', '-COMP:C/fin', '-SPEC:C', '!PROBE:N', '-SPEC:T/fin', '-SPEC:INF'}
P               {'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:P', '-SPEC:iWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iR', '-float', 'PHI:DET:_', '-SPEC:Neg/fin', '-COMP:A', '-SPEC:v', 'PF:P', 'ARG', '-SPEC:T/fin', '-SPEC:N', '-SPEC:FORCE', '-SPEC:*', '-SPEC:V', '-SPEC:ADV', 'adjoinable', 'LF:P', 'PHI:PER:_', 'PHI:GEN:_', 'P', 'LANG:EN', '!COMP:*', 'COMP:D', '-SPEC:C', '-VAL', '-COMP:N', '-COMP:uWH', '-COMP:T', '-SPEC:INF'}
pro             ['LANG:EN']
pro-            {'COMP:C', 'COMP:R/D', '-SPEC:P', '-SPEC:R', '-COMP:AUX', 'COMP:T/prt', 'COMP:D/rel', 'COMP:R', '-SPEC:FORCE', '-SPEC:V', '-SPEC:N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', 'LF:pro', '-COMP:V', 'N', '-SPEC:uWH', 'PHI', 'SPEC:A', 'LANG:EN', 'COMP:uR', '-COMP:v', '-COMP:VA/inf', '-COMP:C/fin', 'PF:(pro)', '-COMP:A', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF'}
cl              {'CL', 'inflectional', 'LEFT:D,CL', 'RIGHT:ARE/inf', 'RIGHT:PRG', 'LEFT:T/fin', 'LANG:EN'}
inc             {'INCORPORATED', 'inflectional', 'LANG:EN'}
sg              {'inflectional', 'PHI:NUM:SG', 'LANG:EN'}
pl              {'PHI:NUM:PL', 'inflectional', 'LANG:EN'}
1p              {'inflectional', 'PHI:PER:1', 'LANG:EN'}
2p              {'PHI:PER:2', 'inflectional', 'LANG:EN'}
3p              {'inflectional', 'PHI:PER:3', 'LANG:EN'}
def             {'PHI:DET:DEF', 'inflectional', 'LANG:EN'}
indef           {'PHI:DET:INDEF', 'inflectional', 'LANG:EN'}
hum             {'inflectional', 'LANG:EN', 'PHI:HUM:HUM'}
nonhum          {'PHI:HUM:NONHUM', 'inflectional', 'LANG:EN'}
m               {'inflectional', 'PHI:GEN:M', 'LANG:EN'}
f               {'inflectional', 'PHI:GEN:F', 'LANG:EN'}
nom             {'TAIL:FIN,!COMP:*,VAL', 'inflectional', 'LANG:EN', 'NOM'}
acc             {'inflectional', 'LANG:EN', 'TAIL:v', 'ACC'}
dat             {'inflectional', 'DAT', 'TAIL:v', 'LANG:EN'}
uC/op           {'inflectional', 'uC/op', 'LANG:EN'}
wh              {'OP:WH', 'OP:_', 'inflectional', 'LANG:EN'}
wh_             {'OP', 'OP:_', 'inflectional', 'FORCE:OP:WH', 'LANG:EN'}
top             {'OP:TOP', 'inflectional', 'LANG:EN'}
foc             {'inflectional', 'OP:FOC', 'LANG:EN'}
fam             {'OP:FAM', 'inflectional', 'LANG:EN'}
pol             {'OP:POL', 'inflectional', 'LANG:EN'}
C/op            {'OP:C/OP', 'inflectional', 'LANG:EN'}
Q               {'OP', 'inflectional', 'OP:Q', 'OP:WH', 'LANG:EN'}
