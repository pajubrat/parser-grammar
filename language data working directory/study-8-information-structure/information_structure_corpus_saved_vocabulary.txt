ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'-SPEC:C/fin', '-VAL', '-SPEC:Neg/fin', '-SPEC:iWH', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-SPEC:v', '-ARG', '-SPEC:INF', '-SPEC:V', 'P', 'adjoinable', '-COMP:ADV', '-COMP:A', 'TAIL:V', 'COMP:ARE/inf', 'LF:to', '-SPEC:T/fin', '-SPEC:N', '-COMP:uWH', 'COMP:D', '-SPEC:*', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:P', '-SPEC:iR', '-COMP:T', 'PF:a', 'LANG:IT', '-COMP:N'}
a_D             {'-SPEC:Neg/fin', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-ARG', 'D', '-SPEC:INF', '-SPEC:V', '!PROBE:N', '-COMP:P', 'LANG:EN', 'adjoinable', '-COMP:D', '-COMP:uR', 'OP', '-SPEC:T/fin', 'COMP:N', '-SPEC:MA/lla', 'LF:D', '-SPEC:P', 'PF:D'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'PF:admire', '-VAL', 'PHI:NUM:_', 'SPEC:P', '-COMP:T/fin', '!COMP:*', 'PHI:PER:_', 'ARG', '-SPEC:Neg', 'V', '-COMP:P', 'LANG:EN', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'ASP', 'CLASS:TR', '-COMP:Neg', '-SPEC:T/fin', 'COMP:D', 'LF:admire', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
admire*         ['LANG:EN']
T/fin*          {'NO_NUMBER', '-VAL', 'LF:T', '!SPEC:*', "PF:T/fin'", 'LANG:EN', 'NO_DET', 'CAT:T/fin'}
v*              {'LF:v', 'NO_NUMBER', '-VAL', 'PF:v', 'LANG:EN', 'NO_DET', 'CAT:v'}
admire**        ['LANG:EN']
T/fin**         {'NO_NUMBER', '-VAL', 'LF:T', '!SPEC:*', 'NO_PERSON', 'LANG:EN', 'PHI:PER:3', 'NO_DET', "PF:T/fin''", 'CAT:T/fin'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'-VAL', 'PHI:NUM:_', 'SPEC:P', 'PHI:PER:_', 'ARG', 'V', 'SPEC:TO/inf', 'COMP:P', '-SPEC:FORCE', 'PHI:GEN:_', 'ASP', '-SPEC:T/fin', 'COMP:D', 'LF:admire', 'PF:adora', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N'}
antaa           ['LANG:FI']
anta-           {'-VAL', 'PF:antaa', 'SPEC:P', 'PHI:NUM:_', '!COMP:*', 'LF:give', 'PHI:PER:_', 'ARG', 'V', 'ASP:BOUNDED', '+SEM:directional', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', '-COMP:FIN', 'ASP', 'CLASS:DITR', '-SPEC:T/fin', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'-VAL', 'PF:ask', 'PHI:NUM:_', 'SPEC:P', 'PHI:PER:_', 'ARG', 'V', 'LF:ask', 'LANG:EN', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'ASP', '-SPEC:T/fin', 'COMP:D', 'SEM:internal', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'PF:avain', 'COMP:R', '-SPEC:P', '-COMP:A', 'LANG:FI', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'LF:key', 'COMP:T/prt', '-SEM:directional', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', '-COMP:N'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'LF:car', 'COMP:R', '-SPEC:P', '-COMP:A', 'LANG:FI', '-COMP:C/fin', 'COMP:P', 'PF:auto', '-COMP:WH', 'COMP:T/prt', '-SEM:directional', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', '-COMP:N'}
bank            {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'PF:bank1', 'LF:bank_inst', 'LANG:EN', 'COMP:R', '-SPEC:P', '-COMP:A', '-COMP:C/fin', 'COMP:P', 'FREQ:1', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', '-COMP:N'}
bank            {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'LANG:EN', 'COMP:R', '-SPEC:P', '-COMP:A', 'PF:bank2', '-COMP:C/fin', 'COMP:P', '-SPEC:FORCE', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', 'FREQ:2', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', 'LF:bank_river', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:R', 'COMP:uR', '-SPEC:C/fin', '-COMP:V', '-COMP:v', '-COMP:N'}
barn            {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'LANG:EN', 'COMP:R', '-SPEC:P', '-COMP:A', '-COMP:C/fin', 'COMP:P', 'LF:barn', '-COMP:WH', '-SPEC:FORCE', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', 'PF:barn', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:R', 'COMP:uR', '-SPEC:C/fin', '-COMP:V', '-COMP:v', '-COMP:N'}
city            {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'LANG:EN', 'LF:city', 'COMP:R', 'PF:city', '-COMP:A', '-SPEC:P', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', '-COMP:N'}
che             ['LANG:IT']
che-            {'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'LF:who', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N', '-COMP:AUX', 'PHI_N', '-SPEC:V', '-SPEC:P', '-COMP:A', 'COMP:P', '-COMP:WH', 'PF:che', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin'}
chiamato        ['LANG:IT']
chiamata-       {'-VAL', 'PHI:NUM:_', 'SPEC:P', 'PHI:PER:_', 'ARG', 'V', 'LF:called', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'ASP', '-SPEC:T/fin', 'PF:chiamato', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N'}
claims          ['LANG:EN']
claim-          {'-VAL', 'PHI:NUM:_', 'SPEC:P', 'PF:claim', 'PHI:PER:_', 'ARG', 'V', 'LANG:EN', '-COMP:V', '-COMP:D', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'ASP', '-SPEC:T/fin', 'LF:claim', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', 'COMP:T/fin', '-COMP:v', 'SPEC:D', '-COMP:N'}
danno           {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:A', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'PF:danno', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', 'LF:damage', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'-VAL', 'LF:detest', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'ARG', 'V', 'PF:detest', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'COMP:ARE/inf', 'ASP', '-SPEC:T/fin', 'COMP:D', 'SEM:internal', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N'}
devono          ['LANG:EN']
deva-           {'-VAL', 'PHI:NUM:_', 'SPEC:P', 'PHI:PER:_', 'ARG', 'V', 'SPEC:TO/inf', 'COMP:P', '-SPEC:FORCE', 'PHI:GEN:_', 'COMP:ARE/inf', '-ASP', '-SPEC:T/fin', 'SEM:internal', 'PF:deva', 'SPEC:ADV', 'PHI:DET:_', 'LF:must', '-COMP:V', '-COMP:v', 'SPEC:D', 'LANG:IT', '-COMP:N'}
di              {'-SPEC:C/fin', '-VAL', '-SPEC:Neg/fin', '-SPEC:iWH', 'PHI:NUM:_', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-SPEC:v', 'ARG', '-SPEC:INF', '-SPEC:V', 'PHI:PER:_', 'P', '-COMP:ADV', '-COMP:A', 'LF:of', 'LANG:FI', 'PF:di', 'SPEC:*', '-SPEC:T/fin', '-SPEC:N', '-COMP:uWH', 'COMP:D', '-SPEC:ADV', '-adjoinable', '-SPEC:FORCE', '-SPEC:P', 'PHI:DET:_', '-SPEC:iR', '-COMP:T', '-COMP:N'}
does            {'!COMP:*', 'LANG:EN', 'PHI:PER:3', 'VAL', 'COMP:T/prt', 'T/fin', 'T', '!SPEC:*', '-SPEC:T/fin', 'LF:does', 'PHI:NUM:SG', 'PHI:GEN:M', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:C', '-SPEC:v', 'PHI:PER:_', 'ARG', '-SPEC:V', '-SPEC:Neg', 'COMP:v', 'PHI:GEN:F', 'SPEC:TO/inf', 'FIN', 'COMP:V', 'PHI:GEN:_', 'SPEC:C/fin', 'SPEC:*', 'PF:does', 'COMP:Neg', '-COMP:INF', '-SPEC:N', 'SPEC:FORCE', '-SPEC:TO/inf', '!PROBE:V', 'PHI:DET:_', 'SPEC:D'}
does_C          ['LANG:EN']
does-           {'!COMP:*', 'LANG:EN', 'PHI:PER:3', 'VAL', 'COMP:T/prt', 'T/fin', 'T', '!SPEC:*', '-SPEC:T/fin', 'LF:does', 'PHI:NUM:SG', 'PHI:GEN:M', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:C', '-SPEC:v', 'PHI:PER:_', 'ARG', '-SPEC:V', '-SPEC:Neg', 'COMP:v', 'PHI:GEN:F', 'SPEC:TO/inf', 'FIN', 'COMP:V', 'PHI:GEN:_', 'SPEC:C/fin', 'SPEC:*', 'PF:does', 'COMP:Neg', '-COMP:INF', '-SPEC:N', 'SPEC:FORCE', '-SPEC:TO/inf', '!PROBE:V', 'PHI:DET:_', 'SPEC:D'}
dorme           ['LANG:IT']
dorme-          {'-VAL', 'PHI:NUM:_', 'SPEC:P', '-COMP:MA/inf', 'PHI:PER:_', 'ARG', 'V', 'LANG:EN', '-COMP:D', 'PF:dorme', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'LF:sleep', 'ASP', '!SPEC:D', '-SPEC:T/fin', 'CLASS:INTR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
disappeared     ['LANG:EN']
disappear-      {'LF:disappear', '-VAL', 'PHI:NUM:_', 'SPEC:P', '-COMP:MA/inf', 'PHI:PER:_', 'ARG', 'V', 'LANG:EN', 'PF:disappear', '-COMP:D', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'ASP', '-SPEC:T/fin', 'CLASS:INTR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'PF:easy', 'LANG:EN', 'SPEC:D', 'LF:easy', '2SPEC', '0'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'PHI:NUM:_', '!COMP:*', 'PHI:PER:_', 'ARG', '%SPEC:INF', 'PF:ei', 'LANG:FI', '!COMP:T', 'FIN', 'VAL', 'COMP:T/prt', 'SPEC:*', 'POL:NEG', '!SPEC:*', '-SPEC:T/fin', 'Neg/fin', 'SEM:internal', 'PHI:DET:_', 'LF:neg', 'NEG', '-SPEC:T'}
e-              {'PHI:NUM:_', '!COMP:*', 'PHI:PER:_', 'ARG', '%SPEC:INF', 'PF:ei', 'LANG:FI', '!COMP:T', 'FIN', 'VAL', 'COMP:T/prt', 'SPEC:*', 'POL:NEG', '!SPEC:*', '-SPEC:T/fin', 'Neg/fin', 'SEM:internal', 'PHI:DET:_', 'LF:neg', 'NEG', '-SPEC:T'}
elaa            ['LANG:FI']
ela-            {'-VAL', 'PHI:NUM:_', 'SPEC:P', '-COMP:MA/inf', 'PHI:PER:_', 'ARG', 'V', '-COMP:D', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', 'LF:live', 'ASP', 'SPEC:D', '-SPEC:T/fin', 'CLASS:INTR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'PF:elaa', '-COMP:N'}
etsii           ['LANG:FI']
etsi-           {'-VAL', '!COMP:D', 'SPEC:P', 'PHI:NUM:_', '!COMP:*', 'PHI:PER:_', 'ARG', 'V', '-COMP:P', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', 'PF:etsi', 'ASP', 'CLASS:TR', '-SPEC:T/fin', 'LF:search', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
etta            {'-VAL', 'FORCE', '!COMP:*', 'COMP:C/fin', 'LANG:FI', '-ARG', '-SPEC:*', '!PROBE:FIN', 'LF:that', 'PF:etta', '-SPEC:D', 'COMP:T/fin', 'FIN'}
fell            ['LANG:EN']
fell-           {'-VAL', 'PHI:NUM:_', 'SPEC:P', '-COMP:MA/inf', 'LF:fell', 'ARG', 'PHI:PER:_', 'V', 'LANG:EN', '-COMP:D', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'ASP', 'PF:fell', '-SPEC:T/fin', 'CLASS:INTR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
flow'           {'-VAL', 'LF:flow', 'PHI:NUM:_', 'SPEC:P', 'PF:flow', 'ARG', 'PHI:PER:_', 'V', 'LANG:EN', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'ASP', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
from            {'-SPEC:C/fin', 'PF:from', '-VAL', '-SPEC:Neg/fin', '-SPEC:iWH', 'PHI:NUM:_', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-SPEC:v', 'ARG', '-SPEC:INF', '-SPEC:V', 'PHI:PER:_', 'P', 'adjoinable', 'LANG:EN', '-COMP:ADV', '-COMP:A', 'PHI:GEN:_', 'LF:from', 'TAIL:V,+SEM:directional', '-SPEC:T/fin', '-SPEC:N', 'COMP:D', '-COMP:uWH', '-SPEC:ADV', '-float', '-SPEC:*', '-SPEC:FORCE', '-SPEC:P', 'PHI:DET:_', '-SPEC:iR', '-COMP:T', '-COMP:N'}
gave            ['LANG:EN']
give-           {'PF:give', '-VAL', 'PHI:NUM:_', 'SPEC:P', '!COMP:*', 'LF:give', 'PHI:PER:_', 'ARG', 'V', 'LANG:EN', '+SEM:directional', 'SPEC:TO/inf', 'COMP:P', '-COMP:FIN', 'PHI:GEN:_', 'ASP', 'CLASS:DITR', '-SPEC:T/fin', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-COMP:AUX', 'N', 'PF:Giuseppe', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:A', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-SEM:directional', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', 'LF:Giuseppe', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'LF:want', 'SPEC:ADV', '-VAL', 'PHI:NUM:_', 'SPEC:P', '!COMP:*', 'PHI:PER:_', 'ARG', 'V', 'COMP:A/inf', '-COMP:P', 'ASP:BOUNDED', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', 'ASP', 'CLASS:TR', '-SPEC:T/fin', 'COMP:D', '-SPEC:*', 'SEM:internal', '-SPEC:FORCE', 'PF:haluaa', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
hairitsee       ['LANG:FI']
hairitse-       {'-VAL', '!COMP:D', 'SPEC:P', 'PHI:NUM:_', '!COMP:*', 'PHI:PER:_', 'ARG', 'LF:disturb', 'V', '-COMP:P', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', '-COMP:FIN', 'ASP', 'CLASS:TR', '-SPEC:T/fin', 'COMP:D', 'PF:hairitsee', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'LF:have', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:T', 'PHI:PER:_', 'ARG', 'V', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'SPEC:*', 'PF:ha', '-ASP', '-SPEC:T/fin', 'SEM:internal', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'SPEC:D', 'LANG:IT', '-COMP:N'}
horse           {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'PF:horse', '-SPEC:V', 'LANG:EN', 'COMP:R', '-SPEC:P', '-COMP:A', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', 'LF:horse', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', '-COMP:N'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'LF:disappear', '-VAL', 'PHI:NUM:_', 'SPEC:P', '-COMP:MA/inf', 'PHI:PER:_', 'ARG', 'V', '-COMP:D', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', 'ASP', 'PF:havia', '-SPEC:T/fin', 'CLASS:INTR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
Helsingissa     ['LANG:FI']
Helsinki        ['LANG:FI']
Helsinki-       {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'LF:Helsinki', 'COMP:R', '-SPEC:P', '-COMP:A', 'LANG:FI', '-COMP:C/fin', 'COMP:P', '-SPEC:FORCE', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', 'PF:Helsinki', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:R', 'COMP:uR', '-SPEC:C/fin', '-COMP:V', '-COMP:v', '-COMP:N'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'-VAL', '!COMP:D', 'SPEC:P', 'PHI:NUM:_', '!COMP:*', 'PHI:PER:_', 'ARG', 'V', '-COMP:P', 'PF:ihaile-', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', '-COMP:FIN', 'ASP', 'CLASS:TR', '-SPEC:T/fin', 'COMP:D', 'LF:admire', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
il              {'-SPEC:Neg/fin', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-ARG', 'D', '-SPEC:INF', '-SPEC:V', '!PROBE:N', '-COMP:P', 'PF:il', 'adjoinable', '-COMP:D', 'LF:the', '-COMP:uR', 'OP', '-SPEC:T/fin', 'COMP:N', '-SPEC:MA/lla', '-SPEC:P', 'LANG:IT'}
i               {'-SPEC:Neg/fin', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-ARG', 'D', '-SPEC:INF', '-SPEC:V', '!PROBE:N', '-COMP:P', 'PF:il', 'adjoinable', '-COMP:D', 'LF:the', '-COMP:uR', 'OP', '-SPEC:T/fin', 'COMP:N', '-SPEC:MA/lla', '-SPEC:P', 'LANG:IT'}
in              {'-SPEC:C/fin', '-VAL', '-SPEC:Neg/fin', '-SPEC:iWH', 'PHI:NUM:_', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-SPEC:v', 'ARG', '-SPEC:INF', '-SPEC:V', 'PHI:PER:_', 'P', 'adjoinable', '-COMP:ADV', '-COMP:A', 'PHI:GEN:_', 'PF:in', '-SPEC:T/fin', '-SPEC:N', '-COMP:uWH', 'COMP:D', '-SPEC:ADV', 'LF:in', '-SPEC:FORCE', '-SPEC:P', 'PHI:DET:_', '-SPEC:iR', '-COMP:T', 'LANG:IT', '-COMP:N'}
infermieri      {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:A', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', 'PF:infermieri', '-SPEC:T/fin', 'LF:nurses', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N'}
is              ['LANG:EN']
be-             {'-VAL', 'PF:be', 'SPEC:P', '!COMP:*', '-ARG', 'V', 'LANG:EN', 'COPULA', 'SPEC:TO/inf', 'COMP:P', '-COMP:TO/inf', 'ASP', 'LF:be', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:ADV', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'PF:istuu', '-VAL', 'PHI:NUM:_', 'SPEC:P', '-COMP:MA/inf', 'PHI:PER:_', 'ARG', 'V', 'LF:sit', '-COMP:D', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', 'ASP', '-SPEC:T/fin', 'CLASS:INTR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
John            ['LANG:EN']
John-           {'LF:John', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'LANG:EN', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', 'PF:John', '-SPEC:T/fin', '-SPEC:ADV', '-adjoinable', 'COMP:R/D', '-COMP:V', '-COMP:v', '-COMP:N', '-COMP:AUX', '-SPEC:V', '-SPEC:P', '-COMP:A', 'COMP:P', '-COMP:WH', '-SEM:directional', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'LF:who', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', '-COMP:V', '-COMP:v', 'PF:joka', '-COMP:N', '-COMP:AUX', 'PHI_N', '-SPEC:V', '-SPEC:P', '-COMP:A', 'LANG:FI', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'LF:Jukka', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:A', 'LANG:FI', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'PF:Jukka', 'COMP:T/prt', '-SEM:directional', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', '-COMP:N'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'-VAL', 'PHI:NUM:_', 'SPEC:P', 'PHI:PER:_', 'PF:juokse-', 'ARG', 'V', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', 'ASP', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:v', '-COMP:V', 'LF:run', '-COMP:N'}
kaksi           {'SPEC:*', '-VAL', 'PHI:NUM:_', 'PF:kaksi', 'LF:two', 'PHI:PER:_', 'ARG', 'COMP:N', 'NUM', 'COMP:n', 'PHI:DET:_', 'LANG:FI', 'TAIL:ARG,VAL,FIN', 'PHI:NUM:SG'}
kaksi           {'SPEC:*', 'TAIL:*POL:NEG', 'PF:kaksi', 'LF:two', 'COMP:N', 'NUM', 'COMP:n', 'LANG:EN', 'TAIL:ARG,ASP:BOUNDED'}
kaksi_1         {'SPEC:*', '-VAL', 'PHI:NUM:_', 'PF:kaksi', 'LF:two', 'PHI:PER:_', 'ARG', 'COMP:N', 'NUM', 'COMP:n', 'PHI:DET:_', 'LANG:FI', 'TAIL:ARG,VAL,FIN', 'PHI:NUM:SG'}
kaksi_2         {'SPEC:*', 'TAIL:*POL:NEG', 'PF:kaksi', 'LF:two', 'COMP:N', 'NUM', 'COMP:n', 'LANG:EN', 'TAIL:ARG,ASP:BOUNDED'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'NUM', 'COMP:n', 'SPEC:*', 'PF:kaksi', 'LF:two', 'LANG:FI', 'COMP:N'}
kaupunkia       ['LANG:EN']
kaupunki        {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'PF:kaupunki', '-COMP:P', 'COMP:R', 'LF:city', '-SPEC:P', '-COMP:A', 'LANG:FI', '-COMP:C/fin', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', '-COMP:N'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'SEM:external', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'PHI:PER:_', 'ARG', 'V', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', '-SPEC:FORCE', 'LF:order', '!COMP:A/inf', 'ASP', '-SPEC:T/fin', 'PF:kaske', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:A', 'LF:watch', 'LANG:FI', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', 'PF:kello', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', '-COMP:N'}
kello0-         {'PF:kello', 'SPEC:D', '2SPEC', 'LF:watch', 'LANG:FI', '0'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'LANG:EN', 'COMP:R', '-SPEC:P', '-COMP:A', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'PF:key', 'LF:key', 'COMP:T/prt', '-SEM:directional', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', '-COMP:N'}
kirja           ['LANG:FI']
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-COMP:AUX', 'N', 'LF:book', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:A', 'PF:kirja', 'LANG:FI', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-SEM:directional', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', '-COMP:N'}
knows           ['LANG:EN']
know-           {'-VAL', 'PHI:NUM:_', 'SPEC:P', '!COMP:*', 'PHI:PER:_', 'LF:know', 'ARG', 'V', '-COMP:P', 'LANG:EN', 'PF:know', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'ASP', 'CLASS:TR', '-SPEC:T/fin', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
kohti           {'-SPEC:C/fin', 'LF:towards', '-VAL', '-SPEC:Neg/fin', '-SPEC:iWH', 'PHI:NUM:_', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-SPEC:v', 'ARG', '-SPEC:INF', '-SPEC:V', 'PHI:PER:_', 'P', 'adjoinable', '-COMP:ADV', '-COMP:A', 'LANG:FI', 'TAIL:V', '-SPEC:FORCE', 'SPEC:*', '-SPEC:T/fin', '-SPEC:N', '-COMP:uWH', 'COMP:D', '-SPEC:ADV', 'PF:kohti', '-SPEC:P', 'PHI:DET:_', '-SPEC:iR', '-COMP:T', '-COMP:N'}
koko            {'LF:all', 'TAIL:T', '-SPEC:Neg/fin', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-ARG', 'D', '-SPEC:INF', '-SPEC:V', '!PROBE:N', 'adjoinable', '-COMP:P', 'PF:koko', '-COMP:D', 'LANG:FI', '-COMP:uR', 'OP', '-SPEC:T/fin', 'COMP:N', '-SPEC:MA/lla', '-SPEC:P'}
kuka            ['LANG:FI']
kuka-           {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'LF:who', 'COMP:R', '-SPEC:P', '-COMP:A', 'LANG:FI', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'PF:kuka', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', 'PHI', '-COMP:V', '-COMP:v', '-COMP:N'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'LF:snore', 'PF:kuorsaa', '-VAL', 'PHI:NUM:_', 'SPEC:P', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'V', '-COMP:D', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', '-COMP:WH', 'ASP', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
lahella         {'-SPEC:C/fin', '-SPEC:Neg/fin', '-SPEC:iWH', '!COMP:*', '-SPEC:INF', '-COMP:FORCE', 'adjoinable', '-COMP:C/fin', 'VAL', '!SPEC:*', '-SPEC:T/fin', 'COMP:D', '-SPEC:ADV', '-SPEC:iR', 'LF:near', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:C', '-SPEC:v', 'PHI:PER:_', 'ARG', '-SPEC:V', 'P', 'COMP:v', 'PF:lahella', '-COMP:A', 'LANG:FI', 'INF', 'COMP:V', 'SPEC:*', '!SPEC:D', '-SPEC:N', '-COMP:uWH', '-SPEC:FORCE', '-SPEC:P', 'PHI:DET:_', '-COMP:T', '-COMP:ADV'}
lahella         {'-SPEC:C/fin', '-VAL', '!COMP:D', '-SPEC:Neg/fin', '-SPEC:iWH', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-SPEC:v', 'ARG', '-SPEC:INF', '-SPEC:V', '-COMP:T', 'P', 'PHI:PER:_', 'adjoinable', 'PF:lahella', '-COMP:ADV', 'PHI:NUM:_', '-COMP:A', 'LANG:FI', 'SPEC:*', '-SPEC:T/fin', '-SPEC:N', '-COMP:uWH', 'COMP:D', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:P', 'PHI:DET:_', '-SPEC:iR', 'LF:near', '-COMP:N'}
lahella_1       {'-SPEC:C/fin', '-VAL', '!COMP:D', '-SPEC:Neg/fin', '-SPEC:iWH', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-SPEC:v', 'ARG', '-SPEC:INF', '-SPEC:V', '-COMP:T', 'P', 'PHI:PER:_', 'adjoinable', 'PF:lahella', '-COMP:ADV', 'PHI:NUM:_', '-COMP:A', 'LANG:FI', 'SPEC:*', '-SPEC:T/fin', '-SPEC:N', '-COMP:uWH', 'COMP:D', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:P', 'PHI:DET:_', '-SPEC:iR', 'LF:near', '-COMP:N'}
lahella_2       {'-SPEC:C/fin', '-SPEC:Neg/fin', '-SPEC:iWH', '!COMP:*', '-SPEC:INF', '-COMP:FORCE', 'adjoinable', '-COMP:C/fin', 'VAL', '!SPEC:*', '-SPEC:T/fin', 'COMP:D', '-SPEC:ADV', '-SPEC:iR', 'LF:near', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:C', '-SPEC:v', 'PHI:PER:_', 'ARG', '-SPEC:V', 'P', 'COMP:v', 'PF:lahella', '-COMP:A', 'LANG:FI', 'INF', 'COMP:V', 'SPEC:*', '!SPEC:D', '-SPEC:N', '-COMP:uWH', '-SPEC:FORCE', '-SPEC:P', 'PHI:DET:_', '-COMP:T', '-COMP:ADV'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'-VAL', 'PHI:NUM:_', 'SPEC:P', '-COMP:MA/inf', 'LF:leave', 'PHI:PER:_', 'ARG', 'V', 'COMP:PP', '-COMP:D', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', 'ASP', '-SPEC:T/fin', 'CLASS:INTR', 'PF:lahtea', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
lavano          ['LANG:IT']
lava-           {'-VAL', 'PHI:NUM:_', 'SPEC:P', '!COMP:*', 'PHI:PER:_', 'ARG', 'V', 'PF:lava', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'LF:wash', 'ASP', '-SPEC:T/fin', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-SPEC:Neg/fin', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-ARG', 'D', '-SPEC:INF', '-SPEC:V', '!PROBE:N', '-COMP:P', 'adjoinable', '-COMP:D', '-COMP:uR', 'PF:le', 'OP', '-SPEC:T/fin', 'COMP:N', '-SPEC:MA/lla', 'LF:D', '-SPEC:P', 'LANG:IT'}
leaves          ['LANG:EN']
leave           {'-VAL', 'PHI:NUM:_', 'SPEC:P', '-COMP:T/fin', 'LF:leave', 'PHI:PER:_', 'ARG', 'V', 'LANG:EN', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'PF:leave', 'ASP', '!SPEC:D', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
leave-          {'-VAL', 'PHI:NUM:_', 'SPEC:P', '-COMP:T/fin', 'LF:leave', 'PHI:PER:_', 'ARG', 'V', 'LANG:EN', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'PF:leave', 'ASP', '!SPEC:D', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
like-           {'-VAL', '!COMP:D', 'SPEC:P', 'PHI:NUM:_', 'LF:like', 'ARG', 'PHI:PER:_', 'V', 'LANG:EN', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'ASP', '-SPEC:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'SPEC:ADV', 'PF:like', '-COMP:V', '-COMP:v', '-COMP:N'}
likes           ['LANG:EN']
like            {'-VAL', '!COMP:D', 'SPEC:P', 'PHI:NUM:_', 'LF:like', 'ARG', 'PHI:PER:_', 'V', 'LANG:EN', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'ASP', '-SPEC:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'SPEC:ADV', 'PF:like', '-COMP:V', '-COMP:v', '-COMP:N'}
little          ['LANG:EN']
little-         {'LANG:EN', 'LF:little', 'PF:little-', '2SPEC', 'SPEC:D', '0'}
lle             {'-SPEC:C/fin', 'LF:for', '-VAL', '-SPEC:Neg/fin', '-SPEC:iWH', 'PHI:NUM:_', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-SPEC:v', 'ARG', '-SPEC:INF', '-SPEC:V', 'PHI:PER:_', 'P', 'adjoinable', '-COMP:ADV', '+SEM:directional', '-COMP:A', 'LANG:FI', 'PF:P(lle)', 'TAIL:V,+SEM:directional', '-SPEC:T/fin', '-SPEC:N', 'COMP:D', '-SPEC:*', '-SPEC:ADV', '-COMP:uWH', '-SPEC:FORCE', '-SPEC:P', 'PHI:DET:_', '-SPEC:iR', '-COMP:T', '-COMP:N'}
lla             {'-SPEC:C/fin', 'TAIL:T', '-VAL', '-SPEC:Neg/fin', '-SPEC:iWH', 'PHI:NUM:_', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-SPEC:v', 'ARG', '-SPEC:INF', '-SPEC:V', 'PHI:PER:_', 'P', 'adjoinable', '-COMP:ADV', '-COMP:A', 'LANG:FI', 'SPEC:*', 'PF:P(lla)', 'LF:by', '-SPEC:T/fin', '-SPEC:N', '-COMP:uWH', 'COMP:D', '-SPEC:ADV', 'TAIL:*V', '-SPEC:FORCE', '-SPEC:P', 'PHI:DET:_', '-SPEC:iR', '-COMP:T', '-COMP:N'}
Luisa           ['LANG:IT']
Luisa-          {'-COMP:AUX', 'N', '-SPEC:uWH', 'PF:Luisa', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:A', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'LF:Luisa', 'COMP:T/prt', '-SEM:directional', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'PF:luke', '-VAL', 'LF:read', 'PHI:NUM:_', 'SPEC:P', '!COMP:*', 'PHI:PER:_', 'ARG', 'V', '-COMP:P', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', 'ASP', 'CLASS:TR', '-SPEC:T/fin', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'LF:find', '-VAL', '!COMP:D', 'SPEC:P', 'PHI:NUM:_', '!COMP:*', 'PHI:PER:_', 'ARG', 'V', '-COMP:P', 'ASP:BOUNDED', 'PF:loyta-', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', 'ASP', 'CLASS:TR', '-SPEC:T/fin', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
Mary            ['LANG:EN']
Mary-           {'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'LANG:EN', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-SPEC:ADV', '-adjoinable', 'COMP:R/D', 'PF:Mary', '-COMP:V', '-COMP:v', '-COMP:N', '-COMP:AUX', 'LF:Mary', '-SPEC:V', '-SPEC:P', '-COMP:A', 'COMP:P', '-COMP:WH', '-SEM:directional', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'COMP:R', 'LF:Merja', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-SPEC:ADV', '-adjoinable', 'COMP:R/D', '-COMP:V', '-COMP:v', '-COMP:N', '-COMP:AUX', '-SPEC:V', '-SPEC:P', '-COMP:A', 'LANG:FI', 'COMP:P', '-COMP:WH', '-SEM:directional', 'PF:Merja', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'TAIL:T', 'SPEC:*', '-SPEC:Neg/fin', 'LF:by', 'LANG:FI', '-SPEC:T/fin', '-SPEC:N', 'ADV', 'COMP:v', 'adjoinable', '-SPEC:FORCE', 'PF:malla', 'MA/inf'}
meren           ['LANG:FI']
mere-           {'-COMP:AUX', 'PF:meri', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:A', 'LANG:FI', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', 'LF:ocean', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', '-COMP:N'}
mies            {'-COMP:AUX', 'N', '-SPEC:uWH', 'LF:man', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:A', 'LANG:FI', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', 'PF:mies', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', '-COMP:N'}
mistake         {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'LF:mistake', 'LANG:EN', 'COMP:R', '-SPEC:P', '-COMP:A', '-COMP:C/fin', 'COMP:P', '-SPEC:FORCE', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', 'PF:mistake', '-SPEC:C/fin', '-COMP:V', '-COMP:v', '-COMP:N'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'LF:what', '-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:A', 'LANG:FI', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', 'PF:mika-', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', '-COMP:N'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'-VAL', 'PHI:NUM:_', 'SPEC:P', 'LANGN:EN', '!COMP:*', 'PHI:PER:_', 'ARG', 'V', 'PF:move', '-COMP:P', '+SEM:directional', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'LF:move', 'ASP', 'CLASS:TR', '-SPEC:T/fin', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
mukavasti       ['LANG:EN']
mukava-         {'PF:mukavasti', 'LF:comfortably', '2SPEC', 'LANG:FI', 'SPEC:D', '0'}
must            {'PF:must', 'PHI:NUM:_', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-SPEC:v', 'ARG', '-SPEC:V', 'PHI:PER:_', '-SPEC:Neg', 'COMP:v', 'LANG:EN', 'SPEC:TO/inf', 'FIN', 'VAL', 'COMP:V', 'SPEC:C/fin', 'COMP:T/prt', 'PHI:GEN:_', 'SPEC:*', 'T/fin', 'T', 'COMP:Neg', '!SPEC:*', '-COMP:INF', 'MODAL', '-SPEC:T/fin', '-SPEC:N', 'SPEC:FORCE', '-SPEC:TO/inf', '!PROBE:V', 'PHI:DET:_', 'LF:must', 'SPEC:D'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'-VAL', 'PHI:NUM:_', 'SPEC:P', '-COMP:T/fin', '!COMP:*', 'LF:sell', 'ARG', 'PHI:PER:_', 'V', '-COMP:P', 'ASP:BOUNDED', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', 'PF:myy', 'ASP', 'CLASS:TR', '-SPEC:T/fin', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
naki            ['LANG:FI']
nakee           ['LANG:FI']
nake-           {'-VAL', 'PHI:NUM:_', 'SPEC:P', '-COMP:MA/ssa', '-COMP:MA/tta', '!COMP:*', 'PHI:PER:_', 'ARG', 'V', 'PF:nake', '-COMP:P', 'ASP:BOUNDED', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', 'LF:see', 'ASP', 'CLASS:TR', '-SPEC:T/fin', 'COMP:D', '-COMP:ESSA/inf', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
nayttaa         ['LANG:FI']
naytta-         {'SPEC:P', '!COMP:VA/inf', '-ARG', 'V', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', 'VAL', 'LF:seem', 'ASP', '!SPEC:D', 'PF:naytta', '-SPEC:T/fin', 'SEM:internal', '-SPEC:FORCE', 'SPEC:ADV', '-COMP:V', '-COMP:v', '-COMP:N'}
ndo             {'VAL', 'COMP:V', 'LF:ing', 'PRG', '-COMP:T/fin', '!COMP:*', '-SPEC:V', 'PF:PRG', '-SPEC:T/fin', '-COMP:FORCE', 'COMP:v', 'LANG:EN', '?ARG', '-COMP:C/fin', 'INF'}
ne              {'PF:ne', '-SPEC:Neg/fin', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-ARG', 'D', '-SPEC:INF', '-SPEC:V', 'PHI:NUM:PL', '!PROBE:N', '-COMP:P', 'adjoinable', 'PHI:PER:3', '-COMP:D', 'LANG:FI', '-COMP:uR', 'LF:those', 'OP', '-SPEC:T/fin', 'COMP:N', '-SPEC:MA/lla', '-SPEC:P'}
niiden          ['LANG:EN']
nen             {'LF:ing', 'SPEC:*', 'A', 'COMP:0', '-SPEC:A', '-SPEC:D', 'LANG:FI', 'PF:a', 'TAIL:D'}
not             {'PHI:GEN:_', 'SPEC:*', '-VAL', 'POL:NEG', '-COMP:C', 'PHI:NUM:_', '!COMP:*', 'Neg', 'ARG', 'LF:not', '-SPEC:T/fin', 'PHI:PER:_', 'LANG:EN', '-COMP:D', 'PHI:DET:_', '-COMP:FIN', 'PF:not'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'PF:nukku', '-VAL', 'PHI:NUM:_', 'SPEC:P', '-COMP:T/fin', '-COMP:T', 'PHI:PER:_', 'ARG', 'V', '-COMP:V', '-COMP:D', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', 'LF:sleep', 'ASP', '-COMP:Neg/fin', '-SPEC:T/fin', 'CLASS:INTR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:MA/inf', '-COMP:v', 'SPEC:D', '-COMP:N'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-SPEC:C/fin', '-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:A', 'LANG:FI', '-COMP:C/fin', 'PF:omaisuuden', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', 'LF:possessions', '-COMP:V', '-COMP:v', '-COMP:N'}
operatoria      ['LANG:IT']
operatoria-     {'LF:operation', '0', '2SPEC', 'PF:operatoria', 'SPEC:D', 'LANG:IT'}
ostaa           ['LANG:FI']
osta-           {'PF:osta', '-VAL', 'PHI:NUM:_', 'SPEC:P', '!COMP:*', 'PHI:PER:_', 'ARG', 'V', '-COMP:P', 'ASP:BOUNDED', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', 'ASP', 'CLASS:TR', 'LF:buy', '-SPEC:T/fin', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:A', 'LANG:FI', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'PF:paiva', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', 'SEM:nonreferential', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', 'LF:day', '-COMP:V', '-COMP:v', '-COMP:N'}
past            {'-SPEC:C/fin', '-VAL', '-SPEC:Neg/fin', '-SPEC:iWH', 'PHI:NUM:_', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-SPEC:v', 'ARG', '-SPEC:INF', '-SPEC:V', 'PHI:PER:_', 'P', 'adjoinable', 'LANG:EN', '-COMP:ADV', '-COMP:A', 'PHI:GEN:_', 'PF:past', 'LF:past', '-SPEC:T/fin', '-SPEC:N', '-COMP:uWH', 'COMP:D', '-SPEC:*', '-SPEC:ADV', '-float', '-SPEC:FORCE', '-SPEC:P', 'PHI:DET:_', '-SPEC:iR', '-COMP:T', '-COMP:N'}
Pariisia        ['LANG:FI']
Pariisi-        {'-COMP:AUX', 'N', '-SPEC:uWH', 'LF:Paris', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:A', 'LANG:FI', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', 'PF:Pariisi', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', '-COMP:N'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-COMP:AUX', 'N', 'LF:Pekka', 'PF:Pekka', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:A', 'LANG:FI', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-SEM:directional', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', '-COMP:N'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'-VAL', 'PHI:NUM:_', 'PF:pelkaa', 'SPEC:P', 'LF:fear', '!COMP:*', 'PHI:PER:_', 'ARG', 'V', '-COMP:P', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', 'ASP', 'CLASS:TR', '-SPEC:T/fin', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
persuades       ['LANG:EN']
persuade-       {'SEM:external', '-VAL', 'PHI:NUM:_', 'SPEC:P', '!COMP:*', 'PHI:PER:_', 'ARG', 'V', 'LANG:EN', 'COMP:TO/inf', 'PF:persuade', 'SPEC:TO/inf', 'COMP:P', 'LF:persuade', 'PHI:GEN:_', 'ASP', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
peruuntui       ['LANG:FI']
peruuntu-       {'-VAL', 'PHI:NUM:_', 'SPEC:P', 'PHI:PER:_', 'ARG', 'V', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', 'LF:cancelled', 'ASP', 'PF:peruuntui', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'-VAL', 'PF:pese_asp', 'SPEC:P', 'PHI:NUM:_', '!COMP:*', 'PHI:PER:_', 'ARG', 'V', '-COMP:P', 'ASP:BOUNDED', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', 'LF:wash', 'ASP', 'CLASS:TR', '-SPEC:T/fin', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
pese-           {'-VAL', 'PHI:NUM:_', 'SPEC:P', '!COMP:*', 'PHI:PER:_', 'ARG', 'V', '-COMP:P', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', 'PF:pese', 'LF:wash', 'ASP', 'CLASS:TR', '-SPEC:T/fin', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
petardi         {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'COMP:R', '-SPEC:P', 'LF:firecrackers', '-COMP:A', '-COMP:C/fin', 'PF:petardi', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N'}
pieni           ['LANG:FI']
pieni-          {'PF:pieni-', 'LF:small', '2SPEC', 'LANG:FI', 'SPEC:D', '0'}
poikien         ['LANG:FI']
poika-          {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:A', 'LANG:FI', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'LF:boy', 'COMP:T/prt', 'COMP:D/rel', 'PF:poika', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', '-COMP:N'}
puhelinta       ['LANG:FI']
puhelin-        {'PF:puhelin', '2SPEC', 'LANG:FI', 'LF:phone', 'SPEC:D', '0'}
punainen        ['LANG:FI']
puna-           {'LF:red', '2SPEC', 'LANG:FI', 'SPEC:D', 'PF:puna-', '0'}
presupposto     {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'PF:presupposto', 'LF:presupposition', 'COMP:R', '-SPEC:P', '-COMP:A', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N'}
primary         {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:A', '-COMP:C/fin', 'COMP:P', '-SPEC:FORCE', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', 'LF:nurse', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', 'PF:primary', '-SPEC:C/fin', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N'}
promises        ['LANG:EN']
promise-        {'-VAL', 'PHI:NUM:_', 'SPEC:P', 'PHI:PER:_', 'ARG', 'V', 'LANG:EN', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'LF:promise', 'ASP', '-SPEC:T/fin', 'PF:promise', 'COMP:D', 'SEM:internal', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
problem         {'-SPEC:C/fin', '-COMP:AUX', 'N', 'PF:problem', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'LANG:EN', 'COMP:R', '-SPEC:P', '-COMP:A', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', 'LF:problem', '-COMP:V', '-COMP:v', '-COMP:N'}
pyytaa          ['LANG:FI']
pyyta-          {'SEM:external', '-VAL', 'PHI:NUM:_', 'SPEC:P', '!COMP:*', 'PHI:PER:_', 'ARG', 'V', 'LF:ask', '-COMP:P', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', 'ASP', 'CLASS:TR', '-SPEC:T/fin', 'COMP:D', 'PF:pyyda', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'-VAL', 'PHI:NUM:_', 'SPEC:P', '-COMP:T/fin', '-COMP:MA/inf', 'PHI:PER:_', 'ARG', 'V', 'LANG:EN', '-COMP:D', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', '-COMP:N', 'PF:race', 'ASP', '-SPEC:T/fin', 'CLASS:INTR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', 'LAMG:EN', '-COMP:V', '-COMP:v', 'SPEC:D', 'LF:race'}
raukesi         ['LANG:FI']
raukea-         {'-VAL', 'PHI:NUM:_', 'SPEC:P', 'PHI:PER:_', 'ARG', 'PF:raukea', 'V', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', '-SPEC:FORCE', 'ASP', '-SPEC:T/fin', 'LF:terminate', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
red             ['LANG:EN']
red-            {'LANG:EN', 'LF:red', '2SPEC', 'PF:red', 'SPEC:D', '0'}
saavuttaa       ['LANG:FI']
saavutta-       {'-VAL', '!COMP:D', 'SPEC:P', 'LF:reach', 'PHI:NUM:_', '!COMP:*', 'PF:saavutta-', 'ARG', 'PHI:PER:_', 'V', '-COMP:P', 'ASP:BOUNDED', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', 'ASP', 'CLASS:TR', '-SPEC:T/fin', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'-VAL', 'PHI:NUM:_', 'SPEC:P', '!COMP:*', 'PHI:PER:_', 'ARG', 'LF:say', 'V', 'PF:sano-', '-COMP:P', 'COMP:FORCE', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', 'ASP', 'CLASS:TR', '-SPEC:T/fin', 'COMP:D', 'COMP:VA/inf', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
said            ['LANG:EN']
say'            {'-VAL', 'PHI:NUM:_', 'SPEC:P', '!COMP:FORCE', 'PHI:PER:_', 'ARG', 'LF:say', 'V', 'LANG:EN', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'ASP', '-SPEC:T/fin', 'PF:say', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
say-            {'-VAL', 'PHI:NUM:_', 'SPEC:P', '!COMP:FORCE', 'PHI:PER:_', 'ARG', 'LF:say', 'V', 'LANG:EN', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'ASP', '-SPEC:T/fin', 'PF:say', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
sala            ['LANG:IT']
sala-           {'-COMP:AUX', 'N', 'LF:room', 'PF:sala', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:A', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N'}
scoppiati       ['LANG:IT']
scoppia-        {'LF:explode', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'PHI:PER:_', 'ARG', 'V', 'PF:scoppia', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'ASP', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N'}
sentenza        {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'PF:sentenza', 'COMP:R', '-SPEC:P', '-COMP:A', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', 'LF:sentence', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N'}
Seine           ['LANG:EN']
Seine-          {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'LANG:EN', 'COMP:R', '-SPEC:P', '-COMP:A', '-COMP:C/fin', 'COMP:P', '-SPEC:FORCE', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', 'PF:Seine', '-SPEC:ADV', '-COMP:VA/inf', 'COMP:R/D', '-SPEC:R', 'COMP:uR', '-SPEC:C/fin', 'LF:Seine', '-COMP:V', '-COMP:v', '-COMP:N'}
sembrano        ['LANG:IT']
sembra-         {'-VAL', 'SPEC:P', '-ARG', 'PF:sembra', 'V', 'LANG:EN', '-COMP:D', 'SPEC:TO/inf', '!COMP:ARE/inf', 'COMP:P', 'LF:seem', '-ASP', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:ADV', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
sleeps          ['LANG:EN']
sleep           {'-VAL', 'PHI:NUM:_', 'SPEC:P', '-COMP:MA/inf', 'PF:sleep', 'PHI:PER:_', 'ARG', 'V', 'LANG:EN', '-COMP:D', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'LF:sleep', 'ASP', '-SPEC:T/fin', 'CLASS:INTR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
sleep-          {'-VAL', 'PHI:NUM:_', 'SPEC:P', '-COMP:MA/inf', 'PF:sleep', 'PHI:PER:_', 'ARG', 'V', 'LANG:EN', '-COMP:D', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'LF:sleep', 'ASP', '-SPEC:T/fin', 'CLASS:INTR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
solution        {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'LANG:EN', 'COMP:R', '-SPEC:P', '-COMP:A', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'PF:solution', 'COMP:T/prt', 'COMP:D/rel', 'LF:solution', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', '-COMP:N'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-COMP:AUX', 'N', 'PF:sopimus', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'COMP:R', '-SPEC:P', 'LF:agreement', '-COMP:A', 'LANG:FI', '-COMP:C/fin', 'COMP:P', '-COMP:WH', '!COMP:A/inf', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', '-COMP:N'}
spinge          ['LANG:IT']
spinge-         {'-VAL', '!COMP:D', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'ARG', 'V', 'LF:push', '-COMP:P', 'SPEC:TO/inf', 'PHI:GEN:_', 'PF:spinge', 'ASP', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N'}
ssa             {'-SPEC:C/fin', 'COMP:n/MA', '-VAL', '-SPEC:Neg/fin', '-SPEC:iWH', 'PHI:NUM:_', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-SPEC:v', 'ARG', '-SPEC:INF', '-SPEC:V', 'PHI:PER:_', 'P', 'adjoinable', '-COMP:ADV', '-COMP:A', 'LANG:FI', 'TAIL:V', 'PF:ssa', 'SPEC:*', '-SPEC:T/fin', '-SPEC:N', '-COMP:uWH', 'COMP:D', '-SPEC:ADV', 'LF:in', '-SPEC:FORCE', '-SPEC:P', 'PHI:DET:_', '-SPEC:iR', '-COMP:T', '-COMP:N'}
stanno          ['LANG:IT']
sta-            {'COMP:PRG', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'PHI:PER:_', 'LF:stay', 'ARG', 'V', 'LANG:EN', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'PF:sta', '-ASP', '-SPEC:T/fin', 'SEM:internal', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
sti             {'TAIL:T', 'SPEC:*', '-SPEC:Neg/fin', 'LF:by', '!COMP:*', 'PF:sti', '-ARG', '-SPEC:T/fin', '-SPEC:N', 'ADV', 'adjoinable', '-SPEC:FORCE', 'LANG:FI'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'PF:sukka-', 'COMP:R', '-SPEC:P', '-COMP:A', 'LANG:FI', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', 'LF:socks', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', '-COMP:N'}
surprised       ['LANG:EN']
surprise-       {'-VAL', 'PHI:NUM:_', 'SPEC:P', '-COMP:T/fin', '!COMP:*', 'PHI:PER:_', 'ARG', 'V', '-COMP:P', 'LANG:EN', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'ASP', 'CLASS:TR', '-SPEC:T/fin', 'LF:surprise', 'COMP:D', 'PF:surprise', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
talo            {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'COMP:R', '-SPEC:P', 'PF:talo', '-COMP:A', 'LANG:FI', '-COMP:C/fin', 'COMP:P', 'LF:house', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', '-COMP:N'}
tama            ['LANG:EN']
tama-           {'-COMP:AUX', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'COMP:R', 'LF:this', '-SPEC:P', 'PF:tama', '-COMP:A', 'LANG:FI', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', 'PHI', '-COMP:V', '-COMP:v', '-COMP:N'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'-VAL', 'PHI:NUM:_', 'SPEC:P', 'PHI:PER:_', 'ARG', 'V', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', 'FIN', '!COMP:A/inf', 'SPEC:*', 'PF:taytyy', '-ASP', 'MODAL', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', 'LF:must', '-COMP:V', '-COMP:v', '-COMP:N'}
teki            ['LANG:FI']
teke-           {'-COMP:A/inf', '-VAL', '!COMP:D', 'SPEC:P', 'PHI:NUM:_', '!COMP:*', 'PHI:PER:_', 'ARG', 'V', '-COMP:P', 'ASP:BOUNDED', 'LANG:FI', 'LF:make', 'COMP:P', 'SPEC:TO/inf', 'ASP', 'CLASS:TR', 'PF:teke', '-SPEC:T/fin', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
that            {'PF:that', '-VAL', 'FORCE', '!COMP:*', '-ARG', '-SPEC:*', '!PROBE:FIN', 'LF:that', 'LANG:EN', 'COMP:C/fin', 'COMP:T/fin', 'FIN'}
the             {'-SPEC:Neg/fin', 'PF:the', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-ARG', 'D', '-SPEC:INF', '-SPEC:V', '!PROBE:N', '-COMP:P', 'LANG:EN', 'adjoinable', 'PHI:PER:3', '-COMP:D', 'LF:the', '-COMP:uR', 'PHI:DET:DEF', 'OP', '-SPEC:T/fin', 'COMP:N', '-SPEC:MA/lla', '-SPEC:P', 'PHI:NUM:SG'}
to              {'-SPEC:C/fin', '-VAL', '-SPEC:Neg/fin', '-SPEC:iWH', '!COMP:*', '-SPEC:INF', 'adjoinable', 'LANG:EN', '+SEM:directional', 'TAIL:V', '-SPEC:T/fin', 'COMP:D', '-SPEC:ADV', '-float', '-SPEC:iR', 'PF:to', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:C', '-SPEC:v', 'PHI:PER:_', 'ARG', '-SPEC:V', 'P', '-COMP:A', 'PHI:GEN:_', 'LF:to', '-SPEC:N', '-COMP:uWH', '-SPEC:*', '-SPEC:FORCE', '-SPEC:P', 'PHI:DET:_', '-COMP:T', '-COMP:ADV'}
to_inf          {'-VAL', 'LF:TO/inf', '-SPEC:v', '-COMP:T/fin', '!COMP:*', '-SPEC:V', '-COMP:FORCE', 'adjoinable', 'LANG:EN', 'COMP:v', '-COMP:C/fin', 'INF', 'COMP:V', '-SPEC:T/fin', 'PF:TO/inf', '?ARG', 'TO/inf'}
towards         {'-SPEC:C/fin', 'LF:towards', '-VAL', '-SPEC:Neg/fin', '-SPEC:iWH', 'PHI:NUM:_', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-SPEC:v', 'ARG', 'PF:towards', '-SPEC:INF', '-SPEC:V', 'P', 'PHI:PER:_', 'adjoinable', 'LANG:EN', '-COMP:ADV', '-COMP:A', 'TAIL:V', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:N', '-COMP:uWH', 'COMP:D', '-SPEC:*', '-SPEC:ADV', '-float', '-SPEC:FORCE', '-SPEC:P', 'PHI:DET:_', '-SPEC:iR', '-COMP:T', '-COMP:N'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'-VAL', 'PHI:NUM:_', 'SPEC:P', '!COMP:*', 'PHI:PER:_', 'ARG', 'V', '-COMP:P', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'ASP', 'CLASS:TR', 'LF:nudge', '-SPEC:T/fin', 'COMP:D', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'PF:tonaise'}
tta             {'-SPEC:C/fin', 'COMP:n/MA', '-VAL', '-SPEC:Neg/fin', 'PF:tta', '-SPEC:iWH', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-SPEC:v', 'ARG', '-SPEC:INF', '-SPEC:V', 'ADV', 'P', 'PHI:PER:_', 'adjoinable', '-COMP:ADV', 'PHI:NUM:_', '-COMP:A', 'LANG:FI', 'SPEC:*', '-SPEC:T/fin', '-SPEC:N', '-COMP:uWH', 'COMP:D', '-SPEC:ADV', 'LF:without', '-SPEC:FORCE', '-SPEC:P', 'PHI:DET:_', '-SPEC:iR', '-COMP:T', '-COMP:N'}
tries           ['LANG:EN']
try-            {'-VAL', 'PHI:NUM:_', 'SPEC:P', 'PHI:PER:_', 'ARG', 'V', 'LANG:EN', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'PF:try', 'ASP', '-SPEC:T/fin', '!COMP:TO/inf', 'LF:try', 'SEM:internal', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '!COMP:-ARG', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
verifiche       {'-COMP:AUX', 'N', 'LF:verification', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:A', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', 'PF:verifiche', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'SPEC:ADV', '-VAL', 'LF:flow', 'PHI:NUM:_', 'SPEC:P', '-COMP:MA/inf', 'PHI:PER:_', 'ARG', '!COMP:P', 'V', '-COMP:D', 'LANG:FI', 'SPEC:TO/inf', 'COMP:P', 'ASP', '-SPEC:T/fin', 'CLASS:INTR', '-SPEC:FORCE', 'PF:virtaa', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'LF:want', '-VAL', 'PHI:NUM:_', 'SPEC:P', '!COMP:*', 'PHI:PER:_', 'ARG', 'V', 'LANG:EN', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'ASP', 'PF:volu', '-SPEC:T/fin', '-SPEC:*', 'SEM:internal', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'SPEC:ADV', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'PF:voitta', '!COMP:*', 'PHI:PER:_', 'ARG', 'V', '-COMP:P', 'ASP:BOUNDED', 'LANG:EN', 'LF:win', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'ASP', 'CLASS:TR', '-SPEC:T/fin', 'COMP:D', '-SPEC:FORCE', 'SEM:achievement', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
wants           ['LANG:EN']
want-           {'LF:want', '-VAL', 'PHI:NUM:_', 'SPEC:P', '!COMP:*', 'PHI:PER:_', 'ARG', 'V', '-COMP:P', 'LANG:EN', 'COMP:TO/inf', 'COMP:P', 'PHI:GEN:_', 'ASP', 'PF:want', 'CLASS:TR', '-SPEC:T/fin', 'COMP:D', '-SPEC:TO/inf', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', '-COMP:N'}
what            ['LANG:EN']
what-           {'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'LANG:EN', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', '-COMP:V', '-COMP:v', '-COMP:N', 'LF:what', '-COMP:AUX', 'PHI_N', '-SPEC:V', '-SPEC:P', '-COMP:A', 'COMP:P', '-COMP:WH', 'PF:what', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin'}
which           {'-SPEC:Neg/fin', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-ARG', 'D', '-SPEC:INF', '-SPEC:V', '!PROBE:N', '-COMP:P', 'LANG:EN', 'adjoinable', '-COMP:D', '-COMP:uR', 'PF:which', 'LF:which', 'OP', '-SPEC:T/fin', 'COMP:N', '-SPEC:MA/lla', 'OP:WH', '-SPEC:P'}
who             ['LANG:EN']
who-            {'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'LF:who', 'LANG:EN', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', '-COMP:V', '-COMP:v', '-COMP:N', '-COMP:AUX', 'PHI_N', 'PF:who', '-SPEC:V', '-SPEC:P', '-COMP:A', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin'}
whether         {'-VAL', 'FORCE', '!COMP:*', '-ARG', '!PROBE:FIN', 'LANG:EN', 'COMP:C/fin', 'FIN', 'OP:Q', 'LF:whether', 'PF:whether', 'OP', '-SPEC:*', 'OP:WH', 'COMP:T/fin', 'Q'}
yrittaa         ['LANG:FI']
yritta-         {'-VAL', 'PHI:NUM:_', 'PF:yritta', 'SPEC:P', 'PHI:PER:_', 'ARG', 'V', 'LANG:EN', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', '!COMP:A/inf', 'ASP', '-SPEC:T/fin', 'LF:try', 'SEM:internal', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '!COMP:-ARG', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
mina            ['LANG:EN']
mina-           {'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', '-COMP:V', '-COMP:v', '-COMP:N', '-COMP:AUX', 'PHI_N', '-SPEC:V', '-SPEC:P', '-COMP:A', 'LANG:FI', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:N', 'PF:mina', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', 'LF:I'}
sina            ['LANG:EN']
sina-           {'N', '-SPEC:uWH', 'SPEC:A', 'LF:you', '-SPEC:INF', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', 'PF:sina', '-SPEC:ADV', 'COMP:R/D', '-COMP:V', '-COMP:v', '-COMP:N', '-COMP:AUX', 'PHI_N', '-SPEC:V', '-SPEC:P', '-COMP:A', 'LANG:FI', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin'}
han             ['LANG:EN']
han-            {'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', '-COMP:V', '-COMP:v', 'LF:s/he', '-COMP:N', '-COMP:AUX', 'PHI_N', '-SPEC:V', 'PF:han', '-SPEC:P', '-COMP:A', 'LANG:FI', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', 'LF:we', '-COMP:V', '-COMP:v', '-COMP:N', '-COMP:AUX', 'PHI_N', '-SPEC:V', '-SPEC:P', '-COMP:A', 'LANG:FI', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', 'PF:me'}
te              ['LANG:EN']
te-             {'N', '-SPEC:uWH', 'PF:te', 'SPEC:A', 'LF:you', '-SPEC:INF', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', '-COMP:V', '-COMP:v', '-COMP:N', '-COMP:AUX', 'PHI_N', '-SPEC:V', '-SPEC:P', '-COMP:A', 'LANG:FI', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', 'LF:they', '-COMP:V', '-COMP:v', '-COMP:N', '-COMP:AUX', 'PF:he', 'PHI_N', '-SPEC:V', '-SPEC:P', '-COMP:A', 'LANG:FI', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin'}
se              {'-SPEC:Neg/fin', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-ARG', 'D', '-SPEC:INF', '-SPEC:V', '!PROBE:N', '-COMP:P', 'adjoinable', '-COMP:D', 'LANG:FI', '-COMP:uR', 'OP', '-SPEC:T/fin', 'COMP:N', '-SPEC:MA/lla', '-SPEC:P', 'LF:the/that', 'PF:se'}
sen             {'TAIL:*POL:NEG', '-SPEC:Neg/fin', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-ARG', 'D', '-SPEC:INF', 'PF:sen', '-SPEC:V', '!PROBE:N', '-COMP:P', 'adjoinable', '-COMP:D', 'LANG:FI', '-COMP:uR', 'TAIL:PHI', 'OP', '-SPEC:T/fin', 'COMP:N', '-SPEC:MA/lla', '-SPEC:P', 'LF:the/that', 'TAIL:ASP'}
I               ['LANG:EN']
I-              {'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'LANG:EN', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', '-COMP:V', '-COMP:v', '-COMP:N', '-COMP:AUX', 'PF:I', 'PHI_N', '-SPEC:V', '-SPEC:P', '-COMP:A', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', 'LF:I'}
you             ['LANG:EN']
you-            {'N', '-SPEC:uWH', 'SPEC:A', 'LF:you', '-SPEC:INF', 'LANG:EN', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', '-COMP:V', '-COMP:v', '-COMP:N', '-COMP:AUX', 'PHI_N', '-SPEC:V', 'PF:you', '-SPEC:P', '-COMP:A', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin'}
he              ['LANG:EN']
he-             {'N', 'LF:he', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'LANG:EN', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', '-COMP:V', '-COMP:v', '-COMP:N', '-COMP:AUX', 'PF:he', 'PHI_N', '-SPEC:V', '-SPEC:P', '-COMP:A', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin'}
she             ['LANG:EN']
she-            {'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'LANG:EN', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', '-COMP:V', '-COMP:v', '-COMP:N', '-COMP:AUX', 'PHI_N', '-SPEC:V', '-SPEC:P', '-COMP:A', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', 'PF:she', 'LF:she'}
we              ['LANG:EN']
we-             {'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'LANG:EN', 'PF:we', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', 'LF:we', '-COMP:V', '-COMP:v', '-COMP:N', '-COMP:AUX', 'PHI_N', '-SPEC:V', '-SPEC:P', '-COMP:A', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin'}
you_pl          ['LANG:EN']
you_pl-         {'-COMP:AUX', 'PF:you_pl', 'N', 'LF:you_pl', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'LANG:EN', 'COMP:R', '-SPEC:P', '-COMP:A', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', 'PHI', '-COMP:V', '-COMP:v', '-COMP:N'}
they            ['LANG:EN']
they-           {'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'LANG:EN', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', 'LF:they', '-COMP:V', '-COMP:v', '-COMP:N', '-COMP:AUX', 'PHI_N', '-SPEC:V', '-SPEC:P', '-COMP:A', 'COMP:P', 'PF:they', '-COMP:WH', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin'}
it              ['LANG:EN']
it-             {'-SPEC:Neg/fin', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-ARG', 'D', '-SPEC:INF', '-SPEC:V', '!PROBE:N', '-COMP:P', 'LANG:EN', 'adjoinable', '-SPEC:P', '-COMP:D', '-COMP:uR', 'LF:it/that', 'OP', '-SPEC:T/fin', 'COMP:N', '-SPEC:MA/lla', 'PF:it'}
io              ['LANG:EN']
io-             {'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'PF:io', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N', '-COMP:AUX', 'PHI_N', '-SPEC:V', '-SPEC:P', '-COMP:A', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', 'LF:I'}
tu              ['LANG:EN']
tu-             {'N', '-SPEC:uWH', 'SPEC:A', 'LF:you', '-SPEC:INF', 'COMP:R', '-COMP:C/fin', 'PF:tu', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N', '-COMP:AUX', 'PHI_N', '-SPEC:V', '-SPEC:P', '-COMP:A', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin'}
lui             ['LANG:EN']
lui-            {'N', 'LF:he', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N', '-COMP:AUX', 'PHI_N', '-SPEC:V', '-SPEC:P', '-COMP:A', 'COMP:P', '-COMP:WH', 'PF:lui', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin'}
lei             ['LANG:EN']
lei-            {'N', '-SPEC:uWH', 'PF:lei', 'SPEC:A', '-SPEC:INF', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N', '-COMP:AUX', 'PHI_N', '-SPEC:V', '-SPEC:P', '-COMP:A', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', 'LF:she'}
noi             ['LANG:EN']
noi-            {'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', 'PF:noi', '-SPEC:ADV', 'COMP:R/D', 'LF:we', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N', '-COMP:AUX', 'PHI_N', '-SPEC:V', '-SPEC:P', '-COMP:A', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin'}
voi             ['LANG:EN']
voi-            {'N', 'LF:you_pl', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', 'PF:voi', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N', '-COMP:AUX', 'PHI_N', '-SPEC:V', '-SPEC:P', '-COMP:A', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin'}
loro            ['LANG:EN']
loro-           {'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', 'LF:they', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N', '-COMP:AUX', 'PHI_N', '-SPEC:V', '-SPEC:P', '-COMP:A', 'COMP:P', 'PF:loro', '-COMP:WH', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin'}
mi              ['LANG:EN']
mi-             {'N', '-SPEC:uWH', 'PF:mi(cl)', 'SPEC:A', '-SPEC:INF', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N', '-COMP:AUX', 'PHI_N', '-SPEC:V', 'CL', '-SPEC:P', '-COMP:A', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:N', 'LF:me', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin'}
la              ['LANG:EN']
la-             {'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N', '-COMP:AUX', 'PHI_N', '-SPEC:V', 'CL', 'PF:la(cl)', '-SPEC:P', '-COMP:A', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', 'LF:her'}
lo              ['LANG:EN']
lo-             {'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'COMP:R', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', 'PF:lo(cl)', '-SPEC:T/fin', '-COMP:*', 'LF:him', '-SPEC:ADV', 'COMP:R/D', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N', '-COMP:AUX', 'PHI_N', '-SPEC:V', 'CL', '-SPEC:P', '-COMP:A', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin'}
si              ['LANG:EN']
si-             {'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'COMP:R', '-COMP:C/fin', 'CAL:CL', 'PF:si(cl)', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N', '-COMP:AUX', 'PHI_N', '-SPEC:V', '-SPEC:P', '-COMP:A', 'COMP:P', '-COMP:WH', 'LF:3sg', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', 'COMP:R', 'LF:there', 'PF:ci', '-COMP:C/fin', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', '-COMP:*', '-SPEC:ADV', 'COMP:R/D', '-COMP:V', '-COMP:v', 'LANG:IT', '-COMP:N', '-COMP:AUX', 'PHI_N', '-SPEC:V', '-SPEC:P', '-COMP:A', 'COMP:P', '-COMP:WH', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin'}
[-n]            {'PHI', 'PHI:PER:1', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-t]            {'PHI', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-V]            {'PHI', 'PHI:PER:3', 'inflectional', 'LANG:FI', 'PHI:NUM:SG'}
[-mme]          {'PHI', 'PHI:NUM:PL', 'PHI:PER:1', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:DET:DEF'}
[-mme]          {'PHI:NUM:PL', 'PHI:PER:1', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:DET:DEF'}
[-tte]          {'PHI', 'PHI:NUM:PL', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:2', 'PHI:DET:DEF'}
[-vat]          {'PHI', 'PHI:NUM:PL', 'PHI:PER:3', 'inflectional', 'LANG:FI'}
[-ni]           {'PHI', 'PHI:PER:1', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-si]           {'PHI', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-nsa]          {'PHI', 'PHI:PER:3', 'inflectional', 'LANG:FI', 'PHI:NUM:SG'}
[-an]           {'PHI', 'PHI:PER:3', 'inflectional', 'LANG:FI', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-nne]          {'PHI:NUM:PL', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:2', 'PHI:DET:DEF'}
[-s]            {'PHI:GEN:M', 'LANG:EN', 'inflectional', 'PHI:PER:3', 'PHI:GEN:F', 'PHI', 'PHI:NUM:SG'}
[-0]            {'PHI:PER:2', 'PHI:DET:DEF', 'PHI:NUM:PL', 'LANG:EN', 'PHI:GEN:N', 'PHI:PER:3', 'inflectional', 'PHI:PER:1', 'PHI', 'PHI:NUM:SG'}
[-o]            {'PHI:PER:1', 'inflectional', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'}
[-i]            {'inflectional', 'PHI:HUM:HUM', 'PHI', 'PHI:PER:2', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'}
[-a]            {'PHI:PER:3', 'inflectional', 'PHI', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'}
[-e]            {'PHI:PER:3', 'inflectional', 'PHI', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:SG'}
[-iamo]         {'PHI:NUM:PL', 'PHI:PER:1', 'inflectional', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'LANG:IT'}
[-te]           {'PHI:NUM:PL', 'inflectional', 'PHI:HUM:HUM', 'PHI', 'PHI:PER:2', 'PHI:DET:DEF', 'LANG:IT'}
[-no]           {'PHI:NUM:PL', 'PHI:PER:3', 'inflectional', 'PHI', 'PHI:DET:DEF', 'LANG:IT'}
[-nom]          {'NOM', 'adjoinable', 'LANG:EN', 'inflectional', 'TAIL:FIN,ARG,VAL'}
[-par]          {'adjoinable', 'inflectional', 'PAR', 'TAIL:ARG,-VAL', 'LANG:FI'}
[-gen]          {'-float', 'LANG:EN', 'TAIL:INF,ARG', 'inflectional', 'GEN'}
gen             {'-float', 'LANG:EN', 'TAIL:INF,ARG', 'inflectional', 'GEN'}
[-n_acc]        {'adjoinable', 'TAIL:*POL:NEG', 'TAIL:PHI', 'n-ACC', 'inflectional', 'LANG:FI', 'TAIL:ARG,ASP:BOUNDED'}
[-t_acc]        {'adjoinable', 't-ACC', 'TAIL:*POL:NEG', 'inflectional', 'LANG:FI', 'TAIL:ARG,ASP:BOUNDED'}
[-0_acc]        {'0_ACC', 'adjoinable', 'TAIL:*POL:NEG', 'inflectional', 'LANG:FI', 'TAIL:*PHI', 'TAIL:ARG,ASP:BOUNDED'}
asp             {'LANG:EN', 'ASP:BOUNDED', 'inflectional'}
a'              {'PF:a', 'LANG:X', 'a', 'LF:A'}
b'              {'b', 'PF:b', 'LANG:X', 'LF:B'}
b''             {'b', 'LF:B', 'LANG:EN', '-COMP:c', 'PF:b'}
c''             {'SPEC:a', 'LANG:EN', 'LF:C', 'c', 'PF:c'}
c'              {'c', 'LF:C', 'LANG:X', 'PF:c'}
d'              {'LANG:', 'LF:D', 'd', 'PF:d'}
a''             ['LANG:EN']
x'              {'PF:x', 'LANG:X', 'LF:X', 'x'}
y'              {'LF:Y', 'LANG:X', 'PF:y', 'y'}
z'              {'PF:x', 'LANG:X', 'LF:Z', 'z'}
John'           {'PF:John', 'LANG:X', 'LF:John', "N'"}
admires'        {'LF:admires', 'LANG:X', "V'", 'PF:admires'}
admires''       {'-VAL', 'PHI:NUM:_', 'SPEC:P', 'PHI:PER:_', 'ARG', 'V', 'LANG:EN', 'SPEC:TO/inf', 'COMP:P', 'PF:admires', 'PHI:GEN:_', '-COMP:N', 'ASP', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:DET:_', '-COMP:V', '-COMP:v', 'SPEC:D', 'LF:admires'}
Mary'           {'PF:Mary', 'LANG:X', "N'", 'LF:mary'}
T/fin           {'LF:T', 'PHI:NUM:_', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-SPEC:v', 'ARG', '-SPEC:V', 'PHI:PER:_', '-SPEC:Neg', 'COMP:v', 'LANG:EN', 'SPEC:TO/inf', 'FIN', 'VAL', 'COMP:V', 'SPEC:C/fin', 'COMP:T/prt', 'PHI:GEN:_', 'SPEC:*', 'T/fin', 'T', '!SPEC:*', '-COMP:INF', '-SPEC:T/fin', '-SPEC:N', 'SPEC:FORCE', '-SPEC:TO/inf', '!PROBE:V', 'PHI:DET:_', 'SPEC:D', 'PF:T'}
v               {'COMP:V', 'PHI:GEN:_', 'LF:v', '-VAL', 'PF:v', 'ASP', 'PHI:NUM:_', 'v', '!COMP:*', 'PHI:PER:_', 'ARG', '-SPEC:N', 'LANG:EN', '!PROBE:V', 'PHI:DET:_', 'SPEC:D'}
C/fin           {'!COMP:*', 'C', '-ARG', '!PROBE:FIN', 'LANG:EN', '-COMP:C/fin', 'PF:C', 'COMP:Neg/fin', 'FIN', 'VAL', 'SPEC:*', 'LF:C/fin', '-SPEC:T/fin', '-SPEC:N', '-SPEC:C/fin', 'C/fin', 'COMP:T/fin', '-COMP:T/prt'}
T               {'LF:T', 'PHI:NUM:_', '!COMP:*', 'PHI:PER:_', 'ARG', '-SPEC:V', 'COMP:v', 'LANG:EN', 'FIN', 'VAL', 'COMP:V', '-SPEC:FORCE', 'COMP:T/prt', 'PHI:GEN:_', 'SPEC:*', 'T', '-COMP:NEG', '-SPEC:T/fin', '-SPEC:N', '!PROBE:V', 'PHI:DET:_', 'SPEC:D', 'PF:T'}
T/prt           {'PHI:NUM:_', '!COMP:*', 'PHI:PER:_', '-SPEC:V', 'ARG', 'COMP:v', 'LANG:EN', '-SPEC:FORCE', 'VAL', 'COMP:V', 'T/prt', 'COMP:T/prt', 'SPEC:*', 'FIN', 'T', 'PHI:GEN:_', '-COMP:NEG', '-SPEC:T/fin', '-SPEC:N', 'COMP:D', 'PF:T/prt', '!PROBE:V', '-SPEC:C/fin', 'PHI:DET:_', 'LF:T/prt', 'SPEC:D'}
a0              {'LF:A', 'A', 'COMP:0', 'LANG:EN', '-SPEC:A', '-adjoinable', '-SPEC:D', 'PF:A', 'TAIL:D'}
n               {'N', '-SPEC:uWH', '!COMP:*', 'SPEC:A', '-SPEC:INF', 'COMP:0', 'LANG:EN', 'COMP:R', '-COMP:C/fin', 'VAL', 'COMP:T/prt', 'COMP:D/rel', '!SPEC:*', '-SPEC:T/fin', 'PF:n', '-SPEC:ADV', 'COMP:R/D', 'LF:n', '-COMP:V', '-COMP:v', '-COMP:N', '-COMP:AUX', 'PHI:NUM:_', 'n', 'PHI:PER:_', '-SPEC:V', 'ARG', 'COMP:v', '-SPEC:P', '-COMP:A', 'INF', 'COMP:P', '-COMP:WH', 'COMP:V', 'PHI:GEN:_', 'SPEC:*', '!SPEC:D', 'COMP:C', '-SPEC:N', '-COMP:VA/inf', '-SPEC:R', 'COMP:uR', '-SPEC:FORCE', '-SPEC:C/fin', 'PHI:DET:_'}
impass          {'COMP:V', 'PHI:GEN:_', '-VAL', 'ASP', 'PHI:NUM:_', 'v', '!COMP:*', 'SPEC:D', 'PHI:PER:_', 'ARG', '-SPEC:N', 'LANG:EN', '!PROBE:V', 'PHI:DET:_', 'LF:impass', 'PF:impass'}
cau             {'COMP:V', 'PHI:GEN:_', '-VAL', 'ASP', 'PHI:NUM:_', 'v', '!COMP:*', 'PHI:PER:_', 'ARG', '-SPEC:N', 'LF:v/Cause', 'LANG:EN', 'PF:Cau', '!PROBE:V', 'PHI:DET:_', 'SPEC:D'}
INF             {'COMP:V', 'LF:INF', '-COMP:T/fin', '!COMP:*', 'PF:INF', '-SPEC:V', '-SPEC:T/fin', '-COMP:FORCE', 'COMP:v', 'LANG:EN', '-COMP:C/fin', 'INF'}
prtcpl          {'PHI:NUM:_', '-COMP:T/fin', '!COMP:*', 'PHI:PER:_', '-SPEC:V', 'ARG', '-COMP:FORCE', 'COMP:v', 'LANG:EN', '-COMP:C/fin', 'INF', 'FIN', 'VAL', 'COMP:V', 'T/prt', 'COMP:T/prt', 'SPEC:*', '!PROBE:V', 'T', 'PHI:GEN:_', '-COMP:NEG', '-SPEC:T/fin', '-SPEC:N', 'COMP:D', 'PF:T/prt', '-SPEC:FORCE', '-SPEC:C/fin', 'PHI:DET:_', 'LF:T/prt', 'SPEC:D'}
TO/inf          {'-VAL', 'LF:TO/inf', '-COMP:T/fin', '-SPEC:v', '!COMP:*', '-SPEC:V', '-COMP:FORCE', 'adjoinable', 'LANG:EN', 'COMP:v', '-COMP:C/fin', 'INF', 'COMP:V', '-SPEC:T/fin', '!COMP:V', 'PF:TO/inf', '?ARG', 'TO/inf'}
A/inf           {'-SPEC:Neg/fin', '-COMP:T/fin', '!COMP:*', '-SPEC:V', '-COMP:FORCE', 'COMP:v', 'LANG:EN', '?VAL', '-COMP:C/fin', 'INF', 'LF:A/inf', 'COMP:V', 'SPEC:*', '-SPEC:T/fin', 'A/inf', '?ARG', 'PF:A/inf'}
ARE/inf         {'-COMP:T/fin', '!COMP:*', 'LF:ARE/inf', '-SPEC:V', '-COMP:FORCE', 'COMP:v', 'ARE/inf', 'LANG:EN', '-COMP:C/fin', 'INF', 'PF:are', 'VAL', 'COMP:V', 'SPEC:*', '-SPEC:T/fin', '-adjoinable', '?ARG'}
ESSA/inf        {'TAIL:T', 'PF:essa', '-SPEC:Neg/fin', 'ESSA/inf', '-COMP:T/fin', '!COMP:*', 'LF:while', '-SPEC:V', 'ADV', '-COMP:FORCE', 'adjoinable', 'LANG:EN', 'COMP:v', '?VAL', '-COMP:C/fin', 'INF', 'COMP:V', 'SPEC:*', '-SPEC:T/fin', '-SPEC:N', '-SPEC:FORCE', '?ARG'}
TUA/inf         {'TAIL:T', '-SPEC:Neg/fin', 'PHI:NUM:_', 'PF:tua', 'LF:after', '-COMP:T/fin', '!COMP:*', 'PHI:PER:_', 'ARG', '-SPEC:V', 'ADV', '-COMP:FORCE', 'adjoinable', 'LANG:EN', 'COMP:v', '-COMP:C/fin', 'INF', 'VAL', 'COMP:V', 'PHI:GEN:_', 'SPEC:*', 'TUA/inf', '!SPEC:*', '-SPEC:T/fin', '-SPEC:N', '-SPEC:FORCE', 'PHI:DET:_'}
VA/inf          {'VA/inf', 'PHI:NUM:_', '-COMP:T/fin', '!COMP:*', 'PHI:PER:_', 'ARG', '-SPEC:V', '-COMP:FORCE', 'COMP:v', 'LANG:EN', 'LF:VA', 'PF:vAn', '-COMP:C/fin', 'INF', 'VAL', 'COMP:V', 'PHI:GEN:_', 'SPEC:*', '!SPEC:*', '-SPEC:T/fin', '-SPEC:N', 'PHI:DET:_'}
MA/ssa          {'-VAL', '-SPEC:Neg/fin', 'PHI:NUM:_', 'PHI:PER:_', 'ARG', 'ADV', 'COMP:v', 'adjoinable', 'LANG:EN', 'PF:massa', '-SPEC:FORCE', 'COMP:V', 'TAIL:V', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:N', '-SPEC:*', 'MA/ssa', 'LF:in_doing', 'PHI:DET:_', 'MA/inf'}
MA/tta          {'PHI:GEN:_', 'TAIL:T', '-VAL', 'LF:without_doing', 'PF:matta', '-SPEC:Neg/fin', 'PHI:NUM:_', 'PHI:PER:_', 'ARG', '-SPEC:T/fin', '-SPEC:N', 'ADV', 'adjoinable', 'LANG:EN', '-SPEC:FORCE', 'PHI:DET:_', 'MA/inf'}
MA/lla          {'TAIL:T', '-VAL', '-SPEC:Neg/fin', 'ADV', 'adjoinable', 'LANG:EN', 'PF:malla', 'LF:by_doing', '-SPEC:T/fin', 'MA/inf', 'PHI:NUM:_', 'PHI:PER:_', 'ARG', 'COMP:v', 'COMP:V', 'PHI:GEN:_', '-SPEC:N', '-SPEC:FORCE', 'PHI:DET:_'}
MA/inf          {'-VAL', '-SPEC:Neg/fin', 'ADV', 'adjoinable', 'LANG:EN', 'TAIL:V', '-SPEC:T/fin', 'MA/inf', 'PHI:NUM:_', 'PHI:PER:_', 'ARG', 'LF:to_do', 'PF:maan', 'COMP:v', 'COMP:V', 'PHI:GEN:_', '-SPEC:N', '-SPEC:FORCE', 'PHI:DET:_'}
E/inf           {'TAIL:T', 'SPEC:*', '-VAL', '-SPEC:Neg/fin', 'LF:by', '-ARG', 'PF:en', '-SPEC:T/fin', 'ADV', '-SPEC:N', 'adjoinable', '-SPEC:FORCE', 'LANG:FI'}
BE-             {'-VAL', 'SPEC:P', '-COMP:T/fin', 'LF:BE', '!COMP:*', '-ARG', 'V', 'LANG:EN', 'COPULA', 'SPEC:TO/inf', 'COMP:P', 'COMP:T/prt', 'ASP', '-SPEC:T/fin', 'PF:BE', '-SPEC:FORCE', 'SPEC:ADV', '-COMP:V', '-COMP:v', 'SPEC:D', '-COMP:N'}
D               {'-SPEC:Neg/fin', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-ARG', 'D', '-SPEC:INF', '-SPEC:V', '!PROBE:N', '-COMP:P', 'LANG:EN', 'adjoinable', '-COMP:D', '-COMP:uR', 'OP', '-SPEC:T/fin', 'COMP:N', '-SPEC:MA/lla', 'LF:D', '-SPEC:P', 'PF:D'}
D/rel           {'-SPEC:Neg/fin', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-ARG', '-SPEC:INF', '!PROBE:N', 'D', '-SPEC:V', 'adjoinable', 'LANG:EN', 'PF:D/rel', '-COMP:D', '-COMP:C/fin', 'inflectional', '-COMP:uR', 'OP:_', 'LF:D/rel', 'D/rel', 'OP', '-SPEC:T/fin', 'COMP:N', '-SPEC:MA/lla', '-SPEC:P', 'OP:REL'}
P               {'-SPEC:C/fin', '-VAL', '-SPEC:Neg/fin', '-SPEC:iWH', 'PHI:NUM:_', '-COMP:T/fin', '!COMP:*', '-SPEC:C', '-SPEC:v', 'ARG', '-SPEC:INF', '-SPEC:V', 'PHI:PER:_', 'P', 'adjoinable', 'LANG:EN', '-COMP:ADV', '-COMP:A', 'PHI:GEN:_', 'PF:P', '-SPEC:T/fin', '-SPEC:N', '-COMP:uWH', 'COMP:D', '-SPEC:*', 'LF:P', '-SPEC:ADV', '-float', '-SPEC:FORCE', '-SPEC:P', 'PHI:DET:_', '-SPEC:iR', '-COMP:T', '-COMP:N'}
pro             ['LANG:EN']
pro-            {'-SPEC:C/fin', '-COMP:AUX', 'PF:(pro)', 'N', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-SPEC:V', 'LANG:EN', 'COMP:R', '-SPEC:P', '-COMP:A', '-COMP:C/fin', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:T/fin', 'COMP:C', '-SPEC:N', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'COMP:uR', '-SPEC:FORCE', 'LF:pro', 'PHI', '-COMP:V', '-COMP:v', '-COMP:N'}
cl              {'LEFT:D,CL', 'LANG:EN', 'RIGHT:PRG', 'inflectional', 'LEFT:T/fin', 'RIGHT:ARE/inf', 'CL'}
inc             {'inflectional', 'INCORPORATED', 'LANG:EN'}
sg              {'inflectional', 'LANG:EN', 'PHI:NUM:SG'}
pl              {'inflectional', 'PHI:NUM:PL', 'LANG:EN'}
1p              {'inflectional', 'PHI:PER:1', 'LANG:EN'}
2p              {'inflectional', 'PHI:PER:2', 'LANG:EN'}
3p              {'inflectional', 'LANG:EN', 'PHI:PER:3'}
def             {'inflectional', 'LANG:EN', 'PHI:DET:DEF'}
indef           {'inflectional', 'LANG:EN', 'PHI:DET:INDEF'}
hum             {'inflectional', 'PHI:HUM:HUM', 'LANG:EN'}
nonhum          {'inflectional', 'PHI:HUM:NONHUM', 'LANG:EN'}
m               {'inflectional', 'PHI:GEN:M', 'LANG:EN'}
f               {'inflectional', 'LANG:EN', 'PHI:GEN:F'}
nom             {'inflectional', 'NOM', 'LANG:EN', 'TAIL:FIN,!COMP:*,VAL'}
acc             {'inflectional', 'ACC', 'LANG:EN', 'TAIL:v'}
dat             {'inflectional', 'DAT', 'LANG:EN', 'TAIL:v'}
uC/op           {'inflectional', 'LANG:EN', 'uC/op'}
wh              {'inflectional', 'LANG:EN', 'OP:WH', 'OP:_'}
wh_             {'OP:_', 'LANG:EN', 'inflectional', 'OP', 'FORCE:OP:WH'}
top             {'inflectional', 'LANG:EN', 'OP:TOP'}
foc             {'inflectional', 'LANG:EN', 'OP:FOC'}
C/op            {'inflectional', 'LANG:EN', 'OP:C/OP'}
Q               {'OP:WH', 'LANG:EN', 'inflectional', 'OP:Q', 'OP'}
