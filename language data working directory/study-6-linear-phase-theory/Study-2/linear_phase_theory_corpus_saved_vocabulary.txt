ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'LANG:IT', '-COMP:uWH', 'P', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:ADV', '-SPEC:FORCE', '-ARG', '!COMP:*', '-SPEC:V', '-SPEC:C', '-COMP:T/fin', 'LF:to', 'COMP:ARE/inf', '-SPEC:C/fin', '-VAL', '-SPEC:iR', '-SPEC:N', '-SPEC:Neg/fin', '-COMP:N', '-SPEC:v', 'COMP:D', 'adjoinable', '-SPEC:iWH', '-SPEC:P', '-SPEC:*', 'PF:a', '-SPEC:INF'}
a_D             {'COMP:N', '-SPEC:MA/lla', '-COMP:D', '-COMP:uR', 'LANG:EN', '-ARG', '!COMP:*', '-SPEC:D', 'OP', '-SPEC:V', '-SPEC:C', 'LF:D', '-COMP:T/fin', '!PROBE:N', 'PF:D', '-SPEC:N', '-SPEC:Neg/fin', 'adjoinable', '-SPEC:P', 'D', '-SPEC:T/fin', '-SPEC:INF'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-SPEC:Neg', 'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', '!COMP:*', '-COMP:V', 'PHI:GEN:_', 'COMP:P', 'PHI:DET:_', '-COMP:P', 'ASP', 'PF:admire', 'LF:admire', '-COMP:Neg', '-COMP:T/fin', '-VAL', 'CLASS:TR', '-COMP:v', '-COMP:N', 'COMP:D', 'V', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
admire*         ['LANG:EN']
T/fin*          {'-VAL', "PF:T/fin'", 'NO_NUMBER', 'LF:T', 'LANG:EN', 'NO_DET', '!SPEC:*', 'CAT:T/fin'}
v*              {'CAT:v', '-VAL', 'LF:v', 'NO_NUMBER', 'LANG:EN', 'PF:v', 'NO_DET'}
admire**        ['LANG:EN']
T/fin**         {'-VAL', "PF:T/fin''", 'PHI:PER:3', 'NO_NUMBER', 'LF:T', 'LANG:EN', 'NO_DET', '!SPEC:*', 'NO_PERSON', 'CAT:T/fin'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'LANG:IT', 'PHI:PER:_', 'SPEC:TO/inf', 'PF:adora', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', 'LF:admire', '-VAL', '-COMP:v', '-COMP:N', 'COMP:D', 'V', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
antaa           ['LANG:FI']
anta-           {'PHI:PER:_', 'PF:antaa', 'SPEC:TO/inf', 'ARG', '+SEM:directional', '-SPEC:FORCE', 'PHI:NUM:_', '!COMP:*', '-COMP:V', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', '-VAL', 'ASP:BOUNDED', '-COMP:v', '-COMP:N', 'LF:give', 'CLASS:DITR', 'V', 'LANG:FI', 'COMP:D', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV', '-COMP:FIN'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:V', 'LF:ask', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', '-VAL', 'SPEC:ADV', '-COMP:v', '-COMP:N', 'COMP:D', 'V', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'SEM:internal', 'PF:ask'}
ask-            {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:V', 'LF:ask', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', '-VAL', 'SPEC:ADV', '-COMP:v', '-COMP:N', 'COMP:D', 'V', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'SEM:internal', 'PF:ask'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', 'PF:avain', '-COMP:T/fin', '-COMP:AUX', '-SPEC:C/fin', '-SEM:directional', '-SPEC:N', '-COMP:v', '-COMP:N', 'LF:key', '-COMP:C/fin', 'LANG:FI', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'PF:auto', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', 'LF:car', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SEM:directional', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', 'LANG:FI', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
city            {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', 'LANG:EN', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', 'LF:city', 'PF:city', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
che             ['LANG:IT']
che-            {'LANG:IT', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', 'PF:che', '-SPEC:R', '-COMP:*', 'COMP:R/D', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', 'LF:who', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'PHI_N', '-SPEC:T/fin', 'N', 'COMP:uR'}
chiamato        ['LANG:IT']
chiamata-       {'LANG:IT', 'PHI:PER:_', 'PF:chiamato', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:V', 'LF:called', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', '-VAL', '-COMP:v', '-COMP:N', 'V', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
danno           {'LANG:IT', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', 'PF:danno', 'LF:damage', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'LANG:IT', 'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', 'COMP:ARE/inf', '-VAL', 'SPEC:ADV', '-COMP:v', 'LF:detest', '-COMP:N', 'COMP:D', 'PF:detest', 'V', 'SPEC:P', '-SPEC:T/fin', 'SEM:internal'}
devono          ['LANG:EN']
deva-           {'LANG:IT', 'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'LF:must', 'PHI:DET:_', '-COMP:T/fin', 'COMP:ARE/inf', '-VAL', 'SPEC:ADV', '-ASP', '-COMP:v', 'PF:deva', '-COMP:N', 'V', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'SEM:internal'}
di              {'-COMP:uWH', 'PHI:PER:_', 'P', 'LF:of', '-SPEC:ADV', 'SPEC:*', '-COMP:ADV', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', '!COMP:*', '-SPEC:V', '-SPEC:C', 'PHI:DET:_', '-COMP:T/fin', '-SPEC:C/fin', 'PF:di', '-VAL', '-SPEC:iR', '-SPEC:N', '-SPEC:Neg/fin', '-COMP:N', '-SPEC:v', '-adjoinable', 'COMP:D', '-SPEC:iWH', 'LANG:FI', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF'}
does            {'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'PHI:GEN:M', 'LANG:EN', '-SPEC:FORCE', 'COMP:T/prt', 'PHI:GEN:_', '-SPEC:V', '-COMP:T/fin', 'PHI:PER:3', 'VAL', '-COMP:INF', 'T/fin', 'COMP:D', 'COMP:Neg', '-SPEC:Neg', 'SPEC:TO/inf', 'PF:does', 'ARG', 'PHI:NUM:_', '!COMP:*', 'PHI:DET:_', 'COMP:V', '-SPEC:C/fin', '-SPEC:TO/inf', 'PHI:GEN:F', '-SPEC:N', '-SPEC:v', '!SPEC:D', 'FIN', '!PROBE:V', 'LF:does', 'SPEC:D', 'T', 'COMP:v', '-SPEC:T/fin'}
does_C          ['LANG:EN']
does-           {'PHI:NUM:SG', 'PHI:PER:_', 'SPEC:*', 'PHI:GEN:M', 'LANG:EN', '-SPEC:FORCE', 'COMP:T/prt', 'PHI:GEN:_', '-SPEC:V', '-COMP:T/fin', 'PHI:PER:3', 'VAL', '-COMP:INF', 'T/fin', 'COMP:D', 'COMP:Neg', '-SPEC:Neg', 'SPEC:TO/inf', 'PF:does', 'ARG', 'PHI:NUM:_', '!COMP:*', 'PHI:DET:_', 'COMP:V', '-SPEC:C/fin', '-SPEC:TO/inf', 'PHI:GEN:F', '-SPEC:N', '-SPEC:v', '!SPEC:D', 'FIN', '!PROBE:V', 'LF:does', 'SPEC:D', 'T', 'COMP:v', '-SPEC:T/fin'}
dorme           ['LANG:IT']
dorme-          {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', 'LF:sleep', '-VAL', '-COMP:v', '-COMP:N', '!SPEC:D', 'V', 'PF:dorme', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'PHI:PER:_', 'Neg/fin', 'SPEC:*', 'ARG', 'POL:NEG', 'PHI:NUM:_', '!COMP:*', 'COMP:T/prt', '%SPEC:INF', 'PHI:DET:_', '-SPEC:T', 'LF:neg', 'VAL', 'FIN', 'LANG:FI', '!SPEC:*', 'NEG', '-SPEC:T/fin', 'SEM:internal', 'PF:ei', '!COMP:T'}
e-              {'PHI:PER:_', 'Neg/fin', 'SPEC:*', 'ARG', 'POL:NEG', 'PHI:NUM:_', '!COMP:*', 'COMP:T/prt', '%SPEC:INF', 'PHI:DET:_', '-SPEC:T', 'LF:neg', 'VAL', 'FIN', 'LANG:FI', '!SPEC:*', 'NEG', '-SPEC:T/fin', 'SEM:internal', 'PF:ei', '!COMP:T'}
elaa            ['LANG:FI']
ela-            {'PHI:PER:_', 'SPEC:TO/inf', '-COMP:D', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:V', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', 'CLASS:INTR', '-VAL', '-COMP:v', 'PF:elaa', '-COMP:N', 'V', 'LANG:FI', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV', 'LF:live'}
etsii           ['LANG:FI']
etsi-           {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', 'LF:search', '-COMP:V', 'COMP:P', 'PHI:DET:_', 'ASP', '!COMP:D', '-COMP:T/fin', '-VAL', '-COMP:v', '-COMP:N', 'PF:etsi', 'COMP:D', 'V', 'LANG:FI', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
etta            {'LF:that', '-VAL', '!PROBE:T/fin', 'COMP:T/fin', '-ARG', '!COMP:*', 'FIN', 'LANG:FI', '-SPEC:*', 'FORCE', 'PF:etta', 'COMP:C/fin'}
flow'           {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:V', 'LF:flow', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', 'PF:flow', '-VAL', '-COMP:v', '-COMP:N', 'V', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
from            {'-COMP:uWH', 'PHI:PER:_', 'P', '-SPEC:ADV', 'PF:from', '-COMP:ADV', 'ARG', 'LANG:EN', 'TAIL:V,+SEM:directional', '-SPEC:FORCE', '!COMP:*', 'PHI:NUM:_', '-float', 'PHI:GEN:_', '-SPEC:V', 'LF:from', '-SPEC:C', 'PHI:DET:_', '-COMP:T/fin', '-SPEC:C/fin', '-VAL', '-SPEC:iR', '-SPEC:N', '-SPEC:Neg/fin', '-COMP:N', '-SPEC:v', 'COMP:D', 'adjoinable', '-SPEC:iWH', '-SPEC:P', '-SPEC:*', '-SPEC:T/fin', '-SPEC:INF'}
gave            ['LANG:EN']
give-           {'PHI:PER:_', 'SPEC:TO/inf', 'PF:give', '+SEM:directional', 'LANG:EN', 'ARG', '-SPEC:FORCE', '!COMP:*', '-COMP:V', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', '-VAL', '-COMP:v', '-COMP:N', 'LF:give', 'CLASS:DITR', 'V', 'COMP:D', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV', '-COMP:FIN'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'LANG:IT', '-SPEC:INF', 'LF:Giuseppe', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SEM:directional', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', 'PF:Giuseppe', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'PHI:PER:_', 'PF:haluaa', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '!COMP:*', '-COMP:V', 'COMP:P', 'PHI:DET:_', '-COMP:P', 'ASP', '-COMP:T/fin', 'LF:want', 'CLASS:TR', 'ASP:BOUNDED', '-VAL', 'SPEC:ADV', '-COMP:v', '-COMP:N', 'COMP:D', 'V', 'COMP:A/inf', 'LANG:FI', 'SPEC:P', '-SPEC:*', '-SPEC:T/fin', 'SEM:internal'}
hairitsee       ['LANG:FI']
hairitse-       {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:V', 'LF:disturb', 'COMP:P', 'PHI:DET:_', 'ASP', '!COMP:D', '-COMP:T/fin', '-VAL', '-COMP:v', '-COMP:N', 'V', 'LANG:FI', 'SPEC:D', 'SPEC:P', 'PF:hairitsee', '-SPEC:T/fin', 'SPEC:ADV', '-COMP:FIN'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'LANG:IT', 'PHI:PER:_', 'SPEC:TO/inf', 'COMP:T', 'SPEC:*', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'PHI:DET:_', '-COMP:T/fin', 'LF:have', '-VAL', 'SPEC:ADV', '-ASP', 'PF:ha', '-COMP:v', '-COMP:N', 'V', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'SEM:internal'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'PHI:PER:_', 'SPEC:TO/inf', '-COMP:D', 'LF:disappear', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:V', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', 'CLASS:INTR', '-VAL', '-COMP:v', '-COMP:N', 'V', 'LANG:FI', 'SPEC:D', 'SPEC:P', 'PF:havia', '-SPEC:T/fin', 'SPEC:ADV'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '!COMP:*', '-COMP:V', 'COMP:P', 'PHI:DET:_', '-COMP:P', 'ASP', 'LF:admire', '!COMP:D', '-COMP:T/fin', '-VAL', 'CLASS:TR', '-COMP:v', '-COMP:N', 'COMP:D', 'V', 'LANG:FI', 'PF:ihaile-', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV', '-COMP:FIN'}
il              {'LANG:IT', 'COMP:N', '-SPEC:MA/lla', '-COMP:D', '-COMP:uR', '-ARG', 'PF:il', '!COMP:*', '-SPEC:D', 'OP', '-SPEC:V', '-SPEC:C', '-COMP:T/fin', '!PROBE:N', '-SPEC:N', '-SPEC:Neg/fin', 'adjoinable', '-SPEC:P', 'LF:the', 'D', '-SPEC:T/fin', '-SPEC:INF'}
i               {'LANG:IT', 'COMP:N', '-SPEC:MA/lla', '-COMP:D', '-COMP:uR', '-ARG', 'PF:il', '!COMP:*', '-SPEC:D', 'OP', '-SPEC:V', '-SPEC:C', '-COMP:T/fin', '!PROBE:N', '-SPEC:N', '-SPEC:Neg/fin', 'adjoinable', '-SPEC:P', 'LF:the', 'D', '-SPEC:T/fin', '-SPEC:INF'}
in              {'LANG:IT', '-COMP:uWH', 'PHI:PER:_', 'P', '-SPEC:ADV', '-COMP:ADV', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', 'PHI:GEN:_', '!COMP:*', '-SPEC:V', '-SPEC:C', 'PHI:DET:_', 'PF:in', '-COMP:T/fin', '-SPEC:C/fin', '-VAL', '-SPEC:iR', '-SPEC:N', '-SPEC:Neg/fin', '-COMP:N', '-SPEC:v', 'LF:in', 'COMP:D', 'adjoinable', '-SPEC:iWH', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF'}
infermieri      {'LANG:IT', 'LF:nurses', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', 'PF:infermieri', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
is              ['LANG:EN']
be-             {'SPEC:TO/inf', 'LF:be', 'LANG:EN', '-ARG', '-COMP:TO/inf', '!COMP:*', '-SPEC:FORCE', '-COMP:V', 'COMP:P', 'ASP', '-COMP:T/fin', '-VAL', '-COMP:v', '-COMP:N', 'COPULA', 'V', 'SPEC:D', 'SPEC:P', 'PF:be', '-SPEC:T/fin', 'SPEC:ADV'}
istuuko         ['LANG:FI']
istuu-          {'PHI:PER:_', 'SPEC:TO/inf', '-COMP:D', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:V', 'COMP:P', 'PHI:DET:_', 'LF:sit', 'PF:istuu', 'ASP', '-COMP:T/fin', 'CLASS:INTR', '-VAL', '-COMP:v', '-COMP:N', 'V', 'LANG:FI', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
John            ['LANG:EN']
John-           {'-SPEC:INF', '-SPEC:uWH', 'LF:John', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', 'LANG:EN', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SEM:directional', '-SPEC:N', '-COMP:v', 'PF:John', '-COMP:N', '-adjoinable', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', 'LF:Jukka', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SEM:directional', '-SPEC:N', '-COMP:v', '-COMP:N', 'PF:Jukka', '-COMP:C/fin', 'LANG:FI', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
juosten         ['LANG:FI']
juokse-         {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:V', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', '-VAL', '-COMP:v', '-COMP:N', 'LF:run', 'V', 'LANG:FI', 'SPEC:P', 'PF:juokse-', '-SPEC:T/fin', 'SPEC:ADV'}
istuu           ['LANG:FI']
istu-           {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:V', 'COMP:P', 'PHI:DET:_', 'PF:istuu', 'LF:sit', 'ASP', '-COMP:T/fin', '-VAL', '-COMP:v', '-COMP:N', 'V', 'LANG:FI', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
kaksi           {'PHI:NUM:SG', '-VAL', 'PF:kaksi', 'COMP:N', 'COMP:n', 'PHI:PER:_', 'SPEC:*', 'ARG', 'PHI:NUM:_', 'LANG:FI', 'PHI:DET:_', 'LF:two', 'TAIL:ARG,VAL,FIN', 'NUM'}
kaksi           {'COMP:N', 'PF:kaksi', 'COMP:n', 'SPEC:*', 'TAIL:ARG,ASP:BOUNDED', 'LANG:EN', 'TAIL:*POL:NEG', 'LF:two', 'NUM'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'COMP:N', 'LANG:FI', 'PF:kaksi', 'COMP:n', 'SPEC:*', 'LF:two', 'NUM'}
kaupunkia       ['LANG:EN']
kaupunki        {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', '-COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', 'LF:city', '-COMP:C/fin', 'LANG:FI', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'PF:kaupunki', 'COMP:R/D'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'PHI:PER:_', 'SPEC:TO/inf', 'PF:kaske', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:V', '!COMP:A/inf', 'COMP:P', 'PHI:DET:_', 'SEM:external', 'ASP', '-COMP:T/fin', '-VAL', '-COMP:v', '-COMP:N', 'V', 'LF:order', 'LANG:FI', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-SPEC:INF', 'PF:kello', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', 'LF:watch', '-COMP:N', '-COMP:C/fin', 'LANG:FI', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
kello0-         {'LANG:FI', 'SPEC:D', 'PF:kello', '2SPEC', 'LF:watch', '0'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', 'LANG:EN', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', 'PF:key', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', 'LF:key', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', 'PF:kirja', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SEM:directional', 'LF:book', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', 'LANG:FI', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
kohti           {'-COMP:uWH', 'PHI:PER:_', 'PF:kohti', 'P', '-SPEC:INF', '-SPEC:ADV', 'SPEC:*', '-COMP:ADV', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'TAIL:V', '!COMP:*', '-SPEC:V', '-SPEC:C', 'PHI:DET:_', '-COMP:T/fin', '-SPEC:C/fin', '-VAL', '-SPEC:iR', '-SPEC:N', '-SPEC:Neg/fin', '-COMP:N', '-SPEC:v', 'COMP:D', 'adjoinable', '-SPEC:iWH', 'LANG:FI', '-SPEC:P', '-SPEC:T/fin', 'LF:towards'}
koko            {'COMP:N', 'PF:koko', 'TAIL:T', '-SPEC:MA/lla', '-COMP:D', '-COMP:uR', '-ARG', '!COMP:*', '-SPEC:D', 'OP', '-SPEC:V', '-SPEC:C', '-COMP:T/fin', '!PROBE:N', '-SPEC:N', '-SPEC:Neg/fin', 'adjoinable', 'LANG:FI', '-SPEC:P', 'D', '-SPEC:T/fin', 'LF:all', '-SPEC:INF'}
kuka            ['LANG:FI']
kuka-           {'-SPEC:INF', '-SPEC:uWH', 'PF:kuka', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', 'PHI', '-COMP:AUX', 'LF:who', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', 'LANG:FI', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
kuorsaa-        {'PHI:PER:_', 'SPEC:TO/inf', '-COMP:D', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:V', 'PF:kuorsaa', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', 'LF:snore', '-VAL', '-COMP:v', '-COMP:N', 'V', 'LANG:FI', '-COMP:WH', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
kuorsaamalla    ['LANG:FI']
lahella         {'-COMP:uWH', 'PHI:PER:_', 'SPEC:*', '-SPEC:FORCE', '-SPEC:V', '-COMP:T/fin', '-SPEC:iR', 'VAL', '-SPEC:Neg/fin', '-COMP:N', 'COMP:D', 'adjoinable', '-SPEC:iWH', 'LANG:FI', '-SPEC:P', '-COMP:C/fin', '-SPEC:INF', 'LF:near', 'P', '-SPEC:ADV', '-COMP:ADV', '-COMP:FORCE', 'ARG', 'PHI:NUM:_', '!COMP:*', '-SPEC:C', 'PHI:DET:_', 'COMP:V', '-SPEC:C/fin', '-SPEC:N', '-SPEC:v', 'PF:lahella', '!SPEC:D', '!SPEC:*', 'INF', 'COMP:v', '-SPEC:T/fin'}
lahella         {'LF:near', '-COMP:uWH', 'PHI:PER:_', 'P', '-SPEC:ADV', 'SPEC:*', '-COMP:ADV', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', '!COMP:*', '-SPEC:V', '-SPEC:C', 'PHI:DET:_', '!COMP:D', '-COMP:T/fin', '-SPEC:C/fin', '-VAL', '-SPEC:iR', '-SPEC:N', '-SPEC:Neg/fin', '-COMP:N', '-SPEC:v', 'PF:lahella', 'COMP:D', 'adjoinable', 'LANG:FI', '-SPEC:iWH', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'PHI:PER:_', 'SPEC:TO/inf', '-COMP:D', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:V', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', 'CLASS:INTR', '-VAL', 'PF:lahtea', '-COMP:v', '-COMP:N', 'V', 'LANG:FI', 'LF:leave', 'SPEC:D', 'COMP:PP', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
lavano          ['LANG:IT']
lava-           {'LANG:IT', 'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PF:lava', '-SPEC:FORCE', 'PHI:NUM:_', '!COMP:*', '-COMP:V', 'PHI:GEN:_', 'LF:wash', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', '-VAL', '-COMP:v', '-COMP:N', 'COMP:D', 'V', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'LANG:IT', 'COMP:N', '-SPEC:MA/lla', '-COMP:D', '-COMP:uR', '-ARG', '!COMP:*', '-SPEC:D', 'OP', '-SPEC:V', '-SPEC:C', 'LF:D', '-COMP:T/fin', '!PROBE:N', '-SPEC:N', '-SPEC:Neg/fin', 'adjoinable', '-SPEC:P', 'D', 'PF:le', '-SPEC:T/fin', '-SPEC:INF'}
leaves          ['LANG:EN']
leave           {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', '-VAL', '-COMP:v', '-COMP:N', '!SPEC:D', 'PF:leave', 'V', 'LF:leave', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
leave-          {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', '-VAL', '-COMP:v', '-COMP:N', '!SPEC:D', 'PF:leave', 'V', 'LF:leave', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
like-           {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', 'LANG:EN', 'LF:like', '-SPEC:FORCE', '-COMP:V', 'PHI:GEN:_', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', '!COMP:D', '-VAL', 'PF:like', '-COMP:v', '-COMP:N', 'V', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
likes           ['LANG:EN']
like            {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', 'LANG:EN', 'LF:like', '-SPEC:FORCE', '-COMP:V', 'PHI:GEN:_', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', '!COMP:D', '-VAL', 'PF:like', '-COMP:v', '-COMP:N', 'V', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
little          ['LANG:EN']
little-         {'0', 'SPEC:D', 'LF:little', 'PF:little-', 'LANG:EN', '2SPEC'}
lle             {'-COMP:uWH', 'LF:for', 'PHI:PER:_', 'P', '-SPEC:ADV', '-COMP:ADV', 'ARG', 'PF:P(lle)', '+SEM:directional', 'TAIL:V,+SEM:directional', '-SPEC:FORCE', '!COMP:*', 'PHI:NUM:_', '-SPEC:V', '-SPEC:C', 'PHI:DET:_', '-COMP:T/fin', '-SPEC:C/fin', '-VAL', '-SPEC:iR', '-SPEC:N', '-SPEC:Neg/fin', '-COMP:N', '-SPEC:v', 'COMP:D', 'adjoinable', '-SPEC:iWH', 'LANG:FI', '-SPEC:P', '-SPEC:*', '-SPEC:T/fin', '-SPEC:INF'}
lla             {'-COMP:uWH', 'PHI:PER:_', 'TAIL:T', 'P', '-SPEC:ADV', 'SPEC:*', '-COMP:ADV', 'ARG', '-SPEC:FORCE', 'LF:by', '!COMP:*', 'PHI:NUM:_', '-SPEC:V', '-SPEC:C', 'PHI:DET:_', '-COMP:T/fin', '-SPEC:C/fin', '-VAL', '-SPEC:iR', '-SPEC:N', '-SPEC:Neg/fin', '-COMP:N', '-SPEC:v', 'PF:P(lla)', 'COMP:D', 'adjoinable', '-SPEC:iWH', 'LANG:FI', '-SPEC:P', '-SPEC:T/fin', 'TAIL:*V', '-SPEC:INF'}
Luisa           ['LANG:IT']
Luisa-          {'LANG:IT', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', 'LF:Luisa', '-COMP:A', 'COMP:P', '-COMP:AUX', 'PF:Luisa', '-COMP:T/fin', '-SPEC:C/fin', '-SEM:directional', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
lukemalla       ['LANG:FI']
luke-           {'PHI:PER:_', 'LF:read', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '!COMP:*', '-COMP:V', 'PF:luke', 'COMP:P', 'PHI:DET:_', '-COMP:P', 'ASP', '-COMP:T/fin', '-VAL', 'CLASS:TR', '-COMP:v', '-COMP:N', 'COMP:D', 'V', 'LANG:FI', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'PF:loyta-', 'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '!COMP:*', '-COMP:V', 'COMP:P', 'PHI:DET:_', '-COMP:P', 'ASP', '!COMP:D', '-COMP:T/fin', '-VAL', 'CLASS:TR', 'ASP:BOUNDED', '-COMP:v', '-COMP:N', 'LF:find', 'COMP:D', 'V', 'LANG:FI', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
Mary            ['LANG:EN']
Mary-           {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', 'LANG:EN', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SEM:directional', 'LF:Mary', '-SPEC:N', '-COMP:v', '-COMP:N', '-adjoinable', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'PF:Mary', 'COMP:R/D'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', 'PF:Merja', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', 'LF:Merja', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SEM:directional', '-SPEC:N', '-COMP:v', '-COMP:N', '-adjoinable', '-COMP:C/fin', 'LANG:FI', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'TAIL:T', '-SPEC:N', '-SPEC:T/fin', '-SPEC:Neg/fin', 'SPEC:*', '-SPEC:FORCE', 'LF:by', 'adjoinable', 'LANG:FI', 'PF:malla', 'COMP:v', 'MA/inf', 'ADV'}
meren           ['LANG:FI']
mere-           {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', 'LF:ocean', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', 'PF:meri', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', 'LANG:FI', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
mistake         {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', 'LANG:EN', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', 'LF:mistake', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', '-SPEC:P', 'PF:mistake', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'LF:what', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', 'PF:mika-', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', 'LANG:FI', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', '+SEM:directional', '-SPEC:FORCE', 'PHI:NUM:_', '!COMP:*', '-COMP:V', 'PHI:GEN:_', 'COMP:P', 'PHI:DET:_', '-COMP:P', 'LANGN:EN', 'ASP', '-COMP:T/fin', '-VAL', 'CLASS:TR', '-COMP:v', '-COMP:N', 'PF:move', 'COMP:D', 'V', 'SPEC:P', 'LF:move', '-SPEC:T/fin', 'SPEC:ADV'}
mukavasti       ['LANG:EN']
mukava-         {'LANG:FI', 'SPEC:D', 'LF:comfortably', '2SPEC', '0', 'PF:mukavasti'}
must            {'COMP:Neg', '-SPEC:Neg', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:*', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', 'COMP:T/prt', '!COMP:*', 'PHI:GEN:_', '-SPEC:V', 'PHI:DET:_', 'LF:must', 'COMP:V', '-COMP:T/fin', '-SPEC:C/fin', 'MODAL', '-SPEC:TO/inf', 'VAL', '-SPEC:N', '-SPEC:v', 'PF:must', '-COMP:INF', 'T/fin', 'COMP:D', '!SPEC:D', 'FIN', '!PROBE:V', 'SPEC:D', 'T', 'COMP:v', '-SPEC:T/fin'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PF:myy', '-SPEC:FORCE', 'PHI:NUM:_', '!COMP:*', '-COMP:V', 'COMP:P', 'PHI:DET:_', '-COMP:P', 'ASP', '-COMP:T/fin', 'LF:sell', '-VAL', 'CLASS:TR', 'ASP:BOUNDED', '-COMP:v', '-COMP:N', 'COMP:D', 'V', 'LANG:FI', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
naki            ['LANG:FI']
nake-           {'-COMP:ESSA/inf', 'PHI:PER:_', 'PF:nake', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '!COMP:*', '-COMP:V', 'COMP:P', 'PHI:DET:_', '-COMP:P', 'ASP', '-COMP:T/fin', '-VAL', 'CLASS:TR', 'ASP:BOUNDED', 'SPEC:ADV', '-COMP:MA/inf', '-COMP:v', '-COMP:N', 'COMP:D', 'V', 'LANG:FI', 'SPEC:P', '-SPEC:T/fin', 'LF:see'}
nayttaa         ['LANG:FI']
naytta-         {'SPEC:TO/inf', '-SPEC:FORCE', '-ARG', '-COMP:V', 'LF:seem', 'PF:naytta', 'COMP:P', 'ASP', '-COMP:T/fin', 'SPEC:ADV', 'VAL', '-COMP:v', '-COMP:N', '!SPEC:D', 'V', 'LANG:FI', 'SPEC:P', '-SPEC:T/fin', 'SEM:internal', '!COMP:VA/inf'}
ndo             {'PRG', 'VAL', '-SPEC:T/fin', '?ARG', '-COMP:FORCE', 'LANG:EN', '!COMP:*', '-COMP:C/fin', '-SPEC:V', 'COMP:V', 'INF', 'COMP:v', 'LF:ing', '-COMP:T/fin', 'PF:PRG'}
ne              {'COMP:N', '-SPEC:MA/lla', '-COMP:D', '-COMP:uR', '-ARG', '!COMP:*', '-SPEC:D', 'OP', '-SPEC:V', '-SPEC:C', '-COMP:T/fin', '!PROBE:N', 'LF:those', 'PHI:PER:3', 'PF:ne', '-SPEC:N', '-SPEC:Neg/fin', 'PHI:NUM:PL', 'adjoinable', 'LANG:FI', '-SPEC:P', 'D', '-SPEC:T/fin', '-SPEC:INF'}
niiden          ['LANG:EN']
nen             {'TAIL:D', 'A', 'SPEC:*', 'adjoinable', '-SPEC:D', 'LANG:FI', 'LF:ing', 'COMP:0', 'PF:a', '-SPEC:A'}
not             {'PHI:PER:_', 'LF:not', '-VAL', 'PF:not', '-COMP:D', 'Neg', 'SPEC:*', 'ARG', 'POL:NEG', 'LANG:EN', 'PHI:NUM:_', '!COMP:*', 'PHI:GEN:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:FIN', '-COMP:C'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'PHI:PER:_', 'PF:nukku', 'SPEC:TO/inf', '-COMP:D', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:V', '-COMP:T', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', 'LF:sleep', 'CLASS:INTR', '-VAL', '-COMP:v', '-COMP:N', '-COMP:Neg/fin', 'V', 'LANG:FI', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', 'LF:possessions', '-SPEC:N', '-COMP:v', 'PF:omaisuuden', '-COMP:N', '-COMP:C/fin', 'LANG:FI', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
operatoria      ['LANG:IT']
operatoria-     {'LANG:IT', 'SPEC:D', 'PF:operatoria', '2SPEC', '0', 'LF:operation'}
ostaa           ['LANG:FI']
osta-           {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '!COMP:*', '-COMP:V', 'COMP:P', 'PHI:DET:_', '-COMP:P', 'ASP', '-COMP:T/fin', '-VAL', 'CLASS:TR', 'ASP:BOUNDED', 'PF:osta', '-COMP:v', '-COMP:N', 'COMP:D', 'V', 'LANG:FI', 'SPEC:P', 'LF:buy', '-SPEC:T/fin', 'SPEC:ADV'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'SEM:nonreferential', '-SPEC:INF', '-SPEC:uWH', 'PF:paiva', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', 'LF:day', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', 'LANG:FI', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
Pariisia        ['LANG:FI']
Pariisi-        {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', 'LF:Paris', '-COMP:V', 'COMP:R/D', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', 'LANG:FI', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'PF:Pariisi'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'PF:Pekka', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', 'LF:Pekka', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SEM:directional', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', 'LANG:FI', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
pelottaa        ['LANG:FI']
pelkaa-         {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '!COMP:*', '-COMP:V', 'COMP:P', 'PHI:DET:_', 'PF:pelkaa', '-COMP:P', 'ASP', '-COMP:T/fin', '-VAL', 'CLASS:TR', '-COMP:v', '-COMP:N', 'LF:fear', 'COMP:D', 'V', 'LANG:FI', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
persuades       ['LANG:EN']
persuade-       {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', '!COMP:*', '-COMP:V', 'PHI:GEN:_', 'PF:persuade', 'LF:persuade', 'COMP:P', 'PHI:DET:_', 'SEM:external', 'ASP', '-COMP:T/fin', '-VAL', '-COMP:v', '-COMP:N', 'V', 'SPEC:P', 'COMP:TO/inf', '-SPEC:T/fin', 'SPEC:ADV'}
peruuntui       ['LANG:FI']
peruuntu-       {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:V', 'LF:cancelled', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', '-VAL', '-COMP:v', '-COMP:N', 'V', 'LANG:FI', 'SPEC:D', 'SPEC:P', 'PF:peruuntui', '-SPEC:T/fin', 'SPEC:ADV'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '!COMP:*', '-COMP:V', 'LF:wash', 'COMP:P', 'PHI:DET:_', '-COMP:P', 'ASP', '-COMP:T/fin', '-VAL', 'CLASS:TR', 'ASP:BOUNDED', '-COMP:v', '-COMP:N', 'COMP:D', 'V', 'LANG:FI', 'SPEC:P', 'PF:pese', '-SPEC:T/fin', 'SPEC:ADV'}
pese-           {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '!COMP:*', '-COMP:V', 'LF:wash', 'COMP:P', 'PHI:DET:_', '-COMP:P', 'ASP', '-COMP:T/fin', '-VAL', 'CLASS:TR', '-COMP:v', '-COMP:N', 'COMP:D', 'V', 'LANG:FI', 'SPEC:P', 'PF:pese', '-SPEC:T/fin', 'SPEC:ADV'}
petardi         {'LANG:IT', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', 'PF:petardi', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', 'LF:firecrackers', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
pieni           ['LANG:FI']
pieni-          {'LANG:FI', 'PF:pieni-', 'SPEC:D', '2SPEC', '0', 'LF:small'}
poikien         ['LANG:FI']
poika-          {'PF:poika', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', 'LANG:FI', 'LF:boy', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
puhelinta       ['LANG:FI']
puhelin-        {'PF:puhelin', 'LANG:FI', 'SPEC:D', '2SPEC', 'LF:phone', '0'}
punainen        ['LANG:FI']
puna-           {'LF:red', 'LANG:FI', 'SPEC:D', '2SPEC', '0', 'PF:puna-'}
presupposto     {'LANG:IT', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', 'LF:presupposition', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', 'PF:presupposto', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
primary         {'LANG:IT', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', 'LF:nurse', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D', 'PF:primary'}
promises        ['LANG:EN']
promise-        {'PHI:PER:_', 'SPEC:TO/inf', 'PF:promise', 'ARG', 'LANG:EN', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:V', 'PHI:GEN:_', 'LF:promise', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', '-VAL', 'SPEC:ADV', '-COMP:v', '-COMP:N', 'COMP:D', 'V', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'SEM:internal'}
pyytaa          ['LANG:FI']
pyyta-          {'PHI:PER:_', 'SPEC:TO/inf', 'PF:pyyda', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:V', 'COMP:P', 'LF:ask', 'PHI:DET:_', 'ASP', 'SEM:external', '-COMP:T/fin', '-VAL', '-COMP:v', '-COMP:N', 'V', 'LANG:FI', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
raukesi         ['LANG:FI']
raukea-         {'PHI:PER:_', 'SPEC:TO/inf', 'PF:raukea', 'ARG', 'LF:terminate', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:V', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', '-VAL', '-COMP:v', '-COMP:N', 'V', 'LANG:FI', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
red             ['LANG:EN']
red-            {'LF:red', 'PF:red', '0', 'SPEC:D', '2SPEC', 'LANG:EN'}
saavuttaa       ['LANG:FI']
saavutta-       {'PHI:PER:_', 'SPEC:TO/inf', 'LF:reach', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '!COMP:*', '-COMP:V', 'COMP:P', 'PHI:DET:_', '-COMP:P', 'ASP', '!COMP:D', '-COMP:T/fin', '-VAL', 'CLASS:TR', 'ASP:BOUNDED', '-COMP:v', '-COMP:N', 'COMP:D', 'V', 'LANG:FI', 'SPEC:P', 'PF:saavutta-', '-SPEC:T/fin', 'SPEC:ADV'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'PHI:PER:_', 'SPEC:TO/inf', 'COMP:FORCE', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', 'LF:say', '-COMP:V', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', 'PF:sano-', '-VAL', '-COMP:v', '-COMP:N', 'COMP:VA/inf', 'V', 'LANG:FI', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
said            ['LANG:EN']
say'            {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', 'LF:say', '-COMP:V', 'PHI:GEN:_', 'COMP:P', 'PHI:DET:_', 'ASP', 'PF:say', '-COMP:T/fin', '-VAL', '-COMP:v', '-COMP:N', '!COMP:FORCE', 'V', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
say-            {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', 'LF:say', '-COMP:V', 'PHI:GEN:_', 'COMP:P', 'PHI:DET:_', 'ASP', 'PF:say', '-COMP:T/fin', '-VAL', '-COMP:v', '-COMP:N', '!COMP:FORCE', 'V', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
sala            ['LANG:IT']
sala-           {'LANG:IT', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', 'LF:room', '-COMP:N', 'PF:sala', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
scoppiati       ['LANG:IT']
scoppia-        {'LANG:IT', 'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', 'PHI:GEN:_', 'LF:explode', '-COMP:V', 'PF:scoppia', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', '-VAL', '-COMP:v', '-COMP:N', 'V', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
sen             {'COMP:N', '-SPEC:MA/lla', '-COMP:D', '-COMP:uR', '-ARG', '!COMP:*', '-SPEC:D', 'OP', '-SPEC:V', 'PF:sen', '-SPEC:C', '-COMP:T/fin', 'LF:the/that', '!PROBE:N', 'TAIL:PHI', 'TAIL:ASP', '-SPEC:N', '-SPEC:Neg/fin', 'adjoinable', 'TAIL:*POL:NEG', 'LANG:FI', '-SPEC:P', 'D', '-SPEC:T/fin', '-SPEC:INF'}
se'             {'COMP:N', '-SPEC:MA/lla', '-COMP:D', '-COMP:uR', '-ARG', '!COMP:*', '-SPEC:D', 'OP', '-SPEC:V', '-SPEC:C', '-COMP:T/fin', 'LF:the/that', '!PROBE:N', 'PF:se', '-SPEC:N', '-SPEC:Neg/fin', 'adjoinable', 'LANG:FI', '-SPEC:P', 'D', '-SPEC:T/fin', '-SPEC:INF'}
sentenza        {'LANG:IT', '-SPEC:INF', '-SPEC:uWH', 'LF:sentence', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', 'PF:sentenza', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
Seine           ['LANG:EN']
Seine-          {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', 'LANG:EN', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', 'LF:Seine', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', 'PF:Seine', '-COMP:N', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
sembrano        ['LANG:IT']
sembra-         {'SPEC:TO/inf', '-COMP:D', 'LANG:EN', '-ARG', '-SPEC:FORCE', '-COMP:V', 'LF:seem', 'COMP:P', '-COMP:T/fin', '!COMP:ARE/inf', '-VAL', '-ASP', '-COMP:v', '-COMP:N', 'V', 'SPEC:D', 'SPEC:P', 'PF:sembra', '-SPEC:T/fin', 'SPEC:ADV'}
sleeps          ['LANG:EN']
sleep           {'PHI:PER:_', 'SPEC:TO/inf', '-COMP:D', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:V', 'PF:sleep', 'COMP:P', 'PHI:DET:_', 'ASP', 'LF:sleep', '-COMP:T/fin', 'CLASS:INTR', '-VAL', '-COMP:v', '-COMP:N', 'V', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
sleep-          {'PHI:PER:_', 'SPEC:TO/inf', '-COMP:D', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:V', 'PF:sleep', 'COMP:P', 'PHI:DET:_', 'ASP', 'LF:sleep', '-COMP:T/fin', 'CLASS:INTR', '-VAL', '-COMP:v', '-COMP:N', 'V', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '!COMP:A/inf', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', 'PF:sopimus', '-SPEC:C/fin', 'LF:agreement', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', 'LANG:FI', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
spinge          ['LANG:IT']
spinge-         {'LANG:IT', 'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:V', 'PF:spinge', 'PHI:DET:_', '-COMP:P', 'ASP', '-COMP:T/fin', '!COMP:D', '-VAL', 'LF:push', '-COMP:v', '-COMP:N', 'V', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
ssa             {'-COMP:uWH', 'PHI:PER:_', 'P', '-SPEC:ADV', 'SPEC:*', '-COMP:ADV', 'ARG', '-SPEC:FORCE', 'COMP:n/MA', 'TAIL:V', '!COMP:*', 'PHI:NUM:_', '-SPEC:V', '-SPEC:C', 'PHI:DET:_', '-COMP:T/fin', '-SPEC:C/fin', '-VAL', '-SPEC:iR', '-SPEC:N', '-SPEC:Neg/fin', '-COMP:N', '-SPEC:v', 'LF:in', 'PF:ssa', 'COMP:D', 'adjoinable', '-SPEC:iWH', 'LANG:FI', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF'}
stanno          ['LANG:IT']
sta-            {'PHI:PER:_', 'SPEC:TO/inf', 'PF:sta', 'ARG', 'PHI:NUM:_', 'LANG:EN', 'COMP:PRG', '-SPEC:FORCE', '-COMP:V', 'PHI:GEN:_', 'COMP:P', 'PHI:DET:_', '-COMP:T/fin', '-VAL', 'SPEC:ADV', '-ASP', '-COMP:v', '-COMP:N', 'V', 'LF:stay', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'SEM:internal'}
sti             {'TAIL:T', 'PF:sti', '-SPEC:N', '-SPEC:Neg/fin', 'SPEC:*', '-SPEC:FORCE', 'LF:by', '!COMP:*', '-ARG', 'adjoinable', 'LANG:FI', '-SPEC:T/fin', 'ADV'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', 'PF:sukka-', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', 'LANG:FI', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'LF:socks', 'COMP:R/D'}
talo            {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', 'PF:talo', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', 'LANG:FI', '-SPEC:P', '-COMP:WH', 'LF:house', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
tama            ['LANG:EN']
tama-           {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', 'LF:this', '-SPEC:V', '-COMP:A', 'COMP:P', 'PHI', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', 'LANG:FI', '-SPEC:P', '-COMP:WH', 'PF:tama', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'PF:taytyy', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:*', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:V', '!COMP:A/inf', 'COMP:P', 'LF:must', 'PHI:DET:_', '-COMP:T/fin', 'MODAL', '-VAL', '-ASP', '-COMP:v', '-COMP:N', 'V', 'FIN', 'LANG:FI', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
teki            ['LANG:FI']
teke-           {'PHI:PER:_', 'PF:teke', 'LF:make', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '!COMP:*', '-COMP:V', 'COMP:P', 'PHI:DET:_', '-COMP:P', 'ASP', '!COMP:D', '-COMP:T/fin', '-VAL', 'CLASS:TR', 'ASP:BOUNDED', '-COMP:v', '-COMP:N', '-COMP:A/inf', 'COMP:D', 'V', 'LANG:FI', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
that            {'LF:that', '-VAL', 'PF:that', '!PROBE:T/fin', 'LANG:EN', '-ARG', '!COMP:*', 'COMP:T/fin', 'FIN', '-SPEC:*', 'FORCE', 'COMP:C/fin'}
the             {'PF:the', 'COMP:N', '-SPEC:MA/lla', '-COMP:D', '-COMP:uR', 'LANG:EN', '-ARG', '!COMP:*', '-SPEC:D', 'OP', '-SPEC:V', '-SPEC:C', '-COMP:T/fin', '!PROBE:N', 'PHI:DEF:DEF', '-SPEC:N', '-SPEC:Neg/fin', 'adjoinable', '-SPEC:P', 'LF:the', 'D', '-SPEC:T/fin', '-SPEC:INF'}
to              {'-COMP:uWH', 'PHI:PER:_', 'P', '-SPEC:ADV', '-COMP:ADV', 'ARG', '+SEM:directional', 'LANG:EN', 'TAIL:V,+SEM:directional', '-SPEC:FORCE', '!COMP:*', 'PHI:NUM:_', '-float', 'PHI:GEN:_', '-SPEC:V', '-SPEC:C', 'PHI:DET:_', '-COMP:T/fin', 'LF:to', '-SPEC:C/fin', '-VAL', '-SPEC:iR', '-SPEC:N', '-SPEC:Neg/fin', '-COMP:N', '-SPEC:v', 'COMP:D', 'adjoinable', '-SPEC:iWH', '-SPEC:P', '-SPEC:*', '-SPEC:T/fin', '-SPEC:INF', 'PF:to'}
to_inf          {'TO/inf', '?ARG', '-COMP:FORCE', 'LANG:EN', '!COMP:*', '-SPEC:V', 'PF:TO/inf', 'COMP:V', '-COMP:T/fin', '-VAL', '-SPEC:v', 'LF:TO/inf', 'adjoinable', '-COMP:C/fin', 'INF', 'COMP:v', '-SPEC:T/fin'}
towards         {'-COMP:uWH', 'PHI:PER:_', '-SPEC:INF', 'P', '-SPEC:ADV', '-COMP:ADV', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', 'TAIL:V', '!COMP:*', 'PHI:GEN:_', '-float', '-SPEC:V', '-SPEC:C', 'PHI:DET:_', '-COMP:T/fin', '-SPEC:C/fin', '-VAL', '-SPEC:iR', '-SPEC:N', 'PF:towards', '-SPEC:Neg/fin', '-COMP:N', '-SPEC:v', 'COMP:D', 'adjoinable', '-SPEC:iWH', '-SPEC:P', '-SPEC:*', '-SPEC:T/fin', 'LF:towards'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '!COMP:*', '-COMP:V', 'COMP:P', 'PHI:DET:_', '-COMP:P', 'ASP', '-COMP:T/fin', '-VAL', 'CLASS:TR', 'LF:nudge', '-COMP:v', '-COMP:N', 'PF:tonaise', 'COMP:D', 'V', 'LANG:FI', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
tta             {'-COMP:uWH', 'PHI:PER:_', 'P', '-SPEC:ADV', 'SPEC:*', '-COMP:ADV', 'ARG', '-SPEC:FORCE', 'COMP:n/MA', '!COMP:*', 'PHI:NUM:_', '-SPEC:V', '-SPEC:C', 'PHI:DET:_', '-COMP:T/fin', 'ADV', '-SPEC:C/fin', '-VAL', 'PF:tta', '-SPEC:iR', '-SPEC:N', '-SPEC:Neg/fin', '-COMP:N', '-SPEC:v', 'COMP:D', 'adjoinable', '-SPEC:iWH', 'LF:without', 'LANG:FI', '-SPEC:P', '-SPEC:T/fin', '-SPEC:INF'}
tries           ['LANG:EN']
try-            {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PF:try', 'LANG:EN', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:V', 'PHI:GEN:_', '!COMP:-ARG', 'LF:try', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', '!COMP:TO/inf', '-VAL', 'SPEC:ADV', '-COMP:v', '-COMP:N', 'V', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'SEM:internal'}
verifiche       {'LANG:IT', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', 'LF:verification', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', '-SPEC:P', 'PF:verifiche', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'PHI:PER:_', 'SPEC:TO/inf', '-COMP:D', 'ARG', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:V', 'LF:flow', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', '-VAL', '-COMP:v', '-COMP:N', 'V', 'PF:virtaa', 'SPEC:D', 'LANG:FI', 'SPEC:P', '!COMP:P', '-SPEC:T/fin', 'SPEC:ADV'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'PHI:PER:_', 'PF:volu', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', '!COMP:*', '-COMP:V', 'PHI:GEN:_', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', 'LF:want', '-VAL', 'SPEC:ADV', '-COMP:v', '-COMP:N', 'V', 'SPEC:P', '-SPEC:*', '-SPEC:T/fin', 'SEM:internal'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', '!COMP:*', '-COMP:V', 'PHI:GEN:_', 'COMP:P', 'PHI:DET:_', 'PF:voitta', '-COMP:P', 'ASP', '-COMP:T/fin', '-VAL', 'CLASS:TR', 'ASP:BOUNDED', 'SPEC:ADV', '-COMP:v', '-COMP:N', 'SEM:achievement', 'COMP:D', 'V', 'SPEC:P', '-SPEC:T/fin', 'LF:win'}
wants           ['LANG:EN']
want-           {'PHI:PER:_', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', '!COMP:*', '-COMP:V', 'PHI:GEN:_', 'COMP:P', 'PHI:DET:_', '-COMP:P', 'ASP', '-COMP:T/fin', 'LF:want', 'CLASS:TR', '-SPEC:TO/inf', '-VAL', '-COMP:v', '-COMP:N', 'COMP:D', 'V', 'SPEC:P', 'COMP:TO/inf', '-SPEC:T/fin', 'SPEC:ADV', 'PF:want'}
what            ['LANG:EN']
what-           {'LF:what', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'PF:what', 'COMP:R', 'LANG:EN', '-SPEC:FORCE', '-SPEC:R', '-COMP:*', 'COMP:R/D', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'PHI_N', '-SPEC:T/fin', 'N', 'COMP:uR'}
which           {'COMP:N', '-SPEC:MA/lla', '-COMP:D', '-COMP:uR', 'LANG:EN', '-ARG', '!COMP:*', '-SPEC:D', 'OP', '-SPEC:V', '-SPEC:C', '-COMP:T/fin', '!PROBE:N', '-SPEC:N', '-SPEC:Neg/fin', 'PF:which', 'adjoinable', '-SPEC:P', 'D', 'OP:WH', '-SPEC:T/fin', 'LF:which', '-SPEC:INF'}
who             ['LANG:EN']
who-            {'PF:who', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', 'LANG:EN', '-SPEC:FORCE', '-SPEC:R', '-COMP:*', 'COMP:R/D', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', 'LF:who', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'PHI_N', '-SPEC:T/fin', 'N', 'COMP:uR'}
whether         {'Q', 'LANG:EN', '-ARG', '!COMP:*', 'LF:whether', 'OP', 'COMP:T/fin', 'FORCE', 'COMP:C/fin', 'OP:Q', '-VAL', 'PF:whether', '!PROBE:T/fin', 'FIN', 'OP:WH', '-SPEC:*'}
yrittaa         ['LANG:FI']
yritta-         {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:V', '!COMP:-ARG', '!COMP:A/inf', 'LF:try', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', '-VAL', 'SPEC:ADV', '-COMP:v', '-COMP:N', 'V', 'SPEC:D', 'SPEC:P', 'PF:yritta', '-SPEC:T/fin', 'SEM:internal'}
mina            ['LANG:EN']
mina-           {'LF:I', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:*', '-COMP:V', 'COMP:R/D', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', 'PF:mina', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', 'LANG:FI', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'PHI_N', '-SPEC:T/fin', 'N', 'COMP:uR'}
sina            ['LANG:EN']
sina-           {'-SPEC:INF', '-SPEC:uWH', 'PF:sina', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:*', '-COMP:V', 'COMP:R/D', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', 'LF:you', 'LANG:FI', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'PHI_N', '-SPEC:T/fin', 'N', 'COMP:uR'}
han             ['LANG:EN']
han-            {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', 'PF:han', '-COMP:*', 'LF:s/he', 'COMP:R/D', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', 'LANG:FI', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'PHI_N', '-SPEC:T/fin', 'N', 'COMP:uR'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:*', '-COMP:V', 'COMP:R/D', '-SPEC:V', '-COMP:A', 'COMP:P', 'PF:me', '-COMP:T/fin', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', 'LANG:FI', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'PHI_N', 'LF:we', '-SPEC:T/fin', 'N', 'COMP:uR'}
te              ['LANG:EN']
te-             {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:*', '-COMP:V', 'COMP:R/D', '-SPEC:V', 'PF:te', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', 'LF:you', 'LANG:FI', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'PHI_N', '-SPEC:T/fin', 'N', 'COMP:uR'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he-             {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', 'LF:they', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:*', '-COMP:V', 'COMP:R/D', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', 'LANG:FI', 'PF:he', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'PHI_N', '-SPEC:T/fin', 'N', 'COMP:uR'}
he-             {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', 'LANG:EN', '-SPEC:FORCE', '-SPEC:R', '-COMP:*', 'COMP:R/D', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', 'LF:he', '-COMP:v', '-COMP:N', '-COMP:C/fin', '-SPEC:P', 'PF:he', '-COMP:WH', 'SPEC:A', 'PHI_N', '-SPEC:T/fin', 'N', 'COMP:uR'}
se              ['LANG:FI']
se-             {'COMP:N', '-SPEC:MA/lla', '-COMP:D', '-COMP:uR', 'LF:it/that', '-ARG', '!COMP:*', '-SPEC:D', 'OP', '-SPEC:V', '-SPEC:C', '-COMP:T/fin', '!PROBE:N', 'PF:se', '-SPEC:N', '-SPEC:Neg/fin', 'adjoinable', 'LANG:FI', '-SPEC:P', 'D', '-SPEC:T/fin', '-SPEC:INF'}
I               ['LANG:EN']
I-              {'LF:I', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', 'LANG:EN', 'PF:I', '-SPEC:FORCE', '-SPEC:R', '-COMP:*', 'COMP:R/D', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'PHI_N', '-SPEC:T/fin', 'N', 'COMP:uR'}
you             ['LANG:EN']
you-            {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', 'LANG:EN', '-SPEC:FORCE', '-SPEC:R', '-COMP:*', 'COMP:R/D', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', 'PF:you', '-COMP:C/fin', 'LF:you', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'PHI_N', '-SPEC:T/fin', 'N', 'COMP:uR'}
he              ['LANG:EN']
she             ['LANG:EN']
she-            {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', 'LANG:EN', '-SPEC:FORCE', '-SPEC:R', '-COMP:*', 'COMP:R/D', '-COMP:V', 'COMP:uR', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', 'PF:she', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'PHI_N', '-SPEC:T/fin', 'N', 'LF:she'}
we              ['LANG:EN']
we-             {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'PF:we', 'COMP:R', 'LANG:EN', '-SPEC:FORCE', '-SPEC:R', '-COMP:*', 'COMP:R/D', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'PHI_N', 'LF:we', '-SPEC:T/fin', 'N', 'COMP:uR'}
you_pl          ['LANG:EN']
you_pl-         {'N', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', 'LANG:EN', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', 'PHI', 'PF:you_pl', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'LF:you_pl', 'COMP:R/D'}
they            ['LANG:EN']
they-           {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', 'LF:they', 'PF:they', '-COMP:ADV', 'LANG:EN', '-SPEC:FORCE', '-SPEC:R', '-COMP:*', 'COMP:R/D', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'COMP:R', 'SPEC:A', 'PHI_N', '-SPEC:T/fin', 'N', 'COMP:uR'}
it              ['LANG:EN']
it-             {'COMP:N', 'PF:it', '-SPEC:MA/lla', '-COMP:D', '-COMP:uR', 'LANG:EN', 'LF:it/that', '-ARG', '!COMP:*', '-SPEC:D', 'OP', '-SPEC:V', '-SPEC:C', '-COMP:T/fin', '!PROBE:N', '-SPEC:N', '-SPEC:Neg/fin', 'adjoinable', '-SPEC:P', 'D', '-SPEC:T/fin', '-SPEC:INF'}
io              ['LANG:EN']
io-             {'LANG:IT', 'LF:I', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', 'PF:io', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:*', '-COMP:V', 'COMP:R/D', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'PHI_N', '-SPEC:T/fin', 'N', 'COMP:uR'}
tu              ['LANG:EN']
tu-             {'LANG:IT', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', 'PF:tu', '-COMP:*', 'COMP:R/D', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', 'LF:you', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'PHI_N', '-SPEC:T/fin', 'N', 'COMP:uR'}
lui             ['LANG:EN']
lui-            {'LANG:IT', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:*', '-COMP:V', 'COMP:R/D', '-SPEC:V', 'PF:lui', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', 'LF:he', '-COMP:v', '-COMP:N', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'PHI_N', '-SPEC:T/fin', 'N', 'COMP:uR'}
lei             ['LANG:EN']
lei-            {'LANG:IT', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:*', '-COMP:V', 'COMP:R/D', 'COMP:uR', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', 'PF:lei', '-COMP:v', '-COMP:N', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'PHI_N', '-SPEC:T/fin', 'N', 'LF:she'}
noi             ['LANG:EN']
noi-            {'LANG:IT', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:*', '-COMP:V', 'COMP:R/D', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', 'PF:noi', '-COMP:v', '-COMP:N', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'PHI_N', 'LF:we', '-SPEC:T/fin', 'N', 'COMP:uR'}
voi             ['LANG:EN']
voi-            {'LANG:IT', 'N', 'PF:voi', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:*', '-COMP:V', 'COMP:R/D', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'PHI_N', '-SPEC:T/fin', 'LF:you_pl', 'COMP:uR'}
loro            ['LANG:EN']
loro-           {'LANG:IT', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', 'LF:they', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:*', '-COMP:V', 'COMP:R/D', 'PF:loro', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'PHI_N', '-SPEC:T/fin', 'N', 'COMP:uR'}
mi              ['LANG:EN']
mi-             {'-SPEC:FORCE', '-SPEC:R', '-COMP:*', '-SPEC:V', '-COMP:A', 'PF:mi(cl)', '-COMP:T/fin', '-COMP:N', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'PHI_N', 'COMP:uR', 'N', 'COMP:R/D', '-SPEC:INF', 'LANG:IT', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', 'LF:me', '-COMP:V', 'COMP:P', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:AUX', 'CL', '-SPEC:T/fin', 'SPEC:A'}
la              ['LANG:EN']
la-             {'-SPEC:FORCE', 'LF:her', '-SPEC:R', '-COMP:*', '-SPEC:V', '-COMP:A', '-COMP:T/fin', '-COMP:N', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'PHI_N', 'COMP:uR', 'N', 'COMP:R/D', '-SPEC:INF', 'LANG:IT', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-COMP:V', 'PF:la(cl)', 'COMP:P', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:AUX', 'CL', '-SPEC:T/fin', 'SPEC:A'}
lo              ['LANG:EN']
lo-             {'-SPEC:FORCE', '-SPEC:R', '-COMP:*', '-SPEC:V', 'PF:lo(cl)', '-COMP:A', 'LF:him', '-COMP:T/fin', '-COMP:N', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'PHI_N', 'COMP:uR', 'N', 'COMP:R/D', '-SPEC:INF', 'LANG:IT', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-COMP:V', 'COMP:P', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:AUX', 'CL', '-SPEC:T/fin', 'SPEC:A'}
si              ['LANG:EN']
si-             {'PF:si(cl)', '-SPEC:FORCE', '-SPEC:R', '-COMP:*', '-SPEC:V', '-COMP:A', '-COMP:T/fin', '-COMP:N', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'PHI_N', 'COMP:uR', 'N', 'COMP:R/D', '-SPEC:INF', 'LANG:IT', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-COMP:V', 'COMP:P', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', 'LF:3sg', '-COMP:AUX', '-SPEC:T/fin', 'SPEC:A', 'CAL:CL'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'LANG:IT', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', '-SPEC:FORCE', '-SPEC:R', '-COMP:*', '-COMP:V', 'COMP:R/D', '-SPEC:V', '-COMP:A', 'COMP:P', '-COMP:AUX', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', '-COMP:N', '-COMP:C/fin', 'LF:there', 'PF:ci', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'PHI_N', '-SPEC:T/fin', 'N', 'COMP:uR'}
[-n]            {'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:FI', 'PHI:HUM:HUM', 'PHI', 'PHI:PER:1', 'inflectional'}
[-t]            {'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:FI', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI', 'inflectional'}
[-V]            {'PHI:NUM:SG', 'LANG:FI', 'PHI:PER:3', 'PHI', 'inflectional'}
[-mme]          {'PHI:DET:DEF', 'LANG:FI', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:PL', 'inflectional', 'PHI:PER:1'}
[-mme]          {'PHI:DET:DEF', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'inflectional', 'PHI:PER:1'}
[-tte]          {'PHI:DET:DEF', 'LANG:FI', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:PL', 'inflectional'}
[-vat]          {'LANG:FI', 'PHI:PER:3', 'PHI', 'PHI:NUM:PL', 'inflectional'}
[-ni]           {'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:FI', 'PHI:HUM:HUM', 'PHI', 'PHI:PER:1', 'inflectional'}
[-si]           {'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:FI', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI', 'inflectional'}
[-nsa]          {'PHI:NUM:SG', 'LANG:FI', 'PHI:PER:3', 'PHI', 'inflectional'}
[-an]           {'PHI', 'LANG:FI', 'inflectional', 'PHI:PER:3'}
[-nne]          {'PHI:DET:DEF', 'LANG:FI', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'inflectional'}
[-s]            {'PHI:NUM:SG', 'LANG:EN', 'PHI:GEN:F', 'PHI:PER:3', 'PHI', 'PHI:GEN:M', 'inflectional'}
[-0]            {'PHI:NUM:SG', 'PHI:PER:3', 'PHI:NUM:PL', 'PHI:PER:1', 'inflectional', 'LANG:EN', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:PER:2', 'PHI'}
[-o]            {'LANG:IT', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI', 'PHI:PER:1', 'inflectional'}
[-i]            {'LANG:IT', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI', 'inflectional'}
[-a]            {'LANG:IT', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:3', 'PHI', 'inflectional'}
[-e]            {'LANG:IT', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:3', 'PHI', 'inflectional'}
[-iamo]         {'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:PL', 'inflectional', 'PHI:PER:1'}
[-te]           {'LANG:IT', 'PHI:DET:DEF', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:PL', 'inflectional'}
[-no]           {'LANG:IT', 'PHI:DET:DEF', 'PHI:PER:3', 'PHI', 'PHI:NUM:PL', 'inflectional'}
[-nom]          {'inflectional', 'TAIL:FIN,ARG,VAL', 'NOM', 'LANG:EN', 'adjoinable'}
[-par]          {'LANG:FI', 'PAR', 'TAIL:ARG,-VAL', 'inflectional', 'adjoinable'}
[-gen]          {'LANG:EN', '-float', 'GEN', 'inflectional', 'TAIL:INF,ARG'}
gen             {'LANG:EN', '-float', 'GEN', 'inflectional', 'TAIL:INF,ARG'}
[-n_acc]        {'n-ACC', 'TAIL:*POL:NEG', 'TAIL:PHI', 'LANG:FI', 'TAIL:ARG,ASP:BOUNDED', 'inflectional', 'adjoinable'}
[-t_acc]        {'t-ACC', 'TAIL:*POL:NEG', 'LANG:FI', 'TAIL:ARG,ASP:BOUNDED', 'inflectional', 'adjoinable'}
[-0_acc]        {'TAIL:*PHI', 'TAIL:*POL:NEG', 'LANG:FI', '0_ACC', 'TAIL:ARG,ASP:BOUNDED', 'inflectional', 'adjoinable'}
asp             {'inflectional', 'ASP:BOUNDED', 'LANG:EN'}
a'              {'LANG:X', 'PF:a', 'a', 'LF:A'}
b'              {'b', 'PF:b', 'LANG:X', 'LF:B'}
b''             {'-COMP:c', 'LF:B', 'b', 'PF:b', 'LANG:EN'}
c''             {'LF:C', 'SPEC:a', 'LANG:EN', 'c', 'PF:c'}
c'              {'LANG:X', 'LF:C', 'c', 'PF:c'}
d'              {'LANG:', 'd', 'PF:d', 'LF:D'}
a''             ['LANG:EN']
x'              {'PF:x', 'x', 'LF:X', 'LANG:X'}
y'              {'PF:y', 'LF:Y', 'LANG:X', 'y'}
z'              {'z', 'PF:x', 'LF:Z', 'LANG:X'}
John'           {'PF:John', "N'", 'LANG:X', 'LF:John'}
admires'        {'LF:admires', 'PF:admires', 'LANG:X', "V'"}
admires''       {'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'PHI:DET:_', 'ASP', '-COMP:T/fin', '-VAL', '-COMP:v', 'LF:admires', '-COMP:N', 'V', 'SPEC:D', 'SPEC:P', 'PF:admires', '-SPEC:T/fin', 'SPEC:ADV'}
Mary'           {"N'", 'LF:mary', 'PF:Mary', 'LANG:X'}
T/fin           {'-SPEC:Neg', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:*', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', 'COMP:T/prt', '!COMP:*', 'PHI:GEN:_', '-SPEC:V', 'PHI:DET:_', 'COMP:V', '-COMP:T/fin', 'PF:T', '-SPEC:C/fin', '-SPEC:TO/inf', 'VAL', '-SPEC:N', '-SPEC:v', 'LF:T', '-COMP:INF', 'T/fin', 'COMP:D', '!SPEC:D', 'FIN', '!PROBE:V', 'SPEC:D', 'T', 'COMP:v', '-SPEC:T/fin'}
v               {'PHI:PER:_', '-VAL', '-SPEC:N', 'LF:v', 'ARG', 'PHI:NUM:_', 'LANG:EN', 'PF:v', '!COMP:*', 'ASP', 'PHI:GEN:_', '!PROBE:V', 'SPEC:D', 'PHI:DET:_', 'COMP:V', 'v'}
C/fin           {'COMP:Neg/fin', 'C/fin', 'C', 'SPEC:*', 'LANG:EN', 'LF:C/fin', '-ARG', '!COMP:*', 'COMP:T/fin', 'PF:C', '-SPEC:C/fin', '-SPEC:N', 'VAL', '-COMP:C/fin', 'FIN', '!PROBE:FIN', '-SPEC:T/fin', '-COMP:T/prt'}
T               {'PHI:PER:_', 'SPEC:*', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', '!COMP:*', 'COMP:T/prt', '-COMP:NEG', 'PHI:GEN:_', '-SPEC:V', 'PHI:DET:_', 'COMP:V', 'PF:T', '-SPEC:N', 'VAL', 'LF:T', 'COMP:D', 'FIN', '!PROBE:V', 'SPEC:D', 'T', 'COMP:v', '-SPEC:T/fin'}
T/prt           {'PHI:PER:_', 'SPEC:*', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', 'T/prt', '!COMP:*', 'COMP:T/prt', '-COMP:NEG', 'PHI:GEN:_', '-SPEC:V', 'PHI:DET:_', 'PF:T/prt', 'COMP:V', 'LF:T/prt', 'VAL', '-SPEC:N', 'COMP:D', 'FIN', '!PROBE:V', 'SPEC:D', 'T', 'COMP:v', '-SPEC:T/fin'}
a0              {'PF:A', 'TAIL:D', 'A', 'LANG:EN', '-adjoinable', 'adjoinable', '-SPEC:D', 'COMP:0', '-SPEC:A', 'LF:A'}
n               {'PHI:PER:_', 'SPEC:*', 'PHI:GEN:_', 'LANG:EN', 'PF:n', '-SPEC:FORCE', '-SPEC:R', '-SPEC:V', '-COMP:A', '-COMP:T/fin', 'COMP:v', 'VAL', '-COMP:N', '-COMP:C/fin', 'n', '-SPEC:P', '-COMP:WH', 'COMP:uR', 'N', 'COMP:R/D', '-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', 'ARG', 'PHI:NUM:_', '!COMP:*', '-COMP:V', 'COMP:P', 'PHI:DET:_', 'COMP:V', '-SPEC:C/fin', '-SPEC:N', '-COMP:v', 'LF:n', '!SPEC:D', '!SPEC:*', 'INF', '-COMP:AUX', 'COMP:0', '-SPEC:T/fin', 'SPEC:A'}
impass          {'PHI:PER:_', '-VAL', '-SPEC:N', 'ARG', 'PHI:NUM:_', 'LANG:EN', 'PHI:GEN:_', '!COMP:*', 'ASP', '!PROBE:V', 'SPEC:D', 'LF:impass', 'PHI:DET:_', 'COMP:V', 'v', 'PF:impass'}
cau             {'PHI:PER:_', '-VAL', '-SPEC:N', 'ARG', 'PHI:NUM:_', 'LANG:EN', 'PHI:GEN:_', '!COMP:*', 'ASP', '!PROBE:V', 'LF:v/Cause', 'SPEC:D', 'PHI:DET:_', 'PF:Cau', 'COMP:V', 'v'}
INF             {'PF:INF', '-SPEC:T/fin', '-COMP:FORCE', 'LANG:EN', '!COMP:*', '-COMP:C/fin', '-SPEC:V', 'COMP:V', 'INF', 'COMP:v', 'LF:INF', '-COMP:T/fin'}
prtcpl          {'PHI:PER:_', 'SPEC:*', 'ARG', '-COMP:FORCE', 'LANG:EN', '-SPEC:FORCE', 'T/prt', 'COMP:T/prt', '-COMP:NEG', '!COMP:*', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:V', 'PHI:DET:_', 'PF:T/prt', 'COMP:V', 'LF:T/prt', '-COMP:T/fin', 'VAL', '-SPEC:N', 'COMP:D', '-COMP:C/fin', 'FIN', '!PROBE:V', 'SPEC:D', 'INF', 'COMP:v', '-SPEC:T/fin', 'T'}
TO/inf          {'TO/inf', '?ARG', '-COMP:FORCE', 'LANG:EN', '!COMP:*', '-SPEC:V', 'PF:TO/inf', 'COMP:V', '-COMP:T/fin', '-VAL', '-SPEC:v', 'LF:TO/inf', 'adjoinable', '-COMP:C/fin', 'INF', 'COMP:v', '!COMP:V', '-SPEC:T/fin'}
A/inf           {'?ARG', 'A/inf', 'SPEC:*', '-COMP:FORCE', 'LANG:EN', '!COMP:*', '-SPEC:V', 'COMP:V', '-COMP:T/fin', '-SPEC:Neg/fin', 'LF:A/inf', '?VAL', '-COMP:C/fin', 'INF', 'COMP:v', '-SPEC:T/fin', 'PF:A/inf'}
ARE/inf         {'LF:ARE/inf', '?ARG', 'SPEC:*', '-COMP:FORCE', 'LANG:EN', '!COMP:*', '-SPEC:V', 'COMP:V', '-COMP:T/fin', 'PF:are', 'VAL', '-adjoinable', '-COMP:C/fin', 'ARE/inf', 'INF', 'COMP:v', '-SPEC:T/fin'}
ESSA/inf        {'TAIL:T', '?ARG', 'SPEC:*', '-COMP:FORCE', 'LANG:EN', '-SPEC:FORCE', '!COMP:*', '-SPEC:V', 'LF:while', 'COMP:V', '-COMP:T/fin', 'ADV', '-SPEC:N', 'PF:essa', '-SPEC:Neg/fin', '?VAL', 'adjoinable', '-COMP:C/fin', 'ESSA/inf', 'INF', 'COMP:v', '-SPEC:T/fin'}
TUA/inf         {'PHI:PER:_', 'TAIL:T', 'PF:tua', 'ARG', '-COMP:FORCE', 'LANG:EN', '-SPEC:FORCE', '!COMP:*', 'PHI:NUM:_', 'PHI:GEN:_', 'CAL', '-SPEC:V', 'PHI:DET:_', 'COMP:V', '-COMP:T/fin', 'ADV', 'LF:after', '-SPEC:N', '-SPEC:Neg/fin', 'TUA/inf', 'adjoinable', '-COMP:C/fin', '!SPEC:*', 'INF', 'COMP:v', '-SPEC:T/fin'}
VA/inf          {'PHI:PER:_', 'SPEC:*', 'ARG', '-COMP:FORCE', 'LANG:EN', 'PHI:NUM:_', '!COMP:*', 'PHI:GEN:_', '-SPEC:V', 'PHI:DET:_', 'LF:VA', 'COMP:V', '-COMP:T/fin', 'PF:vAn', 'VAL', '-SPEC:N', '-COMP:C/fin', '!SPEC:*', 'VA/inf', 'INF', 'COMP:v', '-SPEC:T/fin'}
MA/ssa          {'PHI:PER:_', 'MA/inf', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', 'TAIL:V', 'PF:massa', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:V', 'ADV', '-VAL', '-SPEC:N', '-SPEC:Neg/fin', 'adjoinable', '-SPEC:*', 'COMP:v', '-SPEC:T/fin', 'LF:in_doing'}
MA/tta          {'PHI:PER:_', '-VAL', 'TAIL:T', '-SPEC:N', '-SPEC:T/fin', '-SPEC:Neg/fin', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', 'PHI:GEN:_', 'adjoinable', 'LF:without_doing', 'PHI:DET:_', 'MA/inf', 'PF:matta', 'ADV'}
MA/lla          {'PHI:PER:_', 'TAIL:T', 'PHI:GEN:_', 'LANG:EN', '-SPEC:FORCE', '-SPEC:Neg/fin', 'LF:by_doing', 'adjoinable', 'PF:malla', 'MA/inf', 'ARG', 'PHI:NUM:_', 'PHI:DET:_', 'COMP:V', 'ADV', '-VAL', '-SPEC:N', 'COMP:v', '-SPEC:T/fin'}
MA/inf          {'PHI:PER:_', 'PHI:GEN:_', 'LANG:EN', '-SPEC:FORCE', 'TAIL:V', '-SPEC:Neg/fin', 'LF:to_do', 'PF:maan', 'adjoinable', 'MA/inf', 'ARG', 'PHI:NUM:_', 'PHI:DET:_', 'COMP:V', 'ADV', '-VAL', '-SPEC:N', 'COMP:v', '-SPEC:T/fin'}
E/inf           {'-VAL', '-SPEC:N', '-SPEC:Neg/fin', 'SPEC:*', '-SPEC:FORCE', '-ARG', 'LF:by', 'adjoinable', 'LANG:FI', 'PF:en', '-SPEC:T/fin', 'ADV'}
BE-             {'SPEC:TO/inf', 'LF:BE', 'LANG:EN', '-ARG', '!COMP:*', 'COMP:T/prt', '-SPEC:FORCE', '-COMP:V', 'COMP:P', 'ASP', '-COMP:T/fin', 'PF:BE', '-VAL', '-COMP:v', '-COMP:N', 'COPULA', 'V', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'SPEC:ADV'}
D               {'COMP:N', '-SPEC:MA/lla', '-COMP:D', '-COMP:uR', 'LANG:EN', '-ARG', '!COMP:*', '-SPEC:D', 'OP', '-SPEC:V', '-SPEC:C', 'LF:D', '-COMP:T/fin', '!PROBE:N', 'PF:D', '-SPEC:N', '-SPEC:Neg/fin', 'adjoinable', '-SPEC:P', 'D', '-SPEC:T/fin', '-SPEC:INF'}
P               {'-COMP:uWH', 'PHI:PER:_', 'P', 'PF:P', '-SPEC:ADV', '-COMP:ADV', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', '!COMP:*', 'PHI:GEN:_', '-float', '-SPEC:V', '-SPEC:C', 'PHI:DET:_', 'LF:P', '-COMP:T/fin', '-SPEC:C/fin', '-VAL', '-SPEC:iR', '-SPEC:N', '-SPEC:Neg/fin', '-COMP:N', '-SPEC:v', 'COMP:D', 'adjoinable', '-SPEC:iWH', '-SPEC:P', '-SPEC:*', '-SPEC:T/fin', '-SPEC:INF'}
pro             ['LANG:EN']
pro-            {'-SPEC:INF', '-SPEC:uWH', '-COMP:D', '-SPEC:ADV', '-COMP:ADV', 'COMP:R', 'LANG:EN', '-SPEC:FORCE', '-SPEC:R', '-COMP:V', '-SPEC:V', '-COMP:A', 'COMP:P', 'PHI', '-COMP:AUX', '-COMP:T/fin', 'PF:(pro)', '-SPEC:C/fin', '-SPEC:N', 'LF:pro', '-COMP:v', '-COMP:N', '-COMP:C/fin', '-SPEC:P', '-COMP:WH', 'SPEC:A', 'COMP:uR', '-SPEC:T/fin', 'N', 'COMP:R/D'}
cl              {'LANG:EN', 'RIGHT:PRG', 'RIGHT:ARE/inf', 'CL', 'LEFT:T/fin', 'inflectional', 'LEFT:D,CL'}
inc             {'INCORPORATED', 'LANG:EN', 'inflectional'}
sg              {'LANG:EN', 'PHI:NUM:SG', 'inflectional'}
pl              {'LANG:EN', 'PHI:NUM:PL', 'inflectional'}
1p              {'LANG:EN', 'PHI:PER:1', 'inflectional'}
2p              {'LANG:EN', 'inflectional', 'PHI:PER:2'}
3p              {'LANG:EN', 'inflectional', 'PHI:PER:3'}
def             {'PHI:DET:DEF', 'LANG:EN', 'inflectional'}
indef           {'LANG:EN', 'inflectional', 'PHI:DET:INDEF'}
hum             {'PHI:HUM:HUM', 'LANG:EN', 'inflectional'}
nonhum          {'LANG:EN', 'inflectional', 'PHI:HUM:NONHUM'}
m               {'LANG:EN', 'PHI:GEN:M', 'inflectional'}
f               {'PHI:GEN:F', 'LANG:EN', 'inflectional'}
nom             {'LANG:EN', 'inflectional', 'NOM', 'TAIL:FIN,!COMP:*,VAL'}
acc             {'TAIL:v', 'LANG:EN', 'inflectional', 'ACC'}
dat             {'TAIL:v', 'LANG:EN', 'inflectional', 'DAT'}
uC/op           {'LANG:EN', 'uC/op', 'inflectional'}
wh              {'LANG:EN', 'OP:_', 'inflectional', 'OP:WH'}
wh_             {'FORCE:OP:WH', 'LANG:EN', 'OP:_', 'OP', 'inflectional'}
top             {'LANG:EN', 'inflectional', 'OP:TOP'}
foc             {'LANG:EN', 'inflectional', 'OP:FOC'}
C/op            {'LANG:EN', 'inflectional', 'OP:C/OP'}
rel             {'inflectional', 'OP:REL', 'adjoinable', 'LANG:EN', '-COMP:C/fin'}
Q               {'OP', 'inflectional', 'OP:WH', 'LANG:EN', 'OP:Q'}
