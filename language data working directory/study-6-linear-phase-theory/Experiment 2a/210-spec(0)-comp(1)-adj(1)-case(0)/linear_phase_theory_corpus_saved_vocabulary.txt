ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'-SPEC:ADV', 'LF:to', '-SPEC:*', 'COMP:ARE/inf', '-COMP:A', 'LANG:IT', '-COMP:T/fin', '-VAL', '-SPEC:iWH', '-SPEC:INF', 'P', '-COMP:ADV', '-SPEC:V', 'COMP:D', '-SPEC:T/fin', '-COMP:T', '-SPEC:iR', '-SPEC:P', '-SPEC:C', '-ARG', '-SPEC:v', 'PF:a', '-COMP:N', '-SPEC:N', '-COMP:uWH', 'TAIL:V', '-SPEC:C/fin', '!COMP:*', '-SPEC:FORCE', 'adjoinable', '-SPEC:Neg/fin'}
a_D             {'LANG:EN', '!PROBE:N', '-SPEC:MA/lla', '-COMP:P', '-COMP:T/fin', '-SPEC:INF', '-COMP:D', '-COMP:uR', 'LF:D', '-SPEC:V', '-SPEC:T/fin', '-SPEC:P', 'PF:D', '-SPEC:C', '-ARG', 'COMP:N', 'OP', 'D', '!COMP:*', 'adjoinable', '-SPEC:Neg/fin'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'COMP:P', 'SPEC:P', 'PHI:GEN:_', 'LANG:EN', 'SPEC:TO/inf', '-VAL', '-COMP:P', 'ASP', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:D', 'ARG', '-SPEC:T/fin', 'LF:admire', '-COMP:Neg', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'CLASS:TR', 'V', 'PF:admire', '!COMP:*', '-SPEC:FORCE', '-SPEC:Neg', 'SPEC:ADV'}
admire*         ['LANG:EN']
T/fin*          {'LF:T', "PF:T/fin'", 'LANG:EN', '-VAL', '!SPEC:*', 'CAT:T/fin', 'NO_DET', 'NO_NUMBER'}
v*              {'PF:v', 'NO_DET', 'LANG:EN', 'LF:v', 'CAT:v', '-VAL', 'NO_NUMBER'}
admire**        ['LANG:EN']
T/fin**         {'LF:T', 'PHI:PER:3', 'LANG:EN', '-VAL', '!SPEC:*', 'CAT:T/fin', 'NO_DET', "PF:T/fin''", 'NO_PERSON', 'NO_NUMBER'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'PF:adora', 'COMP:P', 'SPEC:P', 'PHI:GEN:_', 'SPEC:TO/inf', 'LANG:IT', '-VAL', 'ASP', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:D', 'ARG', '-SPEC:T/fin', 'LF:admire', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'V', '-SPEC:FORCE', 'SPEC:ADV'}
antaa           ['LANG:FI']
anta-           {'COMP:P', 'SPEC:D', 'SPEC:P', '-COMP:FIN', 'SPEC:TO/inf', '-VAL', '+SEM:directional', 'ASP', '-COMP:V', 'CLASS:DITR', 'ASP:BOUNDED', '-SPEC:FORCE', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', 'LANG:FI', '-COMP:N', '-COMP:v', 'V', '!COMP:*', 'LF:give', 'PF:antaa', 'SPEC:ADV'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'COMP:P', 'SPEC:D', 'SPEC:P', 'PHI:GEN:_', 'LANG:EN', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', 'LF:ask', 'COMP:D', 'ARG', 'PF:ask', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'V', '-SPEC:FORCE', 'SEM:internal', 'SPEC:ADV'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-SEM:directional', '-SPEC:ADV', 'COMP:P', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'PF:avain', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', 'LANG:FI', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'LF:key', 'N'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-SEM:directional', '-SPEC:ADV', 'COMP:P', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', 'PF:auto', '-COMP:VA/inf', 'LANG:FI', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N', 'LF:car'}
bank            {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'LANG:EN', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'PF:bank1', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N', 'FREQ:1', 'LF:bank_inst'}
bank            {'-SPEC:ADV', 'COMP:P', 'LF:bank_river', 'PF:bank2', '-COMP:WH', 'LANG:EN', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', 'FREQ:2', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N'}
barn            {'-SPEC:ADV', 'COMP:P', 'LF:barn', '-COMP:WH', 'LANG:EN', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', 'PF:barn', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N'}
city            {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'LANG:EN', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'LF:city', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'PF:city', 'N'}
che             ['LANG:IT']
che-            {'COMP:P', '-COMP:WH', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'LF:who', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', 'PF:che', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:ADV', 'COMP:C', '-COMP:A', 'COMP:R/D', 'LANG:IT', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE'}
chiamato        ['LANG:IT']
chiamata-       {'COMP:P', 'SPEC:P', 'PHI:GEN:_', 'SPEC:TO/inf', 'LANG:IT', '-VAL', 'ASP', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', 'PF:chiamato', '-COMP:v', 'V', '-SPEC:FORCE', 'LF:called', 'SPEC:ADV'}
claims          ['LANG:EN']
claim-          {'COMP:P', 'SPEC:D', 'SPEC:P', 'PHI:GEN:_', 'LANG:EN', 'LF:claim', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:D', 'ARG', '-SPEC:T/fin', 'PF:claim', 'PHI:DET:_', '-COMP:N', 'COMP:T/fin', '-COMP:v', 'V', '-SPEC:FORCE', 'SPEC:ADV'}
danno           {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', 'LF:damage', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N', 'PF:danno'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'COMP:P', 'SPEC:P', 'PHI:GEN:_', 'COMP:ARE/inf', 'SPEC:TO/inf', 'PF:detest', 'LANG:IT', '-VAL', 'ASP', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'V', 'LF:detest', '-SPEC:FORCE', 'SEM:internal', 'SPEC:ADV'}
devono          ['LANG:EN']
deva-           {'COMP:P', 'SPEC:D', '-ASP', 'SPEC:P', 'PF:deva', 'PHI:GEN:_', 'COMP:ARE/inf', 'SPEC:TO/inf', 'LANG:IT', '-VAL', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', 'LF:must', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'V', '-SPEC:FORCE', 'SEM:internal', 'SPEC:ADV'}
di              {'-SPEC:ADV', '-COMP:A', '-COMP:T/fin', '-VAL', '-SPEC:iWH', '-SPEC:INF', 'P', 'LF:of', 'SPEC:*', '-SPEC:Neg/fin', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:ADV', '-SPEC:V', 'COMP:D', 'ARG', '-adjoinable', '-SPEC:T/fin', '-COMP:T', '-SPEC:iR', '-SPEC:P', '-SPEC:C', '-SPEC:v', 'PHI:DET:_', 'LANG:FI', '-COMP:N', '-SPEC:N', '-COMP:uWH', '-SPEC:C/fin', '!COMP:*', '-SPEC:FORCE', 'PF:di'}
does            {'SPEC:D', 'PHI:GEN:_', 'SPEC:TO/inf', '!SPEC:*', 'COMP:T/prt', 'T/fin', 'SPEC:*', 'PHI:PER:_', 'PHI:NUM:_', '-SPEC:T/fin', 'PHI:PER:3', 'PHI:DET:_', '-SPEC:N', 'PHI:GEN:F', 'FIN', '-SPEC:C/fin', '-SPEC:TO/inf', '!COMP:*', '-COMP:INF', 'SPEC:FORCE', 'LANG:EN', 'PHI:GEN:M', 'LF:does', '-COMP:T/fin', 'PF:does', 'T', '!PROBE:V', 'COMP:V', '-SPEC:V', 'ARG', 'COMP:Neg', '-SPEC:C', 'COMP:v', 'VAL', '-SPEC:v', 'PHI:NUM:SG', '-SPEC:Neg'}
does_C          ['LANG:EN']
does-           {'SPEC:D', 'PHI:GEN:_', 'SPEC:TO/inf', '!SPEC:*', 'COMP:T/prt', 'T/fin', 'SPEC:*', 'PHI:PER:_', 'PHI:NUM:_', '-SPEC:T/fin', 'PHI:PER:3', 'PHI:DET:_', '-SPEC:N', 'PHI:GEN:F', 'FIN', '-SPEC:C/fin', '-SPEC:TO/inf', '!COMP:*', '-COMP:INF', 'SPEC:FORCE', 'LANG:EN', 'PHI:GEN:M', 'LF:does', '-COMP:T/fin', 'PF:does', 'T', '!PROBE:V', 'COMP:V', '-SPEC:V', 'ARG', 'COMP:Neg', '-SPEC:C', 'COMP:v', 'VAL', '-SPEC:v', 'PHI:NUM:SG', '-SPEC:Neg'}
dorme           ['LANG:IT']
dorme-          {'COMP:P', 'SPEC:D', 'SPEC:P', 'PHI:GEN:_', 'LANG:EN', '-COMP:MA/inf', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:V', 'CLASS:INTR', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', 'LF:sleep', 'PF:dorme', '!SPEC:D', 'V', '-COMP:v', '-SPEC:FORCE', 'SPEC:ADV'}
disappeared     ['LANG:EN']
disappear-      {'COMP:P', 'SPEC:D', 'SPEC:P', 'PHI:GEN:_', 'LANG:EN', '-COMP:MA/inf', 'SPEC:TO/inf', '-VAL', 'LF:disappear', 'ASP', '-COMP:V', 'CLASS:INTR', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'V', 'SPEC:ADV', '-SPEC:FORCE', 'PF:disappear'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'0', 'LF:easy', 'SPEC:D', 'LANG:EN', 'PF:easy', '2SPEC'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'POL:NEG', '-SPEC:T', 'Neg/fin', '!SPEC:*', 'PF:ei', 'COMP:T/prt', '%SPEC:INF', 'SPEC:*', 'PHI:PER:_', 'PHI:NUM:_', 'ARG', '-SPEC:T/fin', 'VAL', 'PHI:DET:_', 'LF:neg', 'LANG:FI', '!COMP:T', 'FIN', 'NEG', '!COMP:*', 'SEM:internal'}
e-              {'POL:NEG', '-SPEC:T', 'Neg/fin', '!SPEC:*', 'PF:ei', 'COMP:T/prt', '%SPEC:INF', 'SPEC:*', 'PHI:PER:_', 'PHI:NUM:_', 'ARG', '-SPEC:T/fin', 'VAL', 'PHI:DET:_', 'LF:neg', 'LANG:FI', '!COMP:T', 'FIN', 'NEG', '!COMP:*', 'SEM:internal'}
elaa            ['LANG:FI']
ela-            {'COMP:P', 'SPEC:D', 'SPEC:P', '-COMP:MA/inf', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:V', 'CLASS:INTR', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:D', 'ARG', '-SPEC:T/fin', 'LF:live', 'PF:elaa', 'PHI:DET:_', 'LANG:FI', '-COMP:N', '-COMP:v', 'V', '-SPEC:FORCE', 'SPEC:ADV'}
etsii           ['LANG:FI']
etsi-           {'PF:etsi', 'COMP:P', 'SPEC:P', 'SPEC:TO/inf', 'LF:search', '-VAL', '-COMP:P', 'ASP', '-COMP:V', '!COMP:D', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', 'LANG:FI', '-COMP:N', '-COMP:v', 'CLASS:TR', 'V', '!COMP:*', '-SPEC:FORCE', 'SPEC:ADV'}
etta            {'-SPEC:*', '-ARG', '!PROBE:FIN', 'PF:etta', 'LANG:FI', '-SPEC:D', '-VAL', 'COMP:C/fin', 'COMP:T/fin', 'FIN', '!COMP:*', 'LF:that', 'FORCE'}
fell            ['LANG:EN']
fell-           {'COMP:P', 'SPEC:D', 'SPEC:P', 'PHI:GEN:_', 'LANG:EN', '-COMP:MA/inf', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:V', 'CLASS:INTR', 'PHI:PER:_', 'PHI:NUM:_', 'LF:fell', '-COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', 'PF:fell', '-COMP:v', 'V', '-SPEC:FORCE', 'SPEC:ADV'}
flow'           {'COMP:P', 'SPEC:D', 'SPEC:P', 'PHI:GEN:_', 'LANG:EN', 'SPEC:TO/inf', '-VAL', 'PF:flow', 'ASP', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'V', '-SPEC:FORCE', 'LF:flow', 'SPEC:ADV'}
from            {'-SPEC:ADV', 'PHI:GEN:_', '-SPEC:*', 'LANG:EN', '-COMP:A', '-COMP:T/fin', '-VAL', '-float', '-SPEC:iWH', '-SPEC:INF', 'P', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:ADV', 'LF:from', '-SPEC:V', 'COMP:D', 'ARG', '-SPEC:T/fin', '-COMP:T', '-SPEC:iR', '-SPEC:P', '-SPEC:C', '-SPEC:v', 'PHI:DET:_', '-COMP:N', '-SPEC:N', '-COMP:uWH', 'TAIL:V,+SEM:directional', 'PF:from', '-SPEC:C/fin', '!COMP:*', '-SPEC:FORCE', 'adjoinable', '-SPEC:Neg/fin'}
gave            ['LANG:EN']
give-           {'COMP:P', 'SPEC:D', 'SPEC:P', 'PHI:GEN:_', 'LANG:EN', '-COMP:FIN', 'SPEC:TO/inf', '-VAL', '+SEM:directional', 'ASP', '-COMP:V', 'CLASS:DITR', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:D', 'PF:give', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'V', '!COMP:*', 'LF:give', '-SPEC:FORCE', 'SPEC:ADV'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SEM:directional', '-SPEC:ADV', 'COMP:P', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', '-COMP:N', '-SPEC:N', 'LF:Giuseppe', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N', 'PF:Giuseppe'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'COMP:P', 'SPEC:P', '-SPEC:*', 'SPEC:TO/inf', '-VAL', '-COMP:P', 'ASP', '-COMP:V', '-SPEC:FORCE', 'ASP:BOUNDED', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:A/inf', 'COMP:D', 'ARG', '-SPEC:T/fin', 'LF:want', 'PHI:DET:_', 'LANG:FI', '-COMP:N', '-COMP:v', 'CLASS:TR', 'V', '!COMP:*', 'PF:haluaa', 'SEM:internal', 'SPEC:ADV'}
hairitsee       ['LANG:FI']
hairitse-       {'COMP:P', 'SPEC:D', 'SPEC:P', '-COMP:FIN', 'SPEC:TO/inf', '-VAL', '-COMP:P', 'ASP', '-COMP:V', '!COMP:D', 'PHI:PER:_', 'PHI:NUM:_', 'LF:disturb', 'COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', 'LANG:FI', '-COMP:N', 'PF:hairitsee', '-COMP:v', 'CLASS:TR', 'V', '!COMP:*', '-SPEC:FORCE', 'SPEC:ADV'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'COMP:P', 'SPEC:D', 'PF:ha', '-ASP', 'SPEC:P', 'PHI:GEN:_', 'SPEC:TO/inf', 'LANG:IT', 'LF:have', '-VAL', '-COMP:V', 'SPEC:*', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:T', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'V', '-SPEC:FORCE', 'SEM:internal', 'SPEC:ADV'}
horse           {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'LF:horse', 'LANG:EN', 'COMP:C', '-SPEC:R', '-COMP:A', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'PF:horse', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'COMP:P', 'SPEC:D', 'SPEC:P', '-COMP:MA/inf', 'SPEC:TO/inf', '-VAL', 'LF:disappear', 'PF:havia', 'ASP', '-COMP:V', 'CLASS:INTR', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', 'LANG:FI', '-COMP:N', '-COMP:v', 'V', '-SPEC:FORCE', 'SPEC:ADV'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'PF:ihaile-', 'COMP:P', 'SPEC:P', '-COMP:FIN', 'SPEC:TO/inf', '-VAL', '-COMP:P', 'ASP', '-COMP:V', '!COMP:D', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:D', 'ARG', '-SPEC:T/fin', 'LF:admire', 'PHI:DET:_', 'LANG:FI', '-COMP:N', '-COMP:v', 'CLASS:TR', 'V', '!COMP:*', '-SPEC:FORCE', 'SPEC:ADV'}
il              {'LF:the', '!PROBE:N', '-SPEC:MA/lla', 'LANG:IT', '-COMP:P', '-COMP:T/fin', '-SPEC:INF', '-COMP:D', '-COMP:uR', '-SPEC:V', '-SPEC:T/fin', '-SPEC:P', '-SPEC:C', '-ARG', 'COMP:N', 'OP', 'PF:il', 'D', '!COMP:*', 'adjoinable', '-SPEC:Neg/fin'}
i               {'LF:the', '!PROBE:N', '-SPEC:MA/lla', 'LANG:IT', '-COMP:P', '-COMP:T/fin', '-SPEC:INF', '-COMP:D', '-COMP:uR', '-SPEC:V', '-SPEC:T/fin', '-SPEC:P', '-SPEC:C', '-ARG', 'COMP:N', 'OP', 'PF:il', 'D', '!COMP:*', 'adjoinable', '-SPEC:Neg/fin'}
in              {'-SPEC:ADV', 'PHI:GEN:_', '-COMP:A', 'LANG:IT', 'PF:in', '-COMP:T/fin', '-SPEC:iWH', '-VAL', '-SPEC:INF', 'P', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:ADV', '-SPEC:V', 'COMP:D', 'ARG', '-SPEC:T/fin', '-COMP:T', '-SPEC:iR', '-SPEC:P', '-SPEC:C', '-SPEC:v', 'PHI:DET:_', '-COMP:N', '-SPEC:N', '-COMP:uWH', 'LF:in', '-SPEC:C/fin', '!COMP:*', '-SPEC:FORCE', 'adjoinable', '-SPEC:Neg/fin'}
infermieri      {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'LANG:IT', 'COMP:R/D', 'LF:nurses', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'PF:infermieri', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N'}
is              ['LANG:EN']
be-             {'COMP:P', 'SPEC:D', 'SPEC:P', 'LANG:EN', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:V', 'LF:be', '-SPEC:T/fin', '-ARG', '-COMP:N', '-COMP:TO/inf', 'PF:be', '-COMP:v', 'V', '!COMP:*', '-SPEC:FORCE', 'COPULA', 'SPEC:ADV'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'COMP:P', 'SPEC:D', 'SPEC:P', '-COMP:MA/inf', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:V', 'CLASS:INTR', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:D', 'PF:istuu', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', 'LANG:FI', '-COMP:N', 'LF:sit', '-COMP:v', 'V', '-SPEC:FORCE', 'SPEC:ADV'}
John            ['LANG:EN']
John-           {'COMP:P', '-COMP:WH', 'LF:John', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', '-adjoinable', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', 'PF:John', '-SPEC:C/fin', 'SPEC:A', 'N', '-SEM:directional', '-SPEC:ADV', 'LANG:EN', 'COMP:C', '-COMP:A', 'COMP:R/D', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'COMP:P', '-COMP:WH', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'LF:who', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:ADV', 'COMP:C', '-COMP:A', 'COMP:R/D', '-COMP:V', '-SPEC:INF', 'PF:joka', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-SPEC:V', 'COMP:R', '-SPEC:P', 'LANG:FI', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-SEM:directional', '-SPEC:ADV', 'COMP:P', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', 'PF:Jukka', '-SPEC:V', 'LF:Jukka', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', 'LANG:FI', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'COMP:P', 'SPEC:P', 'SPEC:TO/inf', '-VAL', 'PF:juokse-', 'ASP', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', 'ARG', '-SPEC:T/fin', 'LF:run', 'PHI:DET:_', 'LANG:FI', '-COMP:N', '-COMP:v', 'V', '-SPEC:FORCE', 'SPEC:ADV'}
kaksi           {'ARG', 'PHI:DET:_', 'PF:kaksi', '-VAL', 'LANG:FI', 'COMP:N', 'LF:two', 'SPEC:*', 'PHI:NUM:SG', 'TAIL:ARG,VAL,FIN', 'PHI:PER:_', 'PHI:NUM:_', 'NUM', 'COMP:n'}
kaksi           {'TAIL:ARG,ASP:BOUNDED', 'LANG:EN', 'PF:kaksi', 'COMP:N', 'LF:two', 'NUM', 'SPEC:*', 'TAIL:*POL:NEG', 'COMP:n'}
kaksi_1         {'ARG', 'PHI:DET:_', 'PF:kaksi', '-VAL', 'LANG:FI', 'COMP:N', 'LF:two', 'SPEC:*', 'PHI:NUM:SG', 'TAIL:ARG,VAL,FIN', 'PHI:PER:_', 'PHI:NUM:_', 'NUM', 'COMP:n'}
kaksi_2         {'TAIL:ARG,ASP:BOUNDED', 'LANG:EN', 'PF:kaksi', 'COMP:N', 'LF:two', 'NUM', 'SPEC:*', 'TAIL:*POL:NEG', 'COMP:n'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'LF:two', 'NUM', 'LANG:FI', 'SPEC:*', 'COMP:N', 'PF:kaksi', 'COMP:n'}
kaupunkia       ['LANG:EN']
kaupunki        {'-SPEC:ADV', 'PF:kaupunki', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', '-COMP:P', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'LF:city', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', 'LANG:FI', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'COMP:P', 'SPEC:P', 'SPEC:TO/inf', 'LF:order', '-VAL', 'ASP', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', '!COMP:A/inf', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', 'SEM:external', 'LANG:FI', '-COMP:N', '-COMP:v', 'V', 'PF:kaske', '-SPEC:FORCE', 'SPEC:ADV'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', 'LANG:FI', '-COMP:N', 'N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'LF:watch', 'PF:kello'}
kello0-         {'LANG:FI', '0', 'SPEC:D', '2SPEC', 'LF:watch', 'PF:kello'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'LANG:EN', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', 'PF:key', '-SPEC:P', '-COMP:VA/inf', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'LF:key', 'N'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-SEM:directional', '-SPEC:ADV', 'COMP:P', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'PF:kirja', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', 'LANG:FI', '-COMP:N', '-SPEC:N', 'LF:book', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N'}
knows           ['LANG:EN']
know-           {'PF:know', 'LF:know', 'COMP:P', 'SPEC:P', 'PHI:GEN:_', 'LANG:EN', 'SPEC:TO/inf', '-VAL', '-COMP:P', 'ASP', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'CLASS:TR', 'V', '!COMP:*', '-SPEC:FORCE', 'SPEC:ADV'}
kohti           {'-SPEC:ADV', 'PF:kohti', '-COMP:A', '-COMP:T/fin', '-VAL', '-SPEC:iWH', 'LF:towards', '-SPEC:INF', 'P', 'SPEC:*', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:ADV', '-SPEC:V', 'COMP:D', 'ARG', '-SPEC:T/fin', '-COMP:T', '-SPEC:iR', '-SPEC:P', '-SPEC:C', '-SPEC:v', 'PHI:DET:_', 'LANG:FI', '-COMP:N', '-SPEC:N', '-COMP:uWH', 'TAIL:V', '-SPEC:C/fin', '!COMP:*', '-SPEC:FORCE', 'adjoinable', '-SPEC:Neg/fin'}
koko            {'!PROBE:N', 'PF:koko', '-SPEC:MA/lla', '-COMP:P', '-COMP:T/fin', '-SPEC:INF', 'TAIL:T', '-COMP:D', '-COMP:uR', '-SPEC:V', '-SPEC:T/fin', '-SPEC:P', '-SPEC:C', '-ARG', 'LANG:FI', 'COMP:N', 'LF:all', 'OP', 'D', '!COMP:*', 'adjoinable', '-SPEC:Neg/fin'}
kuka            ['LANG:FI']
kuka-           {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', 'PF:kuka', '-SPEC:V', 'LF:who', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', 'LANG:FI', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N', 'PHI'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'COMP:P', 'SPEC:P', '-COMP:WH', 'SPEC:TO/inf', '-COMP:T/fin', 'PF:kuorsaa', '-VAL', 'ASP', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', 'LANG:FI', 'LF:snore', '-COMP:N', '-COMP:v', 'V', '-SPEC:FORCE', 'SPEC:ADV'}
lahella         {'!SPEC:*', '-SPEC:iWH', 'INF', 'P', 'SPEC:*', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:ADV', 'LF:near', '-COMP:FORCE', '-SPEC:T/fin', '-COMP:T', 'PHI:DET:_', '-SPEC:N', '-COMP:uWH', '!SPEC:D', '-SPEC:C/fin', '!COMP:*', 'adjoinable', '-SPEC:ADV', '-COMP:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:V', '-SPEC:V', 'COMP:D', 'ARG', '-SPEC:iR', '-SPEC:P', '-SPEC:C', 'PF:lahella', 'VAL', 'COMP:v', '-SPEC:v', 'LANG:FI', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE', '-SPEC:Neg/fin'}
lahella         {'-SPEC:ADV', '-COMP:A', '-COMP:T/fin', '-VAL', '-SPEC:iWH', '!COMP:D', '-SPEC:INF', 'P', 'SPEC:*', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:ADV', 'LF:near', '-SPEC:V', 'COMP:D', 'ARG', '-SPEC:T/fin', '-COMP:T', '-SPEC:iR', '-SPEC:P', 'PF:lahella', '-SPEC:C', '-SPEC:v', 'PHI:DET:_', 'LANG:FI', '-COMP:N', '-SPEC:N', '-COMP:uWH', '-SPEC:C/fin', '!COMP:*', '-SPEC:FORCE', 'adjoinable', '-SPEC:Neg/fin'}
lahella_1       {'-SPEC:ADV', '-COMP:A', '-COMP:T/fin', '-VAL', '-SPEC:iWH', '!COMP:D', '-SPEC:INF', 'P', 'SPEC:*', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:ADV', 'LF:near', '-SPEC:V', 'COMP:D', 'ARG', '-SPEC:T/fin', '-COMP:T', '-SPEC:iR', '-SPEC:P', 'PF:lahella', '-SPEC:C', '-SPEC:v', 'PHI:DET:_', 'LANG:FI', '-COMP:N', '-SPEC:N', '-COMP:uWH', '-SPEC:C/fin', '!COMP:*', '-SPEC:FORCE', 'adjoinable', '-SPEC:Neg/fin'}
lahella_2       {'!SPEC:*', '-SPEC:iWH', 'INF', 'P', 'SPEC:*', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:ADV', 'LF:near', '-COMP:FORCE', '-SPEC:T/fin', '-COMP:T', 'PHI:DET:_', '-SPEC:N', '-COMP:uWH', '!SPEC:D', '-SPEC:C/fin', '!COMP:*', 'adjoinable', '-SPEC:ADV', '-COMP:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:V', '-SPEC:V', 'COMP:D', 'ARG', '-SPEC:iR', '-SPEC:P', '-SPEC:C', 'PF:lahella', 'VAL', 'COMP:v', '-SPEC:v', 'LANG:FI', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE', '-SPEC:Neg/fin'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'COMP:P', 'SPEC:D', 'SPEC:P', '-COMP:MA/inf', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:V', 'CLASS:INTR', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', 'LANG:FI', '-COMP:N', '-COMP:v', 'V', 'COMP:PP', 'PF:lahtea', 'SPEC:ADV', '-SPEC:FORCE', 'LF:leave'}
lavano          ['LANG:IT']
lava-           {'COMP:P', 'SPEC:P', 'PHI:GEN:_', 'SPEC:TO/inf', 'LANG:IT', '-VAL', 'ASP', '-COMP:V', 'PHI:PER:_', 'PF:lava', 'PHI:NUM:_', 'COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'V', 'LF:wash', '!COMP:*', '-SPEC:FORCE', 'SPEC:ADV'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'!PROBE:N', '-SPEC:MA/lla', 'LANG:IT', '-COMP:P', '-COMP:T/fin', '-SPEC:INF', 'PF:le', '-COMP:D', '-COMP:uR', 'LF:D', '-SPEC:V', '-SPEC:T/fin', '-SPEC:P', '-SPEC:C', '-ARG', 'COMP:N', 'OP', 'D', '!COMP:*', 'adjoinable', '-SPEC:Neg/fin'}
leaves          ['LANG:EN']
leave           {'COMP:P', 'SPEC:P', 'PHI:GEN:_', 'LF:leave', 'LANG:EN', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', 'PF:leave', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', '!SPEC:D', '-COMP:v', 'V', '-SPEC:FORCE', 'SPEC:ADV'}
leave-          {'COMP:P', 'SPEC:P', 'PHI:GEN:_', 'LF:leave', 'LANG:EN', 'SPEC:TO/inf', '-COMP:T/fin', '-VAL', 'ASP', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', 'PF:leave', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', '!SPEC:D', '-COMP:v', 'V', '-SPEC:FORCE', 'SPEC:ADV'}
like-           {'COMP:P', 'SPEC:P', 'PHI:GEN:_', 'LANG:EN', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:V', '!COMP:D', 'PHI:PER:_', 'PHI:NUM:_', 'ARG', '-SPEC:T/fin', 'LF:like', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'PF:like', 'V', '-SPEC:FORCE', 'SPEC:ADV'}
likes           ['LANG:EN']
like            {'COMP:P', 'SPEC:P', 'PHI:GEN:_', 'LANG:EN', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:V', '!COMP:D', 'PHI:PER:_', 'PHI:NUM:_', 'ARG', '-SPEC:T/fin', 'LF:like', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'PF:like', 'V', '-SPEC:FORCE', 'SPEC:ADV'}
little          ['LANG:EN']
little-         {'0', 'SPEC:D', 'LF:little', 'LANG:EN', 'PF:little-', '2SPEC'}
lle             {'-SPEC:ADV', '-SPEC:*', '-COMP:A', '-COMP:T/fin', '-VAL', '+SEM:directional', '-SPEC:iWH', '-SPEC:INF', 'P', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:ADV', '-SPEC:V', 'COMP:D', 'ARG', '-SPEC:T/fin', '-COMP:T', '-SPEC:iR', '-SPEC:P', '-SPEC:C', 'LF:for', '-SPEC:v', 'PF:P(lle)', 'LANG:FI', '-COMP:N', 'PHI:DET:_', '-SPEC:N', '-COMP:uWH', 'TAIL:V,+SEM:directional', '-SPEC:C/fin', '!COMP:*', '-SPEC:FORCE', 'adjoinable', '-SPEC:Neg/fin'}
lla             {'-SPEC:ADV', 'PF:P(lla)', '-COMP:A', '-COMP:T/fin', '-VAL', '-SPEC:iWH', '-SPEC:INF', 'P', 'SPEC:*', 'PHI:PER:_', 'TAIL:T', '-COMP:ADV', 'PHI:NUM:_', '-SPEC:V', 'COMP:D', 'ARG', '-SPEC:T/fin', '-COMP:T', '-SPEC:iR', '-SPEC:P', '-SPEC:C', 'LF:by', '-SPEC:v', 'PHI:DET:_', 'LANG:FI', '-COMP:N', '-SPEC:N', '-COMP:uWH', 'TAIL:*V', '-SPEC:C/fin', '!COMP:*', '-SPEC:FORCE', 'adjoinable', '-SPEC:Neg/fin'}
Luisa           ['LANG:IT']
Luisa-          {'-SEM:directional', '-SPEC:ADV', 'PF:Luisa', 'COMP:P', 'LF:Luisa', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'COMP:P', 'SPEC:P', 'SPEC:TO/inf', '-VAL', '-COMP:P', 'ASP', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', 'LANG:FI', '-COMP:N', 'PF:luke', 'LF:read', '-COMP:v', 'CLASS:TR', 'V', '!COMP:*', '-SPEC:FORCE', 'SPEC:ADV'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'COMP:P', 'SPEC:P', 'SPEC:TO/inf', '-VAL', '-COMP:P', 'ASP', '-COMP:V', 'LF:find', '!COMP:D', 'ASP:BOUNDED', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:D', 'ARG', '-SPEC:T/fin', 'PF:loyta-', 'PHI:DET:_', 'LANG:FI', '-COMP:N', '-COMP:v', 'CLASS:TR', 'V', '!COMP:*', '-SPEC:FORCE', 'SPEC:ADV'}
Mary            ['LANG:EN']
Mary-           {'COMP:P', '-COMP:WH', '-SPEC:R', 'PF:Mary', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', '-adjoinable', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SEM:directional', 'LF:Mary', '-SPEC:ADV', 'LANG:EN', 'COMP:C', '-COMP:A', 'COMP:R/D', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'COMP:P', '-COMP:WH', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', '-adjoinable', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SEM:directional', '-SPEC:ADV', 'COMP:C', 'PF:Merja', '-COMP:A', 'COMP:R/D', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', 'LF:Merja', '-SPEC:V', 'COMP:R', '-SPEC:P', 'LANG:FI', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'-SPEC:T/fin', 'COMP:v', 'LF:by', 'MA/inf', 'LANG:FI', '-SPEC:N', '-SPEC:FORCE', 'SPEC:*', 'ADV', 'TAIL:T', 'PF:malla', 'adjoinable', '-SPEC:Neg/fin'}
meren           ['LANG:FI']
mere-           {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', 'PF:meri', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', 'LF:ocean', 'LANG:FI', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N'}
mies            {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', 'PF:mies', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', 'LF:man', '-COMP:VA/inf', 'LANG:FI', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N'}
mistake         {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'LANG:EN', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', 'LF:mistake', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', 'PF:mistake', '-COMP:VA/inf', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', 'LF:what', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'PF:mika-', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', 'LANG:FI', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'LF:move', 'COMP:P', 'SPEC:P', 'PHI:GEN:_', 'SPEC:TO/inf', '-VAL', '-COMP:P', '+SEM:directional', 'ASP', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:D', 'ARG', '-SPEC:T/fin', 'LANGN:EN', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'CLASS:TR', 'V', '!COMP:*', '-SPEC:FORCE', 'PF:move', 'SPEC:ADV'}
mukavasti       ['LANG:EN']
mukava-         {'PF:mukavasti', '0', 'SPEC:D', '2SPEC', 'LANG:FI', 'LF:comfortably'}
must            {'SPEC:D', 'PHI:GEN:_', 'LANG:EN', 'SPEC:TO/inf', '-COMP:T/fin', 'MODAL', '!SPEC:*', 'COMP:T/prt', 'T/fin', 'SPEC:FORCE', 'PHI:PER:_', 'SPEC:*', 'T', '!PROBE:V', 'PHI:NUM:_', 'LF:must', 'COMP:V', '-SPEC:V', 'ARG', 'COMP:Neg', '-SPEC:T/fin', '-SPEC:C', 'COMP:v', 'VAL', '-SPEC:v', 'PHI:DET:_', '-SPEC:N', 'PF:must', 'FIN', '-SPEC:C/fin', '-SPEC:TO/inf', '!COMP:*', '-COMP:INF', '-SPEC:Neg'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'COMP:P', 'SPEC:P', 'LF:sell', 'SPEC:TO/inf', '-VAL', '-COMP:P', 'ASP', '-COMP:V', 'ASP:BOUNDED', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:D', 'ARG', '-SPEC:T/fin', 'PF:myy', 'PHI:DET:_', 'LANG:FI', '-COMP:N', '-COMP:v', 'CLASS:TR', 'V', '!COMP:*', '-SPEC:FORCE', 'SPEC:ADV'}
naki            ['LANG:FI']
nake-           {'COMP:P', 'SPEC:P', 'PF:nake', 'SPEC:TO/inf', '-VAL', '-COMP:P', 'ASP', '-COMP:V', 'ASP:BOUNDED', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:ESSA/inf', 'COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:MA/tta', '-COMP:MA/ssa', 'LANG:FI', '-COMP:N', '-COMP:v', 'CLASS:TR', 'V', '!COMP:*', '-SPEC:FORCE', 'LF:see', 'SPEC:ADV'}
nayttaa         ['LANG:FI']
naytta-         {'COMP:P', 'SPEC:P', 'SPEC:TO/inf', 'ASP', '-COMP:V', '!COMP:VA/inf', 'LF:seem', '-SPEC:T/fin', 'VAL', '-ARG', 'LANG:FI', '-COMP:N', '!SPEC:D', 'PF:naytta', 'V', '-COMP:v', '-SPEC:FORCE', 'SEM:internal', 'SPEC:ADV'}
ndo             {'-SPEC:T/fin', 'COMP:v', 'VAL', 'LANG:EN', 'LF:ing', '-COMP:T/fin', 'INF', '-COMP:C/fin', '?ARG', 'PRG', '!COMP:*', 'PF:PRG', 'COMP:V', '-COMP:FORCE', '-SPEC:V'}
ne              {'!PROBE:N', '-SPEC:MA/lla', '-COMP:P', '-COMP:T/fin', '-SPEC:INF', 'LF:those', '-COMP:D', '-COMP:uR', '-SPEC:V', 'PF:ne', 'PHI:NUM:PL', 'PHI:PER:3', '-SPEC:T/fin', '-SPEC:P', '-SPEC:C', '-ARG', 'LANG:FI', 'COMP:N', 'OP', 'D', '!COMP:*', 'adjoinable', '-SPEC:Neg/fin'}
niiden          ['LANG:EN']
nen             {'TAIL:D', '-SPEC:A', 'A', 'LF:ing', 'PF:a', 'LANG:FI', 'COMP:0', '-SPEC:D', 'SPEC:*'}
not             {'ARG', 'POL:NEG', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:NUM:_', 'LANG:EN', '-COMP:FIN', 'PHI:DET:_', '-VAL', '-COMP:C', 'PF:not', 'LF:not', 'Neg', 'SPEC:*', 'PHI:PER:_', '!COMP:*', '-COMP:D'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'COMP:P', 'SPEC:D', 'SPEC:P', '-COMP:MA/inf', 'PF:nukku', 'SPEC:TO/inf', '-COMP:T/fin', '-VAL', 'ASP', '-COMP:V', 'CLASS:INTR', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:D', 'ARG', '-SPEC:T/fin', '-COMP:T', 'PHI:DET:_', '-COMP:Neg/fin', 'LANG:FI', '-COMP:N', 'LF:sleep', '-COMP:v', 'V', '-SPEC:FORCE', 'SPEC:ADV'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', 'LF:possessions', 'LANG:FI', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'PF:omaisuuden', 'SPEC:A', 'N'}
operatoria      ['LANG:IT']
operatoria-     {'PF:operatoria', '0', 'SPEC:D', '2SPEC', 'LANG:IT', 'LF:operation'}
ostaa           ['LANG:FI']
osta-           {'COMP:P', 'SPEC:P', 'SPEC:TO/inf', '-VAL', '-COMP:P', 'ASP', '-COMP:V', 'ASP:BOUNDED', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', 'LANG:FI', '-COMP:N', '-COMP:v', 'CLASS:TR', 'V', 'LF:buy', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', 'PF:osta'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'LF:day', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', 'PF:paiva', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', 'SEM:nonreferential', '-COMP:VA/inf', 'LANG:FI', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N'}
past            {'-SPEC:ADV', 'PHI:GEN:_', '-SPEC:*', 'LANG:EN', '-COMP:A', '-COMP:T/fin', '-VAL', '-float', '-SPEC:iWH', '-SPEC:INF', 'P', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:ADV', '-SPEC:V', 'COMP:D', 'ARG', '-SPEC:T/fin', '-COMP:T', '-SPEC:iR', '-SPEC:P', '-SPEC:C', '-SPEC:v', 'PHI:DET:_', 'PF:past', '-COMP:N', '-SPEC:N', '-COMP:uWH', '-SPEC:C/fin', '!COMP:*', 'LF:past', '-SPEC:FORCE', 'adjoinable', '-SPEC:Neg/fin'}
Pariisia        ['LANG:FI']
Pariisi-        {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', 'LF:Paris', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', 'LANG:FI', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', 'PF:Pariisi', '-SPEC:C/fin', 'SPEC:A', 'N'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-SEM:directional', '-SPEC:ADV', 'COMP:P', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', 'LF:Pekka', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', 'LANG:FI', '-COMP:N', 'PF:Pekka', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'COMP:P', 'SPEC:P', 'SPEC:TO/inf', '-VAL', '-COMP:P', 'ASP', '-COMP:V', 'PHI:PER:_', 'PF:pelkaa', 'PHI:NUM:_', 'COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', 'LANG:FI', '-COMP:N', '-COMP:v', 'CLASS:TR', 'V', '!COMP:*', '-SPEC:FORCE', 'LF:fear', 'SPEC:ADV'}
persuades       ['LANG:EN']
persuade-       {'COMP:P', 'SPEC:P', 'PHI:GEN:_', 'LANG:EN', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:V', 'LF:persuade', 'PHI:PER:_', 'PHI:NUM:_', 'ARG', 'COMP:TO/inf', '-SPEC:T/fin', 'PF:persuade', 'PHI:DET:_', 'SEM:external', '-COMP:N', '-COMP:v', 'V', '!COMP:*', '-SPEC:FORCE', 'SPEC:ADV'}
peruuntui       ['LANG:FI']
peruuntu-       {'COMP:P', 'SPEC:D', 'SPEC:P', 'SPEC:TO/inf', '-VAL', 'PF:peruuntui', 'ASP', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', 'ARG', '-SPEC:T/fin', 'LF:cancelled', 'PHI:DET:_', 'LANG:FI', '-COMP:N', '-COMP:v', 'V', '-SPEC:FORCE', 'SPEC:ADV'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'COMP:P', 'SPEC:P', 'SPEC:TO/inf', '-VAL', '-COMP:P', 'ASP', '-COMP:V', 'ASP:BOUNDED', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', 'LANG:FI', '-COMP:N', '-COMP:v', 'CLASS:TR', 'V', 'PF:pese_asp', 'LF:wash', '!COMP:*', '-SPEC:FORCE', 'SPEC:ADV'}
pese-           {'COMP:P', 'SPEC:P', 'PF:pese', 'SPEC:TO/inf', '-VAL', '-COMP:P', 'ASP', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', 'LANG:FI', '-COMP:N', '-COMP:v', 'CLASS:TR', 'V', 'LF:wash', '!COMP:*', '-SPEC:FORCE', 'SPEC:ADV'}
petardi         {'-SPEC:ADV', 'COMP:P', 'LF:firecrackers', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'PF:petardi', 'SPEC:A', 'N'}
pieni           ['LANG:FI']
pieni-          {'PF:pieni-', '0', 'SPEC:D', 'LF:small', 'LANG:FI', '2SPEC'}
poikien         ['LANG:FI']
poika-          {'PF:poika', 'LF:boy', 'COMP:P', '-SPEC:ADV', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', 'LANG:FI', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N'}
puhelinta       ['LANG:FI']
puhelin-        {'LANG:FI', '0', 'SPEC:D', 'LF:phone', 'PF:puhelin', '2SPEC'}
punainen        ['LANG:FI']
puna-           {'0', 'SPEC:D', '2SPEC', 'LANG:FI', 'PF:puna-', 'LF:red'}
presupposto     {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', 'LF:presupposition', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'PF:presupposto', 'SPEC:A', 'N'}
primary         {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'LF:nurse', 'SPEC:A', 'N', 'PF:primary'}
promises        ['LANG:EN']
promise-        {'COMP:P', 'SPEC:D', 'PF:promise', 'SPEC:P', 'PHI:GEN:_', 'LANG:EN', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:D', 'ARG', '-SPEC:T/fin', 'LF:promise', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'V', '-SPEC:FORCE', 'SEM:internal', 'SPEC:ADV'}
problem         {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'LANG:EN', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', 'LF:problem', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', 'PF:problem', '-COMP:VA/inf', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N'}
pyytaa          ['LANG:FI']
pyyta-          {'COMP:P', 'SPEC:P', 'PF:pyyda', 'SPEC:TO/inf', '-VAL', '-COMP:P', 'ASP', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', 'LF:ask', 'COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', 'SEM:external', 'LANG:FI', '-COMP:N', '-COMP:v', 'CLASS:TR', 'V', '!COMP:*', '-SPEC:FORCE', 'SPEC:ADV'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'COMP:P', 'SPEC:D', 'SPEC:P', 'PHI:GEN:_', 'LANG:EN', '-COMP:MA/inf', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:V', 'CLASS:INTR', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:D', 'ARG', '-SPEC:T/fin', 'PF:race', 'LAMG:EN', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'V', 'LF:race', '-SPEC:FORCE', 'SPEC:ADV'}
raukesi         ['LANG:FI']
raukea-         {'COMP:P', 'SPEC:P', 'SPEC:TO/inf', '-VAL', 'PF:raukea', 'ASP', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', 'LF:terminate', 'LANG:FI', '-COMP:N', '-COMP:v', 'V', '-SPEC:FORCE', 'SPEC:ADV'}
red             ['LANG:EN']
red-            {'0', 'PF:red', 'SPEC:D', '2SPEC', 'LANG:EN', 'LF:red'}
saavuttaa       ['LANG:FI']
saavutta-       {'COMP:P', 'SPEC:P', 'SPEC:TO/inf', '-VAL', '-COMP:P', 'ASP', '-COMP:V', '!COMP:D', 'ASP:BOUNDED', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', 'LANG:FI', '-COMP:N', 'LF:reach', '-COMP:v', 'CLASS:TR', 'V', '!COMP:*', '-SPEC:FORCE', 'PF:saavutta-', 'SPEC:ADV'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'COMP:P', 'SPEC:D', 'COMP:FORCE', 'SPEC:P', 'COMP:VA/inf', 'SPEC:TO/inf', '-VAL', '-COMP:P', 'ASP', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', 'PF:sano-', 'LANG:FI', '-COMP:N', 'LF:say', '-COMP:v', 'CLASS:TR', 'V', '!COMP:*', '-SPEC:FORCE', 'SPEC:ADV'}
said            ['LANG:EN']
say'            {'COMP:P', 'SPEC:D', 'SPEC:P', 'PHI:GEN:_', 'LANG:EN', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:V', 'PHI:PER:_', 'PF:say', 'PHI:NUM:_', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', 'LF:say', '-COMP:v', 'V', '!COMP:FORCE', '-SPEC:FORCE', 'SPEC:ADV'}
say-            {'COMP:P', 'SPEC:D', 'SPEC:P', 'PHI:GEN:_', 'LANG:EN', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:V', 'PHI:PER:_', 'PF:say', 'PHI:NUM:_', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', 'LF:say', '-COMP:v', 'V', '!COMP:FORCE', '-SPEC:FORCE', 'SPEC:ADV'}
sala            ['LANG:IT']
sala-           {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'PF:sala', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', '-COMP:N', 'N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'LF:room'}
scoppiati       ['LANG:IT']
scoppia-        {'COMP:P', 'SPEC:P', 'PHI:GEN:_', 'PF:scoppia', 'SPEC:TO/inf', 'LANG:IT', '-VAL', 'ASP', '-COMP:V', 'PHI:PER:_', 'LF:explode', 'PHI:NUM:_', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'V', '-SPEC:FORCE', 'SPEC:ADV'}
sentenza        {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', 'PF:sentenza', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', 'LF:sentence', '-SPEC:P', '-COMP:VA/inf', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N'}
Seine           ['LANG:EN']
Seine-          {'-SPEC:ADV', 'COMP:P', 'PF:Seine', '-COMP:WH', 'LANG:EN', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'LF:Seine', 'N'}
sembrano        ['LANG:IT']
sembra-         {'COMP:P', '-ASP', 'SPEC:P', 'SPEC:D', 'LANG:EN', '!COMP:ARE/inf', 'SPEC:TO/inf', '-VAL', '-COMP:V', 'LF:seem', 'PF:sembra', '-COMP:D', '-SPEC:T/fin', '-ARG', '-COMP:N', '-COMP:v', 'V', '-SPEC:FORCE', 'SPEC:ADV'}
sleeps          ['LANG:EN']
sleep           {'COMP:P', 'SPEC:D', 'SPEC:P', 'PHI:GEN:_', 'LANG:EN', '-COMP:MA/inf', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:V', 'CLASS:INTR', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', 'LF:sleep', 'PF:sleep', '-COMP:v', 'V', '-SPEC:FORCE', 'SPEC:ADV'}
sleep-          {'COMP:P', 'SPEC:D', 'SPEC:P', 'PHI:GEN:_', 'LANG:EN', '-COMP:MA/inf', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:V', 'CLASS:INTR', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', 'LF:sleep', 'PF:sleep', '-COMP:v', 'V', '-SPEC:FORCE', 'SPEC:ADV'}
solution        {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'LANG:EN', 'COMP:C', 'LF:solution', '-SPEC:R', '-COMP:A', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', 'PF:solution', '-COMP:VA/inf', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '!COMP:A/inf', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', 'LF:agreement', '-COMP:VA/inf', 'LANG:FI', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N', 'PF:sopimus'}
spinge          ['LANG:IT']
spinge-         {'SPEC:P', 'PHI:GEN:_', 'SPEC:TO/inf', '-COMP:P', 'LANG:IT', '-VAL', 'ASP', '-COMP:V', '!COMP:D', 'PHI:PER:_', 'PHI:NUM:_', 'ARG', '-SPEC:T/fin', 'LF:push', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'PF:spinge', 'V', '-SPEC:FORCE', 'SPEC:ADV'}
ssa             {'-SPEC:ADV', '-COMP:A', '-COMP:T/fin', '-VAL', '-SPEC:iWH', '-SPEC:INF', 'P', 'SPEC:*', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:ADV', '-SPEC:V', 'COMP:D', 'ARG', '-SPEC:T/fin', '-COMP:T', '-SPEC:iR', '-SPEC:P', '-SPEC:C', 'COMP:n/MA', '-SPEC:v', 'PHI:DET:_', 'LANG:FI', 'PF:ssa', '-COMP:N', '-SPEC:N', '-COMP:uWH', 'TAIL:V', 'LF:in', '-SPEC:C/fin', '!COMP:*', '-SPEC:FORCE', 'adjoinable', '-SPEC:Neg/fin'}
stanno          ['LANG:IT']
sta-            {'LF:stay', 'COMP:P', '-ASP', 'SPEC:D', 'COMP:PRG', 'SPEC:P', 'LANG:EN', 'PHI:GEN:_', 'SPEC:TO/inf', '-VAL', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', 'ARG', 'PF:sta', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'V', '-SPEC:FORCE', 'SEM:internal', 'SPEC:ADV'}
sti             {'-SPEC:T/fin', 'PF:sti', 'LF:by', '-ARG', 'LANG:FI', '-SPEC:N', 'SPEC:*', 'ADV', '!COMP:*', 'TAIL:T', '-SPEC:FORCE', 'adjoinable', '-SPEC:Neg/fin'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', 'LF:socks', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', 'PF:sukka-', 'LANG:FI', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N'}
surprised       ['LANG:EN']
surprise-       {'COMP:P', 'SPEC:P', 'PHI:GEN:_', 'LANG:EN', 'SPEC:TO/inf', '-COMP:T/fin', '-VAL', 'ASP', '-COMP:V', '-COMP:P', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:D', 'ARG', '-SPEC:T/fin', 'LF:surprise', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'CLASS:TR', 'V', '!COMP:*', 'PF:surprise', '-SPEC:FORCE', 'SPEC:ADV'}
talo            {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', 'PF:talo', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', 'LF:house', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', 'LANG:FI', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N'}
tama            ['LANG:EN']
tama-           {'PF:tama', 'COMP:P', '-SPEC:ADV', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', 'LF:this', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', 'LANG:FI', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N', 'PHI'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'COMP:P', '-ASP', 'SPEC:P', 'SPEC:TO/inf', '-VAL', 'MODAL', '-COMP:V', 'SPEC:*', 'PHI:PER:_', 'PHI:NUM:_', '!COMP:A/inf', 'LF:must', 'ARG', 'PF:taytyy', '-SPEC:T/fin', 'PHI:DET:_', 'LANG:FI', '-COMP:N', '-COMP:v', 'FIN', 'V', '-SPEC:FORCE', 'SPEC:ADV'}
teki            ['LANG:FI']
teke-           {'COMP:P', 'SPEC:P', '-COMP:A/inf', 'PF:teke', 'SPEC:TO/inf', '-VAL', '-COMP:P', 'ASP', '-COMP:V', '!COMP:D', '-SPEC:FORCE', 'ASP:BOUNDED', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', 'LANG:FI', '-COMP:N', '-COMP:v', 'CLASS:TR', 'V', '!COMP:*', 'LF:make', 'SPEC:ADV'}
that            {'-SPEC:*', 'LANG:EN', '-ARG', 'PF:that', '!PROBE:FIN', '-VAL', 'COMP:C/fin', 'COMP:T/fin', 'FIN', '!COMP:*', 'LF:that', 'FORCE'}
the             {'LF:the', 'LANG:EN', '!PROBE:N', '-SPEC:MA/lla', '-COMP:P', '-COMP:T/fin', 'adjoinable', '-SPEC:INF', '-COMP:D', '-COMP:uR', '-SPEC:V', '-SPEC:T/fin', '-SPEC:P', '-SPEC:C', '-ARG', 'COMP:N', 'OP', 'D', '!COMP:*', 'PF:the', 'PHI:DEF:DEF', '-SPEC:Neg/fin'}
to              {'PHI:GEN:_', 'LF:to', '+SEM:directional', '-SPEC:iWH', 'P', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:ADV', '-SPEC:T/fin', '-COMP:T', 'PHI:DET:_', '-SPEC:N', '-COMP:uWH', 'TAIL:V', '-SPEC:C/fin', '!COMP:*', 'adjoinable', '-SPEC:ADV', '-SPEC:*', 'LANG:EN', '-COMP:A', '-COMP:T/fin', '-VAL', '-float', '-SPEC:INF', '-SPEC:V', 'COMP:D', 'ARG', '-SPEC:iR', '-SPEC:P', '-SPEC:C', '-SPEC:v', '-COMP:N', 'PF:to', '-SPEC:FORCE', '-SPEC:Neg/fin'}
to_inf          {'LF:TO/inf', 'TO/inf', 'LANG:EN', '-VAL', '-COMP:T/fin', 'INF', 'COMP:V', '-COMP:FORCE', '-SPEC:V', '-SPEC:T/fin', 'COMP:v', '-SPEC:v', '-COMP:C/fin', '?ARG', '!COMP:*', 'PF:TO/inf', 'adjoinable'}
towards         {'-SPEC:ADV', 'PHI:GEN:_', '-SPEC:*', 'LANG:EN', '-COMP:A', '-COMP:T/fin', '-VAL', '-float', '-SPEC:iWH', 'LF:towards', '-SPEC:INF', 'P', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:ADV', '-SPEC:V', 'COMP:D', 'ARG', '-SPEC:T/fin', '-COMP:T', '-SPEC:iR', '-SPEC:P', '-SPEC:C', '-SPEC:v', 'PHI:DET:_', '-COMP:N', '-SPEC:N', '-COMP:uWH', 'TAIL:V', '-SPEC:C/fin', '!COMP:*', 'PF:towards', '-SPEC:FORCE', 'adjoinable', '-SPEC:Neg/fin'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'COMP:P', 'SPEC:P', 'SPEC:TO/inf', '-VAL', '-COMP:P', 'ASP', '-COMP:V', 'PHI:PER:_', 'LF:nudge', 'PHI:NUM:_', 'COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', 'LANG:FI', '-COMP:N', 'PF:tonaise', '-COMP:v', 'CLASS:TR', 'V', '!COMP:*', '-SPEC:FORCE', 'SPEC:ADV'}
tta             {'-SPEC:ADV', '-COMP:A', '-COMP:T/fin', '-VAL', '-SPEC:iWH', '-SPEC:INF', 'P', 'SPEC:*', '-SPEC:Neg/fin', 'ADV', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:ADV', '-SPEC:V', 'COMP:D', 'ARG', 'LF:without', '-SPEC:T/fin', '-COMP:T', '-SPEC:iR', '-SPEC:P', '-SPEC:C', 'COMP:n/MA', '-SPEC:v', 'PHI:DET:_', 'LANG:FI', '-COMP:N', '-SPEC:N', '-COMP:uWH', '-SPEC:C/fin', '!COMP:*', '-SPEC:FORCE', 'adjoinable', 'PF:tta'}
tries           ['LANG:EN']
try-            {'COMP:P', 'SPEC:D', 'SPEC:P', 'PHI:GEN:_', 'LANG:EN', 'SPEC:TO/inf', 'LF:try', '-VAL', 'ASP', '-COMP:V', 'PHI:PER:_', 'PF:try', 'PHI:NUM:_', 'ARG', '!COMP:TO/inf', '-SPEC:T/fin', '!COMP:-ARG', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'V', '-SPEC:FORCE', 'SEM:internal', 'SPEC:ADV'}
verifiche       {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'COMP:C', '-COMP:A', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', '-COMP:N', 'LF:verification', '-SPEC:N', 'PF:verifiche', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'COMP:P', 'SPEC:D', 'SPEC:P', '-COMP:MA/inf', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:V', 'PF:virtaa', 'CLASS:INTR', 'PHI:PER:_', '!COMP:P', 'PHI:NUM:_', '-COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', 'LANG:FI', '-COMP:N', '-COMP:v', 'V', '-SPEC:FORCE', 'LF:flow', 'SPEC:ADV'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'PF:volu', 'COMP:P', 'SPEC:P', '-SPEC:*', 'PHI:GEN:_', 'LANG:EN', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', 'ARG', '-SPEC:T/fin', 'LF:want', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'V', '!COMP:*', '-SPEC:FORCE', 'SEM:internal', 'SPEC:ADV'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'COMP:P', 'SPEC:P', 'PHI:GEN:_', 'PF:voitta', 'LANG:EN', 'SPEC:TO/inf', 'LF:win', '-VAL', 'ASP', '-COMP:V', '-COMP:P', 'ASP:BOUNDED', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'CLASS:TR', 'V', 'SEM:achievement', '!COMP:*', '-SPEC:FORCE', 'SPEC:ADV'}
wants           ['LANG:EN']
want-           {'COMP:P', 'SPEC:P', 'PHI:GEN:_', 'LANG:EN', '-VAL', '-COMP:P', '-COMP:V', 'ASP', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:D', 'ARG', 'COMP:TO/inf', '-SPEC:T/fin', 'PF:want', 'LF:want', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'CLASS:TR', 'V', '-SPEC:TO/inf', '!COMP:*', '-SPEC:FORCE', 'SPEC:ADV'}
what            ['LANG:EN']
what-           {'COMP:P', '-COMP:WH', '-SPEC:R', 'LF:what', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:ADV', 'LANG:EN', 'COMP:C', '-COMP:A', 'PF:what', 'COMP:R/D', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE'}
which           {'LANG:EN', '!PROBE:N', '-SPEC:MA/lla', '-COMP:P', '-COMP:T/fin', '-SPEC:INF', 'PF:which', '-COMP:D', '-COMP:uR', '-SPEC:V', '-SPEC:T/fin', '-SPEC:P', '-SPEC:C', 'OP:WH', '-ARG', 'COMP:N', 'OP', 'D', '!COMP:*', 'LF:which', 'adjoinable', '-SPEC:Neg/fin'}
who             ['LANG:EN']
who-            {'COMP:P', '-COMP:WH', 'PF:who', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'LF:who', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:ADV', 'LANG:EN', 'COMP:C', '-COMP:A', 'COMP:R/D', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE'}
whether         {'-SPEC:*', 'LANG:EN', '!PROBE:FIN', 'LF:whether', '-VAL', 'Q', 'FORCE', 'PF:whether', 'OP:WH', '-ARG', 'COMP:T/fin', 'OP', 'FIN', 'OP:Q', '!COMP:*', 'COMP:C/fin'}
yrittaa         ['LANG:FI']
yritta-         {'COMP:P', 'SPEC:D', 'SPEC:P', 'PHI:GEN:_', 'LANG:EN', 'SPEC:TO/inf', 'LF:try', '-VAL', 'ASP', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', '!COMP:A/inf', 'ARG', '-SPEC:T/fin', '!COMP:-ARG', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'V', 'PF:yritta', '-SPEC:FORCE', 'SEM:internal', 'SPEC:ADV'}
mina            ['LANG:EN']
mina-           {'COMP:P', '-COMP:WH', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:ADV', 'COMP:C', '-COMP:A', 'COMP:R/D', '-COMP:V', 'PF:mina', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-SPEC:V', 'COMP:R', '-SPEC:P', 'LANG:FI', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE', 'LF:I'}
sina            ['LANG:EN']
sina-           {'COMP:P', '-COMP:WH', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:ADV', 'COMP:C', '-COMP:A', 'COMP:R/D', '-COMP:V', '-SPEC:INF', 'PF:sina', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-SPEC:V', 'COMP:R', '-SPEC:P', 'LF:you', 'LANG:FI', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE'}
han             ['LANG:EN']
han-            {'COMP:P', '-COMP:WH', 'LF:s/he', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', 'PF:han', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:ADV', 'COMP:C', '-COMP:A', 'COMP:R/D', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-SPEC:V', 'COMP:R', '-SPEC:P', 'LANG:FI', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'COMP:P', '-COMP:WH', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', 'PF:me', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:ADV', 'COMP:C', '-COMP:A', 'COMP:R/D', '-COMP:V', 'LF:we', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-SPEC:V', 'COMP:R', '-SPEC:P', 'LANG:FI', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE'}
te              ['LANG:EN']
te-             {'COMP:P', '-COMP:WH', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'PF:te', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:ADV', 'COMP:C', '-COMP:A', 'COMP:R/D', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-SPEC:V', 'COMP:R', '-SPEC:P', 'LF:you', 'LANG:FI', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'COMP:P', '-COMP:WH', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'PHI_N', 'PF:he', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:ADV', 'COMP:C', '-COMP:A', 'COMP:R/D', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', 'LF:they', '-SPEC:V', 'COMP:R', '-SPEC:P', 'LANG:FI', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE'}
se              {'!PROBE:N', '-SPEC:MA/lla', '-COMP:P', 'PF:se', '-COMP:T/fin', 'LF:the/that', '-SPEC:INF', '-COMP:D', '-COMP:uR', '-SPEC:V', '-SPEC:T/fin', '-SPEC:P', '-SPEC:C', '-ARG', 'LANG:FI', 'COMP:N', 'OP', 'D', '!COMP:*', 'adjoinable', '-SPEC:Neg/fin'}
sen             {'!PROBE:N', 'PF:sen', '-SPEC:MA/lla', '-COMP:P', '-COMP:T/fin', 'LF:the/that', '-SPEC:INF', '-COMP:D', '-COMP:uR', '-SPEC:V', '-SPEC:T/fin', '-SPEC:P', '-SPEC:C', '-ARG', 'LANG:FI', 'COMP:N', 'OP', 'TAIL:PHI', 'D', '!COMP:*', 'TAIL:*POL:NEG', 'TAIL:ASP', 'adjoinable', '-SPEC:Neg/fin'}
I               ['LANG:EN']
I-              {'COMP:P', '-COMP:WH', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:ADV', 'LANG:EN', 'COMP:C', '-COMP:A', 'COMP:R/D', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:N', '-COMP:C/fin', 'PF:I', '-SPEC:FORCE', 'LF:I'}
you             ['LANG:EN']
you-            {'COMP:P', '-COMP:WH', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:ADV', 'LANG:EN', 'COMP:C', '-COMP:A', 'COMP:R/D', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-SPEC:V', 'COMP:R', '-SPEC:P', 'LF:you', '-COMP:N', 'PF:you', '-COMP:C/fin', '-SPEC:FORCE'}
he              ['LANG:EN']
he-             {'COMP:P', '-COMP:WH', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'PHI_N', 'PF:he', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:ADV', 'LANG:EN', 'COMP:C', '-COMP:A', 'COMP:R/D', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-SPEC:V', 'COMP:R', 'LF:he', '-SPEC:P', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE'}
she             ['LANG:EN']
she-            {'COMP:P', '-COMP:WH', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:ADV', 'LANG:EN', 'COMP:C', '-COMP:A', 'COMP:R/D', 'LF:she', '-COMP:V', '-SPEC:INF', 'PF:she', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE'}
we              ['LANG:EN']
we-             {'COMP:P', '-COMP:WH', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:ADV', 'LANG:EN', 'COMP:C', '-COMP:A', 'COMP:R/D', '-COMP:V', 'LF:we', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-SPEC:V', 'COMP:R', '-SPEC:P', 'PF:we', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE'}
you_pl          ['LANG:EN']
you_pl-         {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'LANG:EN', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', 'PF:you_pl', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', '-COMP:N', '-SPEC:N', 'LF:you_pl', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N', 'PHI'}
they            ['LANG:EN']
they-           {'COMP:P', '-COMP:WH', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', 'PF:they', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:ADV', 'LANG:EN', 'COMP:C', '-COMP:A', 'COMP:R/D', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', 'LF:they', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE'}
it              ['LANG:EN']
it-             {'LANG:EN', '!PROBE:N', '-SPEC:MA/lla', '-COMP:P', '-COMP:T/fin', '-SPEC:INF', 'LF:it/that', '-COMP:D', '-COMP:uR', '-SPEC:V', 'PF:it', '-SPEC:T/fin', '-SPEC:P', '-SPEC:C', '-ARG', 'COMP:N', 'OP', 'D', '!COMP:*', 'adjoinable', '-SPEC:Neg/fin'}
io              ['LANG:EN']
io-             {'COMP:P', '-COMP:WH', '-SPEC:R', 'COMP:T/prt', 'PF:io', 'COMP:D/rel', '-COMP:AUX', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:ADV', 'COMP:C', '-COMP:A', 'COMP:R/D', 'LANG:IT', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE', 'LF:I'}
tu              ['LANG:EN']
tu-             {'COMP:P', '-COMP:WH', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', 'PF:tu', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:ADV', 'COMP:C', '-COMP:A', 'COMP:R/D', 'LANG:IT', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-SPEC:V', 'COMP:R', '-SPEC:P', 'LF:you', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE'}
lui             ['LANG:EN']
lui-            {'COMP:P', '-COMP:WH', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:ADV', 'COMP:C', '-COMP:A', 'COMP:R/D', 'LANG:IT', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-SPEC:V', 'COMP:R', 'LF:he', '-SPEC:P', 'PF:lui', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE'}
lei             ['LANG:EN']
lei-            {'COMP:P', '-COMP:WH', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:ADV', 'COMP:C', '-COMP:A', 'COMP:R/D', 'LANG:IT', 'LF:she', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE', 'PF:lei'}
noi             ['LANG:EN']
noi-            {'COMP:P', '-COMP:WH', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', 'PF:noi', '-SPEC:ADV', 'COMP:C', '-COMP:A', 'COMP:R/D', 'LANG:IT', '-COMP:V', 'LF:we', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE'}
voi             ['LANG:EN']
voi-            {'COMP:P', '-COMP:WH', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', 'LF:you_pl', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:ADV', 'COMP:C', '-COMP:A', 'COMP:R/D', 'LANG:IT', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE', 'PF:voi'}
loro            ['LANG:EN']
loro-           {'COMP:P', '-COMP:WH', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'PF:loro', 'N', '-SPEC:ADV', 'COMP:C', '-COMP:A', 'COMP:R/D', 'LANG:IT', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', 'LF:they', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE'}
mi              ['LANG:EN']
mi-             {'COMP:P', '-COMP:WH', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'PHI_N', '-SPEC:T/fin', 'PF:mi(cl)', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:ADV', 'COMP:C', '-COMP:A', 'COMP:R/D', 'LF:me', 'LANG:IT', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:N', 'CL', '-COMP:C/fin', '-SPEC:FORCE'}
la              ['LANG:EN']
la-             {'COMP:P', '-COMP:WH', 'LF:her', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', 'PF:la(cl)', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:ADV', 'COMP:C', '-COMP:A', 'COMP:R/D', 'LANG:IT', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:N', 'CL', '-COMP:C/fin', '-SPEC:FORCE'}
lo              ['LANG:EN']
lo-             {'COMP:P', '-COMP:WH', '-SPEC:R', 'PF:lo(cl)', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', 'LF:him', '-SPEC:ADV', 'COMP:C', '-COMP:A', 'COMP:R/D', 'LANG:IT', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:N', 'CL', '-COMP:C/fin', '-SPEC:FORCE'}
si              ['LANG:EN']
si-             {'COMP:P', '-COMP:WH', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:ADV', 'CAL:CL', 'COMP:C', '-COMP:A', 'COMP:R/D', 'LANG:IT', 'PF:si(cl)', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:N', '-COMP:C/fin', 'LF:3sg', '-SPEC:FORCE'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'COMP:P', '-COMP:WH', '-SPEC:R', 'COMP:T/prt', 'COMP:D/rel', '-COMP:AUX', 'PHI_N', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:N', '-COMP:v', '-SPEC:C/fin', 'SPEC:A', 'N', 'PF:ci', '-SPEC:ADV', 'COMP:C', '-COMP:A', 'COMP:R/D', 'LANG:IT', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', '-COMP:*', 'LF:there', '-SPEC:V', 'COMP:R', '-SPEC:P', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE'}
[-n]            {'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:1', 'PHI', 'inflectional'}
[-t]            {'PHI:PER:2', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:FI', 'PHI', 'inflectional'}
[-V]            {'PHI:PER:3', 'PHI:NUM:SG', 'LANG:FI', 'PHI', 'inflectional'}
[-mme]          {'PHI:NUM:PL', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:1', 'PHI', 'inflectional'}
[-mme]          {'PHI:NUM:PL', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:1', 'inflectional'}
[-tte]          {'PHI:NUM:PL', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:FI', 'PHI', 'inflectional'}
[-vat]          {'PHI:NUM:PL', 'PHI:PER:3', 'LANG:FI', 'PHI', 'inflectional'}
[-ni]           {'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:1', 'PHI', 'inflectional'}
[-si]           {'PHI:PER:2', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:FI', 'PHI', 'inflectional'}
[-nsa]          {'PHI:PER:3', 'PHI:NUM:SG', 'LANG:FI', 'PHI', 'inflectional'}
[-an]           {'PHI:PER:3', 'PHI:DET:DET', 'PHI:NUM:SG', 'LANG:FI', 'PHI', 'inflectional'}
[-nne]          {'PHI:NUM:PL', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:FI', 'inflectional'}
[-s]            {'PHI:PER:3', 'PHI:GEN:F', 'PHI:NUM:SG', 'LANG:EN', 'PHI:GEN:M', 'PHI', 'inflectional'}
[-0]            {'PHI:NUM:PL', 'PHI:PER:3', 'LANG:EN', 'PHI:GEN:N', 'PHI:PER:2', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:1', 'PHI', 'inflectional'}
[-o]            {'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:PER:1', 'LANG:IT', 'PHI', 'inflectional'}
[-i]            {'PHI:PER:2', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:IT', 'PHI', 'inflectional'}
[-a]            {'PHI:PER:3', 'PHI:NUM:SG', 'PHI:DET:DEF', 'LANG:IT', 'PHI', 'inflectional'}
[-e]            {'PHI:PER:3', 'PHI:NUM:SG', 'PHI:DET:DEF', 'LANG:IT', 'PHI', 'inflectional'}
[-iamo]         {'PHI:NUM:PL', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:PER:1', 'LANG:IT', 'PHI', 'inflectional'}
[-te]           {'PHI:NUM:PL', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:IT', 'PHI', 'inflectional'}
[-no]           {'PHI:NUM:PL', 'PHI:PER:3', 'PHI:DET:DEF', 'LANG:IT', 'PHI', 'inflectional'}
[-nom]          {'NOM', 'LANG:EN', 'adjoinable', 'inflectional', 'TAIL:FIN,ARG,VAL'}
[-par]          {'TAIL:ARG,-VAL', 'LANG:FI', 'adjoinable', 'inflectional', 'PAR'}
[-gen]          {'TAIL:INF,ARG', 'LANG:EN', 'GEN', '-float', 'inflectional'}
gen             {'TAIL:INF,ARG', 'LANG:EN', 'GEN', '-float', 'inflectional'}
[-n_acc]        {'TAIL:ARG,ASP:BOUNDED', 'TAIL:PHI', 'n-ACC', 'inflectional', 'TAIL:*POL:NEG', 'LANG:FI', 'adjoinable'}
[-t_acc]        {'TAIL:ARG,ASP:BOUNDED', 't-ACC', 'inflectional', 'TAIL:*POL:NEG', 'LANG:FI', 'adjoinable'}
[-0_acc]        {'TAIL:ARG,ASP:BOUNDED', 'inflectional', '0_ACC', 'TAIL:*POL:NEG', 'LANG:FI', 'adjoinable', 'TAIL:*PHI'}
asp             {'ASP:BOUNDED', 'LANG:EN', 'inflectional'}
a'              {'LF:A', 'PF:a', 'a', 'LANG:X'}
b'              {'PF:b', 'b', 'LF:B', 'LANG:X'}
b''             {'PF:b', 'b', 'LANG:EN', '-COMP:c', 'LF:B'}
c''             {'SPEC:a', 'LF:C', 'LANG:EN', 'PF:c', 'c'}
c'              {'PF:c', 'LANG:X', 'LF:C', 'c'}
d'              {'PF:d', 'LANG:', 'LF:D', 'd'}
a''             ['LANG:EN']
x'              {'LF:X', 'x', 'PF:x', 'LANG:X'}
y'              {'PF:y', 'LF:Y', 'y', 'LANG:X'}
z'              {'z', 'LANG:X', 'PF:x', 'LF:Z'}
John'           {'PF:John', "N'", 'LF:John', 'LANG:X'}
admires'        {'LANG:X', 'LF:admires', 'PF:admires', "V'"}
admires''       {'COMP:P', 'SPEC:D', 'SPEC:P', 'PHI:GEN:_', 'LANG:EN', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:V', 'PHI:PER:_', 'PHI:NUM:_', 'PF:admires', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'V', '-SPEC:FORCE', 'LF:admires', 'SPEC:ADV'}
Mary'           {"N'", 'LANG:X', 'LF:mary', 'PF:Mary'}
T/fin           {'SPEC:D', 'PF:T', 'PHI:GEN:_', 'LANG:EN', 'SPEC:TO/inf', '-COMP:T/fin', '!SPEC:*', 'COMP:T/prt', 'T/fin', 'SPEC:FORCE', 'PHI:PER:_', 'SPEC:*', 'T', '!PROBE:V', 'PHI:NUM:_', 'COMP:V', '-SPEC:V', 'ARG', 'LF:T', '-SPEC:T/fin', '-SPEC:C', 'COMP:v', 'VAL', '-SPEC:v', 'PHI:DET:_', '-SPEC:N', 'FIN', '-SPEC:C/fin', '-SPEC:TO/inf', '!COMP:*', '-COMP:INF', '-SPEC:Neg'}
v               {'ARG', 'PF:v', 'SPEC:D', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:EN', 'PHI:DET:_', '-VAL', '-SPEC:N', 'ASP', 'v', 'PHI:PER:_', '!COMP:*', 'LF:v', 'COMP:V', '!PROBE:V'}
C/fin           {'LANG:EN', '-COMP:T/prt', '!PROBE:FIN', 'SPEC:*', 'PF:C', 'C/fin', 'LF:C/fin', '-SPEC:T/fin', 'VAL', '-ARG', '-SPEC:N', 'COMP:T/fin', '-COMP:C/fin', 'FIN', '-SPEC:C/fin', '!COMP:*', 'C', 'COMP:Neg/fin'}
T               {'-COMP:NEG', 'SPEC:D', 'PF:T', 'PHI:GEN:_', 'LANG:EN', 'COMP:T/prt', 'SPEC:*', 'PHI:PER:_', 'T', '!PROBE:V', 'PHI:NUM:_', 'COMP:V', '-SPEC:V', 'ARG', 'LF:T', '-SPEC:T/fin', 'COMP:v', 'VAL', 'PHI:DET:_', '-SPEC:N', 'FIN', '!COMP:*', '-SPEC:FORCE'}
T/prt           {'PF:T/prt', '-COMP:NEG', 'SPEC:D', 'PHI:GEN:_', 'LANG:EN', 'COMP:T/prt', '-SPEC:FORCE', 'SPEC:*', 'PHI:PER:_', 'T', '!PROBE:V', 'PHI:NUM:_', 'COMP:V', '-SPEC:V', 'COMP:D', 'ARG', '-SPEC:T/fin', 'COMP:v', 'VAL', 'PHI:DET:_', '-SPEC:N', 'LF:T/prt', 'FIN', '!COMP:*', 'T/prt'}
a0              {'TAIL:D', 'LF:A', 'PF:A', '-adjoinable', '-SPEC:A', 'A', 'LANG:EN', 'COMP:0', '-SPEC:D'}
n               {'COMP:P', 'PHI:GEN:_', '-COMP:WH', '-SPEC:R', '!SPEC:*', 'LF:n', 'COMP:T/prt', 'INF', 'SPEC:*', 'PHI:PER:_', 'COMP:D/rel', '-COMP:AUX', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:VA/inf', 'n', 'COMP:0', 'PHI:DET:_', '-SPEC:N', '-COMP:v', '!SPEC:D', '-SPEC:C/fin', '!COMP:*', 'SPEC:A', 'N', '-SPEC:ADV', 'LANG:EN', 'COMP:C', '-COMP:A', 'COMP:R/D', '-COMP:V', '-SPEC:INF', '-SPEC:uWH', 'COMP:uR', 'COMP:V', '-SPEC:V', 'COMP:R', 'ARG', '-SPEC:P', 'PF:n', 'COMP:v', 'VAL', '-COMP:N', '-COMP:C/fin', '-SPEC:FORCE'}
impass          {'ARG', 'SPEC:D', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:EN', 'PHI:DET:_', 'LF:impass', '-VAL', '-SPEC:N', 'ASP', 'v', 'PHI:PER:_', '!COMP:*', 'COMP:V', 'PF:impass', '!PROBE:V'}
cau             {'ARG', 'PF:Cau', 'SPEC:D', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:EN', 'PHI:DET:_', '-VAL', '-SPEC:N', 'LF:v/Cause', 'ASP', 'v', 'PHI:PER:_', '!COMP:*', 'COMP:V', '!PROBE:V'}
INF             {'-SPEC:T/fin', 'COMP:v', 'LANG:EN', '-COMP:T/fin', 'PF:INF', 'INF', '-COMP:C/fin', '!COMP:*', 'LF:INF', 'COMP:V', '-COMP:FORCE', '-SPEC:V'}
prtcpl          {'PF:T/prt', '-COMP:NEG', 'SPEC:D', 'PHI:GEN:_', 'LANG:EN', '-COMP:T/fin', 'COMP:T/prt', 'INF', '-SPEC:FORCE', 'SPEC:*', 'PHI:PER:_', 'T', '!PROBE:V', 'PHI:NUM:_', 'COMP:V', '-COMP:FORCE', '-SPEC:V', 'COMP:D', 'ARG', '-SPEC:T/fin', 'COMP:v', 'VAL', 'PHI:DET:_', '-SPEC:N', 'LF:T/prt', '-COMP:C/fin', 'FIN', '!COMP:*', 'T/prt'}
TO/inf          {'LF:TO/inf', 'TO/inf', 'LANG:EN', '-COMP:T/fin', '-VAL', 'INF', 'COMP:V', '!COMP:V', '-COMP:FORCE', '-SPEC:V', '-SPEC:T/fin', 'COMP:v', '-SPEC:v', '-COMP:C/fin', '?ARG', '!COMP:*', 'PF:TO/inf', 'adjoinable'}
A/inf           {'LANG:EN', '-COMP:T/fin', 'INF', 'SPEC:*', '?VAL', 'COMP:V', '-COMP:FORCE', '-SPEC:V', 'PF:A/inf', '-SPEC:T/fin', 'COMP:v', 'LF:A/inf', '-COMP:C/fin', '?ARG', 'A/inf', '!COMP:*', '-SPEC:Neg/fin'}
ARE/inf         {'LANG:EN', '-COMP:T/fin', 'PF:are', 'INF', 'ARE/inf', 'SPEC:*', 'COMP:V', '-COMP:FORCE', '-SPEC:V', '-adjoinable', '-SPEC:T/fin', 'COMP:v', 'VAL', '-COMP:C/fin', '?ARG', 'LF:ARE/inf', '!COMP:*'}
ESSA/inf        {'ESSA/inf', 'LF:while', 'LANG:EN', '-COMP:T/fin', 'INF', 'SPEC:*', 'ADV', 'TAIL:T', '?VAL', 'COMP:V', '-COMP:FORCE', 'PF:essa', '-SPEC:V', '-SPEC:T/fin', 'COMP:v', '-SPEC:N', '-COMP:C/fin', '?ARG', '!COMP:*', '-SPEC:FORCE', 'adjoinable', '-SPEC:Neg/fin'}
TUA/inf         {'TUA/inf', 'LF:after', 'PHI:GEN:_', 'LANG:EN', '-COMP:T/fin', '!SPEC:*', 'INF', 'SPEC:*', 'PHI:PER:_', 'ADV', 'TAIL:T', 'PHI:NUM:_', 'COMP:V', '-COMP:FORCE', '-SPEC:V', 'ARG', '-SPEC:T/fin', 'COMP:v', 'VAL', 'PHI:DET:_', '-SPEC:N', 'PF:tua', '-COMP:C/fin', '!COMP:*', '-SPEC:FORCE', 'adjoinable', '-SPEC:Neg/fin'}
VA/inf          {'PHI:GEN:_', 'LANG:EN', '-COMP:T/fin', 'VA/inf', '!SPEC:*', 'INF', 'SPEC:*', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:V', 'PF:vAn', '-COMP:FORCE', '-SPEC:V', 'ARG', '-SPEC:T/fin', 'COMP:v', 'VAL', 'PHI:DET:_', '-SPEC:N', '-COMP:C/fin', '!COMP:*', 'LF:VA'}
MA/ssa          {'PHI:GEN:_', '-SPEC:*', 'PF:massa', 'LANG:EN', 'MA/ssa', 'MA/inf', '-VAL', 'PHI:PER:_', 'ADV', 'PHI:NUM:_', 'LF:in_doing', 'COMP:V', 'ARG', '-SPEC:T/fin', 'COMP:v', 'PHI:DET:_', '-SPEC:N', 'TAIL:V', '-SPEC:FORCE', 'adjoinable', '-SPEC:Neg/fin'}
MA/tta          {'ARG', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:NUM:_', 'LANG:EN', 'PHI:DET:_', 'MA/inf', '-VAL', 'adjoinable', '-SPEC:N', 'LF:without_doing', 'PHI:PER:_', 'ADV', 'TAIL:T', '-SPEC:FORCE', 'PF:matta', '-SPEC:Neg/fin'}
MA/lla          {'PHI:GEN:_', 'MA/inf', 'PHI:PER:_', 'ADV', 'PHI:NUM:_', 'TAIL:T', '-SPEC:T/fin', 'PF:malla', 'PHI:DET:_', '-SPEC:N', 'LF:by_doing', 'adjoinable', 'LANG:EN', '-VAL', 'COMP:V', 'ARG', 'COMP:v', '-SPEC:FORCE', '-SPEC:Neg/fin'}
MA/inf          {'PHI:GEN:_', 'MA/inf', 'PHI:PER:_', 'ADV', 'PHI:NUM:_', 'PF:maan', 'LF:to_do', '-SPEC:T/fin', 'PHI:DET:_', '-SPEC:N', 'TAIL:V', 'adjoinable', 'LANG:EN', '-VAL', 'COMP:V', 'ARG', 'COMP:v', '-SPEC:FORCE', '-SPEC:Neg/fin'}
E/inf           {'-SPEC:T/fin', 'LF:by', '-ARG', 'LANG:FI', '-VAL', '-SPEC:N', 'SPEC:*', 'ADV', 'TAIL:T', 'PF:en', '-SPEC:FORCE', 'adjoinable', '-SPEC:Neg/fin'}
BE-             {'LF:BE', 'COMP:P', 'SPEC:D', 'SPEC:P', 'LANG:EN', 'SPEC:TO/inf', '-COMP:T/fin', '-VAL', 'ASP', '-COMP:V', 'COMP:T/prt', '-SPEC:T/fin', 'PF:BE', '-ARG', '-COMP:N', '-COMP:v', 'V', '!COMP:*', '-SPEC:FORCE', 'COPULA', 'SPEC:ADV'}
D               {'LANG:EN', '!PROBE:N', '-SPEC:MA/lla', '-COMP:P', '-COMP:T/fin', '-SPEC:INF', '-COMP:D', '-COMP:uR', 'LF:D', '-SPEC:V', '-SPEC:T/fin', '-SPEC:P', 'PF:D', '-SPEC:C', '-ARG', 'COMP:N', 'OP', 'D', '!COMP:*', 'adjoinable', '-SPEC:Neg/fin'}
D/rel           {'OP:REL', 'LANG:EN', '!PROBE:N', '-SPEC:MA/lla', '-COMP:T/fin', '-SPEC:INF', '-COMP:D', '-COMP:uR', '-SPEC:V', 'D/rel', 'inflectional', 'LF:D/rel', '-SPEC:T/fin', '-SPEC:P', '-SPEC:C', 'OP:_', '-ARG', 'COMP:N', 'OP', '-COMP:C/fin', 'PF:D/rel', 'D', '!COMP:*', 'adjoinable', '-SPEC:Neg/fin'}
P               {'-SPEC:ADV', 'PHI:GEN:_', '-SPEC:*', 'LANG:EN', '-COMP:A', '-COMP:T/fin', '-VAL', '-float', '-SPEC:iWH', '-SPEC:INF', 'P', 'PHI:PER:_', 'PHI:NUM:_', 'LF:P', '-COMP:ADV', '-SPEC:V', 'COMP:D', 'ARG', '-SPEC:T/fin', '-COMP:T', '-SPEC:iR', '-SPEC:P', '-SPEC:C', '-SPEC:v', 'PHI:DET:_', '-COMP:N', '-SPEC:N', '-COMP:uWH', '-SPEC:C/fin', '!COMP:*', '-SPEC:FORCE', 'PF:P', 'adjoinable', '-SPEC:Neg/fin'}
pro             ['LANG:EN']
pro-            {'-SPEC:ADV', 'COMP:P', '-COMP:WH', 'LANG:EN', 'COMP:C', '-COMP:A', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'LF:pro', 'COMP:T/prt', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:D/rel', '-COMP:AUX', 'COMP:uR', '-SPEC:V', 'COMP:R', '-SPEC:T/fin', '-SPEC:P', '-COMP:VA/inf', '-COMP:N', '-SPEC:N', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', 'N', 'PHI', 'PF:(pro)'}
cl              {'LEFT:D,CL', 'RIGHT:ARE/inf', 'LANG:EN', 'LEFT:T/fin', 'CL', 'inflectional', 'RIGHT:PRG'}
inc             {'LANG:EN', 'inflectional', 'INCORPORATED'}
sg              {'LANG:EN', 'PHI:NUM:SG', 'inflectional'}
pl              {'LANG:EN', 'PHI:NUM:PL', 'inflectional'}
1p              {'LANG:EN', 'PHI:PER:1', 'inflectional'}
2p              {'LANG:EN', 'PHI:PER:2', 'inflectional'}
3p              {'LANG:EN', 'PHI:PER:3', 'inflectional'}
def             {'PHI:DET:DEF', 'LANG:EN', 'inflectional'}
indef           {'LANG:EN', 'PHI:DET:INDEF', 'inflectional'}
hum             {'LANG:EN', 'inflectional', 'PHI:HUM:HUM'}
nonhum          {'LANG:EN', 'PHI:HUM:NONHUM', 'inflectional'}
m               {'LANG:EN', 'PHI:GEN:M', 'inflectional'}
f               {'LANG:EN', 'PHI:GEN:F', 'inflectional'}
nom             {'LANG:EN', 'TAIL:FIN,!COMP:*,VAL', 'NOM', 'inflectional'}
acc             {'LANG:EN', 'TAIL:v', 'inflectional', 'ACC'}
dat             {'LANG:EN', 'TAIL:v', 'inflectional', 'DAT'}
uC/op           {'LANG:EN', 'uC/op', 'inflectional'}
wh              {'OP:WH', 'LANG:EN', 'inflectional', 'OP:_'}
wh_             {'OP', 'FORCE:OP:WH', 'OP:_', 'LANG:EN', 'inflectional'}
top             {'LANG:EN', 'OP:TOP', 'inflectional'}
foc             {'LANG:EN', 'OP:FOC', 'inflectional'}
C/op            {'LANG:EN', 'OP:C/OP', 'inflectional'}
Q               {'OP', 'OP:Q', 'OP:WH', 'LANG:EN', 'inflectional'}
