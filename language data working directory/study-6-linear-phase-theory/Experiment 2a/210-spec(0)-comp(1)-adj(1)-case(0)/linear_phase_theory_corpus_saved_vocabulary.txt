ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'-ARG', '-SPEC:iR', '-SPEC:ADV', 'LF:to', 'adjoinable', '-SPEC:V', '-COMP:T/fin', '-SPEC:FORCE', 'LANG:IT', 'P', 'COMP:ARE/inf', 'PF:a', 'TAIL:V', '-SPEC:INF', '!COMP:*', '-SPEC:N', '-COMP:N', '-SPEC:*', '-SPEC:T/fin', '-VAL', '-SPEC:iWH', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:v', '-COMP:ADV', '-SPEC:C/fin', 'COMP:D', '-COMP:uWH', '-SPEC:P'}
a_D             {'-ARG', '-COMP:uR', 'OP', 'adjoinable', '-SPEC:V', '-COMP:T/fin', 'LANG:EN', 'PF:D', 'LF:D', '!COMP:*', '-SPEC:INF', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:C', 'D', '!PROBE:N', 'COMP:N', '-SPEC:P'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-SPEC:Neg', 'PF:admire', 'PHI:PER:_', 'LF:admire', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', '-COMP:P', 'CLASS:TR', '!COMP:*', 'COMP:P', '-COMP:Neg', 'PHI:GEN:_', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'SPEC:TO/inf', 'ASP', 'COMP:D', '-COMP:v', 'PHI:DET:_'}
admire*         ['LANG:EN']
T/fin*          {'!SPEC:*', 'CAT:T/fin', "PF:T/fin'", 'NO_DET', '-VAL', 'NO_NUMBER', 'LANG:EN', 'LF:T'}
v*              {'LANG:EN', 'LF:v', 'NO_DET', 'PF:v', '-VAL', 'NO_NUMBER', 'CAT:v'}
admire**        ['LANG:EN']
T/fin**         {'NO_PERSON', '!SPEC:*', 'CAT:T/fin', 'PHI:PER:3', 'NO_DET', '-VAL', 'NO_NUMBER', 'LANG:EN', "PF:T/fin''", 'LF:T'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'PHI:PER:_', 'LF:admire', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', 'LANG:IT', 'COMP:P', 'PHI:GEN:_', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'SPEC:TO/inf', 'PF:adora', 'ASP', 'COMP:D', '-COMP:v', 'PHI:DET:_'}
antaa           ['LANG:FI']
anta-           {'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:FIN', 'PF:antaa', '-COMP:T/fin', '-SPEC:FORCE', 'LANG:FI', 'LF:give', '+SEM:directional', 'CLASS:DITR', 'COMP:P', '!COMP:*', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'ASP:BOUNDED', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'SPEC:TO/inf', 'ASP', 'COMP:D', '-COMP:v', 'PHI:DET:_'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', 'COMP:P', 'LF:ask', 'PHI:GEN:_', 'PF:ask', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'SPEC:TO/inf', 'SEM:internal', 'ASP', 'COMP:D', '-COMP:v', 'PHI:DET:_'}
ask-            {'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', 'COMP:P', 'LF:ask', 'PHI:GEN:_', 'PF:ask', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'SPEC:TO/inf', 'SEM:internal', 'ASP', 'COMP:D', '-COMP:v', 'PHI:DET:_'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-SPEC:ADV', 'COMP:uR', 'PF:avain', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', '-SPEC:uWH', 'LANG:FI', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SEM:directional', '-SPEC:C/fin', '-COMP:AUX', 'LF:key', '-COMP:v', 'SPEC:A', '-SPEC:P'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-SPEC:ADV', 'COMP:uR', 'LF:car', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', 'PF:auto', '-SPEC:uWH', 'LANG:FI', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SEM:directional', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
city            {'-SPEC:ADV', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', 'LANG:EN', '-SPEC:FORCE', '-SPEC:uWH', 'LF:city', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', 'PF:city', '-SPEC:P'}
che             ['LANG:IT']
che-            {'-SPEC:ADV', '-COMP:*', 'COMP:uR', 'PF:che', '-SPEC:V', 'N', '-SPEC:R', '-SPEC:FORCE', 'LF:who', 'LANG:IT', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', '-SPEC:P'}
chiamato        ['LANG:IT']
chiamata-       {'PHI:PER:_', 'LF:called', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', 'LANG:IT', 'COMP:P', 'PHI:GEN:_', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'PF:chiamato', 'V', 'SPEC:TO/inf', 'ASP', '-COMP:v', 'PHI:DET:_'}
danno           {'-SPEC:ADV', 'COMP:uR', 'PF:danno', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', 'LANG:IT', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', 'LF:damage', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', 'LANG:IT', 'COMP:ARE/inf', 'COMP:P', 'PHI:GEN:_', 'LF:detest', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'SPEC:TO/inf', 'SEM:internal', 'ASP', 'PF:detest', 'COMP:D', '-COMP:v', 'PHI:DET:_'}
devono          ['LANG:EN']
deva-           {'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', 'LANG:IT', '-ASP', 'COMP:ARE/inf', 'PF:deva', 'COMP:P', 'PHI:GEN:_', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'SPEC:TO/inf', 'SEM:internal', 'LF:must', '-COMP:v', 'PHI:DET:_'}
di              {'-SPEC:iR', '-SPEC:ADV', 'PHI:PER:_', 'LF:of', '-SPEC:V', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:FORCE', 'P', 'SPEC:*', 'LANG:FI', '-SPEC:INF', '!COMP:*', '-SPEC:N', 'ARG', '-COMP:N', 'PHI:DET:_', '-SPEC:T/fin', 'COMP:D', '-VAL', '-SPEC:iWH', '-SPEC:Neg/fin', 'PF:di', '-SPEC:C', '-SPEC:v', '-COMP:ADV', '-SPEC:C/fin', '-adjoinable', '-COMP:uWH', '-SPEC:P'}
does            {'SPEC:D', '-SPEC:Neg', '-SPEC:V', 'VAL', '-SPEC:FORCE', 'SPEC:*', 'PF:does', 'COMP:V', 'PHI:GEN:F', 'ARG', 'PHI:PER:3', 'COMP:Neg', '-SPEC:T/fin', '!SPEC:D', '-SPEC:C', '!PROBE:V', 'SPEC:TO/inf', 'PHI:GEN:M', '-SPEC:C/fin', 'PHI:DET:_', '-COMP:INF', 'PHI:NUM:SG', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', 'LF:does', 'LANG:EN', '!COMP:*', 'COMP:v', 'T/fin', '-SPEC:N', 'PHI:GEN:_', '-SPEC:TO/inf', '-SPEC:v', 'FIN', 'T', 'COMP:T/prt'}
does_C          ['LANG:EN']
does-           {'SPEC:D', '-SPEC:Neg', '-SPEC:V', 'VAL', '-SPEC:FORCE', 'SPEC:*', 'PF:does', 'COMP:V', 'PHI:GEN:F', 'ARG', 'PHI:PER:3', 'COMP:Neg', '-SPEC:T/fin', '!SPEC:D', '-SPEC:C', '!PROBE:V', 'SPEC:TO/inf', 'PHI:GEN:M', '-SPEC:C/fin', 'PHI:DET:_', '-COMP:INF', 'PHI:NUM:SG', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', 'LF:does', 'LANG:EN', '!COMP:*', 'COMP:v', 'T/fin', '-SPEC:N', 'PHI:GEN:_', '-SPEC:TO/inf', '-SPEC:v', 'FIN', 'T', 'COMP:T/prt'}
dorme           ['LANG:IT']
dorme-          {'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', 'PF:dorme', 'COMP:P', 'PHI:GEN:_', 'ARG', '-COMP:N', 'SPEC:P', 'LF:sleep', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', '!SPEC:D', 'V', 'SPEC:TO/inf', 'ASP', '-COMP:v', 'PHI:DET:_'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'-SPEC:T', 'PHI:PER:_', 'PHI:NUM:_', 'POL:NEG', 'VAL', 'LF:neg', '!COMP:*', 'LANG:FI', 'SPEC:*', 'ARG', '!COMP:T', '!SPEC:*', 'NEG', '%SPEC:INF', '-SPEC:T/fin', 'PF:ei', 'Neg/fin', 'FIN', 'SEM:internal', 'PHI:DET:_', 'COMP:T/prt'}
e-              {'-SPEC:T', 'PHI:PER:_', 'PHI:NUM:_', 'POL:NEG', 'VAL', 'LF:neg', '!COMP:*', 'LANG:FI', 'SPEC:*', 'ARG', '!COMP:T', '!SPEC:*', 'NEG', '%SPEC:INF', '-SPEC:T/fin', 'PF:ei', 'Neg/fin', 'FIN', 'SEM:internal', 'PHI:DET:_', 'COMP:T/prt'}
elaa            ['LANG:FI']
ela-            {'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', 'LF:live', '-COMP:T/fin', '-SPEC:FORCE', 'LANG:FI', 'COMP:P', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-COMP:MA/inf', '-VAL', '-COMP:D', 'CLASS:INTR', 'V', 'PF:elaa', 'SPEC:TO/inf', 'ASP', '-COMP:v', 'PHI:DET:_'}
etsii           ['LANG:FI']
etsi-           {'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', 'LANG:FI', 'COMP:P', 'ARG', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'LF:search', 'SPEC:TO/inf', 'PF:etsi', 'ASP', 'COMP:D', '-COMP:v', '!COMP:D'}
etta            {'-ARG', '-SPEC:*', 'LF:that', '-VAL', 'COMP:C/fin', 'FIN', '!COMP:*', 'COMP:T/fin', 'PF:etta', '!PROBE:T/fin', 'FORCE', 'LANG:FI'}
flow'           {'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', 'PF:flow', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'ARG', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'SPEC:TO/inf', 'ASP', '-COMP:v', 'LF:flow'}
from            {'-SPEC:iR', '-SPEC:ADV', 'PHI:PER:_', '-SPEC:C/fin', 'LF:from', '-SPEC:V', 'adjoinable', '-COMP:T/fin', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', 'P', '-SPEC:INF', '!COMP:*', 'TAIL:V,+SEM:directional', '-SPEC:N', 'PHI:GEN:_', 'ARG', '-COMP:N', '-SPEC:*', 'PHI:DET:_', '-SPEC:T/fin', '-VAL', '-SPEC:iWH', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:v', '-float', '-COMP:ADV', 'PF:from', 'COMP:D', '-COMP:uWH', '-SPEC:P'}
gave            ['LANG:EN']
give-           {'PF:give', 'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:FIN', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', 'LF:give', '+SEM:directional', 'COMP:P', 'CLASS:DITR', '!COMP:*', 'PHI:GEN:_', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'SPEC:TO/inf', 'ASP', 'COMP:D', '-COMP:v', 'PHI:DET:_'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SPEC:ADV', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', 'LANG:IT', 'LF:Giuseppe', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', 'PF:Giuseppe', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SEM:directional', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', '-COMP:P', 'CLASS:TR', 'LANG:FI', 'LF:want', 'COMP:P', '!COMP:*', 'ARG', '-COMP:N', 'SPEC:P', '-SPEC:*', 'SPEC:ADV', 'ASP:BOUNDED', '-SPEC:T/fin', '-COMP:V', '-VAL', 'COMP:A/inf', 'V', 'SPEC:TO/inf', 'SEM:internal', 'ASP', 'PF:haluaa', 'COMP:D', '-COMP:v', 'PHI:DET:_'}
hairitsee       ['LANG:FI']
hairitse-       {'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:FIN', '-COMP:T/fin', '-SPEC:FORCE', 'LANG:FI', 'PF:hairitsee', 'COMP:P', 'ARG', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', 'LF:disturb', '-VAL', 'V', 'SPEC:TO/inf', 'ASP', '-COMP:v', '!COMP:D'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', 'PF:ha', '-SPEC:FORCE', 'LANG:IT', '-ASP', 'SPEC:*', 'COMP:P', 'PHI:GEN:_', 'ARG', '-COMP:N', 'SPEC:P', 'LF:have', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'SPEC:TO/inf', 'SEM:internal', 'PHI:DET:_', '-COMP:v', 'COMP:T'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', 'LANG:FI', 'COMP:P', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-COMP:MA/inf', '-VAL', '-COMP:D', 'PF:havia', 'CLASS:INTR', 'V', 'SPEC:TO/inf', 'ASP', 'LF:disappear', '-COMP:v', 'PHI:DET:_'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'PHI:PER:_', 'LF:admire', '-COMP:FIN', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:P', 'CLASS:TR', 'LANG:FI', '!COMP:*', 'COMP:P', 'ARG', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'PF:ihaile-', 'V', 'SPEC:TO/inf', 'ASP', 'COMP:D', '-COMP:v', '!COMP:D'}
il              {'-ARG', '-COMP:uR', 'COMP:N', 'OP', 'adjoinable', '-SPEC:V', '-COMP:T/fin', 'LANG:IT', 'PF:il', '!COMP:*', '-SPEC:INF', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:C', 'D', '!PROBE:N', 'LF:the', '-SPEC:P'}
i               {'-ARG', '-COMP:uR', 'COMP:N', 'OP', 'adjoinable', '-SPEC:V', '-COMP:T/fin', 'LANG:IT', 'PF:il', '!COMP:*', '-SPEC:INF', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:C', 'D', '!PROBE:N', 'LF:the', '-SPEC:P'}
in              {'-SPEC:iR', '-SPEC:ADV', 'PHI:PER:_', 'adjoinable', 'LF:in', '-SPEC:V', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:FORCE', 'LANG:IT', 'P', '-SPEC:INF', '!COMP:*', 'PF:in', '-SPEC:N', 'PHI:GEN:_', 'ARG', '-COMP:N', 'PHI:DET:_', '-SPEC:T/fin', '-VAL', '-SPEC:iWH', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:v', '-COMP:ADV', '-SPEC:C/fin', 'COMP:D', '-COMP:uWH', '-SPEC:P'}
infermieri      {'-SPEC:ADV', 'COMP:uR', 'PF:infermieri', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', 'LANG:IT', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', 'LF:nurses', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
is              ['LANG:EN']
be-             {'-ARG', 'PF:be', 'SPEC:D', '-COMP:T/fin', 'LANG:EN', 'COPULA', '-SPEC:FORCE', '-COMP:TO/inf', '!COMP:*', 'COMP:P', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-COMP:V', '-SPEC:T/fin', '-VAL', 'LF:be', 'V', 'SPEC:TO/inf', 'ASP', '-COMP:v'}
istuuko         ['LANG:FI']
istuu-          {'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', 'LANG:FI', 'COMP:P', 'PF:istuu', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-COMP:MA/inf', '-VAL', '-COMP:D', 'LF:sit', 'CLASS:INTR', 'V', 'SPEC:TO/inf', 'ASP', '-COMP:v', 'PHI:DET:_'}
John            ['LANG:EN']
John-           {'-SPEC:ADV', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', 'LANG:EN', '-SPEC:FORCE', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:v', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'LF:John', 'COMP:R/D', '-SEM:directional', '-SPEC:C/fin', 'PF:John', '-adjoinable', '-COMP:AUX', 'SPEC:A', '-SPEC:P'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'PF:joka', '-SPEC:ADV', '-COMP:*', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', 'LF:who', '-SPEC:uWH', 'LANG:FI', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', '-SPEC:P'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-SPEC:ADV', 'COMP:uR', 'PF:Jukka', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', 'LF:Jukka', '-SPEC:uWH', 'LANG:FI', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SEM:directional', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
juosten         ['LANG:FI']
juokse-         {'LF:run', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', 'PF:juokse-', 'LANG:FI', 'COMP:P', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'SPEC:TO/inf', 'ASP', '-COMP:v', 'PHI:DET:_'}
istuu           ['LANG:FI']
istu-           {'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', 'LANG:FI', 'COMP:P', 'PF:istuu', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'LF:sit', 'V', 'SPEC:TO/inf', 'ASP', '-COMP:v', 'PHI:DET:_'}
kaksi           {'ARG', 'NUM', 'PHI:NUM:SG', 'PHI:PER:_', '-VAL', 'LF:two', 'PHI:NUM:_', 'PF:kaksi', 'TAIL:ARG,VAL,FIN', 'SPEC:*', 'LANG:FI', 'COMP:n', 'COMP:N', 'PHI:DET:_'}
kaksi           {'COMP:n', 'NUM', 'LF:two', 'TAIL:*POL:NEG', 'PF:kaksi', 'LANG:EN', 'SPEC:*', 'TAIL:ARG,ASP:BOUNDED', 'COMP:N'}
kaksi_1         {'ARG', 'NUM', 'PHI:NUM:SG', 'PHI:PER:_', '-VAL', 'LF:two', 'PHI:NUM:_', 'PF:kaksi', 'TAIL:ARG,VAL,FIN', 'SPEC:*', 'LANG:FI', 'COMP:n', 'COMP:N', 'PHI:DET:_'}
kaksi_2         {'COMP:n', 'NUM', 'LF:two', 'TAIL:*POL:NEG', 'PF:kaksi', 'LANG:EN', 'SPEC:*', 'TAIL:ARG,ASP:BOUNDED', 'COMP:N'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'PF:kaksi', 'NUM', 'SPEC:*', 'LANG:FI', 'COMP:n', 'LF:two', 'COMP:N'}
kaupunkia       ['LANG:EN']
kaupunki        {'-SPEC:ADV', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-COMP:P', '-SPEC:FORCE', '-SPEC:uWH', 'LF:city', 'LANG:FI', '-SPEC:INF', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', 'PF:kaupunki', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'LF:order', 'SEM:external', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', '!COMP:A/inf', 'LANG:FI', 'PF:kaske', 'COMP:P', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'SPEC:TO/inf', 'ASP', '-COMP:v', 'PHI:DET:_'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-SPEC:ADV', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', 'PF:kello', 'LANG:FI', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'LF:watch', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
kello0-         {'LF:watch', 'SPEC:D', 'PF:kello', 'LANG:FI', '2SPEC', '0'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-SPEC:ADV', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', 'LANG:EN', '-SPEC:FORCE', '-SPEC:uWH', '-SPEC:INF', 'PF:key', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', 'LF:key', '-COMP:v', 'SPEC:A', '-SPEC:P'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-SPEC:ADV', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', '-SPEC:uWH', 'LANG:FI', '-SPEC:INF', 'COMP:P', 'PF:kirja', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'LF:book', 'COMP:R/D', '-SEM:directional', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
kohti           {'-SPEC:iR', '-SPEC:ADV', 'PHI:PER:_', 'adjoinable', '-SPEC:V', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:FORCE', 'P', 'SPEC:*', 'LANG:FI', '-SPEC:INF', 'LF:towards', 'TAIL:V', '!COMP:*', '-SPEC:N', 'ARG', '-COMP:N', 'PHI:DET:_', '-SPEC:T/fin', '-VAL', '-SPEC:iWH', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:v', '-COMP:ADV', '-SPEC:C/fin', 'PF:kohti', 'COMP:D', '-COMP:uWH', '-SPEC:P'}
koko            {'-ARG', '-COMP:uR', 'OP', 'TAIL:T', 'adjoinable', '-SPEC:V', '-COMP:T/fin', 'PF:koko', 'LANG:FI', '!COMP:*', '-SPEC:INF', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:D', '-SPEC:Neg/fin', 'LF:all', '-SPEC:C', 'D', '!PROBE:N', 'COMP:N', '-SPEC:P'}
kuka            ['LANG:FI']
kuka-           {'-SPEC:ADV', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', 'LF:who', 'PHI', '-SPEC:uWH', 'LANG:FI', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', 'PF:kuka', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
kuorsaa-        {'LF:snore', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', 'PF:kuorsaa', '-SPEC:FORCE', 'LANG:FI', 'COMP:P', 'ARG', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-COMP:D', '-VAL', 'V', 'SPEC:TO/inf', 'ASP', '-COMP:v', '-COMP:WH'}
kuorsaamalla    ['LANG:FI']
lahella         {'-SPEC:iR', '-SPEC:ADV', 'PF:lahella', '-SPEC:V', 'VAL', '-SPEC:FORCE', 'SPEC:*', 'LANG:FI', '-SPEC:INF', 'COMP:V', 'ARG', '-SPEC:T/fin', 'INF', '-SPEC:iWH', '-SPEC:Neg/fin', '!SPEC:D', '-SPEC:C', '-SPEC:C/fin', 'LF:near', '-SPEC:P', 'PHI:DET:_', 'PHI:PER:_', 'adjoinable', 'PHI:NUM:_', '-COMP:T/fin', 'P', '!COMP:*', 'COMP:v', '-SPEC:N', '-COMP:N', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:v', '-COMP:ADV', 'COMP:D', '-COMP:uWH'}
lahella         {'-SPEC:iR', '-SPEC:ADV', '-SPEC:P', 'PHI:PER:_', 'PF:lahella', 'adjoinable', '-SPEC:V', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:FORCE', 'P', 'SPEC:*', 'LANG:FI', '!COMP:*', '-SPEC:INF', '-COMP:uWH', '-SPEC:N', 'ARG', '-COMP:N', 'PHI:DET:_', '-SPEC:T/fin', '-VAL', '-SPEC:iWH', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:v', '-COMP:ADV', '-SPEC:C/fin', 'COMP:D', 'LF:near', '!COMP:D'}
lahella_1       {'-SPEC:iR', '-SPEC:ADV', '-SPEC:P', 'PHI:PER:_', 'PF:lahella', 'adjoinable', '-SPEC:V', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:FORCE', 'P', 'SPEC:*', 'LANG:FI', '!COMP:*', '-SPEC:INF', '-COMP:uWH', '-SPEC:N', 'ARG', '-COMP:N', 'PHI:DET:_', '-SPEC:T/fin', '-VAL', '-SPEC:iWH', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:v', '-COMP:ADV', '-SPEC:C/fin', 'COMP:D', 'LF:near', '!COMP:D'}
lahella_2       {'-SPEC:iR', '-SPEC:ADV', 'PF:lahella', '-SPEC:V', 'VAL', '-SPEC:FORCE', 'SPEC:*', 'LANG:FI', '-SPEC:INF', 'COMP:V', 'ARG', '-SPEC:T/fin', 'INF', '-SPEC:iWH', '-SPEC:Neg/fin', '!SPEC:D', '-SPEC:C', '-SPEC:C/fin', 'LF:near', '-SPEC:P', 'PHI:DET:_', 'PHI:PER:_', 'adjoinable', 'PHI:NUM:_', '-COMP:T/fin', 'P', '!COMP:*', 'COMP:v', '-SPEC:N', '-COMP:N', '!SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:v', '-COMP:ADV', 'COMP:D', '-COMP:uWH'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', 'ASP', 'COMP:PP', 'LANG:FI', 'COMP:P', 'LF:leave', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-COMP:MA/inf', '-COMP:D', '-VAL', 'CLASS:INTR', 'V', 'SPEC:TO/inf', 'PF:lahtea', '-COMP:v', 'PHI:DET:_'}
lavano          ['LANG:IT']
lava-           {'PHI:PER:_', 'PHI:NUM:_', 'LF:wash', 'PF:lava', '-COMP:T/fin', '-SPEC:FORCE', 'LANG:IT', '!COMP:*', 'COMP:P', 'PHI:GEN:_', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'SPEC:TO/inf', 'ASP', 'COMP:D', '-COMP:v', 'PHI:DET:_'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-ARG', '-COMP:uR', 'OP', 'adjoinable', '-SPEC:V', '-COMP:T/fin', 'LANG:IT', 'LF:D', '!COMP:*', '-SPEC:INF', '-SPEC:MA/lla', '-SPEC:T/fin', 'PF:le', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:C', 'D', '!PROBE:N', 'COMP:N', '-SPEC:P'}
leaves          ['LANG:EN']
leave           {'PHI:PER:_', 'PF:leave', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'LF:leave', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', '!SPEC:D', 'V', 'SPEC:TO/inf', 'ASP', '-COMP:v', 'PHI:DET:_'}
leave-          {'PHI:PER:_', 'PF:leave', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'LF:leave', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', '!SPEC:D', 'V', 'SPEC:TO/inf', 'ASP', '-COMP:v', 'PHI:DET:_'}
like-           {'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'LF:like', 'ARG', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', 'PF:like', '-VAL', 'V', 'SPEC:TO/inf', 'ASP', '-COMP:v', '!COMP:D'}
likes           ['LANG:EN']
like            {'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'LF:like', 'ARG', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', 'PF:like', '-VAL', 'V', 'SPEC:TO/inf', 'ASP', '-COMP:v', '!COMP:D'}
little          ['LANG:EN']
little-         {'LF:little', 'LANG:EN', '2SPEC', 'SPEC:D', 'PF:little-', '0'}
lle             {'-SPEC:iR', '-SPEC:ADV', 'PF:P(lle)', 'PHI:PER:_', 'adjoinable', '-SPEC:V', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:FORCE', 'P', '+SEM:directional', 'LANG:FI', '-SPEC:INF', 'TAIL:V,+SEM:directional', '!COMP:*', '-SPEC:N', 'ARG', '-COMP:N', '-SPEC:*', 'PHI:DET:_', '-SPEC:T/fin', '-VAL', '-SPEC:iWH', 'LF:for', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:v', '-COMP:ADV', '-SPEC:C/fin', 'COMP:D', '-COMP:uWH', '-SPEC:P'}
lla             {'-SPEC:iR', '-SPEC:ADV', 'TAIL:T', 'PHI:PER:_', 'adjoinable', '-SPEC:V', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:FORCE', 'P', 'PF:P(lla)', 'LANG:FI', 'SPEC:*', '-SPEC:INF', '!COMP:*', '-SPEC:N', 'LF:by', 'ARG', '-COMP:N', 'PHI:DET:_', '-SPEC:T/fin', 'TAIL:*V', '-VAL', '-SPEC:iWH', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:v', '-COMP:ADV', '-SPEC:C/fin', 'COMP:D', '-COMP:uWH', '-SPEC:P'}
Luisa           ['LANG:IT']
Luisa-          {'-SPEC:ADV', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', 'LANG:IT', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SEM:directional', 'PF:Luisa', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', 'LF:Luisa', '-SPEC:P'}
lukemalla       ['LANG:FI']
luke-           {'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', 'LF:read', '-SPEC:FORCE', '-COMP:P', 'CLASS:TR', 'LANG:FI', '!COMP:*', 'COMP:P', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'PF:luke', 'V', 'SPEC:TO/inf', 'ASP', 'COMP:D', '-COMP:v', 'PHI:DET:_'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'PHI:PER:_', 'PHI:NUM:_', 'PF:loyta-', '-COMP:T/fin', '-SPEC:FORCE', '-COMP:P', 'CLASS:TR', 'LANG:FI', '!COMP:*', 'COMP:P', 'ARG', '-COMP:N', 'LF:find', 'SPEC:P', 'SPEC:ADV', 'ASP:BOUNDED', '-SPEC:T/fin', '-COMP:V', 'PHI:DET:_', '-VAL', 'V', 'SPEC:TO/inf', 'ASP', 'COMP:D', '-COMP:v', '!COMP:D'}
Mary            ['LANG:EN']
Mary-           {'-SPEC:ADV', 'COMP:uR', '-SPEC:C/fin', '-SPEC:V', '-SPEC:R', 'N', 'LANG:EN', '-SPEC:FORCE', 'PF:Mary', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SEM:directional', 'LF:Mary', '-COMP:AUX', '-adjoinable', '-COMP:v', 'SPEC:A', '-SPEC:P'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-SPEC:ADV', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', 'LF:Merja', 'PF:Merja', '-SPEC:uWH', 'LANG:FI', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SEM:directional', '-SPEC:C/fin', '-COMP:AUX', '-adjoinable', '-COMP:v', 'SPEC:A', '-SPEC:P'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'LF:by', '-SPEC:T/fin', 'PF:malla', 'TAIL:T', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:FORCE', 'MA/inf', 'SPEC:*', 'LANG:FI', 'COMP:v', 'ADV', '-SPEC:N'}
meren           ['LANG:FI']
mere-           {'-SPEC:ADV', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', 'LF:ocean', '-SPEC:uWH', 'LANG:FI', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', 'PF:meri', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
mies            {'-SPEC:ADV', 'COMP:uR', 'PF:mies', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', '-SPEC:uWH', 'LANG:FI', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'LF:man', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
mistake         {'-SPEC:ADV', 'LF:mistake', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', 'LANG:EN', '-SPEC:FORCE', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', 'PF:mistake', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-SPEC:ADV', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', '-SPEC:uWH', 'LANG:FI', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'PF:mika-', 'COMP:R/D', 'LF:what', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', '-COMP:P', 'CLASS:TR', '+SEM:directional', '!COMP:*', 'COMP:P', 'PF:move', 'PHI:GEN:_', 'LF:move', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'SPEC:TO/inf', 'ASP', 'LANGN:EN', 'COMP:D', '-COMP:v', 'PHI:DET:_'}
mukavasti       ['LANG:EN']
mukava-         {'SPEC:D', 'LF:comfortably', 'LANG:FI', '2SPEC', 'PF:mukavasti', '0'}
must            {'-COMP:INF', 'PF:must', 'SPEC:D', '-SPEC:Neg', 'PHI:PER:_', '-SPEC:C/fin', 'PHI:NUM:_', '-SPEC:V', 'VAL', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', 'MODAL', 'SPEC:*', '!COMP:*', 'COMP:v', 'T/fin', 'COMP:V', '-SPEC:N', 'PHI:GEN:_', 'ARG', 'PHI:DET:_', 'COMP:Neg', '-SPEC:T/fin', '-SPEC:TO/inf', '!SPEC:D', '-SPEC:C', '!PROBE:V', 'SPEC:TO/inf', '-SPEC:v', 'FIN', 'LF:must', 'T', 'COMP:T/prt'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'PHI:PER:_', 'PF:myy', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', '-COMP:P', 'CLASS:TR', 'LANG:FI', '!COMP:*', 'COMP:P', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'ASP:BOUNDED', '-SPEC:T/fin', '-COMP:V', '-VAL', 'LF:sell', 'V', 'SPEC:TO/inf', 'ASP', 'COMP:D', '-COMP:v', 'PHI:DET:_'}
naki            ['LANG:FI']
nake-           {'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', '-COMP:P', 'CLASS:TR', 'LANG:FI', 'PF:nake', 'COMP:P', '!COMP:*', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'ASP:BOUNDED', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', '-COMP:MA/tta', 'SPEC:TO/inf', '-COMP:ESSA/inf', 'LF:see', 'ASP', 'COMP:D', '-COMP:v', 'PHI:DET:_'}
nayttaa         ['LANG:FI']
naytta-         {'-ARG', 'LF:seem', 'PF:naytta', 'VAL', '-COMP:T/fin', '-SPEC:FORCE', 'LANG:FI', 'COMP:P', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-COMP:V', '-SPEC:T/fin', '!COMP:VA/inf', '!SPEC:D', 'V', 'SPEC:TO/inf', 'SEM:internal', 'ASP', '-COMP:v'}
ndo             {'-SPEC:T/fin', '-COMP:C/fin', 'INF', '?ARG', 'PRG', 'VAL', '-SPEC:V', '-COMP:T/fin', '-COMP:FORCE', 'LANG:EN', 'PF:PRG', 'LF:ing', '!COMP:*', 'COMP:v', 'COMP:V'}
ne              {'-ARG', '-COMP:uR', 'OP', 'PF:ne', 'adjoinable', 'PHI:NUM:PL', '-SPEC:V', '-COMP:T/fin', 'LF:those', 'LANG:FI', '!COMP:*', '-SPEC:INF', '-SPEC:MA/lla', 'PHI:PER:3', '-SPEC:T/fin', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:C', 'D', '!PROBE:N', 'COMP:N', '-SPEC:P'}
niiden          ['LANG:EN']
nen             {'A', 'adjoinable', '-SPEC:D', 'TAIL:D', '-SPEC:A', 'LF:ing', 'SPEC:*', 'LANG:FI', 'PF:a', 'COMP:0'}
not             {'ARG', 'Neg', '-SPEC:T/fin', 'PHI:PER:_', '-VAL', '-COMP:D', 'LF:not', 'POL:NEG', '-COMP:FIN', 'PHI:NUM:_', 'LANG:EN', '-COMP:C', 'PF:not', 'SPEC:*', '!COMP:*', 'PHI:GEN:_', 'PHI:DET:_'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-COMP:T', 'SPEC:D', 'PF:nukku', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', 'LANG:FI', 'COMP:P', '-COMP:Neg/fin', 'ARG', '-COMP:N', 'SPEC:P', 'LF:sleep', '-COMP:MA/inf', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', '-COMP:D', 'CLASS:INTR', 'V', 'SPEC:TO/inf', 'ASP', '-COMP:v', 'PHI:DET:_'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'PF:omaisuuden', '-SPEC:ADV', 'COMP:uR', 'LF:possessions', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', '-SPEC:uWH', 'LANG:FI', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
operatoria      ['LANG:IT']
operatoria-     {'LANG:IT', 'LF:operation', 'SPEC:D', 'PF:operatoria', '2SPEC', '0'}
ostaa           ['LANG:FI']
osta-           {'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', '-COMP:P', 'CLASS:TR', 'ASP', 'LANG:FI', '!COMP:*', 'COMP:P', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'ASP:BOUNDED', '-SPEC:T/fin', '-COMP:V', '-VAL', 'PF:osta', 'V', 'SPEC:TO/inf', 'LF:buy', 'COMP:D', '-COMP:v', 'PHI:DET:_'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'PF:paiva', '-SPEC:ADV', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', '-SPEC:uWH', 'LANG:FI', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'SEM:nonreferential', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'LF:day', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
Pariisia        ['LANG:FI']
Pariisi-        {'-SPEC:ADV', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', '-SPEC:uWH', 'LANG:FI', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'LF:Paris', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'PF:Pariisi', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-SPEC:ADV', '-SPEC:P', 'COMP:uR', 'PF:Pekka', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', '-SPEC:uWH', 'LANG:FI', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SEM:directional', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', 'LF:Pekka'}
pelottaa        ['LANG:FI']
pelkaa-         {'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', '-COMP:P', 'CLASS:TR', 'LANG:FI', '!COMP:*', 'COMP:P', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', 'LF:fear', '-VAL', 'V', 'SPEC:TO/inf', 'PF:pelkaa', 'ASP', 'COMP:D', '-COMP:v', 'PHI:DET:_'}
persuades       ['LANG:EN']
persuade-       {'SEM:external', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', 'PF:persuade', '!COMP:*', 'COMP:P', 'PHI:GEN:_', 'COMP:TO/inf', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'LF:persuade', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'SPEC:TO/inf', 'ASP', '-COMP:v', 'PHI:DET:_'}
peruuntui       ['LANG:FI']
peruuntu-       {'PF:peruuntui', 'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', 'LANG:FI', 'COMP:P', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'SPEC:TO/inf', 'LF:cancelled', 'ASP', '-COMP:v', 'PHI:DET:_'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'PHI:PER:_', 'PHI:NUM:_', 'LF:wash', '-COMP:T/fin', '-SPEC:FORCE', '-COMP:P', 'CLASS:TR', 'LANG:FI', '!COMP:*', 'COMP:P', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'ASP:BOUNDED', '-SPEC:T/fin', '-COMP:V', '-VAL', 'PF:pese', 'V', 'SPEC:TO/inf', 'ASP', 'COMP:D', '-COMP:v', 'PHI:DET:_'}
pese-           {'PHI:PER:_', 'PHI:NUM:_', 'LF:wash', '-COMP:T/fin', '-SPEC:FORCE', '-COMP:P', 'CLASS:TR', 'LANG:FI', '!COMP:*', 'COMP:P', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'PF:pese', 'V', 'SPEC:TO/inf', 'ASP', 'COMP:D', '-COMP:v', 'PHI:DET:_'}
petardi         {'-SPEC:ADV', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', 'PF:petardi', '-SPEC:FORCE', 'LANG:IT', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', 'LF:firecrackers', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
pieni           ['LANG:FI']
pieni-          {'SPEC:D', 'PF:pieni-', 'LANG:FI', 'LF:small', '2SPEC', '0'}
poikien         ['LANG:FI']
poika-          {'-SPEC:ADV', 'COMP:uR', '-SPEC:V', 'PF:poika', 'N', '-SPEC:R', '-SPEC:FORCE', 'LF:boy', '-SPEC:uWH', 'LANG:FI', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
puhelinta       ['LANG:FI']
puhelin-        {'PF:puhelin', 'LF:phone', 'SPEC:D', 'LANG:FI', '2SPEC', '0'}
punainen        ['LANG:FI']
puna-           {'SPEC:D', 'PF:puna-', 'LF:red', 'LANG:FI', '2SPEC', '0'}
presupposto     {'-SPEC:ADV', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', 'LANG:IT', 'LF:presupposition', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', 'PF:presupposto', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
primary         {'-SPEC:ADV', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', 'LANG:IT', 'PF:primary', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'LF:nurse', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
promises        ['LANG:EN']
promise-        {'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'LF:promise', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PF:promise', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'SPEC:TO/inf', 'SEM:internal', 'ASP', 'COMP:D', '-COMP:v', 'PHI:DET:_'}
pyytaa          ['LANG:FI']
pyyta-          {'SEM:external', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', 'LANG:FI', 'COMP:P', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', 'PF:pyyda', '-VAL', 'V', 'SPEC:TO/inf', 'ASP', 'LF:ask', '-COMP:v', 'PHI:DET:_'}
raukesi         ['LANG:FI']
raukea-         {'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', 'LANG:FI', 'COMP:P', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'LF:terminate', 'V', 'SPEC:TO/inf', 'ASP', '-COMP:v', 'PF:raukea', 'PHI:DET:_'}
red             ['LANG:EN']
red-            {'PF:red', 'LANG:EN', 'SPEC:D', 'LF:red', '2SPEC', '0'}
saavuttaa       ['LANG:FI']
saavutta-       {'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', '-COMP:P', 'CLASS:TR', 'LANG:FI', '!COMP:*', 'COMP:P', 'ARG', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'SPEC:ADV', 'ASP:BOUNDED', '-SPEC:T/fin', '-COMP:V', 'COMP:D', '-VAL', 'LF:reach', 'V', 'SPEC:TO/inf', 'ASP', 'PF:saavutta-', '-COMP:v', '!COMP:D'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', 'COMP:FORCE', 'LANG:FI', 'COMP:P', 'LF:say', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', 'PF:sano-', '-VAL', 'V', 'SPEC:TO/inf', 'COMP:VA/inf', 'ASP', '-COMP:v', 'PHI:DET:_'}
said            ['LANG:EN']
say'            {'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '!COMP:FORCE', 'LANG:EN', '-SPEC:FORCE', 'COMP:P', 'LF:say', 'PHI:GEN:_', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'SPEC:TO/inf', 'ASP', '-COMP:v', 'PF:say', 'PHI:DET:_'}
say-            {'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '!COMP:FORCE', 'LANG:EN', '-SPEC:FORCE', 'COMP:P', 'LF:say', 'PHI:GEN:_', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'SPEC:TO/inf', 'ASP', '-COMP:v', 'PF:say', 'PHI:DET:_'}
sala            ['LANG:IT']
sala-           {'-SPEC:ADV', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', 'LF:room', 'LANG:IT', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', 'PF:sala', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
scoppiati       ['LANG:IT']
scoppia-        {'PF:scoppia', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', 'LANG:IT', 'COMP:P', 'PHI:GEN:_', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'SPEC:TO/inf', 'ASP', 'LF:explode', '-COMP:v', 'PHI:DET:_'}
sen             {'-ARG', '-COMP:uR', 'OP', 'adjoinable', '-SPEC:V', '-COMP:T/fin', 'TAIL:*POL:NEG', 'PF:sen', 'TAIL:PHI', 'LANG:FI', '!COMP:*', '-SPEC:INF', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:D', '-SPEC:Neg/fin', 'TAIL:ASP', '-SPEC:C', 'D', 'LF:the/that', '!PROBE:N', 'COMP:N', '-SPEC:P'}
se'             {'-ARG', '-COMP:uR', 'OP', 'adjoinable', '-SPEC:V', '-COMP:T/fin', 'LANG:FI', '!COMP:*', '-SPEC:INF', '-SPEC:MA/lla', '-SPEC:T/fin', 'PF:se', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:C', 'D', 'LF:the/that', '!PROBE:N', 'COMP:N', '-SPEC:P'}
se              {'-ARG', '-COMP:uR', 'OP', 'adjoinable', '-SPEC:V', '-COMP:T/fin', 'LANG:FI', '!COMP:*', '-SPEC:INF', '-SPEC:MA/lla', '-SPEC:T/fin', 'PF:se', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:C', 'D', 'LF:the/that', '!PROBE:N', 'COMP:N', '-SPEC:P'}
se              ['LANG:FI']
sentenza        {'-SPEC:ADV', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', 'LANG:IT', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', 'LF:sentence', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'PF:sentenza', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
Seine           ['LANG:EN']
Seine-          {'-SPEC:ADV', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', 'LANG:EN', '-SPEC:FORCE', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', 'LF:Seine', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'PF:Seine', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
sembrano        ['LANG:IT']
sembra-         {'-ARG', 'SPEC:D', 'LF:seem', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', '-ASP', 'PF:sembra', 'COMP:P', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-COMP:V', '-SPEC:T/fin', '-COMP:D', '-VAL', 'V', 'SPEC:TO/inf', '-COMP:v', '!COMP:ARE/inf'}
sleeps          ['LANG:EN']
sleep           {'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'PF:sleep', 'ARG', '-COMP:N', 'LF:sleep', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-COMP:MA/inf', '-VAL', '-COMP:D', 'CLASS:INTR', 'V', 'SPEC:TO/inf', 'ASP', '-COMP:v', 'PHI:DET:_'}
sleep-          {'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'PF:sleep', 'ARG', '-COMP:N', 'LF:sleep', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-COMP:MA/inf', '-VAL', '-COMP:D', 'CLASS:INTR', 'V', 'SPEC:TO/inf', 'ASP', '-COMP:v', 'PHI:DET:_'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-SPEC:ADV', 'COMP:uR', 'PF:sopimus', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', '!COMP:A/inf', '-SPEC:uWH', 'LANG:FI', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', 'LF:agreement', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
spinge          ['LANG:IT']
spinge-         {'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:P', '-SPEC:FORCE', 'LANG:IT', 'PHI:GEN:_', 'ARG', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'PF:spinge', 'SPEC:TO/inf', 'ASP', '-COMP:v', 'LF:push', '!COMP:D'}
ssa             {'-SPEC:iR', '-SPEC:ADV', 'PHI:PER:_', 'adjoinable', 'LF:in', '-SPEC:V', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:FORCE', 'P', 'SPEC:*', 'LANG:FI', '-SPEC:INF', 'TAIL:V', '!COMP:*', '-SPEC:N', 'PF:ssa', 'ARG', '-COMP:N', 'PHI:DET:_', '-SPEC:T/fin', '-VAL', 'COMP:n/MA', '-SPEC:iWH', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:v', '-COMP:ADV', '-SPEC:C/fin', 'COMP:D', '-COMP:uWH', '-SPEC:P'}
stanno          ['LANG:IT']
sta-            {'SPEC:D', 'PHI:PER:_', 'COMP:PRG', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', '-ASP', 'PF:sta', 'COMP:P', 'PHI:GEN:_', 'LF:stay', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'SPEC:TO/inf', 'SEM:internal', '-COMP:v', 'PHI:DET:_'}
sti             {'-ARG', 'PF:sti', 'LF:by', '-SPEC:N', '-SPEC:T/fin', 'TAIL:T', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:FORCE', 'SPEC:*', '!COMP:*', 'ADV', 'LANG:FI'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-SPEC:ADV', 'COMP:uR', 'LF:socks', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', '-SPEC:uWH', 'LANG:FI', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'PF:sukka-', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
talo            {'-SPEC:ADV', 'COMP:uR', 'PF:talo', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', '-SPEC:uWH', 'LANG:FI', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', 'LF:house', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
tama            ['LANG:EN']
tama-           {'-SPEC:ADV', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', 'PHI', 'PF:tama', '-SPEC:uWH', 'LANG:FI', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', 'LF:this', '-SPEC:P'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', 'PF:taytyy', 'MODAL', '!COMP:A/inf', '-ASP', 'SPEC:*', 'LANG:FI', 'COMP:P', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'SPEC:TO/inf', 'FIN', 'LF:must', '-COMP:v', 'PHI:DET:_'}
teki            ['LANG:FI']
teke-           {'-COMP:A/inf', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', '-COMP:P', 'CLASS:TR', 'LF:make', 'LANG:FI', '!COMP:*', 'COMP:P', 'ARG', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'SPEC:ADV', 'ASP:BOUNDED', '-SPEC:T/fin', '-COMP:V', 'COMP:D', '-VAL', 'V', 'SPEC:TO/inf', 'ASP', 'PF:teke', '-COMP:v', '!COMP:D'}
that            {'-ARG', '-SPEC:*', 'LF:that', '-VAL', 'PF:that', 'COMP:C/fin', 'LANG:EN', 'FIN', 'COMP:T/fin', '!COMP:*', '!PROBE:T/fin', 'FORCE'}
the             {'PHI:DEF:DEF', '-ARG', '-COMP:uR', 'COMP:N', 'OP', 'adjoinable', '-SPEC:V', '-COMP:T/fin', 'PF:the', 'LANG:EN', '!COMP:*', '-SPEC:INF', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:C', 'D', '!PROBE:N', 'LF:the', '-SPEC:P'}
to              {'-SPEC:iR', '-SPEC:ADV', 'LF:to', 'PF:to', 'PHI:PER:_', 'adjoinable', '-SPEC:V', '-COMP:T/fin', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', 'P', '+SEM:directional', '-SPEC:INF', '!COMP:*', 'TAIL:V,+SEM:directional', '-SPEC:N', 'PHI:GEN:_', 'ARG', '-COMP:N', '-SPEC:*', 'PHI:DET:_', '-SPEC:T/fin', '-VAL', '-SPEC:iWH', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:v', '-float', '-COMP:ADV', '-SPEC:C/fin', 'COMP:D', '-COMP:uWH', '-SPEC:P'}
to_inf          {'adjoinable', '-SPEC:V', '-COMP:T/fin', 'PF:TO/inf', 'LANG:EN', '!COMP:*', 'COMP:v', 'COMP:V', 'TO/inf', '-SPEC:T/fin', '-COMP:C/fin', 'INF', '?ARG', '-VAL', '-COMP:FORCE', '-SPEC:v', 'LF:TO/inf'}
towards         {'-SPEC:iR', '-SPEC:ADV', 'PHI:PER:_', 'adjoinable', '-SPEC:V', '-COMP:T/fin', 'PHI:NUM:_', 'PF:towards', 'LANG:EN', '-SPEC:FORCE', 'P', '-SPEC:INF', '!COMP:*', 'LF:towards', 'TAIL:V', '-SPEC:N', 'PHI:GEN:_', 'ARG', '-COMP:N', '-SPEC:*', 'PHI:DET:_', '-SPEC:T/fin', '-VAL', '-SPEC:iWH', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:v', '-float', '-COMP:ADV', '-SPEC:C/fin', 'COMP:D', '-COMP:uWH', '-SPEC:P'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'PF:tonaise', 'PHI:PER:_', 'LF:nudge', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', '-COMP:P', 'CLASS:TR', 'LANG:FI', '!COMP:*', 'COMP:P', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'V', 'SPEC:TO/inf', 'ASP', 'COMP:D', '-COMP:v', 'PHI:DET:_'}
tta             {'-SPEC:iR', '-SPEC:ADV', 'PHI:PER:_', 'adjoinable', '-SPEC:V', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:FORCE', 'P', 'SPEC:*', 'LANG:FI', '-SPEC:INF', '!COMP:*', 'ADV', '-SPEC:N', 'ARG', '-COMP:N', 'PHI:DET:_', '-SPEC:T/fin', 'COMP:D', '-VAL', 'COMP:n/MA', '-SPEC:iWH', '-SPEC:Neg/fin', 'LF:without', '-SPEC:C', '-SPEC:v', '-COMP:ADV', '-SPEC:C/fin', 'PF:tta', '-COMP:uWH', '-SPEC:P'}
tries           ['LANG:EN']
try-            {'SPEC:D', 'PHI:PER:_', '!COMP:TO/inf', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', 'PF:try', 'COMP:P', 'PHI:GEN:_', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', 'LF:try', '-VAL', '!COMP:-ARG', 'V', 'SPEC:TO/inf', 'SEM:internal', 'ASP', '-COMP:v', 'PHI:DET:_'}
verifiche       {'-SPEC:ADV', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', 'LF:verification', '-SPEC:FORCE', 'LANG:IT', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', 'PF:verifiche', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'PF:virtaa', 'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:FORCE', 'LANG:FI', 'COMP:P', 'ARG', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-COMP:D', '-VAL', 'V', 'SPEC:TO/inf', '!COMP:P', 'ASP', '-COMP:v', 'LF:flow'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', '!COMP:*', 'LF:want', 'COMP:P', 'PHI:GEN:_', 'ARG', '-COMP:N', 'SPEC:P', '-SPEC:*', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', '-VAL', 'PF:volu', 'V', 'SPEC:TO/inf', 'SEM:internal', 'ASP', '-COMP:v', 'PHI:DET:_'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'SEM:achievement', 'PF:voitta', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', '-COMP:P', 'CLASS:TR', '!COMP:*', 'COMP:P', 'PHI:GEN:_', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'ASP:BOUNDED', '-SPEC:T/fin', '-COMP:V', 'LF:win', '-VAL', 'V', 'SPEC:TO/inf', 'ASP', 'COMP:D', '-COMP:v', 'PHI:DET:_'}
wants           ['LANG:EN']
want-           {'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', '-COMP:P', 'CLASS:TR', '!COMP:*', 'LF:want', 'COMP:P', 'PHI:GEN:_', 'COMP:TO/inf', 'ARG', '-COMP:N', 'SPEC:P', 'PHI:DET:_', 'SPEC:ADV', '-COMP:V', '-SPEC:T/fin', '-VAL', '-SPEC:TO/inf', 'V', 'ASP', 'COMP:D', '-COMP:v', 'PF:want'}
what            ['LANG:EN']
what-           {'-SPEC:ADV', '-COMP:*', 'COMP:uR', 'PF:what', '-SPEC:V', '-SPEC:R', 'N', 'LANG:EN', '-SPEC:FORCE', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', 'LF:what', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', '-SPEC:P'}
which           {'-ARG', '-COMP:uR', 'OP', 'adjoinable', '-SPEC:V', '-COMP:T/fin', 'LANG:EN', '!COMP:*', '-SPEC:INF', 'OP:WH', '-SPEC:MA/lla', 'PF:which', '-SPEC:T/fin', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:C', 'D', 'LF:which', '!PROBE:N', 'COMP:N', '-SPEC:P'}
who             ['LANG:EN']
who-            {'-SPEC:ADV', '-SPEC:P', '-COMP:*', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', 'LANG:EN', 'LF:who', '-SPEC:FORCE', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', 'PF:who'}
whether         {'-ARG', 'OP', 'Q', 'LANG:EN', 'COMP:C/fin', '!COMP:*', '!PROBE:T/fin', 'FORCE', 'OP:WH', 'PF:whether', '-SPEC:*', '-VAL', 'LF:whether', 'FIN', 'COMP:T/fin', 'OP:Q'}
yrittaa         ['LANG:FI']
yritta-         {'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', '!COMP:A/inf', 'COMP:P', 'PHI:GEN:_', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', 'LF:try', '-VAL', '!COMP:-ARG', 'V', 'SPEC:TO/inf', 'SEM:internal', 'PF:yritta', 'ASP', '-COMP:v', 'PHI:DET:_'}
mina            ['LANG:EN']
mina-           {'-SPEC:ADV', '-COMP:*', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', '-SPEC:uWH', 'LANG:FI', 'PF:mina', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'LF:I', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', '-SPEC:P'}
sina            ['LANG:EN']
sina-           {'-SPEC:ADV', '-SPEC:P', '-COMP:*', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', '-SPEC:uWH', 'LANG:FI', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'LF:you', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', 'PF:sina'}
han             ['LANG:EN']
han-            {'-SPEC:ADV', '-COMP:*', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', '-SPEC:uWH', 'LANG:FI', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'LF:s/he', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', 'PF:han', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', '-SPEC:P'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'LF:we', '-SPEC:ADV', '-COMP:*', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', '-SPEC:uWH', 'LANG:FI', '-SPEC:INF', 'COMP:P', '-SPEC:N', 'PHI_N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PF:me', 'SPEC:A', '-SPEC:P'}
te              ['LANG:EN']
te-             {'-SPEC:ADV', '-COMP:*', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', '-SPEC:uWH', 'LANG:FI', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', 'PF:te', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'LF:you', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', '-SPEC:P'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'-SPEC:ADV', '-COMP:*', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', '-SPEC:uWH', 'LANG:FI', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', 'LF:they', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', 'PF:he', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', '-SPEC:P'}
se-             {'-ARG', 'LF:it/that', '-COMP:uR', 'OP', 'adjoinable', '-SPEC:V', '-COMP:T/fin', 'LANG:FI', '!COMP:*', '-SPEC:INF', '-SPEC:MA/lla', '-SPEC:T/fin', 'PF:se', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:C', 'D', '!PROBE:N', 'COMP:N', '-SPEC:P'}
I               ['LANG:EN']
I-              {'-SPEC:ADV', '-COMP:*', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', 'LANG:EN', '-SPEC:FORCE', '-SPEC:uWH', '-SPEC:INF', 'PF:I', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'LF:I', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', '-SPEC:P'}
you             ['LANG:EN']
you-            {'-SPEC:ADV', '-COMP:*', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', 'LANG:EN', '-SPEC:FORCE', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'LF:you', 'PF:you', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', '-SPEC:P'}
he              ['LANG:EN']
he-             {'-SPEC:ADV', '-COMP:*', 'COMP:uR', 'LF:he', '-SPEC:V', '-SPEC:R', 'N', 'LANG:EN', '-SPEC:FORCE', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', 'PF:he', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', '-SPEC:P'}
she             ['LANG:EN']
she-            {'PF:she', '-SPEC:ADV', '-COMP:*', 'COMP:uR', '-SPEC:V', 'LF:she', 'N', '-SPEC:R', 'LANG:EN', '-SPEC:FORCE', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', '-SPEC:P'}
we              ['LANG:EN']
we-             {'LF:we', '-SPEC:ADV', '-COMP:*', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', 'LANG:EN', '-SPEC:FORCE', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', 'PF:we', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', '-SPEC:P'}
you_pl          ['LANG:EN']
you_pl-         {'-SPEC:ADV', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', 'LANG:EN', '-SPEC:FORCE', 'PHI', 'LF:you_pl', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', 'PF:you_pl', '-COMP:v', 'SPEC:A', '-SPEC:P'}
they            ['LANG:EN']
they-           {'-SPEC:ADV', '-COMP:*', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', 'LANG:EN', '-SPEC:FORCE', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', 'LF:they', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'PF:they', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', '-SPEC:P'}
it              ['LANG:EN']
it-             {'-ARG', 'LF:it/that', '-COMP:uR', 'OP', 'adjoinable', '-SPEC:V', '-COMP:T/fin', 'LANG:EN', '!COMP:*', '-SPEC:INF', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:C', 'PF:it', 'D', '!PROBE:N', 'COMP:N', '-SPEC:P'}
io              ['LANG:EN']
io-             {'-SPEC:ADV', '-COMP:*', 'COMP:uR', '-SPEC:V', 'PF:io', 'N', '-SPEC:R', '-SPEC:FORCE', 'LANG:IT', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'LF:I', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', '-SPEC:P'}
tu              ['LANG:EN']
tu-             {'-SPEC:ADV', '-COMP:*', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', 'LANG:IT', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', 'PF:tu', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'LF:you', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', '-SPEC:P'}
lui             ['LANG:EN']
lui-            {'-SPEC:ADV', '-COMP:*', 'COMP:uR', 'LF:he', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', 'LANG:IT', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', 'SPEC:A', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'PF:lui', '-SPEC:P'}
lei             ['LANG:EN']
lei-            {'-SPEC:ADV', '-COMP:*', 'COMP:uR', 'PF:lei', '-SPEC:V', 'LF:she', 'N', '-SPEC:R', '-SPEC:FORCE', 'LANG:IT', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', '-SPEC:P'}
noi             ['LANG:EN']
noi-            {'LF:we', '-SPEC:ADV', '-COMP:*', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', 'LANG:IT', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'PF:noi', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', '-SPEC:P'}
voi             ['LANG:EN']
voi-            {'-SPEC:ADV', '-COMP:*', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', 'PF:voi', '-SPEC:FORCE', 'LANG:IT', 'LF:you_pl', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', '-SPEC:P'}
loro            ['LANG:EN']
loro-           {'-SPEC:ADV', '-COMP:*', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', 'LANG:IT', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', 'LF:they', 'PF:loro', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', '-SPEC:P'}
mi              ['LANG:EN']
mi-             {'-SPEC:ADV', '-COMP:*', 'COMP:uR', 'LF:me', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', 'LANG:IT', 'CL', 'PF:mi(cl)', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', '-SPEC:P'}
la              ['LANG:EN']
la-             {'-SPEC:ADV', '-COMP:*', 'COMP:uR', '-SPEC:V', 'PF:la(cl)', 'N', '-SPEC:R', '-SPEC:FORCE', 'LANG:IT', 'CL', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', 'LF:her', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', '-SPEC:P'}
lo              ['LANG:EN']
lo-             {'-SPEC:ADV', '-COMP:*', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', 'LANG:IT', 'CL', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', 'PF:lo(cl)', '-COMP:N', '-COMP:WH', 'LF:him', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', '-SPEC:P'}
si              ['LANG:EN']
si-             {'-SPEC:ADV', '-COMP:*', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', 'LANG:IT', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'PF:si(cl)', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'CAL:CL', 'LF:3sg', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', '-SPEC:P'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-SPEC:ADV', '-SPEC:P', '-COMP:*', 'COMP:uR', '-SPEC:V', '-SPEC:R', 'N', '-SPEC:FORCE', 'LANG:IT', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', 'LF:there', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'PHI_N', 'SPEC:A', 'PF:ci'}
[-n]            {'PHI', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'LANG:FI', 'PHI:DET:DEF', 'inflectional'}
[-t]            {'PHI:PER:2', 'PHI', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'LANG:FI', 'PHI:DET:DEF', 'inflectional'}
[-V]            {'PHI', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:FI', 'inflectional'}
[-mme]          {'PHI', 'inflectional', 'PHI:PER:1', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:DET:DEF', 'PHI:NUM:PL'}
[-mme]          {'inflectional', 'PHI:PER:1', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:DET:DEF', 'PHI:NUM:PL'}
[-tte]          {'PHI:PER:2', 'PHI', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:DET:DEF', 'PHI:NUM:PL'}
[-vat]          {'PHI', 'PHI:PER:3', 'inflectional', 'LANG:FI', 'PHI:NUM:PL'}
[-ni]           {'PHI', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'LANG:FI', 'PHI:DET:DEF', 'inflectional'}
[-si]           {'PHI:PER:2', 'PHI', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'LANG:FI', 'PHI:DET:DEF', 'inflectional'}
[-nsa]          {'PHI', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:FI', 'inflectional'}
[-an]           {'LANG:FI', 'PHI', 'inflectional', 'PHI:PER:3'}
[-nne]          {'PHI:PER:2', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:DET:DEF', 'PHI:NUM:PL'}
[-s]            {'PHI:GEN:F', 'LANG:EN', 'PHI', 'PHI:PER:3', 'PHI:GEN:M', 'PHI:NUM:SG', 'inflectional'}
[-0]            {'PHI:PER:3', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:NUM:PL', 'inflectional', 'PHI:GEN:N', 'LANG:EN', 'PHI:PER:2', 'PHI', 'PHI:PER:1'}
[-o]            {'PHI', 'LANG:IT', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:DET:DEF', 'inflectional'}
[-i]            {'PHI:PER:2', 'PHI', 'LANG:IT', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:DET:DEF', 'inflectional'}
[-a]            {'PHI', 'LANG:IT', 'PHI:PER:3', 'PHI:NUM:SG', 'PHI:DET:DEF', 'inflectional'}
[-e]            {'PHI', 'LANG:IT', 'PHI:PER:3', 'PHI:NUM:SG', 'PHI:DET:DEF', 'inflectional'}
[-iamo]         {'PHI', 'LANG:IT', 'inflectional', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:PL'}
[-te]           {'PHI:PER:2', 'PHI', 'LANG:IT', 'inflectional', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:PL'}
[-no]           {'PHI', 'LANG:IT', 'PHI:PER:3', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:PL'}
[-nom]          {'LANG:EN', 'NOM', 'TAIL:FIN,ARG,VAL', 'adjoinable', 'inflectional'}
[-par]          {'TAIL:ARG,-VAL', 'LANG:FI', 'adjoinable', 'inflectional', 'PAR'}
[-gen]          {'LANG:EN', '-float', 'TAIL:INF,ARG', 'GEN', 'inflectional'}
gen             {'LANG:EN', '-float', 'TAIL:INF,ARG', 'GEN', 'inflectional'}
[-n_acc]        {'n-ACC', 'TAIL:PHI', 'LANG:FI', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable', 'inflectional', 'TAIL:*POL:NEG'}
[-t_acc]        {'inflectional', 'LANG:FI', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable', 't-ACC', 'TAIL:*POL:NEG'}
[-0_acc]        {'0_ACC', 'LANG:FI', 'TAIL:*PHI', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable', 'inflectional', 'TAIL:*POL:NEG'}
asp             {'LANG:EN', 'ASP:BOUNDED', 'inflectional'}
a'              {'a', 'PF:a', 'LF:A', 'LANG:X'}
b'              {'b', 'LANG:X', 'PF:b', 'LF:B'}
b''             {'LANG:EN', 'PF:b', 'b', '-COMP:c', 'LF:B'}
c''             {'LANG:EN', 'LF:C', 'PF:c', 'SPEC:a', 'c'}
c'              {'LANG:X', 'PF:c', 'LF:C', 'c'}
d'              {'LANG:', 'LF:D', 'PF:d', 'd'}
a''             ['LANG:EN']
x'              {'LF:X', 'PF:x', 'x', 'LANG:X'}
y'              {'LF:Y', 'y', 'PF:y', 'LANG:X'}
z'              {'PF:x', 'LF:Z', 'z', 'LANG:X'}
John'           {'LF:John', 'PF:John', "N'", 'LANG:X'}
admires'        {"V'", 'PF:admires', 'LF:admires', 'LANG:X'}
admires''       {'SPEC:D', 'LF:admires', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:V', 'PF:admires', '-VAL', 'V', 'SPEC:TO/inf', 'ASP', '-COMP:v', 'PHI:DET:_'}
Mary'           {'LF:mary', 'LANG:X', "N'", 'PF:Mary'}
T/fin           {'-COMP:INF', 'SPEC:D', '-SPEC:Neg', 'PHI:PER:_', 'PHI:NUM:_', '-SPEC:V', 'VAL', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', 'PF:T', 'LF:T', '!COMP:*', 'COMP:v', 'T/fin', 'COMP:V', 'SPEC:*', '-SPEC:N', 'PHI:GEN:_', 'ARG', 'PHI:DET:_', '-SPEC:T/fin', '-SPEC:TO/inf', '!SPEC:D', '-SPEC:C', '!PROBE:V', 'SPEC:TO/inf', '-SPEC:v', 'FIN', '-SPEC:C/fin', 'T', 'COMP:T/prt'}
v               {'ARG', 'LF:v', 'SPEC:D', 'PHI:DET:_', 'PHI:PER:_', '-VAL', 'PHI:NUM:_', 'LANG:EN', '!PROBE:V', '!COMP:*', 'v', 'ASP', 'PF:v', 'COMP:V', 'PHI:GEN:_', '-SPEC:N'}
C/fin           {'-ARG', 'COMP:Neg/fin', 'VAL', 'LANG:EN', '-COMP:T/prt', 'SPEC:*', '!COMP:*', '-SPEC:N', 'PF:C', '-SPEC:T/fin', '-COMP:C/fin', '!PROBE:FIN', 'C/fin', 'C', 'FIN', 'LF:C/fin', 'COMP:T/fin', '-SPEC:C/fin'}
T               {'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', '-SPEC:V', 'VAL', 'LANG:EN', '-SPEC:FORCE', 'PF:T', 'LF:T', '!COMP:*', 'COMP:v', 'COMP:V', '-COMP:NEG', 'SPEC:*', '-SPEC:N', 'PHI:GEN:_', 'ARG', '-SPEC:T/fin', '!PROBE:V', 'FIN', 'PHI:DET:_', 'T', 'COMP:T/prt'}
T/prt           {'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', '-SPEC:V', 'VAL', 'LANG:EN', '-SPEC:FORCE', 'SPEC:*', '!COMP:*', 'COMP:v', '-COMP:NEG', 'COMP:V', '-SPEC:N', 'PHI:GEN:_', 'ARG', '-SPEC:T/fin', 'LF:T/prt', 'T/prt', 'PF:T/prt', '!PROBE:V', 'FIN', 'PHI:DET:_', 'COMP:D', 'T', 'COMP:T/prt'}
a0              {'A', 'adjoinable', '-SPEC:D', 'LANG:EN', 'TAIL:D', '-SPEC:A', '-adjoinable', 'PF:A', 'LF:A', 'COMP:0'}
n               {'-SPEC:ADV', '-SPEC:V', 'VAL', '-SPEC:FORCE', '-SPEC:uWH', '-SPEC:INF', 'SPEC:*', 'COMP:V', 'COMP:P', 'ARG', 'COMP:C', '-COMP:V', '-SPEC:T/fin', 'INF', 'LF:n', '!SPEC:D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P', 'PHI:DET:_', 'COMP:uR', 'PHI:PER:_', 'PHI:NUM:_', '-SPEC:R', 'N', 'LANG:EN', '!COMP:*', 'COMP:v', 'n', '-SPEC:N', 'PHI:GEN:_', '-COMP:N', '!SPEC:*', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', 'PF:n', 'COMP:0', '-COMP:WH'}
impass          {'ARG', 'SPEC:D', 'PHI:DET:_', 'PF:impass', 'PHI:PER:_', '-VAL', 'PHI:NUM:_', 'LF:impass', 'LANG:EN', '!PROBE:V', 'v', 'ASP', '!COMP:*', 'COMP:V', 'PHI:GEN:_', '-SPEC:N'}
cau             {'ARG', 'SPEC:D', 'PHI:DET:_', 'PHI:PER:_', '-VAL', 'PHI:NUM:_', 'PF:Cau', 'LANG:EN', '!PROBE:V', 'v', 'ASP', '!COMP:*', 'COMP:V', 'LF:v/Cause', 'PHI:GEN:_', '-SPEC:N'}
INF             {'-SPEC:T/fin', '-COMP:C/fin', 'INF', 'LF:INF', '-SPEC:V', '-COMP:T/fin', '-COMP:FORCE', 'LANG:EN', '!COMP:*', 'PF:INF', 'COMP:v', 'COMP:V'}
prtcpl          {'SPEC:D', 'PHI:PER:_', 'PHI:NUM:_', '-SPEC:V', 'VAL', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', 'SPEC:*', '!COMP:*', 'COMP:v', 'COMP:V', '-COMP:NEG', '-SPEC:N', 'PHI:GEN:_', 'ARG', '-SPEC:T/fin', 'LF:T/prt', 'INF', '-COMP:C/fin', 'T/prt', '-COMP:FORCE', 'PF:T/prt', '!PROBE:V', 'FIN', 'PHI:DET:_', 'COMP:D', 'T', 'COMP:T/prt'}
TO/inf          {'adjoinable', '-SPEC:V', '-COMP:T/fin', 'PF:TO/inf', 'LANG:EN', '!COMP:*', 'COMP:v', 'COMP:V', 'TO/inf', '-SPEC:T/fin', '-COMP:C/fin', 'INF', '?ARG', '-VAL', '-COMP:FORCE', '-SPEC:v', 'LF:TO/inf', '!COMP:V'}
A/inf           {'-SPEC:V', '-COMP:T/fin', 'PF:A/inf', 'LF:A/inf', 'LANG:EN', 'SPEC:*', '!COMP:*', 'COMP:v', '?VAL', 'COMP:V', '-SPEC:T/fin', '-COMP:C/fin', 'INF', '?ARG', '-SPEC:Neg/fin', '-COMP:FORCE', 'A/inf'}
ARE/inf         {'ARE/inf', '-SPEC:V', 'VAL', '-COMP:T/fin', 'LANG:EN', 'SPEC:*', '!COMP:*', 'COMP:v', 'COMP:V', 'LF:ARE/inf', '-SPEC:T/fin', '-COMP:C/fin', 'INF', '?ARG', 'PF:are', '-COMP:FORCE', '-adjoinable'}
ESSA/inf        {'PF:essa', 'TAIL:T', 'adjoinable', '-SPEC:V', '-COMP:T/fin', 'LANG:EN', '-SPEC:FORCE', 'SPEC:*', '!COMP:*', '?VAL', 'COMP:v', 'COMP:V', 'ADV', '-SPEC:N', 'ESSA/inf', '-SPEC:T/fin', '-COMP:C/fin', 'INF', '?ARG', '-SPEC:Neg/fin', '-COMP:FORCE', 'LF:while'}
TUA/inf         {'TAIL:T', 'PHI:PER:_', 'adjoinable', '-SPEC:V', 'VAL', '-COMP:T/fin', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', 'SPEC:*', 'PF:tua', 'TUA/inf', '!COMP:*', 'COMP:v', 'ADV', 'COMP:V', '-SPEC:N', 'PHI:GEN:_', 'ARG', '!SPEC:*', '-SPEC:T/fin', '-COMP:C/fin', 'INF', '-SPEC:Neg/fin', '-COMP:FORCE', 'LF:after', 'PHI:DET:_'}
VA/inf          {'PHI:PER:_', 'PHI:NUM:_', '-SPEC:V', 'VAL', '-COMP:T/fin', 'PF:vAn', 'LANG:EN', 'SPEC:*', '!COMP:*', 'COMP:v', 'COMP:V', 'VA/inf', '-SPEC:N', 'PHI:GEN:_', 'ARG', '!SPEC:*', '-SPEC:T/fin', '-COMP:C/fin', 'INF', '-COMP:FORCE', 'LF:VA', 'PHI:DET:_'}
MA/ssa          {'PHI:PER:_', 'adjoinable', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', 'MA/inf', 'COMP:v', 'TAIL:V', 'COMP:V', 'ADV', '-SPEC:N', 'PHI:GEN:_', 'ARG', '-SPEC:*', '-SPEC:T/fin', '-VAL', '-SPEC:Neg/fin', 'LF:in_doing', 'PF:massa', 'PHI:DET:_'}
MA/tta          {'ARG', '-SPEC:T/fin', 'TAIL:T', '-VAL', 'adjoinable', '-SPEC:Neg/fin', 'LF:without_doing', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:GEN:_', 'LANG:EN', '-SPEC:FORCE', 'MA/inf', 'PF:matta', 'PHI:DET:_', 'ADV', '-SPEC:N'}
MA/lla          {'-SPEC:FORCE', 'COMP:V', 'ARG', '-SPEC:T/fin', '-VAL', '-SPEC:Neg/fin', 'PHI:DET:_', 'TAIL:T', 'PHI:PER:_', 'adjoinable', 'PHI:NUM:_', 'LANG:EN', 'MA/inf', 'COMP:v', 'ADV', 'PHI:GEN:_', '-SPEC:N', 'PF:malla', 'LF:by_doing'}
MA/inf          {'PF:maan', '-SPEC:FORCE', 'COMP:V', 'TAIL:V', 'ARG', '-SPEC:T/fin', '-VAL', '-SPEC:Neg/fin', 'PHI:DET:_', 'PHI:PER:_', 'adjoinable', 'PHI:NUM:_', 'LANG:EN', 'MA/inf', 'COMP:v', 'ADV', 'PHI:GEN:_', 'LF:to_do', '-SPEC:N'}
E/inf           {'-ARG', 'LF:by', '-SPEC:T/fin', 'PF:en', 'TAIL:T', '-VAL', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:FORCE', 'SPEC:*', 'LANG:FI', 'ADV', '-SPEC:N'}
BE-             {'-ARG', 'SPEC:D', 'LF:BE', 'PF:BE', '-COMP:T/fin', 'LANG:EN', 'COPULA', '-SPEC:FORCE', '!COMP:*', 'COMP:P', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-COMP:V', '-SPEC:T/fin', '-VAL', 'V', 'SPEC:TO/inf', 'ASP', '-COMP:v', 'COMP:T/prt'}
D               {'-ARG', '-COMP:uR', 'OP', 'adjoinable', '-SPEC:V', '-COMP:T/fin', 'LANG:EN', 'PF:D', 'LF:D', '!COMP:*', '-SPEC:INF', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:C', 'D', '!PROBE:N', 'COMP:N', '-SPEC:P'}
D/rel           {'-ARG', '-COMP:uR', 'OP', 'adjoinable', '-SPEC:V', 'OP:REL', '-COMP:T/fin', 'LANG:EN', 'D/rel', '-SPEC:INF', '!COMP:*', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:C', 'PF:D/rel', 'OP:_', 'D', '!PROBE:N', 'LF:D/rel', 'COMP:N', '-SPEC:P'}
P               {'-SPEC:iR', '-SPEC:ADV', 'PHI:PER:_', 'adjoinable', '-SPEC:V', '-COMP:T/fin', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', 'P', '-SPEC:INF', '!COMP:*', '-SPEC:N', 'PHI:GEN:_', 'ARG', '-COMP:N', '-SPEC:*', 'PHI:DET:_', '-SPEC:T/fin', '-VAL', 'PF:P', '-SPEC:iWH', '-SPEC:Neg/fin', 'LF:P', '-SPEC:C', '-SPEC:v', '-float', '-COMP:ADV', '-SPEC:C/fin', 'COMP:D', '-COMP:uWH', '-SPEC:P'}
pro             ['LANG:EN']
pro-            {'-SPEC:ADV', 'COMP:uR', 'LF:pro', '-SPEC:V', '-SPEC:R', 'N', 'PF:(pro)', 'LANG:EN', '-SPEC:FORCE', 'PHI', '-SPEC:uWH', '-SPEC:INF', 'COMP:P', '-SPEC:N', '-COMP:N', '-COMP:WH', 'COMP:C', '-COMP:V', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:A', 'COMP:R', 'COMP:R/D', '-SPEC:C/fin', '-COMP:AUX', '-COMP:v', 'SPEC:A', '-SPEC:P'}
cl              {'LANG:EN', 'LEFT:D,CL', 'CL', 'LEFT:T/fin', 'RIGHT:PRG', 'RIGHT:ARE/inf', 'inflectional'}
inc             {'INCORPORATED', 'LANG:EN', 'inflectional'}
sg              {'PHI:NUM:SG', 'LANG:EN', 'inflectional'}
pl              {'LANG:EN', 'PHI:NUM:PL', 'inflectional'}
1p              {'LANG:EN', 'inflectional', 'PHI:PER:1'}
2p              {'LANG:EN', 'PHI:PER:2', 'inflectional'}
3p              {'LANG:EN', 'PHI:PER:3', 'inflectional'}
def             {'LANG:EN', 'PHI:DET:DEF', 'inflectional'}
indef           {'LANG:EN', 'PHI:DET:INDEF', 'inflectional'}
hum             {'PHI:HUM:HUM', 'LANG:EN', 'inflectional'}
nonhum          {'LANG:EN', 'inflectional', 'PHI:HUM:NONHUM'}
m               {'PHI:GEN:M', 'LANG:EN', 'inflectional'}
f               {'LANG:EN', 'PHI:GEN:F', 'inflectional'}
nom             {'LANG:EN', 'NOM', 'inflectional', 'TAIL:FIN,!COMP:*,VAL'}
acc             {'ACC', 'LANG:EN', 'TAIL:v', 'inflectional'}
dat             {'LANG:EN', 'TAIL:v', 'inflectional', 'DAT'}
uC/op           {'uC/op', 'LANG:EN', 'inflectional'}
wh              {'OP:WH', 'LANG:EN', 'OP:_', 'inflectional'}
wh_             {'LANG:EN', 'FORCE:OP:WH', 'OP:_', 'OP', 'inflectional'}
top             {'LANG:EN', 'OP:TOP', 'inflectional'}
foc             {'LANG:EN', 'inflectional', 'OP:FOC'}
C/op            {'LANG:EN', 'OP:C/OP', 'inflectional'}
rel             {'LANG:EN', 'SPEC:D', 'OP:_', 'inflectional', '-COMP:C/fin', 'adjoinable', 'OP:REL'}
Q               {'OP:WH', 'OP:Q', 'LANG:EN', 'OP', 'inflectional'}
