ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'-SPEC:V', '!COMP:*', '-COMP:N', 'adjoinable', '-ARG', 'P', '-SPEC:ADV', '-VAL', 'PF:a', 'COMP:ARE/inf', '-SPEC:C/fin', '-SPEC:iR', '-SPEC:*', '-SPEC:C', '-SPEC:FORCE', 'COMP:D', 'TAIL:V', '-SPEC:T/fin', 'LF:to', '-COMP:T/fin', '-COMP:uWH', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', 'LANG:IT', '-SPEC:iWH', '-SPEC:v', '-COMP:ADV', '-SPEC:INF'}
a_D             {'!COMP:*', '-SPEC:V', 'D', 'adjoinable', '-ARG', '-SPEC:D', '!PROBE:N', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:C', 'LF:D', 'LANG:EN', 'COMP:N', 'OP', '-SPEC:T/fin', '-COMP:D', 'PF:D', '-COMP:T/fin', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', '-SPEC:INF'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-COMP:Neg', '!COMP:*', '-COMP:N', 'PHI:GEN:_', 'PHI:NUM:_', 'PF:admire', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', 'LF:admire', '-COMP:v', 'COMP:D', 'LANG:EN', 'PHI:DET:_', '-COMP:P', '-SPEC:Neg', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'CLASS:TR', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
admire*         ['LANG:EN']
T/fin*          {'LANG:EN', '!SPEC:*', '-VAL', "PF:T/fin'", 'NO_NUMBER', 'NO_DET', 'LF:T', 'CAT:T/fin'}
v*              {'LF:v', 'NO_NUMBER', 'LANG:EN', 'NO_DET', 'PF:v', '-VAL', 'CAT:v'}
admire**        ['LANG:EN']
T/fin**         {'LANG:EN', 'NO_PERSON', '!SPEC:*', '-VAL', 'NO_NUMBER', 'NO_DET', 'LF:T', 'CAT:T/fin', 'PHI:PER:3', "PF:T/fin''"}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'-COMP:N', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'PF:adora', 'ASP', 'V', '-SPEC:FORCE', 'LF:admire', '-COMP:v', 'COMP:D', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'LANG:IT', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
antaa           ['LANG:FI']
anta-           {'!COMP:*', '-COMP:N', 'PHI:NUM:_', 'CLASS:DITR', '-VAL', '-COMP:FIN', 'ASP', 'PHI:PER:_', 'ASP:BOUNDED', 'V', '-SPEC:FORCE', 'SPEC:D', 'LF:give', '-COMP:v', 'LANG:FI', 'COMP:D', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', '+SEM:directional', 'PF:antaa', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'-COMP:N', 'PF:ask', 'LF:ask', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'SEM:internal', 'COMP:D', 'LANG:EN', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
ask-            {'-COMP:N', 'PF:ask', 'LF:ask', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'SEM:internal', 'COMP:D', 'LANG:EN', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'LF:key', 'COMP:uR', '-SPEC:FORCE', '-SEM:directional', '-COMP:v', 'LANG:FI', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', 'PF:avain', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-SEM:directional', '-COMP:v', 'LANG:FI', 'PF:auto', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', 'LF:car', '-SPEC:P', '-COMP:V', '-SPEC:N', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
city            {'-SPEC:V', '-SPEC:R', 'PF:city', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'LF:city', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
che             ['LANG:IT']
che-            {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PHI_N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'PF:che', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', '-COMP:*', 'LANG:IT', 'LF:who', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
chiamato        ['LANG:IT']
chiamata-       {'-COMP:N', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', 'PF:chiamato', 'LF:called', '-COMP:v', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'LANG:IT', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
danno           {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', 'PF:danno', '-SPEC:uWH', '-SPEC:C/fin', 'LF:damage', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'LANG:IT', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'-COMP:N', 'PHI:GEN:_', 'PHI:NUM:_', 'PF:detest', 'LF:detest', '-VAL', 'COMP:ARE/inf', 'ASP', 'PHI:PER:_', 'V', '-SPEC:FORCE', '-COMP:v', 'SEM:internal', 'COMP:D', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'LANG:IT', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
devono          ['LANG:EN']
deva-           {'-COMP:N', 'LF:must', 'PHI:GEN:_', '-ASP', 'PHI:NUM:_', '-VAL', 'COMP:ARE/inf', 'PHI:PER:_', 'V', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'SEM:internal', 'PF:deva', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'LANG:IT', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
di              {'-SPEC:V', '!COMP:*', '-adjoinable', '-COMP:N', '-SPEC:ADV', 'P', 'PF:di', 'PHI:NUM:_', '-VAL', '-SPEC:C/fin', 'PHI:PER:_', '-SPEC:iR', '-SPEC:C', '-SPEC:FORCE', 'SPEC:*', 'LANG:FI', 'COMP:D', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', '-COMP:T/fin', '-COMP:uWH', '-SPEC:Neg/fin', 'LF:of', '-SPEC:N', '-SPEC:P', '-SPEC:v', '-SPEC:iWH', '-COMP:ADV', '-SPEC:INF'}
does            {'-SPEC:V', '!COMP:*', 'PHI:GEN:_', 'PHI:NUM:_', 'LF:does', '-SPEC:C/fin', 'T', 'PHI:PER:_', '-SPEC:FORCE', 'COMP:Neg', 'PHI:PER:3', 'PHI:GEN:F', 'T/fin', 'SPEC:D', 'SPEC:*', 'PF:does', 'LANG:EN', 'PHI:DET:_', 'COMP:V', 'VAL', '-SPEC:T/fin', '-SPEC:Neg', 'ARG', 'PHI:GEN:M', 'PHI:NUM:SG', '-COMP:INF', 'FIN', 'SPEC:TO/inf', '-COMP:T/fin', 'COMP:T/prt', '-SPEC:N', '-SPEC:v', 'COMP:v', '-SPEC:TO/inf', '!SPEC:D', '!PROBE:V'}
does_C          ['LANG:EN']
does-           {'-SPEC:V', '!COMP:*', 'PHI:GEN:_', 'PHI:NUM:_', 'LF:does', '-SPEC:C/fin', 'T', 'PHI:PER:_', '-SPEC:FORCE', 'COMP:Neg', 'PHI:PER:3', 'PHI:GEN:F', 'T/fin', 'SPEC:D', 'SPEC:*', 'PF:does', 'LANG:EN', 'PHI:DET:_', 'COMP:V', 'VAL', '-SPEC:T/fin', '-SPEC:Neg', 'ARG', 'PHI:GEN:M', 'PHI:NUM:SG', '-COMP:INF', 'FIN', 'SPEC:TO/inf', '-COMP:T/fin', 'COMP:T/prt', '-SPEC:N', '-SPEC:v', 'COMP:v', '-SPEC:TO/inf', '!SPEC:D', '!PROBE:V'}
dorme           ['LANG:IT']
dorme-          {'-COMP:N', 'PHI:GEN:_', 'PF:dorme', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', '!SPEC:D', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', 'PHI:DET:_', '-SPEC:T/fin', 'LF:sleep', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'!COMP:*', 'PHI:NUM:_', 'POL:NEG', '-SPEC:T', 'PHI:PER:_', '!COMP:T', 'NEG', 'SPEC:*', 'LANG:FI', 'SEM:internal', 'PHI:DET:_', 'VAL', '-SPEC:T/fin', 'ARG', '!SPEC:*', 'FIN', 'PF:ei', 'LF:neg', 'COMP:T/prt', '%SPEC:INF', 'Neg/fin'}
e-              {'!COMP:*', 'PHI:NUM:_', 'POL:NEG', '-SPEC:T', 'PHI:PER:_', '!COMP:T', 'NEG', 'SPEC:*', 'LANG:FI', 'SEM:internal', 'PHI:DET:_', 'VAL', '-SPEC:T/fin', 'ARG', '!SPEC:*', 'FIN', 'PF:ei', 'LF:neg', 'COMP:T/prt', '%SPEC:INF', 'Neg/fin'}
elaa            ['LANG:FI']
ela-            {'-COMP:N', 'PHI:NUM:_', '-VAL', '-COMP:MA/inf', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', 'PF:elaa', 'SPEC:D', '-COMP:v', 'LANG:FI', 'PHI:DET:_', 'CLASS:INTR', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'LF:live', '-COMP:V', 'SPEC:P', 'COMP:P', 'SPEC:ADV', '-COMP:D'}
etsii           ['LANG:FI']
etsi-           {'-COMP:N', 'PHI:NUM:_', 'LF:search', '-VAL', 'PHI:PER:_', 'PF:etsi', 'ASP', 'V', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'COMP:D', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', '!COMP:D', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
etta            {'!COMP:*', 'LANG:FI', '-ARG', 'FORCE', '!PROBE:T/fin', '-VAL', 'FIN', 'LF:that', '-SPEC:*', 'PF:etta', 'COMP:T/fin', 'COMP:C/fin'}
flow'           {'-COMP:N', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', 'PF:flow', 'SPEC:D', '-COMP:v', 'LANG:EN', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'LF:flow', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
from            {'TAIL:V,+SEM:directional', '-SPEC:V', '!COMP:*', '-COMP:N', 'adjoinable', '-SPEC:ADV', 'P', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', '-SPEC:C/fin', 'PHI:PER:_', '-SPEC:iR', '-SPEC:*', '-SPEC:C', '-SPEC:FORCE', '-float', 'LANG:EN', 'COMP:D', 'PHI:DET:_', '-SPEC:T/fin', 'PF:from', 'ARG', 'LF:from', '-COMP:uWH', '-COMP:T/fin', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', '-SPEC:v', '-SPEC:iWH', '-COMP:ADV', '-SPEC:INF'}
gave            ['LANG:EN']
give-           {'!COMP:*', '-COMP:N', 'PHI:GEN:_', 'PHI:NUM:_', 'CLASS:DITR', '-VAL', '-COMP:FIN', 'ASP', 'PHI:PER:_', 'V', '-SPEC:FORCE', 'SPEC:D', 'LF:give', '-COMP:v', 'LANG:EN', 'COMP:D', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PF:give', '-COMP:V', '+SEM:directional', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-SEM:directional', '-COMP:v', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', 'PF:Giuseppe', '-COMP:WH', '-SPEC:P', 'LF:Giuseppe', '-COMP:V', 'LANG:IT', '-SPEC:N', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'!COMP:*', '-COMP:N', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'ASP:BOUNDED', '-SPEC:*', 'LF:want', 'V', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'SEM:internal', 'COMP:D', 'COMP:A/inf', 'PHI:DET:_', '-COMP:P', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'PF:haluaa', 'CLASS:TR', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
hairitsee       ['LANG:FI']
hairitse-       {'-COMP:N', 'PHI:NUM:_', '-VAL', '-COMP:FIN', 'ASP', 'PHI:PER:_', 'V', '-SPEC:FORCE', 'SPEC:D', 'PF:hairitsee', '-COMP:v', 'LANG:FI', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', '!COMP:D', 'LF:disturb', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'-COMP:N', 'COMP:T', 'PHI:GEN:_', '-ASP', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'PF:ha', 'V', 'LF:have', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'SPEC:*', 'SEM:internal', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'LANG:IT', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'-COMP:N', 'LF:disappear', 'PHI:NUM:_', '-VAL', '-COMP:MA/inf', 'PHI:PER:_', 'ASP', 'V', 'PF:havia', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'LANG:FI', 'PHI:DET:_', 'CLASS:INTR', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'SPEC:P', 'COMP:P', 'SPEC:ADV', '-COMP:D'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'!COMP:*', '-COMP:N', 'PHI:NUM:_', '-VAL', '-COMP:FIN', 'ASP', 'PHI:PER:_', 'V', '-SPEC:FORCE', 'LF:admire', '-COMP:v', 'LANG:FI', 'COMP:D', 'PHI:DET:_', 'PF:ihaile-', '-COMP:P', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', '!COMP:D', 'CLASS:TR', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
il              {'!COMP:*', '-SPEC:V', 'LF:the', 'D', 'adjoinable', '-ARG', '-SPEC:D', '!PROBE:N', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:C', 'PF:il', 'COMP:N', 'OP', '-SPEC:T/fin', '-COMP:D', '-COMP:T/fin', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', 'LANG:IT', '-SPEC:INF'}
i               {'!COMP:*', '-SPEC:V', 'LF:the', 'D', 'adjoinable', '-ARG', '-SPEC:D', '!PROBE:N', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:C', 'PF:il', 'COMP:N', 'OP', '-SPEC:T/fin', '-COMP:D', '-COMP:T/fin', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', 'LANG:IT', '-SPEC:INF'}
in              {'-SPEC:V', '!COMP:*', '-COMP:N', 'adjoinable', '-SPEC:ADV', 'P', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', '-SPEC:C/fin', 'PHI:PER:_', '-SPEC:iR', '-SPEC:C', '-SPEC:FORCE', 'COMP:D', 'PHI:DET:_', 'LF:in', '-SPEC:T/fin', 'ARG', '-COMP:T/fin', '-COMP:uWH', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', 'LANG:IT', '-SPEC:iWH', '-SPEC:v', 'PF:in', '-COMP:ADV', '-SPEC:INF'}
infermieri      {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', 'LF:nurses', '-COMP:v', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', 'PF:infermieri', '-SPEC:P', '-SPEC:N', 'LANG:IT', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
is              ['LANG:EN']
be-             {'!COMP:*', 'LF:be', '-COMP:N', '-ARG', '-VAL', 'ASP', 'V', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'LANG:EN', '-SPEC:T/fin', 'SPEC:TO/inf', 'PF:be', '-COMP:T/fin', '-COMP:V', '-COMP:TO/inf', 'SPEC:P', 'COPULA', 'COMP:P', 'SPEC:ADV'}
istuuko         ['LANG:FI']
istuu-          {'-COMP:N', 'PHI:NUM:_', 'PF:istuu', '-VAL', '-COMP:MA/inf', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'LANG:FI', 'LF:sit', 'PHI:DET:_', 'CLASS:INTR', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'SPEC:P', 'COMP:P', 'SPEC:ADV', '-COMP:D'}
John            ['LANG:EN']
John-           {'-SPEC:V', '-SPEC:R', '-adjoinable', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'PF:John', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-SEM:directional', '-COMP:v', 'LF:John', 'LANG:EN', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', 'PF:Jukka', '-SPEC:FORCE', '-SEM:directional', '-COMP:v', 'LANG:FI', 'SPEC:A', 'LF:Jukka', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
juosten         ['LANG:FI']
juokse-         {'-COMP:N', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', 'PF:juokse-', '-SPEC:FORCE', 'SPEC:ADV', '-COMP:v', 'LANG:FI', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'SPEC:P', 'COMP:P', 'LF:run'}
istuu           ['LANG:FI']
istu-           {'-COMP:N', 'PHI:NUM:_', 'PF:istuu', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'LF:sit', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
kaksi           {'SPEC:*', 'LANG:FI', 'PHI:DET:_', 'COMP:N', 'PHI:NUM:_', 'ARG', 'PHI:NUM:SG', '-VAL', 'PHI:PER:_', 'TAIL:ARG,VAL,FIN', 'LF:two', 'PF:kaksi', 'COMP:n', 'NUM'}
kaksi           {'SPEC:*', 'LANG:EN', 'COMP:N', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'LF:two', 'PF:kaksi', 'COMP:n', 'NUM'}
kaksi_1         {'SPEC:*', 'LANG:FI', 'PHI:DET:_', 'COMP:N', 'PHI:NUM:_', 'ARG', 'PHI:NUM:SG', '-VAL', 'PHI:PER:_', 'TAIL:ARG,VAL,FIN', 'LF:two', 'PF:kaksi', 'COMP:n', 'NUM'}
kaksi_2         {'SPEC:*', 'LANG:EN', 'COMP:N', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'LF:two', 'PF:kaksi', 'COMP:n', 'NUM'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'SPEC:*', 'LANG:FI', 'COMP:N', 'LF:two', 'PF:kaksi', 'COMP:n', 'NUM'}
kaupunkia       ['LANG:EN']
kaupunki        {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'SPEC:A', '-COMP:P', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'LF:city', 'COMP:R/D', '-SPEC:INF', 'PF:kaupunki'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'-COMP:N', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', '!COMP:A/inf', '-COMP:v', 'LANG:FI', 'PHI:DET:_', 'LF:order', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'SEM:external', 'PF:kaske', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'PF:kello', 'COMP:uR', '-SPEC:FORCE', 'LF:watch', '-COMP:v', 'LANG:FI', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
kello0-         {'LANG:FI', 'PF:kello', '0', '2SPEC', 'LF:watch', 'SPEC:D'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', 'PF:key', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'LF:key', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'LF:book', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-SEM:directional', '-COMP:v', 'LANG:FI', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'PF:kirja', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
kohti           {'-SPEC:V', '!COMP:*', '-COMP:N', 'adjoinable', '-SPEC:ADV', 'P', 'PHI:NUM:_', '-VAL', '-SPEC:C/fin', 'PHI:PER:_', 'PF:kohti', '-SPEC:iR', '-SPEC:C', 'LF:towards', '-SPEC:FORCE', 'SPEC:*', 'LANG:FI', 'COMP:D', 'TAIL:V', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', '-COMP:T/fin', '-COMP:uWH', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', '-SPEC:v', '-SPEC:iWH', '-COMP:ADV', '-SPEC:INF'}
koko            {'!COMP:*', '-SPEC:V', 'D', 'adjoinable', '-ARG', '-SPEC:D', '!PROBE:N', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:C', 'LANG:FI', 'COMP:N', 'OP', 'LF:all', '-SPEC:T/fin', '-COMP:D', 'PF:koko', '-COMP:T/fin', '-SPEC:Neg/fin', 'TAIL:T', '-SPEC:N', '-SPEC:P', '-SPEC:INF'}
kuka            ['LANG:FI']
kuka-           {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'SPEC:A', 'PF:kuka', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'PHI', 'LF:who', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
kuorsaa-        {'-COMP:N', 'PHI:NUM:_', 'PF:kuorsaa', '-VAL', 'PHI:PER:_', 'LF:snore', 'ASP', 'V', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:WH', '-COMP:V', 'SPEC:P', 'COMP:P', 'SPEC:ADV', '-COMP:D'}
kuorsaamalla    ['LANG:FI']
lahella         {'-SPEC:V', '-COMP:FORCE', '-COMP:N', 'PHI:PER:_', 'SPEC:*', 'COMP:D', 'PHI:DET:_', 'COMP:V', '-COMP:uWH', '-SPEC:P', '-SPEC:iWH', '-SPEC:INF', '!COMP:*', 'adjoinable', '-SPEC:ADV', 'P', 'PF:lahella', 'PHI:NUM:_', '-SPEC:C/fin', 'INF', '-SPEC:iR', '-SPEC:C', '-SPEC:FORCE', 'LANG:FI', 'VAL', '-SPEC:T/fin', '!SPEC:*', 'ARG', '-COMP:T/fin', '-SPEC:Neg/fin', '-COMP:C/fin', '-SPEC:N', 'LF:near', '-SPEC:v', 'COMP:v', '-COMP:ADV', '!SPEC:D'}
lahella         {'!COMP:*', '-SPEC:V', '-COMP:N', 'adjoinable', '-SPEC:ADV', 'P', 'PF:lahella', '-SPEC:iWH', 'PHI:NUM:_', '-VAL', '-SPEC:C/fin', 'PHI:PER:_', '-SPEC:iR', '-SPEC:C', '-SPEC:FORCE', 'SPEC:*', 'LANG:FI', 'COMP:D', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', '-COMP:T/fin', '-COMP:uWH', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', '!COMP:D', 'LF:near', '-SPEC:v', '-COMP:ADV', '-SPEC:INF'}
lahella_1       {'!COMP:*', '-SPEC:V', '-COMP:N', 'adjoinable', '-SPEC:ADV', 'P', 'PF:lahella', '-SPEC:iWH', 'PHI:NUM:_', '-VAL', '-SPEC:C/fin', 'PHI:PER:_', '-SPEC:iR', '-SPEC:C', '-SPEC:FORCE', 'SPEC:*', 'LANG:FI', 'COMP:D', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', '-COMP:T/fin', '-COMP:uWH', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', '!COMP:D', 'LF:near', '-SPEC:v', '-COMP:ADV', '-SPEC:INF'}
lahella_2       {'-SPEC:V', '-COMP:FORCE', '-COMP:N', 'PHI:PER:_', 'SPEC:*', 'COMP:D', 'PHI:DET:_', 'COMP:V', '-COMP:uWH', '-SPEC:P', '-SPEC:iWH', '-SPEC:INF', '!COMP:*', 'adjoinable', '-SPEC:ADV', 'P', 'PF:lahella', 'PHI:NUM:_', '-SPEC:C/fin', 'INF', '-SPEC:iR', '-SPEC:C', '-SPEC:FORCE', 'LANG:FI', 'VAL', '-SPEC:T/fin', '!SPEC:*', 'ARG', '-COMP:T/fin', '-SPEC:Neg/fin', '-COMP:C/fin', '-SPEC:N', 'LF:near', '-SPEC:v', 'COMP:v', '-COMP:ADV', '!SPEC:D'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'COMP:PP', '-COMP:N', 'PHI:NUM:_', '-VAL', '-COMP:MA/inf', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'LANG:FI', 'PHI:DET:_', 'CLASS:INTR', '-SPEC:T/fin', 'ARG', 'LF:leave', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'PF:lahtea', 'SPEC:P', 'COMP:P', 'SPEC:ADV', '-COMP:D'}
lavano          ['LANG:IT']
lava-           {'!COMP:*', '-COMP:N', 'PF:lava', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', '-COMP:v', 'COMP:D', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'LANG:IT', 'LF:wash', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'!COMP:*', '-SPEC:V', 'PF:le', 'D', 'adjoinable', '-ARG', '-SPEC:D', '!PROBE:N', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:C', 'LF:D', 'COMP:N', 'OP', '-SPEC:T/fin', '-COMP:D', '-COMP:T/fin', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', 'LANG:IT', '-SPEC:INF'}
leaves          ['LANG:EN']
leave           {'-COMP:N', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', '!SPEC:D', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'PF:leave', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'SPEC:P', 'COMP:P', 'SPEC:ADV', 'LF:leave'}
leave-          {'-COMP:N', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', 'SPEC:ADV', '-COMP:v', 'LANG:EN', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'PF:leave', '-COMP:T/fin', 'SPEC:TO/inf', '-COMP:V', 'SPEC:P', 'COMP:P', '!SPEC:D', 'LF:leave'}
like-           {'-COMP:N', 'PHI:GEN:_', 'PHI:NUM:_', 'LF:like', 'PF:like', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', '!COMP:D', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
likes           ['LANG:EN']
like            {'-COMP:N', 'PHI:GEN:_', 'PHI:NUM:_', 'LF:like', 'PF:like', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', '!COMP:D', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
little          ['LANG:EN']
little-         {'LANG:EN', '2SPEC', '0', 'SPEC:D', 'LF:little', 'PF:little-'}
lle             {'TAIL:V,+SEM:directional', '-SPEC:V', '!COMP:*', '-COMP:N', 'adjoinable', '-SPEC:ADV', 'P', 'LF:for', 'PHI:NUM:_', '-VAL', '-SPEC:C/fin', 'PHI:PER:_', '-SPEC:iR', '-SPEC:*', '-SPEC:C', 'PF:P(lle)', '-SPEC:FORCE', 'LANG:FI', 'COMP:D', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', '-COMP:T/fin', '-COMP:uWH', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', '+SEM:directional', '-SPEC:v', '-SPEC:iWH', '-COMP:ADV', '-SPEC:INF'}
lla             {'-SPEC:V', '!COMP:*', '-COMP:N', 'adjoinable', '-SPEC:ADV', 'P', 'PF:P(lla)', 'PHI:NUM:_', '-VAL', '-SPEC:C/fin', 'PHI:PER:_', '-SPEC:iR', '-SPEC:C', '-SPEC:FORCE', 'SPEC:*', 'LANG:FI', 'COMP:D', 'PHI:DET:_', '-SPEC:T/fin', 'LF:by', 'ARG', '-COMP:T/fin', '-COMP:uWH', '-SPEC:Neg/fin', 'TAIL:T', '-SPEC:N', '-SPEC:P', '-SPEC:v', '-SPEC:iWH', 'TAIL:*V', '-COMP:ADV', '-SPEC:INF'}
Luisa           ['LANG:IT']
Luisa-          {'-SPEC:V', '-SPEC:R', 'LF:Luisa', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-SEM:directional', '-COMP:v', 'PF:Luisa', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'LANG:IT', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
lukemalla       ['LANG:FI']
luke-           {'!COMP:*', '-COMP:N', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'COMP:D', 'PHI:DET:_', '-COMP:P', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'LF:read', '-COMP:V', 'PF:luke', 'CLASS:TR', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'!COMP:*', '-COMP:N', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'LF:find', 'ASP:BOUNDED', 'V', 'PF:loyta-', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'COMP:D', 'PHI:DET:_', '-COMP:P', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', '!COMP:D', 'CLASS:TR', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
Mary            ['LANG:EN']
Mary-           {'-SPEC:V', '-SPEC:R', '-adjoinable', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-SEM:directional', 'PF:Mary', '-COMP:v', 'LANG:EN', 'SPEC:A', '-SPEC:T/fin', 'LF:Mary', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-SPEC:V', '-SPEC:R', '-adjoinable', '-COMP:N', '-SPEC:ADV', 'PF:Merja', 'COMP:R', '-COMP:AUX', 'LF:Merja', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-SEM:directional', '-COMP:v', 'LANG:FI', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'SPEC:*', 'LANG:FI', 'adjoinable', '-SPEC:T/fin', 'LF:by', 'PF:malla', '-SPEC:FORCE', '-SPEC:Neg/fin', 'MA/inf', 'TAIL:T', '-SPEC:N', 'COMP:v', 'ADV'}
meren           ['LANG:FI']
mere-           {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'PF:meri', 'LANG:FI', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', 'LF:ocean', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
mistake         {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'LF:mistake', 'COMP:uR', '-SPEC:FORCE', 'PF:mistake', '-COMP:v', 'LANG:EN', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'PF:mika-', 'LF:what', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'!COMP:*', '-COMP:N', 'LANGN:EN', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', '-COMP:v', 'COMP:D', 'PHI:DET:_', 'PF:move', '-COMP:P', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'LF:move', '-COMP:V', '+SEM:directional', 'CLASS:TR', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
mukavasti       ['LANG:EN']
mukava-         {'LANG:FI', 'PF:mukavasti', '2SPEC', 'LF:comfortably', '0', 'SPEC:D'}
must            {'-SPEC:V', '!COMP:*', 'LF:must', 'MODAL', 'PHI:GEN:_', 'PHI:NUM:_', '-SPEC:C/fin', 'T', 'PHI:PER:_', '!SPEC:D', '-SPEC:FORCE', 'COMP:Neg', 'T/fin', 'SPEC:D', 'SPEC:*', 'LANG:EN', 'PHI:DET:_', 'COMP:V', 'VAL', '-SPEC:T/fin', '-SPEC:Neg', 'ARG', '-COMP:INF', 'SPEC:TO/inf', '-COMP:T/fin', 'FIN', 'COMP:T/prt', '-SPEC:N', '-SPEC:v', 'COMP:v', '-SPEC:TO/inf', 'PF:must', '!PROBE:V'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'LF:sell', '!COMP:*', '-COMP:N', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'ASP:BOUNDED', 'V', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'COMP:D', 'PHI:DET:_', '-COMP:P', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'SPEC:P', 'CLASS:TR', 'PF:myy', 'COMP:P', 'SPEC:ADV'}
naki            ['LANG:FI']
nake-           {'!COMP:*', 'LF:see', '-COMP:N', 'PHI:NUM:_', '-VAL', '-COMP:MA/inf', 'PHI:PER:_', 'ASP', 'ASP:BOUNDED', 'V', '-SPEC:FORCE', '-COMP:v', 'PF:nake', 'LANG:FI', 'COMP:D', 'PHI:DET:_', '-COMP:P', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', '-COMP:ESSA/inf', 'CLASS:TR', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
nayttaa         ['LANG:FI']
naytta-         {'LF:seem', '-COMP:N', '-ARG', 'ASP', 'V', '-SPEC:FORCE', 'SPEC:ADV', '-COMP:v', 'LANG:FI', 'SEM:internal', 'VAL', '-SPEC:T/fin', 'SPEC:TO/inf', '-COMP:T/fin', '!COMP:VA/inf', '-COMP:V', 'PF:naytta', 'SPEC:P', 'COMP:P', '!SPEC:D'}
ndo             {'!COMP:*', '-SPEC:V', 'PF:PRG', 'PRG', 'LANG:EN', '-COMP:FORCE', 'VAL', 'COMP:V', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:C/fin', 'INF', 'LF:ing', 'COMP:v', '?ARG'}
ne              {'!COMP:*', '-SPEC:V', 'D', 'adjoinable', '-ARG', '-SPEC:D', '!PROBE:N', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:C', 'PHI:NUM:PL', 'PHI:PER:3', 'LANG:FI', 'COMP:N', 'OP', '-SPEC:T/fin', '-COMP:D', '-COMP:T/fin', '-SPEC:Neg/fin', 'PF:ne', '-SPEC:N', '-SPEC:P', 'LF:those', '-SPEC:INF'}
niiden          ['LANG:EN']
nen             {'TAIL:D', 'LANG:FI', 'SPEC:*', 'adjoinable', '-SPEC:D', 'PF:a', '-SPEC:A', 'LF:ing', 'COMP:0', 'A'}
not             {'SPEC:*', '!COMP:*', 'LANG:EN', 'PHI:DET:_', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:NUM:_', 'ARG', 'LF:not', 'POL:NEG', '-VAL', '-COMP:C', 'PF:not', '-COMP:FIN', 'PHI:PER:_', 'Neg', '-COMP:D'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-COMP:N', 'PHI:NUM:_', '-VAL', '-COMP:MA/inf', 'PHI:PER:_', 'ASP', '-COMP:T', 'V', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'LANG:FI', 'PF:nukku', 'PHI:DET:_', 'CLASS:INTR', '-SPEC:T/fin', 'LF:sleep', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', '-COMP:Neg/fin', 'SPEC:P', 'COMP:P', 'SPEC:ADV', '-COMP:D'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'SPEC:A', '-SPEC:T/fin', 'LF:possessions', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', 'COMP:R/D', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'PF:omaisuuden', 'COMP:P', '-SPEC:INF'}
operatoria      ['LANG:IT']
operatoria-     {'LF:operation', '2SPEC', 'LANG:IT', 'PF:operatoria', '0', 'SPEC:D'}
ostaa           ['LANG:FI']
osta-           {'!COMP:*', '-COMP:N', 'PHI:NUM:_', '-VAL', 'LF:buy', 'PHI:PER:_', 'PF:osta', 'ASP', 'ASP:BOUNDED', 'V', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'COMP:D', 'PHI:DET:_', '-COMP:P', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'CLASS:TR', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'SEM:nonreferential', 'COMP:uR', '-SPEC:FORCE', 'LF:day', '-COMP:v', 'LANG:FI', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', 'PF:paiva', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
Pariisia        ['LANG:FI']
Pariisi-        {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', 'PF:Pariisi', 'LF:Paris', '-COMP:v', 'LANG:FI', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'PF:Pekka', 'COMP:uR', '-SPEC:FORCE', '-SEM:directional', '-COMP:v', 'LANG:FI', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', 'COMP:R/D', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'LF:Pekka', 'COMP:P', '-SPEC:INF'}
pelottaa        ['LANG:FI']
pelkaa-         {'!COMP:*', 'PF:pelkaa', '-COMP:N', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'LF:fear', 'COMP:D', 'PHI:DET:_', '-COMP:P', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'CLASS:TR', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
persuades       ['LANG:EN']
persuade-       {'!COMP:*', '-COMP:N', 'PHI:GEN:_', 'PHI:NUM:_', 'COMP:TO/inf', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', 'PHI:DET:_', '-SPEC:T/fin', 'LF:persuade', 'ARG', 'PF:persuade', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'SEM:external', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
peruuntui       ['LANG:FI']
peruuntu-       {'-COMP:N', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'PF:peruuntui', 'LANG:FI', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'LF:cancelled', '-COMP:V', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'!COMP:*', '-COMP:N', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'ASP:BOUNDED', 'V', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'COMP:D', 'PHI:DET:_', 'PF:pese', '-COMP:P', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'CLASS:TR', 'LF:wash', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
pese-           {'!COMP:*', '-COMP:N', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'COMP:D', 'PHI:DET:_', 'PF:pese', '-COMP:P', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'CLASS:TR', 'LF:wash', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
petardi         {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'LF:firecrackers', 'PF:petardi', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'LANG:IT', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
pieni           ['LANG:FI']
pieni-          {'LANG:FI', 'PF:pieni-', 'LF:small', '2SPEC', '0', 'SPEC:D'}
poikien         ['LANG:FI']
poika-          {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', 'LF:boy', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'PF:poika', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
puhelinta       ['LANG:FI']
puhelin-        {'LANG:FI', '2SPEC', 'LF:phone', '0', 'SPEC:D', 'PF:puhelin'}
punainen        ['LANG:FI']
puna-           {'LF:red', 'LANG:FI', '2SPEC', '0', 'SPEC:D', 'PF:puna-'}
presupposto     {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', '-SPEC:INF', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'LANG:IT', 'PF:presupposto', 'COMP:R/D', 'COMP:P', 'LF:presupposition'}
primary         {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'LF:nurse', 'LANG:IT', 'PF:primary', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
promises        ['LANG:EN']
promise-        {'-COMP:N', 'PF:promise', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'SEM:internal', 'COMP:D', 'LANG:EN', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'LF:promise', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
pyytaa          ['LANG:FI']
pyyta-          {'-COMP:N', 'LF:ask', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PF:pyyda', 'SEM:external', '-COMP:V', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
raukesi         ['LANG:FI']
raukea-         {'-COMP:N', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'LF:terminate', 'V', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'COMP:P', 'SPEC:P', 'PF:raukea', 'SPEC:ADV'}
red             ['LANG:EN']
red-            {'PF:red', 'LF:red', 'LANG:EN', '2SPEC', '0', 'SPEC:D'}
saavuttaa       ['LANG:FI']
saavutta-       {'!COMP:*', '-COMP:N', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'ASP:BOUNDED', 'V', 'PF:saavutta-', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'COMP:D', 'PHI:DET:_', '-COMP:P', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', '!COMP:D', 'LF:reach', 'CLASS:TR', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'-COMP:N', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', 'SPEC:D', 'COMP:FORCE', 'LF:say', '-COMP:v', 'LANG:FI', 'COMP:VA/inf', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'PF:sano-', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
said            ['LANG:EN']
say'            {'-COMP:N', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', 'SPEC:D', 'LF:say', '-COMP:v', 'LANG:EN', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'PF:say', 'SPEC:TO/inf', '-COMP:T/fin', '!COMP:FORCE', '-COMP:V', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
say-            {'-COMP:N', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', 'SPEC:D', 'LF:say', '-COMP:v', 'LANG:EN', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'PF:say', 'SPEC:TO/inf', '-COMP:T/fin', '!COMP:FORCE', '-COMP:V', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
sala            ['LANG:IT']
sala-           {'-SPEC:V', 'PF:sala', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', 'LF:room', '-COMP:v', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'LANG:IT', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
scoppiati       ['LANG:IT']
scoppia-        {'-COMP:N', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', 'PF:scoppia', '-COMP:v', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'LANG:IT', 'LF:explode', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
sen             {'!COMP:*', '-SPEC:V', 'D', 'adjoinable', '-ARG', '-SPEC:D', '!PROBE:N', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:C', 'LF:the/that', 'LANG:FI', 'TAIL:ASP', 'COMP:N', 'TAIL:*POL:NEG', 'OP', '-SPEC:T/fin', '-COMP:D', '-COMP:T/fin', '-SPEC:Neg/fin', 'PF:sen', '-SPEC:N', '-SPEC:P', 'TAIL:PHI', '-SPEC:INF'}
se'             {'!COMP:*', '-SPEC:V', 'D', 'adjoinable', '-ARG', '-SPEC:D', '!PROBE:N', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:C', 'PF:se', 'LF:the/that', 'LANG:FI', 'COMP:N', 'OP', '-SPEC:T/fin', '-COMP:D', '-COMP:T/fin', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', '-SPEC:INF'}
sentenza        {'-SPEC:V', 'PF:sentenza', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', 'LF:sentence', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'LANG:IT', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
Seine           ['LANG:EN']
Seine-          {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'LF:Seine', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', 'PF:Seine', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
sembrano        ['LANG:IT']
sembra-         {'LF:seem', '-COMP:N', '-ARG', '-ASP', 'PF:sembra', '-VAL', 'V', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'LANG:EN', '-SPEC:T/fin', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', '!COMP:ARE/inf', 'SPEC:P', 'COMP:P', 'SPEC:ADV', '-COMP:D'}
sleeps          ['LANG:EN']
sleep           {'-COMP:N', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', '-COMP:MA/inf', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'LANG:EN', 'PHI:DET:_', 'CLASS:INTR', 'PF:sleep', '-SPEC:T/fin', 'LF:sleep', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'SPEC:P', 'COMP:P', 'SPEC:ADV', '-COMP:D'}
sleep-          {'-COMP:N', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', '-COMP:MA/inf', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'LANG:EN', 'PHI:DET:_', 'CLASS:INTR', 'PF:sleep', '-SPEC:T/fin', 'LF:sleep', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'SPEC:P', 'COMP:P', 'SPEC:ADV', '-COMP:D'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'PF:sopimus', '-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', 'LF:agreement', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '!COMP:A/inf', '-COMP:v', 'LANG:FI', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
spinge          ['LANG:IT']
spinge-         {'-COMP:N', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', '-COMP:v', 'PF:spinge', 'PHI:DET:_', '-COMP:P', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'LF:push', '!COMP:D', 'LANG:IT', 'SPEC:P', 'SPEC:ADV'}
ssa             {'-SPEC:V', '!COMP:*', '-COMP:N', 'adjoinable', '-SPEC:ADV', 'P', 'PHI:NUM:_', '-VAL', '-SPEC:C/fin', 'PHI:PER:_', '-SPEC:iR', '-SPEC:C', '-SPEC:FORCE', 'SPEC:*', 'LANG:FI', 'PF:ssa', 'COMP:D', 'TAIL:V', 'PHI:DET:_', 'LF:in', '-SPEC:T/fin', 'ARG', '-COMP:T/fin', '-COMP:uWH', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', 'COMP:n/MA', '-SPEC:iWH', '-SPEC:v', '-COMP:ADV', '-SPEC:INF'}
stanno          ['LANG:IT']
sta-            {'-COMP:N', 'PHI:GEN:_', '-ASP', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'V', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'SEM:internal', 'LANG:EN', 'PHI:DET:_', 'LF:stay', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'COMP:PRG', 'PF:sta', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
sti             {'!COMP:*', 'PF:sti', 'LANG:FI', 'SPEC:*', 'adjoinable', '-ARG', '-SPEC:T/fin', 'LF:by', '-SPEC:Neg/fin', 'TAIL:T', '-SPEC:N', '-SPEC:FORCE', 'ADV'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', 'LF:socks', '-COMP:WH', '-SPEC:P', '-COMP:V', '-SPEC:N', 'PF:sukka-', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
talo            {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', 'LF:house', '-COMP:v', 'LANG:FI', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'COMP:R/D', 'COMP:P', 'PF:talo', '-SPEC:INF'}
tama            ['LANG:EN']
tama-           {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', 'PF:tama', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', 'LF:this', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'PHI', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'-COMP:N', 'MODAL', 'LF:must', '-ASP', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'PF:taytyy', 'V', '-SPEC:FORCE', '!COMP:A/inf', '-COMP:v', 'SPEC:*', 'LANG:FI', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'FIN', '-COMP:V', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
teki            ['LANG:FI']
teke-           {'!COMP:*', '-COMP:N', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'ASP:BOUNDED', 'V', '-SPEC:FORCE', '-COMP:A/inf', '-COMP:v', 'LANG:FI', 'COMP:D', 'PHI:DET:_', '-COMP:P', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'LF:make', '-COMP:V', 'PF:teke', '!COMP:D', 'CLASS:TR', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
that            {'!COMP:*', 'PF:that', 'LANG:EN', '-ARG', 'FORCE', '!PROBE:T/fin', '-VAL', 'FIN', 'LF:that', '-SPEC:*', 'COMP:T/fin', 'COMP:C/fin'}
the             {'!COMP:*', '-SPEC:V', 'LF:the', 'D', 'adjoinable', '-ARG', '-SPEC:D', '!PROBE:N', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:C', 'PHI:DEF:DEF', 'LANG:EN', 'COMP:N', 'OP', '-SPEC:T/fin', '-COMP:D', '-COMP:T/fin', '-SPEC:Neg/fin', 'PF:the', '-SPEC:N', '-SPEC:P', '-SPEC:INF'}
to              {'TAIL:V,+SEM:directional', '-SPEC:V', '!COMP:*', '-COMP:N', 'adjoinable', '-SPEC:ADV', 'P', 'PHI:GEN:_', 'PHI:NUM:_', 'PF:to', '-VAL', '-SPEC:C/fin', 'PHI:PER:_', '-SPEC:iR', '-SPEC:*', '-SPEC:C', '-SPEC:FORCE', '-float', 'LANG:EN', 'COMP:D', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'LF:to', '-COMP:T/fin', '-COMP:uWH', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', '+SEM:directional', '-SPEC:v', '-SPEC:iWH', '-COMP:ADV', '-SPEC:INF'}
to_inf          {'!COMP:*', '-SPEC:V', '-COMP:FORCE', 'PF:TO/inf', 'adjoinable', '-VAL', 'INF', 'LF:TO/inf', 'LANG:EN', 'COMP:V', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:C/fin', '-SPEC:v', 'TO/inf', 'COMP:v', '?ARG'}
towards         {'-SPEC:V', '!COMP:*', '-COMP:N', 'adjoinable', '-SPEC:ADV', 'P', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', '-SPEC:C/fin', 'PHI:PER:_', '-SPEC:iR', '-SPEC:*', '-SPEC:C', 'LF:towards', 'PF:towards', '-SPEC:FORCE', '-float', 'LANG:EN', 'TAIL:V', 'COMP:D', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', '-COMP:T/fin', '-COMP:uWH', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', '-SPEC:v', '-SPEC:iWH', '-COMP:ADV', '-SPEC:INF'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'!COMP:*', '-COMP:N', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', 'LF:nudge', '-COMP:v', 'LANG:FI', 'COMP:D', 'PHI:DET:_', '-COMP:P', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PF:tonaise', '-COMP:V', 'CLASS:TR', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
tta             {'-SPEC:V', '!COMP:*', '-COMP:N', 'adjoinable', '-SPEC:ADV', 'P', 'PHI:NUM:_', '-VAL', '-SPEC:C/fin', 'PHI:PER:_', '-SPEC:iR', 'LF:without', '-SPEC:C', '-SPEC:FORCE', 'ADV', 'PF:tta', 'SPEC:*', 'LANG:FI', 'COMP:D', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', '-COMP:T/fin', '-COMP:uWH', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', 'COMP:n/MA', '-SPEC:iWH', '-SPEC:v', '-COMP:ADV', '-SPEC:INF'}
tries           ['LANG:EN']
try-            {'-COMP:N', 'PHI:GEN:_', 'PHI:NUM:_', 'LF:try', '-VAL', '!COMP:TO/inf', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', 'SPEC:D', 'PF:try', '-COMP:v', 'SEM:internal', 'LANG:EN', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '!COMP:-ARG', '-COMP:T/fin', '-COMP:V', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
verifiche       {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', 'LF:verification', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', 'PF:verifiche', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'LANG:IT', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'-COMP:N', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', 'SPEC:D', '-COMP:v', 'LANG:FI', '!COMP:P', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'LF:flow', 'SPEC:TO/inf', '-COMP:T/fin', 'PF:virtaa', '-COMP:V', 'SPEC:P', 'COMP:P', 'SPEC:ADV', '-COMP:D'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'!COMP:*', '-COMP:N', 'PHI:GEN:_', 'PHI:NUM:_', 'PF:volu', '-VAL', 'PHI:PER:_', 'ASP', '-SPEC:*', 'LF:want', 'V', '-SPEC:FORCE', '-COMP:v', 'SEM:internal', 'LANG:EN', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'!COMP:*', '-COMP:N', 'PHI:GEN:_', 'PHI:NUM:_', 'LF:win', '-VAL', 'PHI:PER:_', 'ASP', 'SEM:achievement', 'PF:voitta', 'ASP:BOUNDED', 'V', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', 'COMP:D', 'PHI:DET:_', '-COMP:P', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'CLASS:TR', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
wants           ['LANG:EN']
want-           {'!COMP:*', 'PF:want', '-COMP:N', 'PHI:GEN:_', 'PHI:NUM:_', 'COMP:TO/inf', '-VAL', 'PHI:PER:_', 'ASP', 'V', 'LF:want', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', 'COMP:D', 'PHI:DET:_', '-COMP:P', '-SPEC:T/fin', 'ARG', '-COMP:T/fin', '-COMP:V', 'CLASS:TR', '-SPEC:TO/inf', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
what            ['LANG:EN']
what-           {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PHI_N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'PF:what', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', '-COMP:*', 'LF:what', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
which           {'!COMP:*', '-SPEC:V', 'LF:which', 'D', 'adjoinable', 'OP:WH', '-ARG', '-SPEC:D', '!PROBE:N', 'PF:which', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:C', 'LANG:EN', 'COMP:N', 'OP', '-SPEC:T/fin', '-COMP:D', '-COMP:T/fin', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', '-SPEC:INF'}
who             ['LANG:EN']
who-            {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PHI_N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', 'PF:who', '-SPEC:P', '-SPEC:N', '-COMP:*', 'LF:who', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
whether         {'!COMP:*', 'PF:whether', '-ARG', 'OP:WH', '!PROBE:T/fin', 'OP:Q', '-VAL', 'LF:whether', '-SPEC:*', 'COMP:C/fin', 'LANG:EN', 'OP', 'FORCE', 'FIN', 'COMP:T/fin', 'Q'}
yrittaa         ['LANG:FI']
yritta-         {'-COMP:N', 'PHI:GEN:_', 'PHI:NUM:_', 'LF:try', '-VAL', 'PHI:PER:_', 'PF:yritta', 'ASP', 'V', '-SPEC:FORCE', 'SPEC:D', '!COMP:A/inf', '-COMP:v', 'SEM:internal', 'LANG:EN', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '!COMP:-ARG', '-COMP:T/fin', '-COMP:V', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
mina            ['LANG:EN']
mina-           {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PHI_N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'PF:mina', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', 'LF:I', '-COMP:WH', '-SPEC:P', '-COMP:V', '-SPEC:N', '-COMP:*', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
sina            ['LANG:EN']
sina-           {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PHI_N', '-SPEC:ADV', 'PF:sina', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', '-COMP:*', 'COMP:R/D', 'LF:you', 'COMP:P', '-SPEC:INF'}
han             ['LANG:EN']
han-            {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PHI_N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'PF:han', 'COMP:uR', 'LF:s/he', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', '-COMP:*', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PHI_N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'PF:me', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', '-COMP:*', 'LF:we', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
te              ['LANG:EN']
te-             {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PHI_N', '-SPEC:ADV', 'PF:te', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'LANG:FI', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', '-COMP:*', 'COMP:R/D', 'LF:you', 'COMP:P', '-SPEC:INF'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PHI_N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'LF:they', 'LANG:FI', 'SPEC:A', 'PF:he', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', '-COMP:*', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
se              ['LANG:FI']
se-             {'!COMP:*', '-SPEC:V', 'D', 'adjoinable', '-ARG', '-SPEC:D', '!PROBE:N', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:C', 'LF:it/that', 'PF:se', 'LANG:FI', 'COMP:N', 'OP', '-SPEC:T/fin', '-COMP:D', '-COMP:T/fin', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', '-SPEC:INF'}
I               ['LANG:EN']
I-              {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PHI_N', '-SPEC:ADV', 'PF:I', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', 'LF:I', '-COMP:WH', '-SPEC:P', '-COMP:V', '-SPEC:N', '-COMP:*', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
you             ['LANG:EN']
you-            {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PF:you', 'PHI_N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', '-COMP:*', 'COMP:R/D', 'LF:you', 'COMP:P', '-SPEC:INF'}
he              ['LANG:EN']
he-             {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PHI_N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', 'SPEC:A', 'PF:he', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', 'LF:he', '-SPEC:P', '-COMP:V', '-SPEC:N', '-COMP:*', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
she             ['LANG:EN']
she-            {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PHI_N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'LF:she', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'PF:she', 'LANG:EN', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', '-COMP:*', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
we              ['LANG:EN']
we-             {'-SPEC:V', '-SPEC:R', 'PF:we', '-COMP:N', 'PHI_N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', '-COMP:*', 'LF:we', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
you_pl          ['LANG:EN']
you_pl-         {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', 'LF:you_pl', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', 'PF:you_pl', '-SPEC:P', '-COMP:V', '-SPEC:N', 'PHI', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
they            ['LANG:EN']
they-           {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PHI_N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'LF:they', 'LANG:EN', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', 'PF:they', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', '-COMP:*', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
it              ['LANG:EN']
it-             {'!COMP:*', '-SPEC:V', 'D', 'adjoinable', '-ARG', '-SPEC:D', '!PROBE:N', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:C', 'LF:it/that', 'LANG:EN', 'COMP:N', 'OP', '-SPEC:T/fin', '-COMP:D', '-COMP:T/fin', '-SPEC:Neg/fin', '-SPEC:N', 'PF:it', '-SPEC:P', '-SPEC:INF'}
io              ['LANG:EN']
io-             {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PHI_N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', 'PF:io', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', 'LF:I', '-COMP:WH', '-SPEC:P', '-COMP:V', '-SPEC:N', 'LANG:IT', '-COMP:*', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
tu              ['LANG:EN']
tu-             {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PHI_N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', 'PF:tu', '-COMP:v', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', '-COMP:*', 'LANG:IT', 'COMP:R/D', 'LF:you', 'COMP:P', '-SPEC:INF'}
lui             ['LANG:EN']
lui-            {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PHI_N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', 'PF:lui', '-COMP:WH', 'LF:he', '-SPEC:P', '-COMP:V', '-SPEC:N', 'LANG:IT', '-COMP:*', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
lei             ['LANG:EN']
lei-            {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PHI_N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'LF:she', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', 'PF:lei', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', '-COMP:*', 'LANG:IT', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
noi             ['LANG:EN']
noi-            {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PHI_N', '-SPEC:ADV', 'PF:noi', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', '-COMP:*', 'LANG:IT', 'LF:we', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
voi             ['LANG:EN']
voi-            {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PHI_N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', 'PF:voi', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', '-COMP:*', 'LANG:IT', 'LF:you_pl', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
loro            ['LANG:EN']
loro-           {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PHI_N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'LF:they', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', 'PF:loro', '-COMP:WH', '-SPEC:P', '-COMP:V', '-SPEC:N', 'LANG:IT', '-COMP:*', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
mi              ['LANG:EN']
mi-             {'-SPEC:V', '-SPEC:R', 'LF:me', 'PF:mi(cl)', 'PHI_N', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', 'CL', '-COMP:v', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', '-COMP:*', 'LANG:IT', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
la              ['LANG:EN']
la-             {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PHI_N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'PF:la(cl)', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'LF:her', 'COMP:uR', '-SPEC:FORCE', 'CL', '-COMP:v', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', '-COMP:*', 'LANG:IT', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
lo              ['LANG:EN']
lo-             {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PHI_N', '-SPEC:ADV', 'LF:him', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', 'CL', '-COMP:v', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', 'PF:lo(cl)', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', '-COMP:*', 'LANG:IT', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
si              ['LANG:EN']
si-             {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PHI_N', 'CAL:CL', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'PF:si(cl)', 'COMP:uR', '-SPEC:FORCE', 'LF:3sg', '-COMP:v', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', '-COMP:*', 'LANG:IT', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-SPEC:V', '-SPEC:R', '-COMP:N', 'PHI_N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', 'PF:ci', '-COMP:v', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', '-COMP:WH', '-COMP:V', 'LF:there', '-SPEC:P', '-SPEC:N', 'LANG:IT', '-COMP:*', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
[-n]            {'LANG:FI', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'PHI:PER:1', 'inflectional', 'PHI:NUM:SG'}
[-t]            {'LANG:FI', 'PHI:PER:2', 'PHI', 'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'PHI:HUM:HUM'}
[-V]            {'LANG:FI', 'PHI', 'PHI:PER:3', 'PHI:NUM:SG', 'inflectional'}
[-mme]          {'LANG:FI', 'PHI', 'PHI:NUM:PL', 'PHI:DET:DEF', 'PHI:PER:1', 'inflectional', 'PHI:HUM:HUM'}
[-mme]          {'LANG:FI', 'PHI:NUM:PL', 'PHI:DET:DEF', 'PHI:PER:1', 'inflectional', 'PHI:HUM:HUM'}
[-tte]          {'LANG:FI', 'PHI', 'PHI:NUM:PL', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'inflectional', 'PHI:PER:2'}
[-vat]          {'LANG:FI', 'PHI', 'PHI:NUM:PL', 'PHI:PER:3', 'inflectional'}
[-ni]           {'LANG:FI', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'PHI:PER:1', 'inflectional', 'PHI:NUM:SG'}
[-si]           {'LANG:FI', 'PHI:PER:2', 'PHI', 'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'PHI:HUM:HUM'}
[-nsa]          {'LANG:FI', 'PHI', 'PHI:PER:3', 'PHI:NUM:SG', 'inflectional'}
[-an]           {'PHI', 'LANG:FI', 'PHI:PER:3', 'inflectional'}
[-nne]          {'LANG:FI', 'PHI:NUM:PL', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'inflectional', 'PHI:PER:2'}
[-s]            {'LANG:EN', 'PHI', 'PHI:PER:3', 'PHI:GEN:M', 'PHI:GEN:F', 'inflectional', 'PHI:NUM:SG'}
[-0]            {'LANG:EN', 'PHI:GEN:N', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI', 'PHI:NUM:PL', 'PHI:PER:3', 'inflectional', 'PHI:PER:2'}
[-o]            {'PHI:HUM:HUM', 'LANG:IT', 'PHI', 'PHI:DET:DEF', 'PHI:PER:1', 'inflectional', 'PHI:NUM:SG'}
[-i]            {'PHI:PER:2', 'LANG:IT', 'PHI', 'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'PHI:HUM:HUM'}
[-a]            {'LANG:IT', 'PHI', 'PHI:PER:3', 'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional'}
[-e]            {'LANG:IT', 'PHI', 'PHI:PER:3', 'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional'}
[-iamo]         {'LANG:IT', 'PHI', 'PHI:NUM:PL', 'PHI:DET:DEF', 'PHI:PER:1', 'inflectional', 'PHI:HUM:HUM'}
[-te]           {'LANG:IT', 'PHI', 'PHI:NUM:PL', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'inflectional', 'PHI:PER:2'}
[-no]           {'PHI:PER:3', 'LANG:IT', 'PHI', 'PHI:NUM:PL', 'PHI:DET:DEF', 'inflectional'}
[-nom]          {'LANG:EN', 'adjoinable', 'NOM', 'TAIL:FIN,ARG,VAL', 'inflectional'}
[-par]          {'TAIL:ARG,-VAL', 'LANG:FI', 'adjoinable', 'PAR', 'inflectional'}
[-gen]          {'GEN', 'LANG:EN', '-float', 'TAIL:INF,ARG', 'inflectional'}
gen             {'GEN', 'LANG:EN', '-float', 'TAIL:INF,ARG', 'inflectional'}
[-n_acc]        {'inflectional', 'LANG:FI', 'n-ACC', 'adjoinable', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:PHI'}
[-t_acc]        {'LANG:FI', 'adjoinable', 'TAIL:*POL:NEG', 't-ACC', 'TAIL:ARG,ASP:BOUNDED', 'inflectional'}
[-0_acc]        {'LANG:FI', 'adjoinable', 'TAIL:*POL:NEG', '0_ACC', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*PHI', 'inflectional'}
asp             {'LANG:EN', 'ASP:BOUNDED', 'inflectional'}
a'              {'LF:A', 'a', 'LANG:X', 'PF:a'}
b'              {'PF:b', 'LANG:X', 'LF:B', 'b'}
b''             {'PF:b', 'LANG:EN', '-COMP:c', 'LF:B', 'b'}
c''             {'SPEC:a', 'LANG:EN', 'c', 'LF:C', 'PF:c'}
c'              {'LANG:X', 'LF:C', 'c', 'PF:c'}
d'              {'LANG:', 'LF:D', 'PF:d', 'd'}
a''             ['LANG:EN']
x'              {'x', 'LANG:X', 'PF:x', 'LF:X'}
y'              {'LF:Y', 'PF:y', 'LANG:X', 'y'}
z'              {'z', 'LANG:X', 'PF:x', 'LF:Z'}
John'           {'LANG:X', 'LF:John', "N'", 'PF:John'}
admires'        {'LANG:X', "V'", 'PF:admires', 'LF:admires'}
admires''       {'-COMP:N', 'LF:admires', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', 'V', '-SPEC:FORCE', 'SPEC:D', 'PF:admires', '-COMP:v', 'LANG:EN', 'PHI:DET:_', '-SPEC:T/fin', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', '-COMP:V', 'SPEC:P', 'COMP:P', 'SPEC:ADV'}
Mary'           {'LF:mary', 'LANG:X', "N'", 'PF:Mary'}
T/fin           {'-SPEC:V', '!COMP:*', 'PHI:GEN:_', 'PHI:NUM:_', '-SPEC:C/fin', 'T', 'PHI:PER:_', 'LF:T', '-SPEC:FORCE', 'T/fin', 'SPEC:D', 'SPEC:*', 'LANG:EN', 'PHI:DET:_', 'COMP:V', 'VAL', '-SPEC:T/fin', '-SPEC:Neg', 'ARG', '-COMP:INF', 'SPEC:TO/inf', '-COMP:T/fin', 'FIN', 'COMP:T/prt', '-SPEC:N', '-SPEC:v', 'PF:T', 'COMP:v', '-SPEC:TO/inf', '!SPEC:D', '!PROBE:V'}
v               {'!COMP:*', 'LANG:EN', 'PHI:DET:_', 'COMP:V', 'PHI:GEN:_', 'v', 'ARG', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'LF:v', 'ASP', '-SPEC:N', 'PF:v', 'SPEC:D', '!PROBE:V'}
C/fin           {'!COMP:*', 'PF:C', '-ARG', 'LF:C/fin', 'C', '-SPEC:C/fin', '-COMP:T/prt', 'SPEC:*', 'C/fin', 'LANG:EN', 'VAL', '-SPEC:T/fin', '!PROBE:FIN', '-COMP:C/fin', 'FIN', '-SPEC:N', 'COMP:Neg/fin', 'COMP:T/fin'}
T               {'!COMP:*', '-SPEC:V', 'COMP:v', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'LF:T', '-COMP:NEG', '-SPEC:FORCE', 'SPEC:D', 'SPEC:*', 'LANG:EN', 'PHI:DET:_', 'COMP:V', 'VAL', '-SPEC:T/fin', 'ARG', 'FIN', 'COMP:T/prt', '-SPEC:N', 'PF:T', 'T', '!PROBE:V'}
T/prt           {'!COMP:*', '-SPEC:V', 'PHI:GEN:_', 'LF:T/prt', 'PHI:NUM:_', 'PHI:PER:_', 'T', '-COMP:NEG', '-SPEC:FORCE', 'SPEC:D', 'SPEC:*', 'LANG:EN', 'COMP:D', 'PHI:DET:_', 'VAL', 'COMP:V', '-SPEC:T/fin', 'ARG', 'FIN', 'COMP:T/prt', '-SPEC:N', 'PF:T/prt', 'COMP:v', 'T/prt', '!PROBE:V'}
a0              {'TAIL:D', '-adjoinable', 'LANG:EN', 'adjoinable', '-SPEC:D', 'PF:A', '-SPEC:A', 'COMP:0', 'LF:A', 'A'}
n               {'-SPEC:V', '-COMP:N', 'COMP:R', '-COMP:AUX', '-SPEC:uWH', 'PHI:PER:_', '-COMP:v', 'SPEC:*', 'LF:n', 'LANG:EN', 'PHI:DET:_', 'COMP:V', 'PF:n', '-COMP:WH', '-SPEC:P', 'COMP:0', 'COMP:P', '-SPEC:INF', '!COMP:*', '-SPEC:R', '-SPEC:ADV', 'PHI:GEN:_', 'PHI:NUM:_', 'n', '-COMP:A', 'N', '-SPEC:C/fin', 'INF', 'COMP:uR', '-SPEC:FORCE', 'SPEC:A', 'VAL', '-SPEC:T/fin', 'ARG', '!SPEC:*', '-COMP:C/fin', '-COMP:T/fin', '-COMP:V', '-SPEC:N', 'COMP:v', 'COMP:R/D', '!SPEC:D', '-COMP:D'}
impass          {'!COMP:*', 'LANG:EN', 'PHI:DET:_', 'PF:impass', 'COMP:V', 'PHI:GEN:_', 'v', 'ARG', 'LF:impass', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', 'ASP', '-SPEC:N', 'SPEC:D', '!PROBE:V'}
cau             {'!COMP:*', 'LANG:EN', 'PHI:DET:_', 'COMP:V', 'PHI:GEN:_', 'v', 'ARG', 'PHI:NUM:_', '-VAL', 'LF:v/Cause', 'PHI:PER:_', 'ASP', '-SPEC:N', 'PF:Cau', 'SPEC:D', '!PROBE:V'}
INF             {'!COMP:*', 'PF:INF', '-SPEC:V', 'LANG:EN', '-COMP:FORCE', 'LF:INF', 'COMP:V', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:C/fin', 'INF', 'COMP:v'}
prtcpl          {'-COMP:FORCE', '-SPEC:V', '!COMP:*', 'COMP:v', 'PHI:GEN:_', 'LF:T/prt', 'PHI:NUM:_', 'PHI:PER:_', 'INF', '-COMP:NEG', '-SPEC:FORCE', 'SPEC:D', 'SPEC:*', 'LANG:EN', 'COMP:D', 'PHI:DET:_', 'COMP:V', 'VAL', '-SPEC:T/fin', 'ARG', '-COMP:T/fin', '-COMP:C/fin', 'FIN', 'COMP:T/prt', '-SPEC:N', 'PF:T/prt', 'T', 'T/prt', '!PROBE:V'}
TO/inf          {'!COMP:*', '-SPEC:V', '-COMP:FORCE', 'PF:TO/inf', 'adjoinable', '-VAL', 'INF', 'LF:TO/inf', 'LANG:EN', 'COMP:V', '!COMP:V', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:C/fin', 'TO/inf', '-SPEC:v', 'COMP:v', '?ARG'}
A/inf           {'!COMP:*', '-SPEC:V', '-COMP:FORCE', 'PF:A/inf', 'INF', 'A/inf', 'SPEC:*', 'LANG:EN', 'COMP:V', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:Neg/fin', '-COMP:C/fin', '?VAL', 'LF:A/inf', 'COMP:v', '?ARG'}
ARE/inf         {'!COMP:*', '-SPEC:V', '-adjoinable', '-COMP:FORCE', 'PF:are', 'INF', 'ARE/inf', 'LF:ARE/inf', 'SPEC:*', 'LANG:EN', 'VAL', 'COMP:V', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:C/fin', 'COMP:v', '?ARG'}
ESSA/inf        {'!COMP:*', '-SPEC:V', '-COMP:FORCE', 'adjoinable', 'INF', '-SPEC:FORCE', 'ADV', 'SPEC:*', 'LANG:EN', 'COMP:V', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:Neg/fin', '-COMP:C/fin', '?VAL', 'TAIL:T', '-SPEC:N', 'LF:while', 'COMP:v', 'ESSA/inf', '?ARG', 'PF:essa'}
TUA/inf         {'!COMP:*', '-SPEC:V', '-COMP:FORCE', 'adjoinable', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'INF', 'PF:tua', '-SPEC:FORCE', 'ADV', 'SPEC:*', 'LANG:EN', 'PHI:DET:_', 'VAL', 'COMP:V', '-SPEC:T/fin', 'ARG', '!SPEC:*', '-COMP:T/fin', '-SPEC:Neg/fin', '-COMP:C/fin', 'TAIL:T', '-SPEC:N', 'TUA/inf', 'COMP:v', 'LF:after'}
VA/inf          {'!COMP:*', '-SPEC:V', '-COMP:FORCE', 'PHI:GEN:_', 'VA/inf', 'PHI:NUM:_', 'PHI:PER:_', 'INF', 'LF:VA', 'SPEC:*', 'LANG:EN', 'PHI:DET:_', 'VAL', 'COMP:V', '-SPEC:T/fin', 'ARG', '!SPEC:*', '-COMP:T/fin', '-COMP:C/fin', '-SPEC:N', 'COMP:v', 'PF:vAn'}
MA/ssa          {'adjoinable', 'PF:massa', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', '-SPEC:*', '-SPEC:FORCE', 'LF:in_doing', 'ADV', 'LANG:EN', 'TAIL:V', 'PHI:DET:_', 'COMP:V', '-SPEC:T/fin', 'ARG', '-SPEC:Neg/fin', 'MA/inf', '-SPEC:N', 'COMP:v'}
MA/tta          {'PF:matta', 'LANG:EN', 'adjoinable', 'PHI:DET:_', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:NUM:_', 'ARG', '-VAL', 'MA/inf', '-SPEC:Neg/fin', 'PHI:PER:_', 'TAIL:T', 'LF:without_doing', '-SPEC:N', '-SPEC:FORCE', 'ADV'}
MA/lla          {'PHI:PER:_', 'LANG:EN', 'PHI:DET:_', 'COMP:V', 'PF:malla', 'MA/inf', 'adjoinable', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', '-SPEC:FORCE', 'ADV', '-SPEC:T/fin', 'ARG', '-SPEC:Neg/fin', 'TAIL:T', 'LF:by_doing', '-SPEC:N', 'COMP:v'}
MA/inf          {'PHI:PER:_', 'LANG:EN', 'TAIL:V', 'PHI:DET:_', 'COMP:V', 'MA/inf', 'adjoinable', 'PF:maan', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', '-SPEC:FORCE', 'ADV', '-SPEC:T/fin', 'ARG', '-SPEC:Neg/fin', 'LF:to_do', '-SPEC:N', 'COMP:v'}
E/inf           {'SPEC:*', 'LANG:FI', 'adjoinable', '-ARG', '-SPEC:T/fin', 'LF:by', '-VAL', 'PF:en', '-SPEC:Neg/fin', 'TAIL:T', '-SPEC:N', '-SPEC:FORCE', 'ADV'}
BE-             {'!COMP:*', '-COMP:N', '-ARG', '-VAL', 'ASP', 'V', '-SPEC:FORCE', 'SPEC:D', 'LF:BE', '-COMP:v', 'LANG:EN', '-SPEC:T/fin', 'SPEC:TO/inf', '-COMP:T/fin', 'PF:BE', 'COMP:T/prt', '-COMP:V', 'SPEC:P', 'COPULA', 'COMP:P', 'SPEC:ADV'}
D               {'!COMP:*', '-SPEC:V', 'D', 'adjoinable', '-ARG', '-SPEC:D', '!PROBE:N', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:C', 'LF:D', 'LANG:EN', 'COMP:N', 'OP', '-SPEC:T/fin', '-COMP:D', 'PF:D', '-COMP:T/fin', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', '-SPEC:INF'}
P               {'-SPEC:V', '!COMP:*', '-COMP:N', 'adjoinable', '-SPEC:ADV', 'P', 'PHI:GEN:_', 'PHI:NUM:_', '-VAL', '-SPEC:C/fin', 'PHI:PER:_', '-SPEC:iR', '-SPEC:*', '-SPEC:C', '-SPEC:FORCE', '-float', 'LANG:EN', 'COMP:D', 'PHI:DET:_', '-SPEC:T/fin', 'PF:P', 'ARG', '-COMP:T/fin', '-COMP:uWH', '-SPEC:Neg/fin', '-SPEC:N', '-SPEC:P', 'LF:P', '-SPEC:v', '-SPEC:iWH', '-COMP:ADV', '-SPEC:INF'}
pro             ['LANG:EN']
pro-            {'-SPEC:V', '-SPEC:R', '-COMP:N', '-SPEC:ADV', 'COMP:R', '-COMP:AUX', '-COMP:A', 'N', '-SPEC:uWH', '-SPEC:C/fin', 'COMP:uR', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', 'SPEC:A', '-SPEC:T/fin', '-COMP:D', '-COMP:C/fin', '-COMP:T/fin', 'PF:(pro)', '-COMP:WH', '-COMP:V', '-SPEC:P', '-SPEC:N', 'PHI', 'LF:pro', 'COMP:R/D', 'COMP:P', '-SPEC:INF'}
cl              {'LEFT:T/fin', 'CL', 'LANG:EN', 'LEFT:D,CL', 'RIGHT:PRG', 'RIGHT:ARE/inf', 'inflectional'}
inc             {'INCORPORATED', 'LANG:EN', 'inflectional'}
sg              {'PHI:NUM:SG', 'LANG:EN', 'inflectional'}
pl              {'PHI:NUM:PL', 'LANG:EN', 'inflectional'}
1p              {'PHI:PER:1', 'LANG:EN', 'inflectional'}
2p              {'LANG:EN', 'inflectional', 'PHI:PER:2'}
3p              {'PHI:PER:3', 'LANG:EN', 'inflectional'}
def             {'PHI:DET:DEF', 'LANG:EN', 'inflectional'}
indef           {'PHI:DET:INDEF', 'LANG:EN', 'inflectional'}
hum             {'PHI:HUM:HUM', 'LANG:EN', 'inflectional'}
nonhum          {'PHI:HUM:NONHUM', 'LANG:EN', 'inflectional'}
m               {'PHI:GEN:M', 'LANG:EN', 'inflectional'}
f               {'LANG:EN', 'PHI:GEN:F', 'inflectional'}
nom             {'NOM', 'LANG:EN', 'inflectional', 'TAIL:FIN,!COMP:*,VAL'}
acc             {'TAIL:v', 'LANG:EN', 'inflectional', 'ACC'}
dat             {'TAIL:v', 'DAT', 'LANG:EN', 'inflectional'}
uC/op           {'LANG:EN', 'inflectional', 'uC/op'}
wh              {'LANG:EN', 'inflectional', 'OP:WH', 'OP:_'}
wh_             {'LANG:EN', 'OP', 'FORCE:OP:WH', 'inflectional', 'OP:_'}
top             {'OP:TOP', 'LANG:EN', 'inflectional'}
foc             {'OP:FOC', 'LANG:EN', 'inflectional'}
C/op            {'LANG:EN', 'inflectional', 'OP:C/OP'}
rel             {'OP:REL', 'LANG:EN', 'adjoinable', '-COMP:C/fin', 'inflectional'}
Q               {'LANG:EN', 'OP', 'OP:WH', 'OP:Q', 'inflectional'}
