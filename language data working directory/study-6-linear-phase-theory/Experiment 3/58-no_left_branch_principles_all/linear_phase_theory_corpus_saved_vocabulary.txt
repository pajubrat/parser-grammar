ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'-COMP:ADV', '-SPEC:ADV', '-COMP:A', 'COMP:ARE/inf', '-SPEC:T/fin', '-SPEC:V', 'adjoinable', '-SPEC:Neg/fin', '-COMP:N', 'COMP:D', '-SPEC:v', '-COMP:uWH', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:C', '-SPEC:N', '!COMP:*', 'LF:to', '-ARG', '-SPEC:FORCE', 'TAIL:V', 'P', 'LANG:IT', '-SPEC:iWH', '-SPEC:P', '-COMP:T', '-VAL', '-SPEC:iR', 'PF:a', '-SPEC:*', '-COMP:T/fin'}
a_D             {'-COMP:uR', 'PF:D', '-COMP:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', 'LF:D', 'D', '-SPEC:INF', 'LANG:EN', 'COMP:N', '-SPEC:C', '-COMP:D', 'OP', '!PROBE:N', '!COMP:*', '-SPEC:MA/lla', '-ARG', '-SPEC:P', '-COMP:T/fin'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'LF:admire', 'V', 'PF:admire', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', '-COMP:P', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', 'COMP:D', '-COMP:v', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', '!COMP:*', 'ARG', 'CLASS:TR', '-COMP:V', '-SPEC:Neg', '-VAL', 'PHI:PER:_', '-COMP:Neg', '-SPEC:FORCE'}
admire*         ['LANG:EN']
T/fin*          {'LF:T', 'NO_NUMBER', 'CAT:T/fin', "PF:T/fin'", '!SPEC:*', '-VAL', 'LANG:EN', 'NO_DET'}
v*              {'-VAL', 'LF:v', 'CAT:v', 'PF:v', 'NO_DET', 'NO_NUMBER', 'LANG:EN'}
admire**        ['LANG:EN']
T/fin**         {'LF:T', "PF:T/fin''", 'NO_NUMBER', 'CAT:T/fin', 'PHI:PER:3', 'NO_PERSON', '!SPEC:*', '-VAL', 'LANG:EN', 'NO_DET'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'LF:admire', 'PF:adora', 'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', 'COMP:D', '-COMP:v', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'LANG:IT', '-COMP:V', '-VAL', 'PHI:PER:_', '-SPEC:FORCE'}
antaa           ['LANG:FI']
anta-           {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'CLASS:DITR', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'COMP:D', '-COMP:FIN', 'PHI:PER:_', 'PHI:NUM:_', '+SEM:directional', 'LF:give', '!COMP:*', 'SPEC:D', 'PF:antaa', 'ASP:BOUNDED', 'ARG', '-COMP:V', '-VAL', '-SPEC:FORCE', 'LANG:FI'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'PF:ask', 'SPEC:P', 'PHI:DET:_', '-COMP:N', 'SEM:internal', 'COMP:D', 'LF:ask', '-COMP:v', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', 'SPEC:D', 'ARG', '-COMP:V', '-VAL', 'PHI:PER:_', '-SPEC:FORCE'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'LF:key', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'PF:avain', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SEM:directional', '-SPEC:FORCE', '-SPEC:N', 'LANG:FI'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', 'LF:car', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', 'PF:auto', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SEM:directional', '-SPEC:FORCE', '-SPEC:N', 'LANG:FI'}
bank            {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', 'LANG:EN', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'LF:bank_inst', 'PF:bank1', '-COMP:V', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE', '-SPEC:N', 'FREQ:1'}
bank            {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', 'LF:bank_river', '-SPEC:INF', 'LANG:EN', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'PF:bank2', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'FREQ:2', 'COMP:D/rel', '-SPEC:P', '-SPEC:N', '-SPEC:FORCE'}
barn            {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', 'LF:barn', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', 'LANG:EN', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE', '-SPEC:N', 'PF:barn'}
city            {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'PF:city', '-COMP:C/fin', 'COMP:C', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', 'LANG:EN', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', 'LF:city', '-SPEC:N', '-SPEC:FORCE'}
che             ['LANG:IT']
che-            {'-COMP:A', '-COMP:C/fin', 'COMP:C', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', '-COMP:V', 'PHI_N', 'PF:che', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'LANG:IT', 'LF:who', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE'}
chiamato        ['LANG:IT']
chiamata-       {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'LF:called', 'PF:chiamato', 'LANG:IT', '-COMP:V', '-VAL', 'PHI:PER:_', '-SPEC:FORCE'}
claims          ['LANG:EN']
claim-          {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PF:claim', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'LANG:EN', '-COMP:D', 'PHI:NUM:_', 'PHI:GEN:_', 'SPEC:D', 'ARG', '-COMP:V', 'LF:claim', 'COMP:T/fin', '-VAL', 'PHI:PER:_', '-SPEC:FORCE'}
danno           {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', 'LF:damage', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'PF:danno', 'COMP:uR', 'COMP:R/D', 'LANG:IT', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:N', '-SPEC:FORCE'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'PF:detest', 'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:ARE/inf', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', 'SEM:internal', 'COMP:D', '-COMP:v', 'PHI:NUM:_', 'PHI:GEN:_', 'LF:detest', 'ARG', 'LANG:IT', '-COMP:V', '-VAL', 'PHI:PER:_', '-SPEC:FORCE'}
devono          ['LANG:EN']
deva-           {'V', 'PF:deva', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:ARE/inf', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-ASP', 'SEM:internal', '-COMP:v', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', 'SPEC:D', 'ARG', 'LANG:IT', '-COMP:V', '-VAL', '-SPEC:FORCE', 'LF:must'}
di              {'-COMP:ADV', '-SPEC:ADV', '-COMP:A', 'SPEC:*', '-SPEC:T/fin', '-SPEC:V', '-SPEC:Neg/fin', 'PHI:DET:_', '-COMP:N', 'COMP:D', '-SPEC:v', '-COMP:uWH', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:C', 'PHI:PER:_', 'PHI:NUM:_', 'PF:di', '!COMP:*', 'LF:of', 'ARG', '-SPEC:FORCE', 'P', '-SPEC:iWH', '-adjoinable', '-SPEC:P', '-COMP:T', '-COMP:T/fin', '-VAL', '-SPEC:iR', '-SPEC:N', 'LANG:FI'}
does            {'-SPEC:TO/inf', 'COMP:v', 'SPEC:TO/inf', 'COMP:Neg', '-SPEC:V', 'PHI:DET:_', 'PHI:NUM:SG', '-SPEC:C', 'PHI:NUM:_', '-COMP:INF', 'PHI:GEN:M', 'PHI:PER:3', 'T/fin', '-SPEC:N', '-COMP:T/fin', '-SPEC:v', 'T', 'SPEC:*', 'FIN', 'LF:does', '-SPEC:T/fin', 'SPEC:FORCE', '!PROBE:V', 'SPEC:C/fin', '!SPEC:*', 'LANG:EN', 'PHI:GEN:_', '!COMP:*', 'SPEC:D', 'ARG', 'PF:does', 'COMP:V', '-SPEC:Neg', 'COMP:T/prt', 'PHI:GEN:F', 'PHI:PER:_', 'VAL'}
does_C          ['LANG:EN']
does-           {'-SPEC:TO/inf', 'COMP:v', 'SPEC:TO/inf', 'COMP:Neg', '-SPEC:V', 'PHI:DET:_', 'PHI:NUM:SG', '-SPEC:C', 'PHI:NUM:_', '-COMP:INF', 'PHI:GEN:M', 'PHI:PER:3', 'T/fin', '-SPEC:N', '-COMP:T/fin', '-SPEC:v', 'T', 'SPEC:*', 'FIN', 'LF:does', '-SPEC:T/fin', 'SPEC:FORCE', '!PROBE:V', 'SPEC:C/fin', '!SPEC:*', 'LANG:EN', 'PHI:GEN:_', '!COMP:*', 'SPEC:D', 'ARG', 'PF:does', 'COMP:V', '-SPEC:Neg', 'COMP:T/prt', 'PHI:GEN:F', 'PHI:PER:_', 'VAL'}
dorme           ['LANG:IT']
dorme-          {'V', 'PF:dorme', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'LANG:EN', '-COMP:D', 'PHI:NUM:_', 'PHI:GEN:_', 'CLASS:INTR', '!SPEC:D', 'SPEC:D', 'LF:sleep', 'ARG', '-COMP:V', '-COMP:MA/inf', '-VAL', 'PHI:PER:_', '-SPEC:FORCE'}
disappeared     ['LANG:EN']
disappear-      {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'LANG:EN', 'PHI:PER:_', 'PF:disappear', '-COMP:D', 'PHI:NUM:_', 'PHI:GEN:_', 'CLASS:INTR', 'SPEC:D', 'ARG', '-COMP:V', '-COMP:MA/inf', '-VAL', '-SPEC:FORCE', 'LF:disappear'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'2SPEC', 'LF:easy', '0', 'PF:easy', 'SPEC:D', 'LANG:EN'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'SPEC:*', 'FIN', '-SPEC:T/fin', 'PHI:DET:_', 'Neg/fin', 'SEM:internal', '!SPEC:*', 'PF:ei', 'PHI:NUM:_', 'NEG', '!COMP:*', '!COMP:T', 'ARG', '%SPEC:INF', 'LF:neg', 'POL:NEG', 'COMP:T/prt', '-SPEC:T', 'PHI:PER:_', 'VAL', 'LANG:FI'}
e-              {'SPEC:*', 'FIN', '-SPEC:T/fin', 'PHI:DET:_', 'Neg/fin', 'SEM:internal', '!SPEC:*', 'PF:ei', 'PHI:NUM:_', 'NEG', '!COMP:*', '!COMP:T', 'ARG', '%SPEC:INF', 'LF:neg', 'POL:NEG', 'COMP:T/prt', '-SPEC:T', 'PHI:PER:_', 'VAL', 'LANG:FI'}
elaa            ['LANG:FI']
ela-            {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'LF:live', 'PHI:PER:_', '-COMP:D', 'PHI:NUM:_', 'PF:elaa', 'CLASS:INTR', 'SPEC:D', 'ARG', '-COMP:V', '-COMP:MA/inf', '-VAL', '-SPEC:FORCE', 'LANG:FI'}
etsii           ['LANG:FI']
etsi-           {'V', 'PF:etsi', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', '-COMP:P', '!COMP:D', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', 'LF:search', 'COMP:D', '-COMP:v', 'PHI:PER:_', 'PHI:NUM:_', '!COMP:*', 'ARG', 'CLASS:TR', '-COMP:V', '-VAL', '-SPEC:FORCE', 'LANG:FI'}
etta            {'LF:that', 'FORCE', 'COMP:C/fin', '!COMP:*', '!PROBE:FIN', '-SPEC:D', 'FIN', '-ARG', 'PF:etta', 'COMP:T/fin', '-VAL', '-SPEC:*', 'LANG:FI'}
fell            ['LANG:EN']
fell-           {'LF:fell', 'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'LANG:EN', 'PHI:PER:_', '-COMP:D', 'PHI:NUM:_', 'PHI:GEN:_', 'CLASS:INTR', 'SPEC:D', 'ARG', '-COMP:V', '-COMP:MA/inf', '-VAL', '-SPEC:FORCE', 'PF:fell'}
flow'           {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'PF:flow', '-SPEC:T/fin', 'ASP', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'LF:flow', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', 'SPEC:D', 'ARG', '-COMP:V', '-VAL', 'PHI:PER:_', '-SPEC:FORCE'}
from            {'-COMP:ADV', '-SPEC:ADV', '-COMP:A', '-SPEC:T/fin', '-SPEC:V', 'adjoinable', '-SPEC:Neg/fin', '-COMP:N', '-float', 'PHI:DET:_', 'COMP:D', '-SPEC:v', '-COMP:uWH', '-SPEC:INF', 'LANG:EN', '-SPEC:C', '-SPEC:C/fin', 'PHI:PER:_', 'PHI:NUM:_', 'LF:from', 'PF:from', 'PHI:GEN:_', '!COMP:*', '-SPEC:*', 'ARG', '-SPEC:FORCE', 'P', '-SPEC:iWH', '-SPEC:P', '-COMP:T', '-COMP:T/fin', '-VAL', '-SPEC:iR', '-SPEC:N', 'TAIL:V,+SEM:directional'}
gave            ['LANG:EN']
give-           {'V', 'COMP:P', 'PF:give', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'CLASS:DITR', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'COMP:D', 'LANG:EN', '-COMP:FIN', 'PHI:NUM:_', '+SEM:directional', 'PHI:GEN:_', 'LF:give', '!COMP:*', 'SPEC:D', 'ARG', '-COMP:V', '-VAL', 'PHI:PER:_', '-SPEC:FORCE'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', 'LF:Giuseppe', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'LANG:IT', 'COMP:R', '-COMP:V', 'PF:Giuseppe', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SEM:directional', '-SPEC:N', '-SPEC:FORCE'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'V', 'COMP:P', 'PF:haluaa', 'COMP:A/inf', 'SPEC:TO/inf', 'SPEC:ADV', '-COMP:P', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', 'SEM:internal', 'COMP:D', '-COMP:v', 'PHI:PER:_', 'PHI:NUM:_', '!COMP:*', 'ASP:BOUNDED', 'ARG', 'CLASS:TR', '-COMP:V', 'LF:want', '-VAL', '-SPEC:FORCE', '-SPEC:*', 'LANG:FI'}
hairitsee       ['LANG:FI']
hairitse-       {'V', 'COMP:P', 'SPEC:TO/inf', '-COMP:P', 'SPEC:ADV', '!COMP:D', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', 'PF:hairitsee', '-COMP:v', 'COMP:D', '-COMP:FIN', 'PHI:PER:_', 'PHI:NUM:_', '!COMP:*', 'SPEC:D', 'LF:disturb', 'ARG', 'CLASS:TR', '-COMP:V', '-VAL', '-SPEC:FORCE', 'LANG:FI'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'V', 'COMP:P', 'SPEC:*', 'SPEC:TO/inf', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-ASP', 'SEM:internal', '-COMP:v', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', 'SPEC:D', 'ARG', '-SPEC:FORCE', 'LANG:IT', 'PF:ha', '-COMP:V', '-VAL', 'LF:have', 'COMP:T'}
horse           {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', 'PF:horse', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', 'LANG:EN', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:N', '-SPEC:FORCE', 'LF:horse'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'PHI:PER:_', '-COMP:D', 'PHI:NUM:_', 'CLASS:INTR', 'SPEC:D', 'ARG', '-COMP:V', 'PF:havia', '-COMP:MA/inf', 'LF:disappear', '-VAL', '-SPEC:FORCE', 'LANG:FI'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'LF:admire', 'PF:ihaile-', 'V', 'COMP:P', 'SPEC:TO/inf', '-COMP:P', 'SPEC:ADV', '!COMP:D', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'COMP:D', '-COMP:FIN', 'PHI:PER:_', 'PHI:NUM:_', '!COMP:*', 'ARG', 'CLASS:TR', '-COMP:V', '-VAL', '-SPEC:FORCE', 'LANG:FI'}
il              {'-COMP:uR', '-COMP:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', 'LF:the', 'D', '-SPEC:INF', 'COMP:N', '-SPEC:C', '-COMP:D', 'OP', '!PROBE:N', '!COMP:*', '-SPEC:MA/lla', '-ARG', 'LANG:IT', 'PF:il', '-SPEC:P', '-COMP:T/fin'}
i               {'-COMP:uR', '-COMP:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', 'LF:the', 'D', '-SPEC:INF', 'COMP:N', '-SPEC:C', '-COMP:D', 'OP', '!PROBE:N', '!COMP:*', '-SPEC:MA/lla', '-ARG', 'LANG:IT', 'PF:il', '-SPEC:P', '-COMP:T/fin'}
in              {'-COMP:ADV', 'PF:in', '-COMP:A', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:V', 'adjoinable', '-SPEC:Neg/fin', '-COMP:N', 'PHI:DET:_', 'COMP:D', '-SPEC:v', '-COMP:uWH', '-SPEC:INF', '-SPEC:C/fin', 'LF:in', '-SPEC:C', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '!COMP:*', 'ARG', '-SPEC:FORCE', 'LANG:IT', 'P', '-SPEC:iWH', '-SPEC:P', '-COMP:T', '-VAL', '-SPEC:iR', '-SPEC:N', '-COMP:T/fin'}
infermieri      {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', 'PF:infermieri', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'LF:nurses', 'LANG:IT', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:N', '-SPEC:FORCE'}
is              ['LANG:EN']
be-             {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', '-COMP:N', '-COMP:v', 'LANG:EN', 'LF:be', '!COMP:*', 'COPULA', 'SPEC:D', 'PF:be', '-COMP:TO/inf', '-ARG', '-COMP:V', '-VAL', '-SPEC:FORCE'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', 'PF:istuu', '-COMP:v', 'PHI:PER:_', '-COMP:D', 'PHI:NUM:_', 'CLASS:INTR', 'SPEC:D', 'ARG', '-COMP:V', 'LF:sit', '-COMP:MA/inf', '-VAL', '-SPEC:FORCE', 'LANG:FI'}
John            ['LANG:EN']
John-           {'-COMP:A', '-COMP:C/fin', 'COMP:C', '-SPEC:V', '-COMP:N', '-COMP:v', '-COMP:AUX', 'LF:John', '-SPEC:uWH', 'PF:John', '-COMP:V', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', 'N', '-SPEC:INF', 'LANG:EN', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-adjoinable', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SEM:directional', '-SPEC:FORCE'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'-COMP:A', '-COMP:C/fin', 'COMP:C', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', '-COMP:AUX', 'PF:joka', '-SPEC:uWH', '-COMP:V', 'PHI_N', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'LF:who', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE', 'LANG:FI'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-SPEC:R', '-SPEC:ADV', 'LF:Jukka', '-COMP:A', '-COMP:C/fin', 'COMP:C', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', 'PF:Jukka', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SEM:directional', '-SPEC:FORCE', '-SPEC:N', 'LANG:FI'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', 'LF:run', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'PHI:PER:_', 'PHI:NUM:_', 'ARG', '-COMP:V', '-VAL', '-SPEC:FORCE', 'LANG:FI', 'PF:juokse-'}
kaksi           {'COMP:n', 'PHI:PER:_', 'PF:kaksi', 'SPEC:*', 'ARG', 'LF:two', 'PHI:DET:_', 'PHI:NUM:SG', 'TAIL:ARG,VAL,FIN', 'LANG:FI', '-VAL', 'COMP:N', 'NUM', 'PHI:NUM:_'}
kaksi           {'COMP:n', 'TAIL:*POL:NEG', 'PF:kaksi', 'SPEC:*', 'TAIL:ARG,ASP:BOUNDED', 'LF:two', 'COMP:N', 'LANG:EN', 'NUM'}
kaksi_1         {'COMP:n', 'PHI:PER:_', 'PF:kaksi', 'SPEC:*', 'ARG', 'LF:two', 'PHI:DET:_', 'PHI:NUM:SG', 'TAIL:ARG,VAL,FIN', 'LANG:FI', '-VAL', 'COMP:N', 'NUM', 'PHI:NUM:_'}
kaksi_2         {'COMP:n', 'TAIL:*POL:NEG', 'PF:kaksi', 'SPEC:*', 'TAIL:ARG,ASP:BOUNDED', 'LF:two', 'COMP:N', 'LANG:EN', 'NUM'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'COMP:n', 'LF:two', 'PF:kaksi', 'LANG:FI', 'SPEC:*', 'COMP:N', 'NUM'}
kaupunkia       ['LANG:EN']
kaupunki        {'-SPEC:R', '-SPEC:ADV', '-COMP:A', '-COMP:C/fin', '-COMP:P', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', 'PF:kaupunki', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', 'LF:city', '-SPEC:FORCE', '-SPEC:N', 'LANG:FI'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'V', 'COMP:P', 'SPEC:TO/inf', 'SEM:external', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'PF:kaske', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', '!COMP:A/inf', 'PHI:PER:_', 'PHI:NUM:_', 'LF:order', 'ARG', '-COMP:V', '-VAL', '-SPEC:FORCE', 'LANG:FI'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', 'LF:watch', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'PF:kello', '-COMP:V', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE', '-SPEC:N', 'LANG:FI'}
kello0-         {'2SPEC', '0', 'SPEC:D', 'LF:watch', 'LANG:FI', 'PF:kello'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'PF:key', '-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'LF:key', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', 'LANG:EN', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:N', '-SPEC:FORCE'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'LF:book', '-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-COMP:V', 'PF:kirja', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SEM:directional', '-SPEC:FORCE', '-SPEC:N', 'LANG:FI'}
knows           ['LANG:EN']
know-           {'V', 'COMP:P', 'SPEC:TO/inf', '-COMP:P', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'COMP:D', 'PF:know', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', '!COMP:*', 'ARG', 'CLASS:TR', '-COMP:V', '-VAL', 'PHI:PER:_', 'LF:know', '-SPEC:FORCE'}
kohti           {'-COMP:ADV', '-SPEC:ADV', 'LF:towards', '-COMP:A', 'SPEC:*', '-SPEC:T/fin', '-SPEC:V', 'adjoinable', '-SPEC:Neg/fin', '-COMP:N', 'PHI:DET:_', 'COMP:D', '-SPEC:v', 'PF:kohti', '-COMP:uWH', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:C', 'PHI:PER:_', 'PHI:NUM:_', '!COMP:*', 'ARG', '-SPEC:FORCE', 'TAIL:V', 'P', '-SPEC:iWH', '-SPEC:P', '-COMP:T', '-COMP:T/fin', '-VAL', '-SPEC:iR', '-SPEC:N', 'LANG:FI'}
koko            {'-COMP:uR', '-COMP:P', '-SPEC:T/fin', '-SPEC:V', 'adjoinable', '-SPEC:Neg/fin', 'D', '-SPEC:INF', 'COMP:N', '-SPEC:C', '-COMP:D', 'OP', '!PROBE:N', '!COMP:*', '-SPEC:MA/lla', '-ARG', 'LF:all', 'TAIL:T', 'PF:koko', '-SPEC:P', '-COMP:T/fin', 'LANG:FI'}
kuka            ['LANG:FI']
kuka-           {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', 'PF:kuka', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'LF:who', '-COMP:V', 'PHI', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE', '-SPEC:N', 'LANG:FI'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', '-COMP:WH', '-SPEC:T/fin', 'ASP', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'LF:snore', 'PHI:PER:_', '-COMP:D', 'PHI:NUM:_', 'ARG', '-COMP:V', '-VAL', '-SPEC:FORCE', '-COMP:T/fin', 'LANG:FI', 'PF:kuorsaa'}
lahella         {'COMP:v', '-COMP:A', '-COMP:C/fin', 'PF:lahella', '-SPEC:V', 'PHI:DET:_', '-COMP:N', '-COMP:uWH', '-SPEC:C', 'PHI:PER:_', 'PHI:NUM:_', '!SPEC:D', 'P', '-COMP:T', '-SPEC:N', '-COMP:T/fin', '-SPEC:v', '-COMP:ADV', '-SPEC:ADV', 'SPEC:*', '-COMP:FORCE', '-SPEC:T/fin', 'adjoinable', '-SPEC:Neg/fin', 'COMP:D', '!SPEC:*', '-SPEC:INF', '-SPEC:C/fin', '!COMP:*', 'ARG', '-SPEC:FORCE', 'LF:near', 'COMP:V', '-SPEC:iWH', 'INF', '-SPEC:P', '-SPEC:iR', 'VAL', 'LANG:FI'}
lahella         {'-COMP:ADV', '-SPEC:ADV', '-COMP:A', 'SPEC:*', '!COMP:D', 'PF:lahella', '-SPEC:T/fin', '-SPEC:V', 'adjoinable', '-SPEC:Neg/fin', '-COMP:N', 'PHI:DET:_', 'COMP:D', '-SPEC:v', '-COMP:uWH', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:C', 'PHI:PER:_', 'PHI:NUM:_', '!COMP:*', 'ARG', '-SPEC:FORCE', 'P', 'LF:near', '-SPEC:iWH', '-SPEC:P', '-COMP:T', '-COMP:T/fin', '-VAL', '-SPEC:iR', '-SPEC:N', 'LANG:FI'}
lahella_1       {'-COMP:ADV', '-SPEC:ADV', '-COMP:A', 'SPEC:*', '!COMP:D', 'PF:lahella', '-SPEC:T/fin', '-SPEC:V', 'adjoinable', '-SPEC:Neg/fin', '-COMP:N', 'PHI:DET:_', 'COMP:D', '-SPEC:v', '-COMP:uWH', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:C', 'PHI:PER:_', 'PHI:NUM:_', '!COMP:*', 'ARG', '-SPEC:FORCE', 'P', 'LF:near', '-SPEC:iWH', '-SPEC:P', '-COMP:T', '-COMP:T/fin', '-VAL', '-SPEC:iR', '-SPEC:N', 'LANG:FI'}
lahella_2       {'COMP:v', '-COMP:A', '-COMP:C/fin', 'PF:lahella', '-SPEC:V', 'PHI:DET:_', '-COMP:N', '-COMP:uWH', '-SPEC:C', 'PHI:PER:_', 'PHI:NUM:_', '!SPEC:D', 'P', '-COMP:T', '-SPEC:N', '-COMP:T/fin', '-SPEC:v', '-COMP:ADV', '-SPEC:ADV', 'SPEC:*', '-COMP:FORCE', '-SPEC:T/fin', 'adjoinable', '-SPEC:Neg/fin', 'COMP:D', '!SPEC:*', '-SPEC:INF', '-SPEC:C/fin', '!COMP:*', 'ARG', '-SPEC:FORCE', 'LF:near', 'COMP:V', '-SPEC:iWH', 'INF', '-SPEC:P', '-SPEC:iR', 'VAL', 'LANG:FI'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'LF:leave', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'PHI:PER:_', '-COMP:D', 'PHI:NUM:_', 'CLASS:INTR', 'SPEC:D', 'ARG', '-COMP:V', 'PF:lahtea', 'COMP:PP', '-COMP:MA/inf', '-VAL', '-SPEC:FORCE', 'LANG:FI'}
lavano          ['LANG:IT']
lava-           {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', 'COMP:D', '-COMP:v', 'PHI:NUM:_', 'PHI:GEN:_', '!COMP:*', 'PF:lava', 'ARG', 'LANG:IT', '-COMP:V', '-VAL', 'PHI:PER:_', 'LF:wash', '-SPEC:FORCE'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-COMP:uR', '-COMP:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', 'LF:D', 'D', '-SPEC:INF', 'COMP:N', '-SPEC:C', '-COMP:D', 'OP', '!PROBE:N', '!COMP:*', '-SPEC:MA/lla', '-ARG', 'LANG:IT', 'PF:le', '-SPEC:P', '-COMP:T/fin'}
leaves          ['LANG:EN']
leave           {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'LF:leave', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', '!SPEC:D', 'ARG', 'PF:leave', '-COMP:V', '-VAL', 'PHI:PER:_', '-SPEC:FORCE'}
leave-          {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'LF:leave', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', '!SPEC:D', 'ARG', 'PF:leave', '-COMP:V', '-VAL', 'PHI:PER:_', '-COMP:T/fin', '-SPEC:FORCE'}
like-           {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', '!COMP:D', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'LANG:EN', 'PHI:NUM:_', 'LF:like', 'PHI:GEN:_', 'ARG', 'PF:like', '-COMP:V', '-VAL', 'PHI:PER:_', '-SPEC:FORCE'}
likes           ['LANG:EN']
like            {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', '!COMP:D', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'LANG:EN', 'PHI:NUM:_', 'LF:like', 'PHI:GEN:_', 'ARG', 'PF:like', '-COMP:V', '-VAL', 'PHI:PER:_', '-SPEC:FORCE'}
little          ['LANG:EN']
little-         {'2SPEC', '0', 'LF:little', 'PF:little-', 'SPEC:D', 'LANG:EN'}
lle             {'-COMP:ADV', '-SPEC:ADV', '-COMP:A', '-SPEC:T/fin', 'LF:for', '-SPEC:V', 'adjoinable', '-COMP:N', '-SPEC:Neg/fin', 'PHI:DET:_', 'COMP:D', '-SPEC:v', 'PF:P(lle)', '-COMP:uWH', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:C', 'PHI:PER:_', 'PHI:NUM:_', '+SEM:directional', 'TAIL:V,+SEM:directional', '-SPEC:N', '!COMP:*', 'ARG', '-SPEC:FORCE', 'P', '-SPEC:iWH', '-SPEC:P', '-COMP:T', '-COMP:T/fin', '-VAL', '-SPEC:iR', '-SPEC:*', 'LANG:FI'}
lla             {'-COMP:ADV', '-SPEC:ADV', 'TAIL:*V', '-COMP:A', 'SPEC:*', '-SPEC:T/fin', '-SPEC:V', 'adjoinable', '-SPEC:Neg/fin', '-COMP:N', 'PHI:DET:_', 'COMP:D', '-SPEC:v', '-COMP:uWH', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:C', 'PHI:PER:_', 'PHI:NUM:_', '!COMP:*', 'PF:P(lla)', 'ARG', '-SPEC:FORCE', 'LF:by', 'P', 'TAIL:T', '-SPEC:iWH', '-SPEC:P', '-COMP:T', '-COMP:T/fin', '-VAL', '-SPEC:iR', '-SPEC:N', 'LANG:FI'}
Luisa           ['LANG:IT']
Luisa-          {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', 'LF:Luisa', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'LANG:IT', 'COMP:R', '-COMP:V', 'PF:Luisa', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SEM:directional', '-SPEC:N', '-SPEC:FORCE'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'V', 'COMP:P', 'SPEC:TO/inf', '-COMP:P', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'COMP:D', 'PHI:PER:_', 'PHI:NUM:_', '!COMP:*', 'ARG', 'CLASS:TR', '-COMP:V', 'LF:read', 'PF:luke', '-VAL', '-SPEC:FORCE', 'LANG:FI'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'V', 'COMP:P', 'SPEC:TO/inf', '-COMP:P', 'SPEC:ADV', 'LF:find', '!COMP:D', '-SPEC:T/fin', 'ASP', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'COMP:D', 'PHI:PER:_', 'PHI:NUM:_', '!COMP:*', 'PF:loyta-', 'ASP:BOUNDED', 'ARG', 'CLASS:TR', '-COMP:V', '-VAL', '-SPEC:FORCE', 'LANG:FI'}
Mary            ['LANG:EN']
Mary-           {'-COMP:A', '-COMP:C/fin', 'COMP:C', '-SPEC:V', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', '-COMP:V', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', 'PF:Mary', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'LF:Mary', '-COMP:VA/inf', 'N', '-SPEC:INF', 'LANG:EN', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-adjoinable', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SEM:directional', '-SPEC:FORCE'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'PF:Merja', '-COMP:A', '-COMP:C/fin', 'COMP:C', '-SPEC:V', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', '-COMP:V', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-adjoinable', 'COMP:T/prt', 'LF:Merja', 'COMP:D/rel', '-SPEC:P', '-SEM:directional', '-SPEC:FORCE', 'LANG:FI'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'MA/inf', 'ADV', 'COMP:v', 'SPEC:*', '-SPEC:T/fin', 'LF:by', 'TAIL:T', '-SPEC:Neg/fin', 'adjoinable', 'PF:malla', '-SPEC:FORCE', '-SPEC:N', 'LANG:FI'}
meren           ['LANG:FI']
mere-           {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', 'LF:ocean', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', 'PF:meri', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE', '-SPEC:N', 'LANG:FI'}
mies            {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', 'PF:mies', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', 'LF:man', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE', '-SPEC:N', 'LANG:FI'}
mistake         {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', 'LF:mistake', 'LANG:EN', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'PF:mistake', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:N', '-SPEC:FORCE'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', 'LF:what', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', 'PF:mika-', '-SPEC:FORCE', '-SPEC:N', 'LANG:FI'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'-VAL', 'V', 'COMP:P', 'SPEC:TO/inf', '-COMP:P', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', 'COMP:D', 'PF:move', '-COMP:v', 'PHI:NUM:_', '+SEM:directional', 'PHI:GEN:_', '!COMP:*', 'ARG', 'CLASS:TR', 'LF:move', '-COMP:V', 'LANGN:EN', 'PHI:PER:_', '-SPEC:FORCE'}
mukavasti       ['LANG:EN']
mukava-         {'SPEC:D', '2SPEC', '0', 'LF:comfortably', 'PF:mukavasti', 'LANG:FI'}
must            {'-SPEC:TO/inf', 'COMP:v', 'T', 'SPEC:TO/inf', 'SPEC:*', 'FIN', 'COMP:Neg', '-SPEC:T/fin', '-SPEC:V', 'SPEC:FORCE', '!PROBE:V', 'PHI:DET:_', '-SPEC:v', 'SPEC:C/fin', '!SPEC:*', 'LANG:EN', '-SPEC:C', 'PHI:NUM:_', 'MODAL', '-COMP:INF', '!COMP:*', 'SPEC:D', 'ARG', 'COMP:V', '-SPEC:Neg', 'T/fin', 'COMP:T/prt', '-COMP:T/fin', 'PHI:GEN:_', 'PHI:PER:_', 'VAL', '-SPEC:N', 'LF:must', 'PF:must'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'V', 'COMP:P', 'SPEC:TO/inf', '-COMP:P', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', 'COMP:D', '-COMP:v', 'PHI:PER:_', 'PHI:NUM:_', 'PF:myy', 'LF:sell', '!COMP:*', 'ASP:BOUNDED', 'ARG', 'CLASS:TR', '-COMP:V', '-VAL', '-SPEC:FORCE', 'LANG:FI'}
naki            ['LANG:FI']
nake-           {'-COMP:MA/ssa', 'LF:see', 'V', 'COMP:P', 'SPEC:TO/inf', '-COMP:P', 'SPEC:ADV', '-COMP:ESSA/inf', '-SPEC:T/fin', 'ASP', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'COMP:D', 'PHI:PER:_', 'PHI:NUM:_', '!COMP:*', 'ASP:BOUNDED', 'ARG', 'CLASS:TR', '-COMP:V', '-COMP:MA/tta', '-VAL', '-SPEC:FORCE', 'LANG:FI', 'PF:nake'}
nayttaa         ['LANG:FI']
naytta-         {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'LF:seem', '-COMP:N', 'SEM:internal', '-COMP:v', 'PF:naytta', '!SPEC:D', '-ARG', '-COMP:V', '!COMP:VA/inf', '-SPEC:FORCE', 'VAL', 'LANG:FI'}
ndo             {'COMP:v', '!COMP:*', '-COMP:C/fin', 'PF:PRG', '-COMP:FORCE', '-SPEC:T/fin', 'LF:ing', '-SPEC:V', 'COMP:V', 'INF', 'PRG', 'VAL', 'LANG:EN', '?ARG', '-COMP:T/fin'}
ne              {'-COMP:uR', 'PF:ne', '-COMP:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', 'LF:those', 'D', '-SPEC:INF', 'COMP:N', '-SPEC:C', '-COMP:D', 'OP', '!PROBE:N', '!COMP:*', '-SPEC:MA/lla', '-ARG', 'PHI:PER:3', 'PHI:NUM:PL', '-SPEC:P', '-COMP:T/fin', 'LANG:FI'}
niiden          ['LANG:EN']
nen             {'SPEC:*', '-SPEC:D', 'COMP:0', 'LF:ing', '-SPEC:A', 'A', 'TAIL:D', 'PF:a', 'LANG:FI'}
not             {'Neg', 'LF:not', 'PHI:GEN:_', 'PHI:NUM:_', '!COMP:*', 'SPEC:*', '-COMP:C', 'ARG', 'PF:not', '-SPEC:T/fin', 'PHI:DET:_', 'POL:NEG', '-VAL', 'PHI:PER:_', 'LANG:EN', '-COMP:FIN', '-COMP:D'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'PF:nukku', 'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'PHI:PER:_', '-COMP:Neg/fin', '-COMP:D', 'PHI:NUM:_', 'CLASS:INTR', 'SPEC:D', 'LF:sleep', 'ARG', '-COMP:V', '-COMP:MA/inf', '-COMP:T', '-VAL', '-SPEC:FORCE', '-COMP:T/fin', 'LANG:FI'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'LANG:FI', 'N', '-SPEC:INF', 'PF:omaisuuden', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE', '-SPEC:N', 'LF:possessions'}
operatoria      ['LANG:IT']
operatoria-     {'2SPEC', '0', 'LF:operation', 'SPEC:D', 'PF:operatoria', 'LANG:IT'}
ostaa           ['LANG:FI']
osta-           {'V', 'COMP:P', 'SPEC:TO/inf', '-COMP:P', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'COMP:D', 'PHI:PER:_', 'PHI:NUM:_', '!COMP:*', 'PF:osta', 'ASP:BOUNDED', 'ARG', 'CLASS:TR', '-COMP:V', '-VAL', '-SPEC:FORCE', 'LF:buy', 'LANG:FI'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'SEM:nonreferential', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', 'PF:paiva', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'COMP:R', 'LF:day', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE', '-SPEC:N', 'LANG:FI'}
past            {'-COMP:ADV', '-SPEC:ADV', '-COMP:A', '-SPEC:T/fin', '-SPEC:V', 'adjoinable', '-SPEC:Neg/fin', '-COMP:N', '-float', 'PHI:DET:_', 'COMP:D', 'LF:past', '-SPEC:v', '-COMP:uWH', '-SPEC:INF', 'LANG:EN', '-SPEC:C', '-SPEC:C/fin', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '!COMP:*', '-SPEC:*', 'ARG', '-SPEC:FORCE', 'P', '-SPEC:iWH', '-SPEC:P', 'PF:past', '-COMP:T', '-VAL', '-SPEC:iR', '-SPEC:N', '-COMP:T/fin'}
Pariisia        ['LANG:FI']
Pariisi-        {'PF:Pariisi', '-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', 'LF:Paris', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE', '-SPEC:N', 'LANG:FI'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', 'PF:Pekka', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', 'LF:Pekka', '-SPEC:FORCE', '-SPEC:N', '-SEM:directional', 'LANG:FI'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'LF:fear', 'V', 'COMP:P', 'SPEC:TO/inf', '-COMP:P', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'COMP:D', 'PHI:PER:_', 'PHI:NUM:_', 'PF:pelkaa', '!COMP:*', 'ARG', 'CLASS:TR', '-COMP:V', '-VAL', '-SPEC:FORCE', 'LANG:FI'}
persuades       ['LANG:EN']
persuade-       {'V', 'COMP:P', 'SPEC:TO/inf', 'SEM:external', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', 'COMP:TO/inf', '-COMP:v', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', '!COMP:*', 'LF:persuade', 'ARG', '-COMP:V', '-VAL', 'PHI:PER:_', 'PF:persuade', '-SPEC:FORCE'}
peruuntui       ['LANG:FI']
peruuntu-       {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'LANG:FI', 'PHI:NUM:_', 'SPEC:D', 'ARG', 'PF:peruuntui', '-COMP:V', 'LF:cancelled', '-VAL', 'PHI:PER:_', '-SPEC:FORCE'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'V', 'COMP:P', 'SPEC:TO/inf', '-COMP:P', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'COMP:D', 'PHI:PER:_', 'PF:pese_asp', 'PHI:NUM:_', '!COMP:*', 'ASP:BOUNDED', 'ARG', 'CLASS:TR', '-COMP:V', '-VAL', '-SPEC:FORCE', 'LF:wash', 'LANG:FI'}
pese-           {'V', 'COMP:P', 'SPEC:TO/inf', '-COMP:P', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'COMP:D', 'PF:pese', 'PHI:PER:_', 'PHI:NUM:_', '!COMP:*', 'ARG', 'CLASS:TR', '-COMP:V', '-VAL', '-SPEC:FORCE', 'LF:wash', 'LANG:FI'}
petardi         {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'LF:firecrackers', 'N', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'LANG:IT', 'COMP:R', '-COMP:V', 'PF:petardi', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:N', '-SPEC:FORCE'}
pieni           ['LANG:FI']
pieni-          {'SPEC:D', '2SPEC', '0', 'LF:small', 'PF:pieni-', 'LANG:FI'}
poikien         ['LANG:FI']
poika-          {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', 'PF:poika', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE', '-SPEC:N', 'LF:boy', 'LANG:FI'}
puhelinta       ['LANG:FI']
puhelin-        {'2SPEC', 'LF:phone', '0', 'SPEC:D', 'PF:puhelin', 'LANG:FI'}
punainen        ['LANG:FI']
puna-           {'2SPEC', 'PF:puna-', '0', 'SPEC:D', 'LF:red', 'LANG:FI'}
presupposto     {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', 'PF:presupposto', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'LF:presupposition', 'LANG:IT', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:N', '-SPEC:FORCE'}
primary         {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'PF:primary', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', 'LF:nurse', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'LANG:IT', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:N', '-SPEC:FORCE'}
promises        ['LANG:EN']
promise-        {'-VAL', 'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', 'PF:promise', '-COMP:N', 'SEM:internal', 'COMP:D', '-COMP:v', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', 'SPEC:D', 'ARG', '-COMP:V', 'LF:promise', 'PHI:PER:_', '-SPEC:FORCE'}
problem         {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'LF:problem', 'N', '-SPEC:INF', 'LANG:EN', 'PF:problem', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:N', '-SPEC:FORCE'}
pyytaa          ['LANG:FI']
pyyta-          {'V', 'COMP:P', 'SPEC:TO/inf', 'SEM:external', 'SPEC:ADV', '-COMP:P', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', 'LF:ask', '-COMP:v', 'COMP:D', 'PHI:PER:_', 'PHI:NUM:_', 'PF:pyyda', '!COMP:*', 'ARG', 'CLASS:TR', '-COMP:V', '-VAL', '-SPEC:FORCE', 'LANG:FI'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'PF:race', 'LANG:EN', '-COMP:D', 'PHI:NUM:_', 'PHI:GEN:_', 'CLASS:INTR', 'LAMG:EN', 'SPEC:D', 'ARG', '-COMP:V', '-COMP:MA/inf', 'LF:race', '-VAL', 'PHI:PER:_', '-COMP:T/fin', '-SPEC:FORCE'}
raukesi         ['LANG:FI']
raukea-         {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'PHI:PER:_', 'PHI:NUM:_', 'ARG', 'LF:terminate', '-COMP:V', '-VAL', '-SPEC:FORCE', 'PF:raukea', 'LANG:FI'}
red             ['LANG:EN']
red-            {'2SPEC', '0', 'SPEC:D', 'LF:red', 'PF:red', 'LANG:EN'}
saavuttaa       ['LANG:FI']
saavutta-       {'V', 'COMP:P', 'SPEC:TO/inf', '-COMP:P', 'SPEC:ADV', 'LF:reach', '!COMP:D', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'COMP:D', 'PF:saavutta-', 'PHI:PER:_', 'PHI:NUM:_', '!COMP:*', 'ASP:BOUNDED', 'ARG', 'CLASS:TR', '-COMP:V', '-VAL', '-SPEC:FORCE', 'LANG:FI'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'V', 'COMP:P', 'SPEC:TO/inf', '-COMP:P', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'COMP:FORCE', 'SPEC:P', 'COMP:VA/inf', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'PF:sano-', 'COMP:D', 'PHI:PER:_', 'PHI:NUM:_', 'LF:say', '!COMP:*', 'SPEC:D', 'ARG', 'CLASS:TR', '-COMP:V', '-VAL', '-SPEC:FORCE', 'LANG:FI'}
said            ['LANG:EN']
say'            {'V', 'COMP:P', 'SPEC:TO/inf', '!COMP:FORCE', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PF:say', '-COMP:N', 'PHI:DET:_', '-COMP:v', 'LANG:EN', 'PHI:NUM:_', 'LF:say', 'PHI:GEN:_', 'SPEC:D', 'ARG', '-COMP:V', '-VAL', 'PHI:PER:_', '-SPEC:FORCE'}
say-            {'V', 'COMP:P', 'SPEC:TO/inf', '!COMP:FORCE', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PF:say', '-COMP:N', 'PHI:DET:_', '-COMP:v', 'LANG:EN', 'PHI:NUM:_', 'LF:say', 'PHI:GEN:_', 'SPEC:D', 'ARG', '-COMP:V', '-VAL', 'PHI:PER:_', '-SPEC:FORCE'}
sala            ['LANG:IT']
sala-           {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'LANG:IT', 'COMP:R', '-COMP:V', 'LF:room', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE', '-SPEC:N', 'PF:sala'}
scoppiati       ['LANG:IT']
scoppia-        {'V', 'COMP:P', 'SPEC:TO/inf', 'LF:explode', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', 'PF:scoppia', '-COMP:v', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', 'LANG:IT', '-COMP:V', '-VAL', 'PHI:PER:_', '-SPEC:FORCE'}
sentenza        {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'LF:sentence', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'LANG:IT', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', 'PF:sentenza', '-SPEC:N', '-SPEC:FORCE'}
Seine           ['LANG:EN']
Seine-          {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', 'LF:Seine', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', 'LANG:EN', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'PF:Seine', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:N', '-SPEC:FORCE'}
sembrano        ['LANG:IT']
sembra-         {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:P', 'LF:seem', '-COMP:N', '-ASP', 'PF:sembra', '-COMP:v', 'LANG:EN', '-COMP:D', 'SPEC:D', '-ARG', '!COMP:ARE/inf', '-COMP:V', '-VAL', '-SPEC:FORCE'}
sleeps          ['LANG:EN']
sleep           {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'PF:sleep', '-SPEC:T/fin', 'ASP', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'LANG:EN', '-COMP:D', 'PHI:NUM:_', 'PHI:GEN:_', 'CLASS:INTR', 'SPEC:D', 'LF:sleep', 'ARG', '-COMP:V', '-COMP:MA/inf', '-VAL', 'PHI:PER:_', '-SPEC:FORCE'}
sleep-          {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'PF:sleep', '-SPEC:T/fin', 'ASP', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'LANG:EN', '-COMP:D', 'PHI:NUM:_', 'PHI:GEN:_', 'CLASS:INTR', 'SPEC:D', 'LF:sleep', 'ARG', '-COMP:V', '-COMP:MA/inf', '-VAL', 'PHI:PER:_', '-SPEC:FORCE'}
solution        {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', 'LANG:EN', 'LF:solution', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', 'PF:solution', '-SPEC:N', '-SPEC:FORCE'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '!COMP:A/inf', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-COMP:V', 'PF:sopimus', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE', 'LF:agreement', 'LANG:FI'}
spinge          ['LANG:IT']
spinge-         {'V', 'SPEC:TO/inf', '-COMP:P', 'SPEC:ADV', '!COMP:D', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'LF:push', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'PHI:NUM:_', 'PHI:GEN:_', 'PF:spinge', 'ARG', 'LANG:IT', '-COMP:V', '-VAL', 'PHI:PER:_', '-SPEC:FORCE'}
ssa             {'-COMP:ADV', '-SPEC:ADV', '-COMP:A', 'SPEC:*', 'PF:ssa', '-SPEC:T/fin', '-SPEC:V', 'adjoinable', '-SPEC:Neg/fin', '-COMP:N', 'PHI:DET:_', 'COMP:n/MA', 'COMP:D', '-SPEC:v', '-COMP:uWH', '-SPEC:INF', '-SPEC:C/fin', 'LF:in', '-SPEC:C', 'PHI:PER:_', 'PHI:NUM:_', '!COMP:*', 'ARG', '-SPEC:FORCE', 'TAIL:V', 'P', '-SPEC:iWH', '-SPEC:P', '-COMP:T', '-COMP:T/fin', '-VAL', '-SPEC:iR', '-SPEC:N', 'LANG:FI'}
stanno          ['LANG:IT']
sta-            {'LF:stay', 'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-ASP', 'SEM:internal', '-COMP:v', 'LANG:EN', 'PHI:NUM:_', 'COMP:PRG', 'PHI:GEN:_', 'SPEC:D', 'ARG', '-COMP:V', '-VAL', 'PHI:PER:_', 'PF:sta', '-SPEC:FORCE'}
sti             {'ADV', '!COMP:*', 'SPEC:*', '-ARG', '-SPEC:T/fin', 'LF:by', 'TAIL:T', '-SPEC:Neg/fin', 'adjoinable', 'PF:sti', '-SPEC:FORCE', '-SPEC:N', 'LANG:FI'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-SPEC:R', '-SPEC:ADV', 'LF:socks', '-COMP:A', '-COMP:C/fin', 'COMP:C', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'PF:sukka-', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE', '-SPEC:N', 'LANG:FI'}
surprised       ['LANG:EN']
surprise-       {'V', 'COMP:P', 'SPEC:TO/inf', '-COMP:P', 'SPEC:ADV', 'LF:surprise', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PF:surprise', '-COMP:N', 'PHI:DET:_', '-COMP:v', 'COMP:D', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', '!COMP:*', 'ARG', 'CLASS:TR', '-COMP:V', '-VAL', 'PHI:PER:_', '-COMP:T/fin', '-SPEC:FORCE'}
talo            {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'LF:house', 'COMP:R', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE', '-SPEC:N', 'LANG:FI', 'PF:talo'}
tama            ['LANG:EN']
tama-           {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', 'PF:tama', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-COMP:V', 'PHI', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE', '-SPEC:N', 'LF:this', 'LANG:FI'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'PF:taytyy', 'V', 'COMP:P', 'SPEC:*', 'SPEC:TO/inf', 'FIN', 'LF:must', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-ASP', '-COMP:v', '!COMP:A/inf', 'PHI:PER:_', 'PHI:NUM:_', 'MODAL', 'ARG', '-COMP:V', '-VAL', '-SPEC:FORCE', 'LANG:FI'}
teki            ['LANG:FI']
teke-           {'V', 'PF:teke', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', '-COMP:P', '!COMP:D', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'COMP:D', 'LF:make', 'PHI:PER:_', 'PHI:NUM:_', '!COMP:*', 'ASP:BOUNDED', 'ARG', 'CLASS:TR', '-COMP:V', '-VAL', '-SPEC:FORCE', '-COMP:A/inf', 'LANG:FI'}
that            {'LF:that', 'FORCE', 'COMP:C/fin', '-VAL', '!COMP:*', '!PROBE:FIN', 'FIN', '-ARG', 'COMP:T/fin', 'PF:that', 'LANG:EN', '-SPEC:*'}
the             {'-COMP:uR', '-COMP:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', 'LF:the', 'PF:the', 'PHI:DEF:DEF', 'D', '-SPEC:INF', 'LANG:EN', 'COMP:N', '-SPEC:C', '-COMP:D', 'OP', '!PROBE:N', '!COMP:*', '-SPEC:MA/lla', '-ARG', '-SPEC:P', '-COMP:T/fin'}
to              {'-COMP:A', 'PF:to', '-SPEC:V', 'PHI:DET:_', '-COMP:N', '-COMP:uWH', '-SPEC:C', 'PHI:PER:_', 'PHI:NUM:_', 'P', '-COMP:T', '-SPEC:N', '-COMP:T/fin', '-SPEC:v', '-COMP:ADV', '-SPEC:ADV', '-SPEC:T/fin', 'adjoinable', '-SPEC:Neg/fin', '-float', 'COMP:D', '-SPEC:INF', 'LANG:EN', '-SPEC:C/fin', '+SEM:directional', 'PHI:GEN:_', '!COMP:*', 'LF:to', 'ARG', 'TAIL:V', '-SPEC:iWH', '-SPEC:P', '-VAL', '-SPEC:iR', '-SPEC:*', '-SPEC:FORCE'}
to_inf          {'COMP:v', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'adjoinable', 'TO/inf', 'LANG:EN', '!COMP:*', 'PF:TO/inf', 'LF:TO/inf', 'COMP:V', 'INF', '-VAL', '?ARG', '-COMP:T/fin', '-SPEC:v'}
towards         {'-COMP:ADV', '-SPEC:ADV', 'LF:towards', '-COMP:A', '-SPEC:T/fin', '-SPEC:V', 'adjoinable', '-SPEC:Neg/fin', '-COMP:N', '-float', 'PHI:DET:_', 'COMP:D', '-SPEC:v', '-COMP:uWH', '-SPEC:INF', 'LANG:EN', '-SPEC:C', '-SPEC:C/fin', 'PHI:PER:_', 'PHI:NUM:_', 'PF:towards', 'PHI:GEN:_', '!COMP:*', '-SPEC:*', 'ARG', '-SPEC:FORCE', 'TAIL:V', 'P', '-SPEC:iWH', '-SPEC:P', '-COMP:T', '-VAL', '-SPEC:iR', '-SPEC:N', '-COMP:T/fin'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'LF:nudge', 'V', 'COMP:P', 'SPEC:TO/inf', '-COMP:P', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'COMP:D', 'PHI:PER:_', 'PHI:NUM:_', '!COMP:*', 'ARG', 'CLASS:TR', 'PF:tonaise', '-COMP:V', '-VAL', '-SPEC:FORCE', 'LANG:FI'}
tta             {'-COMP:ADV', '-SPEC:ADV', '-COMP:A', 'SPEC:*', '-SPEC:T/fin', '-SPEC:V', 'adjoinable', '-SPEC:Neg/fin', '-COMP:N', 'PHI:DET:_', 'COMP:n/MA', 'COMP:D', '-SPEC:v', '-COMP:T/fin', '-COMP:uWH', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:C', 'PHI:PER:_', 'PHI:NUM:_', 'ADV', '!COMP:*', 'ARG', '-SPEC:FORCE', 'P', '-SPEC:iWH', 'PF:tta', '-SPEC:P', '-COMP:T', 'LF:without', '-VAL', '-SPEC:iR', '-SPEC:N', 'LANG:FI'}
tries           ['LANG:EN']
try-            {'!COMP:TO/inf', 'V', 'COMP:P', 'SPEC:TO/inf', '!COMP:-ARG', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', 'SEM:internal', '-COMP:v', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', 'SPEC:D', 'ARG', '-COMP:V', 'PF:try', '-VAL', '-SPEC:FORCE', 'LF:try'}
verifiche       {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', 'LF:verification', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'LANG:IT', 'COMP:R', '-COMP:V', 'PF:verifiche', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:N', '-SPEC:FORCE'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'V', 'COMP:P', '!COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'LF:flow', 'PHI:PER:_', '-COMP:D', 'PHI:NUM:_', 'CLASS:INTR', 'SPEC:D', 'ARG', '-COMP:V', 'PF:virtaa', '-COMP:MA/inf', '-VAL', '-SPEC:FORCE', 'LANG:FI'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', 'SEM:internal', '-COMP:v', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', '!COMP:*', 'ARG', 'PF:volu', '-COMP:V', 'LF:want', '-VAL', 'PHI:PER:_', '-SPEC:*', '-SPEC:FORCE'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'SEM:achievement', 'PF:voitta', 'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', '-COMP:P', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'LF:win', 'PHI:DET:_', '-COMP:N', '-COMP:v', 'COMP:D', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', '!COMP:*', 'ASP:BOUNDED', 'ARG', 'CLASS:TR', '-COMP:V', '-VAL', 'PHI:PER:_', '-SPEC:FORCE'}
wants           ['LANG:EN']
want-           {'-SPEC:TO/inf', 'V', 'COMP:P', '-COMP:P', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', 'COMP:TO/inf', '-COMP:v', 'COMP:D', 'PF:want', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', '!COMP:*', 'ARG', 'CLASS:TR', '-COMP:V', 'LF:want', '-VAL', 'PHI:PER:_', '-SPEC:FORCE'}
what            ['LANG:EN']
what-           {'-COMP:A', '-COMP:C/fin', 'COMP:C', 'LF:what', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', 'PF:what', '-COMP:AUX', '-SPEC:uWH', '-COMP:V', 'PHI_N', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', 'N', '-SPEC:INF', 'LANG:EN', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE'}
which           {'-COMP:uR', '-COMP:P', 'PF:which', '-SPEC:T/fin', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', 'D', '-SPEC:INF', 'LANG:EN', 'COMP:N', '-SPEC:C', 'LF:which', '-COMP:D', 'OP', '!PROBE:N', 'OP:WH', '!COMP:*', '-SPEC:MA/lla', '-ARG', '-SPEC:P', '-COMP:T/fin'}
who             ['LANG:EN']
who-            {'-COMP:A', '-COMP:C/fin', 'COMP:C', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', '-COMP:V', 'PHI_N', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', 'N', '-SPEC:INF', 'LANG:EN', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'PF:who', 'LF:who', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE'}
whether         {'!PROBE:FIN', 'FIN', 'LF:whether', 'LANG:EN', 'OP:Q', 'OP', 'PF:whether', 'Q', 'FORCE', 'COMP:C/fin', 'OP:WH', '!COMP:*', '-ARG', 'COMP:T/fin', '-VAL', '-SPEC:*'}
yrittaa         ['LANG:FI']
yritta-         {'V', 'COMP:P', 'SPEC:TO/inf', '!COMP:-ARG', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'PHI:DET:_', '-COMP:N', 'SEM:internal', '-COMP:v', '!COMP:A/inf', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', 'SPEC:D', 'ARG', 'PF:yritta', '-COMP:V', '-VAL', '-SPEC:FORCE', 'LF:try'}
mina            ['LANG:EN']
mina-           {'-COMP:A', '-COMP:C/fin', 'COMP:C', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', 'LF:I', '-COMP:V', 'PHI_N', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'PF:mina', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE', 'LANG:FI'}
sina            ['LANG:EN']
sina-           {'-COMP:A', '-COMP:C/fin', 'COMP:C', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', '-COMP:V', 'PHI_N', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', 'LF:you', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'PF:sina', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE', 'LANG:FI'}
han             ['LANG:EN']
han-            {'-COMP:A', '-COMP:C/fin', 'COMP:C', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', 'LF:s/he', '-COMP:AUX', '-SPEC:uWH', '-COMP:V', 'PHI_N', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', 'PF:han', 'COMP:uR', 'COMP:R/D', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE', 'LANG:FI'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-COMP:A', '-COMP:C/fin', 'PF:me', 'COMP:C', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', '-COMP:V', 'PHI_N', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'LF:we', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE', 'LANG:FI'}
te              ['LANG:EN']
te-             {'-COMP:A', 'PF:te', '-COMP:C/fin', 'COMP:C', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', '-COMP:V', 'PHI_N', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', 'LF:you', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE', 'LANG:FI'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'-COMP:A', '-COMP:C/fin', 'COMP:C', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', '-COMP:V', 'PHI_N', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'PF:he', '-COMP:VA/inf', 'N', '-SPEC:INF', 'LF:they', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE', 'LANG:FI'}
se              {'-COMP:uR', '-COMP:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', 'D', '-SPEC:INF', 'COMP:N', '-SPEC:C', '-COMP:D', 'LF:the/that', 'OP', '!PROBE:N', '!COMP:*', '-SPEC:MA/lla', 'PF:se', '-ARG', '-SPEC:P', '-COMP:T/fin', 'LANG:FI'}
sen             {'TAIL:*POL:NEG', '-COMP:uR', '-COMP:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', 'PF:sen', 'D', 'TAIL:PHI', '-SPEC:INF', 'COMP:N', '-SPEC:C', '-COMP:D', 'LF:the/that', 'TAIL:ASP', 'OP', '!PROBE:N', '!COMP:*', '-SPEC:MA/lla', '-ARG', '-SPEC:P', '-COMP:T/fin', 'LANG:FI'}
I               ['LANG:EN']
I-              {'-COMP:A', '-COMP:C/fin', 'COMP:C', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', 'LF:I', 'PF:I', 'PHI_N', '-COMP:V', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', 'N', '-SPEC:INF', 'LANG:EN', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE'}
you             ['LANG:EN']
you-            {'-COMP:A', '-COMP:C/fin', 'COMP:C', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', '-COMP:V', 'PHI_N', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', 'LF:you', 'PF:you', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', 'N', '-SPEC:INF', 'LANG:EN', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE'}
he              ['LANG:EN']
he-             {'-COMP:A', '-COMP:C/fin', 'COMP:C', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', '-COMP:V', 'PHI_N', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'PF:he', '-COMP:VA/inf', 'N', '-SPEC:INF', 'LANG:EN', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', 'LF:he', '-SPEC:FORCE'}
she             ['LANG:EN']
she-            {'-COMP:A', '-COMP:C/fin', 'COMP:C', 'PF:she', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', '-COMP:V', 'PHI_N', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', 'N', '-SPEC:INF', 'LANG:EN', '-SPEC:C/fin', 'LF:she', 'COMP:uR', 'COMP:R/D', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE'}
we              ['LANG:EN']
we-             {'-COMP:A', '-COMP:C/fin', 'COMP:C', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', '-COMP:V', 'PHI_N', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'LF:we', '-COMP:VA/inf', 'N', '-SPEC:INF', 'LANG:EN', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'PF:we', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE'}
you_pl          ['LANG:EN']
you_pl-         {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', 'LF:you_pl', 'LANG:EN', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'COMP:R/D', 'COMP:R', '-COMP:V', 'PHI', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:N', 'PF:you_pl', '-SPEC:FORCE'}
they            ['LANG:EN']
they-           {'-COMP:A', '-COMP:C/fin', 'COMP:C', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', '-COMP:V', 'PHI_N', 'PF:they', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', 'N', '-SPEC:INF', 'LF:they', 'LANG:EN', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE'}
it              ['LANG:EN']
it-             {'-COMP:uR', '-COMP:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', 'PF:it', 'D', '-SPEC:INF', 'LANG:EN', 'COMP:N', '-SPEC:C', '-COMP:D', 'OP', '!PROBE:N', '!COMP:*', '-SPEC:MA/lla', '-ARG', 'LF:it/that', '-SPEC:P', '-COMP:T/fin'}
io              ['LANG:EN']
io-             {'-COMP:A', '-COMP:C/fin', 'COMP:C', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', 'LF:I', 'PF:io', '-COMP:V', 'PHI_N', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'LANG:IT', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE'}
tu              ['LANG:EN']
tu-             {'-COMP:A', '-COMP:C/fin', 'COMP:C', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', '-COMP:V', 'PHI_N', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', 'LF:you', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'PF:tu', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'LANG:IT', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE'}
lui             ['LANG:EN']
lui-            {'-COMP:A', '-COMP:C/fin', 'COMP:C', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', '-COMP:V', 'PHI_N', 'PF:lui', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'LANG:IT', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', 'LF:he', '-SPEC:FORCE'}
lei             ['LANG:EN']
lei-            {'-COMP:A', '-COMP:C/fin', 'COMP:C', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', 'PF:lei', '-COMP:V', 'PHI_N', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', 'LF:she', 'COMP:uR', 'COMP:R/D', 'LANG:IT', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE'}
noi             ['LANG:EN']
noi-            {'PF:noi', '-COMP:A', '-COMP:C/fin', 'COMP:C', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', '-COMP:V', 'PHI_N', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'LF:we', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'LANG:IT', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE'}
voi             ['LANG:EN']
voi-            {'-COMP:A', '-COMP:C/fin', 'COMP:C', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', 'LF:you_pl', '-COMP:AUX', '-SPEC:uWH', '-COMP:V', 'PHI_N', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', 'PF:voi', 'COMP:uR', 'COMP:R/D', 'LANG:IT', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE'}
loro            ['LANG:EN']
loro-           {'-COMP:A', '-COMP:C/fin', 'COMP:C', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', '-COMP:V', 'PHI_N', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', 'N', '-SPEC:INF', 'LF:they', '-SPEC:C/fin', 'PF:loro', 'COMP:uR', 'COMP:R/D', 'LANG:IT', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE'}
mi              ['LANG:EN']
mi-             {'-COMP:A', '-COMP:C/fin', 'COMP:C', 'CL', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', '-COMP:V', 'PHI_N', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', 'PF:mi(cl)', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'LANG:IT', 'COMP:R', 'LF:me', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE'}
la              ['LANG:EN']
la-             {'-COMP:A', '-COMP:C/fin', 'COMP:C', 'CL', '-SPEC:V', 'PF:la(cl)', '-COMP:*', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', 'LF:her', '-COMP:V', 'PHI_N', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'LANG:IT', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE'}
lo              ['LANG:EN']
lo-             {'-COMP:A', '-COMP:C/fin', 'COMP:C', 'CL', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', '-COMP:V', 'PHI_N', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', 'N', '-SPEC:INF', 'PF:lo(cl)', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'LANG:IT', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', 'LF:him', '-SPEC:FORCE'}
si              ['LANG:EN']
si-             {'-COMP:A', '-COMP:C/fin', 'COMP:C', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', 'PF:si(cl)', '-COMP:AUX', '-SPEC:uWH', '-COMP:V', 'PHI_N', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', 'COMP:uR', 'CAL:CL', 'COMP:R/D', 'LANG:IT', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', 'LF:3sg', '-SPEC:P', '-SPEC:FORCE'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'LF:there', '-COMP:A', '-COMP:C/fin', 'COMP:C', 'PF:ci', '-SPEC:V', '-COMP:*', '-COMP:N', '-COMP:v', '-COMP:AUX', '-SPEC:uWH', '-COMP:V', 'PHI_N', '-SPEC:N', '-SPEC:R', '-SPEC:ADV', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', 'N', '-SPEC:INF', '-SPEC:C/fin', 'COMP:uR', 'COMP:R/D', 'LANG:IT', 'COMP:R', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:FORCE'}
[-n]            {'PHI', 'PHI:HUM:HUM', 'PHI:PER:1', 'PHI:NUM:SG', 'inflectional', 'PHI:DET:DEF', 'LANG:FI'}
[-t]            {'PHI:PER:2', 'PHI', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'inflectional', 'PHI:DET:DEF', 'LANG:FI'}
[-V]            {'PHI:PER:3', 'PHI', 'PHI:NUM:SG', 'inflectional', 'LANG:FI'}
[-mme]          {'PHI:NUM:PL', 'PHI', 'PHI:HUM:HUM', 'PHI:PER:1', 'inflectional', 'PHI:DET:DEF', 'LANG:FI'}
[-mme]          {'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:PER:1', 'inflectional', 'PHI:DET:DEF', 'LANG:FI'}
[-tte]          {'PHI:PER:2', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI', 'inflectional', 'PHI:DET:DEF', 'LANG:FI'}
[-vat]          {'PHI:PER:3', 'PHI:NUM:PL', 'PHI', 'inflectional', 'LANG:FI'}
[-ni]           {'PHI', 'PHI:HUM:HUM', 'PHI:PER:1', 'PHI:NUM:SG', 'inflectional', 'PHI:DET:DEF', 'LANG:FI'}
[-si]           {'PHI:PER:2', 'PHI', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'inflectional', 'PHI:DET:DEF', 'LANG:FI'}
[-nsa]          {'PHI:PER:3', 'PHI', 'PHI:NUM:SG', 'inflectional', 'LANG:FI'}
[-an]           {'PHI:PER:3', 'PHI', 'PHI:DET:DET', 'PHI:NUM:SG', 'inflectional', 'LANG:FI'}
[-nne]          {'PHI:PER:2', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF', 'LANG:FI'}
[-s]            {'PHI:PER:3', 'PHI', 'PHI:NUM:SG', 'PHI:GEN:F', 'inflectional', 'LANG:EN', 'PHI:GEN:M'}
[-0]            {'PHI:PER:2', 'inflectional', 'PHI:PER:1', 'PHI:DET:DEF', 'PHI:PER:3', 'PHI:NUM:PL', 'PHI', 'PHI:NUM:SG', 'LANG:EN', 'PHI:GEN:N'}
[-o]            {'PHI', 'PHI:HUM:HUM', 'PHI:PER:1', 'PHI:NUM:SG', 'inflectional', 'PHI:DET:DEF', 'LANG:IT'}
[-i]            {'PHI:PER:2', 'PHI', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'inflectional', 'PHI:DET:DEF', 'LANG:IT'}
[-a]            {'PHI:PER:3', 'PHI', 'PHI:NUM:SG', 'inflectional', 'PHI:DET:DEF', 'LANG:IT'}
[-e]            {'PHI:PER:3', 'PHI', 'PHI:NUM:SG', 'inflectional', 'PHI:DET:DEF', 'LANG:IT'}
[-iamo]         {'PHI:NUM:PL', 'PHI', 'PHI:HUM:HUM', 'PHI:PER:1', 'inflectional', 'PHI:DET:DEF', 'LANG:IT'}
[-te]           {'PHI:PER:2', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI', 'inflectional', 'PHI:DET:DEF', 'LANG:IT'}
[-no]           {'PHI:PER:3', 'PHI:NUM:PL', 'PHI', 'inflectional', 'PHI:DET:DEF', 'LANG:IT'}
[-nom]          {'TAIL:FIN,ARG,VAL', 'NOM', 'inflectional', 'LANG:EN', 'adjoinable'}
[-par]          {'LANG:FI', 'inflectional', 'PAR', 'TAIL:ARG,-VAL', 'adjoinable'}
[-gen]          {'-float', 'GEN', 'TAIL:INF,ARG', 'inflectional', 'LANG:EN'}
gen             {'-float', 'GEN', 'TAIL:INF,ARG', 'inflectional', 'LANG:EN'}
[-n_acc]        {'TAIL:*POL:NEG', 'n-ACC', 'inflectional', 'TAIL:PHI', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'adjoinable'}
[-t_acc]        {'t-ACC', 'TAIL:*POL:NEG', 'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'adjoinable'}
[-0_acc]        {'TAIL:*POL:NEG', 'TAIL:*PHI', '0_ACC', 'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'adjoinable'}
asp             {'inflectional', 'LANG:EN', 'ASP:BOUNDED'}
a'              {'LF:A', 'a', 'LANG:X', 'PF:a'}
b'              {'b', 'PF:b', 'LF:B', 'LANG:X'}
b''             {'b', 'LF:B', '-COMP:c', 'PF:b', 'LANG:EN'}
c''             {'PF:c', 'c', 'LF:C', 'SPEC:a', 'LANG:EN'}
c'              {'PF:c', 'c', 'LF:C', 'LANG:X'}
d'              {'LANG:', 'd', 'PF:d', 'LF:D'}
a''             ['LANG:EN']
x'              {'LF:X', 'LANG:X', 'x', 'PF:x'}
y'              {'LF:Y', 'y', 'LANG:X', 'PF:y'}
z'              {'LF:Z', 'LANG:X', 'z', 'PF:x'}
John'           {'LF:John', 'LANG:X', 'PF:John', "N'"}
admires'        {'LF:admires', 'LANG:X', "V'", 'PF:admires'}
admires''       {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', 'LF:admires', '-COMP:N', 'PHI:DET:_', '-COMP:v', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', 'SPEC:D', 'ARG', '-COMP:V', '-VAL', 'PHI:PER:_', '-SPEC:FORCE', 'PF:admires'}
Mary'           {'PF:Mary', 'LANG:X', 'LF:mary', "N'"}
T/fin           {'-SPEC:TO/inf', 'LF:T', 'COMP:v', 'SPEC:TO/inf', 'T', 'FIN', 'SPEC:*', '-SPEC:T/fin', '-SPEC:V', 'SPEC:FORCE', '!PROBE:V', 'PHI:DET:_', '-SPEC:v', 'SPEC:C/fin', '!SPEC:*', 'LANG:EN', '-SPEC:C', 'PHI:NUM:_', '-COMP:INF', '!COMP:*', 'SPEC:D', 'ARG', 'PF:T', 'COMP:V', '-SPEC:Neg', 'T/fin', 'COMP:T/prt', 'PHI:GEN:_', 'PHI:PER:_', 'VAL', '-SPEC:N', '-COMP:T/fin'}
v               {'PHI:GEN:_', 'LF:v', '!COMP:*', 'SPEC:D', 'ARG', 'ASP', '!PROBE:V', 'COMP:V', 'PHI:DET:_', 'PF:v', 'v', '-VAL', 'PHI:PER:_', 'LANG:EN', '-SPEC:N', 'PHI:NUM:_'}
C/fin           {'-COMP:T/prt', 'SPEC:*', 'FIN', '-COMP:C/fin', '!PROBE:FIN', '-SPEC:T/fin', 'C/fin', 'LANG:EN', '-SPEC:C/fin', 'PF:C', '-SPEC:N', '!COMP:*', '-ARG', 'C', 'COMP:T/fin', 'COMP:Neg/fin', 'VAL', 'LF:C/fin'}
T               {'-COMP:NEG', 'T', 'LF:T', 'COMP:v', 'SPEC:*', 'FIN', '-SPEC:T/fin', '-SPEC:V', '!PROBE:V', 'PHI:DET:_', 'LANG:EN', 'PHI:NUM:_', '!COMP:*', 'SPEC:D', 'ARG', 'PF:T', 'COMP:V', 'COMP:T/prt', 'PHI:GEN:_', 'PHI:PER:_', 'VAL', '-SPEC:N', '-SPEC:FORCE'}
T/prt           {'-COMP:NEG', 'T/prt', 'COMP:v', 'T', 'SPEC:*', 'FIN', '-SPEC:T/fin', '-SPEC:V', '!PROBE:V', 'PHI:DET:_', 'COMP:D', 'LANG:EN', 'PHI:NUM:_', 'PF:T/prt', '!COMP:*', 'SPEC:D', 'LF:T/prt', 'ARG', 'COMP:V', 'COMP:T/prt', 'PHI:GEN:_', 'PHI:PER:_', 'VAL', '-SPEC:N', '-SPEC:FORCE'}
a0              {'-SPEC:D', 'COMP:0', 'LF:A', 'PF:A', '-adjoinable', 'A', '-SPEC:A', 'TAIL:D', 'LANG:EN'}
n               {'COMP:v', '-COMP:A', '-COMP:C/fin', 'COMP:C', '-SPEC:V', 'PHI:DET:_', '-COMP:N', '-COMP:v', '-COMP:AUX', 'PHI:NUM:_', '-SPEC:uWH', '!SPEC:D', '-COMP:V', '-SPEC:N', '-SPEC:R', 'n', '-SPEC:ADV', 'COMP:P', 'SPEC:*', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:VA/inf', '!SPEC:*', 'N', '-SPEC:INF', 'LANG:EN', '-SPEC:C/fin', 'COMP:uR', 'LF:n', 'PF:n', '!COMP:*', 'COMP:R/D', 'COMP:0', 'ARG', 'COMP:R', 'COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', 'INF', 'PHI:GEN:_', 'PHI:PER:_', 'VAL', '-SPEC:FORCE'}
impass          {'PHI:GEN:_', '!COMP:*', 'PF:impass', 'LF:impass', 'SPEC:D', 'ARG', 'ASP', '!PROBE:V', 'COMP:V', 'PHI:DET:_', 'v', '-VAL', 'PHI:PER:_', 'LANG:EN', '-SPEC:N', 'PHI:NUM:_'}
cau             {'PHI:GEN:_', '!COMP:*', 'SPEC:D', 'ARG', 'ASP', 'LF:v/Cause', 'PF:Cau', '!PROBE:V', 'COMP:V', 'PHI:DET:_', 'v', '-VAL', 'PHI:PER:_', 'LANG:EN', '-SPEC:N', 'PHI:NUM:_'}
INF             {'COMP:v', '!COMP:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'COMP:V', 'INF', 'PF:INF', 'LANG:EN', '-COMP:T/fin', 'LF:INF'}
prtcpl          {'-COMP:NEG', 'T/prt', 'T', 'COMP:v', '-COMP:C/fin', 'SPEC:*', 'FIN', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '!PROBE:V', 'PHI:DET:_', 'COMP:D', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PF:T/prt', '!COMP:*', 'SPEC:D', 'LF:T/prt', 'ARG', 'COMP:V', 'COMP:T/prt', 'INF', 'PHI:GEN:_', '-SPEC:FORCE', 'VAL', '-SPEC:N', '-COMP:T/fin'}
TO/inf          {'COMP:v', '-COMP:C/fin', '!COMP:V', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'adjoinable', 'TO/inf', 'LANG:EN', '!COMP:*', 'PF:TO/inf', 'LF:TO/inf', 'COMP:V', 'INF', '-VAL', '?ARG', '-COMP:T/fin', '-SPEC:v'}
A/inf           {'COMP:v', 'SPEC:*', '-COMP:C/fin', 'A/inf', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '-SPEC:Neg/fin', 'LF:A/inf', 'LANG:EN', 'PF:A/inf', '!COMP:*', 'COMP:V', 'INF', '?ARG', '-COMP:T/fin', '?VAL'}
ARE/inf         {'COMP:v', 'SPEC:*', '-COMP:C/fin', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'LF:ARE/inf', '?ARG', 'LANG:EN', '!COMP:*', 'COMP:V', 'ARE/inf', 'INF', '-adjoinable', 'VAL', 'PF:are', '-COMP:T/fin'}
ESSA/inf        {'COMP:v', 'SPEC:*', '-COMP:C/fin', '-COMP:FORCE', 'LF:while', '-SPEC:T/fin', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', 'LANG:EN', 'ADV', '!COMP:*', 'PF:essa', 'TAIL:T', 'COMP:V', 'ESSA/inf', 'INF', '-SPEC:FORCE', '?ARG', '-SPEC:N', '?VAL', '-COMP:T/fin'}
TUA/inf         {'COMP:v', '-COMP:C/fin', 'SPEC:*', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', 'PHI:DET:_', 'LF:after', '!SPEC:*', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'PF:tua', 'ADV', '!COMP:*', 'ARG', 'TAIL:T', 'TUA/inf', 'COMP:V', 'INF', 'PHI:GEN:_', '-SPEC:FORCE', 'VAL', '-SPEC:N', '-COMP:T/fin'}
VA/inf          {'COMP:v', 'PF:vAn', '-COMP:C/fin', 'SPEC:*', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'PHI:DET:_', '!SPEC:*', 'VA/inf', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', '!COMP:*', 'ARG', 'COMP:V', 'INF', 'LF:VA', 'PHI:PER:_', 'VAL', '-SPEC:N', '-COMP:T/fin'}
MA/ssa          {'LF:in_doing', 'COMP:v', '-SPEC:T/fin', 'adjoinable', '-SPEC:Neg/fin', 'PHI:DET:_', 'LANG:EN', 'PHI:NUM:_', 'MA/inf', 'ADV', 'PHI:GEN:_', '-SPEC:*', 'PF:massa', 'ARG', 'TAIL:V', 'COMP:V', 'MA/ssa', '-VAL', 'PHI:PER:_', '-SPEC:N', '-SPEC:FORCE'}
MA/tta          {'MA/inf', 'ADV', 'PHI:GEN:_', 'PHI:PER:_', 'ARG', '-SPEC:T/fin', 'TAIL:T', 'adjoinable', '-SPEC:Neg/fin', 'LF:without_doing', 'PHI:DET:_', '-VAL', '-SPEC:FORCE', 'LANG:EN', '-SPEC:N', 'PF:matta', 'PHI:NUM:_'}
MA/lla          {'-VAL', 'COMP:v', 'PHI:DET:_', 'PHI:NUM:_', 'MA/inf', 'ADV', 'TAIL:T', '-SPEC:N', '-SPEC:T/fin', 'adjoinable', '-SPEC:Neg/fin', 'LANG:EN', 'ARG', 'LF:by_doing', 'COMP:V', 'PF:malla', 'PHI:GEN:_', 'PHI:PER:_', '-SPEC:FORCE'}
MA/inf          {'-VAL', 'COMP:v', 'PHI:DET:_', 'PHI:NUM:_', 'MA/inf', 'ADV', 'LF:to_do', '-SPEC:N', '-SPEC:T/fin', 'adjoinable', '-SPEC:Neg/fin', 'LANG:EN', 'PF:maan', 'ARG', 'TAIL:V', 'COMP:V', 'PHI:GEN:_', 'PHI:PER:_', '-SPEC:FORCE'}
E/inf           {'ADV', 'SPEC:*', '-ARG', '-SPEC:T/fin', 'LF:by', 'TAIL:T', '-SPEC:Neg/fin', 'adjoinable', '-VAL', '-SPEC:FORCE', 'PF:en', '-SPEC:N', 'LANG:FI'}
BE-             {'V', 'COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'ASP', '-SPEC:T/fin', 'SPEC:P', '-COMP:N', '-COMP:v', 'LF:BE', 'LANG:EN', '!COMP:*', 'COPULA', 'PF:BE', 'SPEC:D', '-ARG', '-COMP:V', 'COMP:T/prt', '-VAL', '-COMP:T/fin', '-SPEC:FORCE'}
D               {'-COMP:uR', 'PF:D', '-COMP:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', 'LF:D', 'D', '-SPEC:INF', 'LANG:EN', 'COMP:N', '-SPEC:C', '-COMP:D', 'OP', '!PROBE:N', '!COMP:*', '-SPEC:MA/lla', '-ARG', '-SPEC:P', '-COMP:T/fin'}
D/rel           {'-COMP:uR', 'OP:_', '-COMP:C/fin', 'inflectional', '-SPEC:T/fin', 'LF:D/rel', '-SPEC:V', 'adjoinable', '-SPEC:Neg/fin', 'D', 'COMP:N', 'LANG:EN', '-SPEC:C', '-SPEC:INF', '-COMP:D', 'OP', '!PROBE:N', '!COMP:*', '-SPEC:MA/lla', '-ARG', 'OP:REL', '-SPEC:P', 'D/rel', '-COMP:T/fin', 'PF:D/rel'}
P               {'-COMP:ADV', '-SPEC:ADV', '-COMP:A', '-SPEC:T/fin', '-SPEC:V', 'PF:P', 'adjoinable', '-COMP:N', '-SPEC:Neg/fin', '-float', 'COMP:D', '-SPEC:v', 'PHI:DET:_', '-COMP:uWH', '-SPEC:INF', 'LANG:EN', '-SPEC:C', '-SPEC:C/fin', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', '!COMP:*', '-SPEC:*', 'ARG', '-SPEC:FORCE', 'P', 'LF:P', '-SPEC:iWH', '-SPEC:P', '-COMP:T', '-VAL', '-SPEC:iR', '-SPEC:N', '-COMP:T/fin'}
pro             ['LANG:EN']
pro-            {'-SPEC:R', '-SPEC:ADV', '-COMP:A', 'COMP:P', '-COMP:C/fin', 'COMP:C', '-COMP:WH', '-SPEC:T/fin', '-SPEC:V', 'SPEC:A', '-COMP:N', '-COMP:v', '-COMP:VA/inf', 'N', '-SPEC:INF', 'LANG:EN', 'PF:(pro)', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:uWH', 'COMP:uR', 'LF:pro', 'COMP:R/D', 'COMP:R', '-COMP:V', 'PHI', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:P', '-SPEC:N', '-SPEC:FORCE'}
cl              {'LEFT:D,CL', 'RIGHT:ARE/inf', 'CL', 'inflectional', 'LANG:EN', 'RIGHT:PRG', 'LEFT:T/fin'}
inc             {'inflectional', 'LANG:EN', 'INCORPORATED'}
sg              {'inflectional', 'LANG:EN', 'PHI:NUM:SG'}
pl              {'inflectional', 'LANG:EN', 'PHI:NUM:PL'}
1p              {'inflectional', 'LANG:EN', 'PHI:PER:1'}
2p              {'inflectional', 'PHI:PER:2', 'LANG:EN'}
3p              {'PHI:PER:3', 'inflectional', 'LANG:EN'}
def             {'inflectional', 'PHI:DET:DEF', 'LANG:EN'}
indef           {'inflectional', 'LANG:EN', 'PHI:DET:INDEF'}
hum             {'inflectional', 'LANG:EN', 'PHI:HUM:HUM'}
nonhum          {'inflectional', 'LANG:EN', 'PHI:HUM:NONHUM'}
m               {'inflectional', 'LANG:EN', 'PHI:GEN:M'}
f               {'inflectional', 'LANG:EN', 'PHI:GEN:F'}
nom             {'inflectional', 'LANG:EN', 'TAIL:FIN,!COMP:*,VAL', 'NOM'}
acc             {'TAIL:v', 'inflectional', 'LANG:EN', 'ACC'}
dat             {'TAIL:v', 'inflectional', 'LANG:EN', 'DAT'}
uC/op           {'inflectional', 'LANG:EN', 'uC/op'}
wh              {'inflectional', 'LANG:EN', 'OP:WH', 'OP:_'}
wh_             {'FORCE:OP:WH', 'OP:_', 'inflectional', 'LANG:EN', 'OP'}
top             {'OP:TOP', 'inflectional', 'LANG:EN'}
foc             {'inflectional', 'LANG:EN', 'OP:FOC'}
C/op            {'inflectional', 'LANG:EN', 'OP:C/OP'}
Q               {'OP:WH', 'inflectional', 'LANG:EN', 'OP:Q', 'OP'}
