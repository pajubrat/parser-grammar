ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'-SPEC:N', '-SPEC:FORCE', '-SPEC:*', '-SPEC:P', 'P', '-SPEC:C/fin', '-COMP:N', 'PF:a', '-SPEC:iR', '-SPEC:v', '-COMP:ADV', '-COMP:T/fin', '-ARG', '-SPEC:INF', '-SPEC:T/fin', 'LF:to', '-SPEC:iWH', 'COMP:D', 'adjoinable', '-SPEC:C', '-COMP:uWH', '-SPEC:ADV', '!COMP:*', '-SPEC:Neg/fin', 'LANG:IT', 'COMP:ARE/inf', '-VAL', '-SPEC:V'}
a_D             {'-COMP:uR', '-COMP:D', '-SPEC:N', 'LANG:EN', '!PROBE:N', '-SPEC:P', 'OP', '-SPEC:MA/lla', '-SPEC:D', '-COMP:T/fin', 'LF:D', '-ARG', '-SPEC:INF', '-SPEC:T/fin', 'D', '-SPEC:C', 'adjoinable', 'COMP:N', '!COMP:*', '-SPEC:Neg/fin', 'PF:D', '-SPEC:V'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'PF:admire', 'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'LANG:EN', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'CLASS:TR', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', '-COMP:P', '-COMP:Neg', 'COMP:D', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:Neg', '!COMP:*', 'ARG', 'LF:admire', '-VAL'}
admire*         ['LANG:EN']
T/fin*          {'CAT:T/fin', 'NO_NUMBER', 'LF:T', 'LANG:EN', "PF:T/fin'", 'NO_DET', '!SPEC:*', '-VAL'}
v*              {'NO_NUMBER', 'LF:v', 'NO_DET', 'CAT:v', 'LANG:EN', 'PF:v', '-VAL'}
admire**        ['LANG:EN']
T/fin**         {'CAT:T/fin', 'NO_NUMBER', 'PHI:PER:3', 'LF:T', 'NO_PERSON', 'LANG:EN', "PF:T/fin''", 'NO_DET', '!SPEC:*', '-VAL'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', 'ASP', '-COMP:N', 'LF:admire', '-COMP:T/fin', 'PF:adora', 'V', 'SPEC:P', '-SPEC:T/fin', '-COMP:V', 'PHI:DET:_', 'COMP:D', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', 'ARG', 'LANG:IT', '-VAL'}
antaa           ['LANG:FI']
anta-           {'LF:give', 'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', '-COMP:FIN', 'ASP', '-COMP:N', 'PF:antaa', '-COMP:T/fin', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'CLASS:DITR', 'PHI:DET:_', 'LANG:FI', 'COMP:D', 'COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:D', 'ASP:BOUNDED', '!COMP:*', 'ARG', '+SEM:directional', '-VAL'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'LANG:EN', 'PHI:PER:_', 'LF:ask', 'ASP', 'PF:ask', '-COMP:N', '-COMP:T/fin', 'SEM:internal', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'COMP:D', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:D', 'ARG', '-VAL'}
ask-            {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'LANG:EN', 'PHI:PER:_', 'LF:ask', 'ASP', 'PF:ask', '-COMP:N', '-COMP:T/fin', 'SEM:internal', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'COMP:D', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:D', 'ARG', '-VAL'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-SEM:directional', '-COMP:v', 'PF:avain', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'LANG:FI', 'COMP:R/D', '-SPEC:uWH', 'LF:key', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-SEM:directional', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'LANG:FI', 'COMP:R/D', '-SPEC:uWH', 'LF:car', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'PF:auto', 'COMP:uR', 'COMP:R', '-SPEC:V'}
city            {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', 'PF:city', '-SPEC:ADV', '-SPEC:T/fin', 'LF:city', 'COMP:uR', 'COMP:R', '-SPEC:V'}
che             ['LANG:IT']
che-            {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', 'PF:che', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'COMP:R/D', 'PHI_N', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-COMP:*', '-SPEC:ADV', 'LF:who', '-SPEC:T/fin', 'LANG:IT', 'COMP:uR', 'COMP:R', '-SPEC:V'}
chiamato        ['LANG:IT']
chiamata-       {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'COMP:P', 'PHI:GEN:_', 'LF:called', 'SPEC:ADV', 'PF:chiamato', 'SPEC:TO/inf', 'ARG', 'LANG:IT', '-VAL'}
danno           {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', 'PF:danno', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', 'LF:damage', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'LANG:IT', 'COMP:uR', 'COMP:R', '-SPEC:V'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'LF:detest', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'SEM:internal', 'PF:detest', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'COMP:D', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', 'ARG', 'LANG:IT', 'COMP:ARE/inf', '-VAL'}
devono          ['LANG:EN']
deva-           {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', '-ASP', 'PHI:PER:_', '-COMP:N', '-COMP:T/fin', 'SEM:internal', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', 'PF:deva', 'SPEC:D', 'ARG', 'LF:must', 'LANG:IT', 'COMP:ARE/inf', '-VAL'}
di              {'PF:di', '-SPEC:N', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:PER:_', '-SPEC:P', 'P', '-SPEC:C/fin', '-COMP:N', '-SPEC:iR', '-SPEC:v', '-COMP:ADV', '-COMP:T/fin', '-SPEC:INF', '-SPEC:V', 'PHI:DET:_', 'LANG:FI', 'ARG', '-SPEC:iWH', 'COMP:D', '-SPEC:Neg/fin', '-SPEC:C', 'SPEC:*', 'LF:of', '-COMP:uWH', '-SPEC:ADV', '!COMP:*', '-SPEC:T/fin', '-VAL', '-adjoinable'}
does            {'COMP:V', '-SPEC:FORCE', '-SPEC:TO/inf', '!SPEC:D', 'COMP:Neg', 'T/fin', 'T', 'PHI:DET:_', 'LF:does', 'COMP:D', 'PHI:GEN:_', '!PROBE:V', 'SPEC:D', '!COMP:*', '-SPEC:T/fin', 'FIN', 'PHI:GEN:M', '-COMP:INF', 'PHI:PER:3', '-SPEC:N', 'PHI:NUM:_', 'LANG:EN', 'PHI:PER:_', 'PHI:GEN:F', '-SPEC:C/fin', '-SPEC:v', '-COMP:T/fin', 'VAL', 'PF:does', 'PHI:NUM:SG', 'SPEC:*', 'COMP:v', 'SPEC:TO/inf', '-SPEC:Neg', 'COMP:T/prt', 'ARG', '-SPEC:V'}
does_C          ['LANG:EN']
does-           {'COMP:V', '-SPEC:FORCE', '-SPEC:TO/inf', '!SPEC:D', 'COMP:Neg', 'T/fin', 'T', 'PHI:DET:_', 'LF:does', 'COMP:D', 'PHI:GEN:_', '!PROBE:V', 'SPEC:D', '!COMP:*', '-SPEC:T/fin', 'FIN', 'PHI:GEN:M', '-COMP:INF', 'PHI:PER:3', '-SPEC:N', 'PHI:NUM:_', 'LANG:EN', 'PHI:PER:_', 'PHI:GEN:F', '-SPEC:C/fin', '-SPEC:v', '-COMP:T/fin', 'VAL', 'PF:does', 'PHI:NUM:SG', 'SPEC:*', 'COMP:v', 'SPEC:TO/inf', '-SPEC:Neg', 'COMP:T/prt', 'ARG', '-SPEC:V'}
dorme           ['LANG:IT']
dorme-          {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'LANG:EN', 'PHI:PER:_', '!SPEC:D', 'LF:sleep', 'ASP', '-COMP:N', '-COMP:T/fin', 'V', 'SPEC:P', '-SPEC:T/fin', 'PF:dorme', '-COMP:V', 'PHI:DET:_', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', 'ARG', '-VAL'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'PF:ei', 'PHI:NUM:_', 'NEG', 'PHI:PER:_', '!SPEC:*', 'SEM:internal', '-SPEC:T/fin', 'VAL', 'PHI:DET:_', 'POL:NEG', '-SPEC:T', 'LANG:FI', 'Neg/fin', 'SPEC:*', 'LF:neg', '!COMP:T', 'COMP:T/prt', '!COMP:*', 'ARG', 'FIN', '%SPEC:INF'}
e-              {'PF:ei', 'PHI:NUM:_', 'NEG', 'PHI:PER:_', '!SPEC:*', 'SEM:internal', '-SPEC:T/fin', 'VAL', 'PHI:DET:_', 'POL:NEG', '-SPEC:T', 'LANG:FI', 'Neg/fin', 'SPEC:*', 'LF:neg', '!COMP:T', 'COMP:T/prt', '!COMP:*', 'ARG', 'FIN', '%SPEC:INF'}
elaa            ['LANG:FI']
ela-            {'LF:live', '-COMP:D', 'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', 'ASP', '-COMP:N', 'CLASS:INTR', '-COMP:T/fin', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'LANG:FI', 'COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:D', 'PF:elaa', 'ARG', '-VAL'}
etsii           ['LANG:FI']
etsi-           {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PF:etsi', 'PHI:PER:_', '!COMP:D', 'ASP', '-COMP:N', '-COMP:T/fin', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'LANG:FI', 'ARG', 'COMP:D', 'COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'LF:search', '-VAL'}
etta            {'LANG:FI', 'PF:etta', '!PROBE:T/fin', '-SPEC:*', 'FORCE', 'COMP:T/fin', 'COMP:C/fin', '-ARG', '!COMP:*', 'LF:that', '-VAL', 'FIN'}
flow'           {'PF:flow', 'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'LANG:EN', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'ARG', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:D', 'LF:flow', '-VAL'}
from            {'-SPEC:N', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:EN', 'TAIL:V,+SEM:directional', '-SPEC:*', 'LF:from', 'P', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', 'PHI:PER:_', '-SPEC:iR', '-SPEC:v', '-COMP:ADV', '-COMP:T/fin', '-SPEC:INF', '-float', 'PHI:DET:_', 'ARG', '-SPEC:iWH', 'COMP:D', '-SPEC:Neg/fin', 'PHI:GEN:_', 'adjoinable', '-SPEC:C', '-COMP:uWH', 'PF:from', '-SPEC:ADV', '!COMP:*', '-SPEC:T/fin', '-VAL', '-SPEC:V'}
gave            ['LANG:EN']
give-           {'LF:give', 'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'LANG:EN', 'PHI:PER:_', '-COMP:FIN', 'ASP', '-COMP:N', '-COMP:T/fin', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'CLASS:DITR', 'PHI:DET:_', 'COMP:D', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:D', '!COMP:*', 'ARG', '+SEM:directional', '-VAL', 'PF:give'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-SEM:directional', '-COMP:v', 'PF:Giuseppe', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', 'LF:Giuseppe', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'LANG:IT', 'COMP:uR', 'COMP:R', '-SPEC:V'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', '-SPEC:*', 'PHI:PER:_', 'ASP', '-COMP:N', 'PF:haluaa', 'COMP:A/inf', '-COMP:T/fin', 'LF:want', 'CLASS:TR', 'SEM:internal', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'LANG:FI', '-COMP:P', 'COMP:D', 'COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'ASP:BOUNDED', '!COMP:*', 'ARG', '-VAL'}
hairitsee       ['LANG:FI']
hairitse-       {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PF:hairitsee', 'PHI:PER:_', '!COMP:D', '-COMP:FIN', 'ASP', '-COMP:N', 'LF:disturb', '-COMP:T/fin', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'LANG:FI', 'COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:D', 'ARG', '-VAL'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', '-ASP', 'PHI:PER:_', '-COMP:N', 'LF:have', 'COMP:T', '-COMP:T/fin', 'SEM:internal', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'COMP:P', 'PHI:GEN:_', 'SPEC:*', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:D', 'ARG', 'LANG:IT', '-VAL', 'PF:ha'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'-COMP:D', 'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', 'ASP', '-COMP:N', 'CLASS:INTR', '-COMP:T/fin', 'V', '-SPEC:T/fin', 'SPEC:P', 'LF:disappear', '-COMP:V', 'PHI:DET:_', 'LANG:FI', 'COMP:P', 'SPEC:ADV', 'PF:havia', 'SPEC:TO/inf', 'SPEC:D', 'ARG', '-VAL'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'PF:ihaile-', 'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', '!COMP:D', '-COMP:FIN', 'ASP', '-COMP:N', '-COMP:T/fin', 'CLASS:TR', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'LANG:FI', '-COMP:P', 'COMP:D', 'COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', '!COMP:*', 'ARG', 'LF:admire', '-VAL'}
il              {'-COMP:uR', '-COMP:D', '-SPEC:N', '!PROBE:N', '-SPEC:P', 'OP', '-SPEC:MA/lla', '-SPEC:D', '-COMP:T/fin', '-ARG', '-SPEC:INF', '-SPEC:T/fin', 'D', 'PF:il', 'LF:the', '-SPEC:C', 'adjoinable', 'COMP:N', '!COMP:*', '-SPEC:Neg/fin', 'LANG:IT', '-SPEC:V'}
i               {'-COMP:uR', '-COMP:D', '-SPEC:N', '!PROBE:N', '-SPEC:P', 'OP', '-SPEC:MA/lla', '-SPEC:D', '-COMP:T/fin', '-ARG', '-SPEC:INF', '-SPEC:T/fin', 'D', 'PF:il', 'LF:the', '-SPEC:C', 'adjoinable', 'COMP:N', '!COMP:*', '-SPEC:Neg/fin', 'LANG:IT', '-SPEC:V'}
in              {'-SPEC:N', '-SPEC:FORCE', 'PHI:NUM:_', 'PF:in', '-SPEC:P', 'P', 'LF:in', '-SPEC:C/fin', '-COMP:N', 'PHI:PER:_', '-SPEC:iR', '-SPEC:v', '-COMP:ADV', '-COMP:T/fin', '-SPEC:INF', 'PHI:DET:_', 'ARG', '-SPEC:iWH', 'COMP:D', '-SPEC:Neg/fin', 'PHI:GEN:_', 'adjoinable', '-SPEC:C', '-COMP:uWH', '-SPEC:ADV', '!COMP:*', '-SPEC:T/fin', 'LANG:IT', '-VAL', '-SPEC:V'}
infermieri      {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', 'PF:infermieri', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'LF:nurses', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'LANG:IT', 'COMP:uR', 'COMP:R', '-SPEC:V'}
is              ['LANG:EN']
be-             {'LF:be', '-COMP:v', '-SPEC:FORCE', 'LANG:EN', '-COMP:TO/inf', 'PF:be', 'ASP', '-COMP:N', 'COPULA', '-COMP:T/fin', '-ARG', 'V', 'SPEC:P', '-COMP:V', 'COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:D', '!COMP:*', '-SPEC:T/fin', '-VAL'}
istuuko         ['LANG:FI']
istuu-          {'-COMP:D', 'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', 'ASP', '-COMP:N', 'CLASS:INTR', '-COMP:T/fin', 'V', 'LF:sit', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'LANG:FI', 'COMP:P', 'PF:istuu', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:D', 'ARG', '-VAL'}
John            ['LANG:EN']
John-           {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-SEM:directional', 'LANG:EN', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', 'PF:John', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-SPEC:V', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'LF:John', 'COMP:uR', 'COMP:R', '-adjoinable'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-SEM:directional', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'LF:Jukka', 'N', '-COMP:V', 'PF:Jukka', 'LANG:FI', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
juosten         ['LANG:FI']
juokse-         {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'V', '-SPEC:T/fin', 'SPEC:P', 'LF:run', '-COMP:V', 'PHI:DET:_', 'PF:juokse-', 'LANG:FI', 'COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'ARG', '-VAL'}
istuu           ['LANG:FI']
istu-           {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'V', 'LF:sit', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'LANG:FI', 'COMP:P', 'PF:istuu', 'SPEC:ADV', 'SPEC:TO/inf', 'ARG', '-VAL'}
kaksi           {'PHI:DET:_', 'PHI:NUM:SG', 'LANG:FI', 'PHI:NUM:_', 'PF:kaksi', 'PHI:PER:_', 'LF:two', 'NUM', 'TAIL:ARG,VAL,FIN', 'COMP:n', 'SPEC:*', 'COMP:N', 'ARG', '-VAL'}
kaksi           {'LANG:EN', 'PF:kaksi', 'LF:two', 'NUM', 'SPEC:*', 'COMP:n', 'COMP:N', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'COMP:n', 'COMP:N', 'LANG:FI', 'SPEC:*', 'PF:kaksi', 'LF:two', 'NUM'}
kaupunkia       ['LANG:EN']
kaupunki        {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'COMP:uR', 'N', '-COMP:V', 'PF:kaupunki', 'LANG:FI', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'LF:city', '-COMP:P', 'COMP:R', '-SPEC:V'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'LANG:FI', 'COMP:P', 'SPEC:ADV', 'PF:kaske', 'SPEC:TO/inf', '!COMP:A/inf', 'SEM:external', 'ARG', '-VAL', 'LF:order'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', 'PF:kello', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'LANG:FI', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'LF:watch', 'COMP:uR', 'COMP:R', '-SPEC:V'}
kello0-         {'2SPEC', 'SPEC:D', 'LANG:FI', 'PF:kello', 'LF:watch', '0'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'PF:key', 'COMP:R/D', '-SPEC:uWH', 'LF:key', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'LF:book', '-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-SEM:directional', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'LANG:FI', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', 'PF:kirja', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
kohti           {'-SPEC:N', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:PER:_', '-SPEC:P', 'P', '-SPEC:C/fin', '-COMP:N', '-SPEC:iR', '-SPEC:v', '-COMP:ADV', '-COMP:T/fin', '-SPEC:INF', 'PF:kohti', 'PHI:DET:_', 'LANG:FI', 'ARG', '-SPEC:iWH', 'COMP:D', '-SPEC:Neg/fin', 'adjoinable', '-SPEC:C', 'SPEC:*', '!COMP:*', '-COMP:uWH', '-SPEC:ADV', 'LF:towards', '-SPEC:T/fin', 'TAIL:V', '-VAL', '-SPEC:V'}
koko            {'-COMP:uR', 'PF:koko', '-COMP:D', '-SPEC:N', '!PROBE:N', '-SPEC:P', '-SPEC:MA/lla', '-SPEC:D', '-COMP:T/fin', 'TAIL:T', '-ARG', '-SPEC:INF', 'LF:all', '-SPEC:T/fin', 'D', 'LANG:FI', 'adjoinable', '-SPEC:C', 'COMP:N', '!COMP:*', '-SPEC:Neg/fin', 'OP', '-SPEC:V'}
kuka            ['LANG:FI']
kuka-           {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'PHI', 'LANG:FI', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'PF:kuka', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', 'LF:who', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
kuorsaa-        {'-COMP:D', '-COMP:WH', 'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'LF:snore', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'V', '-SPEC:T/fin', 'SPEC:P', 'PF:kuorsaa', '-COMP:V', 'PHI:DET:_', 'LANG:FI', 'COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'ARG', '-VAL'}
kuorsaamalla    ['LANG:FI']
lahella         {'COMP:V', '-SPEC:FORCE', '!SPEC:D', 'LF:near', 'PHI:DET:_', 'INF', 'COMP:D', 'adjoinable', '-COMP:uWH', '!COMP:*', '-SPEC:T/fin', '-SPEC:Neg/fin', '-COMP:FORCE', '-SPEC:N', 'PHI:NUM:_', 'PHI:PER:_', '-SPEC:P', 'P', '-SPEC:C/fin', '-COMP:N', '-SPEC:iR', '-SPEC:v', '-COMP:ADV', '!SPEC:*', '-COMP:T/fin', '-SPEC:INF', 'VAL', 'LANG:FI', '-SPEC:iWH', '-COMP:C/fin', '-SPEC:C', 'SPEC:*', 'COMP:v', '-SPEC:ADV', 'PF:lahella', 'ARG', '-SPEC:V'}
lahella         {'-SPEC:N', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:PER:_', '-SPEC:P', '!COMP:D', 'P', '-SPEC:C/fin', '-COMP:N', '-SPEC:iR', '-SPEC:v', '-COMP:ADV', '-COMP:T/fin', '-SPEC:INF', 'LF:near', 'PHI:DET:_', 'PF:lahella', 'LANG:FI', 'ARG', '-SPEC:iWH', 'COMP:D', '-SPEC:Neg/fin', 'adjoinable', '-SPEC:C', 'SPEC:*', '-COMP:uWH', '-SPEC:ADV', '!COMP:*', '-SPEC:T/fin', '-VAL', '-SPEC:V'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'-COMP:D', 'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', 'ASP', '-COMP:N', 'CLASS:INTR', '-COMP:T/fin', 'COMP:PP', 'LF:leave', 'V', 'PF:lahtea', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'LANG:FI', 'COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:D', 'ARG', '-VAL'}
lavano          ['LANG:IT']
lava-           {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'LF:wash', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'V', 'SPEC:P', '-SPEC:T/fin', '-COMP:V', 'PHI:DET:_', 'COMP:D', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'PF:lava', 'SPEC:TO/inf', '!COMP:*', 'ARG', 'LANG:IT', '-VAL'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-COMP:uR', '-COMP:D', 'PF:le', '-SPEC:N', '!PROBE:N', '-SPEC:P', 'OP', '-SPEC:MA/lla', '-SPEC:D', '-COMP:T/fin', 'LF:D', '-ARG', '-SPEC:INF', '-SPEC:T/fin', 'D', '-SPEC:C', 'adjoinable', 'COMP:N', '!COMP:*', '-SPEC:Neg/fin', 'LANG:IT', '-SPEC:V'}
leaves          ['LANG:EN']
leave           {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'LANG:EN', 'PF:leave', '!SPEC:D', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'V', 'LF:leave', 'SPEC:P', '-SPEC:T/fin', '-COMP:V', 'PHI:DET:_', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', 'ARG', '-VAL'}
leave-          {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'LANG:EN', 'PF:leave', '!SPEC:D', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'V', 'LF:leave', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', 'ARG', '-VAL'}
like-           {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'LANG:EN', 'PHI:PER:_', '!COMP:D', 'ASP', '-COMP:N', '-COMP:T/fin', 'LF:like', 'V', 'SPEC:P', '-SPEC:T/fin', '-COMP:V', 'PHI:DET:_', 'PF:like', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', 'ARG', '-VAL'}
likes           ['LANG:EN']
like            {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'LANG:EN', 'PHI:PER:_', '!COMP:D', 'ASP', '-COMP:N', '-COMP:T/fin', 'LF:like', 'V', 'SPEC:P', '-SPEC:T/fin', '-COMP:V', 'PHI:DET:_', 'PF:like', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', 'ARG', '-VAL'}
little          ['LANG:EN']
little-         {'SPEC:D', 'PF:little-', 'LANG:EN', '2SPEC', '0', 'LF:little'}
lle             {'-SPEC:N', 'LF:for', '-SPEC:FORCE', '-SPEC:*', 'TAIL:V,+SEM:directional', 'PHI:NUM:_', '-SPEC:P', 'P', '-SPEC:C/fin', '-COMP:N', 'PHI:PER:_', '-SPEC:iR', '-SPEC:v', '-COMP:ADV', '-COMP:T/fin', '-SPEC:INF', 'PHI:DET:_', 'LANG:FI', 'ARG', '-SPEC:iWH', 'PF:P(lle)', 'COMP:D', '-SPEC:Neg/fin', 'adjoinable', '-SPEC:C', '-COMP:uWH', '-SPEC:ADV', '!COMP:*', '-SPEC:T/fin', '+SEM:directional', '-VAL', '-SPEC:V'}
lla             {'-SPEC:N', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:PER:_', '-SPEC:P', 'P', '-SPEC:C/fin', '-COMP:N', '-SPEC:iR', '-SPEC:v', 'LF:by', 'TAIL:T', '-COMP:ADV', '-COMP:T/fin', '-SPEC:INF', 'PF:P(lla)', 'PHI:DET:_', 'LANG:FI', 'ARG', '-SPEC:iWH', 'COMP:D', '-SPEC:Neg/fin', 'TAIL:*V', 'adjoinable', '-SPEC:C', 'SPEC:*', '-COMP:uWH', '-SPEC:ADV', '!COMP:*', '-SPEC:T/fin', '-VAL', '-SPEC:V'}
Luisa           ['LANG:IT']
Luisa-          {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-SEM:directional', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', 'PF:Luisa', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'LF:Luisa', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'LANG:IT', 'COMP:uR', 'COMP:R', '-SPEC:V'}
lukemalla       ['LANG:FI']
luke-           {'PHI:NUM:_', '-COMP:v', 'LF:read', '-SPEC:FORCE', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'CLASS:TR', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'LANG:FI', '-COMP:P', 'PF:luke', 'COMP:D', 'COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', '!COMP:*', 'ARG', '-VAL'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'LF:find', 'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', '!COMP:D', 'ASP', '-COMP:N', '-COMP:T/fin', 'PF:loyta-', 'CLASS:TR', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'LANG:FI', '-COMP:P', 'COMP:D', 'COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'ASP:BOUNDED', '!COMP:*', 'ARG', '-VAL'}
Mary            ['LANG:EN']
Mary-           {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-SEM:directional', 'LANG:EN', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', 'PF:Mary', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-SPEC:V', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'LF:Mary', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-adjoinable'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-COMP:D', '-COMP:WH', 'LF:Merja', '-SPEC:FORCE', '-SEM:directional', '-SPEC:N', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', 'PF:Merja', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-SPEC:V', '-COMP:V', 'LANG:FI', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-adjoinable'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'LANG:FI', '-SPEC:N', '-SPEC:FORCE', 'ADV', 'adjoinable', 'SPEC:*', 'PF:malla', 'COMP:v', 'LF:by', 'TAIL:T', '-SPEC:Neg/fin', '-SPEC:T/fin', 'MA/inf'}
meren           ['LANG:FI']
mere-           {'PF:meri', '-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'LF:ocean', 'N', '-COMP:V', 'LANG:FI', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
mistake         {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', 'PF:mistake', 'LANG:EN', 'LF:mistake', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-COMP:D', '-COMP:WH', 'LF:what', 'PF:mika-', '-SPEC:FORCE', '-SPEC:N', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'LANG:FI', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', 'ASP', '-COMP:N', 'LF:move', '-COMP:T/fin', 'CLASS:TR', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'PF:move', '-COMP:P', 'COMP:D', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'LANGN:EN', 'SPEC:TO/inf', '!COMP:*', 'ARG', '+SEM:directional', '-VAL'}
mukavasti       ['LANG:EN']
mukava-         {'PF:mukavasti', 'SPEC:D', 'LANG:FI', 'LF:comfortably', '2SPEC', '0'}
must            {'-COMP:INF', 'COMP:V', '-SPEC:N', '-SPEC:FORCE', '-SPEC:TO/inf', 'LANG:EN', 'PHI:NUM:_', 'PHI:PER:_', '!SPEC:D', '-SPEC:C/fin', 'MODAL', '-SPEC:v', '-COMP:T/fin', 'COMP:Neg', 'T/fin', 'T', 'VAL', 'PHI:DET:_', 'ARG', 'PF:must', 'COMP:D', 'PHI:GEN:_', 'SPEC:*', '!PROBE:V', 'COMP:v', 'SPEC:D', 'SPEC:TO/inf', '-SPEC:Neg', 'COMP:T/prt', '!COMP:*', '-SPEC:T/fin', 'LF:must', 'FIN', '-SPEC:V'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'LF:sell', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'CLASS:TR', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'LANG:FI', '-COMP:P', 'COMP:D', 'COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'ASP:BOUNDED', '!COMP:*', 'ARG', '-VAL', 'PF:myy'}
naki            ['LANG:FI']
nake-           {'PF:nake', 'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'CLASS:TR', '-COMP:MA/inf', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'LANG:FI', '-COMP:P', 'COMP:D', 'COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'LF:see', 'ASP:BOUNDED', '!COMP:*', 'ARG', '-COMP:ESSA/inf', '-VAL'}
nayttaa         ['LANG:FI']
naytta-         {'LF:seem', '-COMP:v', '-SPEC:FORCE', '!SPEC:D', 'ASP', '-COMP:N', '-COMP:T/fin', 'PF:naytta', '-ARG', 'SEM:internal', 'V', 'SPEC:P', 'VAL', '-COMP:V', 'LANG:FI', 'COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', '!COMP:VA/inf', '-SPEC:T/fin'}
ndo             {'COMP:V', 'LF:ing', 'PRG', 'INF', 'LANG:EN', '-COMP:C/fin', 'COMP:v', '?ARG', '-COMP:T/fin', 'PF:PRG', '!COMP:*', '-SPEC:T/fin', '-COMP:FORCE', 'VAL', '-SPEC:V'}
ne              {'-COMP:uR', '-COMP:D', 'PHI:PER:3', '-SPEC:N', '!PROBE:N', '-SPEC:P', '-SPEC:MA/lla', '-SPEC:D', '-COMP:T/fin', '-ARG', '-SPEC:INF', '-SPEC:T/fin', 'D', '-SPEC:V', 'LANG:FI', 'PHI:NUM:PL', 'PF:ne', '-SPEC:C', 'adjoinable', 'COMP:N', '!COMP:*', '-SPEC:Neg/fin', 'OP', 'LF:those'}
niiden          ['LANG:EN']
nen             {'LF:ing', 'COMP:0', 'A', 'LANG:FI', 'TAIL:D', 'adjoinable', 'SPEC:*', '-SPEC:A', 'PF:a', '-SPEC:D'}
not             {'PHI:DET:_', 'PF:not', 'POL:NEG', '-COMP:D', 'PHI:NUM:_', 'Neg', 'LANG:EN', 'PHI:PER:_', 'PHI:GEN:_', '-COMP:FIN', 'SPEC:*', '-COMP:C', '!COMP:*', 'ARG', 'LF:not', '-VAL', '-SPEC:T/fin'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-COMP:D', 'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', 'LF:sleep', 'ASP', '-COMP:N', 'CLASS:INTR', '-COMP:T/fin', '-COMP:T', 'V', '-SPEC:T/fin', 'SPEC:P', 'PF:nukku', '-COMP:V', 'PHI:DET:_', 'LANG:FI', 'COMP:P', '-COMP:Neg/fin', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:D', 'ARG', '-VAL'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', 'LF:possessions', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', 'PF:omaisuuden', '-COMP:A', 'N', '-COMP:V', 'LANG:FI', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
operatoria      ['LANG:IT']
operatoria-     {'PF:operatoria', 'SPEC:D', '2SPEC', 'LANG:IT', '0', 'LF:operation'}
ostaa           ['LANG:FI']
osta-           {'PF:osta', 'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'CLASS:TR', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'LF:buy', 'PHI:DET:_', 'LANG:FI', '-COMP:P', 'COMP:D', 'COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'ASP:BOUNDED', '!COMP:*', 'ARG', '-VAL'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:P', 'SEM:nonreferential', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'PF:paiva', 'N', '-SPEC:V', '-COMP:V', 'LANG:FI', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', 'LF:day'}
Pariisia        ['LANG:FI']
Pariisi-        {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'LANG:FI', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'LF:Paris', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', 'PF:Pariisi', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-SEM:directional', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'PF:Pekka', 'LANG:FI', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', 'COMP:R', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'LF:Pekka', '-SPEC:V'}
pelottaa        ['LANG:FI']
pelkaa-         {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'CLASS:TR', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'LANG:FI', '-COMP:P', 'COMP:D', 'COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'PF:pelkaa', '!COMP:*', 'ARG', 'LF:fear', '-VAL'}
persuades       ['LANG:EN']
persuade-       {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'LANG:EN', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'V', '-SPEC:T/fin', 'SPEC:P', 'COMP:TO/inf', '-COMP:V', 'PHI:DET:_', 'LF:persuade', 'PF:persuade', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', 'SEM:external', '!COMP:*', 'ARG', '-VAL'}
peruuntui       ['LANG:FI']
peruuntu-       {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'V', 'SPEC:P', '-SPEC:T/fin', 'LF:cancelled', '-COMP:V', 'PHI:DET:_', 'LANG:FI', 'COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'PF:peruuntui', 'SPEC:D', 'ARG', '-VAL'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'LF:wash', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'CLASS:TR', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'LANG:FI', '-COMP:P', 'COMP:D', 'COMP:P', 'PF:pese', 'SPEC:ADV', 'SPEC:TO/inf', 'ASP:BOUNDED', '!COMP:*', 'ARG', '-VAL'}
pese-           {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'LF:wash', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'CLASS:TR', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'LANG:FI', '-COMP:P', 'COMP:D', 'COMP:P', 'PF:pese', 'SPEC:ADV', 'SPEC:TO/inf', '!COMP:*', 'ARG', '-VAL'}
petardi         {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'PF:petardi', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'LF:firecrackers', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'LANG:IT', 'COMP:uR', 'COMP:R', '-SPEC:V'}
pieni           ['LANG:FI']
pieni-          {'2SPEC', 'PF:pieni-', 'LANG:FI', 'SPEC:D', 'LF:small', '0'}
poikien         ['LANG:FI']
poika-          {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', 'PF:poika', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', 'LF:boy', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'LANG:FI', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
puhelinta       ['LANG:FI']
puhelin-        {'LF:phone', 'SPEC:D', 'LANG:FI', 'PF:puhelin', '2SPEC', '0'}
punainen        ['LANG:FI']
puna-           {'LF:red', 'PF:puna-', 'SPEC:D', 'LANG:FI', '2SPEC', '0'}
presupposto     {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', 'PF:presupposto', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'LF:presupposition', 'LANG:IT', 'COMP:uR', 'COMP:R', '-SPEC:V'}
primary         {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', 'PF:primary', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', 'LF:nurse', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'LANG:IT', 'COMP:uR', 'COMP:R', '-SPEC:V'}
promises        ['LANG:EN']
promise-        {'LF:promise', '-COMP:v', '-SPEC:FORCE', 'LANG:EN', 'PHI:NUM:_', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'PF:promise', 'SEM:internal', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'COMP:D', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:D', 'ARG', '-VAL'}
pyytaa          ['LANG:FI']
pyyta-          {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', 'LF:ask', 'ASP', '-COMP:N', '-COMP:T/fin', 'V', 'SPEC:P', '-SPEC:T/fin', '-COMP:V', 'PHI:DET:_', 'LANG:FI', 'COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'SEM:external', 'ARG', '-VAL', 'PF:pyyda'}
raukesi         ['LANG:FI']
raukea-         {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'LANG:FI', 'COMP:P', 'LF:terminate', 'SPEC:ADV', 'SPEC:TO/inf', 'PF:raukea', 'ARG', '-VAL'}
red             ['LANG:EN']
red-            {'LF:red', '2SPEC', 'SPEC:D', 'LANG:EN', 'PF:red', '0'}
saavuttaa       ['LANG:FI']
saavutta-       {'PHI:NUM:_', 'LF:reach', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', '!COMP:D', 'ASP', '-COMP:N', '-COMP:T/fin', 'CLASS:TR', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'LANG:FI', '-COMP:P', 'PF:saavutta-', 'COMP:D', 'COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'ASP:BOUNDED', '!COMP:*', 'ARG', '-VAL'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'LF:say', '-COMP:v', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:PER:_', 'ASP', '-COMP:N', 'PF:sano-', '-COMP:T/fin', 'COMP:FORCE', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'COMP:VA/inf', 'LANG:FI', 'COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:D', 'ARG', '-VAL'}
said            ['LANG:EN']
say'            {'LF:say', '-COMP:v', '-SPEC:FORCE', 'LANG:EN', 'PHI:NUM:_', 'PHI:PER:_', 'ASP', '-COMP:N', '!COMP:FORCE', '-COMP:T/fin', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:D', 'PF:say', 'ARG', '-VAL'}
say-            {'LF:say', '-COMP:v', '-SPEC:FORCE', 'LANG:EN', 'PHI:NUM:_', 'PHI:PER:_', 'ASP', '-COMP:N', '!COMP:FORCE', '-COMP:T/fin', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:D', 'PF:say', 'ARG', '-VAL'}
sala            ['LANG:IT']
sala-           {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', 'LF:room', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', 'PF:sala', '-SPEC:T/fin', 'LANG:IT', 'COMP:uR', 'COMP:R', '-SPEC:V'}
scoppiati       ['LANG:IT']
scoppia-        {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'PF:scoppia', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', 'LF:explode', 'ARG', 'LANG:IT', '-VAL'}
sen             {'-COMP:uR', '-COMP:D', '-SPEC:N', '!PROBE:N', '-SPEC:P', 'PF:sen', '-SPEC:MA/lla', '-SPEC:D', '-COMP:T/fin', '-ARG', '-SPEC:INF', 'TAIL:*POL:NEG', '-SPEC:T/fin', 'D', '-SPEC:V', 'TAIL:PHI', 'LANG:FI', 'LF:the/that', '-SPEC:C', 'adjoinable', 'COMP:N', '!COMP:*', '-SPEC:Neg/fin', 'OP', 'TAIL:ASP'}
se'             {'-COMP:uR', 'PF:se', '-COMP:D', '-SPEC:N', '!PROBE:N', '-SPEC:P', '-SPEC:MA/lla', '-SPEC:D', '-COMP:T/fin', '-ARG', '-SPEC:INF', '-SPEC:T/fin', 'D', 'LANG:FI', 'LF:the/that', '-SPEC:C', 'adjoinable', 'COMP:N', '!COMP:*', '-SPEC:Neg/fin', 'OP', '-SPEC:V'}
sentenza        {'LF:sentence', '-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', 'PF:sentenza', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'LANG:IT', 'COMP:uR', 'COMP:R', '-SPEC:V'}
Seine           ['LANG:EN']
Seine-          {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', 'PF:Seine', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'LF:Seine', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
sembrano        ['LANG:IT']
sembra-         {'LF:seem', '-COMP:D', '-COMP:v', '-SPEC:FORCE', '-ASP', 'LANG:EN', '-COMP:N', '-COMP:T/fin', '-ARG', 'V', 'SPEC:P', '-COMP:V', 'COMP:P', '!COMP:ARE/inf', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:D', '-SPEC:T/fin', 'PF:sembra', '-VAL'}
sleeps          ['LANG:EN']
sleep           {'-COMP:D', 'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PF:sleep', 'LANG:EN', 'PHI:PER:_', 'LF:sleep', 'ASP', '-COMP:N', 'CLASS:INTR', '-COMP:T/fin', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:D', 'ARG', '-VAL'}
sleep-          {'-COMP:D', 'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PF:sleep', 'LANG:EN', 'PHI:PER:_', 'LF:sleep', 'ASP', '-COMP:N', 'CLASS:INTR', '-COMP:T/fin', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:D', 'ARG', '-VAL'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', 'LF:agreement', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'LANG:FI', 'COMP:R/D', 'PF:sopimus', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '!COMP:A/inf', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
spinge          ['LANG:IT']
spinge-         {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', '!COMP:D', 'PF:spinge', '-COMP:N', 'ASP', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'SPEC:P', 'LF:push', '-COMP:V', 'PHI:DET:_', '-COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', 'ARG', 'LANG:IT', '-VAL'}
ssa             {'-SPEC:N', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:PER:_', '-SPEC:P', 'P', 'LF:in', 'COMP:n/MA', '-SPEC:C/fin', '-COMP:N', '-SPEC:iR', '-SPEC:v', '-COMP:ADV', '-COMP:T/fin', '-SPEC:INF', 'PF:ssa', 'PHI:DET:_', 'LANG:FI', 'ARG', '-SPEC:iWH', 'COMP:D', '-SPEC:Neg/fin', 'adjoinable', '-SPEC:C', 'SPEC:*', '-COMP:uWH', '-SPEC:ADV', '!COMP:*', '-SPEC:T/fin', 'TAIL:V', '-VAL', '-SPEC:V'}
stanno          ['LANG:IT']
sta-            {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', '-ASP', 'LANG:EN', 'PHI:PER:_', '-COMP:N', 'PF:sta', '-COMP:T/fin', 'SEM:internal', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'LF:stay', 'SPEC:TO/inf', 'SPEC:D', 'COMP:PRG', 'ARG', '-VAL'}
sti             {'LANG:FI', '-SPEC:N', '-SPEC:FORCE', 'ADV', 'adjoinable', 'SPEC:*', 'LF:by', 'TAIL:T', '-ARG', '!COMP:*', '-SPEC:Neg/fin', '-SPEC:T/fin', 'PF:sti'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'LANG:FI', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', 'PF:sukka-', '-SPEC:ADV', '-SPEC:T/fin', 'LF:socks', 'COMP:uR', 'COMP:R', '-SPEC:V'}
talo            {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', 'LF:house', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'PF:talo', 'N', '-COMP:V', 'LANG:FI', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
tama            ['LANG:EN']
tama-           {'LF:this', 'PF:tama', '-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'PHI', 'LANG:FI', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', '-ASP', 'PHI:PER:_', '-COMP:N', 'MODAL', '-COMP:T/fin', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', '-VAL', 'LANG:FI', 'COMP:P', 'SPEC:*', 'SPEC:ADV', 'PF:taytyy', '!COMP:A/inf', 'SPEC:TO/inf', 'ARG', 'LF:must', 'FIN'}
teki            ['LANG:FI']
teke-           {'PHI:NUM:_', '-COMP:v', 'LF:make', '-SPEC:FORCE', 'PHI:PER:_', '!COMP:D', 'ASP', '-COMP:N', '-COMP:T/fin', 'PF:teke', 'CLASS:TR', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'LANG:FI', '-COMP:P', 'COMP:D', 'COMP:P', '-COMP:A/inf', 'SPEC:ADV', 'SPEC:TO/inf', 'ASP:BOUNDED', '!COMP:*', 'ARG', '-VAL'}
that            {'PF:that', '!PROBE:T/fin', 'LANG:EN', '-SPEC:*', 'FORCE', 'COMP:T/fin', 'COMP:C/fin', '-ARG', '!COMP:*', 'LF:that', '-VAL', 'FIN'}
the             {'-COMP:uR', '-COMP:D', '-SPEC:N', 'LANG:EN', '!PROBE:N', '-SPEC:P', '-SPEC:MA/lla', '-SPEC:D', '-COMP:T/fin', '-ARG', '-SPEC:INF', '-SPEC:T/fin', 'D', 'LF:the', '-SPEC:Neg/fin', '-SPEC:C', 'adjoinable', 'PF:the', 'COMP:N', '!COMP:*', 'PHI:DEF:DEF', 'OP', '-SPEC:V'}
to              {'-SPEC:N', '-SPEC:FORCE', 'PHI:NUM:_', '-SPEC:*', 'TAIL:V,+SEM:directional', 'LANG:EN', '-SPEC:P', 'P', '-SPEC:C/fin', '-COMP:N', 'PHI:PER:_', '-SPEC:iR', '-SPEC:v', '-COMP:ADV', '-COMP:T/fin', '-SPEC:INF', '-float', 'PHI:DET:_', 'ARG', 'LF:to', '-SPEC:iWH', 'COMP:D', '-SPEC:Neg/fin', 'PHI:GEN:_', 'adjoinable', 'PF:to', '-SPEC:C', '-COMP:uWH', '-SPEC:ADV', '!COMP:*', '-SPEC:T/fin', '+SEM:directional', '-VAL', '-SPEC:V'}
to_inf          {'COMP:V', 'LANG:EN', '-SPEC:v', '-COMP:T/fin', 'LF:TO/inf', 'INF', '-COMP:C/fin', 'PF:TO/inf', 'adjoinable', 'COMP:v', '?ARG', '!COMP:*', '-SPEC:T/fin', '-COMP:FORCE', '-VAL', 'TO/inf', '-SPEC:V'}
towards         {'-SPEC:N', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:EN', '-SPEC:*', 'PHI:PER:_', '-SPEC:P', 'P', '-SPEC:C/fin', '-COMP:N', '-SPEC:iR', '-SPEC:v', '-COMP:ADV', '-COMP:T/fin', '-SPEC:INF', '-float', 'PHI:DET:_', 'ARG', '-SPEC:iWH', 'COMP:D', '-SPEC:Neg/fin', 'PHI:GEN:_', 'adjoinable', '-SPEC:C', '!COMP:*', '-COMP:uWH', 'PF:towards', '-SPEC:ADV', 'LF:towards', '-SPEC:T/fin', 'TAIL:V', '-VAL', '-SPEC:V'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'CLASS:TR', 'V', 'LF:nudge', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'LANG:FI', '-COMP:P', 'PF:tonaise', 'COMP:D', 'COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', '!COMP:*', 'ARG', '-VAL'}
tta             {'-SPEC:N', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:PER:_', 'ADV', 'P', '-SPEC:P', 'COMP:n/MA', '-SPEC:C/fin', '-COMP:N', '-SPEC:iR', '-SPEC:v', '-COMP:ADV', '-COMP:T/fin', '-SPEC:INF', 'PHI:DET:_', 'PF:tta', 'LANG:FI', 'ARG', '-SPEC:iWH', 'COMP:D', '-SPEC:Neg/fin', 'LF:without', 'adjoinable', '-SPEC:C', 'SPEC:*', '-COMP:uWH', '-SPEC:ADV', '!COMP:*', '-SPEC:T/fin', '-VAL', '-SPEC:V'}
tries           ['LANG:EN']
try-            {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'LANG:EN', 'PHI:PER:_', 'ASP', '-COMP:N', '!COMP:-ARG', '!COMP:TO/inf', '-COMP:T/fin', 'PF:try', 'SEM:internal', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'LF:try', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:D', 'ARG', '-VAL'}
verifiche       {'PF:verifiche', '-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', 'LF:verification', '-COMP:V', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'LANG:IT', 'COMP:uR', 'COMP:R', '-SPEC:V'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'-COMP:D', 'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', '!COMP:P', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'LANG:FI', 'ARG', 'PF:virtaa', 'COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:D', 'LF:flow', '-VAL'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', '-SPEC:*', 'LANG:EN', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'LF:want', 'SEM:internal', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'PF:volu', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', '!COMP:*', 'ARG', '-VAL'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'LANG:EN', 'PHI:PER:_', 'ASP', '-COMP:N', 'LF:win', '-COMP:T/fin', 'CLASS:TR', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'SEM:achievement', '-COMP:P', 'COMP:D', 'COMP:P', 'PF:voitta', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', 'ASP:BOUNDED', '!COMP:*', 'ARG', '-VAL'}
wants           ['LANG:EN']
want-           {'PHI:NUM:_', '-COMP:v', '-SPEC:TO/inf', 'LANG:EN', '-SPEC:FORCE', 'PHI:PER:_', 'ASP', '-COMP:N', '-COMP:T/fin', 'LF:want', 'CLASS:TR', 'V', '-SPEC:T/fin', 'SPEC:P', 'COMP:TO/inf', '-COMP:V', 'PHI:DET:_', '-COMP:P', 'PF:want', 'COMP:D', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', '!COMP:*', 'ARG', '-VAL'}
what            ['LANG:EN']
what-           {'-COMP:D', '-COMP:WH', 'LF:what', '-SPEC:N', 'PF:what', '-SPEC:FORCE', 'LANG:EN', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'COMP:R/D', 'PHI_N', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-COMP:*', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
which           {'-COMP:uR', '-COMP:D', '-SPEC:N', 'LANG:EN', '!PROBE:N', '-SPEC:P', '-SPEC:MA/lla', '-SPEC:D', '-COMP:T/fin', '-ARG', '-SPEC:INF', 'OP:WH', '-SPEC:T/fin', 'D', 'PF:which', '-SPEC:C', 'LF:which', 'adjoinable', 'COMP:N', '!COMP:*', '-SPEC:Neg/fin', 'OP', '-SPEC:V'}
who             ['LANG:EN']
who-            {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-SPEC:V', '-COMP:V', 'COMP:R/D', 'PHI_N', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-COMP:*', '-SPEC:ADV', 'LF:who', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', 'PF:who'}
whether         {'!PROBE:T/fin', 'LANG:EN', '-SPEC:*', 'FORCE', 'COMP:C/fin', '-ARG', 'LF:whether', 'OP:WH', 'PF:whether', 'FIN', 'OP:Q', 'COMP:T/fin', '!COMP:*', 'Q', 'OP', '-VAL'}
yrittaa         ['LANG:FI']
yritta-         {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'LANG:EN', 'PHI:PER:_', 'ASP', '-COMP:N', '!COMP:-ARG', '-COMP:T/fin', 'SEM:internal', 'V', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'LF:try', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:D', '!COMP:A/inf', 'ARG', 'PF:yritta', '-VAL'}
mina            ['LANG:EN']
mina-           {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', 'LF:I', '-COMP:A', '-SPEC:INF', 'N', '-SPEC:V', '-COMP:V', 'LANG:FI', 'PHI_N', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-COMP:*', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', 'PF:mina'}
sina            ['LANG:EN']
sina-           {'LF:you', '-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', 'PF:sina', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'LANG:FI', 'PHI_N', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-COMP:*', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
han             ['LANG:EN']
han-            {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'LANG:FI', 'PHI_N', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', 'PF:han', '-SPEC:R', '-COMP:*', '-SPEC:ADV', 'LF:s/he', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', 'PF:me', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', '-SPEC:T/fin', 'N', '-COMP:V', 'LANG:FI', 'PHI_N', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-COMP:*', '-SPEC:ADV', 'LF:we', 'COMP:uR', 'COMP:R', '-SPEC:V'}
te              ['LANG:EN']
te-             {'LF:you', '-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'LANG:FI', 'PHI_N', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'PF:te', 'SPEC:A', '-SPEC:R', '-COMP:*', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he-             {'-COMP:D', '-COMP:WH', 'LF:they', '-SPEC:FORCE', '-SPEC:N', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'PF:he', 'LANG:FI', 'PHI_N', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-COMP:*', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
he-             {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'PF:he', 'COMP:R/D', 'PHI_N', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', 'LF:he', '-SPEC:R', '-COMP:*', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
se              ['LANG:FI']
se-             {'-COMP:uR', 'PF:se', '-COMP:D', '-SPEC:N', '!PROBE:N', '-SPEC:P', '-SPEC:MA/lla', '-SPEC:D', '-COMP:T/fin', '-ARG', '-SPEC:INF', '-SPEC:T/fin', 'D', 'LF:it/that', 'LANG:FI', '-SPEC:C', 'adjoinable', 'COMP:N', '!COMP:*', '-SPEC:Neg/fin', 'OP', '-SPEC:V'}
I               ['LANG:EN']
I-              {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', 'LF:I', '-COMP:A', '-SPEC:INF', 'PF:I', 'N', '-COMP:V', 'COMP:R/D', 'PHI_N', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-COMP:*', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
you             ['LANG:EN']
you-            {'LF:you', '-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'PF:you', 'N', '-COMP:V', 'COMP:R/D', 'PHI_N', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-COMP:*', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
he              ['LANG:EN']
she             ['LANG:EN']
she-            {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', 'PF:she', '-COMP:V', 'LF:she', 'COMP:R/D', 'PHI_N', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-COMP:*', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
we              ['LANG:EN']
we-             {'PF:we', '-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', '-SPEC:T/fin', 'N', '-COMP:V', 'COMP:R/D', 'PHI_N', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-COMP:*', '-SPEC:ADV', 'LF:we', 'COMP:uR', 'COMP:R', '-SPEC:V'}
you_pl          ['LANG:EN']
you_pl-         {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'LF:you_pl', 'PHI', 'COMP:R/D', 'PF:you_pl', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
they            ['LANG:EN']
they-           {'-COMP:D', '-COMP:WH', 'LF:they', '-SPEC:FORCE', '-SPEC:N', 'LANG:EN', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'COMP:R/D', 'PHI_N', 'PF:they', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-COMP:*', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
it              ['LANG:EN']
it-             {'-COMP:uR', '-COMP:D', '-SPEC:N', 'LANG:EN', '!PROBE:N', '-SPEC:P', '-SPEC:MA/lla', '-SPEC:D', '-COMP:T/fin', '-ARG', '-SPEC:INF', '-SPEC:T/fin', 'D', '-SPEC:V', 'LF:it/that', '-SPEC:C', 'adjoinable', 'COMP:N', '!COMP:*', '-SPEC:Neg/fin', 'OP', 'PF:it'}
io              ['LANG:EN']
io-             {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', 'LF:I', '-COMP:A', '-SPEC:INF', 'PF:io', 'N', '-COMP:V', 'COMP:R/D', 'PHI_N', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-COMP:*', '-SPEC:ADV', '-SPEC:T/fin', 'LANG:IT', 'COMP:uR', 'COMP:R', '-SPEC:V'}
tu              ['LANG:EN']
tu-             {'LF:you', '-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'PF:tu', 'N', '-COMP:V', 'COMP:R/D', 'PHI_N', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-COMP:*', '-SPEC:ADV', '-SPEC:T/fin', 'LANG:IT', 'COMP:uR', 'COMP:R', '-SPEC:V'}
lui             ['LANG:EN']
lui-            {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', 'PF:lui', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'COMP:R/D', 'PHI_N', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', 'LF:he', '-SPEC:R', '-COMP:*', '-SPEC:ADV', '-SPEC:T/fin', 'LANG:IT', 'COMP:uR', 'COMP:R', '-SPEC:V'}
lei             ['LANG:EN']
lei-            {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'LF:she', 'COMP:R/D', 'PHI_N', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', 'PF:lei', '-SPEC:R', '-COMP:*', '-SPEC:ADV', '-SPEC:T/fin', 'LANG:IT', 'COMP:uR', 'COMP:R', '-SPEC:V'}
noi             ['LANG:EN']
noi-            {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', '-SPEC:T/fin', 'N', '-COMP:V', 'COMP:R/D', 'PHI_N', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-COMP:*', 'PF:noi', '-SPEC:ADV', 'LF:we', 'LANG:IT', 'COMP:uR', 'COMP:R', '-SPEC:V'}
voi             ['LANG:EN']
voi-            {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'LF:you_pl', 'COMP:R/D', 'PHI_N', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', 'PF:voi', '-COMP:*', '-SPEC:ADV', '-SPEC:T/fin', 'LANG:IT', 'COMP:uR', 'COMP:R', '-SPEC:V'}
loro            ['LANG:EN']
loro-           {'-COMP:D', '-COMP:WH', 'LF:they', '-SPEC:FORCE', '-SPEC:N', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'COMP:R/D', 'PHI_N', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-COMP:*', '-SPEC:ADV', '-SPEC:T/fin', 'LANG:IT', 'PF:loro', 'COMP:uR', 'COMP:R', '-SPEC:V'}
mi              ['LANG:EN']
mi-             {'-COMP:D', '-COMP:WH', '-SPEC:FORCE', '-COMP:A', 'N', 'PF:mi(cl)', 'PHI_N', 'COMP:R/D', '-SPEC:uWH', 'COMP:P', 'CL', 'SPEC:A', '-COMP:*', '-SPEC:T/fin', 'LANG:IT', 'LF:me', 'COMP:uR', '-SPEC:N', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:R', '-SPEC:ADV', 'COMP:R', '-SPEC:V'}
la              ['LANG:EN']
la-             {'-COMP:D', '-COMP:WH', '-SPEC:FORCE', 'LF:her', '-COMP:A', 'N', 'COMP:R/D', 'PHI_N', '-SPEC:uWH', 'COMP:P', 'CL', 'SPEC:A', '-COMP:*', '-SPEC:T/fin', 'LANG:IT', 'COMP:uR', '-SPEC:N', '-COMP:v', 'PF:la(cl)', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:R', '-SPEC:ADV', 'COMP:R', '-SPEC:V'}
lo              ['LANG:EN']
lo-             {'-COMP:D', '-COMP:WH', '-SPEC:FORCE', '-COMP:A', 'N', 'COMP:R/D', 'PHI_N', '-SPEC:uWH', 'COMP:P', 'CL', 'SPEC:A', '-COMP:*', '-SPEC:T/fin', 'LANG:IT', 'COMP:uR', '-SPEC:N', '-COMP:v', 'PF:lo(cl)', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:V', 'LF:him', '-COMP:AUX', '-COMP:C/fin', '-SPEC:R', '-SPEC:ADV', 'COMP:R', '-SPEC:V'}
si              ['LANG:EN']
si-             {'-COMP:D', '-COMP:WH', '-SPEC:FORCE', '-COMP:A', 'N', 'COMP:R/D', 'PHI_N', '-SPEC:uWH', 'COMP:P', 'SPEC:A', '-COMP:*', '-SPEC:T/fin', 'LANG:IT', 'PF:si(cl)', 'COMP:uR', 'CAL:CL', '-SPEC:N', '-COMP:v', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', 'LF:3sg', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:R', '-SPEC:ADV', 'COMP:R', '-SPEC:V'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-COMP:D', '-COMP:WH', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', 'PF:ci', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'N', '-COMP:V', 'COMP:R/D', 'PHI_N', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-COMP:*', '-SPEC:ADV', '-SPEC:T/fin', 'LF:there', 'LANG:IT', 'COMP:uR', 'COMP:R', '-SPEC:V'}
[-n]            {'PHI:NUM:SG', 'PHI', 'inflectional', 'PHI:PER:1', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-t]            {'PHI:NUM:SG', 'PHI', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:2', 'PHI:DET:DEF'}
[-V]            {'PHI:NUM:SG', 'PHI', 'inflectional', 'PHI:PER:3', 'LANG:FI'}
[-mme]          {'inflectional', 'PHI', 'PHI:PER:1', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:DET:DEF'}
[-mme]          {'inflectional', 'PHI:PER:1', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:DET:DEF'}
[-tte]          {'inflectional', 'PHI', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:2', 'PHI:NUM:PL', 'PHI:DET:DEF'}
[-vat]          {'inflectional', 'PHI', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:PL'}
[-ni]           {'PHI:NUM:SG', 'PHI', 'inflectional', 'PHI:PER:1', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-si]           {'PHI:NUM:SG', 'PHI', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:2', 'PHI:DET:DEF'}
[-nsa]          {'PHI:NUM:SG', 'PHI', 'inflectional', 'PHI:PER:3', 'LANG:FI'}
[-an]           {'inflectional', 'PHI', 'PHI:PER:3', 'LANG:FI'}
[-nne]          {'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:2', 'PHI:NUM:PL', 'PHI:DET:DEF'}
[-s]            {'PHI:GEN:M', 'PHI:NUM:SG', 'PHI', 'inflectional', 'PHI:PER:3', 'LANG:EN', 'PHI:GEN:F'}
[-0]            {'PHI:NUM:SG', 'PHI', 'PHI:PER:1', 'PHI:PER:3', 'PHI:PER:2', 'LANG:EN', 'PHI:NUM:PL', 'PHI:GEN:N', 'inflectional', 'PHI:DET:DEF'}
[-o]            {'PHI:NUM:SG', 'PHI', 'inflectional', 'PHI:PER:1', 'PHI:HUM:HUM', 'LANG:IT', 'PHI:DET:DEF'}
[-i]            {'PHI:NUM:SG', 'PHI', 'inflectional', 'PHI:HUM:HUM', 'PHI:PER:2', 'LANG:IT', 'PHI:DET:DEF'}
[-a]            {'PHI:NUM:SG', 'PHI', 'inflectional', 'PHI:PER:3', 'LANG:IT', 'PHI:DET:DEF'}
[-e]            {'PHI:NUM:SG', 'PHI', 'inflectional', 'PHI:PER:3', 'LANG:IT', 'PHI:DET:DEF'}
[-iamo]         {'inflectional', 'PHI', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'LANG:IT', 'PHI:DET:DEF'}
[-te]           {'inflectional', 'PHI', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:NUM:PL', 'LANG:IT', 'PHI:DET:DEF'}
[-no]           {'inflectional', 'PHI', 'PHI:PER:3', 'PHI:NUM:PL', 'LANG:IT', 'PHI:DET:DEF'}
[-nom]          {'inflectional', 'LANG:EN', 'TAIL:FIN,ARG,VAL', 'NOM', 'adjoinable'}
[-par]          {'inflectional', 'LANG:FI', 'TAIL:ARG,-VAL', 'PAR', 'adjoinable'}
[-gen]          {'inflectional', 'TAIL:INF,ARG', 'GEN', 'LANG:EN', '-float'}
gen             {'inflectional', 'TAIL:INF,ARG', 'GEN', 'LANG:EN', '-float'}
[-n_acc]        {'inflectional', 'TAIL:PHI', 'LANG:FI', 'n-ACC', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable'}
[-t_acc]        {'inflectional', 'LANG:FI', 'TAIL:*POL:NEG', 't-ACC', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable'}
[-0_acc]        {'0_ACC', 'inflectional', 'LANG:FI', 'TAIL:*PHI', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable'}
asp             {'inflectional', 'ASP:BOUNDED', 'LANG:EN'}
a'              {'PF:a', 'LANG:X', 'a', 'LF:A'}
b'              {'PF:b', 'LANG:X', 'LF:B', 'b'}
b''             {'LF:B', 'b', 'LANG:EN', 'PF:b', '-COMP:c'}
c''             {'SPEC:a', 'PF:c', 'c', 'LANG:EN', 'LF:C'}
c'              {'LANG:X', 'LF:C', 'PF:c', 'c'}
d'              {'LANG:', 'PF:d', 'd', 'LF:D'}
a''             ['LANG:EN']
x'              {'PF:x', 'LF:X', 'x', 'LANG:X'}
y'              {'PF:y', 'LANG:X', 'y', 'LF:Y'}
z'              {'PF:x', 'LF:Z', 'z', 'LANG:X'}
John'           {'PF:John', "N'", 'LANG:X', 'LF:John'}
admires'        {"V'", 'LF:admires', 'PF:admires', 'LANG:X'}
admires''       {'PHI:NUM:_', '-COMP:v', '-SPEC:FORCE', 'LANG:EN', 'PHI:PER:_', 'PF:admires', 'ASP', '-COMP:N', '-COMP:T/fin', 'V', 'SPEC:P', '-SPEC:T/fin', '-COMP:V', 'PHI:DET:_', 'LF:admires', 'COMP:P', 'PHI:GEN:_', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:D', 'ARG', '-VAL'}
Mary'           {'LANG:X', "N'", 'PF:Mary', 'LF:mary'}
T/fin           {'-COMP:INF', 'COMP:V', 'PF:T', 'LF:T', '-SPEC:FORCE', 'LANG:EN', '-SPEC:TO/inf', '-SPEC:N', '!SPEC:D', '-SPEC:C/fin', 'PHI:NUM:_', 'PHI:PER:_', '-SPEC:v', '-COMP:T/fin', 'T/fin', 'T', 'VAL', 'PHI:DET:_', 'ARG', 'COMP:D', 'PHI:GEN:_', 'SPEC:*', '!PROBE:V', 'COMP:v', 'SPEC:D', 'SPEC:TO/inf', '-SPEC:Neg', 'COMP:T/prt', '!COMP:*', '-SPEC:T/fin', 'FIN', '-SPEC:V'}
v               {'PHI:DET:_', 'COMP:V', '-SPEC:N', 'PHI:NUM:_', 'LANG:EN', 'PHI:PER:_', 'PHI:GEN:_', 'ASP', 'v', 'LF:v', '!PROBE:V', 'SPEC:D', '!COMP:*', 'ARG', 'PF:v', '-VAL'}
C/fin           {'-SPEC:N', 'LANG:EN', '-SPEC:C/fin', '-COMP:T/prt', '-ARG', '-SPEC:T/fin', 'PF:C', 'VAL', '!PROBE:FIN', 'COMP:Neg/fin', '-COMP:C/fin', 'C', 'SPEC:*', 'COMP:T/fin', 'C/fin', '!COMP:*', 'LF:C/fin', 'FIN'}
T               {'COMP:V', 'PF:T', 'LF:T', '-SPEC:N', 'LANG:EN', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:PER:_', '-SPEC:T/fin', 'T', 'VAL', 'PHI:DET:_', 'COMP:D', 'PHI:GEN:_', 'SPEC:*', 'COMP:v', '!PROBE:V', 'SPEC:D', 'COMP:T/prt', '!COMP:*', 'ARG', 'FIN', '-COMP:NEG', '-SPEC:V'}
T/prt           {'COMP:V', '-SPEC:N', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:EN', 'PHI:PER:_', 'PF:T/prt', 'T/prt', 'LF:T/prt', '-SPEC:T/fin', 'T', 'VAL', 'PHI:DET:_', 'COMP:D', 'PHI:GEN:_', 'SPEC:*', 'COMP:v', '!PROBE:V', 'SPEC:D', 'COMP:T/prt', '!COMP:*', 'ARG', 'FIN', '-COMP:NEG', '-SPEC:V'}
a0              {'COMP:0', 'A', 'LF:A', 'PF:A', 'LANG:EN', 'TAIL:D', 'adjoinable', '-SPEC:A', '-SPEC:D', '-adjoinable'}
n               {'COMP:V', '-COMP:D', '-COMP:WH', 'COMP:0', '-SPEC:FORCE', '!SPEC:D', '-COMP:A', 'N', 'PHI:DET:_', 'LF:n', 'COMP:R/D', 'INF', '-SPEC:uWH', 'COMP:P', 'PHI:GEN:_', 'SPEC:A', 'n', 'PF:n', '!COMP:*', '-SPEC:T/fin', 'COMP:uR', '-SPEC:N', '-COMP:v', 'PHI:NUM:_', 'LANG:EN', 'PHI:PER:_', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '!SPEC:*', '-SPEC:INF', 'VAL', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', 'SPEC:*', '-SPEC:R', 'COMP:v', '-SPEC:ADV', 'ARG', 'COMP:R', '-SPEC:V'}
impass          {'PHI:DET:_', 'COMP:V', '-SPEC:N', 'PHI:NUM:_', 'LANG:EN', 'PHI:PER:_', 'LF:impass', 'PHI:GEN:_', 'ASP', 'PF:impass', 'v', '!PROBE:V', 'SPEC:D', '!COMP:*', 'ARG', '-VAL'}
cau             {'PHI:DET:_', 'COMP:V', 'LF:v/Cause', '-SPEC:N', 'PHI:NUM:_', 'LANG:EN', 'PHI:PER:_', 'PHI:GEN:_', 'ASP', 'v', '!PROBE:V', 'PF:Cau', 'SPEC:D', '!COMP:*', 'ARG', '-VAL'}
INF             {'COMP:V', 'INF', 'LANG:EN', 'LF:INF', '-COMP:C/fin', 'COMP:v', '-COMP:T/fin', '-COMP:FORCE', '!COMP:*', 'PF:INF', '-SPEC:T/fin', '-SPEC:V'}
prtcpl          {'COMP:V', '-SPEC:N', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:EN', 'PHI:PER:_', 'PF:T/prt', 'T/prt', '-COMP:T/fin', 'LF:T/prt', 'T', 'VAL', 'PHI:DET:_', 'ARG', 'INF', 'COMP:D', '-COMP:C/fin', 'PHI:GEN:_', 'SPEC:*', '!PROBE:V', 'COMP:v', 'SPEC:D', 'COMP:T/prt', '!COMP:*', '-SPEC:T/fin', '-COMP:FORCE', 'FIN', '-COMP:NEG', '-SPEC:V'}
TO/inf          {'COMP:V', 'LANG:EN', '!COMP:V', '-SPEC:v', '-COMP:T/fin', 'LF:TO/inf', 'INF', '-COMP:C/fin', 'PF:TO/inf', 'adjoinable', 'COMP:v', '?ARG', '!COMP:*', '-SPEC:T/fin', '-COMP:FORCE', '-VAL', 'TO/inf', '-SPEC:V'}
A/inf           {'COMP:V', 'LF:A/inf', 'A/inf', 'LANG:EN', '?VAL', 'PF:A/inf', '-COMP:T/fin', '-SPEC:T/fin', 'INF', '-COMP:C/fin', 'SPEC:*', 'COMP:v', '?ARG', '!COMP:*', '-SPEC:Neg/fin', '-COMP:FORCE', '-SPEC:V'}
ARE/inf         {'COMP:V', 'LANG:EN', 'LF:ARE/inf', '-COMP:T/fin', 'ARE/inf', 'VAL', '-SPEC:V', 'PF:are', 'INF', '-COMP:C/fin', 'SPEC:*', 'COMP:v', '?ARG', '!COMP:*', '-SPEC:T/fin', '-COMP:FORCE', '-adjoinable'}
ESSA/inf        {'COMP:V', 'PF:essa', '-SPEC:N', '-SPEC:FORCE', 'LANG:EN', '?VAL', 'ADV', '-COMP:T/fin', 'TAIL:T', '-SPEC:T/fin', 'ESSA/inf', 'INF', '-COMP:C/fin', 'LF:while', 'SPEC:*', 'adjoinable', 'COMP:v', '?ARG', '!COMP:*', '-SPEC:Neg/fin', '-COMP:FORCE', '-SPEC:V'}
TUA/inf         {'COMP:V', '-SPEC:N', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:EN', 'PF:tua', 'PHI:PER:_', 'ADV', '-COMP:T/fin', 'TAIL:T', '!SPEC:*', '-SPEC:T/fin', 'PHI:DET:_', 'INF', '-SPEC:Neg/fin', '-COMP:C/fin', 'TUA/inf', 'adjoinable', 'PHI:GEN:_', 'COMP:v', 'CAL', '!COMP:*', 'ARG', '-COMP:FORCE', 'LF:after', '-SPEC:V'}
VA/inf          {'COMP:V', '-SPEC:N', 'PHI:NUM:_', 'LANG:EN', 'PHI:PER:_', '-COMP:T/fin', '!SPEC:*', '-SPEC:T/fin', 'VAL', 'LF:VA', 'PHI:DET:_', 'PF:vAn', 'INF', 'VA/inf', '-COMP:C/fin', 'PHI:GEN:_', 'SPEC:*', 'COMP:v', '!COMP:*', 'ARG', '-COMP:FORCE', '-SPEC:V'}
MA/ssa          {'COMP:V', '-SPEC:N', '-SPEC:FORCE', 'PHI:NUM:_', '-SPEC:*', 'LANG:EN', 'PHI:PER:_', 'ADV', 'LF:in_doing', '-SPEC:T/fin', 'PHI:DET:_', 'MA/inf', 'ARG', 'PF:massa', 'PHI:GEN:_', 'adjoinable', 'COMP:v', '-SPEC:Neg/fin', 'TAIL:V', '-VAL'}
MA/tta          {'PHI:DET:_', 'MA/inf', '-SPEC:N', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:EN', 'PHI:PER:_', 'ADV', 'PF:matta', '-SPEC:Neg/fin', 'adjoinable', 'LF:without_doing', 'PHI:GEN:_', 'TAIL:T', 'ARG', '-SPEC:T/fin', '-VAL'}
MA/lla          {'COMP:V', '-SPEC:FORCE', 'PF:malla', 'TAIL:T', 'PHI:DET:_', 'PHI:GEN:_', 'LF:by_doing', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:T/fin', '-VAL', 'MA/inf', '-SPEC:N', 'PHI:NUM:_', 'LANG:EN', 'PHI:PER:_', 'ADV', 'COMP:v', 'ARG'}
MA/inf          {'COMP:V', '-SPEC:FORCE', 'PHI:DET:_', 'PHI:GEN:_', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:T/fin', 'TAIL:V', '-VAL', 'MA/inf', '-SPEC:N', 'PHI:NUM:_', 'PF:maan', 'LANG:EN', 'PHI:PER:_', 'ADV', 'LF:to_do', 'COMP:v', 'ARG'}
E/inf           {'LANG:FI', '-SPEC:N', '-SPEC:FORCE', 'ADV', 'adjoinable', 'SPEC:*', 'PF:en', 'LF:by', '-ARG', '-SPEC:Neg/fin', '-SPEC:T/fin', '-VAL'}
BE-             {'-COMP:v', '-SPEC:FORCE', 'LANG:EN', 'PF:BE', 'ASP', '-COMP:N', 'COPULA', '-COMP:T/fin', '-ARG', 'V', 'SPEC:P', 'LF:BE', '-COMP:V', 'COMP:P', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:D', 'COMP:T/prt', '!COMP:*', '-SPEC:T/fin', '-VAL'}
D               {'-COMP:uR', '-COMP:D', '-SPEC:N', 'LANG:EN', '!PROBE:N', '-SPEC:P', 'OP', '-SPEC:MA/lla', '-SPEC:D', '-COMP:T/fin', 'LF:D', '-ARG', '-SPEC:INF', '-SPEC:T/fin', 'D', '-SPEC:C', 'adjoinable', 'COMP:N', '!COMP:*', '-SPEC:Neg/fin', 'PF:D', '-SPEC:V'}
P               {'LF:P', '-SPEC:N', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:EN', '-SPEC:*', 'PHI:PER:_', '-SPEC:P', 'P', 'PF:P', '-SPEC:C/fin', '-COMP:N', '-SPEC:iR', '-SPEC:v', '-COMP:ADV', '-COMP:T/fin', '-SPEC:INF', '-float', 'PHI:DET:_', 'ARG', '-SPEC:iWH', 'COMP:D', '-SPEC:Neg/fin', 'PHI:GEN:_', 'adjoinable', '-SPEC:C', '-COMP:uWH', '-SPEC:ADV', '!COMP:*', '-SPEC:T/fin', '-VAL', '-SPEC:V'}
pro             ['LANG:EN']
pro-            {'-COMP:D', '-COMP:WH', 'LF:pro', '-SPEC:N', '-SPEC:FORCE', '-COMP:v', 'LANG:EN', '-SPEC:P', '-SPEC:C/fin', '-COMP:N', '-COMP:T/fin', '-COMP:ADV', '-SPEC:INF', '-COMP:A', 'PF:(pro)', 'N', '-COMP:V', 'PHI', 'COMP:R/D', '-SPEC:uWH', '-COMP:AUX', 'COMP:P', '-COMP:C/fin', 'SPEC:A', '-SPEC:R', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:uR', 'COMP:R', '-SPEC:V'}
cl              {'inflectional', 'LEFT:T/fin', 'LEFT:D,CL', 'RIGHT:ARE/inf', 'LANG:EN', 'CL', 'RIGHT:PRG'}
inc             {'LANG:EN', 'inflectional', 'INCORPORATED'}
sg              {'LANG:EN', 'inflectional', 'PHI:NUM:SG'}
pl              {'LANG:EN', 'inflectional', 'PHI:NUM:PL'}
1p              {'LANG:EN', 'inflectional', 'PHI:PER:1'}
2p              {'LANG:EN', 'inflectional', 'PHI:PER:2'}
3p              {'LANG:EN', 'inflectional', 'PHI:PER:3'}
def             {'LANG:EN', 'inflectional', 'PHI:DET:DEF'}
indef           {'LANG:EN', 'inflectional', 'PHI:DET:INDEF'}
hum             {'LANG:EN', 'inflectional', 'PHI:HUM:HUM'}
nonhum          {'LANG:EN', 'inflectional', 'PHI:HUM:NONHUM'}
m               {'PHI:GEN:M', 'inflectional', 'LANG:EN'}
f               {'LANG:EN', 'inflectional', 'PHI:GEN:F'}
nom             {'LANG:EN', 'inflectional', 'NOM', 'TAIL:FIN,!COMP:*,VAL'}
acc             {'TAIL:v', 'inflectional', 'LANG:EN', 'ACC'}
dat             {'TAIL:v', 'inflectional', 'LANG:EN', 'DAT'}
uC/op           {'LANG:EN', 'inflectional', 'uC/op'}
wh              {'LANG:EN', 'inflectional', 'OP:WH', 'OP:_'}
wh_             {'inflectional', 'OP:_', 'FORCE:OP:WH', 'LANG:EN', 'OP'}
top             {'OP:TOP', 'inflectional', 'LANG:EN'}
foc             {'LANG:EN', 'inflectional', 'OP:FOC'}
C/op            {'LANG:EN', 'inflectional', 'OP:C/OP'}
rel             {'inflectional', 'OP:REL', 'LANG:EN', '-COMP:C/fin', 'adjoinable'}
Q               {'inflectional', 'LANG:EN', 'OP', 'OP:Q', 'OP:WH'}
