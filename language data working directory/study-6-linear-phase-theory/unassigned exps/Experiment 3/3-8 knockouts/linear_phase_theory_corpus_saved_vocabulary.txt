ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'COMP:D', '-COMP:T/fin', 'LF:to', '-ARG', '-SPEC:iR', 'adjoinable', '-VAL', 'PF:a', '-SPEC:*', '-COMP:ADV', '-COMP:N', '-SPEC:C', '-COMP:uWH', '-SPEC:v', '-SPEC:ADV', 'LANG:IT', '-SPEC:P', 'TAIL:V', '-SPEC:C/fin', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:T/fin', '-SPEC:iWH', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', '!COMP:*', 'P', 'COMP:ARE/inf'}
a_D             {'-COMP:T/fin', '-ARG', 'PF:D', 'adjoinable', '!PROBE:N', 'LF:D', '-SPEC:C', '-COMP:uR', '-COMP:D', '-SPEC:P', '-SPEC:MA/lla', 'D', '-SPEC:Neg/fin', '-SPEC:V', 'COMP:N', 'OP', '-SPEC:T/fin', '-SPEC:INF', '!COMP:*', 'LANG:EN'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'COMP:D', 'COMP:P', '-COMP:T/fin', '-COMP:v', '-SPEC:Neg', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:GEN:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:admire', 'CLASS:TR', 'SPEC:ADV', '-COMP:Neg', '-SPEC:T/fin', '-COMP:P', 'PF:admire', '-SPEC:FORCE', '!COMP:*', 'LANG:EN'}
admire*         ['LANG:EN']
T/fin*          {'NO_NUMBER', 'NO_DET', "PF:T/fin'", '-VAL', 'CAT:T/fin', '!SPEC:*', 'LANG:EN', 'LF:T'}
v*              {'NO_NUMBER', 'CAT:v', 'PF:v', 'LF:v', 'NO_DET', 'LANG:EN', '-VAL'}
admire**        ['LANG:EN']
T/fin**         {'NO_NUMBER', 'NO_DET', '-VAL', 'NO_PERSON', 'CAT:T/fin', "PF:T/fin''", '!SPEC:*', 'LANG:EN', 'LF:T', 'PHI:PER:3'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'COMP:D', 'COMP:P', '-COMP:T/fin', '-COMP:v', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:GEN:_', 'V', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'PHI:DET:_', 'LF:admire', 'LANG:IT', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:adora', 'PHI:PER:_'}
antaa           ['LANG:FI']
anta-           {'COMP:P', 'COMP:D', '-COMP:T/fin', '-COMP:v', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'LF:give', 'V', 'SPEC:P', '-COMP:N', '+SEM:directional', '-COMP:FIN', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:D', 'LANG:FI', 'CLASS:DITR', 'SPEC:ADV', '-SPEC:T/fin', 'PF:antaa', '-SPEC:FORCE', '!COMP:*', 'PHI:PER:_', 'ASP:BOUNDED'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'COMP:D', 'SEM:internal', 'COMP:P', '-COMP:T/fin', '-COMP:v', 'PF:ask', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:GEN:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:ask', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', 'LANG:EN'}
ask-            {'COMP:D', 'SEM:internal', 'COMP:P', '-COMP:T/fin', '-COMP:v', 'PF:ask', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:GEN:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:ask', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', 'LANG:EN'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'LF:key', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', 'PF:avain', '-SEM:directional', '-SPEC:FORCE', 'COMP:R'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', 'LF:car', '-COMP:C/fin', '-COMP:WH', '-COMP:N', '-COMP:A', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'PF:auto', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', '-SEM:directional', 'COMP:R'}
city            {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'COMP:C', 'LF:city', 'PF:city', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'COMP:R', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'LANG:EN'}
che             ['LANG:IT']
che-            {'COMP:P', '-SPEC:uWH', '-COMP:v', 'PF:che', '-COMP:*', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:IT', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R', 'LF:who'}
chiamato        ['LANG:IT']
chiamata-       {'COMP:P', '-COMP:T/fin', '-COMP:v', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:GEN:_', 'V', 'PF:chiamato', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LANG:IT', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'LF:called', 'PHI:PER:_'}
danno           {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', 'LF:damage', '-COMP:WH', '-COMP:N', '-COMP:A', '-SPEC:ADV', 'LANG:IT', '-SPEC:P', 'PF:danno', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'SEM:internal', 'COMP:D', 'COMP:P', '-COMP:T/fin', '-COMP:v', 'LF:detest', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PF:detest', 'PHI:NUM:_', 'PHI:GEN:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LANG:IT', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:PER:_', 'COMP:ARE/inf'}
devono          ['LANG:EN']
deva-           {'SEM:internal', 'COMP:P', '-COMP:T/fin', '-COMP:v', 'PF:deva', '-COMP:V', '-VAL', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', '-ASP', 'LANG:IT', 'SPEC:ADV', '-SPEC:T/fin', 'LF:must', '-SPEC:FORCE', 'SPEC:D', 'PHI:PER:_', 'COMP:ARE/inf'}
di              {'COMP:D', '-COMP:T/fin', '-SPEC:iR', '-VAL', 'ARG', 'PHI:NUM:_', '-COMP:ADV', 'SPEC:*', 'PHI:DET:_', '-COMP:N', '-SPEC:C', '-COMP:uWH', '-adjoinable', '-SPEC:v', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', 'PF:di', '-SPEC:C/fin', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:T/fin', '-SPEC:iWH', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', '!COMP:*', 'PHI:PER:_', 'P', 'LF:of'}
does            {'-COMP:T/fin', 'COMP:Neg', 'FIN', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:v', '-SPEC:TO/inf', 'T/fin', 'VAL', '!PROBE:V', '!SPEC:D', '-COMP:INF', 'COMP:T/prt', '-SPEC:V', '-SPEC:T/fin', 'PHI:NUM:SG', 'T', 'SPEC:D', 'LANG:EN', 'PHI:PER:3', '-SPEC:Neg', 'SPEC:*', 'PF:does', 'SPEC:TO/inf', '-SPEC:C', 'PHI:GEN:M', 'COMP:V', 'PHI:GEN:F', '-SPEC:C/fin', '-SPEC:N', 'COMP:v', '-SPEC:FORCE', '!COMP:*', 'PHI:PER:_', 'LF:does'}
does_C          ['LANG:EN']
does-           {'-COMP:T/fin', 'COMP:Neg', 'FIN', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:v', '-SPEC:TO/inf', 'T/fin', 'VAL', '!PROBE:V', '!SPEC:D', '-COMP:INF', 'COMP:T/prt', '-SPEC:V', '-SPEC:T/fin', 'PHI:NUM:SG', 'T', 'SPEC:D', 'LANG:EN', 'PHI:PER:3', '-SPEC:Neg', 'SPEC:*', 'PF:does', 'SPEC:TO/inf', '-SPEC:C', 'PHI:GEN:M', 'COMP:V', 'PHI:GEN:F', '-SPEC:C/fin', '-SPEC:N', 'COMP:v', '-SPEC:FORCE', '!COMP:*', 'PHI:PER:_', 'LF:does'}
dorme           ['LANG:IT']
dorme-          {'COMP:P', '-COMP:T/fin', '-COMP:v', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:GEN:_', 'V', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'PHI:DET:_', '!SPEC:D', 'SPEC:ADV', 'LF:sleep', '-SPEC:T/fin', 'PF:dorme', '-SPEC:FORCE', 'LANG:EN'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'SEM:internal', 'PF:ei', 'FIN', 'LF:neg', 'ARG', 'PHI:NUM:_', '-SPEC:T', 'SPEC:*', 'PHI:DET:_', 'Neg/fin', 'LANG:FI', 'NEG', 'VAL', '%SPEC:INF', 'POL:NEG', 'COMP:T/prt', '-SPEC:T/fin', '!COMP:T', '!COMP:*', '!SPEC:*', 'PHI:PER:_'}
e-              {'SEM:internal', 'PF:ei', 'FIN', 'LF:neg', 'ARG', 'PHI:NUM:_', '-SPEC:T', 'SPEC:*', 'PHI:DET:_', 'Neg/fin', 'LANG:FI', 'NEG', 'VAL', '%SPEC:INF', 'POL:NEG', 'COMP:T/prt', '-SPEC:T/fin', '!COMP:T', '!COMP:*', '!SPEC:*', 'PHI:PER:_'}
elaa            ['LANG:FI']
ela-            {'COMP:P', '-COMP:T/fin', 'PF:elaa', '-COMP:v', 'CLASS:INTR', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:D', 'LANG:FI', 'LF:live', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:MA/inf', 'SPEC:D', 'PHI:PER:_'}
etsii           ['LANG:FI']
etsi-           {'COMP:D', 'COMP:P', '-COMP:T/fin', '-COMP:v', 'PF:etsi', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:PER:_', 'V', 'LF:search', '-COMP:N', 'SPEC:P', 'SPEC:TO/inf', 'PHI:DET:_', 'LANG:FI', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', '!COMP:D'}
etta            {'PF:etta', 'LANG:FI', 'FIN', '-ARG', 'LF:that', '-VAL', '!PROBE:T/fin', '-SPEC:*', 'FORCE', '!COMP:*', 'COMP:T/fin', 'COMP:C/fin'}
flow'           {'COMP:P', '-COMP:T/fin', '-COMP:v', 'LF:flow', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:GEN:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'PF:flow', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', 'LANG:EN'}
from            {'COMP:D', '-COMP:T/fin', '-SPEC:iR', 'PHI:PER:_', 'adjoinable', '-VAL', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_', '-COMP:ADV', '-SPEC:*', 'PHI:DET:_', '-COMP:N', '-SPEC:C', 'LF:from', '-COMP:uWH', '-SPEC:v', '-SPEC:ADV', '-SPEC:P', 'PF:from', '-SPEC:C/fin', '-SPEC:Neg/fin', '-SPEC:V', 'TAIL:V,+SEM:directional', '-SPEC:T/fin', '-SPEC:iWH', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', '-float', '!COMP:*', 'LANG:EN', 'P'}
gave            ['LANG:EN']
give-           {'COMP:P', 'COMP:D', '-COMP:T/fin', '-COMP:v', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'LF:give', 'PHI:GEN:_', 'V', 'SPEC:P', '-COMP:N', '+SEM:directional', '-COMP:FIN', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:D', 'CLASS:DITR', 'SPEC:ADV', '-SPEC:T/fin', 'PF:give', '-SPEC:FORCE', '!COMP:*', 'LANG:EN'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'COMP:P', '-SPEC:uWH', '-COMP:v', 'LF:Giuseppe', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'PF:Giuseppe', 'LANG:IT', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', '-SEM:directional', 'COMP:R'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'SEM:internal', 'COMP:D', 'COMP:P', '-COMP:T/fin', '-COMP:v', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PF:haluaa', '-SPEC:*', 'PHI:NUM:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LANG:FI', 'CLASS:TR', 'SPEC:ADV', 'COMP:A/inf', '-SPEC:T/fin', '-COMP:P', 'LF:want', '-SPEC:FORCE', '!COMP:*', 'PHI:PER:_', 'ASP:BOUNDED'}
hairitsee       ['LANG:FI']
hairitse-       {'COMP:P', '-COMP:T/fin', '-COMP:v', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'V', 'SPEC:P', 'LF:disturb', '-COMP:FIN', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LANG:FI', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:hairitsee', 'SPEC:D', '!COMP:D'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'SEM:internal', 'COMP:P', '-COMP:T/fin', '-COMP:v', 'COMP:T', '-COMP:V', '-VAL', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_', 'SPEC:*', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', '-ASP', 'LANG:IT', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', 'PHI:PER:_', 'PF:ha', 'LF:have'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'COMP:P', '-COMP:T/fin', '-COMP:v', 'CLASS:INTR', 'PF:havia', '-COMP:V', 'LF:disappear', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:D', 'LANG:FI', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:MA/inf', 'SPEC:D', 'PHI:PER:_'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'COMP:P', 'COMP:D', '-COMP:T/fin', '-COMP:v', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PF:ihaile-', 'V', 'SPEC:P', '-COMP:N', '-COMP:FIN', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:admire', 'LANG:FI', 'CLASS:TR', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:P', '-SPEC:FORCE', '!COMP:*', '!COMP:D'}
il              {'-COMP:T/fin', '-ARG', 'adjoinable', '!PROBE:N', '-SPEC:C', 'LANG:IT', '-COMP:uR', '-COMP:D', 'PF:il', '-SPEC:P', '-SPEC:MA/lla', '-SPEC:Neg/fin', '-SPEC:V', 'COMP:N', 'OP', '-SPEC:T/fin', '-SPEC:INF', 'LF:the', '!COMP:*', 'D'}
i               {'-COMP:T/fin', '-ARG', 'adjoinable', '!PROBE:N', '-SPEC:C', 'LANG:IT', '-COMP:uR', '-COMP:D', 'PF:il', '-SPEC:P', '-SPEC:MA/lla', '-SPEC:Neg/fin', '-SPEC:V', 'COMP:N', 'OP', '-SPEC:T/fin', '-SPEC:INF', 'LF:the', '!COMP:*', 'D'}
in              {'COMP:D', '-COMP:T/fin', '-SPEC:iR', 'adjoinable', '-VAL', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_', '-COMP:ADV', 'PHI:DET:_', '-COMP:N', '-SPEC:C', '-COMP:uWH', '-SPEC:v', '-SPEC:ADV', 'LANG:IT', '-SPEC:P', 'LF:in', '-SPEC:C/fin', 'PF:in', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:T/fin', '-SPEC:iWH', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', '!COMP:*', 'PHI:PER:_', 'P'}
infermieri      {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'PF:infermieri', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', 'LF:nurses', '-SPEC:ADV', 'LANG:IT', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
is              ['LANG:EN']
be-             {'COMP:P', '-COMP:T/fin', '-COMP:TO/inf', '-COMP:v', '-ARG', 'LF:be', '-COMP:V', '-VAL', 'ASP', 'V', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'SPEC:D', 'SPEC:ADV', 'PF:be', '-SPEC:T/fin', 'COPULA', '-SPEC:FORCE', '!COMP:*', 'LANG:EN'}
istuuko         ['LANG:FI']
istuu-          {'COMP:P', '-COMP:T/fin', '-COMP:v', 'CLASS:INTR', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'V', 'PF:istuu', '-COMP:N', 'SPEC:P', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:sit', '-COMP:D', 'LANG:FI', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:MA/inf', 'SPEC:D', 'PHI:PER:_'}
John            ['LANG:EN']
John-           {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-adjoinable', '-SPEC:ADV', 'COMP:R', 'PF:John', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', 'LF:John', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', '-SEM:directional', 'LANG:EN'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'COMP:P', '-SPEC:uWH', '-COMP:v', '-COMP:*', 'PF:joka', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R', 'LF:who'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', 'LF:Jukka', 'PF:Jukka', '-SPEC:N', '-SEM:directional', '-SPEC:FORCE', 'COMP:R'}
juosten         ['LANG:FI']
juokse-         {'COMP:P', '-COMP:T/fin', '-COMP:v', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:run', 'LANG:FI', 'PF:juokse-', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:PER:_'}
istuu           ['LANG:FI']
istu-           {'COMP:P', '-COMP:T/fin', '-COMP:v', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'V', 'PF:istuu', '-COMP:N', 'SPEC:P', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:sit', 'LANG:FI', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:PER:_'}
kaksi           {'LANG:FI', 'COMP:n', 'PF:kaksi', 'NUM', '-VAL', 'COMP:N', 'ARG', 'LF:two', 'PHI:NUM:SG', 'PHI:NUM:_', 'TAIL:ARG,VAL,FIN', 'SPEC:*', 'PHI:DET:_', 'PHI:PER:_'}
kaksi           {'COMP:n', 'PF:kaksi', 'TAIL:*POL:NEG', 'NUM', 'COMP:N', 'LF:two', 'TAIL:ARG,ASP:BOUNDED', 'SPEC:*', 'LANG:EN'}
kaksi_1         {'LANG:FI', 'COMP:n', 'PF:kaksi', 'NUM', '-VAL', 'COMP:N', 'ARG', 'LF:two', 'PHI:NUM:SG', 'PHI:NUM:_', 'TAIL:ARG,VAL,FIN', 'SPEC:*', 'PHI:DET:_', 'PHI:PER:_'}
kaksi_2         {'COMP:n', 'PF:kaksi', 'TAIL:*POL:NEG', 'NUM', 'COMP:N', 'LF:two', 'TAIL:ARG,ASP:BOUNDED', 'SPEC:*', 'LANG:EN'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'LF:two', 'LANG:FI', 'COMP:N', 'COMP:n', 'SPEC:*', 'PF:kaksi', 'NUM'}
kaupunkia       ['LANG:EN']
kaupunki        {'-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'COMP:C', 'LF:city', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'PF:kaupunki', '-COMP:P', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'COMP:P', '-COMP:T/fin', '-COMP:v', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LANG:FI', 'SEM:external', 'SPEC:ADV', '-SPEC:T/fin', 'PF:kaske', '!COMP:A/inf', '-SPEC:FORCE', 'PHI:PER:_', 'LF:order'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', 'LF:watch', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', 'PF:kello', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
kello0-         {'LANG:FI', 'PF:kello', '2SPEC', 'SPEC:D', '0', 'LF:watch'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', 'PF:key', '-COMP:V', 'LF:key', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'COMP:R', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'LANG:EN'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'PF:kirja', 'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', '-COMP:AUX', 'LF:book', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', '-SEM:directional', 'COMP:R'}
kohti           {'COMP:D', '-COMP:T/fin', '-SPEC:iR', 'adjoinable', '-VAL', 'ARG', 'PHI:NUM:_', '-COMP:ADV', 'SPEC:*', 'PHI:DET:_', '-COMP:N', '-SPEC:C', '-COMP:uWH', '-SPEC:v', '-SPEC:ADV', 'LANG:FI', 'PF:kohti', '-SPEC:P', 'TAIL:V', '-SPEC:C/fin', '-SPEC:Neg/fin', '-SPEC:V', 'LF:towards', '-SPEC:T/fin', '-SPEC:iWH', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', '!COMP:*', 'PHI:PER:_', 'P'}
koko            {'-COMP:T/fin', '-ARG', 'adjoinable', '!PROBE:N', '-SPEC:C', '-COMP:uR', '-COMP:D', 'LANG:FI', '-SPEC:P', '-SPEC:MA/lla', 'PF:koko', 'LF:all', '-SPEC:Neg/fin', '-SPEC:V', 'COMP:N', 'OP', '-SPEC:T/fin', '-SPEC:INF', 'TAIL:T', '!COMP:*', 'D'}
kuka            ['LANG:FI']
kuka-           {'COMP:P', '-SPEC:uWH', '-COMP:v', 'PHI', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'PF:kuka', 'LANG:FI', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R', 'LF:who'}
kuorsaa-        {'COMP:P', '-COMP:T/fin', '-COMP:v', 'LF:snore', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', '-COMP:WH', 'PHI:DET:_', '-COMP:D', 'LANG:FI', 'SPEC:ADV', 'PF:kuorsaa', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:PER:_'}
kuorsaamalla    ['LANG:FI']
lahella         {'COMP:D', '-COMP:T/fin', '-SPEC:iR', 'adjoinable', 'ARG', 'PHI:NUM:_', '-COMP:ADV', 'PHI:DET:_', '-COMP:C/fin', 'INF', '-COMP:uWH', '-SPEC:v', '-COMP:FORCE', 'VAL', '!SPEC:D', '-SPEC:V', '-SPEC:T/fin', 'P', 'SPEC:*', '-COMP:N', 'LF:near', '-SPEC:C', '-SPEC:ADV', 'COMP:V', 'PF:lahella', 'LANG:FI', '-SPEC:P', '-SPEC:C/fin', '-SPEC:Neg/fin', '-SPEC:iWH', '-SPEC:INF', '-SPEC:N', 'COMP:v', '-SPEC:FORCE', '!COMP:*', '!SPEC:*', 'PHI:PER:_'}
lahella         {'COMP:D', '-COMP:T/fin', '-SPEC:iR', 'PHI:PER:_', 'adjoinable', '-VAL', 'ARG', 'PHI:NUM:_', '-COMP:ADV', 'SPEC:*', 'PHI:DET:_', '-COMP:N', 'LF:near', '-SPEC:C', '-COMP:uWH', '-SPEC:v', '-SPEC:ADV', 'PF:lahella', 'LANG:FI', '-SPEC:P', '-SPEC:C/fin', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:T/fin', '-SPEC:iWH', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', '!COMP:*', '!COMP:D', 'P'}
lahella_1       {'COMP:D', '-COMP:T/fin', '-SPEC:iR', 'PHI:PER:_', 'adjoinable', '-VAL', 'ARG', 'PHI:NUM:_', '-COMP:ADV', 'SPEC:*', 'PHI:DET:_', '-COMP:N', 'LF:near', '-SPEC:C', '-COMP:uWH', '-SPEC:v', '-SPEC:ADV', 'PF:lahella', 'LANG:FI', '-SPEC:P', '-SPEC:C/fin', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:T/fin', '-SPEC:iWH', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', '!COMP:*', '!COMP:D', 'P'}
lahella_2       {'COMP:D', '-COMP:T/fin', '-SPEC:iR', 'adjoinable', 'ARG', 'PHI:NUM:_', '-COMP:ADV', 'PHI:DET:_', '-COMP:C/fin', 'INF', '-COMP:uWH', '-SPEC:v', '-COMP:FORCE', 'VAL', '!SPEC:D', '-SPEC:V', '-SPEC:T/fin', 'P', 'SPEC:*', '-COMP:N', 'LF:near', '-SPEC:C', '-SPEC:ADV', 'COMP:V', 'PF:lahella', 'LANG:FI', '-SPEC:P', '-SPEC:C/fin', '-SPEC:Neg/fin', '-SPEC:iWH', '-SPEC:INF', '-SPEC:N', 'COMP:v', '-SPEC:FORCE', '!COMP:*', '!SPEC:*', 'PHI:PER:_'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'COMP:P', '-COMP:T/fin', '-COMP:v', 'CLASS:INTR', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'COMP:PP', 'PF:lahtea', '-COMP:D', 'LANG:FI', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:MA/inf', 'SPEC:D', 'PHI:PER:_', 'LF:leave'}
lavano          ['LANG:IT']
lava-           {'COMP:D', 'COMP:P', '-COMP:T/fin', '-COMP:v', '-COMP:V', '-VAL', 'ASP', 'PF:lava', 'ARG', 'PHI:NUM:_', 'PHI:GEN:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LANG:IT', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', '!COMP:*', 'LF:wash', 'PHI:PER:_'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-COMP:T/fin', '-ARG', 'adjoinable', '!PROBE:N', 'LF:D', '-SPEC:C', 'LANG:IT', '-COMP:uR', '-COMP:D', '-SPEC:P', '-SPEC:MA/lla', 'PF:le', '-SPEC:Neg/fin', '-SPEC:V', 'COMP:N', 'OP', '-SPEC:T/fin', '-SPEC:INF', '!COMP:*', 'D'}
leaves          ['LANG:EN']
leave           {'COMP:P', '-COMP:T/fin', 'PF:leave', '-COMP:v', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:GEN:_', 'V', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'PHI:DET:_', '!SPEC:D', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'LANG:EN', 'LF:leave'}
leave-          {'COMP:P', '-COMP:T/fin', 'PF:leave', '-COMP:v', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:GEN:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', '!SPEC:D', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'LANG:EN', 'LF:leave'}
like-           {'COMP:P', '-COMP:T/fin', '-COMP:v', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:GEN:_', 'V', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'LANG:EN', 'LF:like', 'PHI:DET:_', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', '!COMP:D', 'PF:like'}
likes           ['LANG:EN']
like            {'COMP:P', '-COMP:T/fin', '-COMP:v', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:GEN:_', 'V', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'LANG:EN', 'LF:like', 'PHI:DET:_', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', '!COMP:D', 'PF:like'}
little          ['LANG:EN']
little-         {'LF:little', '2SPEC', 'SPEC:D', '0', 'LANG:EN', 'PF:little-'}
lle             {'COMP:D', '-COMP:T/fin', '-SPEC:iR', 'adjoinable', '-VAL', 'ARG', 'PHI:NUM:_', '-SPEC:*', '-COMP:ADV', 'PHI:DET:_', '-COMP:N', '+SEM:directional', '-SPEC:C', '-COMP:uWH', '-SPEC:v', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', '-SPEC:C/fin', '-SPEC:Neg/fin', '-SPEC:V', 'PF:P(lle)', 'LF:for', 'TAIL:V,+SEM:directional', '-SPEC:T/fin', '-SPEC:iWH', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', '!COMP:*', 'PHI:PER:_', 'P'}
lla             {'COMP:D', '-COMP:T/fin', '-SPEC:iR', 'adjoinable', '-VAL', 'ARG', 'PHI:NUM:_', '-COMP:ADV', 'SPEC:*', 'PHI:DET:_', '-COMP:N', '-SPEC:C', '-COMP:uWH', '-SPEC:v', '-SPEC:ADV', 'LF:by', 'TAIL:*V', 'LANG:FI', '-SPEC:P', '-SPEC:C/fin', 'PF:P(lla)', '-SPEC:V', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:iWH', '-SPEC:INF', '-SPEC:N', 'TAIL:T', '-SPEC:FORCE', '!COMP:*', 'PHI:PER:_', 'P'}
Luisa           ['LANG:IT']
Luisa-          {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:IT', '-SPEC:P', '-COMP:AUX', 'PF:Luisa', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', '-SEM:directional', 'LF:Luisa', 'COMP:R'}
lukemalla       ['LANG:FI']
luke-           {'COMP:P', 'COMP:D', '-COMP:T/fin', '-COMP:v', 'PF:luke', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LANG:FI', 'CLASS:TR', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:P', 'LF:read', '-SPEC:FORCE', '!COMP:*', 'PHI:PER:_'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'COMP:P', 'COMP:D', '-COMP:T/fin', '-COMP:v', 'PHI:PER:_', '-COMP:V', 'LF:find', '-VAL', 'PF:loyta-', 'ASP', 'ARG', 'PHI:NUM:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LANG:FI', 'CLASS:TR', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:P', '-SPEC:FORCE', '!COMP:*', '!COMP:D', 'ASP:BOUNDED'}
Mary            ['LANG:EN']
Mary-           {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-adjoinable', '-SPEC:ADV', 'COMP:R', '-SPEC:P', 'PF:Mary', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', '-SEM:directional', 'LANG:EN', 'LF:Mary'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', 'LF:Merja', '-adjoinable', '-SPEC:ADV', 'COMP:R', 'LANG:FI', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', '-SEM:directional', 'PF:Merja'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'LANG:FI', 'ADV', '-SPEC:Neg/fin', 'adjoinable', '-SPEC:T/fin', '-SPEC:N', 'COMP:v', 'TAIL:T', 'SPEC:*', '-SPEC:FORCE', 'MA/inf', 'PF:malla', 'LF:by'}
meren           ['LANG:FI']
mere-           {'COMP:P', '-SPEC:uWH', 'PF:meri', '-COMP:v', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', 'LF:ocean', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
mies            {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'PF:mies', 'COMP:R', 'LF:man'}
mistake         {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'COMP:R', '-SPEC:P', '-COMP:AUX', 'PF:mistake', 'LF:mistake', '-SPEC:C/fin', '-SPEC:V', 'COMP:R/D', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'LANG:EN'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'COMP:C', 'PF:mika-', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', 'LF:what', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'COMP:D', 'COMP:P', '-COMP:T/fin', '-COMP:v', '-COMP:V', 'PF:move', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:GEN:_', 'V', 'SPEC:P', '-COMP:N', '+SEM:directional', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:move', 'CLASS:TR', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:P', 'LANGN:EN', '-SPEC:FORCE', '!COMP:*', 'PHI:PER:_'}
mukavasti       ['LANG:EN']
mukava-         {'LANG:FI', 'PF:mukavasti', '2SPEC', 'SPEC:D', '0', 'LF:comfortably'}
must            {'MODAL', 'COMP:Neg', '-COMP:T/fin', 'FIN', '-SPEC:Neg', '!COMP:*', 'PF:must', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_', 'SPEC:*', 'PHI:DET:_', 'SPEC:TO/inf', '-SPEC:C', '-SPEC:v', 'COMP:V', '-SPEC:TO/inf', 'SPEC:D', 'T/fin', 'VAL', '!PROBE:V', '!SPEC:D', '-COMP:INF', '-SPEC:C/fin', 'COMP:T/prt', '-SPEC:V', '-SPEC:T/fin', 'LF:must', '-SPEC:N', 'COMP:v', '-SPEC:FORCE', 'T', 'LANG:EN'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'COMP:D', 'COMP:P', '-COMP:T/fin', '-COMP:v', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'PF:myy', 'LANG:FI', 'CLASS:TR', 'SPEC:ADV', 'LF:sell', '-SPEC:T/fin', '-COMP:P', '-SPEC:FORCE', '!COMP:*', 'PHI:PER:_', 'ASP:BOUNDED'}
naki            ['LANG:FI']
nake-           {'COMP:P', 'LF:see', 'COMP:D', '-COMP:T/fin', '-COMP:v', 'PF:nake', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LANG:FI', 'CLASS:TR', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:P', '-COMP:MA/inf', '-SPEC:FORCE', '!COMP:*', '-COMP:ESSA/inf', 'ASP:BOUNDED'}
nayttaa         ['LANG:FI']
naytta-         {'SEM:internal', 'LF:seem', 'COMP:P', '-COMP:T/fin', '-COMP:v', 'PF:naytta', '-ARG', '-COMP:V', 'ASP', '!COMP:VA/inf', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'LANG:FI', 'VAL', '!SPEC:D', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE'}
ndo             {'-COMP:T/fin', 'VAL', '-SPEC:V', '-COMP:FORCE', 'PF:PRG', '-SPEC:T/fin', '-COMP:C/fin', 'COMP:v', 'COMP:V', '!COMP:*', '?ARG', 'LANG:EN', 'PRG', 'INF', 'LF:ing'}
ne              {'-COMP:T/fin', '-ARG', 'adjoinable', '!PROBE:N', 'PHI:NUM:PL', '-SPEC:C', '-COMP:uR', '-COMP:D', 'LANG:FI', '-SPEC:P', '-SPEC:MA/lla', '-SPEC:Neg/fin', 'LF:those', '-SPEC:V', 'COMP:N', 'OP', '-SPEC:T/fin', 'PF:ne', '-SPEC:INF', '!COMP:*', 'D', 'PHI:PER:3'}
niiden          ['LANG:EN']
nen             {'-SPEC:A', 'LANG:FI', 'A', 'COMP:0', 'adjoinable', '-SPEC:D', 'TAIL:D', 'PF:a', 'SPEC:*', 'LF:ing'}
not             {'-COMP:C', '-COMP:D', 'POL:NEG', 'PHI:PER:_', 'PHI:GEN:_', 'LF:not', 'Neg', 'ARG', '-VAL', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:not', 'PHI:DET:_', 'SPEC:*', '!COMP:*', '-COMP:FIN', 'LANG:EN'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'COMP:P', '-COMP:T/fin', '-COMP:v', 'CLASS:INTR', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PF:nukku', 'PHI:DET:_', '-COMP:Neg/fin', '-COMP:D', 'LANG:FI', 'SPEC:ADV', 'LF:sleep', '-SPEC:T/fin', '-COMP:MA/inf', '-SPEC:FORCE', 'SPEC:D', '-COMP:T', 'PHI:PER:_'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'COMP:R', 'PF:omaisuuden', 'LANG:FI', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'LF:possessions'}
operatoria      ['LANG:IT']
operatoria-     {'LANG:IT', '2SPEC', 'SPEC:D', '0', 'LF:operation', 'PF:operatoria'}
ostaa           ['LANG:FI']
osta-           {'COMP:P', 'COMP:D', '-COMP:T/fin', '-COMP:v', '-COMP:V', '-VAL', 'LF:buy', 'PF:osta', 'ASP', 'ARG', 'PHI:NUM:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LANG:FI', 'CLASS:TR', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:P', '-SPEC:FORCE', '!COMP:*', 'PHI:PER:_', 'ASP:BOUNDED'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'COMP:P', 'PF:paiva', '-SPEC:uWH', '-COMP:v', 'SEM:nonreferential', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', 'LF:day', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
Pariisia        ['LANG:FI']
Pariisi-        {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'COMP:C', 'LF:Paris', 'PF:Pariisi', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'COMP:P', '-SPEC:uWH', '-COMP:v', 'PF:Pekka', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', '-SEM:directional', 'LF:Pekka', 'COMP:R'}
pelottaa        ['LANG:FI']
pelkaa-         {'COMP:P', 'COMP:D', '-COMP:T/fin', '-COMP:v', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PF:pelkaa', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:fear', 'LANG:FI', 'CLASS:TR', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:P', '-SPEC:FORCE', '!COMP:*', 'PHI:PER:_'}
persuades       ['LANG:EN']
persuade-       {'COMP:P', '-COMP:T/fin', '-COMP:v', 'COMP:TO/inf', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:GEN:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'SEM:external', 'SPEC:ADV', 'LF:persuade', '-SPEC:T/fin', '-SPEC:FORCE', '!COMP:*', 'LANG:EN', 'PF:persuade'}
peruuntui       ['LANG:FI']
peruuntu-       {'COMP:P', '-COMP:T/fin', '-COMP:v', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PF:peruuntui', 'LF:cancelled', 'V', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'PHI:DET:_', 'LANG:FI', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', 'PHI:PER:_'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'COMP:P', 'COMP:D', '-COMP:T/fin', '-COMP:v', 'PF:pese', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LANG:FI', 'CLASS:TR', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:P', '-SPEC:FORCE', '!COMP:*', 'LF:wash', 'PHI:PER:_', 'ASP:BOUNDED'}
pese-           {'COMP:P', 'COMP:D', '-COMP:T/fin', '-COMP:v', 'PF:pese', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LANG:FI', 'CLASS:TR', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:P', '-SPEC:FORCE', '!COMP:*', 'LF:wash', 'PHI:PER:_'}
petardi         {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', 'PF:petardi', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:IT', 'LF:firecrackers', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
pieni           ['LANG:FI']
pieni-          {'LANG:FI', 'LF:small', '2SPEC', 'SPEC:D', '0', 'PF:pieni-'}
poikien         ['LANG:FI']
poika-          {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', 'PF:poika', '-COMP:WH', '-COMP:N', '-COMP:A', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'LF:boy', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
puhelinta       ['LANG:FI']
puhelin-        {'LANG:FI', '2SPEC', 'PF:puhelin', 'SPEC:D', 'LF:phone', '0'}
punainen        ['LANG:FI']
puna-           {'LF:red', 'LANG:FI', '2SPEC', 'SPEC:D', 'PF:puna-', '0'}
presupposto     {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'COMP:C', 'LF:presupposition', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:IT', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R', 'PF:presupposto'}
primary         {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:IT', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', 'LF:nurse', '-SPEC:T/fin', 'SPEC:A', 'PF:primary', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
promises        ['LANG:EN']
promise-        {'COMP:D', 'SEM:internal', 'COMP:P', '-COMP:T/fin', '-COMP:v', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:GEN:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:promise', 'SPEC:ADV', '-SPEC:T/fin', 'PF:promise', '-SPEC:FORCE', 'SPEC:D', 'LANG:EN'}
pyytaa          ['LANG:FI']
pyyta-          {'COMP:P', '-COMP:T/fin', '-COMP:v', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PF:pyyda', 'V', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'PHI:DET:_', 'LF:ask', 'LANG:FI', 'SEM:external', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:PER:_'}
raukesi         ['LANG:FI']
raukea-         {'COMP:P', '-COMP:T/fin', '-COMP:v', 'LF:terminate', '-COMP:V', 'PF:raukea', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LANG:FI', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:PER:_'}
red             ['LANG:EN']
red-            {'LF:red', '2SPEC', '0', 'SPEC:D', 'PF:red', 'LANG:EN'}
saavuttaa       ['LANG:FI']
saavutta-       {'COMP:P', 'COMP:D', '-COMP:T/fin', 'LF:reach', '-COMP:v', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PF:saavutta-', 'PHI:DET:_', 'LANG:FI', 'CLASS:TR', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:P', '-SPEC:FORCE', '!COMP:*', '!COMP:D', 'ASP:BOUNDED'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'COMP:P', '-COMP:T/fin', '-COMP:v', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:say', 'LANG:FI', 'SPEC:ADV', 'COMP:VA/inf', '-SPEC:T/fin', 'COMP:FORCE', 'PF:sano-', 'SPEC:D', '-SPEC:FORCE', 'PHI:PER:_'}
said            ['LANG:EN']
say'            {'COMP:P', '-COMP:T/fin', '-COMP:v', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:GEN:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:say', 'PF:say', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', '!COMP:FORCE', 'LANG:EN'}
say-            {'COMP:P', '-COMP:T/fin', '-COMP:v', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:GEN:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:say', 'PF:say', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', '!COMP:FORCE', 'LANG:EN'}
sala            ['LANG:IT']
sala-           {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', 'LF:room', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:IT', '-SPEC:P', '-COMP:AUX', 'PF:sala', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
scoppiati       ['LANG:IT']
scoppia-        {'LF:explode', 'COMP:P', '-COMP:T/fin', '-COMP:v', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:GEN:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LANG:IT', 'SPEC:ADV', 'PF:scoppia', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:PER:_'}
sen             {'-COMP:T/fin', 'LF:the/that', '-ARG', 'TAIL:*POL:NEG', 'adjoinable', '!PROBE:N', 'TAIL:PHI', 'PF:sen', '-SPEC:C', '-COMP:uR', '-COMP:D', 'LANG:FI', '-SPEC:P', 'TAIL:ASP', '-SPEC:MA/lla', '-SPEC:Neg/fin', '-SPEC:V', 'COMP:N', 'OP', '-SPEC:T/fin', '-SPEC:INF', '!COMP:*', 'D'}
se'             {'-COMP:T/fin', 'LF:the/that', '-ARG', 'adjoinable', '!PROBE:N', '-SPEC:C', '-COMP:uR', '-COMP:D', 'LANG:FI', 'PF:se', '-SPEC:P', '-SPEC:MA/lla', '-SPEC:Neg/fin', '-SPEC:V', 'COMP:N', 'OP', '-SPEC:T/fin', '-SPEC:INF', '!COMP:*', 'D'}
se              {'-COMP:T/fin', 'LF:the/that', '-ARG', 'adjoinable', '!PROBE:N', '-SPEC:C', '-COMP:uR', '-COMP:D', 'LANG:FI', 'PF:se', '-SPEC:P', '-SPEC:MA/lla', '-SPEC:Neg/fin', '-SPEC:V', 'COMP:N', 'OP', '-SPEC:T/fin', '-SPEC:INF', '!COMP:*', 'D'}
se              ['LANG:FI']
sentenza        {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'PF:sentenza', 'LANG:IT', 'LF:sentence', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
Seine           ['LANG:EN']
Seine-          {'PF:Seine', 'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', 'LF:Seine', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'COMP:R', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'LANG:EN'}
sembrano        ['LANG:IT']
sembra-         {'COMP:P', 'LF:seem', '-COMP:T/fin', '-COMP:v', '-ARG', '-COMP:V', '-VAL', '!COMP:ARE/inf', 'V', 'SPEC:P', '-COMP:N', 'LANG:EN', 'SPEC:TO/inf', '-ASP', '-COMP:D', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', 'PF:sembra'}
sleeps          ['LANG:EN']
sleep           {'COMP:P', '-COMP:T/fin', '-COMP:v', 'CLASS:INTR', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:GEN:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:D', 'SPEC:ADV', 'LF:sleep', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:MA/inf', 'SPEC:D', 'PF:sleep', 'LANG:EN'}
sleep-          {'COMP:P', '-COMP:T/fin', '-COMP:v', 'CLASS:INTR', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:GEN:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:D', 'SPEC:ADV', 'LF:sleep', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:MA/inf', 'SPEC:D', 'PF:sleep', 'LANG:EN'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'LF:agreement', 'COMP:C', 'PF:sopimus', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '!COMP:A/inf', '-SPEC:FORCE', 'COMP:R'}
spinge          ['LANG:IT']
spinge-         {'-COMP:T/fin', '-COMP:v', 'PF:spinge', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'LF:push', 'PHI:GEN:_', 'V', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'PHI:DET:_', 'LANG:IT', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:P', '-SPEC:FORCE', '!COMP:D'}
ssa             {'COMP:D', '-COMP:T/fin', 'COMP:n/MA', '-SPEC:iR', 'adjoinable', '-VAL', 'ARG', 'PHI:NUM:_', '-COMP:ADV', 'SPEC:*', 'PHI:DET:_', '-COMP:N', '-SPEC:C', 'PF:ssa', '-COMP:uWH', '-SPEC:v', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', 'LF:in', 'TAIL:V', '-SPEC:C/fin', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:T/fin', '-SPEC:iWH', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', '!COMP:*', 'PHI:PER:_', 'P'}
stanno          ['LANG:IT']
sta-            {'SEM:internal', 'COMP:P', '-COMP:T/fin', '-COMP:v', 'PHI:PER:_', '-COMP:V', '-VAL', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_', 'COMP:PRG', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', '-ASP', 'LF:stay', 'PF:sta', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', 'LANG:EN'}
sti             {'LANG:FI', 'ADV', '-ARG', '-SPEC:Neg/fin', 'adjoinable', '-SPEC:T/fin', '-SPEC:N', 'TAIL:T', 'SPEC:*', '!COMP:*', '-SPEC:FORCE', 'PF:sti', 'LF:by'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', 'LF:socks', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R', 'PF:sukka-'}
talo            {'COMP:P', '-SPEC:uWH', '-COMP:v', 'LF:house', 'N', '-COMP:V', 'PF:talo', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
tama            ['LANG:EN']
tama-           {'COMP:P', '-SPEC:uWH', '-COMP:v', 'PF:tama', 'N', 'PHI', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', 'LF:this', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'COMP:P', 'MODAL', '-COMP:T/fin', '-COMP:v', 'PF:taytyy', 'FIN', '-COMP:V', '-VAL', 'ARG', 'PHI:NUM:_', 'V', 'SPEC:*', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', '-ASP', 'LANG:FI', 'SPEC:ADV', '-SPEC:T/fin', 'LF:must', '!COMP:A/inf', '-SPEC:FORCE', 'PHI:PER:_'}
teki            ['LANG:FI']
teke-           {'COMP:P', 'COMP:D', '-COMP:T/fin', '-COMP:v', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', '-COMP:A/inf', 'ARG', 'PHI:NUM:_', 'LF:make', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LANG:FI', 'CLASS:TR', 'PF:teke', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:P', '-SPEC:FORCE', '!COMP:*', '!COMP:D', 'ASP:BOUNDED'}
that            {'FIN', '-ARG', 'LF:that', '-VAL', '!PROBE:T/fin', 'PF:that', '-SPEC:*', 'FORCE', '!COMP:*', 'COMP:T/fin', 'LANG:EN', 'COMP:C/fin'}
the             {'-COMP:T/fin', '-ARG', 'adjoinable', '!PROBE:N', 'LANG:EN', '-SPEC:C', 'PF:the', '-COMP:uR', '-COMP:D', '-SPEC:P', '-SPEC:MA/lla', 'PHI:DEF:DEF', '-SPEC:Neg/fin', '-SPEC:V', 'COMP:N', 'OP', '-SPEC:T/fin', '-SPEC:INF', 'LF:the', '!COMP:*', 'D'}
to              {'COMP:D', '-COMP:T/fin', 'LF:to', '-SPEC:iR', 'PHI:PER:_', 'adjoinable', '-VAL', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_', '-SPEC:*', '-COMP:ADV', 'PHI:DET:_', '-COMP:N', '+SEM:directional', '-SPEC:C', '-COMP:uWH', 'PF:to', '-SPEC:v', '-SPEC:ADV', '-SPEC:P', '-SPEC:C/fin', '-SPEC:Neg/fin', '-SPEC:V', 'TAIL:V,+SEM:directional', '-SPEC:T/fin', '-SPEC:iWH', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', '-float', '!COMP:*', 'LANG:EN', 'P'}
to_inf          {'-COMP:T/fin', 'adjoinable', '-VAL', '-COMP:C/fin', '-SPEC:v', 'INF', '-COMP:FORCE', 'COMP:V', 'LF:TO/inf', '-SPEC:V', '-SPEC:T/fin', 'TO/inf', 'COMP:v', '!COMP:*', '?ARG', 'LANG:EN', 'PF:TO/inf'}
towards         {'COMP:D', '-COMP:T/fin', '-SPEC:iR', '!COMP:*', 'adjoinable', '-VAL', 'PHI:PER:_', 'ARG', 'PHI:NUM:_', '-COMP:ADV', '-SPEC:*', 'PHI:GEN:_', 'PHI:DET:_', '-COMP:N', '-SPEC:C', '-COMP:uWH', '-SPEC:v', '-SPEC:ADV', '-SPEC:P', 'TAIL:V', '-SPEC:C/fin', '-SPEC:Neg/fin', '-SPEC:V', 'LF:towards', '-SPEC:T/fin', '-SPEC:iWH', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'PF:towards', '-float', 'LANG:EN', 'P'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'COMP:P', 'COMP:D', '-COMP:T/fin', '-COMP:v', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'LANG:FI', 'CLASS:TR', 'SPEC:ADV', 'PF:tonaise', '-SPEC:T/fin', '-COMP:P', '-SPEC:FORCE', '!COMP:*', 'LF:nudge', 'PHI:PER:_'}
tta             {'COMP:D', '-COMP:T/fin', 'ADV', 'LF:without', 'COMP:n/MA', '-SPEC:iR', 'adjoinable', '-VAL', 'ARG', 'PHI:NUM:_', '-COMP:ADV', 'SPEC:*', 'PHI:DET:_', '-COMP:N', '-SPEC:C', '-COMP:uWH', '-SPEC:v', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', '-SPEC:C/fin', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:T/fin', '-SPEC:iWH', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'PF:tta', '!COMP:*', 'PHI:PER:_', 'P'}
tries           ['LANG:EN']
try-            {'SEM:internal', 'COMP:P', '-COMP:T/fin', '-COMP:v', '!COMP:-ARG', '!COMP:TO/inf', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:GEN:_', 'LF:try', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:ADV', 'PF:try', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', 'LANG:EN'}
verifiche       {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:IT', 'PF:verifiche', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', 'LF:verification', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'COMP:P', '-COMP:T/fin', '-COMP:v', 'LF:flow', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'V', 'SPEC:P', 'PF:virtaa', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', '!COMP:P', '-COMP:D', 'LANG:FI', 'SPEC:ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:D', 'PHI:PER:_'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'SEM:internal', 'COMP:P', '-COMP:T/fin', '-COMP:v', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', '-SPEC:*', 'PHI:GEN:_', 'V', 'PF:volu', '-COMP:N', 'SPEC:P', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:ADV', '-SPEC:T/fin', 'LF:want', '-SPEC:FORCE', '!COMP:*', 'LANG:EN'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'COMP:P', 'COMP:D', 'PF:voitta', '-COMP:T/fin', '-COMP:v', 'PHI:PER:_', 'LF:win', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:GEN:_', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'SEM:achievement', 'CLASS:TR', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:P', '-SPEC:FORCE', '!COMP:*', 'LANG:EN', 'ASP:BOUNDED'}
wants           ['LANG:EN']
want-           {'COMP:P', 'PF:want', 'COMP:D', '-COMP:T/fin', '-COMP:v', 'COMP:TO/inf', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:GEN:_', 'V', 'SPEC:P', '-COMP:N', 'PHI:DET:_', '-SPEC:TO/inf', 'CLASS:TR', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:P', 'LF:want', '-SPEC:FORCE', '!COMP:*', 'LANG:EN'}
what            ['LANG:EN']
what-           {'COMP:P', '-SPEC:uWH', 'PF:what', '-COMP:v', '-COMP:*', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'COMP:R', '-SPEC:P', 'LF:what', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'LANG:EN'}
which           {'-COMP:T/fin', 'OP:WH', '-ARG', 'adjoinable', '!PROBE:N', 'LANG:EN', '-SPEC:C', 'PF:which', '-COMP:uR', '-COMP:D', '-SPEC:P', 'LF:which', '-SPEC:MA/lla', '-SPEC:Neg/fin', '-SPEC:V', 'COMP:N', 'OP', '-SPEC:T/fin', '-SPEC:INF', '!COMP:*', 'D'}
who             ['LANG:EN']
who-            {'COMP:P', '-SPEC:uWH', '-COMP:v', '-COMP:*', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', 'PF:who', '-SPEC:ADV', 'COMP:R', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'LANG:EN', 'LF:who'}
whether         {'OP:WH', 'FIN', '-ARG', 'LF:whether', '-VAL', '!PROBE:T/fin', 'OP:Q', '-SPEC:*', 'COMP:T/fin', 'Q', 'OP', 'PF:whether', 'FORCE', '!COMP:*', 'LANG:EN', 'COMP:C/fin'}
yrittaa         ['LANG:FI']
yritta-         {'SEM:internal', 'COMP:P', '-COMP:T/fin', '-COMP:v', '!COMP:-ARG', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:GEN:_', 'LF:try', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:ADV', '-SPEC:T/fin', 'PF:yritta', '!COMP:A/inf', '-SPEC:FORCE', 'SPEC:D', 'LANG:EN'}
mina            ['LANG:EN']
mina-           {'COMP:P', 'LF:I', '-SPEC:uWH', '-COMP:v', '-COMP:*', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'PF:mina', 'LANG:FI', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
sina            ['LANG:EN']
sina-           {'COMP:P', '-SPEC:uWH', '-COMP:v', '-COMP:*', 'N', '-COMP:V', 'COMP:C', 'PF:sina', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', '-COMP:AUX', 'LF:you', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
han             ['LANG:EN']
han-            {'COMP:P', '-SPEC:uWH', '-COMP:v', '-COMP:*', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R', 'PF:han', 'LF:s/he'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'LF:we', 'COMP:P', '-SPEC:uWH', '-COMP:v', '-COMP:*', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', 'PF:me', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
te              ['LANG:EN']
te-             {'COMP:P', '-SPEC:uWH', '-COMP:v', '-COMP:*', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', 'PF:te', 'LF:you', '-COMP:AUX', '-SPEC:C/fin', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'COMP:R/D', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'COMP:P', '-SPEC:uWH', '-COMP:v', 'PF:he', '-COMP:*', 'N', '-COMP:V', 'COMP:C', 'LF:they', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:FI', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
se-             {'-COMP:T/fin', '-ARG', 'adjoinable', '!PROBE:N', 'LF:it/that', '-SPEC:C', '-COMP:uR', '-COMP:D', 'LANG:FI', 'PF:se', '-SPEC:P', '-SPEC:MA/lla', '-SPEC:Neg/fin', '-SPEC:V', 'COMP:N', 'OP', '-SPEC:T/fin', '-SPEC:INF', '!COMP:*', 'D'}
I               ['LANG:EN']
I-              {'COMP:P', 'LF:I', '-SPEC:uWH', '-COMP:v', '-COMP:*', 'N', 'PF:I', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'COMP:R', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'LANG:EN'}
you             ['LANG:EN']
you-            {'COMP:P', '-SPEC:uWH', '-COMP:v', '-COMP:*', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'COMP:R', '-SPEC:P', '-COMP:AUX', 'LF:you', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'PF:you', 'LANG:EN'}
he              ['LANG:EN']
he-             {'COMP:P', '-SPEC:uWH', '-COMP:v', 'PF:he', '-COMP:*', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'COMP:R', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', '-SPEC:R', 'LF:he', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'LANG:EN'}
she             ['LANG:EN']
she-            {'COMP:P', '-SPEC:uWH', '-COMP:v', '-COMP:*', 'N', '-COMP:V', 'COMP:C', 'PF:she', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'COMP:R', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', 'LF:she', '-SPEC:N', '-SPEC:FORCE', 'LANG:EN'}
we              ['LANG:EN']
we-             {'LF:we', 'COMP:P', '-SPEC:uWH', '-COMP:v', '-COMP:*', 'N', '-COMP:V', 'PF:we', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'COMP:R', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'LANG:EN'}
you_pl          ['LANG:EN']
you_pl-         {'COMP:P', '-SPEC:uWH', '-COMP:v', 'N', 'PHI', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'COMP:R', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'PF:you_pl', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'LANG:EN', 'LF:you_pl'}
they            ['LANG:EN']
they-           {'COMP:P', '-SPEC:uWH', '-COMP:v', '-COMP:*', 'N', 'PF:they', '-COMP:V', 'COMP:C', 'LF:they', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'COMP:R', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'LANG:EN'}
it              ['LANG:EN']
it-             {'-COMP:T/fin', 'PF:it', '-ARG', 'adjoinable', '!PROBE:N', 'LF:it/that', '-SPEC:C', '-COMP:uR', '-COMP:D', '-SPEC:P', '-SPEC:MA/lla', 'D', '-SPEC:Neg/fin', '-SPEC:V', 'COMP:N', 'OP', '-SPEC:T/fin', '-SPEC:INF', '!COMP:*', 'LANG:EN'}
io              ['LANG:EN']
io-             {'COMP:P', 'LF:I', '-SPEC:uWH', '-COMP:v', '-COMP:*', 'PF:io', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:IT', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
tu              ['LANG:EN']
tu-             {'COMP:P', '-SPEC:uWH', '-COMP:v', '-COMP:*', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:IT', '-SPEC:P', 'PF:tu', '-COMP:AUX', 'LF:you', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
lui             ['LANG:EN']
lui-            {'COMP:P', '-SPEC:uWH', '-COMP:v', '-COMP:*', 'N', 'PF:lui', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:IT', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', '-SPEC:R', 'LF:he', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
lei             ['LANG:EN']
lei-            {'COMP:P', '-SPEC:uWH', '-COMP:v', '-COMP:*', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', 'PF:lei', '-COMP:WH', '-COMP:N', '-COMP:A', '-SPEC:ADV', 'LANG:IT', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', 'LF:she', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
noi             ['LANG:EN']
noi-            {'LF:we', 'COMP:P', '-SPEC:uWH', '-COMP:v', '-COMP:*', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:IT', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', 'PF:noi', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
voi             ['LANG:EN']
voi-            {'COMP:P', '-SPEC:uWH', '-COMP:v', '-COMP:*', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', 'PF:voi', '-COMP:A', '-SPEC:ADV', 'LANG:IT', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R', 'LF:you_pl'}
loro            ['LANG:EN']
loro-           {'COMP:P', '-SPEC:uWH', '-COMP:v', '-COMP:*', 'N', '-COMP:V', 'COMP:C', 'LF:they', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:IT', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'PF:loro', 'COMP:R'}
mi              ['LANG:EN']
mi-             {'COMP:P', '-SPEC:uWH', 'PF:mi(cl)', '-COMP:v', '-COMP:*', 'N', '-COMP:V', 'COMP:C', 'CL', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:IT', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R', 'LF:me'}
la              ['LANG:EN']
la-             {'PF:la(cl)', 'COMP:P', '-SPEC:uWH', '-COMP:v', '-COMP:*', 'N', '-COMP:V', 'COMP:C', 'CL', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:IT', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', 'LF:her', '-SPEC:FORCE', 'COMP:R'}
lo              ['LANG:EN']
lo-             {'COMP:P', '-SPEC:uWH', '-COMP:v', '-COMP:*', 'N', 'LF:him', '-COMP:V', 'COMP:C', 'CL', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:IT', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', 'PF:lo(cl)', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
si              ['LANG:EN']
si-             {'COMP:P', '-SPEC:uWH', '-COMP:v', '-COMP:*', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', 'PF:si(cl)', '-COMP:A', '-SPEC:ADV', 'LANG:IT', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', 'LF:3sg', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R', 'CAL:CL'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'COMP:P', '-SPEC:uWH', '-COMP:v', '-COMP:*', 'LF:there', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'LANG:IT', '-SPEC:P', 'PF:ci', '-COMP:AUX', '-SPEC:C/fin', 'COMP:R/D', 'PHI_N', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'COMP:R'}
[-n]            {'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI', 'inflectional'}
[-t]            {'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:NUM:SG', 'PHI', 'PHI:PER:2', 'inflectional'}
[-V]            {'PHI:NUM:SG', 'PHI:PER:3', 'LANG:FI', 'PHI', 'inflectional'}
[-mme]          {'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:1', 'PHI', 'inflectional'}
[-mme]          {'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:1', 'inflectional'}
[-tte]          {'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:NUM:PL', 'PHI', 'PHI:PER:2', 'inflectional'}
[-vat]          {'PHI:PER:3', 'LANG:FI', 'PHI:NUM:PL', 'PHI', 'inflectional'}
[-ni]           {'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI', 'inflectional'}
[-si]           {'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:NUM:SG', 'PHI', 'PHI:PER:2', 'inflectional'}
[-nsa]          {'PHI:NUM:SG', 'PHI:PER:3', 'LANG:FI', 'PHI', 'inflectional'}
[-an]           {'PHI:PER:3', 'PHI', 'LANG:FI', 'inflectional'}
[-nne]          {'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:2', 'inflectional'}
[-s]            {'PHI:NUM:SG', 'PHI:PER:3', 'PHI:GEN:F', 'PHI', 'LANG:EN', 'PHI:GEN:M', 'inflectional'}
[-0]            {'PHI:DET:DEF', 'PHI:GEN:N', 'PHI:PER:1', 'PHI', 'inflectional', 'PHI:NUM:SG', 'PHI:NUM:PL', 'LANG:EN', 'PHI:PER:2', 'PHI:PER:3'}
[-o]            {'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI', 'inflectional'}
[-i]            {'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI', 'PHI:PER:2', 'inflectional'}
[-a]            {'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI', 'inflectional'}
[-e]            {'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI', 'inflectional'}
[-iamo]         {'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'PHI', 'inflectional'}
[-te]           {'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI', 'PHI:PER:2', 'inflectional'}
[-no]           {'LANG:IT', 'PHI:DET:DEF', 'PHI:PER:3', 'PHI:NUM:PL', 'PHI', 'inflectional'}
[-nom]          {'NOM', 'LANG:EN', 'adjoinable', 'TAIL:FIN,ARG,VAL', 'inflectional'}
[-par]          {'LANG:FI', 'PAR', 'adjoinable', 'TAIL:ARG,-VAL', 'inflectional'}
[-gen]          {'GEN', 'TAIL:INF,ARG', '-float', 'LANG:EN', 'inflectional'}
gen             {'GEN', 'TAIL:INF,ARG', '-float', 'LANG:EN', 'inflectional'}
[-n_acc]        {'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'TAIL:PHI', 'n-ACC', 'TAIL:*POL:NEG', 'adjoinable', 'inflectional'}
[-t_acc]        {'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'TAIL:*POL:NEG', 'adjoinable', 't-ACC', 'inflectional'}
[-0_acc]        {'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'TAIL:*PHI', '0_ACC', 'TAIL:*POL:NEG', 'adjoinable', 'inflectional'}
asp             {'LANG:EN', 'ASP:BOUNDED', 'inflectional'}
a'              {'PF:a', 'LANG:X', 'a', 'LF:A'}
b'              {'LF:B', 'LANG:X', 'PF:b', 'b'}
b''             {'LF:B', 'PF:b', '-COMP:c', 'LANG:EN', 'b'}
c''             {'LF:C', 'PF:c', 'SPEC:a', 'LANG:EN', 'c'}
c'              {'LF:C', 'c', 'LANG:X', 'PF:c'}
d'              {'LANG:', 'PF:d', 'd', 'LF:D'}
a''             ['LANG:EN']
x'              {'PF:x', 'x', 'LF:X', 'LANG:X'}
y'              {'y', 'LF:Y', 'PF:y', 'LANG:X'}
z'              {'LF:Z', 'PF:x', 'z', 'LANG:X'}
John'           {"N'", 'LANG:X', 'PF:John', 'LF:John'}
admires'        {'LANG:X', 'PF:admires', "V'", 'LF:admires'}
admires''       {'COMP:P', '-COMP:T/fin', 'PF:admires', '-COMP:v', 'PHI:PER:_', '-COMP:V', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'PHI:GEN:_', 'V', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', '-SPEC:T/fin', 'LF:admires', '-SPEC:FORCE', 'SPEC:D', 'LANG:EN'}
Mary'           {"N'", 'PF:Mary', 'LF:mary', 'LANG:X'}
T/fin           {'-COMP:T/fin', 'FIN', '-SPEC:Neg', '!COMP:*', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_', 'SPEC:*', 'PHI:DET:_', 'SPEC:TO/inf', '-SPEC:C', '-SPEC:v', 'LF:T', 'COMP:V', '-SPEC:TO/inf', 'SPEC:D', 'T/fin', 'VAL', '!PROBE:V', '!SPEC:D', '-COMP:INF', '-SPEC:C/fin', 'COMP:T/prt', '-SPEC:V', '-SPEC:T/fin', '-SPEC:N', 'COMP:v', '-SPEC:FORCE', 'T', 'LANG:EN', 'PF:T'}
v               {'SPEC:D', 'LF:v', '!PROBE:V', 'PHI:PER:_', 'PHI:GEN:_', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'v', '-SPEC:N', 'PHI:DET:_', '!COMP:*', 'LANG:EN', 'PF:v', 'COMP:V'}
C/fin           {'-COMP:T/prt', 'FIN', '-ARG', '!PROBE:FIN', 'SPEC:*', '-COMP:C/fin', 'COMP:T/fin', 'COMP:Neg/fin', 'C', 'LF:C/fin', 'C/fin', 'VAL', 'PF:C', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:N', '!COMP:*', 'LANG:EN'}
T               {'FIN', '!COMP:*', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_', 'SPEC:*', 'PHI:DET:_', 'LF:T', 'COMP:V', 'SPEC:D', 'VAL', '-COMP:NEG', '!PROBE:V', 'COMP:T/prt', '-SPEC:V', '-SPEC:T/fin', '-SPEC:N', 'COMP:v', '-SPEC:FORCE', 'T', 'LANG:EN', 'PF:T'}
T/prt           {'COMP:D', 'FIN', 'T', '!COMP:*', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_', 'SPEC:*', 'PHI:DET:_', 'COMP:V', 'VAL', 'LF:T/prt', '-COMP:NEG', '!PROBE:V', 'T/prt', 'COMP:T/prt', '-SPEC:V', '-SPEC:T/fin', '-SPEC:N', 'PF:T/prt', 'COMP:v', '-SPEC:FORCE', 'SPEC:D', 'LANG:EN'}
a0              {'A', 'COMP:0', 'adjoinable', 'PF:A', '-SPEC:D', 'TAIL:D', 'LF:A', 'LANG:EN', '-adjoinable', '-SPEC:A'}
n               {'-SPEC:uWH', '-COMP:v', 'N', '-COMP:V', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_', 'COMP:uR', 'PHI:DET:_', '-COMP:C/fin', '-COMP:WH', 'INF', '-COMP:A', 'VAL', '-COMP:AUX', '!SPEC:D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', 'LANG:EN', 'COMP:P', 'LF:n', 'COMP:0', 'PHI:PER:_', 'PF:n', 'COMP:C', 'SPEC:*', '-COMP:N', '-SPEC:ADV', 'COMP:V', '-SPEC:P', '-SPEC:C/fin', 'COMP:R/D', 'n', '-SPEC:INF', '-SPEC:N', 'COMP:v', '-SPEC:FORCE', '!COMP:*', '!SPEC:*', 'COMP:R'}
impass          {'SPEC:D', '!PROBE:V', 'PHI:PER:_', 'PHI:GEN:_', '-VAL', 'LF:impass', 'ARG', 'ASP', 'PHI:NUM:_', 'PF:impass', 'v', '-SPEC:N', 'PHI:DET:_', '!COMP:*', 'LANG:EN', 'COMP:V'}
cau             {'LF:v/Cause', 'SPEC:D', '!PROBE:V', 'PHI:PER:_', 'PHI:GEN:_', '-VAL', 'ASP', 'ARG', 'PHI:NUM:_', 'v', '-SPEC:N', 'PHI:DET:_', 'PF:Cau', '!COMP:*', 'LANG:EN', 'COMP:V'}
INF             {'LF:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:T/fin', 'PF:INF', 'COMP:v', 'COMP:V', '!COMP:*', '-COMP:C/fin', 'LANG:EN', 'INF', '-COMP:FORCE'}
prtcpl          {'COMP:D', '-COMP:T/fin', 'FIN', '!COMP:*', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_', 'SPEC:*', 'PHI:DET:_', '-COMP:C/fin', 'INF', '-COMP:FORCE', 'COMP:V', 'SPEC:D', 'VAL', 'LF:T/prt', '-COMP:NEG', '!PROBE:V', 'T/prt', 'COMP:T/prt', '-SPEC:V', '-SPEC:T/fin', '-SPEC:N', 'PF:T/prt', 'COMP:v', '-SPEC:FORCE', 'T', 'LANG:EN'}
TO/inf          {'-COMP:T/fin', '!COMP:V', 'adjoinable', '-VAL', '-COMP:C/fin', '-SPEC:v', 'INF', '-COMP:FORCE', 'COMP:V', 'LF:TO/inf', '-SPEC:V', '-SPEC:T/fin', 'TO/inf', 'COMP:v', '!COMP:*', '?ARG', 'LANG:EN', 'PF:TO/inf'}
A/inf           {'-COMP:T/fin', 'A/inf', 'SPEC:*', '-COMP:C/fin', 'INF', 'COMP:V', '-COMP:FORCE', 'PF:A/inf', 'LF:A/inf', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:T/fin', 'COMP:v', '?VAL', '!COMP:*', '?ARG', 'LANG:EN'}
ARE/inf         {'-COMP:T/fin', 'SPEC:*', '-COMP:C/fin', 'INF', '-adjoinable', 'COMP:V', '-COMP:FORCE', 'VAL', 'LF:ARE/inf', 'ARE/inf', '-SPEC:V', 'PF:are', '-SPEC:T/fin', 'COMP:v', '!COMP:*', '?ARG', 'LANG:EN'}
ESSA/inf        {'-COMP:T/fin', 'ADV', 'ESSA/inf', '!COMP:*', 'adjoinable', 'SPEC:*', '-COMP:C/fin', 'INF', 'COMP:V', '-COMP:FORCE', 'LF:while', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:T/fin', '-SPEC:N', 'COMP:v', 'TAIL:T', '?VAL', '-SPEC:FORCE', '?ARG', 'PF:essa', 'LANG:EN'}
TUA/inf         {'-COMP:T/fin', 'ADV', 'PF:tua', '!COMP:*', 'adjoinable', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_', 'TUA/inf', 'SPEC:*', 'PHI:DET:_', '-COMP:C/fin', 'INF', 'COMP:V', '-COMP:FORCE', 'VAL', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:T/fin', 'LF:after', '-SPEC:N', 'TAIL:T', 'COMP:v', '-SPEC:FORCE', '!SPEC:*', 'LANG:EN'}
VA/inf          {'-COMP:T/fin', 'LF:VA', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_', 'SPEC:*', 'PHI:DET:_', '-COMP:C/fin', 'INF', 'COMP:V', '-COMP:FORCE', 'VAL', 'PF:vAn', '-SPEC:V', 'VA/inf', '-SPEC:T/fin', '-SPEC:N', 'COMP:v', '!COMP:*', '!SPEC:*', 'LANG:EN'}
MA/ssa          {'ADV', 'PHI:PER:_', 'adjoinable', '-VAL', 'PHI:GEN:_', 'ARG', 'PF:massa', '-SPEC:*', 'PHI:NUM:_', 'PHI:DET:_', 'MA/inf', 'COMP:V', 'TAIL:V', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:N', 'COMP:v', 'LF:in_doing', '-SPEC:FORCE', 'LANG:EN'}
MA/tta          {'ADV', 'LF:without_doing', '-SPEC:Neg/fin', 'adjoinable', '-VAL', 'PHI:PER:_', 'ARG', '-SPEC:T/fin', 'PF:matta', 'PHI:NUM:_', '-SPEC:N', 'PHI:GEN:_', 'TAIL:T', '-SPEC:FORCE', 'PHI:DET:_', 'MA/inf', 'LANG:EN'}
MA/lla          {'LF:by_doing', 'adjoinable', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_', 'PHI:DET:_', 'MA/inf', 'PF:malla', '-SPEC:T/fin', 'LANG:EN', 'ADV', '-VAL', 'COMP:V', '-SPEC:Neg/fin', '-SPEC:N', 'COMP:v', 'TAIL:T', '-SPEC:FORCE', 'PHI:PER:_'}
MA/inf          {'adjoinable', 'PHI:GEN:_', 'PF:maan', 'ARG', 'PHI:NUM:_', 'PHI:DET:_', 'MA/inf', '-SPEC:T/fin', 'LANG:EN', 'ADV', '-VAL', 'COMP:V', 'TAIL:V', '-SPEC:Neg/fin', 'LF:to_do', '-SPEC:N', 'COMP:v', '-SPEC:FORCE', 'PHI:PER:_'}
E/inf           {'LANG:FI', 'ADV', '-ARG', '-SPEC:Neg/fin', 'PF:en', '-VAL', 'adjoinable', '-SPEC:T/fin', '-SPEC:N', 'TAIL:T', 'SPEC:*', '-SPEC:FORCE', 'LF:by'}
BE-             {'COMP:P', '-COMP:T/fin', 'PF:BE', '-COMP:v', '-ARG', '-COMP:V', '-VAL', 'ASP', 'V', 'SPEC:P', '-COMP:N', 'SPEC:TO/inf', 'SPEC:D', 'LF:BE', 'SPEC:ADV', 'COMP:T/prt', '-SPEC:T/fin', 'COPULA', '-SPEC:FORCE', '!COMP:*', 'LANG:EN'}
D               {'-COMP:T/fin', '-ARG', 'PF:D', 'adjoinable', '!PROBE:N', 'LF:D', '-SPEC:C', '-COMP:uR', '-COMP:D', '-SPEC:P', '-SPEC:MA/lla', 'D', '-SPEC:Neg/fin', '-SPEC:V', 'COMP:N', 'OP', '-SPEC:T/fin', '-SPEC:INF', '!COMP:*', 'LANG:EN'}
D/rel           {'-COMP:T/fin', '-ARG', '!COMP:*', 'adjoinable', '!PROBE:N', 'LF:D/rel', '-COMP:C/fin', '-SPEC:C', 'D/rel', '-COMP:uR', '-COMP:D', 'OP:_', '-SPEC:P', '-SPEC:MA/lla', 'D', '-SPEC:Neg/fin', '-SPEC:V', 'COMP:N', 'OP:REL', '-SPEC:T/fin', 'OP', '-SPEC:INF', 'SPEC:D', 'LANG:EN', 'PF:D/rel'}
P               {'COMP:D', '-COMP:T/fin', '-SPEC:iR', 'PHI:PER:_', 'adjoinable', '-VAL', 'PHI:GEN:_', 'ARG', 'LF:P', '-COMP:ADV', '-SPEC:*', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:N', '-SPEC:C', '-COMP:uWH', '-SPEC:v', '-SPEC:ADV', '-SPEC:P', '-SPEC:C/fin', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:T/fin', '-SPEC:iWH', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', '-float', '!COMP:*', 'PF:P', 'LANG:EN', 'P'}
pro             ['LANG:EN']
pro-            {'COMP:P', '-SPEC:uWH', '-COMP:v', 'PHI', 'N', '-COMP:V', 'COMP:C', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-COMP:A', '-SPEC:ADV', 'COMP:R', 'PF:(pro)', '-SPEC:P', '-COMP:AUX', '-SPEC:C/fin', 'LF:pro', 'COMP:R/D', '-SPEC:V', '-SPEC:R', '-SPEC:T/fin', 'SPEC:A', '-SPEC:INF', '-SPEC:N', '-SPEC:FORCE', 'LANG:EN'}
cl              {'RIGHT:ARE/inf', 'LEFT:D,CL', 'inflectional', 'LANG:EN', 'LEFT:T/fin', 'RIGHT:PRG', 'CL'}
inc             {'INCORPORATED', 'LANG:EN', 'inflectional'}
sg              {'PHI:NUM:SG', 'LANG:EN', 'inflectional'}
pl              {'LANG:EN', 'PHI:NUM:PL', 'inflectional'}
1p              {'PHI:PER:1', 'LANG:EN', 'inflectional'}
2p              {'LANG:EN', 'PHI:PER:2', 'inflectional'}
3p              {'PHI:PER:3', 'LANG:EN', 'inflectional'}
def             {'PHI:DET:DEF', 'LANG:EN', 'inflectional'}
indef           {'LANG:EN', 'PHI:DET:INDEF', 'inflectional'}
hum             {'PHI:HUM:HUM', 'LANG:EN', 'inflectional'}
nonhum          {'LANG:EN', 'PHI:HUM:NONHUM', 'inflectional'}
m               {'LANG:EN', 'PHI:GEN:M', 'inflectional'}
f               {'LANG:EN', 'PHI:GEN:F', 'inflectional'}
nom             {'LANG:EN', 'TAIL:FIN,!COMP:*,VAL', 'NOM', 'inflectional'}
acc             {'ACC', 'TAIL:v', 'LANG:EN', 'inflectional'}
dat             {'LANG:EN', 'TAIL:v', 'DAT', 'inflectional'}
uC/op           {'LANG:EN', 'uC/op', 'inflectional'}
wh              {'LANG:EN', 'OP:_', 'OP:WH', 'inflectional'}
wh_             {'OP:_', 'FORCE:OP:WH', 'LANG:EN', 'OP', 'inflectional'}
top             {'OP:TOP', 'LANG:EN', 'inflectional'}
foc             {'LANG:EN', 'OP:FOC', 'inflectional'}
C/op            {'OP:C/OP', 'LANG:EN', 'inflectional'}
rel             {'OP:_', 'SPEC:D', '-COMP:C/fin', 'LANG:EN', 'adjoinable', 'OP:REL', 'inflectional'}
Q               {'OP:WH', 'inflectional', 'LANG:EN', 'OP', 'OP:Q'}
