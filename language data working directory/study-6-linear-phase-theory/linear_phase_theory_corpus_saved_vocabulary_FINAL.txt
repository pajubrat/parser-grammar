ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'-SPEC:v', '-COMP:T/fin', '-SPEC:V', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:uWH', '-COMP:ADV', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', 'PF:a', 'TAIL:V', '-COMP:T', '-COMP:A', 'COMP:ARE/inf', 'P', '-ARG', 'LANG:IT', '!COMP:*', '-SPEC:Neg/fin', 'COMP:D', 'LF:to', '-SPEC:iWH', '-COMP:N', '-SPEC:iR', '-VAL', '-SPEC:ADV', '-SPEC:*'}
a_D             {'-COMP:T/fin', 'LANG:EN', 'PF:D', '-SPEC:V', 'COMP:N', '-SPEC:MA/lla', 'OP', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', '-COMP:D', '-ARG', '-COMP:P', '!COMP:*', '-SPEC:Neg/fin', '-COMP:uR', '!PROBE:N', 'LF:D', 'D', '-SPEC:T/fin'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'ASP', '-COMP:T/fin', 'PHI:DET:_', 'V', 'LANG:EN', 'ARG', 'COMP:P', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:v', 'PF:admire', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:Neg', '-COMP:P', '!COMP:*', 'LF:admire', 'COMP:D', '-COMP:N', 'CLASS:TR', '-VAL', '-SPEC:Neg'}
admire*         ['LANG:EN']
T/fin*          {'!SPEC:*', 'LANG:EN', 'NO_NUMBER', "PF:T/fin'", '-VAL', 'LF:T', 'NO_DET', 'CAT:T/fin'}
v*              {'LF:v', 'LANG:EN', 'NO_DET', 'CAT:v', 'PF:v', '-VAL', 'NO_NUMBER'}
admire**        ['LANG:EN']
T/fin**         {'NO_PERSON', "PF:T/fin''", '!SPEC:*', 'LANG:EN', 'PHI:PER:3', 'NO_NUMBER', '-VAL', 'LF:T', 'NO_DET', 'CAT:T/fin'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'PF:adora', 'ASP', 'PHI:DET:_', 'V', 'ARG', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', 'LANG:IT', 'LF:admire', 'COMP:D', '-COMP:N', 'COMP:P', '-VAL', '-SPEC:T/fin'}
antaa           ['LANG:FI']
anta-           {'-COMP:FIN', 'ASP', 'PHI:DET:_', 'V', 'ARG', 'PF:antaa', 'ASP:BOUNDED', '+SEM:directional', '-SPEC:FORCE', '-COMP:v', 'LF:give', 'SPEC:ADV', '-COMP:V', 'LANG:FI', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '!COMP:*', 'CLASS:DITR', 'COMP:D', 'SPEC:D', '-COMP:N', 'COMP:P', '-VAL', '-SPEC:T/fin'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'ASP', 'PHI:DET:_', 'V', 'LANG:EN', 'ARG', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', 'LF:ask', 'PF:ask', 'SPEC:ADV', '-COMP:V', 'SEM:internal', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:D', 'COMP:D', '-COMP:N', 'COMP:P', '-VAL', '-SPEC:T/fin'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'LF:key', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', 'PF:avain', '-COMP:VA/inf', '-COMP:V', 'LANG:FI', '-COMP:A', '-COMP:WH', '-COMP:AUX', '-SEM:directional', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'LF:car', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'PF:auto', '-COMP:AUX', '-SEM:directional', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
bank            {'PF:bank1', 'COMP:R', 'LANG:EN', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'FREQ:1', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', '-COMP:A', '-COMP:WH', '-COMP:AUX', 'LF:bank_inst', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
bank            {'COMP:R', 'LANG:EN', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'LF:bank_river', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', '-COMP:A', 'PF:bank2', '-COMP:WH', 'FREQ:2', '-COMP:AUX', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
barn            {'COMP:R', 'LANG:EN', '-SPEC:V', 'COMP:D/rel', 'LF:barn', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', 'PF:barn', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', '-COMP:A', '-COMP:WH', '-COMP:AUX', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
city            {'COMP:R', 'LANG:EN', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', 'COMP:T/prt', '-COMP:V', '-COMP:A', '-COMP:WH', '-COMP:AUX', 'LF:city', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'PF:city', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
che             ['LANG:IT']
che-            {'COMP:R', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-COMP:WH', 'LF:who', 'PHI_N', 'N', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'PF:che', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', 'LANG:IT', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
chiamato        ['LANG:IT']
chiamata-       {'ASP', 'PHI:DET:_', 'V', 'ARG', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', 'LF:called', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', 'LANG:IT', 'PF:chiamato', '-COMP:N', 'COMP:P', '-VAL', '-SPEC:T/fin'}
claims          ['LANG:EN']
claim-          {'ASP', 'PF:claim', 'PHI:DET:_', 'V', 'LANG:EN', 'ARG', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:v', '-COMP:D', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'COMP:T/fin', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:D', '-COMP:N', 'COMP:P', '-VAL', 'LF:claim'}
danno           {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'LF:damage', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', 'COMP:T/prt', '-COMP:V', '-COMP:A', '-COMP:WH', '-COMP:AUX', 'LANG:IT', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'PF:danno', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'ASP', 'PHI:DET:_', 'V', 'ARG', 'PF:detest', 'LF:detest', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'SEM:internal', 'COMP:ARE/inf', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', 'LANG:IT', 'COMP:D', '-COMP:N', 'COMP:P', '-VAL', '-SPEC:T/fin'}
devono          ['LANG:EN']
deva-           {'PHI:DET:_', 'V', '-ASP', 'ARG', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'SEM:internal', 'COMP:ARE/inf', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', 'LF:must', 'LANG:IT', 'SPEC:D', '-COMP:N', 'PF:deva', 'COMP:P', '-VAL', '-SPEC:T/fin'}
di              {'-SPEC:v', '-COMP:T/fin', 'PHI:DET:_', '-adjoinable', '-SPEC:V', 'ARG', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:uWH', '-COMP:ADV', '-SPEC:INF', '-SPEC:C', '-SPEC:P', 'SPEC:*', '-COMP:T', 'LANG:FI', '-COMP:A', 'PHI:NUM:_', 'PF:di', 'P', 'PHI:PER:_', '!COMP:*', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:iWH', 'LF:of', '-COMP:N', '-SPEC:iR', '-VAL', '-SPEC:ADV', '-SPEC:N'}
does            {'-COMP:T/fin', 'COMP:V', 'PHI:DET:_', 'LANG:EN', 'ARG', 'VAL', 'COMP:Neg', 'T/fin', '-SPEC:C', 'SPEC:FORCE', 'SPEC:C/fin', '-SPEC:TO/inf', 'PHI:PER:_', 'COMP:v', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', '!COMP:*', 'SPEC:D', 'PHI:GEN:F', '-SPEC:T/fin', '-SPEC:N', '!SPEC:*', '-SPEC:V', 'PHI:GEN:_', '-COMP:INF', '-SPEC:Neg', 'SPEC:*', 'PHI:NUM:_', 'FIN', 'SPEC:TO/inf', 'PF:does', '!PROBE:V', '-SPEC:v', 'COMP:T/prt', 'LF:does', 'T'}
does_C          ['LANG:EN']
does-           {'-COMP:T/fin', 'COMP:V', 'PHI:DET:_', 'LANG:EN', 'ARG', 'VAL', 'COMP:Neg', 'T/fin', '-SPEC:C', 'SPEC:FORCE', 'SPEC:C/fin', '-SPEC:TO/inf', 'PHI:PER:_', 'COMP:v', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', '!COMP:*', 'SPEC:D', 'PHI:GEN:F', '-SPEC:T/fin', '-SPEC:N', '!SPEC:*', '-SPEC:V', 'PHI:GEN:_', '-COMP:INF', '-SPEC:Neg', 'SPEC:*', 'PHI:NUM:_', 'FIN', 'SPEC:TO/inf', 'PF:does', '!PROBE:V', '-SPEC:v', 'COMP:T/prt', 'LF:does', 'T'}
dorme           ['LANG:IT']
dorme-          {'ASP', 'PHI:DET:_', 'V', 'LANG:EN', 'ARG', 'PF:dorme', '!SPEC:D', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', '-COMP:D', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:MA/inf', 'SPEC:D', 'LF:sleep', '-VAL', '-COMP:N', 'COMP:P', 'CLASS:INTR', '-SPEC:T/fin'}
disappeared     ['LANG:EN']
disappear-      {'ASP', 'PHI:DET:_', 'V', 'LANG:EN', 'ARG', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', '-COMP:D', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:MA/inf', 'LF:disappear', 'PF:disappear', 'SPEC:D', '-VAL', '-COMP:N', 'COMP:P', 'CLASS:INTR', '-SPEC:T/fin'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'SPEC:D', 'LF:easy', 'LANG:EN', 'PF:easy', '2SPEC', '0'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'PHI:DET:_', '-SPEC:T', '!SPEC:*', 'ARG', 'POL:NEG', 'VAL', 'NEG', 'Neg/fin', 'COMP:T/prt', 'SPEC:*', 'LANG:FI', 'SEM:internal', 'PHI:NUM:_', 'PHI:PER:_', 'FIN', '!COMP:*', '%SPEC:INF', 'PF:ei', '!COMP:T', 'LF:neg', '-SPEC:T/fin'}
e-              {'PHI:DET:_', '-SPEC:T', '!SPEC:*', 'ARG', 'POL:NEG', 'VAL', 'NEG', 'Neg/fin', 'COMP:T/prt', 'SPEC:*', 'LANG:FI', 'SEM:internal', 'PHI:NUM:_', 'PHI:PER:_', 'FIN', '!COMP:*', '%SPEC:INF', 'PF:ei', '!COMP:T', 'LF:neg', '-SPEC:T/fin'}
elaa            ['LANG:FI']
ela-            {'ASP', 'PHI:DET:_', 'V', 'PF:elaa', 'ARG', '-SPEC:FORCE', '-COMP:v', '-COMP:D', 'SPEC:ADV', '-COMP:V', 'LANG:FI', 'SPEC:P', 'PHI:NUM:_', 'LF:live', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:MA/inf', 'SPEC:D', '-VAL', '-COMP:N', 'COMP:P', 'CLASS:INTR', '-SPEC:T/fin'}
etsii           ['LANG:FI']
etsi-           {'ASP', 'PF:etsi', 'PHI:DET:_', 'V', 'ARG', 'COMP:P', '-SPEC:FORCE', '!COMP:D', '-COMP:v', 'LF:search', 'SPEC:ADV', '-COMP:V', 'LANG:FI', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'COMP:D', '-COMP:N', 'CLASS:TR', '-VAL', '-SPEC:T/fin'}
etta            {'LANG:FI', 'COMP:C/fin', 'COMP:T/fin', '-ARG', 'FIN', 'LF:that', '!COMP:*', 'FORCE', '-SPEC:D', 'PF:etta', '!PROBE:FIN', '-VAL', '-SPEC:*'}
fell            ['LANG:EN']
fell-           {'ASP', 'PHI:DET:_', 'V', 'LANG:EN', 'ARG', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', 'LF:fell', '-COMP:D', 'SPEC:ADV', '-COMP:V', 'PF:fell', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:MA/inf', 'SPEC:D', '-VAL', '-COMP:N', 'COMP:P', 'CLASS:INTR', '-SPEC:T/fin'}
flow'           {'ASP', 'PHI:DET:_', 'V', 'LANG:EN', 'PF:flow', 'ARG', 'LF:flow', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:D', '-COMP:N', 'COMP:P', '-VAL', '-SPEC:T/fin'}
from            {'-SPEC:v', '-COMP:T/fin', 'PHI:DET:_', 'LANG:EN', '-SPEC:V', 'ARG', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:uWH', '-float', '-COMP:ADV', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', '-COMP:T', '-COMP:A', 'PHI:NUM:_', '-SPEC:*', 'P', 'TAIL:V,+SEM:directional', 'PHI:PER:_', 'PF:from', 'LF:from', '!COMP:*', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:iWH', '-COMP:N', '-SPEC:iR', '-VAL', '-SPEC:ADV', '-SPEC:N'}
gave            ['LANG:EN']
give-           {'-COMP:FIN', 'PF:give', 'ASP', 'PHI:DET:_', 'V', 'LANG:EN', 'ARG', '+SEM:directional', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', 'LF:give', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '!COMP:*', 'CLASS:DITR', 'COMP:D', 'SPEC:D', '-COMP:N', 'COMP:P', '-VAL', '-SPEC:T/fin'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:Giuseppe', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', '-COMP:A', '-COMP:WH', '-COMP:AUX', 'LF:Giuseppe', 'LANG:IT', '-SEM:directional', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'ASP', 'PHI:DET:_', 'V', 'ARG', 'ASP:BOUNDED', 'COMP:A/inf', 'COMP:P', '-SPEC:FORCE', '-COMP:v', 'PF:haluaa', 'SPEC:ADV', '-COMP:V', 'SEM:internal', 'LANG:FI', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'COMP:D', 'LF:want', '-COMP:N', 'CLASS:TR', '-VAL', '-SPEC:T/fin', '-SPEC:*'}
hairitsee       ['LANG:FI']
hairitse-       {'-COMP:FIN', 'ASP', 'PHI:DET:_', 'V', 'ARG', 'COMP:P', '-SPEC:FORCE', '!COMP:D', '-COMP:v', 'PF:hairitsee', 'SPEC:ADV', '-COMP:V', 'LANG:FI', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', 'LF:disturb', '-COMP:P', '!COMP:*', 'SPEC:D', 'COMP:D', '-COMP:N', 'CLASS:TR', '-VAL', '-SPEC:T/fin'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'PHI:DET:_', 'V', '-ASP', 'ARG', 'COMP:P', 'LF:have', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', 'SPEC:*', 'SPEC:ADV', 'COMP:T', 'SEM:internal', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', 'LANG:IT', 'SPEC:D', '-COMP:N', 'PF:ha', '-VAL', '-SPEC:T/fin'}
horse           {'COMP:R', 'LF:horse', 'LANG:EN', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', 'PF:horse', '-COMP:A', '-COMP:WH', '-COMP:AUX', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'ASP', 'PHI:DET:_', 'V', 'ARG', 'COMP:P', '-SPEC:FORCE', '-COMP:v', '-COMP:D', 'SPEC:ADV', '-COMP:V', 'LANG:FI', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:MA/inf', 'LF:disappear', 'SPEC:D', '-VAL', '-COMP:N', 'PF:havia', 'CLASS:INTR', '-SPEC:T/fin'}
Helsingissa     ['LANG:FI']
Helsinki        ['LANG:FI']
Helsinki-       {'COMP:R', 'LF:Helsinki', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:Helsinki', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', 'LANG:FI', '-COMP:A', '-COMP:WH', '-COMP:AUX', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'-COMP:FIN', 'ASP', 'PF:ihaile-', 'PHI:DET:_', 'V', 'ARG', 'COMP:P', '-SPEC:FORCE', '!COMP:D', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'LANG:FI', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'LF:admire', 'COMP:D', '-COMP:N', 'CLASS:TR', '-VAL', '-SPEC:T/fin'}
il              {'-COMP:T/fin', '-SPEC:V', 'COMP:N', '-SPEC:MA/lla', 'OP', 'PF:il', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', '-COMP:D', 'LF:the', '-ARG', '-COMP:P', 'LANG:IT', '!COMP:*', '-SPEC:Neg/fin', '-COMP:uR', '!PROBE:N', 'D', '-SPEC:T/fin'}
i               {'-COMP:T/fin', '-SPEC:V', 'COMP:N', '-SPEC:MA/lla', 'OP', 'PF:il', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', '-COMP:D', 'LF:the', '-ARG', '-COMP:P', 'LANG:IT', '!COMP:*', '-SPEC:Neg/fin', '-COMP:uR', '!PROBE:N', 'D', '-SPEC:T/fin'}
in              {'-SPEC:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:V', 'ARG', '-SPEC:C/fin', '-SPEC:T/fin', 'PF:in', '-SPEC:FORCE', '-COMP:uWH', 'PHI:GEN:_', 'LF:in', '-COMP:ADV', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', '-COMP:T', '-COMP:A', 'PHI:NUM:_', 'PHI:PER:_', 'P', 'LANG:IT', '!COMP:*', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:iWH', '-COMP:N', '-SPEC:iR', '-VAL', '-SPEC:ADV', '-SPEC:N'}
infermieri      {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', 'PF:infermieri', '-SPEC:uWH', '-SPEC:P', 'COMP:C', '-COMP:VA/inf', '-COMP:V', '-COMP:A', '-COMP:WH', '-COMP:AUX', 'LANG:IT', 'LF:nurses', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
is              ['LANG:EN']
be-             {'ASP', 'LF:be', 'V', 'LANG:EN', '-SPEC:FORCE', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'SPEC:P', '-ARG', 'SPEC:TO/inf', '!COMP:*', 'PF:be', 'SPEC:D', 'COPULA', '-COMP:TO/inf', 'COMP:P', '-VAL', '-SPEC:T/fin', '-COMP:N'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'ASP', 'PHI:DET:_', 'V', 'ARG', '-SPEC:FORCE', '-COMP:v', 'LF:sit', '-COMP:D', 'SPEC:ADV', '-COMP:V', 'LANG:FI', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:MA/inf', 'SPEC:D', '-VAL', '-COMP:N', 'PF:istuu', 'COMP:P', 'CLASS:INTR', '-SPEC:T/fin'}
John            ['LANG:EN']
John-           {'COMP:R', '-adjoinable', 'LANG:EN', 'PF:John', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-COMP:WH', 'LF:John', '-SEM:directional', 'N', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'COMP:R', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', 'LANG:FI', 'PF:joka', '-COMP:WH', 'LF:who', 'PHI_N', 'N', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', 'LF:Jukka', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', 'LANG:FI', 'PF:Jukka', '-COMP:A', '-COMP:WH', '-COMP:AUX', '-SEM:directional', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'ASP', 'PHI:DET:_', 'V', 'PF:juokse-', 'ARG', '-SPEC:FORCE', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'LANG:FI', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', 'LF:run', '-COMP:N', 'COMP:P', '-VAL', '-SPEC:T/fin'}
kaksi           {'SPEC:*', 'LANG:FI', 'LF:two', 'PHI:NUM:_', 'PHI:PER:_', 'COMP:N', 'PHI:DET:_', 'ARG', 'PHI:NUM:SG', 'TAIL:ARG,VAL,FIN', 'COMP:n', 'NUM', '-VAL', 'PF:kaksi'}
kaksi           {'SPEC:*', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'LF:two', 'LANG:EN', 'COMP:N', 'COMP:n', 'NUM', 'PF:kaksi'}
kaksi_1         {'SPEC:*', 'LANG:FI', 'LF:two', 'PHI:NUM:_', 'PHI:PER:_', 'COMP:N', 'PHI:DET:_', 'ARG', 'PHI:NUM:SG', 'TAIL:ARG,VAL,FIN', 'COMP:n', 'NUM', '-VAL', 'PF:kaksi'}
kaksi_2         {'SPEC:*', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'LF:two', 'LANG:EN', 'COMP:N', 'COMP:n', 'NUM', 'PF:kaksi'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'SPEC:*', 'LANG:FI', 'LF:two', 'COMP:n', 'NUM', 'COMP:N', 'PF:kaksi'}
kaupunkia       ['LANG:EN']
kaupunki        {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', 'LANG:FI', '-COMP:A', '-COMP:WH', '-COMP:AUX', '-COMP:P', 'PF:kaupunki', 'LF:city', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', '-SPEC:ADV', '-SPEC:N'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'ASP', 'PHI:DET:_', 'V', 'ARG', 'SEM:external', '-SPEC:FORCE', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'LANG:FI', 'SPEC:P', 'LF:order', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', 'PF:kaske', '!COMP:A/inf', '-COMP:N', 'COMP:P', '-VAL', '-SPEC:T/fin'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'COMP:R', 'LF:watch', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', 'LANG:FI', '-COMP:A', '-COMP:WH', '-COMP:AUX', '-COMP:C/fin', 'N', '-SPEC:R', 'PF:kello', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-COMP:N'}
kello0-         {'LF:watch', 'SPEC:D', 'LANG:FI', '2SPEC', 'PF:kello', '0'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'COMP:R', 'LANG:EN', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'LF:key', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', '-COMP:A', '-COMP:WH', 'PF:key', '-COMP:AUX', '-SEM:directional', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
kirja           ['LANG:FI']
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'LF:book', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', 'PF:kirja', '-COMP:V', 'LANG:FI', '-COMP:A', '-COMP:WH', '-COMP:AUX', '-SEM:directional', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
knows           ['LANG:EN']
know-           {'ASP', 'PHI:DET:_', 'V', 'LANG:EN', 'ARG', 'COMP:P', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'COMP:D', '-VAL', 'PF:know', 'CLASS:TR', 'LF:know', '-SPEC:T/fin', '-COMP:N'}
kohti           {'-SPEC:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:V', 'ARG', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:uWH', 'LF:towards', '-COMP:ADV', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', 'PF:kohti', 'TAIL:V', 'SPEC:*', '-COMP:T', 'LANG:FI', '-COMP:A', 'PHI:NUM:_', 'PHI:PER:_', 'P', '!COMP:*', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:iWH', '-COMP:N', '-SPEC:iR', '-VAL', '-SPEC:ADV', '-SPEC:N'}
koko            {'PF:koko', '-COMP:T/fin', '-SPEC:V', 'COMP:N', '-SPEC:MA/lla', 'OP', 'TAIL:T', '-SPEC:INF', 'adjoinable', '-SPEC:C', '-SPEC:P', '-COMP:D', 'LANG:FI', '-ARG', '-COMP:P', '!COMP:*', '-SPEC:Neg/fin', '-COMP:uR', '!PROBE:N', 'LF:all', 'D', '-SPEC:T/fin'}
kuka            ['LANG:FI']
kuka-           {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', 'PHI', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', 'LANG:FI', '-COMP:A', '-COMP:WH', '-COMP:AUX', 'LF:who', 'PF:kuka', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'ASP', 'LF:snore', '-COMP:T/fin', 'PHI:DET:_', 'V', 'PF:kuorsaa', 'ARG', '-SPEC:FORCE', '-COMP:v', '-COMP:D', 'SPEC:ADV', '-COMP:V', 'LANG:FI', 'SPEC:P', 'PHI:NUM:_', '-COMP:WH', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', '-VAL', '-SPEC:T/fin'}
lahella         {'-COMP:FORCE', '-COMP:T/fin', 'COMP:V', 'PHI:DET:_', 'ARG', 'VAL', '-SPEC:C/fin', '!SPEC:D', '-COMP:ADV', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', '-COMP:T', 'LANG:FI', 'PHI:PER:_', 'P', 'COMP:v', '!COMP:*', '-SPEC:Neg/fin', 'COMP:D', 'LF:near', '-COMP:N', '-SPEC:iR', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '!SPEC:*', '-SPEC:V', '-SPEC:FORCE', '-COMP:uWH', 'SPEC:*', '-COMP:A', 'PF:lahella', 'PHI:NUM:_', 'INF', '-COMP:C/fin', '-SPEC:v'}
lahella         {'-SPEC:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:V', 'ARG', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '!COMP:D', '-COMP:uWH', '-COMP:ADV', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', 'SPEC:*', '-COMP:T', 'LANG:FI', 'PF:lahella', '-COMP:A', 'PHI:NUM:_', 'P', 'PHI:PER:_', '!COMP:*', '-SPEC:Neg/fin', 'COMP:D', 'LF:near', '-SPEC:iWH', '-COMP:N', '-SPEC:iR', '-VAL', '-SPEC:ADV', '-SPEC:N'}
lahella_1       {'-SPEC:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:V', 'ARG', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '!COMP:D', '-COMP:uWH', '-COMP:ADV', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', 'SPEC:*', '-COMP:T', 'LANG:FI', 'PF:lahella', '-COMP:A', 'PHI:NUM:_', 'P', 'PHI:PER:_', '!COMP:*', '-SPEC:Neg/fin', 'COMP:D', 'LF:near', '-SPEC:iWH', '-COMP:N', '-SPEC:iR', '-VAL', '-SPEC:ADV', '-SPEC:N'}
lahella_2       {'-COMP:FORCE', '-COMP:T/fin', 'COMP:V', 'PHI:DET:_', 'ARG', 'VAL', '-SPEC:C/fin', '!SPEC:D', '-COMP:ADV', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', '-COMP:T', 'LANG:FI', 'PHI:PER:_', 'P', 'COMP:v', '!COMP:*', '-SPEC:Neg/fin', 'COMP:D', 'LF:near', '-COMP:N', '-SPEC:iR', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '!SPEC:*', '-SPEC:V', '-SPEC:FORCE', '-COMP:uWH', 'SPEC:*', '-COMP:A', 'PF:lahella', 'PHI:NUM:_', 'INF', '-COMP:C/fin', '-SPEC:v'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'ASP', 'PHI:DET:_', 'V', 'ARG', 'COMP:PP', '-SPEC:FORCE', '-COMP:v', 'LF:leave', '-COMP:D', 'SPEC:ADV', '-COMP:V', 'LANG:FI', 'SPEC:P', 'PHI:NUM:_', 'PF:lahtea', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:MA/inf', 'SPEC:D', '-VAL', '-COMP:N', 'COMP:P', 'CLASS:INTR', '-SPEC:T/fin'}
lavano          ['LANG:IT']
lava-           {'ASP', 'PHI:DET:_', 'V', 'LF:wash', 'ARG', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', 'PF:lava', 'LANG:IT', '!COMP:*', 'COMP:D', '-COMP:N', 'COMP:P', '-VAL', '-SPEC:T/fin'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-COMP:T/fin', '-SPEC:V', 'COMP:N', '-SPEC:MA/lla', 'OP', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', '-COMP:D', 'PF:le', '-ARG', '-COMP:P', 'LANG:IT', '!COMP:*', '-SPEC:Neg/fin', '-COMP:uR', '!PROBE:N', 'LF:D', 'D', '-SPEC:T/fin'}
leaves          ['LANG:EN']
leave           {'ASP', '-COMP:T/fin', 'PHI:DET:_', 'V', 'PF:leave', 'LANG:EN', 'ARG', '!SPEC:D', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', 'LF:leave', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', '-VAL', '-SPEC:T/fin'}
leave-          {'ASP', '-COMP:T/fin', 'PHI:DET:_', 'V', 'PF:leave', 'LANG:EN', 'ARG', '!SPEC:D', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', 'LF:leave', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', '-VAL', '-SPEC:T/fin'}
like-           {'ASP', 'PHI:DET:_', 'V', 'LF:like', 'LANG:EN', 'ARG', '-SPEC:FORCE', 'PHI:GEN:_', '!COMP:D', '-COMP:v', 'PF:like', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', '-VAL', '-SPEC:T/fin'}
likes           ['LANG:EN']
like            {'ASP', 'PHI:DET:_', 'V', 'LF:like', 'LANG:EN', 'ARG', '-SPEC:FORCE', 'PHI:GEN:_', '!COMP:D', '-COMP:v', 'PF:like', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', '-VAL', '-SPEC:T/fin'}
little          ['LANG:EN']
little-         {'LF:little', 'SPEC:D', '2SPEC', 'LANG:EN', 'PF:little-', '0'}
lle             {'-SPEC:v', '-COMP:T/fin', 'PHI:DET:_', 'PF:P(lle)', '-SPEC:V', 'ARG', '-SPEC:N', '-SPEC:C/fin', '+SEM:directional', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:uWH', '-COMP:ADV', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', '-COMP:T', 'LANG:FI', '-COMP:A', 'PHI:NUM:_', 'PHI:PER:_', 'P', 'TAIL:V,+SEM:directional', '!COMP:*', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:iWH', 'LF:for', '-COMP:N', '-SPEC:iR', '-VAL', '-SPEC:ADV', '-SPEC:*'}
lla             {'-SPEC:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:V', 'ARG', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'TAIL:T', '-COMP:uWH', '-COMP:ADV', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', 'SPEC:*', '-COMP:T', 'LANG:FI', '-COMP:A', 'PHI:NUM:_', 'PHI:PER:_', 'P', '!COMP:*', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:iWH', 'PF:P(lla)', 'LF:by', '-COMP:N', '-SPEC:iR', '-VAL', '-SPEC:ADV', 'TAIL:*V'}
Luisa           ['LANG:IT']
Luisa-          {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', 'PF:Luisa', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-SPEC:ADV', '-COMP:VA/inf', '-COMP:V', '-COMP:A', '-COMP:WH', '-COMP:AUX', 'LANG:IT', '-SEM:directional', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', 'LF:Luisa', '-SPEC:N'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'ASP', 'PF:luke', 'LF:read', 'PHI:DET:_', 'V', 'ARG', 'COMP:P', '-SPEC:FORCE', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'LANG:FI', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'COMP:D', '-COMP:N', 'CLASS:TR', '-VAL', '-SPEC:T/fin'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'ASP', 'PHI:DET:_', 'V', 'ARG', 'ASP:BOUNDED', 'COMP:P', '-SPEC:FORCE', 'LF:find', '!COMP:D', 'PF:loyta-', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'LANG:FI', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'COMP:D', '-COMP:N', 'CLASS:TR', '-VAL', '-SPEC:T/fin'}
Mary            ['LANG:EN']
Mary-           {'COMP:R', '-adjoinable', 'LANG:EN', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-COMP:WH', '-SEM:directional', 'N', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', 'LF:Mary', '-COMP:A', 'PF:Mary', '-COMP:AUX', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'COMP:R', '-adjoinable', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', 'LANG:FI', '-COMP:WH', '-SEM:directional', 'N', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'PF:Merja', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', 'LF:Merja', '-COMP:AUX', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'SPEC:*', 'LANG:FI', 'COMP:v', 'MA/inf', '-SPEC:FORCE', '-SPEC:Neg/fin', 'TAIL:T', 'ADV', 'LF:by', 'PF:malla', 'adjoinable', '-SPEC:T/fin', '-SPEC:N'}
meren           ['LANG:FI']
mere-           {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', 'LANG:FI', '-COMP:A', '-COMP:WH', '-COMP:AUX', 'PF:meri', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'LF:ocean', '-SPEC:ADV', '-SPEC:N'}
mies            {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', 'LANG:FI', '-COMP:A', '-COMP:WH', '-COMP:AUX', 'LF:man', 'PF:mies', 'N', '-SPEC:R', '-COMP:C/fin', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
mistake         {'COMP:R', 'LANG:EN', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', 'PF:mistake', '-COMP:VA/inf', '-COMP:V', '-COMP:A', '-COMP:WH', 'LF:mistake', '-COMP:AUX', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', 'PF:mika-', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', 'LANG:FI', '-COMP:A', '-COMP:WH', '-COMP:AUX', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', 'LF:what'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'ASP', 'PHI:DET:_', 'V', 'ARG', 'COMP:P', '+SEM:directional', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', 'LANGN:EN', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:P', 'PF:move', '!COMP:*', 'COMP:D', 'LF:move', '-COMP:N', 'CLASS:TR', '-VAL', '-SPEC:T/fin'}
mukavasti       ['LANG:EN']
mukava-         {'LF:comfortably', 'SPEC:D', 'LANG:FI', '2SPEC', 'PF:mukavasti', '0'}
must            {'MODAL', '-COMP:T/fin', 'COMP:V', 'PHI:DET:_', 'LANG:EN', '!SPEC:*', '-SPEC:V', 'ARG', 'VAL', 'PF:must', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:Neg', 'T/fin', '-SPEC:Neg', '-SPEC:C', 'SPEC:*', 'SPEC:FORCE', 'SPEC:C/fin', '-SPEC:TO/inf', 'PHI:NUM:_', 'PHI:PER:_', 'COMP:v', 'FIN', 'SPEC:TO/inf', 'LF:must', '!COMP:*', 'SPEC:D', '!PROBE:V', '-SPEC:v', 'COMP:T/prt', '-COMP:INF', 'T', '-SPEC:N'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'ASP', '-COMP:T/fin', 'PHI:DET:_', 'V', 'CLASS:TR', 'ARG', 'ASP:BOUNDED', 'COMP:P', '-SPEC:FORCE', '-COMP:v', 'SPEC:ADV', 'LF:sell', 'LANG:FI', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'COMP:D', '-COMP:N', 'PF:myy', '-VAL', '-SPEC:T/fin'}
naki            ['LANG:FI']
nakee           ['LANG:FI']
nake-           {'ASP', 'PHI:DET:_', 'V', 'PF:nake', '-COMP:ESSA/inf', 'ARG', 'ASP:BOUNDED', 'COMP:P', '-SPEC:FORCE', '-COMP:v', '-COMP:MA/ssa', 'SPEC:ADV', '-COMP:V', 'LANG:FI', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:MA/tta', 'SPEC:TO/inf', 'LF:see', '-COMP:P', '!COMP:*', 'COMP:D', '-COMP:N', 'CLASS:TR', '-VAL', '-SPEC:T/fin'}
nayttaa         ['LANG:FI']
naytta-         {'ASP', 'V', 'VAL', '!SPEC:D', '-SPEC:FORCE', '-COMP:v', '!COMP:VA/inf', 'LF:seem', 'SPEC:ADV', '-COMP:V', 'SEM:internal', 'LANG:FI', 'SPEC:P', '-ARG', 'SPEC:TO/inf', 'PF:naytta', '-COMP:N', 'COMP:P', '-SPEC:T/fin'}
ndo             {'LF:ing', '-COMP:FORCE', 'PRG', '-COMP:T/fin', 'COMP:V', '?ARG', 'LANG:EN', '-SPEC:V', 'COMP:v', 'PF:PRG', 'VAL', '!COMP:*', 'INF', '-COMP:C/fin', '-SPEC:T/fin'}
ne              {'-COMP:T/fin', '-SPEC:V', 'COMP:N', '-SPEC:MA/lla', 'LF:those', 'OP', 'PF:ne', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', '-COMP:D', 'LANG:FI', '-ARG', 'PHI:PER:3', 'PHI:NUM:PL', '-COMP:P', '!COMP:*', '-SPEC:Neg/fin', '-COMP:uR', '!PROBE:N', 'D', '-SPEC:T/fin'}
niiden          ['LANG:EN']
nen             {'PF:a', 'LF:ing', 'SPEC:*', 'LANG:FI', 'TAIL:D', '-SPEC:A', 'COMP:0', 'A', '-SPEC:D'}
not             {'-COMP:FIN', 'SPEC:*', '-COMP:D', 'LF:not', 'PHI:DET:_', 'PHI:NUM:_', 'LANG:EN', 'PHI:PER:_', 'ARG', 'POL:NEG', '!COMP:*', 'PHI:GEN:_', 'Neg', '-COMP:C', 'PF:not', '-VAL', '-SPEC:T/fin'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'ASP', '-COMP:T/fin', 'PHI:DET:_', 'V', 'ARG', '-COMP:Neg/fin', '-SPEC:FORCE', '-COMP:v', '-COMP:D', 'SPEC:ADV', '-COMP:T', 'LANG:FI', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:MA/inf', 'SPEC:D', 'LF:sleep', '-VAL', '-COMP:N', 'PF:nukku', 'COMP:P', 'CLASS:INTR', '-SPEC:T/fin'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'PF:omaisuuden', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', 'LANG:FI', '-COMP:A', '-COMP:WH', '-COMP:AUX', '-COMP:C/fin', 'LF:possessions', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
operatoria      ['LANG:IT']
operatoria-     {'PF:operatoria', 'SPEC:D', '2SPEC', 'LF:operation', 'LANG:IT', '0'}
ostaa           ['LANG:FI']
osta-           {'ASP', 'PHI:DET:_', 'V', 'ARG', 'ASP:BOUNDED', 'COMP:P', '-SPEC:FORCE', '-COMP:v', 'LF:buy', 'SPEC:ADV', '-COMP:V', 'PF:osta', 'LANG:FI', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'COMP:D', '-COMP:N', 'CLASS:TR', '-VAL', '-SPEC:T/fin'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'PF:paiva', 'SEM:nonreferential', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', 'LANG:FI', '-COMP:A', '-COMP:WH', '-COMP:AUX', '-COMP:C/fin', 'N', '-SPEC:R', 'LF:day', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
past            {'LF:past', '-SPEC:v', '-COMP:T/fin', 'PHI:DET:_', 'LANG:EN', '-SPEC:V', 'ARG', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:uWH', 'PF:past', '-float', '-COMP:ADV', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', '-COMP:T', '-COMP:A', 'PHI:NUM:_', '-SPEC:*', 'P', 'PHI:PER:_', '!COMP:*', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:iWH', '-COMP:N', '-SPEC:iR', '-VAL', '-SPEC:ADV', '-SPEC:N'}
Pariisia        ['LANG:FI']
Pariisi-        {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'LF:Paris', '-SPEC:P', 'COMP:C', '-COMP:VA/inf', '-COMP:V', 'LANG:FI', 'PF:Pariisi', '-COMP:A', '-COMP:WH', '-COMP:AUX', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'COMP:R', 'LF:Pekka', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', 'LANG:FI', '-COMP:A', '-COMP:WH', '-COMP:AUX', '-SEM:directional', 'PF:Pekka', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'ASP', 'PHI:DET:_', 'V', 'ARG', 'COMP:P', '-SPEC:FORCE', '-COMP:v', 'LF:fear', 'SPEC:ADV', '-COMP:V', 'LANG:FI', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'COMP:D', 'PF:pelkaa', '-COMP:N', 'CLASS:TR', '-VAL', '-SPEC:T/fin'}
persuades       ['LANG:EN']
persuade-       {'ASP', 'PHI:DET:_', 'V', 'LANG:EN', 'ARG', 'SEM:external', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:persuade', '-COMP:v', 'PF:persuade', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '!COMP:*', '-COMP:N', 'COMP:P', '-VAL', 'COMP:TO/inf'}
peruuntui       ['LANG:FI']
peruuntu-       {'ASP', 'PF:peruuntui', 'LF:cancelled', 'PHI:DET:_', 'V', 'ARG', '-SPEC:FORCE', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'LANG:FI', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:D', '-COMP:N', 'COMP:P', '-VAL', '-SPEC:T/fin'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'ASP', 'PHI:DET:_', 'V', 'LF:wash', 'ARG', 'ASP:BOUNDED', 'COMP:P', '-SPEC:FORCE', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'LANG:FI', 'SPEC:P', 'PF:pese_asp', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'COMP:D', '-COMP:N', 'CLASS:TR', '-VAL', '-SPEC:T/fin'}
pese-           {'ASP', 'PHI:DET:_', 'V', 'LF:wash', 'ARG', 'COMP:P', '-SPEC:FORCE', '-COMP:v', 'PF:pese', 'SPEC:ADV', '-COMP:V', 'LANG:FI', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'COMP:D', '-COMP:N', 'CLASS:TR', '-VAL', '-SPEC:T/fin'}
petardi         {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', 'PF:petardi', '-SPEC:uWH', '-SPEC:P', 'COMP:C', '-COMP:VA/inf', 'COMP:T/prt', '-COMP:V', '-COMP:A', '-COMP:WH', '-COMP:AUX', 'LANG:IT', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'LF:firecrackers', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
pieni           ['LANG:FI']
pieni-          {'SPEC:D', 'LANG:FI', 'PF:pieni-', '2SPEC', 'LF:small', '0'}
poikien         ['LANG:FI']
poika-          {'COMP:R', 'LF:boy', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'PF:poika', '-SPEC:P', 'COMP:C', '-COMP:VA/inf', '-COMP:V', 'LANG:FI', '-COMP:A', '-COMP:WH', '-COMP:AUX', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
puhelinta       ['LANG:FI']
puhelin-        {'SPEC:D', 'LANG:FI', 'LF:phone', 'PF:puhelin', '2SPEC', '0'}
punainen        ['LANG:FI']
puna-           {'SPEC:D', 'LANG:FI', '2SPEC', '0', 'LF:red', 'PF:puna-'}
presupposto     {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'PF:presupposto', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', 'LF:presupposition', '-COMP:VA/inf', '-COMP:V', '-COMP:A', '-COMP:WH', '-COMP:AUX', 'LANG:IT', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
primary         {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', '-COMP:A', '-COMP:WH', '-COMP:AUX', 'LF:nurse', 'LANG:IT', '-COMP:C/fin', 'N', '-SPEC:R', 'PF:primary', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
promises        ['LANG:EN']
promise-        {'ASP', 'PHI:DET:_', 'V', 'LANG:EN', 'ARG', '-SPEC:FORCE', 'PHI:GEN:_', 'PF:promise', 'LF:promise', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'SEM:internal', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', 'COMP:D', 'SPEC:D', '-COMP:N', 'COMP:P', '-VAL', '-SPEC:T/fin'}
problem         {'COMP:R', 'PF:problem', 'LANG:EN', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', '-COMP:A', '-COMP:WH', 'LF:problem', '-COMP:AUX', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
pyytaa          ['LANG:FI']
pyyta-          {'ASP', 'PHI:DET:_', 'V', 'ARG', 'SEM:external', 'COMP:P', '-SPEC:FORCE', '-COMP:v', 'LF:ask', 'PF:pyyda', 'SPEC:ADV', '-COMP:V', 'LANG:FI', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'COMP:D', '-COMP:N', 'CLASS:TR', '-VAL', '-SPEC:T/fin'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'LAMG:EN', 'CLASS:INTR', 'ASP', '-COMP:T/fin', 'PHI:DET:_', 'V', 'LANG:EN', 'ARG', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', '-COMP:D', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:MA/inf', 'PF:race', 'SPEC:D', '-VAL', '-COMP:N', 'COMP:P', 'LF:race', '-SPEC:T/fin'}
raukesi         ['LANG:FI']
raukea-         {'ASP', 'PHI:DET:_', 'V', 'ARG', '-SPEC:FORCE', 'PF:raukea', '-SPEC:T/fin', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'LANG:FI', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', '-VAL', 'LF:terminate'}
red             ['LANG:EN']
red-            {'SPEC:D', 'PF:red', 'LANG:EN', '2SPEC', '0', 'LF:red'}
saavuttaa       ['LANG:FI']
saavutta-       {'ASP', 'PHI:DET:_', 'V', 'ARG', 'ASP:BOUNDED', 'PF:saavutta-', 'COMP:P', '-SPEC:FORCE', '-SPEC:T/fin', '!COMP:D', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'LANG:FI', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'COMP:D', '-COMP:N', 'CLASS:TR', '-VAL', 'LF:reach'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'ASP', 'PHI:DET:_', 'V', 'COMP:VA/inf', 'ARG', 'COMP:P', '-SPEC:FORCE', 'LF:say', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'PF:sano-', 'LANG:FI', 'COMP:FORCE', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'SPEC:D', 'COMP:D', '-COMP:N', 'CLASS:TR', '-VAL', '-SPEC:T/fin'}
said            ['LANG:EN']
say'            {'ASP', 'PHI:DET:_', 'V', 'LANG:EN', 'ARG', '-SPEC:FORCE', 'PHI:GEN:_', 'LF:say', '-COMP:v', 'SPEC:ADV', 'PF:say', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:D', '!COMP:FORCE', 'COMP:P', '-VAL', '-SPEC:T/fin', '-COMP:N'}
say-            {'ASP', 'PHI:DET:_', 'V', 'LANG:EN', 'ARG', '-SPEC:FORCE', 'PHI:GEN:_', 'LF:say', '-COMP:v', 'SPEC:ADV', 'PF:say', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:D', '!COMP:FORCE', 'COMP:P', '-VAL', '-SPEC:T/fin', '-COMP:N'}
sala            ['LANG:IT']
sala-           {'COMP:R', 'PF:sala', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', '-COMP:A', 'LF:room', '-COMP:WH', '-COMP:AUX', 'LANG:IT', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
scoppiati       ['LANG:IT']
scoppia-        {'LF:explode', 'ASP', 'PHI:DET:_', 'V', 'PF:scoppia', 'ARG', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', 'LANG:IT', '-COMP:N', 'COMP:P', '-VAL', '-SPEC:T/fin'}
sentenza        {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', '-COMP:A', '-COMP:WH', '-COMP:AUX', 'LF:sentence', 'LANG:IT', '-COMP:C/fin', 'N', '-SPEC:R', 'PF:sentenza', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
Seine           ['LANG:EN']
Seine-          {'COMP:R', 'LANG:EN', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', 'COMP:T/prt', '-COMP:V', '-COMP:A', '-COMP:WH', '-COMP:AUX', '-COMP:C/fin', 'N', '-SPEC:R', 'LF:Seine', '-COMP:N', 'PF:Seine', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
sembrano        ['LANG:IT']
sembra-         {'V', 'LANG:EN', '-ASP', '!COMP:ARE/inf', '-SPEC:FORCE', '-COMP:v', 'PF:sembra', 'LF:seem', '-COMP:D', 'SPEC:ADV', '-COMP:V', 'SPEC:P', '-ARG', 'SPEC:TO/inf', 'SPEC:D', '-COMP:N', 'COMP:P', '-VAL', '-SPEC:T/fin'}
sleeps          ['LANG:EN']
sleep           {'ASP', 'PHI:DET:_', 'V', 'LANG:EN', 'ARG', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', '-COMP:D', 'SPEC:ADV', 'PF:sleep', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:MA/inf', 'SPEC:D', 'LF:sleep', '-VAL', '-COMP:N', 'COMP:P', 'CLASS:INTR', '-SPEC:T/fin'}
sleep-          {'ASP', 'PHI:DET:_', 'V', 'LANG:EN', 'ARG', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', '-COMP:D', 'SPEC:ADV', 'PF:sleep', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:MA/inf', 'SPEC:D', 'LF:sleep', '-VAL', '-COMP:N', 'COMP:P', 'CLASS:INTR', '-SPEC:T/fin'}
solution        {'COMP:R', 'LF:solution', 'LANG:EN', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', '-COMP:A', '-COMP:WH', '-COMP:AUX', 'PF:solution', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', 'LF:agreement', '-COMP:VA/inf', '-COMP:V', 'LANG:FI', '-COMP:A', '-COMP:WH', '-COMP:AUX', 'PF:sopimus', '-COMP:C/fin', 'N', '-SPEC:R', '!COMP:A/inf', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
spinge          ['LANG:IT']
spinge-         {'ASP', 'PHI:DET:_', 'V', 'ARG', '-SPEC:FORCE', 'PHI:GEN:_', '!COMP:D', 'LF:push', '-COMP:v', 'PF:spinge', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:P', 'LANG:IT', '-COMP:N', '-VAL', '-SPEC:T/fin'}
ssa             {'-SPEC:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:V', 'ARG', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:uWH', 'LF:in', '-COMP:ADV', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', 'TAIL:V', 'SPEC:*', '-COMP:T', 'LANG:FI', '-COMP:A', 'PHI:NUM:_', 'PHI:PER:_', 'P', '!COMP:*', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:iWH', 'PF:ssa', '-COMP:N', '-SPEC:iR', 'COMP:n/MA', '-VAL', '-SPEC:ADV', '-SPEC:N'}
stanno          ['LANG:IT']
sta-            {'PHI:DET:_', 'LF:stay', 'V', 'LANG:EN', '-ASP', 'ARG', 'COMP:PRG', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'SEM:internal', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'PF:sta', 'SPEC:TO/inf', 'SPEC:D', '-COMP:N', 'COMP:P', '-VAL', '-SPEC:T/fin'}
sti             {'SPEC:*', 'LANG:FI', '-ARG', '!COMP:*', '-SPEC:FORCE', '-SPEC:Neg/fin', 'TAIL:T', 'ADV', 'LF:by', 'PF:sti', 'adjoinable', '-SPEC:T/fin', '-SPEC:N'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'LF:socks', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'PF:sukka-', '-COMP:AUX', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
surprised       ['LANG:EN']
surprise-       {'ASP', '-COMP:T/fin', 'PHI:DET:_', 'V', 'LANG:EN', 'ARG', 'COMP:P', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', 'PF:surprise', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'COMP:D', 'LF:surprise', '-COMP:N', 'CLASS:TR', '-VAL', '-SPEC:T/fin'}
talo            {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', 'PF:talo', '-SPEC:C/fin', 'LF:house', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', 'LANG:FI', '-COMP:A', '-COMP:WH', '-COMP:AUX', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
tama            ['LANG:EN']
tama-           {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'PF:tama', 'SPEC:A', 'PHI', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', 'LF:this', '-COMP:V', 'LANG:FI', '-COMP:A', '-COMP:WH', '-COMP:AUX', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'MODAL', 'PHI:DET:_', 'V', '-ASP', 'ARG', '-SPEC:FORCE', '-COMP:v', 'SPEC:*', 'SPEC:ADV', '-COMP:V', 'LANG:FI', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'FIN', 'SPEC:TO/inf', 'LF:must', '!COMP:A/inf', '-COMP:N', 'PF:taytyy', 'COMP:P', '-VAL', '-SPEC:T/fin'}
teki            ['LANG:FI']
teke-           {'ASP', 'PHI:DET:_', 'V', 'ARG', 'ASP:BOUNDED', 'COMP:P', '-SPEC:FORCE', '!COMP:D', 'LF:make', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'LANG:FI', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:A/inf', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'PF:teke', 'COMP:D', '-COMP:N', 'CLASS:TR', '-VAL', '-SPEC:T/fin'}
that            {'COMP:C/fin', 'LANG:EN', 'COMP:T/fin', '-ARG', 'FIN', 'LF:that', '!COMP:*', 'FORCE', 'PF:that', '!PROBE:FIN', '-VAL', '-SPEC:*'}
the             {'-COMP:T/fin', 'LANG:EN', '-SPEC:V', 'PHI:DET:DEF', 'COMP:N', '-SPEC:MA/lla', 'OP', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', '-COMP:D', 'LF:the', 'PF:the', '-ARG', 'PHI:PER:3', 'PHI:NUM:SG', '-COMP:P', '!COMP:*', '-SPEC:Neg/fin', '-COMP:uR', '!PROBE:N', 'D', '-SPEC:T/fin'}
to              {'-COMP:T/fin', 'PHI:DET:_', 'LANG:EN', 'ARG', '-SPEC:C/fin', '-float', '-COMP:ADV', '-SPEC:INF', '-SPEC:C', 'PF:to', 'adjoinable', '-SPEC:P', 'TAIL:V', '-COMP:T', 'PHI:PER:_', 'P', '!COMP:*', '-SPEC:Neg/fin', 'COMP:D', '-COMP:N', '-SPEC:iR', '-VAL', '-SPEC:ADV', '-SPEC:iWH', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', '+SEM:directional', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:uWH', '-COMP:A', 'PHI:NUM:_', 'LF:to', '-SPEC:v', '-SPEC:*'}
to_inf          {'-COMP:FORCE', '-COMP:T/fin', 'COMP:V', 'LANG:EN', '-SPEC:V', 'TO/inf', 'adjoinable', '?ARG', 'COMP:v', '!COMP:*', 'INF', 'LF:TO/inf', '-COMP:C/fin', '-SPEC:v', '-VAL', '-SPEC:T/fin', 'PF:TO/inf'}
towards         {'-SPEC:v', '-COMP:T/fin', 'PHI:DET:_', 'LANG:EN', '-SPEC:V', 'ARG', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:GEN:_', 'PF:towards', '-COMP:uWH', 'LF:towards', '-float', '-COMP:ADV', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', 'TAIL:V', '-COMP:T', '-COMP:A', 'PHI:NUM:_', '-SPEC:*', 'P', 'PHI:PER:_', '!COMP:*', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:iWH', '-COMP:N', '-SPEC:iR', '-VAL', '-SPEC:ADV', '-SPEC:N'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'ASP', 'PHI:DET:_', 'V', 'ARG', 'COMP:P', '-SPEC:FORCE', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'PF:tonaise', 'LANG:FI', 'LF:nudge', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:P', '!COMP:*', 'COMP:D', '-COMP:N', 'CLASS:TR', '-VAL', '-SPEC:T/fin'}
tta             {'-SPEC:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:V', 'ARG', 'LF:without', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:uWH', 'ADV', '-COMP:ADV', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', 'PF:tta', 'SPEC:*', '-COMP:T', 'LANG:FI', '-COMP:A', 'PHI:NUM:_', 'PHI:PER:_', 'P', '!COMP:*', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:iWH', '-COMP:N', '-SPEC:iR', 'COMP:n/MA', '-VAL', '-SPEC:ADV', '-SPEC:N'}
tries           ['LANG:EN']
try-            {'ASP', 'PHI:DET:_', 'V', 'LANG:EN', 'ARG', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', 'PF:try', 'SPEC:ADV', '-COMP:V', 'SEM:internal', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', 'LF:try', '!COMP:-ARG', '!COMP:TO/inf', 'SPEC:D', '-COMP:N', 'COMP:P', '-VAL', '-SPEC:T/fin'}
verifiche       {'COMP:R', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:N', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', 'LF:verification', '-COMP:A', '-COMP:WH', '-COMP:AUX', 'LANG:IT', '-COMP:C/fin', 'N', '-SPEC:R', 'PF:verifiche', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-COMP:N'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'ASP', 'PHI:DET:_', 'V', 'ARG', 'LF:flow', '-SPEC:FORCE', '-COMP:v', '-COMP:D', 'SPEC:ADV', '!COMP:P', '-COMP:V', 'LANG:FI', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:MA/inf', 'PF:virtaa', 'SPEC:D', '-VAL', '-COMP:N', 'COMP:P', 'CLASS:INTR', '-SPEC:T/fin'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'ASP', 'PHI:DET:_', 'V', 'LANG:EN', 'ARG', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'SEM:internal', 'SPEC:P', 'PF:volu', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '!COMP:*', 'LF:want', '-COMP:N', 'COMP:P', '-VAL', '-SPEC:T/fin', '-SPEC:*'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'ASP', 'PHI:DET:_', 'V', 'LANG:EN', 'ARG', 'ASP:BOUNDED', 'COMP:P', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'LF:win', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:P', 'PF:voitta', '!COMP:*', 'COMP:D', 'SEM:achievement', '-COMP:N', 'CLASS:TR', '-VAL', '-SPEC:T/fin'}
wants           ['LANG:EN']
want-           {'ASP', 'PHI:DET:_', 'V', 'LANG:EN', 'ARG', 'COMP:P', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'PF:want', '-SPEC:TO/inf', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:P', '!COMP:*', 'COMP:D', 'LF:want', '-COMP:N', 'CLASS:TR', '-VAL', 'COMP:TO/inf'}
what            ['LANG:EN']
what-           {'COMP:R', 'LANG:EN', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-COMP:WH', 'PHI_N', 'PF:what', 'N', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', 'LF:what'}
which           {'LF:which', '-COMP:T/fin', 'LANG:EN', '-SPEC:V', 'COMP:N', '-SPEC:MA/lla', 'PF:which', 'OP', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', '-COMP:D', '-ARG', '-COMP:P', '!COMP:*', '-SPEC:Neg/fin', '-COMP:uR', '!PROBE:N', 'OP:WH', 'D', '-SPEC:T/fin'}
who             ['LANG:EN']
who-            {'COMP:R', 'LANG:EN', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-COMP:WH', 'LF:who', 'PHI_N', 'N', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', 'PF:who', '-COMP:AUX', '-COMP:*', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
whether         {'COMP:C/fin', 'LANG:EN', 'OP', 'OP:Q', 'Q', 'COMP:T/fin', '-ARG', 'FIN', '!COMP:*', 'FORCE', 'PF:whether', 'LF:whether', 'OP:WH', '!PROBE:FIN', '-VAL', '-SPEC:*'}
yrittaa         ['LANG:FI']
yritta-         {'ASP', 'PHI:DET:_', 'V', 'LANG:EN', 'ARG', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'SEM:internal', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', 'LF:try', '!COMP:-ARG', 'PF:yritta', 'SPEC:D', '!COMP:A/inf', '-COMP:N', 'COMP:P', '-VAL', '-SPEC:T/fin'}
mina            ['LANG:EN']
mina-           {'COMP:R', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', 'LANG:FI', '-COMP:WH', 'PHI_N', 'N', '-SPEC:R', 'PF:mina', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', 'LF:I', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
sina            ['LANG:EN']
sina-           {'PF:sina', 'COMP:R', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', 'LANG:FI', '-COMP:WH', 'PHI_N', 'N', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', 'LF:you', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
han             ['LANG:EN']
han-            {'COMP:R', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', 'LF:s/he', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', 'LANG:FI', '-COMP:WH', 'PHI_N', 'N', '-SPEC:R', '-COMP:N', 'PF:han', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'COMP:R', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', 'LANG:FI', '-COMP:WH', 'PHI_N', 'N', '-SPEC:R', '-COMP:N', 'LF:we', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'COMP:D/rel', 'PF:me', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
te              ['LANG:EN']
te-             {'COMP:R', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', 'LANG:FI', '-COMP:WH', 'PHI_N', 'N', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', 'LF:you', 'PF:te', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'COMP:R', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', 'LANG:FI', '-COMP:WH', 'PHI_N', 'N', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'PF:he', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', '-COMP:C/fin', 'LF:they', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
se              {'-COMP:T/fin', '-SPEC:V', 'COMP:N', '-SPEC:MA/lla', 'LF:the/that', 'OP', 'PF:se', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', '-COMP:D', 'LANG:FI', '-ARG', '-COMP:P', '!COMP:*', '-SPEC:Neg/fin', '-COMP:uR', '!PROBE:N', 'D', '-SPEC:T/fin'}
sen             {'TAIL:*POL:NEG', '-COMP:T/fin', 'TAIL:PHI', '-SPEC:V', 'COMP:N', '-SPEC:MA/lla', 'LF:the/that', 'OP', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', '-COMP:D', 'LANG:FI', 'TAIL:ASP', '-ARG', '-COMP:P', '!COMP:*', 'PF:sen', '-SPEC:Neg/fin', '-COMP:uR', '!PROBE:N', 'D', '-SPEC:T/fin'}
I               ['LANG:EN']
I-              {'COMP:R', 'LANG:EN', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-COMP:WH', 'PHI_N', 'N', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'PF:I', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', 'LF:I', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
you             ['LANG:EN']
you-            {'COMP:R', 'LANG:EN', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-COMP:WH', 'PHI_N', 'N', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', 'LF:you', '-SPEC:V', 'COMP:D/rel', 'PF:you', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
he              ['LANG:EN']
he-             {'LF:he', 'COMP:R', 'LANG:EN', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-COMP:WH', 'PHI_N', 'N', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'PF:he', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
she             ['LANG:EN']
she-            {'COMP:R', 'LANG:EN', 'COMP:uR', '-SPEC:C/fin', 'LF:she', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-COMP:WH', 'PHI_N', 'N', '-SPEC:R', '-COMP:N', 'PF:she', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
we              ['LANG:EN']
we-             {'COMP:R', 'LANG:EN', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-COMP:WH', 'PHI_N', 'N', '-SPEC:R', 'PF:we', '-COMP:N', 'LF:we', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
you_pl          ['LANG:EN']
you_pl-         {'COMP:R', 'LANG:EN', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', 'LF:you_pl', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', 'PHI', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', '-COMP:V', '-COMP:A', '-COMP:WH', '-COMP:AUX', 'PF:you_pl', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
they            ['LANG:EN']
they-           {'COMP:R', 'LANG:EN', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', 'PF:they', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-COMP:WH', 'PHI_N', 'N', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', '-COMP:C/fin', 'LF:they', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
it              ['LANG:EN']
it-             {'-COMP:T/fin', 'LANG:EN', '-SPEC:V', 'COMP:N', '-SPEC:MA/lla', 'OP', 'LF:it/that', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', '-COMP:D', '-ARG', '-COMP:P', '!COMP:*', 'PF:it', '-SPEC:Neg/fin', '-COMP:uR', '!PROBE:N', 'D', '-SPEC:T/fin'}
io              ['LANG:EN']
io-             {'COMP:R', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-COMP:WH', 'PF:io', 'PHI_N', 'N', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', 'LANG:IT', 'LF:I', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
tu              ['LANG:EN']
tu-             {'COMP:R', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', 'PF:tu', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-COMP:WH', 'PHI_N', 'N', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', 'LF:you', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', 'LANG:IT', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
lui             ['LANG:EN']
lui-            {'LF:he', 'COMP:R', 'PF:lui', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-COMP:WH', 'PHI_N', 'N', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', 'LANG:IT', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
lei             ['LANG:EN']
lei-            {'COMP:R', 'COMP:uR', '-SPEC:C/fin', 'LF:she', 'PF:lei', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-COMP:WH', 'PHI_N', 'N', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', 'LANG:IT', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
noi             ['LANG:EN']
noi-            {'COMP:R', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-COMP:WH', 'PHI_N', 'N', '-SPEC:R', 'PF:noi', '-COMP:N', 'LF:we', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', 'LANG:IT', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
voi             ['LANG:EN']
voi-            {'COMP:R', 'COMP:uR', 'LF:you_pl', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-COMP:WH', 'PHI_N', 'N', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'PF:voi', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', 'LANG:IT', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
loro            ['LANG:EN']
loro-           {'COMP:R', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-COMP:WH', 'PHI_N', 'N', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'PF:loro', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', 'LANG:IT', '-COMP:C/fin', 'LF:they', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
mi              ['LANG:EN']
mi-             {'COMP:R', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-COMP:WH', 'PHI_N', 'N', 'LF:me', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', 'CL', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'PF:mi(cl)', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', 'LANG:IT', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
la              ['LANG:EN']
la-             {'COMP:R', 'COMP:uR', '-SPEC:C/fin', 'PF:la(cl)', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-COMP:WH', 'PHI_N', 'N', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', 'CL', '-SPEC:V', 'COMP:D/rel', 'LF:her', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', 'LANG:IT', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
lo              ['LANG:EN']
lo-             {'COMP:R', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', 'COMP:T/prt', '-SPEC:P', '-COMP:V', '-COMP:WH', 'PHI_N', 'N', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', 'CL', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', 'LANG:IT', '-COMP:C/fin', 'LF:him', 'PF:lo(cl)', 'COMP:R/D', 'COMP:P'}
si              ['LANG:EN']
si-             {'COMP:R', 'LF:3sg', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-COMP:WH', 'PHI_N', 'N', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', 'CAL:CL', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', 'PF:si(cl)', '-COMP:AUX', '-COMP:*', 'LANG:IT', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'COMP:R', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', '-COMP:WH', 'PHI_N', 'N', '-SPEC:R', '-COMP:N', 'LF:there', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', 'PF:ci', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', '-COMP:A', '-COMP:AUX', '-COMP:*', 'LANG:IT', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
[-n]            {'PHI:PER:1', 'PHI', 'LANG:FI', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG'}
[-t]            {'PHI', 'PHI:PER:2', 'LANG:FI', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG'}
[-V]            {'PHI', 'LANG:FI', 'inflectional', 'PHI:NUM:SG', 'PHI:PER:3'}
[-mme]          {'PHI:PER:1', 'PHI', 'LANG:FI', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:PL'}
[-mme]          {'PHI:PER:1', 'LANG:FI', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:PL'}
[-tte]          {'PHI', 'PHI:PER:2', 'LANG:FI', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:PL'}
[-vat]          {'PHI', 'LANG:FI', 'inflectional', 'PHI:PER:3', 'PHI:NUM:PL'}
[-ni]           {'PHI:PER:1', 'PHI', 'LANG:FI', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG'}
[-si]           {'PHI', 'PHI:PER:2', 'LANG:FI', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG'}
[-nsa]          {'PHI', 'PHI:NUM:SG', 'LANG:FI', 'inflectional', 'PHI:PER:3'}
[-an]           {'PHI', 'PHI:NUM:SG', 'LANG:FI', 'PHI:DET:DEF', 'inflectional', 'PHI:PER:3'}
[-nne]          {'PHI:PER:2', 'LANG:FI', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:PL'}
[-s]            {'PHI', 'PHI:GEN:M', 'LANG:EN', 'PHI:GEN:F', 'inflectional', 'PHI:NUM:SG', 'PHI:PER:3'}
[-0]            {'PHI:PER:2', 'LANG:EN', 'PHI:DET:DEF', 'inflectional', 'PHI:NUM:SG', 'PHI:NUM:PL', 'PHI:PER:3', 'PHI:PER:1', 'PHI', 'PHI:GEN:N'}
[-o]            {'PHI:PER:1', 'PHI', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'LANG:IT'}
[-i]            {'PHI', 'PHI:PER:2', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'LANG:IT'}
[-a]            {'PHI', 'PHI:DET:DEF', 'inflectional', 'PHI:NUM:SG', 'LANG:IT', 'PHI:PER:3'}
[-e]            {'PHI', 'PHI:DET:DEF', 'inflectional', 'PHI:NUM:SG', 'LANG:IT', 'PHI:PER:3'}
[-iamo]         {'PHI:PER:1', 'PHI', 'LANG:IT', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:PL'}
[-te]           {'PHI', 'PHI:PER:2', 'LANG:IT', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:PL'}
[-no]           {'PHI', 'LANG:IT', 'PHI:DET:DEF', 'inflectional', 'PHI:PER:3', 'PHI:NUM:PL'}
[-nom]          {'NOM', 'LANG:EN', 'inflectional', 'adjoinable', 'TAIL:FIN,ARG,VAL'}
[-par]          {'LANG:FI', 'adjoinable', 'inflectional', 'TAIL:ARG,-VAL', 'PAR'}
[-gen]          {'TAIL:INF,ARG', '-float', 'LANG:EN', 'inflectional', 'GEN'}
gen             {'TAIL:INF,ARG', '-float', 'LANG:EN', 'inflectional', 'GEN'}
[-n_acc]        {'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'TAIL:PHI', 'n-ACC', 'inflectional', 'adjoinable'}
[-t_acc]        {'t-ACC', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'inflectional', 'adjoinable'}
[-0_acc]        {'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', '0_ACC', 'LANG:FI', 'TAIL:*PHI', 'inflectional', 'adjoinable'}
asp             {'LANG:EN', 'inflectional', 'ASP:BOUNDED'}
a'              {'PF:a', 'a', 'LANG:X', 'LF:A'}
b'              {'PF:b', 'b', 'LF:B', 'LANG:X'}
b''             {'PF:b', 'b', '-COMP:c', 'LANG:EN', 'LF:B'}
c''             {'PF:c', 'LANG:EN', 'SPEC:a', 'LF:C', 'c'}
c'              {'LF:C', 'c', 'LANG:X', 'PF:c'}
d'              {'d', 'LANG:', 'LF:D', 'PF:d'}
a''             ['LANG:EN']
x'              {'PF:x', 'LF:X', 'LANG:X', 'x'}
y'              {'PF:y', 'y', 'LANG:X', 'LF:Y'}
z'              {'z', 'PF:x', 'LANG:X', 'LF:Z'}
John'           {'LANG:X', "N'", 'PF:John', 'LF:John'}
admires'        {'PF:admires', "V'", 'LANG:X', 'LF:admires'}
admires''       {'ASP', 'PHI:DET:_', 'V', 'LANG:EN', 'ARG', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:v', 'PF:admires', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PHI:NUM:_', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:D', 'LF:admires', '-COMP:N', 'COMP:P', '-VAL', '-SPEC:T/fin'}
Mary'           {"N'", 'PF:Mary', 'LF:mary', 'LANG:X'}
T/fin           {'-COMP:T/fin', 'COMP:V', 'PHI:DET:_', 'LANG:EN', '!SPEC:*', '-SPEC:V', 'ARG', 'VAL', '-SPEC:T/fin', 'PHI:GEN:_', 'PF:T', 'T/fin', 'LF:T', '-SPEC:Neg', '-SPEC:C', 'SPEC:*', 'SPEC:FORCE', 'SPEC:C/fin', '-SPEC:TO/inf', 'PHI:NUM:_', 'PHI:PER:_', 'COMP:v', 'FIN', 'SPEC:TO/inf', '!COMP:*', 'SPEC:D', '!PROBE:V', '-SPEC:v', 'COMP:T/prt', '-COMP:INF', 'T', '-SPEC:N'}
v               {'ASP', 'LF:v', 'COMP:V', 'PHI:DET:_', 'PHI:NUM:_', 'LANG:EN', 'PHI:PER:_', 'ARG', 'v', '!COMP:*', 'PHI:GEN:_', 'SPEC:D', '!PROBE:V', '-VAL', 'PF:v', '-SPEC:N'}
C/fin           {'LANG:EN', 'LF:C/fin', 'C', 'VAL', '-SPEC:C/fin', 'COMP:Neg/fin', 'C/fin', 'SPEC:*', 'COMP:T/fin', '-ARG', 'FIN', '!COMP:*', '-COMP:T/prt', '-COMP:C/fin', 'PF:C', '!PROBE:FIN', '-SPEC:T/fin', '-SPEC:N'}
T               {'-COMP:NEG', 'COMP:V', 'PHI:DET:_', 'LANG:EN', '-SPEC:V', 'ARG', 'VAL', '-SPEC:FORCE', '-SPEC:T/fin', 'PF:T', 'PHI:GEN:_', 'LF:T', 'SPEC:*', 'PHI:NUM:_', 'PHI:PER:_', 'COMP:v', 'FIN', '!COMP:*', 'SPEC:D', '!PROBE:V', 'COMP:T/prt', 'T', '-SPEC:N'}
T/prt           {'-COMP:NEG', 'COMP:V', 'PHI:DET:_', 'LF:T/prt', 'LANG:EN', '-SPEC:V', 'ARG', 'VAL', '-SPEC:C/fin', '-SPEC:FORCE', 'PHI:GEN:_', 'T', 'SPEC:*', 'PHI:NUM:_', 'PHI:PER:_', 'COMP:v', 'FIN', 'PF:T/prt', '!COMP:*', 'SPEC:D', 'COMP:D', '!PROBE:V', 'COMP:T/prt', 'T/prt', '-SPEC:T/fin', '-SPEC:N'}
a0              {'PF:A', 'LANG:EN', 'LF:A', '-adjoinable', 'TAIL:D', '-SPEC:A', 'COMP:0', 'A', '-SPEC:D'}
n               {'COMP:R', 'COMP:V', 'PHI:DET:_', 'LANG:EN', 'ARG', 'n', 'COMP:uR', '-SPEC:C/fin', 'VAL', '!SPEC:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:P', '-COMP:V', 'PHI:PER:_', '-COMP:WH', 'COMP:v', '!COMP:*', 'N', '-SPEC:R', '-COMP:N', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:N', '!SPEC:*', '-SPEC:V', 'COMP:D/rel', '-SPEC:FORCE', 'PHI:GEN:_', 'PF:n', 'COMP:0', 'SPEC:A', 'COMP:C', '-COMP:VA/inf', 'LF:n', 'SPEC:*', '-COMP:A', 'PHI:NUM:_', '-COMP:AUX', 'INF', '-COMP:C/fin', 'COMP:T/prt', 'COMP:R/D', 'COMP:P'}
impass          {'ASP', 'COMP:V', 'PHI:DET:_', 'LF:impass', 'LANG:EN', 'PHI:NUM:_', 'PHI:PER:_', 'ARG', 'v', 'PF:impass', '!COMP:*', 'PHI:GEN:_', 'SPEC:D', '!PROBE:V', '-VAL', '-SPEC:N'}
cau             {'ASP', 'COMP:V', 'PHI:DET:_', 'PHI:NUM:_', 'LANG:EN', 'PHI:PER:_', 'ARG', 'v', 'PF:Cau', '!COMP:*', 'PHI:GEN:_', 'SPEC:D', '!PROBE:V', 'LF:v/Cause', '-VAL', '-SPEC:N'}
INF             {'-COMP:FORCE', '-COMP:T/fin', 'PF:INF', 'COMP:V', 'LANG:EN', '-SPEC:V', 'COMP:v', '!COMP:*', 'INF', 'LF:INF', '-COMP:C/fin', '-SPEC:T/fin'}
prtcpl          {'-COMP:FORCE', '-COMP:NEG', '-COMP:T/fin', 'COMP:V', 'LF:T/prt', 'LANG:EN', '-SPEC:V', 'PHI:DET:_', 'ARG', 'VAL', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:GEN:_', 'SPEC:*', 'PHI:NUM:_', 'PHI:PER:_', 'COMP:v', 'FIN', 'PF:T/prt', '!COMP:*', 'INF', 'SPEC:D', 'COMP:D', '-COMP:C/fin', '!PROBE:V', 'COMP:T/prt', 'T/prt', 'T', '-SPEC:N'}
TO/inf          {'-COMP:FORCE', '-COMP:T/fin', 'COMP:V', 'LANG:EN', '-SPEC:V', 'TO/inf', 'adjoinable', '?ARG', 'COMP:v', '!COMP:*', 'INF', 'LF:TO/inf', '-COMP:C/fin', '!COMP:V', '-SPEC:v', '-VAL', '-SPEC:T/fin', 'PF:TO/inf'}
A/inf           {'-COMP:FORCE', '-COMP:T/fin', 'COMP:V', 'LANG:EN', '-SPEC:V', 'A/inf', '?VAL', 'PF:A/inf', 'SPEC:*', 'LF:A/inf', '?ARG', 'COMP:v', '!COMP:*', 'INF', '-SPEC:Neg/fin', '-COMP:C/fin', '-SPEC:T/fin'}
ARE/inf         {'-COMP:FORCE', '-COMP:T/fin', 'COMP:V', '-adjoinable', 'LANG:EN', '-SPEC:V', 'ARE/inf', 'VAL', 'PF:are', 'LF:ARE/inf', 'SPEC:*', '?ARG', 'COMP:v', '!COMP:*', 'INF', '-COMP:C/fin', '-SPEC:T/fin'}
ESSA/inf        {'-COMP:FORCE', '-COMP:T/fin', 'COMP:V', 'LANG:EN', '-SPEC:V', 'LF:while', '-SPEC:FORCE', '-SPEC:T/fin', 'TAIL:T', '?VAL', 'ADV', 'adjoinable', 'SPEC:*', '?ARG', 'COMP:v', '!COMP:*', 'INF', '-SPEC:Neg/fin', '-COMP:C/fin', 'ESSA/inf', 'PF:essa', '-SPEC:N'}
TUA/inf         {'-COMP:FORCE', '-COMP:T/fin', 'COMP:V', 'LF:after', '!SPEC:*', 'LANG:EN', '-SPEC:V', 'ARG', 'PHI:DET:_', 'VAL', '-SPEC:FORCE', 'PHI:GEN:_', 'TAIL:T', 'ADV', 'adjoinable', 'SPEC:*', 'PHI:NUM:_', 'PHI:PER:_', 'COMP:v', '!COMP:*', 'INF', '-SPEC:Neg/fin', 'PF:tua', '-COMP:C/fin', 'TUA/inf', '-SPEC:T/fin', '-SPEC:N'}
VA/inf          {'-COMP:FORCE', '-COMP:T/fin', 'COMP:V', 'PHI:DET:_', '!SPEC:*', 'LANG:EN', '-SPEC:V', 'ARG', 'VA/inf', 'VAL', 'PHI:GEN:_', 'LF:VA', 'PF:vAn', 'SPEC:*', 'PHI:NUM:_', 'PHI:PER:_', 'COMP:v', '!COMP:*', 'INF', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:N'}
MA/ssa          {'COMP:V', 'PHI:DET:_', 'LANG:EN', 'MA/inf', 'ARG', '-SPEC:FORCE', 'PHI:GEN:_', 'ADV', 'adjoinable', 'TAIL:V', 'PHI:NUM:_', 'LF:in_doing', '-SPEC:*', 'COMP:v', 'PHI:PER:_', 'PF:massa', '-SPEC:Neg/fin', 'MA/ssa', '-VAL', '-SPEC:T/fin', '-SPEC:N'}
MA/tta          {'PHI:DET:_', 'adjoinable', 'PF:matta', 'LANG:EN', 'LF:without_doing', 'MA/inf', 'ARG', 'PHI:NUM:_', 'PHI:PER:_', '-SPEC:FORCE', '-SPEC:Neg/fin', 'PHI:GEN:_', 'TAIL:T', 'ADV', '-VAL', '-SPEC:T/fin', '-SPEC:N'}
MA/lla          {'COMP:V', 'PHI:DET:_', 'LANG:EN', 'ARG', 'TAIL:T', 'adjoinable', 'LF:by_doing', 'PHI:PER:_', 'COMP:v', '-SPEC:Neg/fin', '-VAL', '-SPEC:T/fin', '-SPEC:N', 'MA/inf', '-SPEC:FORCE', 'PHI:GEN:_', 'ADV', 'PHI:NUM:_', 'PF:malla'}
MA/inf          {'COMP:V', 'PHI:DET:_', 'LANG:EN', 'ARG', 'adjoinable', 'PF:maan', 'TAIL:V', 'PHI:PER:_', 'COMP:v', '-SPEC:Neg/fin', '-VAL', '-SPEC:T/fin', '-SPEC:N', 'MA/inf', '-SPEC:FORCE', 'PHI:GEN:_', 'ADV', 'PHI:NUM:_', 'LF:to_do'}
E/inf           {'SPEC:*', 'LANG:FI', 'adjoinable', '-ARG', '-SPEC:FORCE', '-SPEC:Neg/fin', 'TAIL:T', 'ADV', 'LF:by', 'PF:en', '-VAL', '-SPEC:T/fin', '-SPEC:N'}
BE-             {'ASP', '-COMP:T/fin', 'V', 'LANG:EN', '-SPEC:FORCE', '-COMP:v', 'LF:BE', 'PF:BE', 'SPEC:ADV', '-COMP:V', 'SPEC:P', '-ARG', 'SPEC:TO/inf', '!COMP:*', 'SPEC:D', 'COPULA', '-COMP:N', 'COMP:T/prt', 'COMP:P', '-VAL', '-SPEC:T/fin'}
D               {'-COMP:T/fin', 'LANG:EN', 'PF:D', '-SPEC:V', 'COMP:N', '-SPEC:MA/lla', 'OP', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', '-COMP:D', '-ARG', '-COMP:P', '!COMP:*', '-SPEC:Neg/fin', '-COMP:uR', '!PROBE:N', 'LF:D', 'D', '-SPEC:T/fin'}
D/rel           {'-COMP:T/fin', 'LANG:EN', '-SPEC:V', 'COMP:N', 'inflectional', '-SPEC:MA/lla', 'OP:REL', 'OP', '-SPEC:INF', 'adjoinable', '-SPEC:C', '-SPEC:P', '-COMP:D', 'OP:_', '-ARG', 'LF:D/rel', 'PF:D/rel', '!COMP:*', '-SPEC:Neg/fin', '-COMP:uR', '-COMP:C/fin', '!PROBE:N', 'D', '-SPEC:T/fin', 'D/rel'}
P               {'-SPEC:v', '-COMP:T/fin', 'PHI:DET:_', 'LANG:EN', '-SPEC:V', 'ARG', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:GEN:_', '-COMP:uWH', '-float', '-COMP:ADV', '-SPEC:INF', '-SPEC:C', 'adjoinable', '-SPEC:P', '-COMP:T', '-COMP:A', 'PHI:NUM:_', '-SPEC:*', 'P', 'PF:P', 'PHI:PER:_', '!COMP:*', '-SPEC:Neg/fin', 'LF:P', 'COMP:D', '-SPEC:iWH', '-COMP:N', '-SPEC:iR', '-VAL', '-SPEC:ADV', '-SPEC:N'}
pro             ['LANG:EN']
pro-            {'COMP:R', 'LANG:EN', '-SPEC:V', 'COMP:D/rel', 'COMP:uR', '-SPEC:C/fin', '-SPEC:T/fin', 'PF:(pro)', '-SPEC:FORCE', '-COMP:v', 'SPEC:A', 'PHI', '-SPEC:INF', '-SPEC:uWH', 'COMP:C', '-SPEC:P', '-COMP:VA/inf', 'LF:pro', '-COMP:V', '-COMP:A', '-COMP:WH', '-COMP:AUX', '-COMP:C/fin', 'N', '-SPEC:R', '-COMP:N', 'COMP:T/prt', 'COMP:R/D', 'COMP:P', '-SPEC:ADV', '-SPEC:N'}
cl              {'LEFT:T/fin', 'LEFT:D,CL', 'RIGHT:ARE/inf', 'LANG:EN', 'RIGHT:PRG', 'CL', 'inflectional'}
inc             {'inflectional', 'INCORPORATED', 'LANG:EN'}
sg              {'inflectional', 'PHI:NUM:SG', 'LANG:EN'}
pl              {'inflectional', 'PHI:NUM:PL', 'LANG:EN'}
1p              {'PHI:PER:1', 'inflectional', 'LANG:EN'}
2p              {'inflectional', 'PHI:PER:2', 'LANG:EN'}
3p              {'inflectional', 'PHI:PER:3', 'LANG:EN'}
def             {'PHI:DET:DEF', 'inflectional', 'LANG:EN'}
indef           {'inflectional', 'PHI:DET:INDEF', 'LANG:EN'}
hum             {'inflectional', 'PHI:HUM:HUM', 'LANG:EN'}
nonhum          {'inflectional', 'PHI:HUM:NONHUM', 'LANG:EN'}
m               {'inflectional', 'PHI:GEN:M', 'LANG:EN'}
f               {'PHI:GEN:F', 'inflectional', 'LANG:EN'}
nom             {'NOM', 'inflectional', 'TAIL:FIN,!COMP:*,VAL', 'LANG:EN'}
acc             {'TAIL:v', 'inflectional', 'LANG:EN', 'ACC'}
dat             {'TAIL:v', 'inflectional', 'DAT', 'LANG:EN'}
uC/op           {'inflectional', 'uC/op', 'LANG:EN'}
wh              {'inflectional', 'OP:WH', 'OP:_', 'LANG:EN'}
wh_             {'OP', 'OP:_', 'LANG:EN', 'inflectional', 'FORCE:OP:WH'}
top             {'inflectional', 'OP:TOP', 'LANG:EN'}
foc             {'inflectional', 'OP:FOC', 'LANG:EN'}
C/op            {'inflectional', 'OP:C/OP', 'LANG:EN'}
Q               {'OP', 'OP:Q', 'LANG:EN', 'inflectional', 'OP:WH'}
