ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'COMP:ARE/inf', 'LF:to', '-SPEC:C', '-SPEC:V', '-SPEC:iWH', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:P', '-VAL', '-SPEC:*', '-COMP:uWH', '-COMP:ADV', '-SPEC:ADV', '-SPEC:T/fin', '-COMP:N', '-COMP:T/fin', '-ARG', 'PF:a', '-SPEC:N', 'LANG:IT', 'P', '-SPEC:v', 'COMP:D', '-SPEC:iR', '-SPEC:Neg/fin', '-SPEC:FORCE', '!COMP:*', 'adjoinable'}
a_D             {'-SPEC:C', '-SPEC:V', '-SPEC:INF', 'COMP:N', '-SPEC:P', 'OP', 'PF:D', 'LANG:EN', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:D', '-SPEC:MA/lla', 'D', 'LF:D', '-ARG', '-SPEC:N', '!PROBE:N', '-COMP:uR', '-SPEC:Neg/fin', '-COMP:D', '!COMP:*', 'adjoinable'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'SPEC:ADV', '-COMP:Neg', 'PF:admire', 'COMP:P', 'PHI:PER:_', 'PHI:DET:_', 'CLASS:TR', '-VAL', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', '-SPEC:Neg', 'ASP', 'ARG', '-COMP:P', 'COMP:D', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', '!COMP:*', 'PHI:GEN:_', 'LF:admire'}
admire*         ['LANG:EN']
T/fin*          {'NO_DET', 'LF:T', 'CAT:T/fin', "PF:T/fin'", '-VAL', 'NO_NUMBER', 'LANG:EN', '!SPEC:*'}
v*              {'-VAL', 'NO_DET', 'NO_NUMBER', 'PF:v', 'LF:v', 'LANG:EN', 'CAT:v'}
admire**        ['LANG:EN']
T/fin**         {'NO_DET', "PF:T/fin''", 'LF:T', 'PHI:PER:3', 'CAT:T/fin', '-VAL', 'NO_PERSON', 'NO_NUMBER', 'LANG:EN', '!SPEC:*'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'SPEC:ADV', 'COMP:P', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'PF:adora', 'ASP', 'ARG', 'LANG:IT', 'COMP:D', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'LF:admire'}
antaa           ['LANG:FI']
anta-           {'SPEC:ADV', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-COMP:FIN', 'LF:give', '-SPEC:T/fin', '-COMP:N', '-COMP:T/fin', '-COMP:V', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'ARG', 'COMP:D', 'ASP:BOUNDED', 'V', '+SEM:directional', 'CLASS:DITR', 'PF:antaa', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', '!COMP:*'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'SPEC:ADV', 'COMP:P', 'PHI:PER:_', 'PHI:DET:_', 'LF:ask', '-VAL', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'SPEC:D', 'ASP', 'ARG', 'COMP:D', 'PF:ask', 'V', 'SEM:internal', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_'}
ask-            {'SPEC:ADV', 'COMP:P', 'PHI:PER:_', 'PHI:DET:_', 'LF:ask', '-VAL', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'SPEC:D', 'ASP', 'ARG', 'COMP:D', 'PF:ask', 'V', 'SEM:internal', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'COMP:P', '-SPEC:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'LF:key', 'SPEC:A', '-SEM:directional', '-COMP:C/fin', 'N', 'COMP:uR', 'PF:avain', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'COMP:P', '-SPEC:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', '-SEM:directional', 'PF:auto', '-COMP:C/fin', 'N', 'COMP:uR', 'LF:car', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D'}
city            {'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'LF:city', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', 'PF:city', '-SPEC:N', 'SPEC:A', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D'}
che             ['LANG:IT']
che-            {'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', '-SPEC:R', 'COMP:R', '-SPEC:N', 'SPEC:A', 'PHI_N', 'LF:who', 'LANG:IT', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', 'PF:che', '-COMP:v', '-COMP:D', '-COMP:*'}
chiamato        ['LANG:IT']
chiamata-       {'SPEC:ADV', 'COMP:P', 'PHI:PER:_', 'PHI:DET:_', '-VAL', 'PF:chiamato', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', 'LF:called', 'LANG:IT', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_'}
danno           {'COMP:P', '-SPEC:V', 'LF:damage', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', 'LANG:IT', '-COMP:C/fin', 'N', 'PF:danno', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'COMP:ARE/inf', 'SPEC:ADV', 'COMP:P', 'PHI:PER:_', 'PHI:DET:_', 'PF:detest', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', 'LF:detest', 'LANG:IT', 'COMP:D', 'V', 'SEM:internal', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_'}
devono          ['LANG:EN']
deva-           {'COMP:ARE/inf', 'SPEC:ADV', 'COMP:P', 'PHI:PER:_', 'PHI:DET:_', '-ASP', 'LF:must', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'SPEC:D', 'ARG', 'LANG:IT', 'V', 'PF:deva', 'SEM:internal', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_'}
di              {'SPEC:*', '-SPEC:C', '-SPEC:V', 'LANG:FI', '-adjoinable', 'PHI:PER:_', '-SPEC:iWH', 'PF:di', '-SPEC:INF', '-SPEC:C/fin', 'PHI:DET:_', '-SPEC:P', '-VAL', '-COMP:uWH', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:N', '-COMP:T/fin', 'PHI:NUM:_', 'ARG', '-SPEC:N', 'P', '-SPEC:v', 'COMP:D', '-SPEC:iR', '-SPEC:Neg/fin', '-SPEC:FORCE', '!COMP:*', 'LF:of'}
does            {'SPEC:*', 'COMP:v', 'FIN', 'PHI:PER:_', '!PROBE:V', 'PHI:NUM:_', 'T/fin', 'T', '-SPEC:N', 'PHI:GEN:M', 'VAL', '-SPEC:FORCE', 'SPEC:TO/inf', 'PHI:GEN:F', 'PF:does', 'COMP:T/prt', '!SPEC:D', '-SPEC:V', 'LF:does', 'COMP:V', 'PHI:DET:_', '-SPEC:C/fin', '-SPEC:T/fin', 'LANG:EN', '-COMP:T/fin', 'SPEC:D', '-SPEC:Neg', 'ARG', '-SPEC:v', 'COMP:D', 'COMP:Neg', 'PHI:PER:3', '-COMP:INF', '-SPEC:TO/inf', 'PHI:NUM:SG', '!COMP:*', 'PHI:GEN:_'}
does_C          ['LANG:EN']
does-           {'SPEC:*', 'COMP:v', 'FIN', 'PHI:PER:_', '!PROBE:V', 'PHI:NUM:_', 'T/fin', 'T', '-SPEC:N', 'PHI:GEN:M', 'VAL', '-SPEC:FORCE', 'SPEC:TO/inf', 'PHI:GEN:F', 'PF:does', 'COMP:T/prt', '!SPEC:D', '-SPEC:V', 'LF:does', 'COMP:V', 'PHI:DET:_', '-SPEC:C/fin', '-SPEC:T/fin', 'LANG:EN', '-COMP:T/fin', 'SPEC:D', '-SPEC:Neg', 'ARG', '-SPEC:v', 'COMP:D', 'COMP:Neg', 'PHI:PER:3', '-COMP:INF', '-SPEC:TO/inf', 'PHI:NUM:SG', '!COMP:*', 'PHI:GEN:_'}
dorme           ['LANG:IT']
dorme-          {'SPEC:ADV', 'PF:dorme', 'COMP:P', '!SPEC:D', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', 'V', 'LF:sleep', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'SPEC:*', 'COMP:T/prt', 'FIN', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:T/fin', '!COMP:*', 'POL:NEG', 'NEG', 'LF:neg', 'PHI:NUM:_', '-SPEC:T', 'Neg/fin', 'ARG', '!SPEC:*', 'PF:ei', 'VAL', 'SEM:internal', '%SPEC:INF', '!COMP:T'}
e-              {'SPEC:*', 'COMP:T/prt', 'FIN', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:T/fin', '!COMP:*', 'POL:NEG', 'NEG', 'LF:neg', 'PHI:NUM:_', '-SPEC:T', 'Neg/fin', 'ARG', '!SPEC:*', 'PF:ei', 'VAL', 'SEM:internal', '%SPEC:INF', '!COMP:T'}
elaa            ['LANG:FI']
ela-            {'SPEC:ADV', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'LF:live', 'SPEC:D', 'ASP', 'CLASS:INTR', 'ARG', '-COMP:D', 'V', 'PF:elaa', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf'}
etsii           ['LANG:FI']
etsi-           {'SPEC:ADV', 'COMP:P', '!COMP:D', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', '-COMP:v', 'ASP', 'ARG', 'COMP:D', 'V', '-SPEC:FORCE', 'LF:search', 'SPEC:P', 'PF:etsi', 'SPEC:TO/inf'}
etta            {'-ARG', 'PF:etta', 'FIN', 'LANG:FI', 'COMP:C/fin', 'COMP:T/fin', '-VAL', '-SPEC:*', 'FORCE', 'LF:that', '!COMP:*', '!PROBE:T/fin'}
flow'           {'SPEC:ADV', 'PF:flow', 'COMP:P', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'SPEC:D', 'ASP', 'ARG', 'V', '-SPEC:FORCE', 'LF:flow', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_'}
from            {'-SPEC:C', '-SPEC:V', 'PHI:PER:_', 'PF:from', '-SPEC:iWH', '-SPEC:INF', '-SPEC:C/fin', 'PHI:DET:_', '-SPEC:P', '-VAL', '-SPEC:*', '-COMP:uWH', 'TAIL:V,+SEM:directional', 'LANG:EN', '-SPEC:ADV', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-COMP:T/fin', 'PHI:NUM:_', 'ARG', '-SPEC:N', 'LF:from', 'P', '-SPEC:v', 'COMP:D', '-SPEC:iR', '-float', '-SPEC:Neg/fin', '-SPEC:FORCE', '!COMP:*', 'PHI:GEN:_', 'adjoinable'}
gave            ['LANG:EN']
give-           {'SPEC:ADV', 'COMP:P', 'PHI:PER:_', 'PHI:DET:_', '-VAL', 'LF:give', '-COMP:FIN', 'LANG:EN', '-SPEC:T/fin', '-COMP:N', '-COMP:T/fin', '-COMP:V', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'ARG', 'COMP:D', 'PF:give', 'V', '+SEM:directional', 'CLASS:DITR', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', '!COMP:*', 'PHI:GEN:_'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'PF:Giuseppe', 'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', '-SEM:directional', 'LANG:IT', '-COMP:C/fin', 'N', 'COMP:uR', 'LF:Giuseppe', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'SPEC:ADV', 'COMP:P', 'LANG:FI', 'LF:want', 'PHI:PER:_', 'PHI:DET:_', 'CLASS:TR', '-VAL', '-SPEC:*', 'COMP:A/inf', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'PF:haluaa', 'ASP', 'ARG', '-COMP:P', 'COMP:D', 'ASP:BOUNDED', 'V', 'SEM:internal', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', '!COMP:*'}
hairitsee       ['LANG:FI']
hairitse-       {'SPEC:ADV', 'LF:disturb', 'COMP:P', '!COMP:D', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-COMP:FIN', '-SPEC:T/fin', '-COMP:N', 'PF:hairitsee', '-COMP:T/fin', '-COMP:V', 'SPEC:D', 'PHI:NUM:_', 'ASP', 'ARG', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'SPEC:ADV', 'SPEC:*', 'COMP:P', 'PHI:PER:_', 'LF:have', 'PHI:DET:_', '-ASP', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'SPEC:D', 'ARG', 'LANG:IT', 'V', 'SEM:internal', 'PF:ha', '-SPEC:FORCE', 'COMP:T', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'SPEC:ADV', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'SPEC:D', 'LF:disappear', 'CLASS:INTR', 'ASP', 'ARG', '-COMP:D', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'PF:havia'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'SPEC:ADV', 'COMP:P', '!COMP:D', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', 'CLASS:TR', '-VAL', '-COMP:FIN', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', 'PF:ihaile-', '-COMP:P', 'COMP:D', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', '!COMP:*', 'LF:admire'}
il              {'-SPEC:C', '-SPEC:V', '-SPEC:INF', 'COMP:N', '-SPEC:P', 'OP', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:D', 'PF:il', '-SPEC:MA/lla', 'D', '-ARG', '-SPEC:N', 'LANG:IT', '-COMP:D', '!PROBE:N', '-COMP:uR', '-SPEC:Neg/fin', 'LF:the', '!COMP:*', 'adjoinable'}
i               {'-SPEC:C', '-SPEC:V', '-SPEC:INF', 'COMP:N', '-SPEC:P', 'OP', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:D', 'PF:il', '-SPEC:MA/lla', 'D', '-ARG', '-SPEC:N', 'LANG:IT', '-COMP:D', '!PROBE:N', '-COMP:uR', '-SPEC:Neg/fin', 'LF:the', '!COMP:*', 'adjoinable'}
in              {'-SPEC:C', '-SPEC:V', 'PF:in', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:INF', '-SPEC:C/fin', 'PHI:DET:_', '-SPEC:P', '-VAL', '-COMP:uWH', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:N', '-COMP:T/fin', 'PHI:NUM:_', 'ARG', '-SPEC:N', 'LANG:IT', 'P', '-SPEC:v', 'COMP:D', '-SPEC:iR', '-SPEC:Neg/fin', '-SPEC:FORCE', 'LF:in', '!COMP:*', 'PHI:GEN:_', 'adjoinable'}
infermieri      {'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', 'LF:nurses', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'PF:infermieri', 'COMP:R', '-SPEC:N', 'SPEC:A', 'LANG:IT', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D'}
is              ['LANG:EN']
be-             {'SPEC:ADV', 'COMP:P', 'COPULA', '-VAL', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', '-COMP:T/fin', '-COMP:V', 'SPEC:D', 'PF:be', 'ASP', '-ARG', 'V', '-COMP:TO/inf', '-SPEC:FORCE', 'SPEC:P', 'LF:be', '-COMP:v', 'SPEC:TO/inf', '!COMP:*'}
istuuko         ['LANG:FI']
istuu-          {'SPEC:ADV', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'SPEC:D', '-COMP:v', 'ASP', 'CLASS:INTR', 'ARG', '-COMP:D', 'V', '-SPEC:FORCE', 'SPEC:P', 'PF:istuu', 'SPEC:TO/inf', 'LF:sit'}
John            ['LANG:EN']
John-           {'PF:John', 'COMP:P', '-SPEC:V', '-COMP:A', '-adjoinable', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', 'LF:John', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', '-SEM:directional', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'COMP:P', '-SPEC:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', '-SEM:directional', '-COMP:C/fin', '-COMP:D', 'N', 'PF:Jukka', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', 'LF:Jukka'}
juosten         ['LANG:FI']
juokse-         {'SPEC:ADV', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', 'PF:juokse-', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', 'LF:run', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf'}
istuu           ['LANG:FI']
istu-           {'SPEC:ADV', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', '-COMP:v', 'ASP', 'ARG', 'V', '-SPEC:FORCE', 'SPEC:P', 'PF:istuu', 'SPEC:TO/inf', 'LF:sit'}
kaksi           {'PF:kaksi', 'NUM', 'SPEC:*', 'LANG:FI', 'TAIL:ARG,VAL,FIN', 'PHI:PER:_', 'COMP:n', 'PHI:DET:_', 'COMP:N', '-VAL', 'PHI:NUM:_', 'LF:two', 'PHI:NUM:SG', 'ARG'}
kaksi           {'PF:kaksi', 'NUM', 'SPEC:*', 'TAIL:*POL:NEG', 'COMP:n', 'COMP:N', 'LANG:EN', 'LF:two', 'TAIL:ARG,ASP:BOUNDED'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'PF:kaksi', 'NUM', 'SPEC:*', 'LANG:FI', 'LF:two', 'COMP:n', 'COMP:N'}
kaupunkia       ['LANG:EN']
kaupunki        {'-SPEC:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'LF:city', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', '-COMP:P', '-COMP:C/fin', 'N', 'PF:kaupunki', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'SPEC:ADV', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', 'PF:kaske', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', 'LF:order', 'V', 'SEM:external', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', '!COMP:A/inf'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'COMP:P', '-SPEC:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', 'LF:watch', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', '-COMP:C/fin', 'N', 'PF:kello', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D'}
kello0-         {'2SPEC', 'LANG:FI', 'SPEC:D', 'PF:kello', '0', 'LF:watch'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'LF:key', 'SPEC:A', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', 'PF:key'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'COMP:P', '-SPEC:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', 'LF:book', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', '-SEM:directional', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', 'PF:kirja', '-SPEC:R', '-COMP:v', '-COMP:D'}
kohti           {'SPEC:*', 'LF:towards', '-SPEC:C', '-SPEC:V', 'LANG:FI', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:INF', '-SPEC:C/fin', 'TAIL:V', 'PHI:DET:_', '-SPEC:P', '-VAL', '-COMP:uWH', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:N', '-COMP:T/fin', '!COMP:*', 'PHI:NUM:_', 'ARG', '-SPEC:N', 'P', '-SPEC:v', 'COMP:D', '-SPEC:iR', '-SPEC:Neg/fin', '-SPEC:FORCE', 'PF:kohti', 'adjoinable'}
koko            {'-SPEC:C', '-SPEC:V', 'LANG:FI', '-SPEC:INF', 'COMP:N', '-SPEC:P', 'OP', '-SPEC:T/fin', '-COMP:T/fin', 'TAIL:T', '-SPEC:D', 'LF:all', '-SPEC:MA/lla', 'D', '-ARG', '-SPEC:N', '!PROBE:N', '-COMP:uR', '-SPEC:Neg/fin', 'PF:koko', '-COMP:D', '!COMP:*', 'adjoinable'}
kuka            ['LANG:FI']
kuka-           {'COMP:P', '-SPEC:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', 'PF:kuka', '-SPEC:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:V', 'COMP:R', 'PHI', '-SPEC:N', 'SPEC:A', 'LF:who', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D'}
kuorsaa-        {'SPEC:ADV', 'COMP:P', 'SPEC:TO/inf', '-COMP:WH', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', 'PF:kuorsaa', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '-COMP:D', 'LF:snore'}
kuorsaamalla    ['LANG:FI']
lahella         {'SPEC:*', 'COMP:v', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:INF', 'LF:near', '-SPEC:P', 'PHI:NUM:_', '-SPEC:ADV', '-COMP:FORCE', '!SPEC:*', '-SPEC:N', 'P', 'PF:lahella', 'VAL', '-SPEC:FORCE', 'adjoinable', '-SPEC:C', '!SPEC:D', '-SPEC:V', 'LANG:FI', 'COMP:V', 'PHI:DET:_', '-SPEC:C/fin', '-COMP:uWH', '-COMP:ADV', '-SPEC:T/fin', 'INF', '-COMP:N', '-COMP:T/fin', 'ARG', '-SPEC:v', 'COMP:D', '-COMP:C/fin', '-SPEC:iR', '-SPEC:Neg/fin', '!COMP:*'}
lahella         {'SPEC:*', '-SPEC:C', '-SPEC:V', '!COMP:D', 'LANG:FI', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:INF', 'LF:near', '-SPEC:C/fin', 'PHI:DET:_', '-SPEC:P', '-VAL', '-COMP:uWH', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:N', '-COMP:T/fin', 'PHI:NUM:_', 'ARG', '-SPEC:N', 'P', '-SPEC:v', 'COMP:D', '-SPEC:iR', 'PF:lahella', '-SPEC:Neg/fin', '-SPEC:FORCE', '!COMP:*', 'adjoinable'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'SPEC:ADV', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', 'PF:lahtea', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'SPEC:D', 'ASP', 'CLASS:INTR', 'ARG', '-COMP:D', 'LF:leave', 'V', 'COMP:PP', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf'}
lavano          ['LANG:IT']
lava-           {'SPEC:ADV', 'COMP:P', 'LF:wash', 'PHI:PER:_', 'PHI:DET:_', '-VAL', 'PF:lava', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', 'LANG:IT', 'COMP:D', 'V', 'SPEC:P', '-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', '!COMP:*', 'PHI:GEN:_'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-SPEC:C', '-SPEC:V', '-SPEC:INF', 'COMP:N', '-SPEC:P', 'PF:le', 'OP', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:D', '-SPEC:MA/lla', 'D', 'LF:D', '-ARG', '-SPEC:N', 'LANG:IT', '!PROBE:N', '-COMP:uR', '-SPEC:Neg/fin', '-COMP:D', '!COMP:*', 'adjoinable'}
leaves          ['LANG:EN']
leave           {'SPEC:ADV', 'COMP:P', '!SPEC:D', 'PHI:PER:_', 'PF:leave', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', 'LF:leave', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_'}
leave-          {'SPEC:ADV', 'COMP:P', '!SPEC:D', 'PHI:PER:_', 'PF:leave', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', 'LF:leave', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_'}
like-           {'SPEC:ADV', 'COMP:P', '!COMP:D', 'PHI:PER:_', 'PF:like', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', 'LF:like', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_'}
likes           ['LANG:EN']
like            {'SPEC:ADV', 'COMP:P', '!COMP:D', 'PHI:PER:_', 'PF:like', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', 'LF:like', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_'}
little          ['LANG:EN']
little-         {'2SPEC', 'LF:little', 'PF:little-', 'LANG:EN', 'SPEC:D', '0'}
lle             {'-SPEC:C', '-SPEC:V', 'LANG:FI', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:INF', '-SPEC:C/fin', 'PHI:DET:_', '-SPEC:P', '-VAL', '-SPEC:*', '-COMP:uWH', 'TAIL:V,+SEM:directional', '-SPEC:ADV', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-COMP:T/fin', '!COMP:*', 'PHI:NUM:_', 'ARG', '-SPEC:N', 'P', '-SPEC:v', 'COMP:D', '-SPEC:iR', '+SEM:directional', '-SPEC:Neg/fin', 'LF:for', '-SPEC:FORCE', 'PF:P(lle)', 'adjoinable'}
lla             {'SPEC:*', '-SPEC:C', '-SPEC:V', 'LANG:FI', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:INF', '-SPEC:C/fin', 'PHI:DET:_', '-SPEC:P', '-VAL', '-COMP:uWH', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:N', '-COMP:T/fin', 'TAIL:T', 'PHI:NUM:_', 'ARG', 'PF:P(lla)', '-SPEC:N', 'P', '-SPEC:v', 'COMP:D', '-SPEC:iR', 'TAIL:*V', '-SPEC:Neg/fin', 'LF:by', '-SPEC:FORCE', '!COMP:*', 'adjoinable'}
Luisa           ['LANG:IT']
Luisa-          {'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', 'LF:Luisa', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', '-SEM:directional', 'LANG:IT', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', 'PF:Luisa'}
lukemalla       ['LANG:FI']
luke-           {'PF:luke', 'SPEC:ADV', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', 'CLASS:TR', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', '-COMP:P', 'COMP:D', 'V', '-SPEC:FORCE', 'LF:read', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', '!COMP:*'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'SPEC:ADV', 'COMP:P', '!COMP:D', 'PF:loyta-', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', 'CLASS:TR', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', '-COMP:P', 'COMP:D', 'ASP:BOUNDED', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', '!COMP:*', 'LF:find'}
Mary            ['LANG:EN']
Mary-           {'COMP:P', '-SPEC:V', '-COMP:A', '-adjoinable', '-COMP:WH', 'PF:Mary', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', '-SEM:directional', '-COMP:C/fin', 'N', 'LF:Mary', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'COMP:P', '-SPEC:V', 'LANG:FI', '-adjoinable', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'LF:Merja', 'SPEC:A', '-SEM:directional', '-COMP:C/fin', 'N', 'PF:Merja', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'MA/inf', 'ADV', 'COMP:v', '-SPEC:N', 'SPEC:*', 'LANG:FI', 'PF:malla', '-SPEC:Neg/fin', 'LF:by', '-SPEC:T/fin', '-SPEC:FORCE', 'TAIL:T', 'adjoinable'}
meren           ['LANG:FI']
mere-           {'COMP:P', '-SPEC:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', '-COMP:C/fin', 'N', 'PF:meri', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', 'LF:ocean'}
mistake         {'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'PF:mistake', 'COMP:R/D', '-SPEC:INF', 'LF:mistake', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'COMP:P', '-SPEC:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', 'LF:what', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-COMP:v', '-SPEC:N', 'SPEC:A', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', 'PF:mika-', '-COMP:D'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'SPEC:ADV', 'LF:move', 'LANGN:EN', 'COMP:P', 'PHI:PER:_', 'PHI:DET:_', 'CLASS:TR', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'PF:move', 'ARG', '-COMP:P', 'COMP:D', 'V', '+SEM:directional', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', '!COMP:*', 'PHI:GEN:_'}
mukavasti       ['LANG:EN']
mukava-         {'2SPEC', 'LANG:FI', 'PF:mukavasti', 'LF:comfortably', 'SPEC:D', '0'}
must            {'SPEC:*', 'COMP:v', 'FIN', 'COMP:T/prt', '!SPEC:D', '-SPEC:V', 'PHI:PER:_', 'COMP:V', 'PHI:DET:_', '-SPEC:C/fin', 'LF:must', '!PROBE:V', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:must', 'T/fin', 'LANG:EN', '-COMP:T/fin', 'SPEC:D', '-SPEC:Neg', 'T', 'ARG', '-SPEC:N', '-SPEC:v', 'COMP:D', 'COMP:Neg', '-COMP:INF', 'VAL', '-SPEC:TO/inf', 'MODAL', '-SPEC:FORCE', 'SPEC:TO/inf', '!COMP:*', 'PHI:GEN:_'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'SPEC:ADV', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', 'CLASS:TR', 'PF:myy', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'LF:sell', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', '-COMP:P', 'COMP:D', 'ASP:BOUNDED', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', '!COMP:*'}
naki            ['LANG:FI']
nake-           {'SPEC:ADV', 'COMP:P', 'LANG:FI', 'PHI:PER:_', '-COMP:ESSA/inf', 'PHI:DET:_', 'CLASS:TR', 'LF:see', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'PF:nake', 'ASP', 'ARG', '-COMP:P', '-COMP:MA/inf', 'COMP:D', 'ASP:BOUNDED', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', '!COMP:*'}
nayttaa         ['LANG:FI']
naytta-         {'PF:naytta', 'SPEC:ADV', 'COMP:P', '!SPEC:D', 'LANG:FI', 'LF:seem', '-SPEC:T/fin', '-COMP:N', '-COMP:T/fin', '-COMP:V', 'ASP', '!COMP:VA/inf', '-ARG', 'V', 'VAL', 'SEM:internal', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf'}
ndo             {'COMP:v', '-SPEC:V', 'PF:PRG', 'PRG', '-COMP:C/fin', 'COMP:V', 'VAL', '-SPEC:T/fin', 'INF', '?ARG', 'LANG:EN', 'LF:ing', '-COMP:FORCE', '-COMP:T/fin', '!COMP:*'}
ne              {'-SPEC:C', '-SPEC:V', 'LANG:FI', '-SPEC:INF', 'COMP:N', '-SPEC:P', 'OP', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:D', '-SPEC:MA/lla', 'D', '-ARG', '-SPEC:N', 'PHI:NUM:PL', 'PHI:PER:3', '!PROBE:N', '-COMP:uR', '-SPEC:Neg/fin', 'LF:those', 'adjoinable', '-COMP:D', '!COMP:*', 'PF:ne'}
niiden          ['LANG:EN']
nen             {'SPEC:*', 'PF:a', 'LANG:FI', 'COMP:0', 'TAIL:D', 'A', 'LF:ing', '-SPEC:D', '-SPEC:A', 'adjoinable'}
not             {'LF:not', 'SPEC:*', '-COMP:C', 'PF:not', 'Neg', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-COMP:FIN', '-SPEC:T/fin', 'POL:NEG', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:D', '!COMP:*', 'ARG'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'SPEC:ADV', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'SPEC:D', '-COMP:Neg/fin', 'CLASS:INTR', 'ASP', 'ARG', 'PF:nukku', '-COMP:T', '-COMP:D', 'V', 'LF:sleep', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'COMP:P', '-SPEC:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', 'PF:omaisuuden', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'LF:possessions', 'SPEC:A', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D'}
operatoria      ['LANG:IT']
operatoria-     {'2SPEC', 'LANG:IT', 'SPEC:D', 'PF:operatoria', '0', 'LF:operation'}
ostaa           ['LANG:FI']
osta-           {'SPEC:ADV', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'PF:osta', 'PHI:DET:_', 'CLASS:TR', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', 'LF:buy', '-COMP:V', 'ASP', 'ARG', '-COMP:P', 'COMP:D', 'ASP:BOUNDED', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', '!COMP:*'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'PF:paiva', 'COMP:P', '-SPEC:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', '-COMP:C/fin', '-COMP:D', 'N', 'LF:day', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', 'SEM:nonreferential'}
Pariisia        ['LANG:FI']
Pariisi-        {'COMP:P', '-SPEC:V', 'LANG:FI', '-COMP:A', 'LF:Paris', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', '-COMP:C/fin', '-COMP:D', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', 'PF:Pariisi'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'COMP:P', '-SPEC:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', 'LF:Pekka', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', '-SEM:directional', '-COMP:C/fin', 'N', 'PF:Pekka', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D'}
pelottaa        ['LANG:FI']
pelkaa-         {'PF:pelkaa', 'SPEC:ADV', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', 'CLASS:TR', 'LF:fear', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', '-COMP:P', 'COMP:D', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', '!COMP:*'}
persuades       ['LANG:EN']
persuade-       {'SPEC:ADV', 'PF:persuade', 'COMP:P', 'PHI:PER:_', 'LF:persuade', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', 'V', 'SEM:external', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', '!COMP:*', 'PHI:GEN:_', 'COMP:TO/inf'}
peruuntui       ['LANG:FI']
peruuntu-       {'SPEC:ADV', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'LF:cancelled', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'SPEC:D', 'ASP', 'ARG', 'PF:peruuntui', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'SPEC:ADV', 'COMP:P', 'LF:wash', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', 'CLASS:TR', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', '-COMP:P', 'PF:pese', 'COMP:D', 'ASP:BOUNDED', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', '!COMP:*'}
pese-           {'SPEC:ADV', 'COMP:P', 'LF:wash', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', 'CLASS:TR', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', '-COMP:P', 'PF:pese', 'COMP:D', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', '!COMP:*'}
petardi         {'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'PF:petardi', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', 'LF:firecrackers', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', 'LANG:IT', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D'}
pieni           ['LANG:FI']
pieni-          {'2SPEC', 'PF:pieni-', 'LANG:FI', 'SPEC:D', '0', 'LF:small'}
poikien         ['LANG:FI']
poika-          {'COMP:P', '-SPEC:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', 'LF:boy', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', '-COMP:C/fin', 'N', 'COMP:uR', 'PF:poika', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D'}
puhelinta       ['LANG:FI']
puhelin-        {'2SPEC', 'PF:puhelin', 'LANG:FI', 'SPEC:D', 'LF:phone', '0'}
punainen        ['LANG:FI']
puna-           {'2SPEC', 'PF:puna-', 'LANG:FI', 'SPEC:D', 'LF:red', '0'}
presupposto     {'COMP:P', '-SPEC:V', '-COMP:A', 'LF:presupposition', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', 'PF:presupposto', 'LANG:IT', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D'}
primary         {'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', 'LANG:IT', '-COMP:C/fin', 'N', 'COMP:uR', 'PF:primary', '-SPEC:FORCE', '-SPEC:R', 'LF:nurse', '-COMP:v', '-COMP:D'}
promises        ['LANG:EN']
promise-        {'SPEC:ADV', 'COMP:P', 'PF:promise', 'PHI:PER:_', 'PHI:DET:_', 'LF:promise', '-VAL', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'SPEC:D', 'ASP', 'ARG', 'COMP:D', 'V', 'SEM:internal', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_'}
pyytaa          ['LANG:FI']
pyyta-          {'SPEC:ADV', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', 'LF:ask', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', 'PF:pyyda', '-COMP:V', '-COMP:T/fin', 'ASP', 'ARG', 'V', 'SEM:external', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf'}
raukesi         ['LANG:FI']
raukea-         {'SPEC:ADV', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', 'V', 'PF:raukea', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'LF:terminate'}
red             ['LANG:EN']
red-            {'2SPEC', 'LANG:EN', 'SPEC:D', 'LF:red', '0', 'PF:red'}
saavuttaa       ['LANG:FI']
saavutta-       {'SPEC:ADV', 'COMP:P', '!COMP:D', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', 'CLASS:TR', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', 'PF:saavutta-', '-COMP:P', 'COMP:D', 'LF:reach', 'ASP:BOUNDED', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', '!COMP:*'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'SPEC:ADV', 'COMP:P', 'LF:say', 'LANG:FI', 'PHI:PER:_', 'COMP:FORCE', 'PHI:DET:_', 'COMP:VA/inf', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'SPEC:D', 'PF:sano-', 'ASP', 'ARG', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf'}
said            ['LANG:EN']
say'            {'SPEC:ADV', 'COMP:P', 'LF:say', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'SPEC:D', 'ASP', 'ARG', '!COMP:FORCE', 'V', 'PF:say', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_'}
say-            {'SPEC:ADV', 'COMP:P', 'LF:say', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'SPEC:D', 'ASP', 'ARG', '!COMP:FORCE', 'V', 'PF:say', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_'}
sala            ['LANG:IT']
sala-           {'LF:room', 'PF:sala', 'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', 'LANG:IT', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D'}
scoppiati       ['LANG:IT']
scoppia-        {'SPEC:ADV', 'COMP:P', 'LF:explode', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'PF:scoppia', 'ARG', 'LANG:IT', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_'}
sen             {'-SPEC:C', '-SPEC:V', 'LANG:FI', '-SPEC:INF', 'COMP:N', '-SPEC:P', 'OP', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:D', '-SPEC:MA/lla', 'LF:the/that', 'D', '-ARG', '-SPEC:N', 'TAIL:*POL:NEG', 'TAIL:PHI', 'PF:sen', '!PROBE:N', '-COMP:uR', '-SPEC:Neg/fin', 'TAIL:ASP', '-COMP:D', '!COMP:*', 'adjoinable'}
se'             {'-SPEC:C', '-SPEC:V', 'PF:se', 'LANG:FI', '-SPEC:INF', 'COMP:N', '-SPEC:P', 'OP', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:D', '-SPEC:MA/lla', 'D', 'LF:the/that', '-ARG', '-SPEC:N', '!PROBE:N', '-COMP:uR', '-SPEC:Neg/fin', '-COMP:D', '!COMP:*', 'adjoinable'}
sentenza        {'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', 'PF:sentenza', '-SPEC:N', 'SPEC:A', 'LANG:IT', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', 'LF:sentence', '-COMP:v', '-COMP:D'}
Seine           ['LANG:EN']
Seine-          {'COMP:P', 'PF:Seine', '-SPEC:V', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', '-COMP:C/fin', 'N', 'COMP:uR', 'LF:Seine', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D'}
sembrano        ['LANG:IT']
sembra-         {'SPEC:ADV', 'COMP:P', 'SPEC:TO/inf', '-ASP', '-VAL', 'LF:seem', '-SPEC:T/fin', 'LANG:EN', '-COMP:N', 'PF:sembra', '-COMP:T/fin', 'SPEC:D', '-COMP:V', '-ARG', '!COMP:ARE/inf', 'V', 'SPEC:P', '-SPEC:FORCE', '-COMP:v', '-COMP:D'}
sleeps          ['LANG:EN']
sleep           {'SPEC:ADV', 'COMP:P', 'PF:sleep', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'SPEC:D', 'ASP', 'CLASS:INTR', 'ARG', '-COMP:D', 'V', 'LF:sleep', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_'}
sleep-          {'SPEC:ADV', 'COMP:P', 'PF:sleep', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'SPEC:D', 'ASP', 'CLASS:INTR', 'ARG', '-COMP:D', 'V', 'LF:sleep', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'COMP:P', '-SPEC:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'PF:sopimus', 'COMP:R', 'LF:agreement', '-SPEC:N', 'SPEC:A', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', '!COMP:A/inf'}
spinge          ['LANG:IT']
spinge-         {'SPEC:ADV', 'PF:spinge', '!COMP:D', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', '-COMP:P', 'LANG:IT', 'V', 'LF:push', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_'}
ssa             {'COMP:n/MA', 'SPEC:*', '-SPEC:C', '-SPEC:V', 'LANG:FI', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:INF', '-SPEC:C/fin', 'TAIL:V', 'PHI:DET:_', '-SPEC:P', '-VAL', '-COMP:uWH', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:N', '-COMP:T/fin', 'PHI:NUM:_', 'ARG', 'PF:ssa', '-SPEC:N', 'P', '-SPEC:v', 'COMP:D', '-SPEC:iR', '-SPEC:Neg/fin', '-SPEC:FORCE', 'LF:in', '!COMP:*', 'adjoinable'}
stanno          ['LANG:IT']
sta-            {'SPEC:ADV', 'COMP:P', 'PHI:PER:_', 'PHI:DET:_', '-ASP', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PF:sta', 'LANG:EN', '-COMP:T/fin', '-COMP:V', 'SPEC:D', 'PHI:NUM:_', 'LF:stay', 'ARG', 'COMP:PRG', 'V', 'SEM:internal', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_'}
sti             {'ADV', '-ARG', '-SPEC:N', 'SPEC:*', 'LANG:FI', '-SPEC:Neg/fin', 'LF:by', '-SPEC:T/fin', '-SPEC:FORCE', 'TAIL:T', 'PF:sti', '!COMP:*', 'adjoinable'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'LF:socks', 'COMP:P', '-SPEC:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', 'PF:sukka-'}
talo            {'LF:house', 'COMP:P', '-SPEC:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', 'PF:talo', '-SPEC:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D'}
tama            ['LANG:EN']
tama-           {'COMP:P', '-SPEC:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', 'LF:this', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', 'PF:tama', '-COMP:T/fin', '-COMP:V', 'COMP:R', 'PHI', '-SPEC:N', 'SPEC:A', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'SPEC:ADV', 'SPEC:*', 'FIN', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', '-ASP', 'LF:must', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ARG', 'V', 'PF:taytyy', 'MODAL', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', '!COMP:A/inf'}
teki            ['LANG:FI']
teke-           {'SPEC:ADV', 'COMP:P', '!COMP:D', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', 'CLASS:TR', 'LF:make', '-COMP:A/inf', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', '-COMP:P', 'COMP:D', 'ASP:BOUNDED', 'V', 'PF:teke', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', '!COMP:*'}
that            {'-ARG', 'FIN', 'COMP:C/fin', 'COMP:T/fin', 'PF:that', '-VAL', '-SPEC:*', 'LANG:EN', 'FORCE', 'LF:that', '!COMP:*', '!PROBE:T/fin'}
the             {'-SPEC:C', '-SPEC:V', '-SPEC:INF', 'COMP:N', '-SPEC:P', 'OP', '-SPEC:T/fin', 'LANG:EN', '-COMP:T/fin', '-SPEC:D', '-SPEC:MA/lla', 'D', '-ARG', '-SPEC:N', 'PHI:DEF:DEF', '-COMP:D', '!PROBE:N', '-COMP:uR', '-SPEC:Neg/fin', 'PF:the', 'LF:the', '!COMP:*', 'adjoinable'}
to              {'LF:to', '-SPEC:C', '-SPEC:V', 'PHI:PER:_', 'PF:to', '-SPEC:iWH', '-SPEC:INF', '-SPEC:C/fin', 'PHI:DET:_', '-SPEC:P', '-VAL', '-SPEC:*', '-COMP:uWH', 'TAIL:V,+SEM:directional', 'LANG:EN', '-SPEC:ADV', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-COMP:T/fin', 'PHI:NUM:_', 'ARG', '-SPEC:N', 'P', '-SPEC:v', 'COMP:D', '-SPEC:iR', '-float', '+SEM:directional', '-SPEC:Neg/fin', '-SPEC:FORCE', '!COMP:*', 'PHI:GEN:_', 'adjoinable'}
to_inf          {'COMP:v', '-SPEC:V', 'COMP:V', '-VAL', 'LF:TO/inf', '-SPEC:T/fin', 'INF', 'LANG:EN', '-COMP:FORCE', '-COMP:T/fin', 'PF:TO/inf', '-SPEC:v', '-COMP:C/fin', 'TO/inf', '?ARG', '!COMP:*', 'adjoinable'}
towards         {'LF:towards', '-SPEC:C', '-SPEC:V', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:INF', '-SPEC:C/fin', 'TAIL:V', 'PHI:DET:_', '-SPEC:P', 'PF:towards', '-VAL', '-SPEC:*', '-COMP:uWH', 'LANG:EN', '-SPEC:ADV', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-COMP:T/fin', 'PHI:NUM:_', 'ARG', '-SPEC:N', 'P', '-SPEC:v', 'COMP:D', '-SPEC:iR', '-float', '-SPEC:Neg/fin', '-SPEC:FORCE', '!COMP:*', 'PHI:GEN:_', 'adjoinable'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'SPEC:ADV', 'COMP:P', 'LF:nudge', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', 'CLASS:TR', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', '-COMP:P', 'PF:tonaise', 'COMP:D', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', '!COMP:*'}
tta             {'COMP:n/MA', 'SPEC:*', '-SPEC:C', '-SPEC:V', 'LANG:FI', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:INF', '-SPEC:C/fin', 'PF:tta', 'PHI:DET:_', '-SPEC:P', '-VAL', '-COMP:uWH', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:N', '-COMP:T/fin', 'PHI:NUM:_', 'ARG', 'ADV', '-SPEC:N', 'LF:without', 'P', '-SPEC:v', 'COMP:D', '-SPEC:iR', '-SPEC:Neg/fin', '-SPEC:FORCE', '!COMP:*', 'adjoinable'}
tries           ['LANG:EN']
try-            {'SPEC:ADV', 'COMP:P', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', 'LF:try', 'SPEC:D', '-COMP:V', 'ASP', 'ARG', '!COMP:-ARG', 'V', 'SEM:internal', '!COMP:TO/inf', '-SPEC:FORCE', 'SPEC:P', 'PF:try', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_'}
verifiche       {'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', 'PF:verifiche', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', 'LANG:IT', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', 'LF:verification'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'SPEC:ADV', 'COMP:P', 'SPEC:TO/inf', 'LANG:FI', 'PHI:PER:_', 'PHI:DET:_', '!COMP:P', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'SPEC:D', 'PF:virtaa', 'ASP', 'ARG', 'V', '-SPEC:FORCE', 'LF:flow', 'SPEC:P', '-COMP:v', '-COMP:D'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'SPEC:ADV', 'COMP:P', 'PHI:PER:_', 'LF:want', 'PHI:DET:_', '-VAL', '-SPEC:*', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', 'V', 'SEM:internal', 'PF:volu', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', '!COMP:*', 'PHI:GEN:_'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'SPEC:ADV', 'COMP:P', 'PHI:PER:_', 'PHI:DET:_', 'CLASS:TR', '-VAL', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'ASP', 'ARG', 'SEM:achievement', 'PF:voitta', '-COMP:P', 'LF:win', 'COMP:D', 'ASP:BOUNDED', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', '!COMP:*', 'PHI:GEN:_'}
wants           ['LANG:EN']
want-           {'SPEC:ADV', 'COMP:P', 'PHI:PER:_', 'LF:want', 'PHI:DET:_', 'CLASS:TR', '-VAL', '-SPEC:T/fin', '-COMP:N', 'PF:want', 'LANG:EN', '-COMP:T/fin', '-COMP:V', 'PHI:NUM:_', 'ASP', 'ARG', '-COMP:P', 'COMP:D', 'V', '-SPEC:TO/inf', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', '!COMP:*', 'PHI:GEN:_', 'COMP:TO/inf'}
what            ['LANG:EN']
what-           {'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', 'LF:what', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', 'PHI_N', '-COMP:C/fin', 'N', 'COMP:uR', 'PF:what', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', '-COMP:*'}
which           {'-SPEC:C', '-SPEC:V', '-SPEC:INF', 'COMP:N', 'PF:which', 'OP:WH', '-SPEC:P', 'OP', '-SPEC:T/fin', 'LANG:EN', 'LF:which', '-COMP:T/fin', '-SPEC:D', '-SPEC:MA/lla', 'D', '-ARG', '-SPEC:N', '!PROBE:N', '-COMP:uR', '-SPEC:Neg/fin', '-COMP:D', '!COMP:*', 'adjoinable'}
who             ['LANG:EN']
who-            {'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', 'PF:who', '-SPEC:N', 'SPEC:A', 'PHI_N', 'LF:who', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', '-COMP:*'}
whether         {'FIN', 'OP:Q', 'PF:whether', 'OP:WH', '-VAL', '-SPEC:*', 'OP', 'LANG:EN', 'FORCE', '!COMP:*', '!PROBE:T/fin', '-ARG', 'COMP:C/fin', 'LF:whether', 'Q', 'COMP:T/fin'}
yrittaa         ['LANG:FI']
yritta-         {'SPEC:ADV', 'COMP:P', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', 'LF:try', 'SPEC:D', '-COMP:V', 'ASP', 'ARG', 'PF:yritta', '!COMP:-ARG', 'V', 'SEM:internal', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', '!COMP:A/inf'}
mina            ['LANG:EN']
mina-           {'COMP:P', 'PF:mina', '-SPEC:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', 'PHI_N', '-COMP:C/fin', 'N', 'COMP:uR', 'LF:I', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', '-COMP:*'}
sina            ['LANG:EN']
sina-           {'COMP:P', '-SPEC:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', 'PHI_N', 'LF:you', '-COMP:C/fin', 'N', 'COMP:uR', 'PF:sina', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', '-COMP:*'}
han             ['LANG:EN']
han-            {'COMP:P', '-SPEC:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', 'PF:han', '-SPEC:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', 'PHI_N', '-COMP:C/fin', '-COMP:D', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', 'LF:s/he', '-COMP:*'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'COMP:P', '-SPEC:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', 'LF:we', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', 'PHI_N', '-COMP:C/fin', 'N', 'PF:me', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', '-COMP:*'}
te              ['LANG:EN']
te-             {'COMP:P', '-SPEC:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', 'PHI_N', 'PF:te', 'LF:you', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', '-COMP:*'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he-             {'COMP:P', '-SPEC:V', 'LANG:FI', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', 'PF:he', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', 'PHI_N', '-COMP:C/fin', 'LF:they', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', '-COMP:*'}
he-             {'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', 'PF:he', '-COMP:ADV', '-SPEC:T/fin', 'LANG:EN', '-SPEC:ADV', '-COMP:N', '-COMP:T/fin', '-COMP:V', 'COMP:R', 'LF:he', '-SPEC:N', 'SPEC:A', 'PHI_N', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', '-COMP:*'}
se              ['LANG:FI']
se-             {'-SPEC:C', '-SPEC:V', 'PF:se', 'LANG:FI', '-SPEC:INF', 'COMP:N', '-SPEC:P', 'OP', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:D', '-SPEC:MA/lla', 'D', 'LF:it/that', '-ARG', '-SPEC:N', '!PROBE:N', '-COMP:uR', '-SPEC:Neg/fin', '-COMP:D', '!COMP:*', 'adjoinable'}
I               ['LANG:EN']
I-              {'COMP:P', '-SPEC:V', 'PF:I', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', 'PHI_N', '-COMP:C/fin', 'N', 'COMP:uR', 'LF:I', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', '-COMP:*'}
you             ['LANG:EN']
you-            {'PF:you', 'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', 'PHI_N', 'LF:you', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', '-COMP:*'}
he              ['LANG:EN']
she             ['LANG:EN']
she-            {'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'LF:she', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', 'PHI_N', '-COMP:C/fin', 'N', 'PF:she', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', '-COMP:*'}
we              ['LANG:EN']
we-             {'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', 'LF:we', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'PF:we', 'COMP:R', '-SPEC:N', 'SPEC:A', 'PHI_N', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', '-COMP:*'}
you_pl          ['LANG:EN']
you_pl-         {'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', '-SPEC:ADV', 'PF:you_pl', '-COMP:T/fin', '-COMP:V', 'COMP:R', 'PHI', 'LF:you_pl', '-SPEC:N', 'SPEC:A', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D'}
they            ['LANG:EN']
they-           {'PF:they', 'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', 'PHI_N', '-COMP:C/fin', 'LF:they', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', '-COMP:*'}
it              ['LANG:EN']
it-             {'-SPEC:C', '-SPEC:V', '-SPEC:INF', 'COMP:N', '-SPEC:P', 'OP', '-SPEC:T/fin', 'LANG:EN', '-COMP:T/fin', '-SPEC:D', '-SPEC:MA/lla', 'D', 'LF:it/that', '-ARG', '-SPEC:N', '!PROBE:N', '-COMP:uR', '-SPEC:Neg/fin', 'PF:it', '-COMP:D', '!COMP:*', 'adjoinable'}
io              ['LANG:EN']
io-             {'COMP:P', '-SPEC:V', 'PF:io', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', 'PHI_N', 'LANG:IT', '-COMP:C/fin', 'N', 'COMP:uR', 'LF:I', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', '-COMP:*'}
tu              ['LANG:EN']
tu-             {'COMP:P', '-SPEC:V', 'PF:tu', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', 'PHI_N', 'LF:you', 'LANG:IT', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', '-COMP:*'}
lui             ['LANG:EN']
lui-            {'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', 'LF:he', '-SPEC:N', 'SPEC:A', 'PHI_N', 'LANG:IT', '-COMP:C/fin', 'PF:lui', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', '-COMP:*'}
lei             ['LANG:EN']
lei-            {'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'LF:she', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-COMP:v', '-SPEC:N', 'SPEC:A', 'PHI_N', 'LANG:IT', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', 'PF:lei', '-COMP:D', '-COMP:*'}
noi             ['LANG:EN']
noi-            {'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', 'PF:noi', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:ADV', 'LF:we', '-COMP:N', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', 'PHI_N', 'LANG:IT', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', '-COMP:*'}
voi             ['LANG:EN']
voi-            {'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', 'LF:you_pl', '-SPEC:N', 'SPEC:A', 'PHI_N', 'LANG:IT', '-COMP:C/fin', 'N', 'COMP:uR', 'PF:voi', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', '-COMP:*'}
loro            ['LANG:EN']
loro-           {'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'PF:loro', 'COMP:R', '-SPEC:N', 'SPEC:A', 'PHI_N', 'LANG:IT', '-COMP:C/fin', 'LF:they', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D', '-COMP:*'}
mi              ['LANG:EN']
mi-             {'-COMP:A', 'COMP:R/D', '-SPEC:INF', '-COMP:AUX', '-SPEC:P', '-SPEC:ADV', '-SPEC:N', 'PHI_N', 'LANG:IT', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', 'SPEC:A', '-COMP:v', '-COMP:*', 'COMP:P', '-SPEC:V', '-COMP:WH', '-SPEC:C/fin', 'PF:mi(cl)', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-COMP:T/fin', '-COMP:V', 'COMP:R', 'LF:me', '-COMP:C/fin', 'CL', '-COMP:D'}
la              ['LANG:EN']
la-             {'-COMP:A', 'COMP:R/D', '-SPEC:INF', '-COMP:AUX', '-SPEC:P', '-SPEC:ADV', '-SPEC:N', 'PHI_N', 'LANG:IT', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', 'SPEC:A', '-COMP:v', '-COMP:*', 'COMP:P', '-SPEC:V', '-COMP:WH', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-COMP:T/fin', '-COMP:V', 'COMP:R', 'LF:her', 'PF:la(cl)', '-COMP:C/fin', 'CL', '-COMP:D'}
lo              ['LANG:EN']
lo-             {'-COMP:A', 'COMP:R/D', '-SPEC:INF', '-COMP:AUX', '-SPEC:P', '-SPEC:ADV', '-SPEC:N', 'PHI_N', 'LANG:IT', 'N', 'LF:him', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', 'SPEC:A', '-COMP:v', '-COMP:*', 'COMP:P', '-SPEC:V', '-COMP:WH', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', 'PF:lo(cl)', 'CL', '-COMP:D'}
si              ['LANG:EN']
si-             {'-COMP:A', 'COMP:R/D', '-SPEC:INF', '-COMP:AUX', '-SPEC:P', '-SPEC:ADV', '-SPEC:N', 'PHI_N', 'LF:3sg', 'LANG:IT', '-COMP:D', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', 'SPEC:A', '-COMP:v', '-COMP:*', 'COMP:P', '-SPEC:V', 'PF:si(cl)', '-COMP:WH', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', 'CAL:CL'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'COMP:R/D', '-SPEC:INF', 'PF:ci', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'COMP:R', '-SPEC:N', 'SPEC:A', 'PHI_N', 'LANG:IT', '-COMP:C/fin', '-COMP:D', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', 'LF:there', '-COMP:*'}
[-n]            {'PHI', 'PHI:DET:DEF', 'PHI:PER:1', 'inflectional', 'LANG:FI', 'PHI:NUM:SG', 'PHI:HUM:HUM'}
[-t]            {'PHI', 'PHI:DET:DEF', 'PHI:PER:2', 'inflectional', 'LANG:FI', 'PHI:NUM:SG', 'PHI:HUM:HUM'}
[-V]            {'PHI:NUM:SG', 'inflectional', 'LANG:FI', 'PHI:PER:3', 'PHI'}
[-mme]          {'PHI', 'PHI:DET:DEF', 'PHI:PER:1', 'PHI:NUM:PL', 'LANG:FI', 'inflectional', 'PHI:HUM:HUM'}
[-mme]          {'PHI:DET:DEF', 'PHI:PER:1', 'PHI:NUM:PL', 'LANG:FI', 'inflectional', 'PHI:HUM:HUM'}
[-tte]          {'PHI', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:2', 'LANG:FI', 'inflectional', 'PHI:HUM:HUM'}
[-vat]          {'PHI:NUM:PL', 'inflectional', 'LANG:FI', 'PHI:PER:3', 'PHI'}
[-ni]           {'PHI', 'PHI:DET:DEF', 'PHI:PER:1', 'inflectional', 'LANG:FI', 'PHI:NUM:SG', 'PHI:HUM:HUM'}
[-si]           {'PHI', 'PHI:DET:DEF', 'PHI:PER:2', 'inflectional', 'LANG:FI', 'PHI:NUM:SG', 'PHI:HUM:HUM'}
[-nsa]          {'PHI:NUM:SG', 'inflectional', 'LANG:FI', 'PHI:PER:3', 'PHI'}
[-an]           {'LANG:FI', 'inflectional', 'PHI', 'PHI:PER:3'}
[-nne]          {'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:2', 'LANG:FI', 'inflectional', 'PHI:HUM:HUM'}
[-s]            {'PHI:NUM:SG', 'PHI:GEN:M', 'LANG:EN', 'inflectional', 'PHI:PER:3', 'PHI', 'PHI:GEN:F'}
[-0]            {'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3', 'PHI:GEN:N', 'PHI:PER:1', 'PHI:NUM:SG', 'PHI:PER:2', 'LANG:EN', 'inflectional', 'PHI'}
[-o]            {'PHI', 'PHI:DET:DEF', 'PHI:PER:1', 'LANG:IT', 'inflectional', 'PHI:NUM:SG', 'PHI:HUM:HUM'}
[-i]            {'PHI', 'PHI:DET:DEF', 'PHI:PER:2', 'LANG:IT', 'inflectional', 'PHI:NUM:SG', 'PHI:HUM:HUM'}
[-a]            {'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:IT', 'inflectional', 'PHI:PER:3', 'PHI'}
[-e]            {'PHI:DET:DEF', 'PHI:NUM:SG', 'LANG:IT', 'inflectional', 'PHI:PER:3', 'PHI'}
[-iamo]         {'PHI', 'PHI:DET:DEF', 'PHI:PER:1', 'PHI:NUM:PL', 'LANG:IT', 'inflectional', 'PHI:HUM:HUM'}
[-te]           {'PHI', 'PHI:DET:DEF', 'PHI:NUM:PL', 'LANG:IT', 'PHI:PER:2', 'inflectional', 'PHI:HUM:HUM'}
[-no]           {'PHI:DET:DEF', 'PHI:NUM:PL', 'LANG:IT', 'inflectional', 'PHI:PER:3', 'PHI'}
[-nom]          {'LANG:EN', 'NOM', 'inflectional', 'TAIL:FIN,ARG,VAL', 'adjoinable'}
[-par]          {'PAR', 'LANG:FI', 'adjoinable', 'inflectional', 'TAIL:ARG,-VAL'}
[-gen]          {'LANG:EN', 'TAIL:INF,ARG', 'GEN', 'inflectional', '-float'}
gen             {'LANG:EN', 'TAIL:INF,ARG', 'GEN', 'inflectional', '-float'}
[-n_acc]        {'TAIL:*POL:NEG', 'LANG:FI', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:PHI', 'inflectional', 'n-ACC', 'adjoinable'}
[-t_acc]        {'t-ACC', 'TAIL:*POL:NEG', 'LANG:FI', 'TAIL:ARG,ASP:BOUNDED', 'inflectional', 'adjoinable'}
[-0_acc]        {'TAIL:*PHI', '0_ACC', 'TAIL:*POL:NEG', 'LANG:FI', 'TAIL:ARG,ASP:BOUNDED', 'inflectional', 'adjoinable'}
asp             {'LANG:EN', 'ASP:BOUNDED', 'inflectional'}
a'              {'LF:A', 'PF:a', 'a', 'LANG:X'}
b'              {'PF:b', 'LANG:X', 'b', 'LF:B'}
b''             {'PF:b', 'LANG:EN', 'LF:B', '-COMP:c', 'b'}
c''             {'LF:C', 'LANG:EN', 'c', 'PF:c', 'SPEC:a'}
c'              {'LF:C', 'c', 'PF:c', 'LANG:X'}
d'              {'LANG:', 'd', 'PF:d', 'LF:D'}
a''             ['LANG:EN']
x'              {'LANG:X', 'x', 'LF:X', 'PF:x'}
y'              {'LANG:X', 'LF:Y', 'y', 'PF:y'}
z'              {'LANG:X', 'z', 'LF:Z', 'PF:x'}
John'           {'LANG:X', 'PF:John', "N'", 'LF:John'}
admires'        {'PF:admires', 'LF:admires', "V'", 'LANG:X'}
admires''       {'SPEC:ADV', 'COMP:P', 'PHI:PER:_', 'LF:admires', 'PHI:DET:_', '-VAL', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:V', 'SPEC:D', 'ASP', 'ARG', 'PF:admires', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_'}
Mary'           {'LANG:X', 'PF:Mary', "N'", 'LF:mary'}
T/fin           {'SPEC:*', 'COMP:v', 'FIN', 'COMP:T/prt', '!SPEC:D', '-SPEC:V', 'PHI:PER:_', 'COMP:V', 'PHI:DET:_', '-SPEC:C/fin', '!PROBE:V', 'PF:T', '-SPEC:T/fin', 'LANG:EN', 'T/fin', '-COMP:T/fin', 'PHI:NUM:_', 'SPEC:D', '-SPEC:Neg', 'T', 'ARG', '-SPEC:N', '-SPEC:v', 'COMP:D', 'LF:T', '-COMP:INF', 'VAL', '-SPEC:TO/inf', '-SPEC:FORCE', 'SPEC:TO/inf', '!COMP:*', 'PHI:GEN:_'}
v               {'-SPEC:N', 'PF:v', 'PHI:PER:_', 'COMP:V', 'PHI:DET:_', '-VAL', '!PROBE:V', 'PHI:NUM:_', '!COMP:*', 'LANG:EN', 'LF:v', 'PHI:GEN:_', 'SPEC:D', 'v', 'ASP', 'ARG'}
C/fin           {'SPEC:*', 'FIN', '-SPEC:C/fin', '-SPEC:T/fin', '!PROBE:FIN', 'LANG:EN', 'PF:C', 'COMP:Neg/fin', '-SPEC:N', 'C/fin', '-ARG', '-COMP:C/fin', 'C', 'COMP:T/fin', 'LF:C/fin', 'VAL', '-COMP:T/prt', '!COMP:*'}
T               {'SPEC:*', 'COMP:v', 'FIN', '-SPEC:V', 'COMP:T/prt', 'PHI:PER:_', 'COMP:V', 'PHI:DET:_', '!PROBE:V', 'PF:T', '-SPEC:T/fin', 'LANG:EN', 'PHI:NUM:_', 'SPEC:D', 'T', 'ARG', '-SPEC:N', 'COMP:D', 'LF:T', 'VAL', '-SPEC:FORCE', '-COMP:NEG', '!COMP:*', 'PHI:GEN:_'}
T/prt           {'SPEC:*', 'COMP:v', 'FIN', 'LF:T/prt', '-SPEC:V', 'COMP:T/prt', 'PHI:PER:_', 'COMP:V', 'PHI:DET:_', '!PROBE:V', '-SPEC:T/fin', 'PF:T/prt', 'LANG:EN', 'PHI:NUM:_', 'SPEC:D', 'T', 'ARG', '-SPEC:N', 'COMP:D', 'T/prt', 'VAL', '-SPEC:FORCE', '-COMP:NEG', '!COMP:*', 'PHI:GEN:_'}
a0              {'LF:A', '-adjoinable', 'PF:A', 'A', 'TAIL:D', 'COMP:0', 'LANG:EN', '-SPEC:D', '-SPEC:A', 'adjoinable'}
n               {'SPEC:*', 'COMP:v', '-COMP:A', 'PHI:PER:_', 'COMP:R/D', '-SPEC:INF', '-COMP:AUX', '-SPEC:P', 'PHI:NUM:_', '-SPEC:ADV', '!SPEC:*', '-SPEC:N', 'N', 'COMP:uR', 'VAL', '-SPEC:FORCE', '-SPEC:R', 'SPEC:A', '-COMP:v', 'COMP:P', '!SPEC:D', '-SPEC:V', '-COMP:WH', 'COMP:0', 'n', 'PF:n', 'COMP:V', 'PHI:DET:_', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', 'INF', '-COMP:T/fin', '-COMP:V', 'COMP:R', 'ARG', '-COMP:C/fin', 'LF:n', '-COMP:D', '!COMP:*', 'PHI:GEN:_'}
impass          {'-SPEC:N', 'PHI:PER:_', 'COMP:V', 'PHI:DET:_', '-VAL', '!PROBE:V', 'PHI:NUM:_', '!COMP:*', 'LANG:EN', 'PHI:GEN:_', 'SPEC:D', 'LF:impass', 'PF:impass', 'v', 'ASP', 'ARG'}
cau             {'-SPEC:N', 'PHI:PER:_', 'PF:Cau', 'COMP:V', 'PHI:DET:_', '-VAL', 'LF:v/Cause', '!PROBE:V', '!COMP:*', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', 'SPEC:D', 'v', 'ASP', 'ARG'}
INF             {'COMP:v', '-SPEC:V', '-COMP:C/fin', 'COMP:V', 'PF:INF', 'LF:INF', '-SPEC:T/fin', 'INF', 'LANG:EN', '-COMP:FORCE', '-COMP:T/fin', '!COMP:*'}
prtcpl          {'SPEC:*', 'COMP:v', 'FIN', 'LF:T/prt', 'COMP:T/prt', '-SPEC:V', 'PHI:PER:_', 'COMP:V', 'PHI:DET:_', '!PROBE:V', '-SPEC:T/fin', 'INF', 'PF:T/prt', 'LANG:EN', '-COMP:FORCE', '-COMP:T/fin', 'SPEC:D', 'PHI:NUM:_', 'T', 'ARG', '-SPEC:N', '-COMP:C/fin', 'COMP:D', 'T/prt', 'VAL', '-SPEC:FORCE', '-COMP:NEG', '!COMP:*', 'PHI:GEN:_'}
TO/inf          {'COMP:v', '-SPEC:V', 'COMP:V', '-VAL', 'LF:TO/inf', '-SPEC:T/fin', 'INF', 'LANG:EN', '-COMP:FORCE', '-COMP:T/fin', 'PF:TO/inf', '!COMP:V', '-SPEC:v', '-COMP:C/fin', 'TO/inf', '?ARG', '!COMP:*', 'adjoinable'}
A/inf           {'SPEC:*', 'COMP:v', 'A/inf', '-SPEC:V', '?VAL', 'COMP:V', '-SPEC:T/fin', 'INF', 'LANG:EN', '-COMP:FORCE', '-COMP:T/fin', 'PF:A/inf', 'LF:A/inf', '-COMP:C/fin', '-SPEC:Neg/fin', '?ARG', '!COMP:*'}
ARE/inf         {'SPEC:*', 'COMP:v', '-SPEC:V', '-adjoinable', 'COMP:V', '-SPEC:T/fin', 'INF', 'LANG:EN', 'ARE/inf', '-COMP:FORCE', 'LF:ARE/inf', '-COMP:T/fin', '-COMP:C/fin', 'PF:are', 'VAL', '?ARG', '!COMP:*'}
ESSA/inf        {'SPEC:*', 'COMP:v', '-SPEC:V', '?VAL', 'COMP:V', 'LF:while', 'PF:essa', 'INF', 'LANG:EN', '-SPEC:T/fin', '-COMP:FORCE', 'TAIL:T', '-COMP:T/fin', 'ESSA/inf', 'ADV', '-SPEC:N', '-COMP:C/fin', '-SPEC:Neg/fin', '?ARG', '-SPEC:FORCE', '!COMP:*', 'adjoinable'}
TUA/inf         {'COMP:v', '-SPEC:V', 'PHI:PER:_', 'LF:after', 'COMP:V', 'PHI:DET:_', 'PF:tua', '-SPEC:T/fin', 'INF', 'LANG:EN', '-COMP:FORCE', '-COMP:T/fin', 'TAIL:T', 'PHI:NUM:_', 'ARG', '!SPEC:*', 'ADV', '-SPEC:N', '-COMP:C/fin', 'TUA/inf', 'CAL', '-SPEC:Neg/fin', '-SPEC:FORCE', '!COMP:*', 'PHI:GEN:_', 'adjoinable'}
VA/inf          {'SPEC:*', 'VA/inf', 'COMP:v', '-SPEC:V', 'PHI:PER:_', 'COMP:V', 'PHI:DET:_', '-SPEC:T/fin', 'INF', 'LANG:EN', '-COMP:FORCE', '-COMP:T/fin', 'PHI:NUM:_', 'ARG', '!SPEC:*', '-SPEC:N', '-COMP:C/fin', 'VAL', 'LF:VA', 'PF:vAn', '!COMP:*', 'PHI:GEN:_'}
MA/ssa          {'MA/inf', 'COMP:v', 'PHI:PER:_', 'COMP:V', 'PHI:DET:_', 'TAIL:V', '-VAL', '-SPEC:*', 'PF:massa', '-SPEC:T/fin', 'LANG:EN', 'PHI:NUM:_', 'ARG', 'ADV', '-SPEC:N', '-SPEC:Neg/fin', 'LF:in_doing', '-SPEC:FORCE', 'PHI:GEN:_', 'adjoinable'}
MA/tta          {'MA/inf', 'ADV', '-SPEC:N', 'LF:without_doing', 'PHI:PER:_', 'PF:matta', 'PHI:DET:_', '-SPEC:Neg/fin', '-VAL', '-SPEC:T/fin', 'PHI:NUM:_', 'LANG:EN', '-SPEC:FORCE', 'PHI:GEN:_', 'TAIL:T', 'ARG', 'adjoinable'}
MA/lla          {'MA/inf', 'COMP:v', 'PHI:PER:_', 'LF:by_doing', '-VAL', 'PHI:NUM:_', 'TAIL:T', 'ADV', '-SPEC:N', '-SPEC:FORCE', 'adjoinable', 'COMP:V', 'PHI:DET:_', '-SPEC:T/fin', 'LANG:EN', 'ARG', 'PF:malla', '-SPEC:Neg/fin', 'PHI:GEN:_'}
MA/inf          {'MA/inf', 'COMP:v', 'PHI:PER:_', '-VAL', 'PHI:NUM:_', 'ADV', '-SPEC:N', 'LF:to_do', 'PF:maan', '-SPEC:FORCE', 'adjoinable', 'COMP:V', 'PHI:DET:_', 'TAIL:V', '-SPEC:T/fin', 'LANG:EN', 'ARG', '-SPEC:Neg/fin', 'PHI:GEN:_'}
E/inf           {'ADV', '-ARG', '-SPEC:N', 'SPEC:*', 'LANG:FI', '-SPEC:Neg/fin', '-VAL', 'LF:by', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:en', 'adjoinable'}
BE-             {'SPEC:ADV', 'COMP:T/prt', 'COMP:P', 'COPULA', '-VAL', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', '-COMP:T/fin', '-COMP:V', 'SPEC:D', 'ASP', '-ARG', 'PF:BE', 'V', '-SPEC:FORCE', 'SPEC:P', '-COMP:v', 'SPEC:TO/inf', '!COMP:*', 'LF:BE'}
D               {'-SPEC:C', '-SPEC:V', '-SPEC:INF', 'COMP:N', '-SPEC:P', 'OP', 'PF:D', 'LANG:EN', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:D', '-SPEC:MA/lla', 'D', 'LF:D', '-ARG', '-SPEC:N', '!PROBE:N', '-COMP:uR', '-SPEC:Neg/fin', '-COMP:D', '!COMP:*', 'adjoinable'}
P               {'PF:P', 'LF:P', '-SPEC:C', '-SPEC:V', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:INF', '-SPEC:C/fin', 'PHI:DET:_', '-SPEC:P', '-VAL', '-SPEC:*', '-COMP:uWH', '-COMP:ADV', 'LANG:EN', '-SPEC:ADV', '-SPEC:T/fin', '-COMP:N', '-COMP:T/fin', 'PHI:NUM:_', 'ARG', '-SPEC:N', 'P', '-SPEC:v', 'COMP:D', '-SPEC:iR', '-float', '-SPEC:Neg/fin', '-SPEC:FORCE', '!COMP:*', 'PHI:GEN:_', 'adjoinable'}
pro             ['LANG:EN']
pro-            {'COMP:P', '-SPEC:V', '-COMP:A', '-COMP:WH', 'PF:(pro)', 'COMP:R/D', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:uWH', '-COMP:AUX', '-SPEC:P', '-COMP:ADV', '-SPEC:T/fin', '-COMP:N', 'LANG:EN', '-SPEC:ADV', '-COMP:T/fin', '-COMP:V', 'LF:pro', 'COMP:R', 'PHI', '-SPEC:N', 'SPEC:A', '-COMP:C/fin', 'N', 'COMP:uR', '-SPEC:FORCE', '-SPEC:R', '-COMP:v', '-COMP:D'}
cl              {'RIGHT:PRG', 'LEFT:T/fin', 'LEFT:D,CL', 'CL', 'LANG:EN', 'RIGHT:ARE/inf', 'inflectional'}
inc             {'inflectional', 'LANG:EN', 'INCORPORATED'}
sg              {'inflectional', 'PHI:NUM:SG', 'LANG:EN'}
pl              {'inflectional', 'LANG:EN', 'PHI:NUM:PL'}
1p              {'PHI:PER:1', 'inflectional', 'LANG:EN'}
2p              {'inflectional', 'LANG:EN', 'PHI:PER:2'}
3p              {'inflectional', 'LANG:EN', 'PHI:PER:3'}
def             {'PHI:DET:DEF', 'inflectional', 'LANG:EN'}
indef           {'PHI:DET:INDEF', 'inflectional', 'LANG:EN'}
hum             {'inflectional', 'LANG:EN', 'PHI:HUM:HUM'}
nonhum          {'inflectional', 'PHI:HUM:NONHUM', 'LANG:EN'}
m               {'inflectional', 'PHI:GEN:M', 'LANG:EN'}
f               {'inflectional', 'LANG:EN', 'PHI:GEN:F'}
nom             {'TAIL:FIN,!COMP:*,VAL', 'inflectional', 'LANG:EN', 'NOM'}
acc             {'TAIL:v', 'inflectional', 'LANG:EN', 'ACC'}
dat             {'TAIL:v', 'inflectional', 'LANG:EN', 'DAT'}
uC/op           {'inflectional', 'LANG:EN', 'uC/op'}
wh              {'OP:WH', 'inflectional', 'LANG:EN', 'OP:_'}
wh_             {'OP:_', 'OP', 'LANG:EN', 'inflectional', 'FORCE:OP:WH'}
top             {'OP:TOP', 'inflectional', 'LANG:EN'}
foc             {'OP:FOC', 'inflectional', 'LANG:EN'}
C/op            {'inflectional', 'LANG:EN', 'OP:C/OP'}
rel             {'-COMP:C/fin', 'LANG:EN', 'OP:REL', 'inflectional', 'adjoinable'}
Q               {'OP:WH', 'OP', 'LANG:EN', 'inflectional', 'OP:Q'}
