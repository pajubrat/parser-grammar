ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'P', '-SPEC:v', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:ADV', '-COMP:N', '-SPEC:V', 'COMP:D', 'LF:to', '-COMP:T/fin', '-SPEC:INF', '-COMP:ADV', '-SPEC:N', '-SPEC:iR', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', 'PF:a', 'COMP:ARE/inf', '-ARG', '-SPEC:P', 'adjoinable', '-SPEC:*', '-SPEC:T/fin', '-COMP:uWH', '-VAL', 'LANG:IT', '!COMP:*'}
a_D             {'D', '-SPEC:Neg/fin', '-SPEC:C', '!PROBE:N', '-SPEC:V', '-COMP:D', '-COMP:uR', 'COMP:N', '-COMP:T/fin', '-SPEC:INF', 'PF:D', 'LF:D', '-SPEC:N', '-SPEC:MA/lla', '-ARG', '-SPEC:P', '-SPEC:D', 'adjoinable', '-SPEC:T/fin', 'OP', 'LANG:EN', '!COMP:*'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'LF:admire', 'CLASS:TR', '-COMP:V', '-COMP:Neg', '-COMP:N', 'PHI:GEN:_', 'COMP:D', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:Neg', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', 'LANG:EN', '-VAL', '-COMP:P', 'COMP:P', '!COMP:*', '-COMP:v', 'PF:admire'}
admire*         ['LANG:EN']
T/fin*          {'CAT:T/fin', 'NO_NUMBER', '!SPEC:*', 'NO_DET', 'LANG:EN', 'LF:T', '-VAL', "PF:T/fin'"}
v*              {'PF:v', 'NO_DET', 'NO_NUMBER', 'CAT:v', 'LANG:EN', '-VAL', 'LF:v'}
admire**        ['LANG:EN']
T/fin**         {"PF:T/fin''", 'CAT:T/fin', 'NO_NUMBER', '!SPEC:*', 'NO_DET', 'PHI:PER:3', 'LANG:EN', 'LF:T', '-VAL', 'NO_PERSON'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'LF:admire', '-VAL', '-COMP:N', 'PF:adora', 'COMP:D', 'PHI:GEN:_', 'ASP', 'SPEC:TO/inf', 'SPEC:ADV', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'LANG:IT', '-COMP:v'}
antaa           ['LANG:FI']
anta-           {'-COMP:V', 'PF:antaa', '-COMP:v', '-COMP:N', '+SEM:directional', 'COMP:D', 'SPEC:D', 'ASP', 'SPEC:ADV', 'LF:give', 'ARG', '-COMP:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'ASP:BOUNDED', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', '-COMP:FIN', 'CLASS:DITR', '-VAL', 'COMP:P', '!COMP:*', 'LANG:FI'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'-COMP:V', 'LF:ask', '-COMP:N', 'PHI:GEN:_', 'COMP:D', 'SPEC:D', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PF:ask', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', 'LANG:EN', 'SEM:internal', '-VAL', 'COMP:P', '-COMP:v'}
ask-            {'-COMP:V', 'LF:ask', '-COMP:N', 'PHI:GEN:_', 'COMP:D', 'SPEC:D', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PF:ask', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', 'LANG:EN', 'SEM:internal', '-VAL', 'COMP:P', '-COMP:v'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'PF:avain', 'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-SEM:directional', '-COMP:v', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', 'LF:key', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:FI'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'PF:auto', 'LANG:FI', 'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-SEM:directional', '-COMP:v', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LF:car'}
city            {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', 'LF:city', '-SPEC:V', '-COMP:D', 'SPEC:A', 'PF:city', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', 'LANG:EN', '-COMP:V', 'COMP:uR', 'COMP:P', '-COMP:v'}
che             ['LANG:IT']
che-            {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', 'PF:che', '-SPEC:V', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', 'LF:who', '-COMP:*', '-COMP:C/fin', '-SPEC:T/fin', 'PHI_N', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:IT', '-COMP:v'}
chiamato        ['LANG:IT']
chiamata-       {'LF:called', '-COMP:V', '-COMP:N', 'PHI:GEN:_', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'PF:chiamato', 'SPEC:P', '-SPEC:T/fin', '-VAL', 'COMP:P', 'LANG:IT', '-COMP:v'}
danno           {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', 'PF:danno', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', 'LF:damage', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:IT', '-COMP:v'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'-COMP:V', '-COMP:N', 'PHI:GEN:_', 'COMP:D', 'PF:detest', 'SPEC:ADV', 'ARG', 'ASP', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'COMP:ARE/inf', 'SPEC:P', '-SPEC:T/fin', 'LF:detest', 'SEM:internal', '-VAL', 'COMP:P', 'LANG:IT', '-COMP:v'}
devono          ['LANG:EN']
deva-           {'-COMP:V', '-COMP:v', '-COMP:N', 'PF:deva', 'PHI:GEN:_', 'SPEC:D', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'COMP:ARE/inf', 'SPEC:P', '-ASP', '-SPEC:T/fin', 'SEM:internal', '-VAL', 'COMP:P', 'LANG:IT', 'LF:must'}
di              {'P', '-SPEC:v', '-SPEC:Neg/fin', '-SPEC:C', '-adjoinable', 'LF:of', '-SPEC:ADV', '-COMP:N', '-SPEC:V', 'COMP:D', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:INF', '-COMP:ADV', '-SPEC:N', '-SPEC:iR', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', 'PHI:NUM:_', '-SPEC:P', '-SPEC:T/fin', 'SPEC:*', '-COMP:uWH', '-VAL', '!COMP:*', 'LANG:FI', 'PF:di'}
does            {'!PROBE:V', '-COMP:INF', '!SPEC:D', '-SPEC:TO/inf', 'PHI:PER:3', 'PF:does', 'T', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'COMP:V', '-SPEC:N', 'PHI:NUM:_', '-SPEC:Neg', 'PHI:GEN:M', 'LF:does', 'SPEC:*', 'LANG:EN', '!COMP:*', '-SPEC:v', 'COMP:T/prt', 'FIN', '-SPEC:V', 'PHI:GEN:_', 'COMP:D', 'SPEC:D', 'SPEC:TO/inf', 'PHI:GEN:F', 'VAL', 'COMP:Neg', 'COMP:v', '-SPEC:C/fin', 'T/fin', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:SG'}
does_C          ['LANG:EN']
does-           {'!PROBE:V', '-COMP:INF', '!SPEC:D', '-SPEC:TO/inf', 'PHI:PER:3', 'PF:does', 'T', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'COMP:V', '-SPEC:N', 'PHI:NUM:_', '-SPEC:Neg', 'PHI:GEN:M', 'LF:does', 'SPEC:*', 'LANG:EN', '!COMP:*', '-SPEC:v', 'COMP:T/prt', 'FIN', '-SPEC:V', 'PHI:GEN:_', 'COMP:D', 'SPEC:D', 'SPEC:TO/inf', 'PHI:GEN:F', 'VAL', 'COMP:Neg', 'COMP:v', '-SPEC:C/fin', 'T/fin', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:SG'}
dorme           ['LANG:IT']
dorme-          {'PF:dorme', '-VAL', '!SPEC:D', '-COMP:N', 'PHI:GEN:_', 'ASP', 'SPEC:TO/inf', 'SPEC:ADV', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'LF:sleep', 'V', 'PHI:NUM:_', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', 'LANG:EN', '-COMP:V', 'COMP:P', '-COMP:v'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'COMP:T/prt', 'Neg/fin', 'NEG', 'FIN', '!SPEC:*', 'ARG', 'POL:NEG', 'PHI:PER:_', 'VAL', 'PHI:DET:_', 'PF:ei', '-SPEC:T', 'PHI:NUM:_', 'LF:neg', '-SPEC:T/fin', 'SPEC:*', 'SEM:internal', '!COMP:T', '%SPEC:INF', '!COMP:*', 'LANG:FI'}
e-              {'COMP:T/prt', 'Neg/fin', 'NEG', 'FIN', '!SPEC:*', 'ARG', 'POL:NEG', 'PHI:PER:_', 'VAL', 'PHI:DET:_', 'PF:ei', '-SPEC:T', 'PHI:NUM:_', 'LF:neg', '-SPEC:T/fin', 'SPEC:*', 'SEM:internal', '!COMP:T', '%SPEC:INF', '!COMP:*', 'LANG:FI'}
elaa            ['LANG:FI']
ela-            {'PF:elaa', '-COMP:V', '-COMP:v', '-COMP:N', '-COMP:D', 'SPEC:D', 'CLASS:INTR', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', 'LF:live', '-VAL', 'COMP:P', 'LANG:FI'}
etsii           ['LANG:FI']
etsi-           {'LF:search', '-COMP:V', '!COMP:D', '-COMP:v', '-COMP:N', 'COMP:D', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PF:etsi', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', '-VAL', 'COMP:P', 'LANG:FI'}
etta            {'!PROBE:T/fin', 'COMP:T/fin', '-ARG', 'PF:etta', 'FIN', 'COMP:C/fin', 'LF:that', '-SPEC:*', '-VAL', 'FORCE', '!COMP:*', 'LANG:FI'}
flow'           {'-COMP:V', 'PF:flow', '-COMP:N', 'PHI:GEN:_', 'SPEC:D', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'LF:flow', 'SPEC:P', '-SPEC:T/fin', 'LANG:EN', '-VAL', 'COMP:P', '-COMP:v'}
from            {'P', 'TAIL:V,+SEM:directional', '-SPEC:v', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:ADV', '-COMP:N', '-SPEC:V', 'PHI:GEN:_', 'COMP:D', '-float', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:INF', '-COMP:ADV', '-SPEC:N', '-SPEC:iR', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', 'PHI:NUM:_', 'PF:from', '-SPEC:P', 'adjoinable', '-SPEC:*', '-SPEC:T/fin', '-COMP:uWH', 'LANG:EN', 'LF:from', '-VAL', '!COMP:*'}
gave            ['LANG:EN']
give-           {'-COMP:V', '-COMP:N', '+SEM:directional', 'COMP:D', 'PHI:GEN:_', 'SPEC:D', 'ASP', 'SPEC:ADV', 'PF:give', 'LF:give', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', '-COMP:FIN', 'LANG:EN', 'CLASS:DITR', '-VAL', 'COMP:P', '!COMP:*', '-COMP:v'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-SEM:directional', '-COMP:D', 'PF:Giuseppe', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', 'LF:Giuseppe', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:IT', '-COMP:v'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'CLASS:TR', '-COMP:V', 'COMP:A/inf', 'PF:haluaa', '-COMP:v', '-COMP:N', 'COMP:D', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP:BOUNDED', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:*', '-SPEC:T/fin', 'LF:want', 'SEM:internal', '-VAL', '-COMP:P', 'COMP:P', '!COMP:*', 'LANG:FI'}
hairitsee       ['LANG:FI']
hairitse-       {'-COMP:V', '!COMP:D', '-COMP:v', '-COMP:N', 'SPEC:D', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PF:hairitsee', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'LF:disturb', 'SPEC:P', '-SPEC:T/fin', '-COMP:FIN', '-VAL', 'COMP:P', 'LANG:FI'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'-COMP:V', '-COMP:N', 'PHI:GEN:_', 'SPEC:D', 'COMP:T', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'LF:have', 'PHI:PER:_', 'PHI:DET:_', 'PF:ha', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-ASP', '-SPEC:T/fin', 'SPEC:*', 'SEM:internal', '-VAL', 'COMP:P', 'LANG:IT', '-COMP:v'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'-COMP:V', 'LF:disappear', '-COMP:v', '-COMP:N', '-COMP:D', 'SPEC:D', 'CLASS:INTR', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', '-VAL', 'COMP:P', 'LANG:FI', 'PF:havia'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'LF:admire', 'CLASS:TR', '-COMP:V', '!COMP:D', '-COMP:v', '-COMP:N', 'PF:ihaile-', 'COMP:D', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', '-COMP:FIN', '-VAL', '-COMP:P', 'COMP:P', '!COMP:*', 'LANG:FI'}
il              {'D', '-SPEC:Neg/fin', '-SPEC:C', '!PROBE:N', '-SPEC:V', '-COMP:D', '-COMP:uR', 'COMP:N', '-COMP:T/fin', '-SPEC:INF', '-SPEC:N', '-SPEC:MA/lla', '-ARG', '-SPEC:P', 'PF:il', '-SPEC:D', 'adjoinable', '-SPEC:T/fin', 'OP', 'LF:the', 'LANG:IT', '!COMP:*'}
i               {'D', '-SPEC:Neg/fin', '-SPEC:C', '!PROBE:N', '-SPEC:V', '-COMP:D', '-COMP:uR', 'COMP:N', '-COMP:T/fin', '-SPEC:INF', '-SPEC:N', '-SPEC:MA/lla', '-ARG', '-SPEC:P', 'PF:il', '-SPEC:D', 'adjoinable', '-SPEC:T/fin', 'OP', 'LF:the', 'LANG:IT', '!COMP:*'}
in              {'P', '-SPEC:v', 'LF:in', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:ADV', '-COMP:N', '-SPEC:V', 'PHI:GEN:_', 'COMP:D', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:INF', 'PF:in', '-COMP:ADV', '-SPEC:N', '-SPEC:iR', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', 'PHI:NUM:_', '-SPEC:P', 'adjoinable', '-SPEC:T/fin', '-COMP:uWH', '-VAL', 'LANG:IT', '!COMP:*'}
infermieri      {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'LF:nurses', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', 'COMP:R', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', 'PF:infermieri', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:IT', '-COMP:v'}
is              ['LANG:EN']
be-             {'-COMP:V', '-COMP:TO/inf', 'COPULA', 'PF:be', '-COMP:N', 'SPEC:D', 'ASP', 'SPEC:TO/inf', 'SPEC:ADV', '-COMP:T/fin', 'LF:be', 'V', '-SPEC:FORCE', '-ARG', 'SPEC:P', '-SPEC:T/fin', 'LANG:EN', '-VAL', 'COMP:P', '!COMP:*', '-COMP:v'}
istuuko         ['LANG:FI']
istuu-          {'-COMP:V', '-COMP:v', '-COMP:N', '-COMP:D', 'SPEC:D', 'LF:sit', 'CLASS:INTR', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', 'PF:istuu', '-VAL', 'COMP:P', 'LANG:FI'}
John            ['LANG:EN']
John-           {'COMP:R/D', 'PF:John', '-COMP:WH', 'N', 'LF:John', '-adjoinable', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-SEM:directional', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', 'LANG:EN', '-COMP:V', 'COMP:uR', 'COMP:P', '-COMP:v'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'COMP:R/D', '-COMP:WH', 'N', 'LF:Jukka', '-SPEC:ADV', '-COMP:N', '-SPEC:V', 'PF:Jukka', '-SEM:directional', '-COMP:v', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:FI'}
juosten         ['LANG:FI']
juokse-         {'-COMP:V', '-COMP:v', '-COMP:N', 'ASP', 'LF:run', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', 'PF:juokse-', '-SPEC:T/fin', '-VAL', 'COMP:P', 'LANG:FI'}
istuu           ['LANG:FI']
istu-           {'-COMP:V', '-COMP:v', '-COMP:N', 'LF:sit', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', 'PF:istuu', '-VAL', 'COMP:P', 'LANG:FI'}
kaksi           {'PHI:DET:_', 'TAIL:ARG,VAL,FIN', 'NUM', 'PHI:NUM:_', 'PF:kaksi', 'LF:two', 'COMP:n', 'SPEC:*', '-VAL', 'COMP:N', 'PHI:NUM:SG', 'ARG', 'LANG:FI', 'PHI:PER:_'}
kaksi           {'NUM', 'PF:kaksi', 'TAIL:ARG,ASP:BOUNDED', 'LF:two', 'COMP:n', 'SPEC:*', 'LANG:EN', 'TAIL:*POL:NEG', 'COMP:N'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'SPEC:*', 'NUM', 'COMP:n', 'PF:kaksi', 'COMP:N', 'LF:two', 'LANG:FI'}
kaupunkia       ['LANG:EN']
kaupunki        {'COMP:R/D', '-COMP:WH', 'PF:kaupunki', 'N', '-SPEC:ADV', '-COMP:N', 'LF:city', '-SPEC:V', '-COMP:v', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', '-COMP:P', 'COMP:uR', 'LANG:FI'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'-COMP:V', '!COMP:A/inf', 'SEM:external', '-COMP:N', '-COMP:v', 'ASP', 'SPEC:ADV', 'ARG', 'PF:kaske', 'SPEC:TO/inf', '-COMP:T/fin', 'LF:order', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', '-VAL', 'COMP:P', 'LANG:FI'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:v', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', 'PF:kello', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', 'LF:watch', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:FI'}
kello0-         {'PF:kello', '0', 'LF:watch', 'SPEC:D', '2SPEC', 'LANG:FI'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'COMP:R/D', 'PF:key', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', 'LF:key', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', 'LANG:EN', '-COMP:V', 'COMP:uR', 'COMP:P', '-COMP:v'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-SEM:directional', '-COMP:v', 'PF:kirja', '-COMP:D', 'SPEC:A', 'LF:book', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:FI'}
kohti           {'P', 'PF:kohti', '-SPEC:v', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:ADV', '-COMP:N', '-SPEC:V', 'COMP:D', 'LF:towards', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:INF', '-COMP:ADV', '-SPEC:N', '-SPEC:iR', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', 'PHI:NUM:_', '-SPEC:P', 'adjoinable', '-SPEC:T/fin', 'SPEC:*', '-COMP:uWH', '-VAL', 'TAIL:V', '!COMP:*', 'LANG:FI'}
koko            {'LF:all', 'LANG:FI', 'D', '-SPEC:Neg/fin', '-SPEC:C', '!PROBE:N', '-SPEC:V', '-COMP:D', '-COMP:uR', 'COMP:N', '-COMP:T/fin', '-SPEC:INF', '-SPEC:N', '-SPEC:MA/lla', '-ARG', '-SPEC:P', '-SPEC:D', 'adjoinable', '-SPEC:T/fin', 'OP', 'TAIL:T', '!COMP:*', 'PF:koko'}
kuka            ['LANG:FI']
kuka-           {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:v', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', 'PHI', '-SPEC:P', 'LF:who', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', 'PF:kuka', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:FI'}
kuorsaa-        {'-COMP:V', 'LF:snore', '-COMP:WH', '-COMP:v', '-COMP:N', '-COMP:D', 'PF:kuorsaa', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', '-VAL', 'COMP:P', 'LANG:FI'}
kuorsaamalla    ['LANG:FI']
lahella         {'P', '-SPEC:Neg/fin', '!SPEC:D', '-SPEC:ADV', '!SPEC:*', '-COMP:FORCE', 'INF', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'COMP:V', '-COMP:ADV', '-SPEC:N', 'PHI:NUM:_', 'PF:lahella', '-COMP:C/fin', 'SPEC:*', '!COMP:*', '-SPEC:v', '-SPEC:C', '-COMP:N', '-SPEC:V', 'COMP:D', 'VAL', '-SPEC:INF', 'COMP:v', '-SPEC:iR', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', '-SPEC:P', 'LF:near', 'adjoinable', '-SPEC:T/fin', '-COMP:uWH', 'LANG:FI'}
lahella         {'P', '-SPEC:v', '-SPEC:Neg/fin', '!COMP:D', '-SPEC:C', '-SPEC:ADV', '-COMP:N', '-SPEC:V', 'COMP:D', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:INF', '-COMP:ADV', '-SPEC:N', '-SPEC:iR', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', 'PHI:NUM:_', 'PF:lahella', '-SPEC:P', 'LF:near', 'adjoinable', '-SPEC:T/fin', 'SPEC:*', '-COMP:uWH', '-VAL', '!COMP:*', 'LANG:FI'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'-COMP:V', '-COMP:v', '-COMP:N', 'PF:lahtea', '-COMP:D', 'SPEC:D', 'CLASS:INTR', 'LF:leave', 'SPEC:ADV', 'ARG', 'ASP', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'COMP:PP', 'SPEC:P', '-SPEC:T/fin', '-VAL', 'COMP:P', 'LANG:FI'}
lavano          ['LANG:IT']
lava-           {'PF:lava', '-COMP:V', 'LF:wash', '-COMP:N', 'PHI:GEN:_', 'COMP:D', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', '-VAL', 'COMP:P', 'LANG:IT', '!COMP:*', '-COMP:v'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'D', '-SPEC:Neg/fin', '-SPEC:C', '!PROBE:N', '-SPEC:V', '-COMP:D', '-COMP:uR', 'COMP:N', '-COMP:T/fin', '-SPEC:INF', 'LF:D', '-SPEC:N', '-SPEC:MA/lla', '-ARG', 'PF:le', '-SPEC:P', '-SPEC:D', 'adjoinable', '-SPEC:T/fin', 'OP', 'LANG:IT', '!COMP:*'}
leaves          ['LANG:EN']
leave           {'PF:leave', '-VAL', '!SPEC:D', '-COMP:N', 'PHI:GEN:_', 'ASP', 'SPEC:TO/inf', 'LF:leave', 'SPEC:ADV', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', 'LANG:EN', '-COMP:V', 'COMP:P', '-COMP:v'}
leave-          {'-COMP:V', 'PF:leave', '!SPEC:D', '-COMP:N', 'PHI:GEN:_', 'LF:leave', 'SPEC:ADV', 'ARG', 'ASP', '-COMP:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', 'LANG:EN', '-VAL', 'COMP:P', '-COMP:v'}
like-           {'!COMP:D', '-VAL', '-COMP:N', 'PHI:GEN:_', 'ASP', 'SPEC:TO/inf', 'ARG', 'SPEC:ADV', 'LF:like', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', 'PF:like', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', 'LANG:EN', '-COMP:V', 'COMP:P', '-COMP:v'}
likes           ['LANG:EN']
like            {'!COMP:D', '-VAL', '-COMP:N', 'PHI:GEN:_', 'ASP', 'SPEC:TO/inf', 'ARG', 'SPEC:ADV', 'LF:like', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', 'PF:like', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', 'LANG:EN', '-COMP:V', 'COMP:P', '-COMP:v'}
little          ['LANG:EN']
little-         {'0', 'LANG:EN', 'SPEC:D', 'LF:little', '2SPEC', 'PF:little-'}
lle             {'P', 'TAIL:V,+SEM:directional', '-SPEC:v', '-SPEC:Neg/fin', '-VAL', '-SPEC:C', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '+SEM:directional', 'COMP:D', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:INF', '-COMP:ADV', '-SPEC:N', '-SPEC:iR', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', 'PHI:NUM:_', '-SPEC:P', 'adjoinable', '-SPEC:*', 'LF:for', '-SPEC:T/fin', '-COMP:uWH', 'PF:P(lle)', '!COMP:*', 'LANG:FI'}
lla             {'P', '-SPEC:v', 'LF:by', '-SPEC:Neg/fin', '-SPEC:C', 'TAIL:*V', '-SPEC:ADV', '-COMP:N', '-SPEC:V', 'COMP:D', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:INF', 'PF:P(lla)', '-COMP:ADV', '-SPEC:N', '-SPEC:iR', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', 'PHI:NUM:_', '-SPEC:P', 'adjoinable', '-SPEC:T/fin', 'SPEC:*', '-COMP:uWH', 'TAIL:T', '-VAL', '!COMP:*', 'LANG:FI'}
Luisa           ['LANG:IT']
Luisa-          {'PF:Luisa', 'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-SEM:directional', '-COMP:D', 'SPEC:A', '-COMP:T/fin', 'LF:Luisa', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:IT', '-COMP:v'}
lukemalla       ['LANG:FI']
luke-           {'CLASS:TR', '-COMP:V', '!COMP:*', '-COMP:v', '-COMP:N', 'COMP:D', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', '-COMP:P', '-VAL', 'PF:luke', 'COMP:P', 'LF:read', 'LANG:FI'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'CLASS:TR', '-COMP:V', '!COMP:D', '-COMP:v', '-COMP:N', 'LF:find', 'PF:loyta-', 'COMP:D', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP:BOUNDED', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', '-VAL', '-COMP:P', 'COMP:P', '!COMP:*', 'LANG:FI'}
Mary            ['LANG:EN']
Mary-           {'COMP:R/D', '-COMP:WH', 'N', '-adjoinable', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-SEM:directional', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', 'PF:Mary', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', 'LF:Mary', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', 'LANG:EN', '-COMP:V', 'COMP:uR', 'COMP:P', '-COMP:v'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'LF:Merja', 'COMP:R/D', '-COMP:WH', 'N', '-adjoinable', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-SEM:directional', '-COMP:v', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', 'PF:Merja', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:FI'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'COMP:v', 'MA/inf', '-SPEC:N', 'LF:by', 'ADV', '-SPEC:FORCE', '-SPEC:Neg/fin', 'adjoinable', '-SPEC:T/fin', 'SPEC:*', 'PF:malla', 'TAIL:T', 'LANG:FI'}
meren           ['LANG:FI']
mere-           {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', 'PF:meri', '-COMP:N', '-SPEC:V', '-COMP:v', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', 'LF:ocean', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:FI'}
mistake         {'COMP:R/D', '-COMP:WH', 'N', 'PF:mistake', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', 'LF:mistake', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', 'LANG:EN', '-COMP:V', 'COMP:uR', 'COMP:P', '-COMP:v'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'COMP:R/D', 'PF:mika-', '-COMP:WH', 'N', 'LF:what', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:v', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:FI'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'LF:move', 'CLASS:TR', '-COMP:V', 'LANGN:EN', '-COMP:N', 'PF:move', 'COMP:D', '+SEM:directional', 'PHI:GEN:_', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', '-VAL', '-COMP:P', 'COMP:P', '!COMP:*', '-COMP:v'}
mukavasti       ['LANG:EN']
mukava-         {'0', 'LF:comfortably', 'SPEC:D', '2SPEC', 'PF:mukavasti', 'LANG:FI'}
must            {'-SPEC:v', '!PROBE:V', 'COMP:T/prt', '-COMP:INF', '!SPEC:D', 'FIN', '-SPEC:TO/inf', '-SPEC:V', 'PHI:GEN:_', 'COMP:D', 'SPEC:D', 'T', 'PF:must', 'SPEC:TO/inf', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'VAL', 'PHI:DET:_', 'COMP:Neg', 'COMP:V', '-SPEC:N', 'COMP:v', '-SPEC:Neg', '-SPEC:C/fin', 'T/fin', '-SPEC:FORCE', 'PHI:NUM:_', '-SPEC:T/fin', 'SPEC:*', 'LANG:EN', 'MODAL', '!COMP:*', 'LF:must'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'CLASS:TR', '-COMP:V', '-COMP:v', '-COMP:N', 'COMP:D', 'ASP', 'LF:sell', 'PF:myy', 'SPEC:ADV', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'ASP:BOUNDED', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', '-VAL', '-COMP:P', 'COMP:P', '!COMP:*', 'LANG:FI'}
naki            ['LANG:FI']
nake-           {'LF:see', 'CLASS:TR', '-COMP:V', '-COMP:MA/inf', '-COMP:v', '-COMP:N', 'COMP:D', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:ESSA/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP:BOUNDED', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', 'PF:nake', '-VAL', '-COMP:P', 'COMP:P', '!COMP:*', 'LANG:FI'}
nayttaa         ['LANG:FI']
naytta-         {'!SPEC:D', '-COMP:v', '-COMP:N', '!COMP:VA/inf', 'COMP:P', 'ASP', 'SPEC:ADV', 'SPEC:TO/inf', '-COMP:T/fin', 'VAL', 'PF:naytta', 'V', '-SPEC:FORCE', '-ARG', 'SPEC:P', '-SPEC:T/fin', 'SEM:internal', '-COMP:V', 'LF:seem', 'LANG:FI'}
ndo             {'VAL', 'COMP:v', 'COMP:V', '!COMP:*', 'PF:PRG', '-COMP:FORCE', '-COMP:C/fin', 'LF:ing', 'PRG', 'INF', 'LANG:EN', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '?ARG'}
ne              {'D', '-SPEC:Neg/fin', '-SPEC:C', '!PROBE:N', '-SPEC:V', '-COMP:D', 'PHI:PER:3', '-COMP:uR', 'COMP:N', '-COMP:T/fin', '-SPEC:INF', '-SPEC:N', 'PF:ne', 'PHI:NUM:PL', '-SPEC:MA/lla', 'LF:those', '-ARG', '-SPEC:P', '-SPEC:D', 'adjoinable', '-SPEC:T/fin', 'OP', '!COMP:*', 'LANG:FI'}
niiden          ['LANG:EN']
nen             {'A', 'PF:a', 'TAIL:D', '-SPEC:D', 'adjoinable', '-SPEC:A', 'LF:ing', 'SPEC:*', 'COMP:0', 'LANG:FI'}
not             {'PHI:DET:_', 'PHI:NUM:_', 'Neg', '!COMP:*', '-SPEC:T/fin', 'SPEC:*', '-COMP:FIN', 'PF:not', '-COMP:D', 'POL:NEG', '-VAL', 'LF:not', 'LANG:EN', 'ARG', 'PHI:GEN:_', '-COMP:C', 'PHI:PER:_'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-COMP:V', '-COMP:v', '-COMP:N', 'PF:nukku', '-COMP:T', '-COMP:D', 'SPEC:D', 'CLASS:INTR', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'LF:sleep', 'V', 'PHI:NUM:_', '-SPEC:FORCE', '-COMP:Neg/fin', 'SPEC:P', '-SPEC:T/fin', '-VAL', 'COMP:P', 'LANG:FI'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'LF:possessions', 'PF:omaisuuden', 'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:v', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:FI'}
operatoria      ['LANG:IT']
operatoria-     {'0', 'PF:operatoria', 'SPEC:D', '2SPEC', 'LANG:IT', 'LF:operation'}
ostaa           ['LANG:FI']
osta-           {'CLASS:TR', '-COMP:V', 'PF:osta', '-COMP:N', '-COMP:v', 'COMP:D', 'LF:buy', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP:BOUNDED', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', '-VAL', '-COMP:P', 'COMP:P', '!COMP:*', 'LANG:FI'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'COMP:R/D', '-COMP:WH', 'PF:paiva', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:v', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', 'SEM:nonreferential', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', 'LF:day', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:FI'}
Pariisia        ['LANG:FI']
Pariisi-        {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:v', '-COMP:D', 'SPEC:A', '-COMP:T/fin', 'LF:Paris', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', 'PF:Pariisi', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:FI'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'COMP:R/D', '-COMP:V', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-SEM:directional', '-COMP:v', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', 'PF:Pekka', 'COMP:uR', 'COMP:P', 'LANG:FI', 'LF:Pekka'}
pelottaa        ['LANG:FI']
pelkaa-         {'CLASS:TR', '-COMP:V', 'PF:pelkaa', '-COMP:v', '-COMP:N', 'COMP:D', 'LF:fear', 'ASP', 'SPEC:ADV', 'ARG', '-COMP:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', '-VAL', '-COMP:P', 'COMP:P', '!COMP:*', 'LANG:FI'}
persuades       ['LANG:EN']
persuade-       {'-COMP:V', '-VAL', 'SEM:external', '-COMP:N', 'PHI:GEN:_', 'COMP:TO/inf', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', 'LANG:EN', 'LF:persuade', 'PF:persuade', 'COMP:P', '!COMP:*', '-COMP:v'}
peruuntui       ['LANG:FI']
peruuntu-       {'LANG:FI', 'PF:peruuntui', '-VAL', '-COMP:N', 'SPEC:D', 'ASP', 'SPEC:TO/inf', 'SPEC:ADV', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'LF:cancelled', 'SPEC:P', '-SPEC:T/fin', '-COMP:V', 'COMP:P', '-COMP:v'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'CLASS:TR', '-COMP:V', 'LF:wash', '-COMP:N', '-COMP:v', 'COMP:D', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP:BOUNDED', 'PHI:NUM:_', 'V', 'PF:pese', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', '-VAL', '-COMP:P', 'COMP:P', '!COMP:*', 'LANG:FI'}
pese-           {'CLASS:TR', '-COMP:V', 'LF:wash', '-COMP:N', '-COMP:v', 'COMP:D', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', 'PF:pese', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', '-VAL', '-COMP:P', 'COMP:P', '!COMP:*', 'LANG:FI'}
petardi         {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'PF:petardi', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', 'LF:firecrackers', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:IT', '-COMP:v'}
pieni           ['LANG:FI']
pieni-          {'0', 'SPEC:D', '2SPEC', 'PF:pieni-', 'LF:small', 'LANG:FI'}
poikien         ['LANG:FI']
poika-          {'COMP:R/D', 'PF:poika', 'LF:boy', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:v', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:FI'}
puhelinta       ['LANG:FI']
puhelin-        {'0', 'LANG:FI', 'PF:puhelin', 'SPEC:D', '2SPEC', 'LF:phone'}
punainen        ['LANG:FI']
puna-           {'0', 'PF:puna-', 'SPEC:D', '2SPEC', 'LF:red', 'LANG:FI'}
presupposto     {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', 'LF:presupposition', 'PF:presupposto', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:IT', '-COMP:v'}
primary         {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'PF:primary', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', 'COMP:R', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:IT', '-COMP:v', 'LF:nurse'}
promises        ['LANG:EN']
promise-        {'-COMP:V', 'LF:promise', '-COMP:N', 'PHI:GEN:_', 'COMP:D', 'SPEC:D', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'PF:promise', 'SPEC:P', '-SPEC:T/fin', 'LANG:EN', 'SEM:internal', '-VAL', 'COMP:P', '-COMP:v'}
pyytaa          ['LANG:FI']
pyyta-          {'LANG:FI', 'LF:ask', '-VAL', 'SEM:external', '-COMP:N', 'ASP', 'SPEC:TO/inf', 'SPEC:ADV', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'PF:pyyda', 'SPEC:P', '-SPEC:T/fin', '-COMP:V', 'COMP:P', '-COMP:v'}
raukesi         ['LANG:FI']
raukea-         {'-COMP:V', '-COMP:v', '-COMP:N', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PF:raukea', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'LF:terminate', 'SPEC:P', '-SPEC:T/fin', '-VAL', 'COMP:P', 'LANG:FI'}
red             ['LANG:EN']
red-            {'0', 'LANG:EN', 'SPEC:D', 'PF:red', '2SPEC', 'LF:red'}
saavuttaa       ['LANG:FI']
saavutta-       {'CLASS:TR', '-COMP:V', '!COMP:D', 'LF:reach', '-COMP:v', '-COMP:N', 'PF:saavutta-', 'COMP:D', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP:BOUNDED', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', '-VAL', '-COMP:P', 'COMP:P', '!COMP:*', 'LANG:FI'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'COMP:VA/inf', '-COMP:V', '-COMP:v', '-COMP:N', 'SPEC:D', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', 'COMP:FORCE', '-SPEC:FORCE', 'PF:sano-', 'SPEC:P', '-SPEC:T/fin', '-VAL', 'COMP:P', 'LANG:FI', 'LF:say'}
said            ['LANG:EN']
say'            {'-COMP:V', '-COMP:N', 'PHI:GEN:_', 'SPEC:D', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PF:say', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '!COMP:FORCE', '-SPEC:T/fin', 'LANG:EN', '-VAL', 'COMP:P', '-COMP:v', 'LF:say'}
say-            {'-COMP:V', '-COMP:N', 'PHI:GEN:_', 'SPEC:D', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PF:say', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '!COMP:FORCE', '-SPEC:T/fin', 'LANG:EN', '-VAL', 'COMP:P', '-COMP:v', 'LF:say'}
sala            ['LANG:IT']
sala-           {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', '-COMP:T/fin', 'LF:room', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', 'PF:sala', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:IT', '-COMP:v'}
scoppiati       ['LANG:IT']
scoppia-        {'-COMP:V', '-COMP:N', 'PF:scoppia', 'PHI:GEN:_', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'LF:explode', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', '-VAL', 'COMP:P', 'LANG:IT', '-COMP:v'}
sen             {'D', '-SPEC:Neg/fin', '-SPEC:C', '!PROBE:N', '-SPEC:V', 'PF:sen', '-COMP:D', 'TAIL:*POL:NEG', '-COMP:uR', 'COMP:N', '-COMP:T/fin', 'LF:the/that', '-SPEC:INF', '-SPEC:N', '-SPEC:MA/lla', '-ARG', '-SPEC:P', '-SPEC:D', 'adjoinable', '-SPEC:T/fin', 'TAIL:ASP', 'OP', 'TAIL:PHI', '!COMP:*', 'LANG:FI'}
se'             {'D', '!COMP:*', '-SPEC:Neg/fin', '-SPEC:C', '!PROBE:N', '-SPEC:V', '-COMP:D', '-COMP:uR', 'COMP:N', '-COMP:T/fin', 'LF:the/that', '-SPEC:INF', '-SPEC:N', '-SPEC:MA/lla', '-ARG', '-SPEC:P', '-SPEC:D', 'adjoinable', '-SPEC:T/fin', 'OP', 'PF:se', 'LANG:FI'}
sentenza        {'COMP:R/D', 'LF:sentence', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:IT', '-COMP:v', 'PF:sentenza'}
Seine           ['LANG:EN']
Seine-          {'COMP:R/D', 'LF:Seine', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', 'PF:Seine', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', 'LANG:EN', '-COMP:V', 'COMP:uR', 'COMP:P', '-COMP:v'}
sembrano        ['LANG:IT']
sembra-         {'-COMP:V', '-COMP:N', '-COMP:D', 'COMP:P', 'SPEC:D', 'SPEC:ADV', 'SPEC:TO/inf', '-COMP:T/fin', '!COMP:ARE/inf', 'V', '-SPEC:FORCE', 'PF:sembra', '-ARG', 'SPEC:P', '-ASP', '-SPEC:T/fin', 'LANG:EN', '-VAL', 'LF:seem', '-COMP:v'}
sleeps          ['LANG:EN']
sleep           {'-COMP:V', '-COMP:N', 'PHI:GEN:_', '-COMP:D', 'SPEC:D', 'CLASS:INTR', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'LF:sleep', 'V', 'PHI:NUM:_', '-SPEC:FORCE', 'PF:sleep', 'SPEC:P', '-SPEC:T/fin', 'LANG:EN', '-VAL', 'COMP:P', '-COMP:v'}
sleep-          {'-COMP:V', '-COMP:N', 'PHI:GEN:_', '-COMP:D', 'SPEC:D', 'CLASS:INTR', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'LF:sleep', 'V', 'PHI:NUM:_', '-SPEC:FORCE', 'PF:sleep', 'SPEC:P', '-SPEC:T/fin', 'LANG:EN', '-VAL', 'COMP:P', '-COMP:v'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'COMP:R/D', '!COMP:A/inf', 'LF:agreement', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:v', '-COMP:D', 'SPEC:A', 'PF:sopimus', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:FI'}
spinge          ['LANG:IT']
spinge-         {'LF:push', '!COMP:D', '-VAL', '-COMP:N', 'PHI:GEN:_', 'ASP', 'SPEC:TO/inf', 'SPEC:ADV', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'PF:spinge', 'SPEC:P', '-SPEC:T/fin', '-COMP:V', '-COMP:P', 'LANG:IT', '-COMP:v'}
ssa             {'P', '-SPEC:v', 'LF:in', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:ADV', '-COMP:N', 'COMP:n/MA', '-SPEC:V', 'COMP:D', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:INF', '-COMP:ADV', '-SPEC:N', '-SPEC:iR', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', 'PHI:NUM:_', '-SPEC:P', 'PF:ssa', 'adjoinable', '-SPEC:T/fin', 'SPEC:*', '-COMP:uWH', '-VAL', 'TAIL:V', '!COMP:*', 'LANG:FI'}
stanno          ['LANG:IT']
sta-            {'-COMP:V', 'LF:stay', '-COMP:v', '-COMP:N', 'PHI:GEN:_', 'SPEC:D', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'COMP:PRG', 'SPEC:P', '-ASP', '-SPEC:T/fin', 'LANG:EN', 'SEM:internal', '-VAL', 'COMP:P', 'PF:sta'}
sti             {'-SPEC:N', 'LF:by', 'ADV', '-SPEC:FORCE', '-SPEC:Neg/fin', '-ARG', 'adjoinable', '-SPEC:T/fin', 'SPEC:*', 'TAIL:T', 'PF:sti', '!COMP:*', 'LANG:FI'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:v', '-COMP:D', 'SPEC:A', '-COMP:T/fin', 'PF:sukka-', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', 'LF:socks', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:FI'}
talo            {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:v', '-COMP:D', 'SPEC:A', 'PF:talo', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', 'LF:house', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:FI'}
tama            ['LANG:EN']
tama-           {'PF:tama', 'COMP:R/D', '-COMP:WH', 'N', 'LF:this', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:v', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', 'PHI', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:FI'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'-COMP:V', '!COMP:A/inf', '-VAL', 'FIN', '-COMP:v', '-COMP:N', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', 'LF:must', '-SPEC:FORCE', 'SPEC:P', '-ASP', '-SPEC:T/fin', 'SPEC:*', 'MODAL', 'COMP:P', 'PF:taytyy', 'LANG:FI'}
teki            ['LANG:FI']
teke-           {'-COMP:A/inf', 'LF:make', 'CLASS:TR', 'PF:teke', '-COMP:V', '!COMP:D', '-COMP:v', '-COMP:N', 'COMP:D', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP:BOUNDED', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', '-VAL', '-COMP:P', 'COMP:P', '!COMP:*', 'LANG:FI'}
that            {'!PROBE:T/fin', 'COMP:T/fin', '-ARG', 'FIN', 'LF:that', '-SPEC:*', 'LANG:EN', 'PF:that', '-VAL', 'FORCE', '!COMP:*', 'COMP:C/fin'}
the             {'D', '-SPEC:Neg/fin', '-SPEC:C', '!PROBE:N', 'PHI:DEF:DEF', '-SPEC:V', '-COMP:D', '-COMP:uR', 'COMP:N', '-COMP:T/fin', '-SPEC:INF', '-SPEC:N', '-SPEC:MA/lla', '-ARG', '-SPEC:P', '-SPEC:D', 'adjoinable', '-SPEC:T/fin', 'PF:the', 'LANG:EN', 'LF:the', 'OP', '!COMP:*'}
to              {'P', 'TAIL:V,+SEM:directional', 'PF:to', '-SPEC:v', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '+SEM:directional', 'COMP:D', 'PHI:GEN:_', 'LF:to', '-float', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:INF', '-COMP:ADV', '-SPEC:N', '-SPEC:iR', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', 'PHI:NUM:_', '-SPEC:P', 'adjoinable', '-SPEC:*', '-SPEC:T/fin', '-COMP:uWH', 'LANG:EN', '-VAL', '!COMP:*'}
to_inf          {'-SPEC:v', 'LF:TO/inf', '-COMP:FORCE', '-SPEC:V', 'INF', '-COMP:T/fin', 'PF:TO/inf', 'COMP:v', 'COMP:V', 'adjoinable', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:EN', '-VAL', 'TO/inf', '!COMP:*', '?ARG'}
towards         {'P', '-SPEC:v', 'PF:towards', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:ADV', '-COMP:N', '-SPEC:V', 'PHI:GEN:_', 'COMP:D', '-float', 'LF:towards', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:INF', '-COMP:ADV', '-SPEC:N', '-SPEC:iR', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', 'PHI:NUM:_', '-SPEC:P', 'adjoinable', '-SPEC:*', '-SPEC:T/fin', '-COMP:uWH', 'LANG:EN', '-VAL', 'TAIL:V', '!COMP:*'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'CLASS:TR', '-COMP:V', 'PF:tonaise', 'LF:nudge', '-COMP:v', '-COMP:N', 'COMP:D', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', '-VAL', '-COMP:P', 'COMP:P', '!COMP:*', 'LANG:FI'}
tta             {'P', '-SPEC:v', 'ADV', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:ADV', '-COMP:N', 'COMP:n/MA', '-SPEC:V', 'COMP:D', 'PF:tta', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:INF', 'LF:without', '-COMP:ADV', '-SPEC:N', '-SPEC:iR', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', 'PHI:NUM:_', '-SPEC:P', 'adjoinable', '-SPEC:T/fin', 'SPEC:*', '-COMP:uWH', '-VAL', '!COMP:*', 'LANG:FI'}
tries           ['LANG:EN']
try-            {'PF:try', '-COMP:V', 'LF:try', '-COMP:N', 'PHI:GEN:_', 'SPEC:D', 'ASP', 'SPEC:ADV', '!COMP:-ARG', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', '!COMP:TO/inf', 'V', 'PHI:NUM:_', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', 'LANG:EN', 'SEM:internal', '-VAL', 'COMP:P', '-COMP:v'}
verifiche       {'LF:verification', 'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', 'PF:verifiche', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:IT', '-COMP:v'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'-COMP:V', '-COMP:v', '-COMP:N', '-COMP:D', 'SPEC:D', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PF:virtaa', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'LF:flow', 'SPEC:P', '-SPEC:T/fin', '!COMP:P', '-VAL', 'COMP:P', 'LANG:FI'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'-COMP:V', 'PF:volu', '-COMP:N', 'PHI:GEN:_', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:*', '-SPEC:T/fin', 'LANG:EN', 'LF:want', 'SEM:internal', '-VAL', 'COMP:P', '!COMP:*', '-COMP:v'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'CLASS:TR', '-COMP:V', 'SEM:achievement', '-COMP:N', 'PF:voitta', 'PHI:GEN:_', 'COMP:D', 'ASP', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP:BOUNDED', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'LF:win', 'SPEC:P', '-SPEC:T/fin', 'LANG:EN', '-VAL', '-COMP:P', 'COMP:P', '!COMP:*', '-COMP:v'}
wants           ['LANG:EN']
want-           {'CLASS:TR', '-VAL', '-COMP:N', '-SPEC:TO/inf', 'PHI:GEN:_', 'COMP:TO/inf', 'COMP:D', 'ASP', 'SPEC:ADV', 'ARG', 'PF:want', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', 'LANG:EN', 'LF:want', '-COMP:V', '-COMP:P', 'COMP:P', '!COMP:*', '-COMP:v'}
what            ['LANG:EN']
what-           {'COMP:R/D', '-COMP:WH', 'N', 'LF:what', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:*', '-COMP:C/fin', '-SPEC:T/fin', 'PHI_N', '-COMP:AUX', 'PF:what', 'LANG:EN', '-COMP:V', 'COMP:uR', 'COMP:P', '-COMP:v'}
which           {'OP:WH', 'PF:which', 'D', '-SPEC:Neg/fin', '-SPEC:C', '!PROBE:N', '-SPEC:V', '-COMP:D', '-COMP:uR', 'COMP:N', '-COMP:T/fin', '-SPEC:INF', '-SPEC:N', '-SPEC:MA/lla', '-ARG', '-SPEC:P', '-SPEC:D', 'adjoinable', 'LF:which', '-SPEC:T/fin', 'OP', 'LANG:EN', '!COMP:*'}
who             ['LANG:EN']
who-            {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', 'PF:who', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', 'LF:who', '-COMP:*', '-COMP:C/fin', '-SPEC:T/fin', 'PHI_N', '-COMP:AUX', 'LANG:EN', '-COMP:V', 'COMP:uR', 'COMP:P', '-COMP:v'}
whether         {'OP:WH', 'FIN', 'OP:Q', 'LF:whether', 'PF:whether', 'FORCE', '!PROBE:T/fin', 'COMP:T/fin', '-ARG', '-SPEC:*', 'OP', 'LANG:EN', 'Q', '-VAL', '!COMP:*', 'COMP:C/fin'}
yrittaa         ['LANG:FI']
yritta-         {'-COMP:V', '!COMP:A/inf', 'LF:try', '-COMP:N', 'PF:yritta', 'PHI:GEN:_', 'SPEC:D', 'ASP', 'SPEC:ADV', '!COMP:-ARG', 'ARG', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', 'LANG:EN', 'SEM:internal', '-VAL', 'COMP:P', '-COMP:v'}
mina            ['LANG:EN']
mina-           {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:v', '-COMP:D', 'SPEC:A', 'LF:I', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:*', 'PF:mina', '-COMP:C/fin', 'PHI_N', '-COMP:AUX', '-SPEC:T/fin', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:FI'}
sina            ['LANG:EN']
sina-           {'COMP:R/D', 'LF:you', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:v', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', 'PF:sina', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:*', '-COMP:C/fin', '-SPEC:T/fin', 'PHI_N', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:FI'}
han             ['LANG:EN']
han-            {'COMP:R/D', 'LF:s/he', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:v', '-COMP:D', 'SPEC:A', '-COMP:T/fin', 'PF:han', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:*', '-COMP:C/fin', '-SPEC:T/fin', 'PHI_N', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:FI'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'COMP:R/D', 'PF:me', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:v', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', 'LF:we', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:*', '-COMP:C/fin', '-SPEC:T/fin', 'PHI_N', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:FI'}
te              ['LANG:EN']
te-             {'PF:te', 'COMP:R/D', 'LF:you', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:v', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:*', '-COMP:C/fin', '-SPEC:T/fin', 'PHI_N', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:FI'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he-             {'PF:he', 'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:v', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', 'LF:they', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:*', '-COMP:C/fin', '-SPEC:T/fin', 'PHI_N', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:FI'}
he-             {'PF:he', 'COMP:R/D', 'LF:he', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:*', '-COMP:C/fin', '-SPEC:T/fin', 'PHI_N', '-COMP:AUX', 'LANG:EN', '-COMP:V', 'COMP:uR', 'COMP:P', '-COMP:v'}
se              ['LANG:FI']
se-             {'D', '!COMP:*', '-SPEC:Neg/fin', '-SPEC:C', '!PROBE:N', '-SPEC:V', '-COMP:D', '-COMP:uR', 'COMP:N', '-COMP:T/fin', '-SPEC:INF', '-SPEC:N', '-SPEC:MA/lla', 'LF:it/that', '-ARG', '-SPEC:P', '-SPEC:D', 'adjoinable', '-SPEC:T/fin', 'OP', 'PF:se', 'LANG:FI'}
I               ['LANG:EN']
I-              {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', 'LF:I', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', 'PF:I', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:*', '-COMP:C/fin', '-SPEC:T/fin', 'PHI_N', '-COMP:AUX', 'LANG:EN', '-COMP:V', 'COMP:uR', 'COMP:P', '-COMP:v'}
you             ['LANG:EN']
you-            {'COMP:R/D', 'LF:you', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', 'PF:you', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:*', '-COMP:C/fin', '-SPEC:T/fin', 'PHI_N', '-COMP:AUX', 'LANG:EN', '-COMP:V', 'COMP:uR', 'COMP:P', '-COMP:v'}
he              ['LANG:EN']
she             ['LANG:EN']
she-            {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', 'PF:she', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:*', 'LF:she', '-COMP:C/fin', 'PHI_N', '-COMP:AUX', 'LANG:EN', '-SPEC:T/fin', '-COMP:V', 'COMP:uR', 'COMP:P', '-COMP:v'}
we              ['LANG:EN']
we-             {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'PF:we', 'COMP:R', 'LF:we', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:*', '-COMP:C/fin', '-SPEC:T/fin', 'PHI_N', '-COMP:AUX', 'LANG:EN', '-COMP:V', 'COMP:uR', 'COMP:P', '-COMP:v'}
you_pl          ['LANG:EN']
you_pl-         {'COMP:R/D', '-COMP:V', 'PF:you_pl', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', 'PHI', '-SPEC:P', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', 'LANG:EN', 'LF:you_pl', 'COMP:uR', 'COMP:P', '-COMP:v'}
they            ['LANG:EN']
they-           {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', 'LF:they', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:*', 'PF:they', '-COMP:C/fin', '-SPEC:T/fin', 'PHI_N', '-COMP:AUX', 'LANG:EN', '-COMP:V', 'COMP:uR', 'COMP:P', '-COMP:v'}
it              ['LANG:EN']
it-             {'PF:it', 'D', '-SPEC:Neg/fin', '-SPEC:C', '!PROBE:N', '-SPEC:V', '-COMP:D', '-COMP:uR', 'COMP:N', '-COMP:T/fin', '-SPEC:INF', '-SPEC:N', '-SPEC:MA/lla', 'LF:it/that', '-ARG', '-SPEC:P', '-SPEC:D', 'adjoinable', '-SPEC:T/fin', 'OP', 'LANG:EN', '!COMP:*'}
io              ['LANG:EN']
io-             {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', 'LF:I', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', 'PF:io', '-SPEC:P', '-COMP:*', '-COMP:C/fin', '-SPEC:T/fin', 'PHI_N', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:IT', '-COMP:v'}
tu              ['LANG:EN']
tu-             {'COMP:R/D', 'LF:you', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:*', '-COMP:C/fin', 'PF:tu', 'PHI_N', '-COMP:AUX', '-SPEC:T/fin', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:IT', '-COMP:v'}
lui             ['LANG:EN']
lui-            {'COMP:R/D', 'LF:he', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', 'PF:lui', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:*', '-COMP:C/fin', '-SPEC:T/fin', 'PHI_N', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:IT', '-COMP:v'}
lei             ['LANG:EN']
lei-            {'COMP:R/D', '-COMP:WH', 'N', 'PF:lei', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:*', 'LF:she', '-COMP:C/fin', 'PHI_N', '-COMP:AUX', '-SPEC:T/fin', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:IT', '-COMP:v'}
noi             ['LANG:EN']
noi-            {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', 'LF:we', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', 'PF:noi', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:*', '-COMP:C/fin', '-SPEC:T/fin', 'PHI_N', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:IT', '-COMP:v'}
voi             ['LANG:EN']
voi-            {'COMP:R/D', '-COMP:V', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', 'PF:voi', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:*', '-COMP:C/fin', '-SPEC:T/fin', 'PHI_N', '-COMP:AUX', 'LF:you_pl', 'COMP:uR', 'COMP:P', 'LANG:IT', '-COMP:v'}
loro            ['LANG:EN']
loro-           {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', 'LF:they', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:*', '-COMP:C/fin', '-SPEC:T/fin', 'PHI_N', '-COMP:AUX', 'PF:loro', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:IT', '-COMP:v'}
mi              ['LANG:EN']
mi-             {'COMP:R/D', '-COMP:WH', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', 'CL', '-COMP:*', '-COMP:C/fin', 'PHI_N', '-COMP:AUX', '-COMP:V', 'PF:mi(cl)', 'COMP:uR', 'COMP:P', 'N', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', 'LF:me', '-SPEC:INF', 'COMP:R', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-SPEC:T/fin', 'LANG:IT', '-COMP:v'}
la              ['LANG:EN']
la-             {'COMP:R/D', '-COMP:WH', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', 'CL', '-COMP:*', '-COMP:C/fin', 'PHI_N', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'N', 'LF:her', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', '-SPEC:INF', 'COMP:R', '-SPEC:R', '-SPEC:C/fin', 'PF:la(cl)', '-SPEC:FORCE', '-SPEC:P', '-SPEC:T/fin', 'LANG:IT', '-COMP:v'}
lo              ['LANG:EN']
lo-             {'COMP:R/D', '-COMP:WH', '-SPEC:ADV', 'LF:him', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', 'PF:lo(cl)', 'CL', '-COMP:*', '-COMP:C/fin', 'PHI_N', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'N', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', '-SPEC:INF', 'COMP:R', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-SPEC:T/fin', 'LANG:IT', '-COMP:v'}
si              ['LANG:EN']
si-             {'COMP:R/D', 'CAL:CL', '-COMP:WH', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-COMP:*', '-COMP:C/fin', 'PHI_N', '-COMP:AUX', '-COMP:V', 'COMP:uR', 'COMP:P', 'PF:si(cl)', 'LF:3sg', 'N', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', '-SPEC:INF', 'COMP:R', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-SPEC:T/fin', 'LANG:IT', '-COMP:v'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'COMP:R/D', '-COMP:WH', 'N', '-SPEC:ADV', '-COMP:N', '-SPEC:V', 'PF:ci', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:P', '-COMP:*', '-COMP:C/fin', '-SPEC:T/fin', 'PHI_N', '-COMP:AUX', 'LF:there', '-COMP:V', 'COMP:uR', 'COMP:P', 'LANG:IT', '-COMP:v'}
[-n]            {'inflectional', 'LANG:FI', 'PHI:DET:DEF', 'PHI:PER:1', 'PHI', 'PHI:NUM:SG', 'PHI:HUM:HUM'}
[-t]            {'LANG:FI', 'PHI:PER:2', 'PHI:DET:DEF', 'inflectional', 'PHI', 'PHI:NUM:SG', 'PHI:HUM:HUM'}
[-V]            {'inflectional', 'PHI:PER:3', 'PHI:NUM:SG', 'PHI', 'LANG:FI'}
[-mme]          {'inflectional', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:1', 'PHI', 'LANG:FI', 'PHI:HUM:HUM'}
[-mme]          {'inflectional', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:1', 'PHI:HUM:HUM', 'LANG:FI'}
[-tte]          {'inflectional', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:2', 'PHI', 'LANG:FI', 'PHI:HUM:HUM'}
[-vat]          {'PHI:PER:3', 'PHI:NUM:PL', 'inflectional', 'PHI', 'LANG:FI'}
[-ni]           {'inflectional', 'LANG:FI', 'PHI:DET:DEF', 'PHI:PER:1', 'PHI', 'PHI:NUM:SG', 'PHI:HUM:HUM'}
[-si]           {'LANG:FI', 'PHI:PER:2', 'PHI:DET:DEF', 'inflectional', 'PHI', 'PHI:NUM:SG', 'PHI:HUM:HUM'}
[-nsa]          {'inflectional', 'PHI:PER:3', 'PHI:NUM:SG', 'PHI', 'LANG:FI'}
[-an]           {'inflectional', 'PHI', 'PHI:PER:3', 'LANG:FI'}
[-nne]          {'inflectional', 'PHI:NUM:PL', 'PHI:PER:2', 'PHI:DET:DEF', 'LANG:FI', 'PHI:HUM:HUM'}
[-s]            {'inflectional', 'PHI:PER:3', 'LANG:EN', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI', 'PHI:GEN:F'}
[-0]            {'PHI:PER:1', 'PHI:NUM:PL', 'PHI', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:3', 'PHI:PER:2', 'LANG:EN', 'PHI:GEN:N', 'inflectional'}
[-o]            {'inflectional', 'PHI:DET:DEF', 'PHI:PER:1', 'PHI', 'LANG:IT', 'PHI:NUM:SG', 'PHI:HUM:HUM'}
[-i]            {'PHI:PER:2', 'PHI:DET:DEF', 'inflectional', 'PHI', 'LANG:IT', 'PHI:NUM:SG', 'PHI:HUM:HUM'}
[-a]            {'inflectional', 'PHI:PER:3', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI', 'LANG:IT'}
[-e]            {'inflectional', 'PHI:PER:3', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI', 'LANG:IT'}
[-iamo]         {'inflectional', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:1', 'PHI', 'LANG:IT', 'PHI:HUM:HUM'}
[-te]           {'inflectional', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:2', 'PHI', 'LANG:IT', 'PHI:HUM:HUM'}
[-no]           {'PHI:PER:3', 'PHI:DET:DEF', 'PHI:NUM:PL', 'inflectional', 'PHI', 'LANG:IT'}
[-nom]          {'NOM', 'TAIL:FIN,ARG,VAL', 'LANG:EN', 'inflectional', 'adjoinable'}
[-par]          {'LANG:FI', 'TAIL:ARG,-VAL', 'PAR', 'inflectional', 'adjoinable'}
[-gen]          {'LANG:EN', '-float', 'inflectional', 'GEN', 'TAIL:INF,ARG'}
gen             {'LANG:EN', '-float', 'inflectional', 'GEN', 'TAIL:INF,ARG'}
[-n_acc]        {'inflectional', 'n-ACC', 'TAIL:PHI', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable', 'LANG:FI'}
[-t_acc]        {'LANG:FI', 't-ACC', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'inflectional', 'adjoinable'}
[-0_acc]        {'LANG:FI', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'inflectional', 'TAIL:*PHI', '0_ACC', 'adjoinable'}
asp             {'ASP:BOUNDED', 'LANG:EN', 'inflectional'}
a'              {'a', 'PF:a', 'LANG:X', 'LF:A'}
b'              {'b', 'LANG:X', 'PF:b', 'LF:B'}
b''             {'-COMP:c', 'LANG:EN', 'b', 'PF:b', 'LF:B'}
c''             {'c', 'PF:c', 'SPEC:a', 'LANG:EN', 'LF:C'}
c'              {'c', 'LF:C', 'PF:c', 'LANG:X'}
d'              {'d', 'PF:d', 'LF:D', 'LANG:'}
a''             ['LANG:EN']
x'              {'LF:X', 'LANG:X', 'PF:x', 'x'}
y'              {'PF:y', 'LF:Y', 'LANG:X', 'y'}
z'              {'z', 'LF:Z', 'PF:x', 'LANG:X'}
John'           {'PF:John', 'LANG:X', 'LF:John', "N'"}
admires'        {'LANG:X', 'PF:admires', "V'", 'LF:admires'}
admires''       {'-VAL', '-COMP:N', 'PHI:GEN:_', 'PF:admires', 'SPEC:D', 'ASP', 'SPEC:TO/inf', 'SPEC:ADV', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'V', 'LF:admires', '-SPEC:FORCE', 'SPEC:P', '-SPEC:T/fin', 'LANG:EN', '-COMP:V', 'COMP:P', '-COMP:v'}
Mary'           {'LF:mary', 'LANG:X', 'PF:Mary', "N'"}
T/fin           {'-SPEC:v', '!PROBE:V', 'COMP:T/prt', '-COMP:INF', '!SPEC:D', 'FIN', '-SPEC:TO/inf', '-SPEC:V', 'PHI:GEN:_', 'COMP:D', 'SPEC:D', 'T', 'SPEC:TO/inf', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'VAL', 'PHI:DET:_', 'COMP:V', 'COMP:v', '-SPEC:N', '-SPEC:C/fin', '-SPEC:Neg', 'PHI:NUM:_', 'T/fin', '-SPEC:FORCE', 'PF:T', '-SPEC:T/fin', 'SPEC:*', 'LANG:EN', 'LF:T', '!COMP:*'}
v               {'PHI:DET:_', 'PF:v', 'COMP:V', '!PROBE:V', '-SPEC:N', 'PHI:NUM:_', 'v', 'PHI:GEN:_', 'LANG:EN', 'SPEC:D', '-VAL', 'ASP', 'ARG', 'LF:v', '!COMP:*', 'PHI:PER:_'}
C/fin           {'C/fin', 'C', 'PF:C', 'FIN', 'LF:C/fin', 'COMP:Neg/fin', 'VAL', '-SPEC:N', '-SPEC:C/fin', 'COMP:T/fin', '-ARG', '-COMP:C/fin', '-SPEC:T/fin', 'SPEC:*', 'LANG:EN', '-COMP:T/prt', '!PROBE:FIN', '!COMP:*'}
T               {'-COMP:NEG', '!PROBE:V', 'COMP:T/prt', 'FIN', '-SPEC:V', 'PHI:GEN:_', 'COMP:D', 'SPEC:D', 'T', 'ARG', 'PHI:PER:_', 'VAL', 'PHI:DET:_', 'COMP:v', 'COMP:V', '-SPEC:N', 'PHI:NUM:_', '-SPEC:FORCE', 'PF:T', '-SPEC:T/fin', 'SPEC:*', 'LANG:EN', 'LF:T', '!COMP:*'}
T/prt           {'-COMP:NEG', '!PROBE:V', 'COMP:T/prt', 'FIN', '-SPEC:V', 'PF:T/prt', 'PHI:GEN:_', 'COMP:D', 'SPEC:D', 'T', 'T/prt', 'ARG', 'PHI:PER:_', 'VAL', 'PHI:DET:_', 'COMP:v', 'COMP:V', '-SPEC:N', 'PHI:NUM:_', '-SPEC:FORCE', 'LF:T/prt', '-SPEC:T/fin', 'SPEC:*', 'LANG:EN', '!COMP:*'}
a0              {'PF:A', 'A', 'TAIL:D', '-SPEC:D', '-adjoinable', 'adjoinable', '-SPEC:A', 'LANG:EN', 'LF:A', 'COMP:0'}
n               {'COMP:R/D', '-COMP:WH', '!SPEC:D', '-SPEC:ADV', '!SPEC:*', 'INF', 'COMP:0', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'COMP:V', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', 'PHI:NUM:_', '-COMP:C/fin', 'SPEC:*', '-COMP:AUX', 'LANG:EN', '-COMP:V', 'COMP:uR', 'COMP:P', '!COMP:*', 'PF:n', 'N', '-COMP:N', '-SPEC:V', 'PHI:GEN:_', '-COMP:D', 'SPEC:A', 'VAL', '-SPEC:INF', 'COMP:v', 'COMP:R', '-SPEC:R', 'n', '-SPEC:C/fin', '-SPEC:FORCE', 'LF:n', '-SPEC:P', '-SPEC:T/fin', '-COMP:v'}
impass          {'PHI:DET:_', 'COMP:V', '!PROBE:V', '-SPEC:N', 'PHI:NUM:_', '-VAL', 'v', 'LF:impass', 'PHI:GEN:_', 'LANG:EN', 'SPEC:D', 'PF:impass', 'ASP', 'ARG', '!COMP:*', 'PHI:PER:_'}
cau             {'PHI:DET:_', 'COMP:V', '!PROBE:V', '-SPEC:N', 'PF:Cau', 'PHI:NUM:_', 'v', 'PHI:GEN:_', 'LF:v/Cause', 'LANG:EN', 'SPEC:D', '-VAL', 'ASP', 'ARG', '!COMP:*', 'PHI:PER:_'}
INF             {'PF:INF', 'COMP:v', 'COMP:V', '!COMP:*', 'LF:INF', '-COMP:FORCE', '-COMP:C/fin', '-SPEC:T/fin', 'INF', '-SPEC:V', 'LANG:EN', '-COMP:T/fin'}
prtcpl          {'-COMP:NEG', '!PROBE:V', 'COMP:T/prt', 'FIN', '-COMP:FORCE', 'PF:T/prt', '-SPEC:V', 'INF', 'COMP:D', 'PHI:GEN:_', 'SPEC:D', 'T', 'T/prt', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'VAL', 'PHI:DET:_', 'COMP:V', 'COMP:v', '-SPEC:N', 'PHI:NUM:_', '-SPEC:FORCE', 'LF:T/prt', '-COMP:C/fin', 'SPEC:*', '-SPEC:T/fin', 'LANG:EN', '!COMP:*'}
TO/inf          {'-SPEC:v', 'LF:TO/inf', '!COMP:V', '-COMP:FORCE', '-SPEC:V', 'INF', '-COMP:T/fin', 'PF:TO/inf', 'COMP:v', 'COMP:V', 'adjoinable', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:EN', '-VAL', 'TO/inf', '!COMP:*', '?ARG'}
A/inf           {'-SPEC:Neg/fin', 'A/inf', '-COMP:FORCE', '-SPEC:V', 'INF', '-COMP:T/fin', 'LF:A/inf', 'COMP:v', 'COMP:V', 'PF:A/inf', '?VAL', '-COMP:C/fin', '-SPEC:T/fin', 'SPEC:*', 'LANG:EN', '!COMP:*', '?ARG'}
ARE/inf         {'-adjoinable', '-COMP:FORCE', '-SPEC:V', 'INF', 'LF:ARE/inf', '-COMP:T/fin', 'VAL', 'COMP:v', 'COMP:V', 'ARE/inf', 'PF:are', '-COMP:C/fin', '-SPEC:T/fin', 'SPEC:*', 'LANG:EN', '!COMP:*', '?ARG'}
ESSA/inf        {'ADV', 'LF:while', '-SPEC:Neg/fin', 'ESSA/inf', 'PF:essa', '-COMP:FORCE', '-SPEC:V', 'INF', '-COMP:T/fin', 'COMP:v', 'COMP:V', '-SPEC:N', '-SPEC:FORCE', '?VAL', 'adjoinable', '-COMP:C/fin', '-SPEC:T/fin', 'SPEC:*', 'LANG:EN', 'TAIL:T', '!COMP:*', '?ARG'}
TUA/inf         {'ADV', 'TUA/inf', '-SPEC:Neg/fin', '!SPEC:*', '-COMP:FORCE', '-SPEC:V', 'LF:after', 'INF', 'PHI:GEN:_', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'COMP:v', 'CAL', 'COMP:V', '-SPEC:N', 'PF:tua', 'PHI:NUM:_', '-SPEC:FORCE', 'adjoinable', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:EN', 'TAIL:T', '!COMP:*'}
VA/inf          {'!SPEC:*', '-COMP:FORCE', '-SPEC:V', 'INF', 'PHI:GEN:_', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'VAL', 'PHI:DET:_', 'COMP:v', 'COMP:V', '-SPEC:N', 'PHI:NUM:_', 'VA/inf', 'LF:VA', '-COMP:C/fin', '-SPEC:T/fin', 'SPEC:*', 'LANG:EN', '!COMP:*', 'PF:vAn'}
MA/ssa          {'ADV', '-SPEC:Neg/fin', 'PHI:GEN:_', 'ARG', 'PHI:PER:_', 'PHI:DET:_', 'COMP:v', 'COMP:V', 'MA/inf', 'PF:massa', '-SPEC:N', 'PHI:NUM:_', '-SPEC:FORCE', 'adjoinable', '-SPEC:*', '-SPEC:T/fin', 'LANG:EN', '-VAL', 'LF:in_doing', 'TAIL:V'}
MA/tta          {'PHI:DET:_', 'MA/inf', '-SPEC:N', 'PHI:NUM:_', 'ADV', '-SPEC:FORCE', '-SPEC:Neg/fin', 'PF:matta', 'adjoinable', 'LF:without_doing', '-SPEC:T/fin', 'PHI:GEN:_', 'LANG:EN', 'TAIL:T', '-VAL', 'ARG', 'PHI:PER:_'}
MA/lla          {'-SPEC:Neg/fin', 'LF:by_doing', 'ARG', 'PHI:PER:_', 'PHI:DET:_', 'COMP:V', 'MA/inf', '-SPEC:N', 'PHI:NUM:_', 'LANG:EN', '-VAL', 'ADV', 'PHI:GEN:_', 'PF:malla', 'COMP:v', '-SPEC:FORCE', 'adjoinable', '-SPEC:T/fin', 'TAIL:T'}
MA/inf          {'-SPEC:Neg/fin', 'ARG', 'LF:to_do', 'PHI:PER:_', 'PHI:DET:_', 'COMP:V', 'MA/inf', '-SPEC:N', 'PHI:NUM:_', 'PF:maan', 'LANG:EN', '-VAL', 'ADV', 'PHI:GEN:_', 'COMP:v', '-SPEC:FORCE', 'adjoinable', '-SPEC:T/fin', 'TAIL:V'}
E/inf           {'-SPEC:N', 'PF:en', 'LF:by', 'ADV', '-SPEC:FORCE', '-SPEC:Neg/fin', '-ARG', 'adjoinable', '-SPEC:T/fin', 'SPEC:*', '-VAL', 'LANG:FI'}
BE-             {'COMP:T/prt', '-COMP:V', 'COPULA', 'LF:BE', '-COMP:N', 'SPEC:D', 'ASP', 'SPEC:ADV', 'SPEC:TO/inf', '-COMP:T/fin', 'PF:BE', 'V', '-SPEC:FORCE', '-ARG', 'SPEC:P', '-SPEC:T/fin', 'LANG:EN', '-VAL', 'COMP:P', '!COMP:*', '-COMP:v'}
D               {'D', '-SPEC:Neg/fin', '-SPEC:C', '!PROBE:N', '-SPEC:V', '-COMP:D', '-COMP:uR', 'COMP:N', '-COMP:T/fin', '-SPEC:INF', 'PF:D', 'LF:D', '-SPEC:N', '-SPEC:MA/lla', '-ARG', '-SPEC:P', '-SPEC:D', 'adjoinable', '-SPEC:T/fin', 'OP', 'LANG:EN', '!COMP:*'}
P               {'P', '-SPEC:v', 'LF:P', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:ADV', '-COMP:N', '-SPEC:V', 'PHI:GEN:_', 'COMP:D', '-float', 'PF:P', 'ARG', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:INF', '-COMP:ADV', '-SPEC:N', '-SPEC:iR', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:iWH', 'PHI:NUM:_', '-SPEC:P', 'adjoinable', '-SPEC:*', '-SPEC:T/fin', '-COMP:uWH', 'LANG:EN', '-VAL', '!COMP:*'}
pro             ['LANG:EN']
pro-            {'COMP:R/D', '-COMP:WH', 'N', 'LF:pro', '-SPEC:ADV', '-COMP:N', '-SPEC:V', '-COMP:D', 'SPEC:A', '-COMP:T/fin', '-SPEC:INF', 'COMP:R', '-SPEC:uWH', '-SPEC:N', '-COMP:A', '-COMP:ADV', '-SPEC:R', '-SPEC:C/fin', '-SPEC:FORCE', 'PHI', '-SPEC:P', 'PF:(pro)', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:AUX', 'LANG:EN', '-COMP:V', 'COMP:uR', 'COMP:P', '-COMP:v'}
cl              {'LEFT:D,CL', 'LEFT:T/fin', 'inflectional', 'LANG:EN', 'RIGHT:PRG', 'CL', 'RIGHT:ARE/inf'}
inc             {'inflectional', 'INCORPORATED', 'LANG:EN'}
sg              {'inflectional', 'LANG:EN', 'PHI:NUM:SG'}
pl              {'PHI:NUM:PL', 'inflectional', 'LANG:EN'}
1p              {'inflectional', 'PHI:PER:1', 'LANG:EN'}
2p              {'inflectional', 'LANG:EN', 'PHI:PER:2'}
3p              {'inflectional', 'PHI:PER:3', 'LANG:EN'}
def             {'inflectional', 'PHI:DET:DEF', 'LANG:EN'}
indef           {'inflectional', 'PHI:DET:INDEF', 'LANG:EN'}
hum             {'inflectional', 'PHI:HUM:HUM', 'LANG:EN'}
nonhum          {'inflectional', 'LANG:EN', 'PHI:HUM:NONHUM'}
m               {'inflectional', 'LANG:EN', 'PHI:GEN:M'}
f               {'inflectional', 'PHI:GEN:F', 'LANG:EN'}
nom             {'inflectional', 'TAIL:FIN,!COMP:*,VAL', 'LANG:EN', 'NOM'}
acc             {'inflectional', 'TAIL:v', 'ACC', 'LANG:EN'}
dat             {'LANG:EN', 'inflectional', 'TAIL:v', 'DAT'}
uC/op           {'inflectional', 'LANG:EN', 'uC/op'}
wh              {'OP:WH', 'inflectional', 'OP:_', 'LANG:EN'}
wh_             {'FORCE:OP:WH', 'OP', 'LANG:EN', 'inflectional', 'OP:_'}
top             {'inflectional', 'OP:TOP', 'LANG:EN'}
foc             {'inflectional', 'LANG:EN', 'OP:FOC'}
C/op            {'inflectional', 'OP:C/OP', 'LANG:EN'}
rel             {'-COMP:C/fin', 'OP:REL', 'LANG:EN', 'inflectional', 'adjoinable'}
Q               {'OP:WH', 'OP', 'LANG:EN', 'inflectional', 'OP:Q'}
