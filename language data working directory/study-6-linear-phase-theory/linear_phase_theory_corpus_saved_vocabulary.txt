ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'-SPEC:FORCE', '-ARG', '-COMP:N', 'adjoinable', '-SPEC:Neg/fin', 'LANG:IT', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:C', '-SPEC:iR', '!COMP:*', '-VAL', '-SPEC:P', 'COMP:D', '-SPEC:INF', '-COMP:uWH', 'TAIL:V', '-SPEC:*', '-SPEC:N', 'COMP:ARE/inf', 'PF:a', '-SPEC:T/fin', 'LF:to', '-SPEC:v', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:V', '-COMP:ADV', 'P'}
a_D             {'-COMP:D', 'LANG:EN', '-ARG', 'adjoinable', '-SPEC:Neg/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:C', '!COMP:*', '-SPEC:P', '-SPEC:INF', 'LF:D', 'D', '-COMP:P', '-SPEC:MA/lla', 'COMP:N', 'OP', '-SPEC:T/fin', '-SPEC:V', '!PROBE:N', 'PF:D'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-SPEC:FORCE', 'LANG:EN', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'PHI:GEN:_', 'CLASS:TR', '!COMP:*', 'COMP:D', '-VAL', 'PHI:PER:_', '-SPEC:Neg', 'LF:admire', '-COMP:v', 'V', '-COMP:V', '-COMP:P', 'SPEC:ADV', 'PF:admire', '-SPEC:T/fin', 'SPEC:TO/inf', '-COMP:Neg'}
admire*         ['LANG:EN']
T/fin*          {'NO_NUMBER', 'LANG:EN', 'LF:T', '!SPEC:*', 'CAT:T/fin', 'NO_DET', '-VAL', "PF:T/fin'"}
v*              {'PF:v', 'NO_NUMBER', 'LF:v', 'NO_DET', 'LANG:EN', '-VAL', 'CAT:v'}
admire**        ['LANG:EN']
T/fin**         {'NO_NUMBER', 'LANG:EN', 'LF:T', '!SPEC:*', 'CAT:T/fin', 'NO_DET', 'NO_PERSON', '-VAL', 'PHI:PER:3', "PF:T/fin''"}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'-SPEC:FORCE', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:IT', '-COMP:T/fin', 'SPEC:P', 'PHI:GEN:_', 'PHI:PER:_', '-VAL', 'COMP:D', 'LF:admire', '-COMP:v', 'V', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', 'PF:adora', 'SPEC:TO/inf'}
antaa           ['LANG:FI']
anta-           {'-SPEC:FORCE', 'SPEC:D', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', '!COMP:*', '-VAL', 'COMP:D', 'PHI:PER:_', 'LF:give', 'LANG:FI', 'PF:antaa', 'V', '-COMP:V', '-COMP:v', 'SPEC:ADV', '-SPEC:T/fin', 'CLASS:DITR', 'ASP:BOUNDED', '+SEM:directional', 'SPEC:TO/inf', '-COMP:FIN'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'-SPEC:FORCE', 'SPEC:D', 'LANG:EN', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'PHI:GEN:_', 'PHI:PER:_', 'COMP:D', 'SEM:internal', '-VAL', 'PF:ask', '-COMP:v', 'V', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', 'LF:ask', 'SPEC:TO/inf'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-SEM:directional', 'LANG:FI', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'PF:avain', 'COMP:R', 'LF:key', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', 'LF:car', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-SEM:directional', 'LANG:FI', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', 'PF:auto', '-SPEC:R'}
bank            {'COMP:uR', '-SPEC:FORCE', 'COMP:C', 'LANG:EN', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', 'PF:bank1', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'FREQ:1', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', 'LF:bank_inst', '-SPEC:V', 'N', '-SPEC:R'}
bank            {'COMP:uR', '-SPEC:FORCE', 'COMP:C', 'LANG:EN', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'LF:bank_river', '-SPEC:N', 'SPEC:A', '-COMP:V', 'COMP:R', 'FREQ:2', '-SPEC:uWH', 'PF:bank2', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
barn            {'COMP:uR', '-SPEC:FORCE', 'COMP:C', 'LANG:EN', '-COMP:N', 'COMP:P', 'LF:barn', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'PF:barn', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
city            {'COMP:uR', '-SPEC:FORCE', 'COMP:C', 'LANG:EN', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'LF:city', 'PF:city', 'N', '-SPEC:R'}
che             ['LANG:IT']
che-            {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'LF:who', 'PHI_N', 'COMP:T/prt', '-COMP:AUX', 'LANG:IT', '-COMP:A', '-COMP:C/fin', 'PF:che', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
chiamato        ['LANG:IT']
chiamata-       {'-SPEC:FORCE', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:IT', '-COMP:T/fin', 'SPEC:P', 'PHI:GEN:_', 'PHI:PER:_', '-VAL', '-COMP:v', 'V', '-COMP:V', 'SPEC:ADV', 'LF:called', '-SPEC:T/fin', 'SPEC:TO/inf', 'PF:chiamato'}
danno           {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', 'LANG:IT', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', 'PF:danno', '-SPEC:V', 'N', 'LF:damage', '-SPEC:R'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'-SPEC:FORCE', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:IT', '-COMP:T/fin', 'SPEC:P', 'PHI:GEN:_', 'PHI:PER:_', 'COMP:D', 'SEM:internal', 'PF:detest', '-VAL', '-COMP:v', 'V', '-COMP:V', 'COMP:ARE/inf', 'SPEC:ADV', '-SPEC:T/fin', 'LF:detest', 'SPEC:TO/inf'}
devono          ['LANG:EN']
deva-           {'LF:must', '-SPEC:FORCE', 'SPEC:D', 'ARG', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:IT', '-COMP:T/fin', 'SPEC:P', 'PHI:GEN:_', '-ASP', '-VAL', 'SEM:internal', 'PHI:PER:_', '-COMP:v', 'V', '-COMP:V', 'COMP:ARE/inf', 'SPEC:ADV', '-SPEC:T/fin', 'PF:deva', 'SPEC:TO/inf'}
di              {'-SPEC:FORCE', 'SPEC:*', '-COMP:N', '-adjoinable', 'ARG', 'PHI:NUM:_', 'PHI:DET:_', 'PF:di', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:C', '-SPEC:iR', '!COMP:*', '-VAL', '-SPEC:P', 'COMP:D', 'PHI:PER:_', '-SPEC:INF', '-COMP:uWH', 'LANG:FI', '-SPEC:N', 'LF:of', '-SPEC:T/fin', '-SPEC:v', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:V', '-COMP:ADV', 'P'}
does            {'COMP:V', 'COMP:Neg', 'SPEC:D', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:C', '-COMP:INF', '-SPEC:N', 'PHI:NUM:SG', 'VAL', 'FIN', '-SPEC:v', 'T/fin', '-SPEC:V', 'PHI:PER:3', '-SPEC:FORCE', 'SPEC:*', 'ARG', 'COMP:T/prt', 'PHI:DET:_', '-COMP:T/fin', '-SPEC:C/fin', 'PHI:GEN:F', '!COMP:*', 'COMP:v', 'PHI:PER:_', '-SPEC:TO/inf', '-SPEC:Neg', 'LF:does', 'PHI:GEN:M', '!SPEC:D', 'T', '-SPEC:T/fin', '!PROBE:V', 'SPEC:TO/inf', 'PF:does'}
does_C          ['LANG:EN']
does-           {'COMP:V', 'COMP:Neg', 'SPEC:D', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:C', '-COMP:INF', '-SPEC:N', 'PHI:NUM:SG', 'VAL', 'FIN', '-SPEC:v', 'T/fin', '-SPEC:V', 'PHI:PER:3', '-SPEC:FORCE', 'SPEC:*', 'ARG', 'COMP:T/prt', 'PHI:DET:_', '-COMP:T/fin', '-SPEC:C/fin', 'PHI:GEN:F', '!COMP:*', 'COMP:v', 'PHI:PER:_', '-SPEC:TO/inf', '-SPEC:Neg', 'LF:does', 'PHI:GEN:M', '!SPEC:D', 'T', '-SPEC:T/fin', '!PROBE:V', 'SPEC:TO/inf', 'PF:does'}
dorme           ['LANG:IT']
dorme-          {'-SPEC:FORCE', 'SPEC:D', 'LANG:EN', 'ARG', 'ASP', '-COMP:N', 'COMP:P', '-COMP:D', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'PHI:PER:_', '-VAL', '-COMP:v', 'V', '-COMP:V', 'LF:sleep', '-COMP:MA/inf', 'SPEC:ADV', '!SPEC:D', '-SPEC:T/fin', 'CLASS:INTR', 'SPEC:TO/inf', 'PF:dorme'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'SPEC:*', 'ARG', 'PF:ei', 'COMP:T/prt', 'PHI:NUM:_', 'PHI:DET:_', '!SPEC:*', 'Neg/fin', '!COMP:*', 'PHI:PER:_', 'SEM:internal', 'LANG:FI', 'NEG', '-SPEC:T', 'POL:NEG', 'VAL', '-SPEC:T/fin', 'FIN', '%SPEC:INF', '!COMP:T', 'LF:neg'}
e-              {'SPEC:*', 'ARG', 'PF:ei', 'COMP:T/prt', 'PHI:NUM:_', 'PHI:DET:_', '!SPEC:*', 'Neg/fin', '!COMP:*', 'PHI:PER:_', 'SEM:internal', 'LANG:FI', 'NEG', '-SPEC:T', 'POL:NEG', 'VAL', '-SPEC:T/fin', 'FIN', '%SPEC:INF', '!COMP:T', 'LF:neg'}
elaa            ['LANG:FI']
ela-            {'-SPEC:FORCE', 'SPEC:D', 'ARG', 'ASP', '-COMP:N', 'COMP:P', '-COMP:D', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'PHI:PER:_', '-VAL', 'PF:elaa', 'LANG:FI', '-COMP:v', 'V', '-COMP:V', '-COMP:MA/inf', 'SPEC:ADV', '-SPEC:T/fin', 'CLASS:INTR', 'SPEC:TO/inf', 'LF:live'}
etsii           ['LANG:FI']
etsi-           {'-SPEC:FORCE', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'CLASS:TR', '!COMP:*', 'COMP:D', 'PF:etsi', '-VAL', 'PHI:PER:_', 'LANG:FI', '-COMP:v', 'V', '-COMP:V', '-COMP:P', 'SPEC:ADV', '!COMP:D', '-SPEC:T/fin', 'LF:search', 'SPEC:TO/inf'}
etta            {'FORCE', '-SPEC:D', '-ARG', 'LF:that', '!PROBE:FIN', 'COMP:C/fin', 'FIN', 'COMP:T/fin', '-SPEC:*', '!COMP:*', '-VAL', 'LANG:FI', 'PF:etta'}
fell            ['LANG:EN']
fell-           {'-SPEC:FORCE', 'SPEC:D', 'LANG:EN', 'ARG', 'ASP', '-COMP:N', 'COMP:P', '-COMP:D', 'PHI:NUM:_', '-COMP:T/fin', 'LF:fell', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'PHI:PER:_', '-VAL', '-COMP:v', 'V', '-COMP:V', '-COMP:MA/inf', 'SPEC:ADV', 'PF:fell', '-SPEC:T/fin', 'CLASS:INTR', 'SPEC:TO/inf'}
flow'           {'PF:flow', '-SPEC:FORCE', 'SPEC:D', 'LANG:EN', 'COMP:P', 'ARG', 'ASP', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'PHI:GEN:_', 'PHI:PER:_', '-VAL', '-COMP:v', 'V', '-COMP:V', 'SPEC:ADV', 'LF:flow', '-SPEC:T/fin', 'SPEC:TO/inf'}
from            {'TAIL:V,+SEM:directional', '-SPEC:FORCE', 'LANG:EN', '-COMP:N', 'ARG', 'PHI:NUM:_', 'PHI:DET:_', 'adjoinable', 'LF:from', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:C/fin', 'PF:from', '-SPEC:C', 'PHI:GEN:_', '-SPEC:iR', '!COMP:*', '-VAL', '-SPEC:P', 'COMP:D', 'PHI:PER:_', '-SPEC:INF', '-COMP:uWH', '-SPEC:*', '-SPEC:N', '-float', '-SPEC:T/fin', '-SPEC:v', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:V', '-COMP:ADV', 'P'}
gave            ['LANG:EN']
give-           {'-SPEC:FORCE', 'SPEC:D', 'LANG:EN', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'PHI:GEN:_', '!COMP:*', '-VAL', 'COMP:D', 'PHI:PER:_', 'LF:give', '-COMP:v', 'V', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', 'CLASS:DITR', 'PF:give', '+SEM:directional', 'SPEC:TO/inf', '-COMP:FIN'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'PF:Giuseppe', 'LF:Giuseppe', 'COMP:T/prt', '-COMP:AUX', 'LANG:IT', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-SEM:directional', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'-SPEC:FORCE', 'PF:haluaa', 'LF:want', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'COMP:A/inf', 'CLASS:TR', '!COMP:*', 'COMP:D', 'SEM:internal', '-VAL', 'PHI:PER:_', 'LANG:FI', '-SPEC:*', 'V', '-COMP:V', '-COMP:v', '-COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'ASP:BOUNDED', 'SPEC:TO/inf'}
hairitsee       ['LANG:FI']
hairitse-       {'-SPEC:FORCE', 'SPEC:D', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', 'LF:disturb', '-COMP:T/fin', 'SPEC:P', 'CLASS:TR', '!COMP:*', '-VAL', 'COMP:D', 'PHI:PER:_', 'LANG:FI', '-COMP:v', 'V', '-COMP:V', '-COMP:P', 'SPEC:ADV', '!COMP:D', '-SPEC:T/fin', 'SPEC:TO/inf', '-COMP:FIN', 'PF:hairitsee'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'SPEC:*', '-SPEC:FORCE', 'SPEC:D', 'ARG', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:IT', '-COMP:T/fin', 'PF:ha', 'SPEC:P', 'PHI:GEN:_', '-ASP', '-VAL', 'SEM:internal', 'PHI:PER:_', '-COMP:v', 'V', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', 'LF:have', 'SPEC:TO/inf', 'COMP:T'}
horse           {'COMP:uR', '-SPEC:FORCE', 'COMP:C', 'LANG:EN', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'LF:horse', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', 'PF:horse', '-SPEC:V', 'N', '-SPEC:R'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'-SPEC:FORCE', 'SPEC:D', 'ARG', 'ASP', '-COMP:N', 'COMP:P', '-COMP:D', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'PHI:PER:_', '-VAL', 'LANG:FI', '-COMP:v', 'V', '-COMP:V', '-COMP:MA/inf', 'SPEC:ADV', 'PF:havia', '-SPEC:T/fin', 'CLASS:INTR', 'SPEC:TO/inf', 'LF:disappear'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'-SPEC:FORCE', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'CLASS:TR', '!COMP:*', '-VAL', 'COMP:D', 'PHI:PER:_', 'LANG:FI', 'LF:admire', 'V', '-COMP:V', '-COMP:v', '-COMP:P', 'SPEC:ADV', '!COMP:D', '-SPEC:T/fin', 'PF:ihaile-', 'SPEC:TO/inf', '-COMP:FIN'}
il              {'-COMP:D', '-ARG', 'adjoinable', '-SPEC:Neg/fin', 'LANG:IT', '-COMP:T/fin', '-COMP:uR', '-SPEC:C', 'PF:il', '!COMP:*', '-SPEC:P', '-SPEC:INF', 'D', '-COMP:P', '-SPEC:MA/lla', 'COMP:N', 'OP', '-SPEC:T/fin', '-SPEC:V', '!PROBE:N', 'LF:the'}
i               {'-COMP:D', '-ARG', 'adjoinable', '-SPEC:Neg/fin', 'LANG:IT', '-COMP:T/fin', '-COMP:uR', '-SPEC:C', 'PF:il', '!COMP:*', '-SPEC:P', '-SPEC:INF', 'D', '-COMP:P', '-SPEC:MA/lla', 'COMP:N', 'OP', '-SPEC:T/fin', '-SPEC:V', '!PROBE:N', 'LF:the'}
in              {'-SPEC:FORCE', '-COMP:N', 'PF:in', 'ARG', 'PHI:NUM:_', 'PHI:DET:_', 'adjoinable', '-SPEC:Neg/fin', 'LANG:IT', '-COMP:T/fin', '-SPEC:C/fin', 'PHI:GEN:_', '-SPEC:C', '-SPEC:iR', '!COMP:*', '-VAL', '-SPEC:P', 'COMP:D', 'PHI:PER:_', '-SPEC:INF', '-COMP:uWH', '-SPEC:N', 'LF:in', '-SPEC:T/fin', '-SPEC:v', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:V', '-COMP:ADV', 'P'}
infermieri      {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', 'LANG:IT', 'LF:nurses', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', 'PF:infermieri', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
is              ['LANG:EN']
be-             {'-SPEC:FORCE', 'SPEC:D', '-ARG', 'LANG:EN', '-COMP:N', 'ASP', 'LF:be', 'COMP:P', '-COMP:T/fin', 'COPULA', 'SPEC:P', '!COMP:*', '-VAL', '-COMP:v', 'V', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:TO/inf', 'PF:be', 'SPEC:TO/inf'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'-SPEC:FORCE', 'SPEC:D', 'ARG', 'ASP', '-COMP:N', 'COMP:P', '-COMP:D', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'PHI:PER:_', '-VAL', 'LANG:FI', '-COMP:v', 'V', '-COMP:V', '-COMP:MA/inf', 'SPEC:ADV', '-SPEC:T/fin', 'PF:istuu', 'CLASS:INTR', 'SPEC:TO/inf', 'LF:sit'}
John            ['LANG:EN']
John-           {'COMP:uR', '-SPEC:FORCE', 'COMP:C', 'LANG:EN', '-adjoinable', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-SEM:directional', '-COMP:v', 'SPEC:A', 'PF:John', '-SPEC:N', '-COMP:V', 'COMP:R', 'LF:John', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'LF:who', 'PHI_N', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', '-SPEC:P', 'PF:joka', '-SPEC:INF', 'LANG:FI', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', 'LF:Jukka', '-SPEC:INF', '-SEM:directional', 'LANG:FI', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', 'PF:Jukka', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'-SPEC:FORCE', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'PHI:PER:_', '-VAL', 'LF:run', 'LANG:FI', '-COMP:v', 'V', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', 'PF:juokse-', 'SPEC:TO/inf'}
kaksi           {'SPEC:*', 'PHI:NUM:SG', 'NUM', 'ARG', 'PHI:DET:_', 'PHI:NUM:_', 'COMP:N', 'COMP:n', 'LF:two', 'PF:kaksi', 'TAIL:ARG,VAL,FIN', '-VAL', 'PHI:PER:_', 'LANG:FI'}
kaksi           {'SPEC:*', 'NUM', 'LANG:EN', 'COMP:N', 'COMP:n', 'TAIL:ARG,ASP:BOUNDED', 'LF:two', 'PF:kaksi', 'TAIL:*POL:NEG'}
kaksi_1         {'SPEC:*', 'PHI:NUM:SG', 'NUM', 'ARG', 'PHI:DET:_', 'PHI:NUM:_', 'COMP:N', 'COMP:n', 'LF:two', 'PF:kaksi', 'TAIL:ARG,VAL,FIN', '-VAL', 'PHI:PER:_', 'LANG:FI'}
kaksi_2         {'SPEC:*', 'NUM', 'LANG:EN', 'COMP:N', 'COMP:n', 'TAIL:ARG,ASP:BOUNDED', 'LF:two', 'PF:kaksi', 'TAIL:*POL:NEG'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'COMP:n', 'SPEC:*', 'LF:two', 'NUM', 'PF:kaksi', 'COMP:N', 'LANG:FI'}
kaupunkia       ['LANG:EN']
kaupunki        {'COMP:uR', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', 'COMP:C', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', 'PF:kaupunki', '-SPEC:INF', 'LANG:FI', '-COMP:P', '-COMP:v', '-SPEC:N', 'SPEC:A', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'LF:city', 'N', '-SPEC:R'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'-SPEC:FORCE', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'PF:kaske', 'PHI:PER:_', '-VAL', 'LANG:FI', '-COMP:v', 'V', '!COMP:A/inf', '-COMP:V', 'SPEC:ADV', 'LF:order', '-SPEC:T/fin', 'SPEC:TO/inf', 'SEM:external'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'COMP:uR', '-SPEC:FORCE', 'COMP:C', 'LF:watch', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', 'PF:kello', '-SPEC:P', '-SPEC:INF', 'LANG:FI', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
kello0-         {'0', 'LF:watch', 'PF:kello', 'SPEC:D', '2SPEC', 'LANG:FI'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'COMP:uR', '-SPEC:FORCE', 'COMP:C', 'LANG:EN', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'PF:key', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', 'LF:key', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-SEM:directional', 'LANG:FI', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:R', 'LF:book', '-SPEC:ADV', '-SPEC:V', 'PF:kirja', 'N'}
kohti           {'PF:kohti', '-SPEC:FORCE', 'SPEC:*', '-COMP:N', 'ARG', 'PHI:DET:_', 'PHI:NUM:_', 'adjoinable', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:C', '-SPEC:iR', '!COMP:*', '-VAL', '-SPEC:P', 'COMP:D', 'PHI:PER:_', '-SPEC:INF', '-COMP:uWH', 'TAIL:V', 'LANG:FI', '-SPEC:N', '-SPEC:T/fin', '-SPEC:v', 'LF:towards', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:V', '-COMP:ADV', 'P'}
koko            {'-COMP:D', '-ARG', 'PF:koko', 'adjoinable', '-SPEC:Neg/fin', '-COMP:T/fin', 'TAIL:T', '-COMP:uR', '-SPEC:C', '!COMP:*', '-SPEC:P', '-SPEC:INF', 'LF:all', 'D', 'LANG:FI', '-COMP:P', '-SPEC:MA/lla', 'COMP:N', 'OP', '-SPEC:T/fin', '-SPEC:V', '!PROBE:N'}
kuka            ['LANG:FI']
kuka-           {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'LF:who', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', 'PF:kuka', 'LANG:FI', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', 'PHI', '-SPEC:R'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'-SPEC:FORCE', '-COMP:WH', '-COMP:D', 'COMP:P', 'ARG', 'ASP', '-COMP:N', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'PHI:PER:_', '-VAL', 'LANG:FI', '-COMP:v', 'V', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', 'LF:snore', 'PF:kuorsaa', 'SPEC:TO/inf'}
lahella         {'COMP:V', '-COMP:N', 'INF', 'PHI:NUM:_', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:P', '-SPEC:INF', '-SPEC:N', 'VAL', '-SPEC:v', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:V', 'P', 'PF:lahella', '-SPEC:FORCE', 'SPEC:*', 'ARG', 'PHI:DET:_', 'adjoinable', '-COMP:T/fin', '-COMP:C/fin', '!SPEC:*', '-SPEC:C/fin', '-SPEC:iR', '!COMP:*', 'COMP:D', 'COMP:v', 'PHI:PER:_', '-COMP:uWH', 'LANG:FI', '-COMP:FORCE', '!SPEC:D', '-SPEC:T/fin', '-COMP:ADV', 'LF:near'}
lahella         {'PF:lahella', '-SPEC:FORCE', 'SPEC:*', '-COMP:N', 'ARG', 'PHI:DET:_', 'PHI:NUM:_', 'adjoinable', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:C', '-SPEC:iR', '!COMP:*', '-VAL', '-SPEC:P', 'COMP:D', 'PHI:PER:_', '-SPEC:INF', '-COMP:uWH', 'LANG:FI', '-SPEC:N', '!COMP:D', '-SPEC:T/fin', '-SPEC:v', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:V', '-COMP:ADV', 'LF:near', 'P'}
lahella_1       {'PF:lahella', '-SPEC:FORCE', 'SPEC:*', '-COMP:N', 'ARG', 'PHI:DET:_', 'PHI:NUM:_', 'adjoinable', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:C', '-SPEC:iR', '!COMP:*', '-VAL', '-SPEC:P', 'COMP:D', 'PHI:PER:_', '-SPEC:INF', '-COMP:uWH', 'LANG:FI', '-SPEC:N', '!COMP:D', '-SPEC:T/fin', '-SPEC:v', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:V', '-COMP:ADV', 'LF:near', 'P'}
lahella_2       {'COMP:V', '-COMP:N', 'INF', 'PHI:NUM:_', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:P', '-SPEC:INF', '-SPEC:N', 'VAL', '-SPEC:v', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:V', 'P', 'PF:lahella', '-SPEC:FORCE', 'SPEC:*', 'ARG', 'PHI:DET:_', 'adjoinable', '-COMP:T/fin', '-COMP:C/fin', '!SPEC:*', '-SPEC:C/fin', '-SPEC:iR', '!COMP:*', 'COMP:D', 'COMP:v', 'PHI:PER:_', '-COMP:uWH', 'LANG:FI', '-COMP:FORCE', '!SPEC:D', '-SPEC:T/fin', '-COMP:ADV', 'LF:near'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'-SPEC:FORCE', 'SPEC:D', '-COMP:D', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', 'LF:leave', '-COMP:T/fin', 'SPEC:P', 'PHI:PER:_', '-VAL', 'LANG:FI', '-COMP:v', 'V', '-COMP:V', '-COMP:MA/inf', 'SPEC:ADV', 'COMP:PP', '-SPEC:T/fin', 'CLASS:INTR', 'PF:lahtea', 'SPEC:TO/inf'}
lavano          ['LANG:IT']
lava-           {'LF:wash', '-SPEC:FORCE', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:IT', 'PF:lava', '-COMP:T/fin', 'SPEC:P', 'PHI:GEN:_', '!COMP:*', 'COMP:D', '-VAL', 'PHI:PER:_', '-COMP:v', 'V', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-COMP:D', '-ARG', 'adjoinable', '-SPEC:Neg/fin', 'LANG:IT', '-COMP:T/fin', '-COMP:uR', '-SPEC:C', 'PF:le', '!COMP:*', '-SPEC:P', '-SPEC:INF', 'D', 'LF:D', '-COMP:P', '-SPEC:MA/lla', 'COMP:N', 'OP', '-SPEC:T/fin', '-SPEC:V', '!PROBE:N'}
leaves          ['LANG:EN']
leave           {'-SPEC:FORCE', 'LANG:EN', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', 'LF:leave', '-COMP:T/fin', 'SPEC:P', 'PHI:GEN:_', 'PHI:PER:_', '-VAL', '-COMP:v', 'V', '-COMP:V', 'SPEC:ADV', '!SPEC:D', 'PF:leave', '-SPEC:T/fin', 'SPEC:TO/inf'}
leave-          {'-SPEC:FORCE', 'LANG:EN', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'LF:leave', 'SPEC:P', 'PHI:GEN:_', 'PHI:PER:_', '-VAL', '-COMP:v', 'V', '-COMP:V', 'SPEC:ADV', '!SPEC:D', 'PF:leave', '-SPEC:T/fin', 'SPEC:TO/inf'}
like-           {'-SPEC:FORCE', 'LANG:EN', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'PHI:GEN:_', 'PHI:PER:_', '-VAL', 'LF:like', '-COMP:v', 'V', '-COMP:V', 'SPEC:ADV', '!COMP:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PF:like'}
likes           ['LANG:EN']
like            {'-SPEC:FORCE', 'LANG:EN', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'PHI:GEN:_', 'PHI:PER:_', '-VAL', 'LF:like', '-COMP:v', 'V', '-COMP:V', 'SPEC:ADV', '!COMP:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PF:like'}
little          ['LANG:EN']
little-         {'PF:little-', '0', 'LANG:EN', 'SPEC:D', 'LF:little', '2SPEC'}
lle             {'TAIL:V,+SEM:directional', '-SPEC:FORCE', '-COMP:N', 'ARG', 'PHI:DET:_', 'PHI:NUM:_', 'adjoinable', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:C', '-SPEC:iR', '!COMP:*', '-VAL', '-SPEC:P', 'COMP:D', 'PHI:PER:_', '-SPEC:INF', '-COMP:uWH', 'LANG:FI', '-SPEC:*', 'PF:P(lle)', '-SPEC:N', '-SPEC:T/fin', '-SPEC:v', '-SPEC:iWH', '-SPEC:ADV', '+SEM:directional', '-SPEC:V', '-COMP:ADV', 'P', 'LF:for'}
lla             {'-SPEC:FORCE', 'SPEC:*', '-COMP:N', 'PF:P(lla)', 'ARG', 'PHI:NUM:_', 'PHI:DET:_', 'adjoinable', '-SPEC:Neg/fin', '-COMP:T/fin', 'TAIL:T', '-SPEC:C/fin', '-SPEC:C', '-SPEC:iR', '!COMP:*', '-VAL', '-SPEC:P', 'COMP:D', 'PHI:PER:_', '-SPEC:INF', '-COMP:uWH', 'LANG:FI', '-SPEC:N', '-SPEC:T/fin', '-SPEC:v', '-SPEC:iWH', '-SPEC:ADV', 'TAIL:*V', '-SPEC:V', 'LF:by', '-COMP:ADV', 'P'}
Luisa           ['LANG:IT']
Luisa-          {'LF:Luisa', 'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', 'LANG:IT', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-SEM:directional', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R', 'PF:Luisa'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'-SPEC:FORCE', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'PF:luke', 'SPEC:P', 'CLASS:TR', '!COMP:*', '-VAL', 'COMP:D', 'PHI:PER:_', 'LANG:FI', '-COMP:v', 'V', '-COMP:V', '-COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'LF:read'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'-SPEC:FORCE', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'PF:loyta-', 'SPEC:P', 'CLASS:TR', '!COMP:*', '-VAL', 'COMP:D', 'PHI:PER:_', 'LANG:FI', '-COMP:v', 'V', '-COMP:V', '-COMP:P', 'SPEC:ADV', '!COMP:D', '-SPEC:T/fin', 'LF:find', 'ASP:BOUNDED', 'SPEC:TO/inf'}
Mary            ['LANG:EN']
Mary-           {'COMP:uR', '-SPEC:FORCE', 'COMP:C', 'LANG:EN', '-adjoinable', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-SEM:directional', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'LF:Mary', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', 'PF:Mary', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'PF:Merja', 'LF:Merja', 'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', '-adjoinable', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-SEM:directional', 'LANG:FI', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'-SPEC:N', '-SPEC:FORCE', 'SPEC:*', 'ADV', 'PF:malla', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', 'TAIL:T', 'COMP:v', 'LF:by', 'LANG:FI', 'MA/inf'}
meren           ['LANG:FI']
mere-           {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', 'LF:ocean', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', 'LANG:FI', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'PF:meri', 'N', '-SPEC:R'}
mies            {'PF:mies', 'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', 'LANG:FI', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', 'LF:man', '-SPEC:R'}
mistake         {'COMP:uR', '-SPEC:FORCE', 'COMP:C', 'LANG:EN', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', 'PF:mistake', '-SPEC:V', 'N', '-SPEC:R', 'LF:mistake'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'PF:mika-', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', 'LANG:FI', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', 'LF:what', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'LF:move', '-SPEC:FORCE', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', 'LANGN:EN', '-COMP:T/fin', 'SPEC:P', 'PHI:GEN:_', 'CLASS:TR', '!COMP:*', 'COMP:D', '-VAL', 'PHI:PER:_', '-COMP:v', 'V', '-COMP:V', '-COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'PF:move', '+SEM:directional', 'SPEC:TO/inf'}
mukavasti       ['LANG:EN']
mukava-         {'0', 'SPEC:D', '2SPEC', 'PF:mukavasti', 'LF:comfortably', 'LANG:FI'}
must            {'LF:must', 'COMP:V', '-SPEC:FORCE', 'COMP:Neg', 'SPEC:D', 'LANG:EN', 'ARG', 'COMP:T/prt', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:*', '-COMP:T/fin', '-SPEC:C/fin', 'PHI:GEN:_', '-SPEC:C', '!COMP:*', 'COMP:v', 'PHI:PER:_', '-SPEC:TO/inf', '-SPEC:Neg', '-COMP:INF', '-SPEC:N', 'MODAL', '!SPEC:D', 'PF:must', 'VAL', 'T', '-SPEC:T/fin', 'FIN', '-SPEC:v', '!PROBE:V', 'T/fin', '-SPEC:V', 'SPEC:TO/inf'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'PF:myy', '-SPEC:FORCE', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'CLASS:TR', 'LF:sell', 'COMP:D', '-VAL', '!COMP:*', 'PHI:PER:_', 'LANG:FI', '-COMP:v', 'V', '-COMP:V', '-COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'ASP:BOUNDED', 'SPEC:TO/inf'}
naki            ['LANG:FI']
nake-           {'-SPEC:FORCE', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'PF:nake', 'CLASS:TR', '-COMP:MA/ssa', '!COMP:*', '-VAL', 'COMP:D', 'PHI:PER:_', 'LANG:FI', '-COMP:v', 'V', '-COMP:V', '-COMP:P', '-COMP:MA/tta', 'SPEC:ADV', '-SPEC:T/fin', '-COMP:ESSA/inf', 'ASP:BOUNDED', 'SPEC:TO/inf', 'LF:see'}
nayttaa         ['LANG:FI']
naytta-         {'-SPEC:FORCE', '-ARG', 'ASP', '-COMP:N', 'COMP:P', '-COMP:T/fin', 'SPEC:P', 'SEM:internal', 'LANG:FI', 'LF:seem', 'V', '-COMP:V', '-COMP:v', 'SPEC:ADV', '!SPEC:D', '!COMP:VA/inf', 'VAL', '-SPEC:T/fin', 'PF:naytta', 'SPEC:TO/inf'}
ndo             {'COMP:V', 'LANG:EN', 'INF', 'PRG', 'VAL', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:T/fin', '?ARG', '-SPEC:V', '!COMP:*', 'LF:ing', 'COMP:v', 'PF:PRG', '-COMP:FORCE'}
ne              {'-COMP:D', '-ARG', 'adjoinable', '-SPEC:Neg/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:C', '!COMP:*', '-SPEC:P', 'PHI:NUM:PL', 'PF:ne', '-SPEC:INF', 'D', 'LANG:FI', '-COMP:P', '-SPEC:MA/lla', 'COMP:N', 'OP', '-SPEC:T/fin', 'LF:those', '-SPEC:V', '!PROBE:N', 'PHI:PER:3'}
niiden          ['LANG:EN']
nen             {'SPEC:*', 'PF:a', '-SPEC:D', 'TAIL:D', '-SPEC:A', 'A', 'COMP:0', 'LF:ing', 'LANG:FI'}
not             {'POL:NEG', 'SPEC:*', '-COMP:D', 'ARG', 'LANG:EN', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', 'LF:not', '-COMP:C', 'PHI:GEN:_', '!COMP:*', '-VAL', '-COMP:FIN', 'Neg', 'PHI:PER:_', 'PF:not'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-SPEC:FORCE', 'SPEC:D', 'ARG', 'ASP', '-COMP:N', 'COMP:P', '-COMP:T', '-COMP:Neg/fin', '-COMP:D', '-COMP:T/fin', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:P', 'PHI:PER:_', '-VAL', 'LANG:FI', '-COMP:v', 'V', '-COMP:V', 'LF:sleep', 'SPEC:ADV', '-SPEC:T/fin', 'CLASS:INTR', 'PF:nukku', '-COMP:MA/inf', 'SPEC:TO/inf'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', 'LANG:FI', 'PF:omaisuuden', 'LF:possessions', '-COMP:v', '-SPEC:N', 'SPEC:A', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
operatoria      ['LANG:IT']
operatoria-     {'LF:operation', 'PF:operatoria', '0', 'SPEC:D', '2SPEC', 'LANG:IT'}
ostaa           ['LANG:FI']
osta-           {'LF:buy', '-SPEC:FORCE', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'CLASS:TR', '!COMP:*', '-VAL', 'COMP:D', 'PHI:PER:_', 'LANG:FI', '-COMP:v', 'V', '-COMP:V', '-COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'ASP:BOUNDED', 'PF:osta', 'SPEC:TO/inf'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'SEM:nonreferential', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'PF:paiva', 'COMP:R/D', '-SPEC:P', 'LF:day', '-SPEC:INF', 'LANG:FI', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
past            {'-SPEC:FORCE', 'LANG:EN', '-COMP:N', 'ARG', 'PHI:NUM:_', 'PHI:DET:_', 'adjoinable', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:C/fin', 'PHI:GEN:_', '-SPEC:C', '-SPEC:iR', '!COMP:*', '-VAL', '-SPEC:P', 'COMP:D', 'PHI:PER:_', 'LF:past', '-SPEC:INF', '-COMP:uWH', '-SPEC:*', 'PF:past', '-SPEC:N', '-float', '-SPEC:T/fin', '-SPEC:v', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:V', '-COMP:ADV', 'P'}
Pariisia        ['LANG:FI']
Pariisi-        {'COMP:uR', '-SPEC:FORCE', 'PF:Pariisi', '-COMP:N', 'COMP:P', 'COMP:C', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', 'LF:Paris', 'LANG:FI', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', 'PF:Pekka', '-SPEC:P', '-SPEC:INF', '-SEM:directional', 'LANG:FI', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'LF:Pekka', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'-SPEC:FORCE', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'CLASS:TR', '!COMP:*', '-VAL', 'COMP:D', 'PHI:PER:_', 'LF:fear', 'LANG:FI', '-COMP:v', 'V', '-COMP:V', '-COMP:P', 'SPEC:ADV', 'PF:pelkaa', '-SPEC:T/fin', 'SPEC:TO/inf'}
persuades       ['LANG:EN']
persuade-       {'LF:persuade', '-SPEC:FORCE', 'LANG:EN', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'PHI:GEN:_', '!COMP:*', '-VAL', 'PHI:PER:_', '-COMP:v', 'V', '-COMP:V', 'SPEC:ADV', 'COMP:TO/inf', '-SPEC:T/fin', 'SPEC:TO/inf', 'PF:persuade', 'SEM:external'}
peruuntui       ['LANG:FI']
peruuntu-       {'-SPEC:FORCE', 'SPEC:D', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'PHI:PER:_', '-VAL', 'LANG:FI', '-COMP:v', 'V', '-COMP:V', 'SPEC:ADV', 'PF:peruuntui', '-SPEC:T/fin', 'LF:cancelled', 'SPEC:TO/inf'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'LF:wash', '-SPEC:FORCE', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'CLASS:TR', '!COMP:*', '-VAL', 'COMP:D', 'PHI:PER:_', 'LANG:FI', '-COMP:v', 'V', '-COMP:V', '-COMP:P', 'SPEC:ADV', 'PF:pese_asp', '-SPEC:T/fin', 'ASP:BOUNDED', 'SPEC:TO/inf'}
pese-           {'LF:wash', '-SPEC:FORCE', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', 'PF:pese', '-COMP:T/fin', 'SPEC:P', 'CLASS:TR', '!COMP:*', '-VAL', 'COMP:D', 'PHI:PER:_', 'LANG:FI', '-COMP:v', 'V', '-COMP:V', '-COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf'}
petardi         {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', 'LANG:IT', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', 'LF:firecrackers', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'PF:petardi', 'N', '-SPEC:R'}
pieni           ['LANG:FI']
pieni-          {'LF:small', 'PF:pieni-', '0', 'SPEC:D', '2SPEC', 'LANG:FI'}
poikien         ['LANG:FI']
poika-          {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', 'LF:boy', '-SPEC:P', '-SPEC:INF', 'LANG:FI', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', 'PF:poika', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
puhelinta       ['LANG:FI']
puhelin-        {'0', 'SPEC:D', '2SPEC', 'PF:puhelin', 'LANG:FI', 'LF:phone'}
punainen        ['LANG:FI']
puna-           {'0', 'LF:red', 'PF:puna-', 'SPEC:D', '2SPEC', 'LANG:FI'}
presupposto     {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', 'LANG:IT', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', 'LF:presupposition', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', 'PF:presupposto', '-SPEC:V', 'N', '-SPEC:R'}
primary         {'PF:primary', 'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', 'LANG:IT', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', 'LF:nurse', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
promises        ['LANG:EN']
promise-        {'PF:promise', '-SPEC:FORCE', 'SPEC:D', 'LANG:EN', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'PHI:GEN:_', 'PHI:PER:_', 'COMP:D', 'SEM:internal', '-VAL', '-COMP:v', 'LF:promise', 'V', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf'}
pyytaa          ['LANG:FI']
pyyta-          {'-SPEC:FORCE', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'CLASS:TR', '!COMP:*', '-VAL', 'COMP:D', 'PHI:PER:_', 'LANG:FI', '-COMP:v', 'V', '-COMP:V', '-COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'LF:ask', 'PF:pyyda', 'SPEC:TO/inf', 'SEM:external'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'-SPEC:FORCE', 'SPEC:D', 'LANG:EN', 'COMP:P', 'ARG', 'PF:race', 'ASP', '-COMP:N', '-COMP:D', '-COMP:T/fin', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'LAMG:EN', 'PHI:PER:_', '-VAL', '-COMP:v', 'V', '-COMP:V', '-COMP:MA/inf', 'SPEC:ADV', 'LF:race', '-SPEC:T/fin', 'CLASS:INTR', 'SPEC:TO/inf'}
raukesi         ['LANG:FI']
raukea-         {'-SPEC:FORCE', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'PF:raukea', 'PHI:PER:_', 'LF:terminate', '-VAL', 'LANG:FI', '-COMP:v', 'V', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf'}
red             ['LANG:EN']
red-            {'PF:red', '0', 'LF:red', 'LANG:EN', 'SPEC:D', '2SPEC'}
saavuttaa       ['LANG:FI']
saavutta-       {'-SPEC:FORCE', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'CLASS:TR', '!COMP:*', '-VAL', 'COMP:D', 'PHI:PER:_', 'LANG:FI', '-COMP:v', 'V', '-COMP:V', '-COMP:P', 'SPEC:ADV', '!COMP:D', 'PF:saavutta-', '-SPEC:T/fin', 'ASP:BOUNDED', 'SPEC:TO/inf', 'LF:reach'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'-SPEC:FORCE', 'SPEC:D', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'PF:sano-', 'SPEC:P', 'CLASS:TR', '!COMP:*', '-VAL', 'COMP:D', 'COMP:VA/inf', 'PHI:PER:_', 'LANG:FI', '-COMP:v', 'V', '-COMP:V', '-COMP:P', 'SPEC:ADV', 'LF:say', '-SPEC:T/fin', 'COMP:FORCE', 'SPEC:TO/inf'}
said            ['LANG:EN']
say'            {'-SPEC:FORCE', 'SPEC:D', 'LANG:EN', 'PF:say', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'PHI:PER:_', '-VAL', '!COMP:FORCE', '-COMP:v', 'V', '-COMP:V', 'SPEC:ADV', 'LF:say', '-SPEC:T/fin', 'SPEC:TO/inf'}
say-            {'-SPEC:FORCE', 'SPEC:D', 'LANG:EN', 'PF:say', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'PHI:PER:_', '-VAL', '!COMP:FORCE', '-COMP:v', 'V', '-COMP:V', 'SPEC:ADV', 'LF:say', '-SPEC:T/fin', 'SPEC:TO/inf'}
sala            ['LANG:IT']
sala-           {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', 'LF:room', 'LANG:IT', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'PF:sala', 'N', '-SPEC:R'}
scoppiati       ['LANG:IT']
scoppia-        {'-SPEC:FORCE', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:IT', '-COMP:T/fin', 'PF:scoppia', 'SPEC:P', 'PHI:GEN:_', 'PHI:PER:_', '-VAL', '-COMP:v', 'LF:explode', 'V', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf'}
sen             {'-COMP:D', '-ARG', 'adjoinable', '-SPEC:Neg/fin', '-COMP:T/fin', '-COMP:uR', 'LF:the/that', '-SPEC:C', '!COMP:*', '-SPEC:P', '-SPEC:INF', 'D', 'LANG:FI', '-COMP:P', 'TAIL:ASP', 'PF:sen', '-SPEC:MA/lla', 'COMP:N', 'OP', '-SPEC:T/fin', 'TAIL:PHI', '-SPEC:V', '!PROBE:N', 'TAIL:*POL:NEG'}
se              {'-COMP:D', '-ARG', 'adjoinable', '-SPEC:Neg/fin', '-COMP:T/fin', '-COMP:uR', 'LF:the/that', '-SPEC:C', '!COMP:*', '-SPEC:P', '-SPEC:INF', 'D', 'LANG:FI', '-COMP:P', '-SPEC:MA/lla', 'COMP:N', 'OP', '-SPEC:T/fin', 'PF:se', '-SPEC:V', '!PROBE:N'}
se              ['LANG:FI']
sentenza        {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', 'LANG:IT', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', 'PF:sentenza', '-SPEC:uWH', '-SPEC:T/fin', 'LF:sentence', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
Seine           ['LANG:EN']
Seine-          {'COMP:uR', '-SPEC:FORCE', 'COMP:C', 'LANG:EN', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', 'LF:Seine', 'PF:Seine', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
sembrano        ['LANG:IT']
sembra-         {'-SPEC:FORCE', 'SPEC:D', '-ARG', '-COMP:D', 'LANG:EN', '-COMP:N', 'COMP:P', '-COMP:T/fin', 'SPEC:P', '-ASP', '-VAL', 'LF:seem', 'V', '-COMP:V', '-COMP:v', 'SPEC:ADV', '!COMP:ARE/inf', '-SPEC:T/fin', 'PF:sembra', 'SPEC:TO/inf'}
sleeps          ['LANG:EN']
sleep           {'-SPEC:FORCE', 'SPEC:D', 'LANG:EN', 'ARG', 'ASP', '-COMP:N', 'PF:sleep', 'COMP:P', '-COMP:D', '-COMP:T/fin', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'PHI:PER:_', '-VAL', '-COMP:v', 'V', '-COMP:V', 'LF:sleep', '-COMP:MA/inf', 'SPEC:ADV', '-SPEC:T/fin', 'CLASS:INTR', 'SPEC:TO/inf'}
sleep-          {'-SPEC:FORCE', 'SPEC:D', 'LANG:EN', 'ARG', 'ASP', '-COMP:N', 'PF:sleep', 'COMP:P', '-COMP:D', '-COMP:T/fin', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'PHI:PER:_', '-VAL', '-COMP:v', 'V', '-COMP:V', 'LF:sleep', '-COMP:MA/inf', 'SPEC:ADV', '-SPEC:T/fin', 'CLASS:INTR', 'SPEC:TO/inf'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', 'LANG:FI', '-COMP:v', '!COMP:A/inf', '-SPEC:N', 'SPEC:A', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'PF:sopimus', 'N', '-SPEC:R', 'LF:agreement'}
spinge          ['LANG:IT']
spinge-         {'-SPEC:FORCE', 'ARG', 'ASP', '-COMP:N', 'LF:push', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:IT', '-COMP:T/fin', 'SPEC:P', 'PHI:GEN:_', 'PHI:PER:_', '-VAL', '-COMP:v', 'V', '-COMP:V', '-COMP:P', 'SPEC:ADV', '!COMP:D', '-SPEC:T/fin', 'PF:spinge', 'SPEC:TO/inf'}
ssa             {'-SPEC:FORCE', 'SPEC:*', '-COMP:N', 'ARG', 'PHI:DET:_', 'PHI:NUM:_', 'adjoinable', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:C', '-SPEC:iR', '!COMP:*', '-VAL', '-SPEC:P', 'COMP:D', 'PHI:PER:_', '-SPEC:INF', '-COMP:uWH', 'TAIL:V', 'LANG:FI', 'COMP:n/MA', '-SPEC:N', 'LF:in', '-SPEC:T/fin', '-SPEC:v', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:V', '-COMP:ADV', 'PF:ssa', 'P'}
stanno          ['LANG:IT']
sta-            {'-SPEC:FORCE', 'COMP:PRG', 'SPEC:D', 'LANG:EN', 'ARG', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'PHI:GEN:_', '-ASP', '-VAL', 'SEM:internal', 'PHI:PER:_', 'LF:stay', '-COMP:v', 'V', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PF:sta'}
sti             {'-SPEC:N', '-SPEC:FORCE', 'SPEC:*', '-ARG', 'ADV', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', 'TAIL:T', 'PF:sti', '!COMP:*', 'LF:by', 'LANG:FI'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', 'PF:sukka-', '-SPEC:INF', 'LANG:FI', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', 'LF:socks', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
talo            {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', 'LANG:FI', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'LF:house', 'COMP:R', 'PF:talo', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
tama            ['LANG:EN']
tama-           {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', 'LANG:FI', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'LF:this', 'COMP:R', '-SPEC:uWH', 'PF:tama', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', 'PHI', '-SPEC:R'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'LF:must', 'SPEC:*', '-SPEC:FORCE', 'ARG', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', '-ASP', '-VAL', 'PHI:PER:_', 'LANG:FI', '-COMP:v', 'PF:taytyy', 'V', 'MODAL', '!COMP:A/inf', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', 'FIN', 'SPEC:TO/inf'}
teki            ['LANG:FI']
teke-           {'-SPEC:FORCE', 'ARG', 'ASP', '-COMP:N', 'COMP:P', '-COMP:A/inf', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'LF:make', 'SPEC:P', 'CLASS:TR', '!COMP:*', '-VAL', 'COMP:D', 'PHI:PER:_', 'LANG:FI', 'PF:teke', 'V', '-COMP:v', '-COMP:V', '-COMP:P', 'SPEC:ADV', '!COMP:D', '-SPEC:T/fin', 'ASP:BOUNDED', 'SPEC:TO/inf'}
that            {'FORCE', 'LANG:EN', '-ARG', 'LF:that', '!PROBE:FIN', 'COMP:C/fin', 'FIN', 'COMP:T/fin', '!COMP:*', '-VAL', 'PF:that', '-SPEC:*'}
the             {'-COMP:D', 'LANG:EN', '-ARG', 'adjoinable', '-SPEC:Neg/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:C', '!COMP:*', '-SPEC:P', '-SPEC:INF', 'D', '-COMP:P', '-SPEC:MA/lla', 'PF:the', 'COMP:N', 'OP', '-SPEC:T/fin', 'PHI:DEF:DEF', '-SPEC:V', '!PROBE:N', 'LF:the'}
to              {'TAIL:V,+SEM:directional', '-SPEC:FORCE', 'LANG:EN', '-COMP:N', 'ARG', 'PHI:NUM:_', 'PHI:DET:_', 'adjoinable', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:C/fin', 'PHI:GEN:_', '-SPEC:C', '-SPEC:iR', '!COMP:*', '-VAL', '-SPEC:P', 'COMP:D', 'PHI:PER:_', '-SPEC:INF', '-COMP:uWH', '-SPEC:*', '-SPEC:N', '-float', '-SPEC:T/fin', 'LF:to', '-SPEC:v', '-SPEC:iWH', '-SPEC:ADV', '+SEM:directional', '-SPEC:V', '-COMP:ADV', 'P', 'PF:to'}
to_inf          {'COMP:V', 'LANG:EN', 'LF:TO/inf', 'INF', 'adjoinable', '-COMP:C/fin', '-COMP:T/fin', '?ARG', '!COMP:*', '-VAL', 'COMP:v', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:v', 'PF:TO/inf', '-SPEC:V', 'TO/inf'}
towards         {'PF:towards', '-SPEC:FORCE', 'LANG:EN', '-COMP:N', 'ARG', 'PHI:NUM:_', 'PHI:DET:_', 'adjoinable', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:C/fin', 'PHI:GEN:_', '-SPEC:C', '-SPEC:iR', '!COMP:*', '-VAL', '-SPEC:P', 'COMP:D', 'PHI:PER:_', '-SPEC:INF', '-COMP:uWH', 'TAIL:V', '-SPEC:*', '-SPEC:N', '-float', '-SPEC:T/fin', '-SPEC:v', 'LF:towards', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:V', '-COMP:ADV', 'P'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'-SPEC:FORCE', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'CLASS:TR', '!COMP:*', '-VAL', 'COMP:D', 'PHI:PER:_', 'LANG:FI', '-COMP:v', 'LF:nudge', 'V', '-COMP:V', '-COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'PF:tonaise', 'SPEC:TO/inf'}
tta             {'-SPEC:FORCE', 'SPEC:*', '-COMP:N', 'ADV', 'ARG', 'PHI:NUM:_', 'PHI:DET:_', 'adjoinable', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:C/fin', 'LF:without', '-SPEC:C', '-SPEC:iR', '!COMP:*', '-VAL', '-SPEC:P', 'COMP:D', 'PHI:PER:_', '-SPEC:INF', '-COMP:uWH', 'LANG:FI', 'COMP:n/MA', '-SPEC:N', '-SPEC:T/fin', '-SPEC:v', '-SPEC:iWH', '-SPEC:ADV', 'PF:tta', '-SPEC:V', '-COMP:ADV', 'P'}
tries           ['LANG:EN']
try-            {'LF:try', '-SPEC:FORCE', 'SPEC:D', 'LANG:EN', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '!COMP:-ARG', '-COMP:T/fin', 'SPEC:P', 'PHI:GEN:_', '!COMP:TO/inf', 'PHI:PER:_', '-VAL', 'SEM:internal', '-COMP:v', 'V', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PF:try'}
verifiche       {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', 'LANG:IT', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'PF:verifiche', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', 'LF:verification', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'-SPEC:FORCE', 'SPEC:D', '-COMP:D', 'ARG', 'ASP', '-COMP:N', '!COMP:P', 'COMP:P', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'SPEC:P', 'PHI:PER:_', 'PF:virtaa', '-VAL', 'LANG:FI', '-COMP:v', 'V', '-COMP:V', '-COMP:MA/inf', 'SPEC:ADV', 'LF:flow', '-SPEC:T/fin', 'CLASS:INTR', 'SPEC:TO/inf'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'-SPEC:FORCE', 'LF:want', 'LANG:EN', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'PHI:GEN:_', 'PF:volu', '!COMP:*', '-VAL', 'SEM:internal', 'PHI:PER:_', '-SPEC:*', '-COMP:v', 'V', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'SEM:achievement', '-SPEC:FORCE', 'LANG:EN', 'LF:win', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'PF:voitta', 'CLASS:TR', '!COMP:*', '-VAL', 'COMP:D', 'PHI:PER:_', '-COMP:v', 'V', '-COMP:V', '-COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'ASP:BOUNDED', 'SPEC:TO/inf'}
wants           ['LANG:EN']
want-           {'PF:want', '-SPEC:FORCE', 'LF:want', 'LANG:EN', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'PHI:GEN:_', 'CLASS:TR', '!COMP:*', '-VAL', 'COMP:D', '-SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'V', '-COMP:V', '-COMP:P', 'SPEC:ADV', 'COMP:TO/inf', '-SPEC:T/fin'}
what            ['LANG:EN']
what-           {'COMP:uR', '-SPEC:FORCE', 'COMP:C', 'LANG:EN', '-COMP:N', 'COMP:P', '-COMP:WH', 'PHI_N', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', 'LF:what', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', 'PF:what', '-SPEC:R'}
which           {'PF:which', 'LF:which', '-COMP:D', 'LANG:EN', '-ARG', 'adjoinable', '-SPEC:Neg/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:C', 'OP:WH', '!COMP:*', '-SPEC:P', '-SPEC:INF', 'D', '-COMP:P', '-SPEC:MA/lla', 'COMP:N', 'OP', '-SPEC:T/fin', '-SPEC:V', '!PROBE:N'}
who             ['LANG:EN']
who-            {'COMP:uR', '-SPEC:FORCE', 'COMP:C', 'LANG:EN', '-COMP:N', 'COMP:P', 'LF:who', 'PHI_N', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', 'PF:who', '-SPEC:R'}
whether         {'LANG:EN', '-ARG', 'COMP:C/fin', 'COMP:T/fin', 'OP:Q', 'LF:whether', '!COMP:*', '-VAL', 'OP:WH', 'Q', '-SPEC:*', 'FORCE', 'OP', '!PROBE:FIN', 'FIN', 'PF:whether'}
yrittaa         ['LANG:FI']
yritta-         {'LF:try', '-SPEC:FORCE', 'SPEC:D', 'LANG:EN', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '!COMP:-ARG', '-COMP:T/fin', 'SPEC:P', 'PHI:GEN:_', 'PHI:PER:_', '-VAL', 'SEM:internal', '-COMP:v', 'PF:yritta', 'V', '!COMP:A/inf', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf'}
mina            ['LANG:EN']
mina-           {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', 'LF:I', '-COMP:WH', 'PHI_N', 'COMP:T/prt', '-COMP:AUX', 'PF:mina', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', 'LANG:FI', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
sina            ['LANG:EN']
sina-           {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'PF:sina', 'PHI_N', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', 'LANG:FI', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', 'LF:you', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
han             ['LANG:EN']
han-            {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'PHI_N', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', 'LANG:FI', '-COMP:v', 'SPEC:A', '-SPEC:N', 'PF:han', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'LF:s/he', 'N', '-SPEC:R'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'PHI_N', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', 'LANG:FI', '-COMP:v', 'PF:me', '-SPEC:N', 'SPEC:A', '-COMP:V', 'LF:we', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
te              ['LANG:EN']
te-             {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'PHI_N', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', 'LANG:FI', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', 'LF:you', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', 'PF:te', '-SPEC:V', 'N', '-SPEC:R'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'PHI_N', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', 'LF:they', 'LANG:FI', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', 'PF:he', '-SPEC:V', 'N', '-SPEC:R'}
se-             {'-COMP:D', '-ARG', 'adjoinable', '-SPEC:Neg/fin', '-COMP:T/fin', 'LF:it/that', '-COMP:uR', '-SPEC:C', '!COMP:*', '-SPEC:P', '-SPEC:INF', 'D', 'LANG:FI', '-COMP:P', '-SPEC:MA/lla', 'COMP:N', 'OP', '-SPEC:T/fin', 'PF:se', '-SPEC:V', '!PROBE:N'}
I               ['LANG:EN']
I-              {'COMP:uR', '-SPEC:FORCE', 'COMP:C', 'LANG:EN', '-COMP:N', 'LF:I', 'COMP:P', 'PHI_N', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', 'PF:I', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
you             ['LANG:EN']
you-            {'COMP:uR', '-SPEC:FORCE', 'COMP:C', 'LANG:EN', '-COMP:N', 'COMP:P', '-COMP:WH', 'PHI_N', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', 'LF:you', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', 'PF:you', '-SPEC:R'}
he              ['LANG:EN']
he-             {'COMP:uR', '-SPEC:FORCE', 'COMP:C', 'LANG:EN', '-COMP:N', 'COMP:P', '-COMP:WH', 'PHI_N', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', 'LF:he', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', 'PF:he', '-SPEC:V', 'N', '-SPEC:R'}
she             ['LANG:EN']
she-            {'COMP:uR', '-SPEC:FORCE', 'COMP:C', 'LANG:EN', '-COMP:N', 'COMP:P', '-COMP:WH', 'PHI_N', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', 'PF:she', '-SPEC:uWH', '-SPEC:T/fin', 'LF:she', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
we              ['LANG:EN']
we-             {'COMP:uR', '-SPEC:FORCE', 'COMP:C', 'LANG:EN', '-COMP:N', 'COMP:P', '-COMP:WH', 'PHI_N', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'LF:we', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', 'PF:we', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
you_pl          ['LANG:EN']
you_pl-         {'COMP:uR', '-SPEC:FORCE', 'PF:you_pl', 'COMP:C', 'LANG:EN', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', 'LF:you_pl', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', 'PHI', '-SPEC:R'}
they            ['LANG:EN']
they-           {'COMP:uR', '-SPEC:FORCE', 'COMP:C', 'LANG:EN', '-COMP:N', 'COMP:P', '-COMP:WH', 'PHI_N', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', 'LF:they', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'PF:they', 'N', '-SPEC:R'}
it              ['LANG:EN']
it-             {'-COMP:D', 'LANG:EN', '-ARG', 'adjoinable', '-SPEC:Neg/fin', '-COMP:T/fin', 'LF:it/that', '-COMP:uR', '-SPEC:C', '!COMP:*', 'PF:it', '-SPEC:P', '-SPEC:INF', 'D', '-COMP:P', '-SPEC:MA/lla', 'COMP:N', 'OP', '-SPEC:T/fin', '-SPEC:V', '!PROBE:N'}
io              ['LANG:EN']
io-             {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', 'LF:I', '-COMP:WH', 'PHI_N', 'COMP:T/prt', '-COMP:AUX', 'LANG:IT', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', 'PF:io', '-SPEC:R'}
tu              ['LANG:EN']
tu-             {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'PHI_N', '-COMP:AUX', 'LANG:IT', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'PF:tu', 'COMP:R', 'LF:you', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
lui             ['LANG:EN']
lui-            {'COMP:uR', '-SPEC:FORCE', 'PF:lui', '-COMP:N', 'COMP:P', 'COMP:C', '-COMP:WH', 'PHI_N', 'COMP:T/prt', '-COMP:AUX', 'LANG:IT', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', 'LF:he', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
lei             ['LANG:EN']
lei-            {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'PHI_N', '-COMP:AUX', 'LANG:IT', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'PF:lei', '-SPEC:N', 'SPEC:A', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', 'LF:she', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
noi             ['LANG:EN']
noi-            {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'PHI_N', '-COMP:AUX', 'LANG:IT', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'LF:we', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', 'PF:noi', '-SPEC:R'}
voi             ['LANG:EN']
voi-            {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'PHI_N', '-COMP:AUX', 'LANG:IT', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', 'PF:voi', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', 'LF:you_pl', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
loro            ['LANG:EN']
loro-           {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'PHI_N', '-COMP:AUX', 'LANG:IT', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', 'PF:loro', '-SPEC:P', '-SPEC:INF', 'LF:they', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
mi              ['LANG:EN']
mi-             {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'PHI_N', '-COMP:AUX', 'LANG:IT', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', '-SPEC:P', 'PF:mi(cl)', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', 'CL', '-COMP:V', 'COMP:R', 'LF:me', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
la              ['LANG:EN']
la-             {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'PHI_N', '-COMP:AUX', 'LANG:IT', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', 'CL', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:R', '-SPEC:ADV', '-SPEC:V', 'LF:her', 'PF:la(cl)', 'N'}
lo              ['LANG:EN']
lo-             {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'PHI_N', '-COMP:AUX', 'LANG:IT', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'LF:him', '-COMP:*', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', 'CL', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', 'PF:lo(cl)', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
si              ['LANG:EN']
si-             {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'PHI_N', '-COMP:AUX', 'LF:3sg', 'LANG:IT', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', 'CAL:CL', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', 'PF:si(cl)', '-SPEC:R'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'COMP:uR', '-SPEC:FORCE', 'COMP:C', '-COMP:N', 'COMP:P', '-COMP:WH', 'COMP:T/prt', 'PHI_N', '-COMP:AUX', 'LANG:IT', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:*', 'LF:there', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', 'PF:ci', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', '-SPEC:R'}
[-n]            {'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:1', 'inflectional', 'PHI', 'PHI:HUM:HUM', 'LANG:FI'}
[-t]            {'PHI:PER:2', 'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'PHI', 'PHI:HUM:HUM', 'LANG:FI'}
[-V]            {'PHI:NUM:SG', 'inflectional', 'PHI:PER:3', 'PHI', 'LANG:FI'}
[-mme]          {'PHI:DET:DEF', 'PHI:PER:1', 'inflectional', 'PHI:NUM:PL', 'PHI', 'PHI:HUM:HUM', 'LANG:FI'}
[-mme]          {'PHI:DET:DEF', 'PHI:PER:1', 'inflectional', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'LANG:FI'}
[-tte]          {'PHI:PER:2', 'PHI:DET:DEF', 'inflectional', 'PHI:NUM:PL', 'PHI', 'PHI:HUM:HUM', 'LANG:FI'}
[-vat]          {'inflectional', 'PHI:NUM:PL', 'PHI:PER:3', 'PHI', 'LANG:FI'}
[-ni]           {'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:1', 'inflectional', 'PHI', 'PHI:HUM:HUM', 'LANG:FI'}
[-si]           {'PHI:PER:2', 'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'PHI', 'PHI:HUM:HUM', 'LANG:FI'}
[-nsa]          {'PHI:NUM:SG', 'inflectional', 'PHI:PER:3', 'PHI', 'LANG:FI'}
[-an]           {'PHI:NUM:SG', 'inflectional', 'PHI:PER:3', 'PHI', 'PHI:DET:DET', 'LANG:FI'}
[-nne]          {'PHI:PER:2', 'PHI:DET:DEF', 'inflectional', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'LANG:FI'}
[-s]            {'PHI:GEN:F', 'PHI:NUM:SG', 'LANG:EN', 'inflectional', 'PHI:PER:3', 'PHI', 'PHI:GEN:M'}
[-0]            {'PHI:PER:2', 'PHI:NUM:SG', 'PHI:DET:DEF', 'LANG:EN', 'inflectional', 'PHI:PER:1', 'PHI:GEN:N', 'PHI:NUM:PL', 'PHI:PER:3', 'PHI'}
[-o]            {'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:PER:1', 'inflectional', 'PHI', 'LANG:IT', 'PHI:HUM:HUM'}
[-i]            {'PHI:PER:2', 'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'PHI', 'LANG:IT', 'PHI:HUM:HUM'}
[-a]            {'PHI:NUM:SG', 'PHI:DET:DEF', 'inflectional', 'PHI:PER:3', 'PHI', 'LANG:IT'}
[-e]            {'PHI:NUM:SG', 'PHI:DET:DEF', 'inflectional', 'PHI:PER:3', 'PHI', 'LANG:IT'}
[-iamo]         {'PHI:DET:DEF', 'PHI:PER:1', 'inflectional', 'PHI:NUM:PL', 'PHI', 'LANG:IT', 'PHI:HUM:HUM'}
[-te]           {'PHI:PER:2', 'PHI:DET:DEF', 'inflectional', 'PHI:NUM:PL', 'PHI', 'LANG:IT', 'PHI:HUM:HUM'}
[-no]           {'PHI:DET:DEF', 'inflectional', 'PHI:NUM:PL', 'PHI:PER:3', 'PHI', 'LANG:IT'}
[-nom]          {'LANG:EN', 'inflectional', 'NOM', 'adjoinable', 'TAIL:FIN,ARG,VAL'}
[-par]          {'TAIL:ARG,-VAL', 'inflectional', 'LANG:FI', 'adjoinable', 'PAR'}
[-gen]          {'-float', 'GEN', 'LANG:EN', 'inflectional', 'TAIL:INF,ARG'}
gen             {'-float', 'GEN', 'LANG:EN', 'inflectional', 'TAIL:INF,ARG'}
[-n_acc]        {'TAIL:PHI', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'inflectional', 'adjoinable', 'n-ACC', 'LANG:FI'}
[-t_acc]        {'TAIL:ARG,ASP:BOUNDED', 't-ACC', 'inflectional', 'adjoinable', 'TAIL:*POL:NEG', 'LANG:FI'}
[-0_acc]        {'0_ACC', 'TAIL:ARG,ASP:BOUNDED', 'inflectional', 'TAIL:*PHI', 'adjoinable', 'TAIL:*POL:NEG', 'LANG:FI'}
asp             {'ASP:BOUNDED', 'LANG:EN', 'inflectional'}
a'              {'a', 'LANG:X', 'PF:a', 'LF:A'}
b'              {'PF:b', 'LF:B', 'LANG:X', 'b'}
b''             {'PF:b', 'LF:B', 'LANG:EN', 'b', '-COMP:c'}
c''             {'PF:c', 'LANG:EN', 'LF:C', 'c', 'SPEC:a'}
c'              {'PF:c', 'c', 'LANG:X', 'LF:C'}
d'              {'d', 'PF:d', 'LF:D', 'LANG:'}
a''             ['LANG:EN']
x'              {'PF:x', 'x', 'LANG:X', 'LF:X'}
y'              {'LF:Y', 'PF:y', 'y', 'LANG:X'}
z'              {'PF:x', 'LF:Z', 'LANG:X', 'z'}
John'           {"N'", 'PF:John', 'LF:John', 'LANG:X'}
admires'        {"V'", 'LANG:X', 'PF:admires', 'LF:admires'}
admires''       {'-SPEC:FORCE', 'LF:admires', 'SPEC:D', 'LANG:EN', 'ARG', 'ASP', '-COMP:N', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', 'SPEC:P', 'PHI:GEN:_', 'PHI:PER:_', '-VAL', '-COMP:v', 'V', '-COMP:V', 'PF:admires', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf'}
Mary'           {"N'", 'LF:mary', 'LANG:X', 'PF:Mary'}
T/fin           {'COMP:V', '-SPEC:FORCE', 'SPEC:*', 'SPEC:D', 'LANG:EN', 'ARG', 'COMP:T/prt', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', '-SPEC:C/fin', 'PHI:GEN:_', '-SPEC:C', '!COMP:*', 'COMP:v', 'PHI:PER:_', '-SPEC:TO/inf', '-SPEC:Neg', '-COMP:INF', '-SPEC:N', 'LF:T', '!SPEC:D', 'VAL', 'T', '-SPEC:T/fin', 'FIN', '-SPEC:v', '!PROBE:V', 'T/fin', '-SPEC:V', 'SPEC:TO/inf', 'PF:T'}
v               {'-SPEC:N', 'v', 'COMP:V', 'SPEC:D', 'LANG:EN', 'ARG', 'ASP', 'PHI:NUM:_', 'PHI:DET:_', 'PF:v', '!PROBE:V', 'PHI:GEN:_', '!COMP:*', '-VAL', 'PHI:PER:_', 'LF:v'}
C/fin           {'-COMP:T/prt', 'SPEC:*', 'LANG:EN', '-ARG', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:T/fin', 'PF:C', '!COMP:*', 'C/fin', 'C', '-SPEC:N', 'VAL', '-SPEC:T/fin', '!PROBE:FIN', 'FIN', 'COMP:Neg/fin', 'LF:C/fin'}
T               {'COMP:V', '-COMP:NEG', '-SPEC:FORCE', 'SPEC:D', 'LANG:EN', 'ARG', 'COMP:T/prt', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:*', 'PHI:GEN:_', '!COMP:*', 'COMP:v', 'PHI:PER:_', '-SPEC:N', 'LF:T', 'T', 'VAL', '-SPEC:T/fin', 'FIN', '!PROBE:V', '-SPEC:V', 'PF:T'}
T/prt           {'COMP:V', '-COMP:NEG', 'SPEC:*', 'SPEC:D', 'LANG:EN', 'ARG', 'COMP:T/prt', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', 'PHI:GEN:_', '!COMP:*', 'COMP:D', 'COMP:v', 'PHI:PER:_', '-SPEC:N', 'VAL', 'T', '-SPEC:T/fin', 'LF:T/prt', 'FIN', '!PROBE:V', '-SPEC:V', 'PF:T/prt', 'T/prt'}
a0              {'-SPEC:D', 'LANG:EN', 'LF:A', 'TAIL:D', '-adjoinable', '-SPEC:A', 'PF:A', 'A', 'COMP:0'}
n               {'COMP:uR', 'COMP:V', 'LANG:EN', '-COMP:N', 'COMP:P', 'INF', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:0', 'COMP:R/D', '-SPEC:P', '-SPEC:INF', '-COMP:v', '-SPEC:N', 'VAL', '-SPEC:uWH', '-SPEC:ADV', '-SPEC:V', '-SPEC:FORCE', 'SPEC:*', 'COMP:C', '-COMP:WH', 'COMP:T/prt', 'ARG', 'PHI:DET:_', '-COMP:AUX', 'LF:n', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', '!SPEC:*', '!COMP:*', 'COMP:v', 'PHI:PER:_', 'SPEC:A', '-COMP:V', 'COMP:R', 'n', '!SPEC:D', '-SPEC:T/fin', 'PF:n', 'N', '-SPEC:R'}
impass          {'-SPEC:N', 'v', 'COMP:V', '-VAL', 'SPEC:D', 'LANG:EN', 'ARG', 'ASP', 'PHI:NUM:_', 'PHI:DET:_', '!PROBE:V', 'LF:impass', 'PHI:GEN:_', '!COMP:*', 'PF:impass', 'PHI:PER:_'}
cau             {'-SPEC:N', 'v', 'COMP:V', 'SPEC:D', 'LANG:EN', 'ARG', 'ASP', 'PHI:NUM:_', 'PHI:DET:_', 'PF:Cau', '!PROBE:V', 'PHI:GEN:_', 'LF:v/Cause', '!COMP:*', '-VAL', 'PHI:PER:_'}
INF             {'COMP:V', 'LANG:EN', 'LF:INF', 'INF', 'PF:INF', '-SPEC:T/fin', '-COMP:C/fin', '-COMP:T/fin', '-SPEC:V', '!COMP:*', 'COMP:v', '-COMP:FORCE'}
prtcpl          {'COMP:V', '-COMP:NEG', 'SPEC:*', 'SPEC:D', 'LANG:EN', 'INF', '-SPEC:FORCE', 'ARG', 'COMP:T/prt', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T/fin', '-COMP:C/fin', 'PHI:GEN:_', '!COMP:*', 'COMP:D', 'COMP:v', 'PHI:PER:_', '-COMP:FORCE', '-SPEC:N', 'T', 'VAL', '-SPEC:T/fin', 'LF:T/prt', 'FIN', '!PROBE:V', '-SPEC:V', 'PF:T/prt', 'T/prt'}
TO/inf          {'COMP:V', 'LANG:EN', 'LF:TO/inf', 'INF', 'adjoinable', '-COMP:T/fin', '-COMP:C/fin', '!COMP:V', '?ARG', '!COMP:*', '-VAL', 'COMP:v', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:v', 'PF:TO/inf', '-SPEC:V', 'TO/inf'}
A/inf           {'COMP:V', 'SPEC:*', 'LANG:EN', 'INF', 'LF:A/inf', '-SPEC:Neg/fin', '-COMP:C/fin', '-COMP:T/fin', 'A/inf', '?ARG', '!COMP:*', 'COMP:v', '-COMP:FORCE', '?VAL', 'PF:A/inf', '-SPEC:T/fin', '-SPEC:V'}
ARE/inf         {'COMP:V', 'ARE/inf', 'SPEC:*', 'LANG:EN', 'INF', '-adjoinable', '-COMP:C/fin', '-COMP:T/fin', '?ARG', '!COMP:*', 'COMP:v', '-COMP:FORCE', 'VAL', '-SPEC:T/fin', 'LF:ARE/inf', '-SPEC:V', 'PF:are'}
ESSA/inf        {'COMP:V', 'SPEC:*', '-SPEC:FORCE', 'ESSA/inf', 'INF', 'ADV', 'LANG:EN', 'LF:while', 'adjoinable', '-SPEC:Neg/fin', '-COMP:T/fin', '-COMP:C/fin', 'TAIL:T', '?ARG', 'PF:essa', '!COMP:*', 'COMP:v', '-COMP:FORCE', '-SPEC:N', '?VAL', '-SPEC:T/fin', '-SPEC:V'}
TUA/inf         {'PHI:DET:_', 'COMP:V', '-SPEC:FORCE', 'SPEC:*', 'ARG', 'INF', 'ADV', 'LANG:EN', 'PHI:NUM:_', 'adjoinable', '-SPEC:Neg/fin', '-COMP:T/fin', '-COMP:C/fin', 'TAIL:T', '!SPEC:*', 'PF:tua', 'PHI:GEN:_', '!COMP:*', 'COMP:v', 'PHI:PER:_', '-COMP:FORCE', '-SPEC:N', 'LF:after', 'TUA/inf', 'VAL', '-SPEC:T/fin', '-SPEC:V'}
VA/inf          {'COMP:V', 'SPEC:*', 'ARG', 'INF', 'LANG:EN', 'PHI:NUM:_', 'PHI:DET:_', 'LF:VA', '-COMP:C/fin', '!SPEC:*', '-COMP:T/fin', 'PHI:GEN:_', '!COMP:*', 'COMP:v', 'PHI:PER:_', '-COMP:FORCE', '-SPEC:N', 'PF:vAn', 'VAL', '-SPEC:T/fin', '-SPEC:V', 'VA/inf'}
MA/ssa          {'COMP:V', '-SPEC:FORCE', 'ARG', 'ADV', 'LANG:EN', 'PHI:NUM:_', 'PHI:DET:_', 'adjoinable', '-SPEC:Neg/fin', 'LF:in_doing', 'PHI:GEN:_', 'PHI:PER:_', '-VAL', 'COMP:v', 'TAIL:V', '-SPEC:*', 'MA/inf', '-SPEC:N', 'PF:massa', '-SPEC:T/fin', 'MA/ssa'}
MA/tta          {'-SPEC:N', '-SPEC:FORCE', 'ARG', 'ADV', 'LANG:EN', 'PHI:NUM:_', 'PHI:DET:_', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', 'TAIL:T', 'PHI:GEN:_', 'LF:without_doing', 'PHI:PER:_', '-VAL', 'PF:matta', 'MA/inf'}
MA/lla          {'COMP:V', 'LANG:EN', 'PHI:NUM:_', '-SPEC:Neg/fin', 'PHI:GEN:_', '-VAL', 'MA/inf', '-SPEC:N', 'PF:malla', '-SPEC:FORCE', 'ARG', 'ADV', 'PHI:DET:_', 'adjoinable', 'TAIL:T', 'PHI:PER:_', 'COMP:v', 'LF:by_doing', '-SPEC:T/fin'}
MA/inf          {'COMP:V', 'LANG:EN', 'PHI:NUM:_', '-SPEC:Neg/fin', 'LF:to_do', 'PHI:GEN:_', '-VAL', 'MA/inf', '-SPEC:N', '-SPEC:FORCE', 'ARG', 'ADV', 'PHI:DET:_', 'adjoinable', 'PHI:PER:_', 'COMP:v', 'PF:maan', 'TAIL:V', '-SPEC:T/fin'}
E/inf           {'LF:by', 'PF:en', '-SPEC:N', '-SPEC:FORCE', 'SPEC:*', '-ARG', 'ADV', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', 'TAIL:T', '-VAL', 'LANG:FI'}
BE-             {'-SPEC:FORCE', 'SPEC:D', '-ARG', 'COMP:T/prt', 'LANG:EN', '-COMP:N', 'ASP', 'COMP:P', 'LF:BE', 'PF:BE', 'COPULA', '-COMP:T/fin', 'SPEC:P', '!COMP:*', '-VAL', '-COMP:v', 'V', '-COMP:V', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf'}
D               {'-COMP:D', 'LANG:EN', '-ARG', 'adjoinable', '-SPEC:Neg/fin', '-COMP:T/fin', '-COMP:uR', '-SPEC:C', '!COMP:*', '-SPEC:P', '-SPEC:INF', 'LF:D', 'D', '-COMP:P', '-SPEC:MA/lla', 'COMP:N', 'OP', '-SPEC:T/fin', '-SPEC:V', '!PROBE:N', 'PF:D'}
D/rel           {'-COMP:D', 'LANG:EN', '-ARG', 'adjoinable', '-SPEC:Neg/fin', 'D/rel', '-COMP:C/fin', '-COMP:T/fin', '-COMP:uR', 'LF:D/rel', '-SPEC:C', '!COMP:*', '-SPEC:P', '-SPEC:INF', 'PF:D/rel', 'D', 'OP:REL', '-SPEC:MA/lla', 'OP:_', 'COMP:N', 'OP', '-SPEC:T/fin', '-SPEC:V', '!PROBE:N'}
P               {'-SPEC:FORCE', 'LANG:EN', '-COMP:N', 'ARG', 'PHI:NUM:_', 'PHI:DET:_', 'adjoinable', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:C/fin', 'PHI:GEN:_', '-SPEC:C', '-SPEC:iR', '!COMP:*', '-VAL', '-SPEC:P', 'COMP:D', 'PHI:PER:_', '-SPEC:INF', '-COMP:uWH', '-SPEC:*', '-SPEC:N', 'PF:P', '-float', '-SPEC:T/fin', '-SPEC:v', '-SPEC:iWH', 'LF:P', '-SPEC:ADV', '-SPEC:V', '-COMP:ADV', 'P'}
pro             ['LANG:EN']
pro-            {'COMP:uR', '-SPEC:FORCE', 'COMP:C', 'LANG:EN', '-COMP:N', 'COMP:P', 'LF:pro', '-COMP:WH', 'COMP:T/prt', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', '-SPEC:C/fin', 'COMP:R/D', 'PF:(pro)', '-SPEC:P', '-SPEC:INF', '-COMP:v', 'SPEC:A', '-SPEC:N', '-COMP:V', 'COMP:R', '-SPEC:uWH', '-SPEC:T/fin', '-SPEC:ADV', '-SPEC:V', 'N', 'PHI', '-SPEC:R'}
cl              {'LEFT:T/fin', 'CL', 'RIGHT:PRG', 'LANG:EN', 'inflectional', 'RIGHT:ARE/inf', 'LEFT:D,CL'}
inc             {'inflectional', 'INCORPORATED', 'LANG:EN'}
sg              {'inflectional', 'PHI:NUM:SG', 'LANG:EN'}
pl              {'inflectional', 'PHI:NUM:PL', 'LANG:EN'}
1p              {'inflectional', 'PHI:PER:1', 'LANG:EN'}
2p              {'inflectional', 'PHI:PER:2', 'LANG:EN'}
3p              {'inflectional', 'PHI:PER:3', 'LANG:EN'}
def             {'inflectional', 'PHI:DET:DEF', 'LANG:EN'}
indef           {'inflectional', 'PHI:DET:INDEF', 'LANG:EN'}
hum             {'inflectional', 'PHI:HUM:HUM', 'LANG:EN'}
nonhum          {'inflectional', 'PHI:HUM:NONHUM', 'LANG:EN'}
m               {'inflectional', 'PHI:GEN:M', 'LANG:EN'}
f               {'inflectional', 'PHI:GEN:F', 'LANG:EN'}
nom             {'inflectional', 'NOM', 'LANG:EN', 'TAIL:FIN,!COMP:*,VAL'}
acc             {'inflectional', 'TAIL:v', 'ACC', 'LANG:EN'}
dat             {'inflectional', 'TAIL:v', 'LANG:EN', 'DAT'}
uC/op           {'inflectional', 'LANG:EN', 'uC/op'}
wh              {'inflectional', 'OP:_', 'OP:WH', 'LANG:EN'}
wh_             {'FORCE:OP:WH', 'LANG:EN', 'inflectional', 'OP:_', 'OP'}
top             {'inflectional', 'OP:TOP', 'LANG:EN'}
foc             {'inflectional', 'OP:FOC', 'LANG:EN'}
C/op            {'inflectional', 'OP:C/OP', 'LANG:EN'}
rel             {'OP:REL', 'SPEC:D', 'LANG:EN', 'inflectional', 'OP:_', 'adjoinable', '-COMP:C/fin'}
Q               {'OP:Q', 'LANG:EN', 'OP:WH', 'inflectional', 'OP'}
