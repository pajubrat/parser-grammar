ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'LF:to', '!COMP:*', '-SPEC:V', '-SPEC:iR', '-SPEC:INF', '-COMP:N', 'PF:a', '-ARG', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:iWH', '-SPEC:T/fin', '-SPEC:ADV', 'COMP:D', '-SPEC:Neg/fin', 'P', '-SPEC:N', '-SPEC:C/fin', 'LANG:IT', '-COMP:uWH', '-VAL', 'COMP:ARE/inf', 'adjoinable', '-SPEC:C', '-SPEC:*', '-SPEC:v', '-COMP:ADV', '-SPEC:P'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'PHI:PER:_', '-COMP:P', 'CLASS:TR', '!COMP:*', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', '-COMP:N', 'V', '-SPEC:Neg', '-SPEC:FORCE', '-COMP:Neg', 'ARG', '-SPEC:T/fin', 'PF:admire', 'PHI:NUM:_', 'COMP:D', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'ASP', '-VAL', 'LF:admire', 'LANG:EN', 'PHI:DET:_'}
admire*         ['LANG:EN']
T/fin*          {'LF:T', '!SPEC:*', 'NO_NUMBER', 'NO_DET', '-VAL', 'LANG:EN', "PF:T/fin'", 'CAT:T/fin'}
v*              {'-VAL', 'NO_DET', 'LF:v', 'NO_NUMBER', 'LANG:EN', 'PF:v', 'CAT:v'}
admire**        ['LANG:EN']
T/fin**         {'LF:T', 'PHI:PER:3', '!SPEC:*', 'NO_NUMBER', 'NO_DET', 'NO_PERSON', '-VAL', 'LANG:EN', 'CAT:T/fin', "PF:T/fin''"}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'PHI:PER:_', 'PF:adora', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:D', 'SPEC:P', '-COMP:V', 'LANG:IT', 'SPEC:ADV', 'ASP', '-VAL', 'LF:admire', 'PHI:DET:_'}
antaa           ['LANG:FI']
anta-           {'PHI:PER:_', 'ASP:BOUNDED', '-COMP:P', '!COMP:*', 'SPEC:D', '+SEM:directional', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'CLASS:DITR', 'PHI:NUM:_', 'COMP:D', 'LF:give', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'PF:antaa', 'ASP', '-VAL', 'PHI:DET:_', '-COMP:FIN'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'PHI:PER:_', 'SEM:internal', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'LF:ask', 'COMP:D', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'PF:ask', 'ASP', '-VAL', 'LANG:EN', 'PHI:DET:_'}
ask-            {'PHI:PER:_', 'SEM:internal', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'LF:ask', 'COMP:D', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'PF:ask', 'ASP', '-VAL', 'LANG:EN', 'PHI:DET:_'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-COMP:WH', 'PF:avain', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', 'LF:key', '-SPEC:INF', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', 'COMP:P', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P', '-SEM:directional'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'PF:auto', '-COMP:WH', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', 'LF:car', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P', '-SEM:directional'}
city            {'LF:city', 'PF:city', '-COMP:WH', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:R', 'LANG:EN', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
che             ['LANG:IT']
che-            {'-COMP:WH', '-COMP:D', 'PHI_N', '-COMP:A', 'LF:who', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', 'LANG:IT', '-SPEC:uWH', 'PF:che', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
chiamato        ['LANG:IT']
chiamata-       {'PHI:PER:_', '-COMP:v', 'LF:called', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', 'PF:chiamato', '-SPEC:FORCE', 'ARG', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'LANG:IT', 'SPEC:ADV', 'ASP', '-VAL', 'PHI:DET:_'}
danno           {'-COMP:WH', 'PF:danno', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', 'LANG:IT', '-SPEC:uWH', '-SPEC:R', '-COMP:ADV', 'N', 'LF:damage', '-SPEC:P', 'COMP:uR'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'PHI:PER:_', 'SEM:internal', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:D', 'SPEC:P', 'PF:detest', '-COMP:V', 'LANG:IT', 'SPEC:ADV', 'ASP', '-VAL', 'COMP:ARE/inf', 'LF:detest', 'PHI:DET:_'}
devono          ['LANG:EN']
deva-           {'PHI:PER:_', 'SEM:internal', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'PF:deva', 'LANG:IT', 'SPEC:ADV', 'LF:must', '-VAL', 'COMP:ARE/inf', '-ASP', 'PHI:DET:_'}
di              {'PHI:PER:_', 'PF:di', '!COMP:*', 'PHI:DET:_', '-SPEC:V', '-SPEC:iR', '-SPEC:INF', '-COMP:N', '-COMP:T/fin', '-SPEC:FORCE', 'ARG', '-SPEC:iWH', '-SPEC:T/fin', '-SPEC:ADV', 'PHI:NUM:_', 'LF:of', 'COMP:D', 'P', '-SPEC:Neg/fin', '-SPEC:N', '-adjoinable', '-SPEC:C/fin', 'LANG:FI', '-COMP:uWH', '-VAL', '-SPEC:C', '-SPEC:v', '-COMP:ADV', 'SPEC:*', '-SPEC:P'}
does            {'PHI:PER:_', 'VAL', 'PHI:PER:3', '!COMP:*', 'SPEC:D', 'SPEC:TO/inf', '-SPEC:V', 'LF:does', 'COMP:V', '!PROBE:V', '-COMP:T/fin', '-SPEC:FORCE', 'ARG', '!SPEC:D', 'PHI:GEN:_', 'PF:does', '-SPEC:T/fin', 'FIN', 'PHI:GEN:M', 'PHI:NUM:_', 'COMP:Neg', 'COMP:D', '-SPEC:N', '-SPEC:C/fin', 'COMP:v', '!SPEC:*', '-COMP:INF', 'PHI:GEN:F', 'T', 'PHI:NUM:SG', 'LANG:EN', '-SPEC:v', 'SPEC:*', 'T/fin', 'PHI:DET:_', 'COMP:T/prt'}
does_C          ['LANG:EN']
does-           {'PHI:PER:_', 'VAL', 'PHI:PER:3', '!COMP:*', 'SPEC:D', 'SPEC:TO/inf', '-SPEC:V', 'LF:does', 'COMP:V', '!PROBE:V', '-COMP:T/fin', '-SPEC:FORCE', 'ARG', '!SPEC:D', 'PHI:GEN:_', 'PF:does', '-SPEC:T/fin', 'FIN', 'PHI:GEN:M', 'PHI:NUM:_', 'COMP:Neg', 'COMP:D', '-SPEC:N', '-SPEC:C/fin', 'COMP:v', '!SPEC:*', '-COMP:INF', 'PHI:GEN:F', 'T', 'PHI:NUM:SG', 'LANG:EN', '-SPEC:v', 'SPEC:*', 'T/fin', 'PHI:DET:_', 'COMP:T/prt'}
dorme           ['LANG:IT']
dorme-          {'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '!SPEC:D', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:dorme', 'LF:sleep', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'ASP', '-VAL', 'LANG:EN', 'PHI:DET:_'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'PHI:PER:_', 'VAL', '!COMP:T', 'SEM:internal', '!COMP:*', 'NEG', 'LF:neg', '%SPEC:INF', 'ARG', 'POL:NEG', '-SPEC:T/fin', 'FIN', 'PHI:NUM:_', '!SPEC:*', '-SPEC:T', 'LANG:FI', 'Neg/fin', 'SPEC:*', 'PF:ei', 'PHI:DET:_', 'COMP:T/prt'}
e-              {'PHI:PER:_', 'VAL', '!COMP:T', 'SEM:internal', '!COMP:*', 'NEG', 'LF:neg', '%SPEC:INF', 'ARG', 'POL:NEG', '-SPEC:T/fin', 'FIN', 'PHI:NUM:_', '!SPEC:*', '-SPEC:T', 'LANG:FI', 'Neg/fin', 'SPEC:*', 'PF:ei', 'PHI:DET:_', 'COMP:T/prt'}
etsii           ['LANG:FI']
etsi-           {'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '!COMP:D', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'LF:search', 'COMP:D', 'PF:etsi', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'ASP', '-VAL', 'PHI:DET:_'}
etta            {'COMP:T/fin', 'FIN', 'FORCE', 'LANG:FI', '!COMP:*', '-VAL', '-SPEC:*', '-ARG', 'PF:ettÃ¤', 'LF:that', '!PROBE:T/fin', 'COMP:C/fin'}
flow'           {'PHI:PER:_', 'LF:flow', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'PF:flow', 'ASP', '-VAL', 'LANG:EN', 'PHI:DET:_'}
from            {'PHI:PER:_', '!COMP:*', 'PHI:DET:_', '-SPEC:V', '-SPEC:iR', '-SPEC:INF', 'PHI:GEN:_', '-COMP:N', '-COMP:T/fin', '-SPEC:FORCE', 'ARG', '-SPEC:iWH', 'PF:from', '-SPEC:T/fin', '-COMP:ADV', '-SPEC:ADV', 'PHI:NUM:_', 'COMP:D', '-SPEC:Neg/fin', 'P', '-SPEC:N', '-SPEC:C/fin', '-COMP:uWH', '-VAL', 'TAIL:V,+SEM:directional', 'LF:from', 'adjoinable', '-SPEC:C', '-SPEC:*', 'LANG:EN', '-SPEC:v', '-SPEC:P'}
gave            ['LANG:EN']
give-           {'PHI:PER:_', '-COMP:P', '!COMP:*', 'PF:give', '+SEM:directional', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', 'PHI:GEN:_', '-SPEC:T/fin', 'CLASS:DITR', 'PHI:NUM:_', 'COMP:D', 'LF:give', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'ASP', '-VAL', 'LANG:EN', 'PHI:DET:_', '-COMP:FIN'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-COMP:WH', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', 'LF:Giuseppe', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', 'PF:Giuseppe', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', 'LANG:IT', '-SPEC:uWH', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P', '-SEM:directional'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'PHI:PER:_', 'ASP:BOUNDED', '-COMP:P', 'COMP:A/inf', 'SEM:internal', 'CLASS:TR', '!COMP:*', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:D', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'ASP', '-VAL', 'LF:want', '-SPEC:*', 'PF:haluaa', 'PHI:DET:_'}
hairitsee       ['LANG:FI']
hairitse-       {'PHI:PER:_', 'LF:disturb', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', '!COMP:D', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', 'PF:hairitsee', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'ASP', '-VAL', 'PHI:DET:_', '-COMP:FIN'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'PHI:PER:_', 'SEM:internal', 'LF:have', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:ha', 'SPEC:P', '-COMP:V', 'LANG:IT', 'SPEC:ADV', '-VAL', 'COMP:T', 'SPEC:*', '-ASP', 'PHI:DET:_'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'PHI:PER:_', '-COMP:D', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'CLASS:INTR', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'ASP', '-VAL', 'PF:havia', 'LF:disappear', 'PHI:DET:_'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'PHI:PER:_', '-COMP:P', 'PF:ihaile-', 'CLASS:TR', '!COMP:*', '-COMP:v', 'SPEC:TO/inf', '!COMP:D', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:D', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'ASP', '-VAL', 'LF:admire', 'PHI:DET:_', '-COMP:FIN'}
il              {'!PROBE:N', 'LF:the', 'COMP:N', 'PF:il', '-COMP:D', '!COMP:*', '-SPEC:INF', '-SPEC:V', '-COMP:T/fin', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:N', 'LANG:IT', 'D', 'OP', 'adjoinable', '-SPEC:C', '-COMP:uR', '-SPEC:D', '-SPEC:P', '-SPEC:MA/lla'}
i               {'!PROBE:N', 'LF:the', 'COMP:N', 'PF:il', '-COMP:D', '!COMP:*', '-SPEC:INF', '-SPEC:V', '-COMP:T/fin', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:N', 'LANG:IT', 'D', 'OP', 'adjoinable', '-SPEC:C', '-COMP:uR', '-SPEC:D', '-SPEC:P', '-SPEC:MA/lla'}
in              {'PHI:PER:_', '!COMP:*', 'PHI:DET:_', '-SPEC:V', '-SPEC:iR', 'LF:in', '-SPEC:INF', '-COMP:N', '-COMP:T/fin', '-SPEC:FORCE', 'ARG', '-SPEC:iWH', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:ADV', 'PHI:NUM:_', 'COMP:D', '-SPEC:Neg/fin', 'P', '-SPEC:N', '-SPEC:C/fin', 'LANG:IT', '-COMP:uWH', '-VAL', 'adjoinable', 'PF:in', '-SPEC:C', '-SPEC:v', '-COMP:ADV', '-SPEC:P'}
infermieri      {'-COMP:WH', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'LF:nurses', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', 'PF:infermieri', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', 'LANG:IT', '-SPEC:uWH', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
is              ['LANG:EN']
be-             {'PF:be', '!COMP:*', 'SPEC:D', 'SPEC:TO/inf', '-COMP:v', 'COMP:P', '-COMP:N', 'V', 'COPULA', '-ARG', '-SPEC:FORCE', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'ASP', '-VAL', 'LANG:EN', '-COMP:TO/inf', 'LF:be'}
istuuko         ['LANG:FI']
istuu-          {'PHI:PER:_', '-COMP:D', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'CLASS:INTR', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'PF:istuu', 'ASP', '-VAL', 'LF:sit', 'PHI:DET:_'}
John            ['LANG:EN']
John-           {'-COMP:WH', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', 'LF:John', '-SPEC:N', '-SPEC:C/fin', '-adjoinable', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'PF:John', '-SPEC:R', 'LANG:EN', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P', '-SEM:directional'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-COMP:WH', '-COMP:D', '-COMP:A', 'LF:Jukka', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:T/fin', 'PF:Jukka', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P', '-SEM:directional'}
juosten         ['LANG:FI']
juokse-         {'PHI:PER:_', 'PF:juokse-', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'ASP', '-VAL', 'LF:run', 'PHI:DET:_'}
istuu           ['LANG:FI']
istu-           {'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'PF:istuu', 'ASP', '-VAL', 'LF:sit', 'PHI:DET:_'}
kaksi           {'PHI:PER:_', 'LF:two', 'COMP:N', 'COMP:n', 'LANG:FI', 'NUM', '-VAL', 'TAIL:ARG,VAL,FIN', 'PHI:NUM:SG', 'SPEC:*', 'ARG', 'PF:kaksi', 'PHI:NUM:_', 'PHI:DET:_'}
kaksi           {'LF:two', 'COMP:N', 'COMP:n', 'NUM', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'LANG:EN', 'SPEC:*', 'PF:kaksi'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'LF:two', 'SPEC:*', 'PF:kaksi', 'COMP:n', 'LANG:FI', 'COMP:N', 'NUM'}
kaupunkia       ['LANG:EN']
kaupunki        {'-COMP:P', 'LF:city', '-COMP:WH', '-COMP:D', '-COMP:A', 'PF:kaupunki', '-COMP:v', '-SPEC:V', '-SPEC:INF', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'LF:order', 'SPEC:P', '-COMP:V', 'PF:kaske', 'LANG:FI', '!COMP:A/inf', 'SPEC:ADV', 'SEM:external', 'ASP', '-VAL', 'PHI:DET:_'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-COMP:WH', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', '-SPEC:R', 'N', '-COMP:ADV', 'PF:kello', 'LF:watch', 'COMP:uR', '-SPEC:P'}
kello0-         {'0', 'PF:kello', 'LF:watch', 'LANG:FI', '2SPEC', 'SPEC:D'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-COMP:WH', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', 'LF:key', '-SPEC:INF', '-COMP:N', 'COMP:R/D', 'PF:key', '-SPEC:FORCE', 'COMP:P', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:R', 'LANG:EN', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'COMP:uR', '-COMP:WH', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', 'PF:kirja', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', '-SPEC:R', '-COMP:ADV', 'N', 'LF:book', '-SPEC:P', '-SEM:directional'}
kohti           {'PHI:PER:_', '!COMP:*', 'TAIL:V', 'PHI:DET:_', '-SPEC:V', '-SPEC:iR', '-SPEC:INF', '-COMP:N', '-COMP:T/fin', '-SPEC:FORCE', 'ARG', '-SPEC:iWH', '-SPEC:T/fin', '-SPEC:ADV', 'PHI:NUM:_', 'PF:kohti', 'COMP:D', '-SPEC:Neg/fin', 'P', '-SPEC:N', '-SPEC:C/fin', 'LANG:FI', '-COMP:uWH', '-VAL', 'adjoinable', '-SPEC:C', '-SPEC:v', '-COMP:ADV', 'SPEC:*', 'LF:towards', '-SPEC:P'}
koko            {'!PROBE:N', 'COMP:N', '-COMP:D', '!COMP:*', 'PF:koko', '-SPEC:INF', '-SPEC:V', '-COMP:T/fin', '-ARG', 'TAIL:T', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:N', 'D', 'OP', 'LANG:FI', 'adjoinable', '-SPEC:C', 'LF:all', '-COMP:uR', '-SPEC:D', '-SPEC:P', '-SPEC:MA/lla'}
kuka            ['LANG:FI']
kuka-           {'-COMP:WH', '-COMP:D', '-COMP:A', 'PHI', 'LF:who', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', 'PF:kuka', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
kuorsaa-        {'PHI:PER:_', 'LF:snore', 'PF:kuorsaa', '-COMP:WH', '-COMP:D', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:T/fin', 'V', '-COMP:N', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'ASP', '-VAL', 'PHI:DET:_'}
kuorsaamalla    ['LANG:FI']
lahella         {'VAL', '-COMP:N', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:D', '-SPEC:Neg/fin', 'P', '!SPEC:*', 'LF:near', 'LANG:FI', '-COMP:uWH', 'adjoinable', '-SPEC:C', '-SPEC:v', '-COMP:ADV', 'SPEC:*', '-SPEC:P', 'PHI:PER:_', 'INF', '!COMP:*', '-COMP:FORCE', '-SPEC:V', '-SPEC:iR', '-SPEC:INF', 'COMP:V', '-COMP:T/fin', '-SPEC:iWH', '!SPEC:D', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', 'COMP:v', '-COMP:C/fin', 'PF:lahella', 'PHI:DET:_'}
lahella         {'PHI:PER:_', '!COMP:*', 'PHI:DET:_', '-SPEC:V', '-SPEC:iR', '!COMP:D', '-SPEC:INF', '-COMP:N', '-COMP:T/fin', '-SPEC:FORCE', 'ARG', '-SPEC:iWH', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:ADV', 'PHI:NUM:_', 'COMP:D', '-SPEC:Neg/fin', 'P', '-SPEC:N', '-SPEC:C/fin', 'LF:near', 'LANG:FI', '-COMP:uWH', '-VAL', 'adjoinable', '-SPEC:C', 'PF:lahella', '-SPEC:v', 'SPEC:*', '-SPEC:P'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'PHI:PER:_', 'COMP:PP', '-COMP:D', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'LF:leave', 'PHI:NUM:_', 'CLASS:INTR', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'PF:lahtea', 'ASP', '-VAL', 'PHI:DET:_'}
lavano          ['LANG:IT']
lava-           {'PHI:PER:_', '!COMP:*', '-COMP:v', 'LF:wash', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:lava', 'COMP:D', 'SPEC:P', '-COMP:V', 'LANG:IT', 'SPEC:ADV', 'ASP', '-VAL', 'PHI:DET:_'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'!PROBE:N', 'COMP:N', '-COMP:D', '!COMP:*', '-SPEC:INF', '-SPEC:V', '-COMP:T/fin', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:N', 'D', 'LANG:IT', 'OP', 'PF:le', 'adjoinable', '-SPEC:C', 'LF:D', '-COMP:uR', '-SPEC:D', '-SPEC:P', '-SPEC:MA/lla'}
leaves          ['LANG:EN']
leave           {'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '!SPEC:D', 'PF:leave', '-SPEC:T/fin', 'LF:leave', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'ASP', '-VAL', 'LANG:EN', 'PHI:DET:_'}
leave-          {'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '!SPEC:D', 'PF:leave', '-SPEC:T/fin', 'LF:leave', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'ASP', '-VAL', 'LANG:EN', 'PHI:DET:_'}
like-           {'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '!COMP:D', 'PF:like', 'COMP:P', 'V', '-COMP:N', 'ARG', '-SPEC:FORCE', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'ASP', '-VAL', 'LANG:EN', 'LF:like', 'PHI:DET:_'}
likes           ['LANG:EN']
like            {'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '!COMP:D', 'PF:like', 'COMP:P', 'V', '-COMP:N', 'ARG', '-SPEC:FORCE', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'ASP', '-VAL', 'LANG:EN', 'LF:like', 'PHI:DET:_'}
little          ['LANG:EN']
little-         {'LF:little', 'LANG:EN', '0', 'PF:little-', '2SPEC', 'SPEC:D'}
lle             {'PHI:PER:_', 'LF:for', 'PF:P(lle)', '!COMP:*', 'PHI:DET:_', '+SEM:directional', '-SPEC:V', '-SPEC:iR', '-SPEC:INF', '-COMP:N', '-COMP:T/fin', '-SPEC:FORCE', 'ARG', '-SPEC:iWH', '-SPEC:T/fin', '-SPEC:ADV', 'PHI:NUM:_', 'COMP:D', '-SPEC:Neg/fin', 'P', '-SPEC:N', '-SPEC:C/fin', 'LANG:FI', '-COMP:uWH', '-VAL', 'TAIL:V,+SEM:directional', 'adjoinable', '-SPEC:C', '-SPEC:*', '-SPEC:v', '-COMP:ADV', '-SPEC:P'}
lla             {'PHI:PER:_', 'LF:by', '!COMP:*', 'PHI:DET:_', '-SPEC:V', '-SPEC:iR', '-SPEC:INF', '-COMP:N', '-COMP:T/fin', '-SPEC:FORCE', 'ARG', 'TAIL:T', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:iWH', '-SPEC:ADV', 'PHI:NUM:_', 'COMP:D', '-SPEC:Neg/fin', 'P', '-SPEC:N', '-SPEC:C/fin', 'PF:P(lla)', 'LANG:FI', '-COMP:uWH', '-VAL', 'adjoinable', '-SPEC:C', 'TAIL:*V', '-SPEC:v', 'SPEC:*', '-SPEC:P'}
Luisa           ['LANG:IT']
Luisa-          {'-COMP:WH', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', 'LF:Luisa', 'PF:Luisa', '-COMP:V', 'LANG:IT', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P', '-SEM:directional'}
lukemalla       ['LANG:FI']
luke-           {'PHI:PER:_', '-COMP:P', 'CLASS:TR', '!COMP:*', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:D', 'SPEC:P', 'PF:luke', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'LF:read', 'ASP', '-VAL', 'PHI:DET:_'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'PHI:PER:_', 'ASP:BOUNDED', '-COMP:P', 'CLASS:TR', 'LF:find', '!COMP:*', '-COMP:v', 'SPEC:TO/inf', '!COMP:D', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:D', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'ASP', '-VAL', 'PF:loyta-', 'PHI:DET:_'}
Mary            ['LANG:EN']
Mary-           {'PF:Mary', '-COMP:WH', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-adjoinable', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LF:Mary', '-SPEC:R', 'LANG:EN', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P', '-SEM:directional'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-COMP:WH', '-COMP:D', '-COMP:A', '-COMP:v', 'PF:Merja', '-SPEC:V', '-SPEC:INF', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', 'COMP:P', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-adjoinable', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', '-SPEC:R', '-COMP:ADV', 'N', 'LF:Merja', 'COMP:uR', '-SPEC:P', '-SEM:directional'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'ADV', '-SPEC:Neg/fin', 'LF:by', '-SPEC:N', 'COMP:v', 'MA/inf', 'LANG:FI', 'adjoinable', 'SPEC:*', '-SPEC:FORCE', 'TAIL:T', '-SPEC:T/fin', 'PF:malla'}
meren           ['LANG:FI']
mere-           {'-COMP:WH', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'LF:ocean', 'PF:meri', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
mistake         {'-COMP:WH', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', 'LF:mistake', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:T/fin', 'PF:mistake', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:R', 'LANG:EN', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-COMP:WH', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', 'PF:mika-', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', '-SPEC:R', '-COMP:ADV', 'LF:what', 'N', 'COMP:uR', '-SPEC:P'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'PHI:PER:_', '-COMP:P', 'CLASS:TR', '!COMP:*', '+SEM:directional', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'PF:move', 'COMP:P', 'V', '-COMP:N', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'LANGN:EN', 'COMP:D', 'SPEC:P', '-COMP:V', 'LF:move', 'SPEC:ADV', 'ASP', '-VAL', 'PHI:DET:_'}
mukavasti       ['LANG:EN']
mukava-         {'LF:comfortably', '-SPEC:A', 'LANG:FI', 'COMP:0', 'A', 'adjoinable', 'PF:mukavasti', 'TAIL:D', 'SPEC:*', '-SPEC:D'}
must            {'PHI:PER:_', 'VAL', 'PF:must', '!COMP:*', 'SPEC:D', 'SPEC:TO/inf', '-SPEC:V', 'PHI:GEN:_', 'COMP:V', '!PROBE:V', '-COMP:T/fin', '-SPEC:FORCE', 'ARG', '!SPEC:D', '-SPEC:T/fin', 'FIN', 'PHI:NUM:_', 'COMP:Neg', 'COMP:D', '-SPEC:N', '-SPEC:C/fin', 'COMP:v', '!SPEC:*', '-COMP:INF', 'T', 'LANG:EN', '-SPEC:v', 'SPEC:*', 'MODAL', 'T/fin', 'LF:must', 'PHI:DET:_', 'COMP:T/prt'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'PHI:PER:_', '-COMP:P', 'CLASS:TR', '!COMP:*', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:D', 'SPEC:P', '-COMP:V', 'LF:sell', 'LANG:FI', 'SPEC:ADV', 'ASP', '-VAL', 'PF:myy', 'PHI:DET:_'}
naki            ['LANG:FI']
nake-           {'PHI:PER:_', 'ASP:BOUNDED', '-COMP:P', 'CLASS:TR', '!COMP:*', 'PHI:DET:_', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:MA/inf', 'COMP:D', 'SPEC:P', '-COMP:ESSA/inf', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'ASP', 'LF:see', '-VAL', 'PF:nake'}
nayttaa         ['LANG:FI']
naytta-         {'PHI:PER:_', 'LF:seem', 'SEM:internal', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'PF:naytta', '!COMP:VA/inf', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'ASP', '-VAL', 'PHI:DET:_'}
ndo             {'LF:ing', 'VAL', 'COMP:v', 'INF', '-COMP:C/fin', '!COMP:*', '-COMP:FORCE', 'PF:PRG', '-SPEC:V', 'PRG', '-SPEC:T/fin', 'COMP:V', 'LANG:EN', '?ARG'}
ne              {'PHI:PER:3', '!PROBE:N', 'COMP:N', '-COMP:D', '!COMP:*', '-SPEC:INF', '-SPEC:V', '-COMP:T/fin', '-ARG', 'LF:those', 'PHI:NUM:PL', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:N', 'D', 'OP', 'LANG:FI', 'PF:ne', 'adjoinable', '-SPEC:C', '-COMP:uR', '-SPEC:D', '-SPEC:P', '-SPEC:MA/lla'}
niiden          ['LANG:EN']
nen             {'LF:ing', '-SPEC:A', 'LANG:FI', 'COMP:0', 'A', 'adjoinable', 'PF:a', 'TAIL:D', 'SPEC:*', '-SPEC:D'}
not             {'PHI:NUM:_', 'PHI:PER:_', '-COMP:D', 'POL:NEG', 'LF:not', 'PF:not', '!COMP:*', '-VAL', 'PHI:GEN:_', 'Neg', 'SPEC:*', 'ARG', 'LANG:EN', '-SPEC:T/fin', '-COMP:C', 'PHI:DET:_', '-COMP:FIN'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'PHI:PER:_', 'PF:nukku', '-COMP:D', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:T/fin', 'V', '-COMP:N', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', '-COMP:Neg/fin', 'PHI:NUM:_', 'CLASS:INTR', 'LF:sleep', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'ASP', '-VAL', '-COMP:T', 'PHI:DET:_'}
ollut           ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-COMP:WH', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', 'PF:omaisuuden', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', 'LF:possessions', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
on'             ['LANG:FI']
operatoria      ['LANG:IT']
operatoria-     {'LF:operation', 'LANG:IT', '0', 'PF:operatoria', '2SPEC', 'SPEC:D'}
ostaa           ['LANG:FI']
osta-           {'PHI:PER:_', 'ASP:BOUNDED', '-COMP:P', 'PF:osta', 'CLASS:TR', '!COMP:*', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:D', 'LF:buy', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'ASP', '-VAL', 'PHI:DET:_'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'SEM:nonreferential', '-COMP:WH', '-COMP:D', '-COMP:A', 'PF:paiva', '-COMP:v', '-SPEC:V', '-SPEC:INF', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', 'COMP:P', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', 'LF:day', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
Pariisia        ['LANG:FI']
Pariisi-        {'-COMP:WH', 'PF:Pariisi', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', 'LF:Paris', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-COMP:WH', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', 'PF:Pekka', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', '-SPEC:R', 'LF:Pekka', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P', '-SEM:directional'}
pelottaa        ['LANG:FI']
pelkaa-         {'PHI:PER:_', '-COMP:P', 'CLASS:TR', 'PF:pelkaa', '!COMP:*', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:D', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'LF:fear', 'ASP', '-VAL', 'PHI:DET:_'}
persuades       ['LANG:EN']
persuade-       {'PHI:PER:_', 'PF:persuade', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', 'COMP:TO/inf', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'SEM:external', 'ASP', '-VAL', 'LANG:EN', 'LF:persuade', 'PHI:DET:_'}
peruuntui       ['LANG:FI']
peruuntu-       {'PHI:PER:_', 'LF:cancelled', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'ASP', '-VAL', 'PHI:DET:_', 'PF:peruuntui'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'PHI:PER:_', 'ASP:BOUNDED', '-COMP:P', 'CLASS:TR', '!COMP:*', '-COMP:v', 'LF:wash', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:D', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'ASP', '-VAL', 'PF:pese', 'PHI:DET:_'}
pese-           {'PHI:PER:_', '-COMP:P', 'CLASS:TR', '!COMP:*', '-COMP:v', 'LF:wash', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:D', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'ASP', '-VAL', 'PF:pese', 'PHI:DET:_'}
petardi         {'-COMP:WH', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', 'LF:firecrackers', '-SPEC:INF', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', 'COMP:P', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', 'LANG:IT', '-SPEC:uWH', 'PF:petardi', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
pieni           ['LANG:FI']
pieni-          {'LF:small', '0', 'PF:pieni-', 'LANG:FI', '2SPEC', 'SPEC:D'}
poikien         ['LANG:FI']
poika-          {'PF:poika', '-COMP:WH', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', 'LF:boy', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
puhelinta       ['LANG:FI']
puhelin-        {'2SPEC', '0', 'LANG:FI', 'LF:phone', 'SPEC:D', 'PF:puhelin'}
punainen        ['LANG:FI']
puna-           {'LF:red', 'PF:puna-', '0', 'LANG:FI', '2SPEC', 'SPEC:D'}
presupposto     {'-COMP:WH', 'LF:presupposition', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', 'PF:presupposto', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', 'LANG:IT', '-SPEC:uWH', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
primary         {'-COMP:WH', '-COMP:D', '-COMP:A', 'PF:primary', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', 'LANG:IT', '-SPEC:uWH', 'LF:nurse', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
promises        ['LANG:EN']
promise-        {'PHI:PER:_', 'SEM:internal', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'LF:promise', 'PHI:NUM:_', 'PF:promise', 'COMP:D', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'ASP', '-VAL', 'LANG:EN', 'PHI:DET:_'}
pyytaa          ['LANG:FI']
pyyta-          {'PHI:PER:_', 'PF:pyyda', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'LF:ask', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'ASP', '-VAL', 'PHI:DET:_'}
raukesi         ['LANG:FI']
raukea-         {'PHI:PER:_', '-COMP:v', 'LF:terminate', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'PF:raukea', 'LANG:FI', 'SPEC:ADV', 'ASP', '-VAL', 'PHI:DET:_'}
red             ['LANG:EN']
red-            {'0', 'LF:red', 'LANG:EN', 'PF:red', '2SPEC', 'SPEC:D'}
saavuttaa       ['LANG:FI']
saavutta-       {'PHI:PER:_', 'ASP:BOUNDED', '-COMP:P', 'CLASS:TR', '!COMP:*', '-COMP:v', 'SPEC:TO/inf', '!COMP:D', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:D', 'SPEC:P', 'LF:reach', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'ASP', '-VAL', 'PF:saavutta-', 'PHI:DET:_'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'PHI:PER:_', 'SPEC:D', 'LF:say', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'COMP:VA/inf', 'LANG:FI', 'SPEC:ADV', 'ASP', '-VAL', 'PF:sano-', 'COMP:FORCE', 'PHI:DET:_'}
said            ['LANG:EN']
say'            {'PHI:PER:_', 'SPEC:D', 'LF:say', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:say', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'ASP', '-VAL', '!COMP:FORCE', 'LANG:EN', 'PHI:DET:_'}
say-            {'PHI:PER:_', 'SPEC:D', 'LF:say', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:say', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'ASP', '-VAL', '!COMP:FORCE', 'LANG:EN', 'PHI:DET:_'}
sala            ['LANG:IT']
sala-           {'-COMP:WH', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', 'PF:sala', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', 'LF:room', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', 'LANG:IT', '-SPEC:uWH', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
scoppiati       ['LANG:IT']
scoppia-        {'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:P', 'LF:explode', '-COMP:V', 'LANG:IT', 'SPEC:ADV', 'PF:scoppia', 'ASP', '-VAL', 'PHI:DET:_'}
sen             {'!PROBE:N', 'COMP:N', 'TAIL:PHI', '-COMP:D', '!COMP:*', 'LF:the/that', '-SPEC:INF', '-SPEC:V', '-COMP:T/fin', '-ARG', 'PF:sen', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:N', 'D', 'OP', 'LANG:FI', 'adjoinable', '-SPEC:C', 'TAIL:*POL:NEG', 'TAIL:ASP', '-COMP:uR', '-SPEC:D', '-SPEC:P', '-SPEC:MA/lla'}
se'             {'!PROBE:N', 'PF:se', 'COMP:N', '-COMP:D', '!COMP:*', 'LF:the/that', '-SPEC:INF', '-SPEC:V', '-COMP:T/fin', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:N', 'D', 'OP', 'LANG:FI', 'adjoinable', '-SPEC:C', '-COMP:uR', '-SPEC:D', '-SPEC:P', '-SPEC:MA/lla'}
sentenza        {'PF:sentenza', '-COMP:WH', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', 'LANG:IT', '-SPEC:uWH', '-SPEC:R', '-COMP:ADV', 'N', 'LF:sentence', 'COMP:uR', '-SPEC:P'}
Seine           ['LANG:EN']
Seine-          {'-COMP:WH', 'PF:Seine', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LF:Seine', '-SPEC:R', 'LANG:EN', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
sembrano        ['LANG:IT']
sembra-         {'LF:seem', '-COMP:D', '!COMP:ARE/inf', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-ARG', '-SPEC:FORCE', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'SPEC:ADV', '-VAL', 'PF:sembra', 'LANG:EN', '-ASP'}
sleeps          ['LANG:EN']
sleep           {'PHI:PER:_', '-COMP:D', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'CLASS:INTR', 'LF:sleep', 'SPEC:P', '-COMP:V', 'PF:sleep', 'SPEC:ADV', 'ASP', '-VAL', 'LANG:EN', 'PHI:DET:_'}
sleep-          {'PHI:PER:_', '-COMP:D', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'CLASS:INTR', 'LF:sleep', 'SPEC:P', '-COMP:V', 'PF:sleep', 'SPEC:ADV', 'ASP', '-VAL', 'LANG:EN', 'PHI:DET:_'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-COMP:WH', '-COMP:D', 'PF:sopimus', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', 'LF:agreement', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', '!COMP:A/inf', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
spinge          ['LANG:IT']
spinge-         {'PHI:PER:_', '-COMP:P', 'PF:spinge', '-COMP:v', 'SPEC:TO/inf', '!COMP:D', 'PHI:GEN:_', '-COMP:N', 'LF:push', 'V', 'ARG', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'LANG:IT', 'SPEC:ADV', 'ASP', '-VAL', 'PHI:DET:_'}
ssa             {'PHI:PER:_', '!COMP:*', 'TAIL:V', 'PHI:DET:_', '-SPEC:V', '-SPEC:iR', 'LF:in', '-SPEC:INF', '-COMP:N', '-COMP:T/fin', '-SPEC:FORCE', 'ARG', '-SPEC:iWH', '-SPEC:T/fin', '-SPEC:ADV', 'PHI:NUM:_', 'COMP:D', '-SPEC:Neg/fin', 'P', '-SPEC:N', '-SPEC:C/fin', 'LANG:FI', '-COMP:uWH', 'PF:ssa', '-VAL', 'adjoinable', '-SPEC:C', '-SPEC:v', '-COMP:ADV', 'SPEC:*', 'COMP:n/MA', '-SPEC:P'}
stanno          ['LANG:IT']
sta-            {'PHI:PER:_', 'SEM:internal', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', '-COMP:N', 'PF:sta', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:PRG', 'SPEC:P', '-COMP:V', 'SPEC:ADV', '-VAL', 'LF:stay', 'LANG:EN', '-ASP', 'PHI:DET:_'}
sti             {'ADV', '-SPEC:Neg/fin', 'LF:by', '-SPEC:N', 'LANG:FI', '!COMP:A', 'adjoinable', '-ARG', 'PF:sti', 'SPEC:*', '-SPEC:FORCE', '-SPEC:T/fin'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'PF:sukka-', '-COMP:WH', '-COMP:D', '-COMP:A', '-COMP:v', 'LF:socks', '-SPEC:V', '-SPEC:INF', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', 'COMP:P', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
talo            {'-COMP:WH', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', 'LF:house', '-COMP:V', 'COMP:R', '-COMP:C/fin', 'PF:talo', 'LANG:FI', '-SPEC:uWH', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
tama            ['LANG:EN']
tama-           {'-COMP:WH', '-COMP:D', '-COMP:A', 'PHI', '-COMP:v', '-SPEC:V', 'PF:tama', '-SPEC:INF', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', 'COMP:P', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', 'LF:this', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'PHI:PER:_', 'PF:taytyy', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'FIN', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'LANG:FI', '!COMP:A/inf', 'LF:must', 'SPEC:ADV', '-VAL', 'SPEC:*', 'MODAL', '-ASP', 'PHI:DET:_'}
teki            ['LANG:FI']
teke-           {'PHI:PER:_', 'ASP:BOUNDED', '-COMP:P', 'PF:teke', 'CLASS:TR', '!COMP:*', '-COMP:A/inf', '-COMP:v', 'SPEC:TO/inf', '!COMP:D', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:D', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'ASP', '-VAL', 'LF:make', 'PHI:DET:_'}
that            {'COMP:T/fin', 'FIN', 'FORCE', '!COMP:*', 'PF:that', '-VAL', '-SPEC:*', 'LANG:EN', '-ARG', 'LF:that', '!PROBE:T/fin', 'COMP:C/fin'}
the             {'PHI:DEF:DEF', '!PROBE:N', 'LF:the', 'COMP:N', '-COMP:D', '!COMP:*', 'PF:the', '-SPEC:INF', '-SPEC:V', '-COMP:T/fin', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:N', 'D', 'OP', 'adjoinable', '-SPEC:C', 'LANG:EN', '-COMP:uR', '-SPEC:D', '-SPEC:P', '-SPEC:MA/lla'}
to              {'PHI:PER:_', 'LF:to', '!COMP:*', 'PHI:DET:_', '+SEM:directional', '-SPEC:V', '-SPEC:iR', '-SPEC:INF', 'PHI:GEN:_', '-COMP:N', '-COMP:T/fin', '-SPEC:FORCE', 'ARG', '-SPEC:iWH', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:ADV', 'PF:to', 'PHI:NUM:_', 'COMP:D', '-SPEC:Neg/fin', 'P', '-SPEC:N', '-SPEC:C/fin', '-COMP:uWH', '-VAL', 'TAIL:V,+SEM:directional', 'adjoinable', '-SPEC:C', '-SPEC:*', 'LANG:EN', '-SPEC:v', '-SPEC:P'}
to_inf          {'INF', '!COMP:*', '-COMP:FORCE', 'LF:TO/inf', '-SPEC:V', 'COMP:V', '-SPEC:T/fin', '?ARG', 'COMP:v', '-COMP:C/fin', 'PF:TO/inf', '-VAL', 'adjoinable', '-SPEC:v', 'LANG:EN', 'TO/inf'}
towards         {'PHI:PER:_', '!COMP:*', 'TAIL:V', 'PHI:DET:_', '-SPEC:V', '-SPEC:iR', '-SPEC:INF', 'PHI:GEN:_', '-COMP:N', '-COMP:T/fin', '-SPEC:FORCE', 'ARG', '-SPEC:iWH', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:ADV', 'PHI:NUM:_', 'PF:towards', 'COMP:D', '-SPEC:Neg/fin', 'P', '-SPEC:N', '-SPEC:C/fin', '-COMP:uWH', '-VAL', 'adjoinable', '-SPEC:C', '-SPEC:*', 'LANG:EN', '-SPEC:v', 'LF:towards', '-SPEC:P'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'PHI:PER:_', '-COMP:P', 'CLASS:TR', '!COMP:*', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'LF:nudge', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:tonaise', 'COMP:D', 'SPEC:P', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'ASP', '-VAL', 'PHI:DET:_'}
tta             {'PHI:PER:_', 'ADV', '!COMP:*', 'PHI:DET:_', 'PF:tta', '-SPEC:V', '-SPEC:iR', '-SPEC:INF', '-COMP:N', '-COMP:T/fin', '-SPEC:FORCE', 'ARG', '-SPEC:iWH', '-SPEC:T/fin', '-SPEC:ADV', 'PHI:NUM:_', 'COMP:D', '-SPEC:Neg/fin', 'P', '-SPEC:N', '-SPEC:C/fin', 'LANG:FI', '-COMP:uWH', '-VAL', 'adjoinable', '-SPEC:C', 'COMP:n/MA', '-SPEC:v', '-COMP:ADV', 'SPEC:*', 'LF:without', '-SPEC:P'}
tries           ['LANG:EN']
try-            {'PHI:PER:_', 'LF:try', 'SEM:internal', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', '!COMP:TO/inf', 'V', '-COMP:N', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', '!COMP:-ARG', 'SPEC:ADV', 'PF:try', 'ASP', '-VAL', 'LANG:EN', 'PHI:DET:_'}
verifiche       {'-COMP:WH', '-COMP:D', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', 'LF:verification', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', 'LANG:IT', '-SPEC:uWH', '-SPEC:R', '-COMP:ADV', 'PF:verifiche', 'N', 'COMP:uR', '-SPEC:P'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'PHI:PER:_', 'LF:flow', '-COMP:D', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:P', '!COMP:P', '-COMP:V', 'LANG:FI', 'SPEC:ADV', 'ASP', '-VAL', 'PF:virtaa', 'PHI:DET:_'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'PHI:PER:_', 'SEM:internal', '!COMP:*', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PF:volu', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'ASP', '-VAL', 'LF:want', '-SPEC:*', 'LANG:EN', 'PHI:DET:_'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'PHI:PER:_', 'ASP:BOUNDED', '-COMP:P', 'PF:voitta', 'CLASS:TR', '!COMP:*', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:D', 'SPEC:P', 'LF:win', '-COMP:V', 'SEM:achievement', 'SPEC:ADV', 'ASP', '-VAL', 'LANG:EN', 'PHI:DET:_'}
wants           ['LANG:EN']
want-           {'PHI:PER:_', '-COMP:P', 'CLASS:TR', '!COMP:*', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', 'COMP:TO/inf', 'PF:want', '-SPEC:T/fin', 'PHI:NUM:_', 'COMP:D', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'ASP', '-VAL', 'LF:want', 'LANG:EN', 'PHI:DET:_'}
what            ['LANG:EN']
what-           {'-COMP:WH', '-COMP:D', 'PHI_N', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'PF:what', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:R', 'LANG:EN', '-COMP:ADV', 'LF:what', 'N', 'COMP:uR', '-SPEC:P'}
which           {'!PROBE:N', 'COMP:N', '-SPEC:MA/lla', '-COMP:D', '!COMP:*', '-SPEC:INF', '-SPEC:V', '-COMP:T/fin', '-ARG', 'OP:WH', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:N', 'D', 'PF:which', 'OP', 'adjoinable', '-SPEC:C', 'LANG:EN', '-COMP:uR', '-SPEC:D', '-SPEC:P', 'LF:which'}
who             ['LANG:EN']
who-            {'-COMP:WH', '-COMP:D', 'PHI_N', '-COMP:A', 'LF:who', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', 'PF:who', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:R', 'LANG:EN', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
whether         {'COMP:T/fin', 'LF:whether', 'FORCE', '!COMP:*', '-ARG', 'OP:WH', 'FIN', '!PROBE:T/fin', 'Q', 'OP', '-VAL', '-SPEC:*', 'LANG:EN', 'PF:whether', 'COMP:C/fin', 'OP:Q'}
yrittaa         ['LANG:FI']
yritta-         {'PHI:PER:_', 'LF:try', 'SEM:internal', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'PF:yritta', 'COMP:P', 'V', '-COMP:N', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:P', '-COMP:V', '!COMP:-ARG', 'SPEC:ADV', '!COMP:A/inf', 'ASP', '-VAL', 'LANG:EN', 'PHI:DET:_'}
mina            ['LANG:EN']
mina-           {'-COMP:WH', '-COMP:D', 'PHI_N', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'LF:I', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', 'PF:mina', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
sina            ['LANG:EN']
sina-           {'-COMP:WH', '-COMP:D', 'PHI_N', '-COMP:A', 'PF:sina', '-COMP:v', '-SPEC:V', '-SPEC:INF', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', 'COMP:P', '-COMP:T/fin', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', 'LF:you', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
han             ['LANG:EN']
han-            {'-COMP:WH', 'PF:han', '-COMP:D', 'PHI_N', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', 'LF:s/he', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'PF:me', '-COMP:WH', '-COMP:D', 'PHI_N', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', '-SPEC:R', '-COMP:ADV', 'LF:we', 'N', 'COMP:uR', '-SPEC:P'}
te              ['LANG:EN']
te-             {'-COMP:WH', '-COMP:D', 'PHI_N', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', 'PF:te', '-COMP:T/fin', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', 'LF:you', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he-             {'-COMP:WH', '-COMP:D', 'PHI_N', 'LF:they', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', '-SPEC:R', '-COMP:ADV', 'N', 'PF:he', '-SPEC:P', 'COMP:uR'}
he-             {'-COMP:WH', '-COMP:D', 'PHI_N', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'LF:he', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:R', 'LANG:EN', '-COMP:ADV', 'N', 'PF:he', '-SPEC:P', 'COMP:uR'}
se              ['LANG:FI']
se-             {'!PROBE:N', 'PF:se', 'LF:it/that', 'COMP:N', '-COMP:D', '!COMP:*', '-SPEC:INF', '-SPEC:V', '-COMP:T/fin', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:N', 'D', 'OP', 'LANG:FI', 'adjoinable', '-SPEC:C', '-COMP:uR', '-SPEC:D', '-SPEC:P', '-SPEC:MA/lla'}
I               ['LANG:EN']
I-              {'-COMP:WH', '-COMP:D', 'PHI_N', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'LF:I', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'PF:I', '-SPEC:R', 'LANG:EN', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
you             ['LANG:EN']
you-            {'-COMP:WH', '-COMP:D', 'PHI_N', '-COMP:A', 'PF:you', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'LF:you', '-SPEC:R', 'LANG:EN', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
he              ['LANG:EN']
she             ['LANG:EN']
she-            {'-COMP:WH', '-COMP:D', 'PHI_N', 'PF:she', 'LF:she', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:R', 'LANG:EN', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
we              ['LANG:EN']
we-             {'-COMP:WH', '-COMP:D', 'PHI_N', '-COMP:A', 'PF:we', '-COMP:v', '-SPEC:V', '-SPEC:INF', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', 'COMP:P', '-COMP:T/fin', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:R', 'LANG:EN', '-COMP:ADV', 'LF:we', 'N', 'COMP:uR', '-SPEC:P'}
you_pl          ['LANG:EN']
you_pl-         {'PF:you_pl', '-COMP:WH', '-COMP:D', '-COMP:A', 'PHI', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'LF:you_pl', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:R', 'LANG:EN', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
they            ['LANG:EN']
they-           {'-COMP:WH', 'PF:they', '-COMP:D', 'PHI_N', 'LF:they', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:R', 'LANG:EN', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
it              ['LANG:EN']
it-             {'!PROBE:N', 'LF:it/that', 'COMP:N', '-COMP:D', '!COMP:*', '-SPEC:INF', '-SPEC:V', '-COMP:T/fin', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', 'PF:it', '-SPEC:N', 'D', 'OP', 'adjoinable', '-SPEC:C', 'LANG:EN', '-COMP:uR', '-SPEC:D', '-SPEC:P', '-SPEC:MA/lla'}
io              ['LANG:EN']
io-             {'-COMP:WH', '-COMP:D', 'PHI_N', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'LF:I', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', 'LANG:IT', '-SPEC:uWH', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P', 'PF:io'}
tu              ['LANG:EN']
tu-             {'-COMP:WH', '-COMP:D', 'PHI_N', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', 'LANG:IT', 'PF:tu', '-SPEC:uWH', 'LF:you', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
lui             ['LANG:EN']
lui-            {'-COMP:WH', '-COMP:D', 'PHI_N', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'LF:he', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', 'PF:lui', '-COMP:V', 'COMP:R', 'LANG:IT', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
lei             ['LANG:EN']
lei-            {'-COMP:WH', '-COMP:D', 'PHI_N', '-COMP:A', 'LF:she', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', 'PF:lei', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', 'LANG:IT', '-SPEC:uWH', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
noi             ['LANG:EN']
noi-            {'-COMP:WH', '-COMP:D', 'PHI_N', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', 'LANG:IT', '-SPEC:uWH', '-SPEC:R', 'PF:noi', '-COMP:ADV', 'LF:we', 'N', 'COMP:uR', '-SPEC:P'}
voi             ['LANG:EN']
voi-            {'-COMP:WH', '-COMP:D', 'PHI_N', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'LF:you_pl', 'COMP:R', 'LANG:IT', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:R', '-COMP:ADV', 'N', 'PF:voi', '-SPEC:P', 'COMP:uR'}
loro            ['LANG:EN']
loro-           {'-COMP:WH', '-COMP:D', 'PHI_N', 'LF:they', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'PF:loro', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', 'COMP:P', '-COMP:T/fin', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', 'LANG:IT', '-SPEC:uWH', '-SPEC:R', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
mi              ['LANG:EN']
mi-             {'-COMP:D', 'LF:me', '-COMP:A', '-COMP:v', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', 'LANG:IT', 'PF:mi(cl)', '-COMP:ADV', 'COMP:uR', '-SPEC:P', 'CL', '-COMP:WH', 'PHI_N', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:T/fin', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:R', 'N'}
la              ['LANG:EN']
la-             {'-COMP:D', '-COMP:A', '-COMP:v', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', 'LANG:IT', '-COMP:ADV', 'COMP:uR', '-SPEC:P', 'CL', '-COMP:WH', 'PHI_N', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:T/fin', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', 'PF:la(cl)', '-SPEC:R', 'LF:her', 'N'}
lo              ['LANG:EN']
lo-             {'PF:lo(cl)', '-COMP:D', '-COMP:A', '-COMP:v', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', '-COMP:V', 'LANG:IT', 'LF:him', '-COMP:ADV', 'COMP:uR', '-SPEC:P', 'CL', '-COMP:WH', 'PHI_N', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:T/fin', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:R', 'N'}
si              ['LANG:EN']
si-             {'PF:si(cl)', '-COMP:D', '-COMP:A', '-COMP:v', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', 'LF:3sg', '-COMP:V', 'LANG:IT', '-COMP:ADV', 'COMP:uR', '-SPEC:P', '-COMP:WH', 'PHI_N', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:T/fin', 'CAL:CL', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:R', 'N'}
gli             ['LANG:EN']
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-COMP:WH', '-COMP:D', 'PHI_N', '-COMP:A', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:ADV', '-COMP:*', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', 'LF:there', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', 'LANG:IT', '-SPEC:uWH', '-SPEC:R', 'PF:ci', 'N', 'COMP:uR', '-SPEC:P'}
[-n]            {'PHI:PER:1', 'PHI:NUM:SG', 'PHI:DET:DEF', 'inflectional', 'LANG:FI', 'PHI:HUM:HUM', 'PHI'}
[-t]            {'PHI:NUM:SG', 'PHI:PER:2', 'PHI:DET:DEF', 'inflectional', 'LANG:FI', 'PHI:HUM:HUM', 'PHI'}
[-V]            {'PHI:NUM:SG', 'PHI:PER:3', 'inflectional', 'LANG:FI', 'PHI'}
[-mme]          {'PHI:PER:1', 'PHI:DET:DEF', 'PHI:NUM:PL', 'inflectional', 'LANG:FI', 'PHI:HUM:HUM', 'PHI'}
[-mme]          {'PHI:PER:1', 'PHI:DET:DEF', 'PHI:NUM:PL', 'inflectional', 'LANG:FI', 'PHI:HUM:HUM'}
[-tte]          {'PHI:DET:DEF', 'PHI:PER:2', 'PHI:NUM:PL', 'inflectional', 'LANG:FI', 'PHI:HUM:HUM', 'PHI'}
[-vat]          {'PHI:PER:3', 'PHI:NUM:PL', 'inflectional', 'LANG:FI', 'PHI'}
[-ni]           {'PHI:PER:1', 'PHI:NUM:SG', 'PHI:DET:DEF', 'inflectional', 'LANG:FI', 'PHI:HUM:HUM', 'PHI'}
[-si]           {'PHI:NUM:SG', 'PHI:PER:2', 'PHI:DET:DEF', 'inflectional', 'LANG:FI', 'PHI:HUM:HUM', 'PHI'}
[-nsa]          {'inflectional', 'PHI:PER:3', 'LANG:FI', 'PHI'}
[-an]           {'inflectional', 'PHI:PER:3', 'LANG:FI', 'PHI'}
[-nne]          {'PHI:DET:DEF', 'PHI:PER:2', 'PHI:NUM:PL', 'inflectional', 'LANG:FI', 'PHI:HUM:HUM'}
[-s]            {'PHI:NUM:SG', 'PHI:PER:3', 'LANG:EN', 'inflectional', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI'}
[-0]            {'PHI:PER:3', 'inflectional', 'PHI:PER:2', 'PHI', 'PHI:GEN:N', 'PHI:PER:1', 'PHI:NUM:SG', 'PHI:DET:DEF', 'LANG:EN', 'PHI:NUM:PL'}
[-o]            {'PHI:PER:1', 'PHI:NUM:SG', 'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI:HUM:HUM', 'PHI'}
[-i]            {'PHI:NUM:SG', 'PHI:PER:2', 'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI:HUM:HUM', 'PHI'}
[-a]            {'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:3', 'inflectional', 'LANG:IT', 'PHI'}
[-e]            {'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:3', 'inflectional', 'LANG:IT', 'PHI'}
[-iamo]         {'PHI:PER:1', 'PHI:DET:DEF', 'inflectional', 'LANG:IT', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI'}
[-te]           {'PHI:DET:DEF', 'PHI:PER:2', 'inflectional', 'LANG:IT', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI'}
[-no]           {'PHI:DET:DEF', 'PHI:PER:3', 'inflectional', 'LANG:IT', 'PHI:NUM:PL', 'PHI'}
[-nom]          {'TAIL:FIN,ARG,VAL', 'adjoinable', 'NOM', 'LANG:EN', 'inflectional'}
[-par]          {'adjoinable', 'inflectional', 'LANG:FI', 'TAIL:ARG,-VAL', 'PAR'}
[-gen]          {'GEN', 'TAIL:INF,ARG', '-adjoinable', 'LANG:EN', 'inflectional'}
gen             {'GEN', 'TAIL:INF,ARG', '-adjoinable', 'LANG:EN', 'inflectional'}
[-n_acc]        {'adjoinable', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'inflectional', 'TAIL:PHI', 'LANG:FI', 'n-ACC'}
[-t_acc]        {'adjoinable', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'inflectional', 't-ACC', 'LANG:FI'}
[-0_acc]        {'adjoinable', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'inflectional', '0_ACC', 'LANG:FI', 'TAIL:*PHI'}
asp             {'inflectional', 'ASP:BOUNDED', 'LANG:EN'}
a'              {'LF:A', 'a', 'LANG:X', 'PF:a'}
b'              {'PF:b', 'LANG:X', 'b', 'LF:B'}
b''             {'LANG:EN', '-COMP:c', 'PF:b', 'b', 'LF:B'}
c''             {'LANG:EN', 'LF:C', 'SPEC:a', 'c', 'PF:c'}
c'              {'LANG:X', 'c', 'PF:c', 'LF:C'}
d'              {'LF:D', 'd', 'LANG:', 'PF:d'}
a''             ['LANG:EN']
x'              {'x', 'LANG:X', 'LF:X', 'PF:x'}
y'              {'PF:y', 'y', 'LANG:X', 'LF:Y'}
z'              {'z', 'LF:Z', 'PF:x', 'LANG:X'}
John'           {'LANG:X', 'PF:John', "N'", 'LF:John'}
admires'        {"V'", 'LANG:X', 'PF:admires', 'LF:admires'}
admires''       {'PHI:PER:_', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:P', '-COMP:N', 'V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:P', 'LF:admires', '-COMP:V', 'SPEC:ADV', 'ASP', '-VAL', 'PF:admires', 'LANG:EN', 'PHI:DET:_'}
Mary'           {'PF:Mary', 'LANG:X', "N'", 'LF:mary'}
T/fin           {'PHI:PER:_', 'VAL', '!COMP:*', 'SPEC:D', 'SPEC:TO/inf', '-SPEC:V', 'PHI:GEN:_', 'COMP:V', '!PROBE:V', '-COMP:T/fin', '-SPEC:FORCE', 'ARG', '!SPEC:D', '-SPEC:T/fin', 'FIN', 'PHI:NUM:_', 'COMP:D', 'LF:T', '-SPEC:N', '-SPEC:C/fin', 'COMP:v', '!SPEC:*', '-COMP:INF', 'T', 'COMP:T/prt', 'LANG:EN', '-SPEC:v', 'SPEC:*', 'T/fin', 'PHI:DET:_', 'PF:T'}
v               {'PHI:PER:_', '-SPEC:N', 'LF:v', 'PF:v', '!COMP:*', 'SPEC:D', 'ASP', '-VAL', 'PHI:GEN:_', 'COMP:V', '!PROBE:V', 'LANG:EN', 'ARG', 'v', 'PHI:NUM:_', 'PHI:DET:_'}
C/fin           {'VAL', 'COMP:T/fin', 'PF:C', '!COMP:*', 'C/fin', 'COMP:Neg/fin', '!PROBE:FIN', '-ARG', 'LF:C/fin', '-SPEC:T/fin', 'FIN', '-SPEC:N', '-COMP:T/prt', 'C', '-SPEC:C/fin', '-COMP:C/fin', 'LANG:EN', 'SPEC:*'}
T               {'PHI:PER:_', 'VAL', '!COMP:*', 'SPEC:D', '-SPEC:V', '-COMP:NEG', 'PHI:GEN:_', 'COMP:V', '!PROBE:V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'FIN', 'PHI:NUM:_', 'COMP:D', 'LF:T', '-SPEC:N', 'COMP:v', '!SPEC:*', 'T', 'COMP:T/prt', 'LANG:EN', 'SPEC:*', 'PHI:DET:_', 'PF:T'}
T/prt           {'PHI:PER:_', 'VAL', '!COMP:*', 'SPEC:D', '-SPEC:V', '-COMP:NEG', 'PHI:GEN:_', 'COMP:V', '!PROBE:V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'FIN', 'PHI:NUM:_', 'COMP:D', '-SPEC:N', 'LF:T/prt', 'COMP:v', '!SPEC:*', 'T/prt', 'T', 'LANG:EN', 'PF:T/prt', 'SPEC:*', 'PHI:DET:_', 'COMP:T/prt'}
a0              {'LF:A', '-adjoinable', '-SPEC:A', 'COMP:0', 'A', 'adjoinable', 'TAIL:D', 'LANG:EN', '-SPEC:D', 'PF:A'}
n               {'VAL', '-COMP:D', '-COMP:A', '-COMP:v', 'PHI:GEN:_', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', 'ARG', 'LF:n', '-SPEC:T/fin', '-COMP:AUX', 'PHI:NUM:_', '!SPEC:*', '-COMP:V', 'SPEC:*', '-COMP:ADV', 'COMP:uR', '-SPEC:P', 'PHI:PER:_', 'INF', '-COMP:WH', '!COMP:*', 'COMP:0', '-SPEC:V', '-SPEC:INF', 'PF:n', 'COMP:P', '-COMP:T/fin', 'COMP:V', '!SPEC:D', 'SPEC:A', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', 'COMP:v', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:R', 'LANG:EN', 'N', 'n', 'PHI:DET:_'}
impass          {'PHI:PER:_', '-SPEC:N', 'ARG', '!COMP:*', 'SPEC:D', 'ASP', '-VAL', 'PHI:GEN:_', 'COMP:V', '!PROBE:V', 'LANG:EN', 'PF:impass', 'v', 'PHI:NUM:_', 'PHI:DET:_', 'LF:impass'}
cau             {'PHI:PER:_', '-SPEC:N', '!COMP:*', 'PF:Cau', 'SPEC:D', 'ASP', '-VAL', 'PHI:GEN:_', 'COMP:V', '!PROBE:V', 'LF:v/Cause', 'LANG:EN', 'ARG', 'v', 'PHI:NUM:_', 'PHI:DET:_'}
INF             {'COMP:v', 'INF', '-COMP:C/fin', '!COMP:*', '-COMP:FORCE', '-SPEC:V', 'COMP:V', 'LF:INF', 'LANG:EN', '-SPEC:T/fin', 'PF:INF'}
prtcpl          {'PHI:PER:_', 'VAL', 'INF', '!COMP:*', '-COMP:FORCE', 'SPEC:D', '-SPEC:V', '-COMP:NEG', 'PHI:GEN:_', 'COMP:V', '!PROBE:V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'FIN', 'PHI:NUM:_', 'COMP:D', '-SPEC:N', 'LF:T/prt', 'COMP:v', '!SPEC:*', 'T/prt', '-COMP:C/fin', 'T', 'LANG:EN', 'PF:T/prt', 'SPEC:*', 'PHI:DET:_', 'COMP:T/prt'}
TO/inf          {'INF', '!COMP:*', '-COMP:FORCE', 'LF:TO/inf', '-SPEC:V', 'COMP:V', '-SPEC:T/fin', '?ARG', 'COMP:v', '-COMP:C/fin', 'PF:TO/inf', '-VAL', 'adjoinable', '-SPEC:v', 'LANG:EN', 'TO/inf'}
A/inf           {'A/inf', 'INF', '!COMP:*', '-COMP:FORCE', '-SPEC:V', 'COMP:V', '-SPEC:T/fin', '?ARG', 'LF:A/inf', '-SPEC:Neg/fin', '?VAL', 'COMP:v', '-COMP:C/fin', 'PF:A/inf', 'SPEC:*', 'LANG:EN'}
ARE/inf         {'VAL', 'INF', 'ARE/inf', '!COMP:*', '-COMP:FORCE', '-SPEC:V', 'COMP:V', 'LF:ARE/inf', '-SPEC:T/fin', '?ARG', 'COMP:v', '-adjoinable', 'PF:are', '-COMP:C/fin', 'SPEC:*', 'LANG:EN'}
ESSA/inf        {'ADV', 'INF', '!COMP:*', '-COMP:FORCE', '-SPEC:V', 'COMP:V', '-SPEC:FORCE', 'TAIL:T', '?ARG', '-SPEC:T/fin', '?VAL', '-SPEC:Neg/fin', '-SPEC:N', 'COMP:v', 'PF:essa', '-COMP:C/fin', 'adjoinable', 'SPEC:*', 'LF:while', 'ESSA/inf', 'LANG:EN'}
TUA/inf         {'PHI:PER:_', 'ADV', 'CAL', 'INF', '!COMP:*', '-COMP:FORCE', '-SPEC:V', 'PHI:GEN:_', 'COMP:V', 'PF:tua', '-SPEC:FORCE', 'ARG', 'TAIL:T', 'TUA/inf', '-SPEC:T/fin', 'PHI:NUM:_', 'LF:after', '-SPEC:Neg/fin', '-SPEC:N', '!SPEC:*', 'COMP:v', '-COMP:C/fin', 'adjoinable', 'LANG:EN', 'PHI:DET:_'}
VA/inf          {'PHI:PER:_', 'VAL', 'INF', 'VA/inf', '!COMP:*', '-COMP:FORCE', '-SPEC:V', 'PHI:GEN:_', 'COMP:V', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:vAn', 'LF:VA', '-SPEC:N', 'COMP:v', '!SPEC:*', '-COMP:C/fin', 'SPEC:*', 'LANG:EN', 'PHI:DET:_'}
MA/ssa          {'PF:massa', 'ADV', 'PHI:PER:_', 'LF:in_doing', 'MA/inf', 'TAIL:V', 'PHI:GEN:_', 'COMP:V', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', '-SPEC:Neg/fin', '-SPEC:N', 'COMP:v', '-VAL', 'adjoinable', '-SPEC:*', 'LANG:EN', 'PHI:DET:_'}
MA/tta          {'PHI:PER:_', 'ADV', '-SPEC:Neg/fin', 'LF:without_doing', '-SPEC:N', 'MA/inf', 'PF:matta', '-VAL', 'adjoinable', 'PHI:GEN:_', 'LANG:EN', 'ARG', 'TAIL:T', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:DET:_'}
MA/lla          {'ADV', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'TAIL:T', '-SPEC:T/fin', 'PHI:NUM:_', '-SPEC:Neg/fin', '-VAL', 'adjoinable', 'PHI:PER:_', 'LF:by_doing', 'MA/inf', 'COMP:V', '-SPEC:N', 'COMP:v', 'LANG:EN', 'PF:malla', 'PHI:DET:_'}
E/inf           {'ADV', '-SPEC:Neg/fin', 'LF:by', '-SPEC:N', 'LANG:FI', 'PF:en', 'adjoinable', '-ARG', 'SPEC:*', '-SPEC:FORCE', '-SPEC:T/fin'}
BE-             {'!COMP:*', 'LF:BE', 'SPEC:D', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', '-COMP:T/fin', 'V', '-ARG', 'COPULA', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'PF:BE', 'ASP', '-VAL', 'LANG:EN'}
D               {'!PROBE:N', 'COMP:N', '-COMP:D', '!COMP:*', '-SPEC:INF', '-SPEC:V', '-COMP:T/fin', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:N', 'D', 'OP', 'PF:D', 'adjoinable', '-SPEC:C', 'LANG:EN', 'LF:D', '-COMP:uR', '-SPEC:D', '-SPEC:P', '-SPEC:MA/lla'}
P               {'PHI:PER:_', '!COMP:*', 'PHI:DET:_', '-SPEC:V', '-SPEC:iR', '-SPEC:INF', 'PHI:GEN:_', '-COMP:N', '-COMP:T/fin', '-SPEC:FORCE', 'ARG', '-SPEC:iWH', '-COMP:ADV', 'PF:P', '-SPEC:T/fin', '-SPEC:ADV', 'PHI:NUM:_', 'COMP:D', '-SPEC:Neg/fin', 'P', '-SPEC:N', '-SPEC:C/fin', '-COMP:uWH', '-VAL', 'LF:P', 'adjoinable', '-SPEC:C', '-SPEC:*', 'LANG:EN', '-SPEC:v', '-SPEC:P'}
pro             ['LANG:EN']
pro-            {'PF:(pro)', '-COMP:WH', '-COMP:D', '-COMP:A', 'PHI', '-COMP:v', '-SPEC:V', '-SPEC:INF', 'COMP:P', '-COMP:N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:AUX', 'SPEC:A', '-SPEC:ADV', 'LF:pro', '-SPEC:N', '-SPEC:C/fin', '-COMP:V', 'COMP:R', '-COMP:C/fin', '-SPEC:uWH', '-SPEC:R', 'LANG:EN', '-COMP:ADV', 'N', 'COMP:uR', '-SPEC:P'}
cl              {'CL', 'RIGHT:ARE/inf', 'RIGHT:PRG', 'LANG:EN', 'LEFT:T/fin', 'inflectional', 'LEFT:D,CL'}
inc             {'inflectional', 'INCORPORATED', 'LANG:EN'}
sg              {'inflectional', 'PHI:NUM:SG', 'LANG:EN'}
pl              {'inflectional', 'PHI:NUM:PL', 'LANG:EN'}
1p              {'inflectional', 'PHI:PER:1', 'LANG:EN'}
2p              {'inflectional', 'PHI:PER:2', 'LANG:EN'}
3p              {'inflectional', 'PHI:PER:3', 'LANG:EN'}
def             {'inflectional', 'PHI:DET:DEF', 'LANG:EN'}
indef           {'inflectional', 'PHI:DET:INDEF', 'LANG:EN'}
hum             {'inflectional', 'PHI:HUM:HUM', 'LANG:EN'}
nonhum          {'inflectional', 'LANG:EN', 'PHI:HUM:NONHUM'}
m               {'inflectional', 'PHI:GEN:M', 'LANG:EN'}
f               {'inflectional', 'PHI:GEN:F', 'LANG:EN'}
nom             {'inflectional', 'TAIL:FIN,!COMP:*,VAL', 'LANG:EN'}
acc             {'inflectional', 'TAIL:v', 'LANG:EN'}
dat             {'inflectional', 'TAIL:!COMP:*,v', 'LANG:EN'}
uC/op           {'inflectional', 'uC/op', 'LANG:EN'}
wh              {'inflectional', 'OP:WH', 'OP:_', 'LANG:EN'}
wh_             {'OP:_', 'LANG:EN', 'inflectional', 'OP', 'FORCE:OP:WH'}
top             {'inflectional', 'OP:TOP', 'LANG:EN'}
foc             {'inflectional', 'OP:FOC', 'LANG:EN'}
C/op            {'inflectional', 'LANG:EN', 'OP:C/OP'}
rel             {'adjoinable', '-COMP:C/fin', 'OP:REL', 'LANG:EN', 'inflectional'}
Q               {'OP:WH', 'LANG:EN', 'inflectional', 'OP', 'OP:Q'}
