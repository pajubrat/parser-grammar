ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'PF:a', '-SPEC:FORCE', '-SPEC:V', '-SPEC:ADV', '-SPEC:iWH', 'LF:to', '-COMP:ADV', 'COMP:D', '-COMP:T/fin', '-SPEC:P', '-SPEC:N', 'LANG:IT', '-SPEC:iR', '-SPEC:*', '-SPEC:C', '-SPEC:C/fin', '-SPEC:v', '-SPEC:T/fin', '-COMP:N', 'TAIL:V', '-SPEC:INF', 'P', '-VAL', 'COMP:ARE/inf', '!COMP:*', '-COMP:uWH', '-ARG', '-COMP:T', '-SPEC:Neg/fin', 'adjoinable', '-COMP:A'}
a_D             {'!PROBE:N', '-SPEC:V', '-COMP:D', 'D', '-COMP:uR', '-COMP:T/fin', '-SPEC:P', '-ARG', '-SPEC:C', 'COMP:N', 'LANG:EN', '-SPEC:MA/lla', 'PF:D', '-SPEC:T/fin', '-SPEC:INF', 'LF:D', '!COMP:*', 'OP', '-COMP:P', '-SPEC:Neg/fin', 'adjoinable'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'COMP:D', '-COMP:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', '-SPEC:Neg', 'ASP', '-SPEC:T/fin', '-COMP:Neg', '-COMP:N', 'ARG', 'SPEC:P', '-COMP:P', 'PHI:NUM:_', 'LF:admire', '-VAL', '!COMP:*', 'V', 'PF:admire', 'CLASS:TR'}
admire*         ['LANG:EN']
T/fin*          {'LF:T', '!SPEC:*', '-VAL', 'CAT:T/fin', 'NO_NUMBER', "PF:T/fin'", 'NO_DET', 'LANG:EN'}
v*              {'LF:v', 'NO_NUMBER', 'PF:v', 'CAT:v', 'NO_DET', 'LANG:EN', '-VAL'}
admire**        ['LANG:EN']
T/fin**         {'LF:T', "PF:T/fin''", 'NO_PERSON', '!SPEC:*', '-VAL', 'CAT:T/fin', 'NO_NUMBER', 'NO_DET', 'LANG:EN', 'PHI:PER:3'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'PF:adora', '-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'COMP:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'LANG:IT', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', 'LF:admire', '-VAL', 'V'}
antaa           ['LANG:FI']
anta-           {'-COMP:FIN', '-SPEC:FORCE', 'COMP:P', 'ASP:BOUNDED', 'SPEC:TO/inf', 'COMP:D', 'PHI:PER:_', 'PHI:DET:_', 'PF:antaa', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'CLASS:DITR', 'LF:give', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'SPEC:D', 'PHI:NUM:_', '+SEM:directional', '-VAL', '!COMP:*', 'V', 'LANG:FI'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'PF:ask', '-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'COMP:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'LF:ask', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', 'SPEC:D', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', '-VAL', 'V', 'SEM:internal'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-SEM:directional', '-COMP:C/fin', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'LF:key', 'PF:avain', '-SPEC:uWH', 'LANG:FI', '-COMP:WH', '-COMP:A'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-SEM:directional', '-COMP:C/fin', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', 'PF:auto', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:uWH', 'LANG:FI', '-COMP:WH', 'LF:car', '-COMP:A'}
bank            {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN', 'PF:bank1', '-COMP:v', '-COMP:AUX', '-COMP:V', 'LF:bank_inst', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'FREQ:1', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
bank            {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-COMP:C/fin', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'PF:bank2', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'LF:bank_river', '-SPEC:uWH', 'FREQ:2', '-COMP:WH', '-COMP:A'}
barn            {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-SPEC:P', 'LF:barn', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', 'PF:barn', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-COMP:N', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
city            {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-COMP:C/fin', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'PF:city', '-SPEC:uWH', 'LF:city', '-COMP:WH', '-COMP:A'}
che             ['LANG:IT']
che-            {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', 'LF:who', 'COMP:T/prt', '-COMP:VA/inf', 'LANG:IT', '-SPEC:C/fin', '-COMP:AUX', 'PF:che', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
chiamato        ['LANG:IT']
chiamata-       {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'LANG:IT', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PF:chiamato', 'PHI:NUM:_', '-VAL', 'LF:called', 'V'}
claims          ['LANG:EN']
claim-          {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', '-COMP:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'LF:claim', 'ASP', 'SPEC:D', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', '-VAL', 'PF:claim', 'V', 'COMP:T/fin'}
danno           {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'LANG:IT', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'PF:danno', '-SPEC:uWH', '-COMP:C/fin', 'LF:damage', '-COMP:WH', '-COMP:A'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'COMP:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'LANG:IT', 'PF:detest', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'LF:detest', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', '-VAL', 'COMP:ARE/inf', 'V', 'SEM:internal'}
devono          ['LANG:EN']
deva-           {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'LANG:IT', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'PF:deva', 'SPEC:D', 'LF:must', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', '-VAL', 'COMP:ARE/inf', 'V', '-ASP', 'SEM:internal'}
di              {'-SPEC:FORCE', '-SPEC:V', '-SPEC:ADV', '-SPEC:iWH', '-COMP:ADV', 'COMP:D', '-COMP:T/fin', '-SPEC:P', 'PHI:PER:_', 'PHI:DET:_', '-adjoinable', '-SPEC:N', '-SPEC:iR', '-SPEC:C', '-SPEC:C/fin', '-SPEC:v', 'SPEC:*', 'LF:of', 'PF:di', '-SPEC:T/fin', 'ARG', '-COMP:N', '-SPEC:INF', 'PHI:NUM:_', 'P', '-VAL', '!COMP:*', '-COMP:uWH', 'LANG:FI', '-COMP:T', '-SPEC:Neg/fin', '-COMP:A'}
does            {'COMP:V', 'PHI:GEN:_', '-SPEC:V', 'SPEC:TO/inf', '-COMP:T/fin', 'SPEC:FORCE', '!SPEC:*', 'PHI:PER:_', '-SPEC:N', 'T', 'PHI:DET:_', 'FIN', '-SPEC:C', 'SPEC:*', '-SPEC:Neg', 'ARG', '-COMP:INF', 'VAL', '!PROBE:V', 'LF:does', 'COMP:T/prt', 'SPEC:C/fin', 'COMP:v', 'PHI:GEN:M', 'LANG:EN', '-SPEC:v', 'PF:does', 'PHI:PER:3', 'SPEC:D', 'PHI:NUM:SG', '-SPEC:T/fin', '-SPEC:TO/inf', 'PHI:NUM:_', '!COMP:*', 'PHI:GEN:F', 'COMP:Neg', 'T/fin'}
does_C          ['LANG:EN']
does-           {'COMP:V', 'PHI:GEN:_', '-SPEC:V', 'SPEC:TO/inf', '-COMP:T/fin', 'SPEC:FORCE', '!SPEC:*', 'PHI:PER:_', '-SPEC:N', 'T', 'PHI:DET:_', 'FIN', '-SPEC:C', 'SPEC:*', '-SPEC:Neg', 'ARG', '-COMP:INF', 'VAL', '!PROBE:V', 'LF:does', 'COMP:T/prt', 'SPEC:C/fin', 'COMP:v', 'PHI:GEN:M', 'LANG:EN', '-SPEC:v', 'PF:does', 'PHI:PER:3', 'SPEC:D', 'PHI:NUM:SG', '-SPEC:T/fin', '-SPEC:TO/inf', 'PHI:NUM:_', '!COMP:*', 'PHI:GEN:F', 'COMP:Neg', 'T/fin'}
dorme           ['LANG:IT']
dorme-          {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', '-COMP:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'PF:dorme', '-COMP:MA/inf', 'CLASS:INTR', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '!SPEC:D', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'SPEC:D', 'PHI:NUM:_', '-VAL', 'V', 'LF:sleep'}
disappeared     ['LANG:EN']
disappear-      {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', '-COMP:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', '-COMP:MA/inf', 'CLASS:INTR', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'SPEC:D', 'PF:disappear', 'PHI:NUM:_', 'LF:disappear', '-VAL', 'V'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'2SPEC', '0', 'SPEC:D', 'LANG:EN', 'PF:easy', 'LF:easy'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'POL:NEG', 'PF:ei', 'PHI:PER:_', 'COMP:T/prt', '!SPEC:*', 'PHI:DET:_', 'FIN', 'SPEC:*', '-SPEC:T/fin', 'ARG', '-SPEC:T', 'PHI:NUM:_', 'NEG', 'VAL', '!COMP:*', 'LANG:FI', 'LF:neg', '!COMP:T', 'SEM:internal', 'Neg/fin', '%SPEC:INF'}
e-              {'POL:NEG', 'PF:ei', 'PHI:PER:_', 'COMP:T/prt', '!SPEC:*', 'PHI:DET:_', 'FIN', 'SPEC:*', '-SPEC:T/fin', 'ARG', '-SPEC:T', 'PHI:NUM:_', 'NEG', 'VAL', '!COMP:*', 'LANG:FI', 'LF:neg', '!COMP:T', 'SEM:internal', 'Neg/fin', '%SPEC:INF'}
elaa            ['LANG:FI']
ela-            {'-SPEC:FORCE', 'COMP:P', '-COMP:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', '-COMP:MA/inf', 'CLASS:INTR', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', 'SPEC:D', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', '-VAL', 'LF:live', 'V', 'LANG:FI', 'PF:elaa'}
etsii           ['LANG:FI']
etsi-           {'-SPEC:FORCE', 'COMP:P', 'LF:search', 'COMP:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'PF:etsi', '-COMP:v', 'SPEC:ADV', '!COMP:D', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', '-COMP:P', 'PHI:NUM:_', '-VAL', '!COMP:*', 'V', 'LANG:FI', 'CLASS:TR'}
etta            {'PF:etta', 'LF:that', '-VAL', '-ARG', '!PROBE:FIN', '-SPEC:D', 'FIN', '!COMP:*', '-SPEC:*', 'COMP:C/fin', 'COMP:T/fin', 'LANG:FI', 'FORCE'}
fell            ['LANG:EN']
fell-           {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'PF:fell', '-COMP:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', '-COMP:MA/inf', 'CLASS:INTR', 'LANG:EN', '-COMP:v', 'SPEC:ADV', 'LF:fell', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'SPEC:D', 'PHI:NUM:_', '-VAL', 'V'}
flow'           {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', 'SPEC:D', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'LF:flow', 'PHI:NUM:_', '-VAL', 'V', 'PF:flow'}
from            {'-float', '-SPEC:FORCE', 'TAIL:V,+SEM:directional', '-SPEC:V', '-SPEC:ADV', '-SPEC:iWH', 'PHI:GEN:_', '-COMP:ADV', 'COMP:D', '-COMP:T/fin', '-SPEC:P', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:N', '-SPEC:iR', '-SPEC:C', '-SPEC:*', 'LANG:EN', '-SPEC:C/fin', '-SPEC:v', 'LF:from', '-SPEC:T/fin', 'ARG', '-COMP:N', '-SPEC:INF', 'PHI:NUM:_', 'P', '-VAL', 'PF:from', '!COMP:*', '-COMP:uWH', '-COMP:T', '-SPEC:Neg/fin', 'adjoinable', '-COMP:A'}
gave            ['LANG:EN']
give-           {'-COMP:FIN', '-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'PF:give', 'SPEC:TO/inf', 'COMP:D', 'PHI:PER:_', 'PHI:DET:_', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'CLASS:DITR', 'LF:give', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'SPEC:D', 'PHI:NUM:_', '+SEM:directional', '-VAL', '!COMP:*', 'V'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-SEM:directional', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'LANG:IT', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'LF:Giuseppe', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', 'PF:Giuseppe', '-COMP:A'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'COMP:A/inf', '-SPEC:FORCE', 'COMP:P', 'ASP:BOUNDED', 'PF:haluaa', 'COMP:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:*', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', '-COMP:P', 'PHI:NUM:_', '-VAL', 'LF:want', '!COMP:*', 'V', 'LANG:FI', 'CLASS:TR', 'SEM:internal'}
hairitsee       ['LANG:FI']
hairitse-       {'-COMP:FIN', '-SPEC:FORCE', 'COMP:P', 'SPEC:TO/inf', 'COMP:D', 'PHI:PER:_', 'PHI:DET:_', '-COMP:v', 'SPEC:ADV', '!COMP:D', '-COMP:V', 'PF:hairitsee', 'ASP', 'SPEC:D', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', '-COMP:P', 'LF:disturb', 'PHI:NUM:_', '-VAL', '!COMP:*', 'V', 'LANG:FI', 'CLASS:TR'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'PF:ha', '-SPEC:FORCE', 'COMP:P', 'LF:have', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'LANG:IT', '-COMP:v', 'SPEC:*', 'SPEC:ADV', '-COMP:V', 'SPEC:D', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', '-VAL', 'V', '-ASP', 'SEM:internal', 'COMP:T'}
horse           {'PF:horse', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', 'LF:horse', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-COMP:N', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'-SPEC:FORCE', 'COMP:P', 'PF:havia', '-COMP:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', '-COMP:MA/inf', 'CLASS:INTR', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'SPEC:D', 'PHI:NUM:_', 'LF:disappear', '-VAL', 'V', 'LANG:FI'}
Helsingissa     ['LANG:FI']
Helsinki        ['LANG:FI']
Helsinki-       {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-COMP:C/fin', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'COMP:uR', 'LF:Helsinki', '-SPEC:C/fin', '-COMP:v', 'PF:Helsinki', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:uWH', 'LANG:FI', '-COMP:WH', '-COMP:A'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'-COMP:FIN', '-SPEC:FORCE', 'COMP:P', 'SPEC:TO/inf', 'COMP:D', 'PHI:PER:_', 'PHI:DET:_', '-COMP:v', 'SPEC:ADV', '!COMP:D', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', '-COMP:P', 'PHI:NUM:_', 'LF:admire', '-VAL', '!COMP:*', 'V', 'LANG:FI', 'CLASS:TR', 'PF:ihaile-'}
il              {'!PROBE:N', '-SPEC:V', '-COMP:D', 'D', '-COMP:uR', '-COMP:T/fin', '-SPEC:P', 'LF:the', '-ARG', 'LANG:IT', '-SPEC:C', 'COMP:N', '-SPEC:MA/lla', '-SPEC:T/fin', 'PF:il', '-SPEC:INF', '!COMP:*', 'OP', '-COMP:P', '-SPEC:Neg/fin', 'adjoinable'}
i               {'!PROBE:N', '-SPEC:V', '-COMP:D', 'D', '-COMP:uR', '-COMP:T/fin', '-SPEC:P', 'LF:the', '-ARG', 'LANG:IT', '-SPEC:C', 'COMP:N', '-SPEC:MA/lla', '-SPEC:T/fin', 'PF:il', '-SPEC:INF', '!COMP:*', 'OP', '-COMP:P', '-SPEC:Neg/fin', 'adjoinable'}
in              {'-SPEC:FORCE', 'PHI:GEN:_', '-SPEC:V', '-SPEC:ADV', '-SPEC:iWH', 'PF:in', 'COMP:D', '-COMP:T/fin', '-SPEC:P', '-COMP:ADV', 'PHI:PER:_', '-SPEC:N', 'LANG:IT', '-SPEC:iR', 'PHI:DET:_', '-SPEC:C', '-SPEC:C/fin', '-SPEC:v', '-SPEC:T/fin', 'ARG', '-COMP:N', '-SPEC:INF', 'LF:in', 'PHI:NUM:_', 'P', '-VAL', '!COMP:*', '-COMP:uWH', '-COMP:T', '-SPEC:Neg/fin', 'adjoinable', '-COMP:A'}
infermieri      {'PF:infermieri', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'LANG:IT', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', 'LF:nurses', '-SPEC:INF', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
is              ['LANG:EN']
be-             {'-SPEC:FORCE', 'COMP:P', 'SPEC:TO/inf', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-COMP:TO/inf', 'SPEC:D', '-SPEC:T/fin', 'COPULA', '-COMP:N', 'SPEC:P', 'PF:be', '-VAL', 'LF:be', '!COMP:*', 'V', '-ARG'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'-SPEC:FORCE', 'COMP:P', '-COMP:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', '-COMP:MA/inf', 'CLASS:INTR', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'PF:istuu', 'SPEC:P', 'SPEC:D', 'PHI:NUM:_', '-VAL', 'V', 'LANG:FI', 'LF:sit'}
John            ['LANG:EN']
John-           {'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', 'LF:John', '-SEM:directional', 'COMP:T/prt', '-COMP:VA/inf', '-adjoinable', '-SPEC:C/fin', 'LANG:EN', '-COMP:AUX', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:uWH', '-COMP:C/fin', 'PF:John', '-COMP:WH', '-COMP:A'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', 'PF:joka', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', '-COMP:C/fin', 'LF:who', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:C/fin', '-COMP:AUX', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:uWH', 'LANG:FI', '-COMP:WH', '-COMP:A'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-SEM:directional', '-COMP:C/fin', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', 'LF:Jukka', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-COMP:A', '-SPEC:uWH', 'LANG:FI', '-COMP:WH', 'PF:Jukka'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'LF:run', '-SPEC:FORCE', 'COMP:P', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'PF:juokse-', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', '-VAL', 'V', 'LANG:FI'}
kaksi           {'PHI:NUM:SG', 'NUM', 'ARG', 'COMP:n', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:DET:_', 'TAIL:ARG,VAL,FIN', '-VAL', 'PF:kaksi', 'COMP:N', 'LF:two', 'SPEC:*', 'LANG:FI'}
kaksi           {'NUM', 'COMP:n', 'PF:kaksi', 'COMP:N', 'LF:two', 'LANG:EN', 'SPEC:*', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG'}
kaksi_1         {'PHI:NUM:SG', 'NUM', 'ARG', 'COMP:n', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:DET:_', 'TAIL:ARG,VAL,FIN', '-VAL', 'PF:kaksi', 'COMP:N', 'LF:two', 'SPEC:*', 'LANG:FI'}
kaksi_2         {'NUM', 'COMP:n', 'PF:kaksi', 'COMP:N', 'LF:two', 'LANG:EN', 'SPEC:*', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'PF:kaksi', 'NUM', 'LF:two', 'COMP:N', 'SPEC:*', 'LANG:FI', 'COMP:n'}
kaupunkia       ['LANG:EN']
kaupunki        {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', '-SPEC:ADV', '-COMP:C/fin', 'COMP:R', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', 'PF:kaupunki', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'LF:city', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:uWH', 'LANG:FI', '-COMP:P', '-COMP:WH', '-COMP:A'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'-SPEC:FORCE', 'COMP:P', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', '!COMP:A/inf', 'SEM:external', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PF:kaske', 'PHI:NUM:_', '-VAL', 'LF:order', 'V', 'LANG:FI'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', 'PF:kello', 'COMP:R', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:P', 'COMP:T/prt', 'LF:watch', '-COMP:VA/inf', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:uWH', 'LANG:FI', '-COMP:WH', '-COMP:A'}
kello0-         {'2SPEC', 'SPEC:D', 'PF:kello', 'LANG:FI', '0', 'LF:watch'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'COMP:uR', 'PF:key', '-SPEC:C/fin', 'LANG:EN', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'LF:key', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
kirja           ['LANG:FI']
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-SEM:directional', '-COMP:C/fin', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'LF:book', 'PF:kirja', '-SPEC:uWH', 'LANG:FI', '-COMP:WH', '-COMP:A'}
knows           ['LANG:EN']
know-           {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'SPEC:TO/inf', 'COMP:D', 'PHI:PER:_', 'PHI:DET:_', 'LF:know', 'PF:know', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', '-COMP:P', 'PHI:NUM:_', '-VAL', '!COMP:*', 'V', 'CLASS:TR'}
kohti           {'-SPEC:FORCE', '-SPEC:V', '-SPEC:ADV', '-SPEC:iWH', 'PF:kohti', 'COMP:D', '-COMP:T/fin', '-SPEC:P', '-COMP:ADV', 'PHI:PER:_', '-SPEC:N', '-SPEC:iR', 'PHI:DET:_', '-SPEC:C', '-SPEC:C/fin', '-SPEC:v', 'SPEC:*', '-SPEC:T/fin', 'ARG', '-COMP:N', 'TAIL:V', '-SPEC:INF', 'PHI:NUM:_', 'P', '-VAL', '!COMP:*', '-COMP:uWH', 'LANG:FI', '-COMP:T', '-SPEC:Neg/fin', 'LF:towards', 'adjoinable', '-COMP:A'}
koko            {'!PROBE:N', '-SPEC:V', '-COMP:D', 'D', '-COMP:uR', 'LF:all', '-COMP:T/fin', '-SPEC:P', 'PF:koko', '-ARG', '-SPEC:C', 'COMP:N', '-SPEC:MA/lla', 'TAIL:T', '-SPEC:T/fin', 'OP', '-SPEC:INF', '!COMP:*', 'LANG:FI', '-COMP:P', '-SPEC:Neg/fin', 'adjoinable'}
kuka            ['LANG:FI']
kuka-           {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'PF:kuka', 'COMP:P', 'COMP:R', 'LF:who', '-SPEC:ADV', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', 'PHI', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-COMP:C/fin', '-SPEC:uWH', 'LANG:FI', '-COMP:WH', '-COMP:A'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'-SPEC:FORCE', 'COMP:P', '-COMP:D', 'SPEC:TO/inf', '-COMP:T/fin', 'LF:snore', 'PHI:PER:_', 'PHI:DET:_', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', '-VAL', 'PF:kuorsaa', 'V', 'LANG:FI', '-COMP:WH'}
lahella         {'COMP:V', '-SPEC:V', '-SPEC:iWH', 'LF:near', 'COMP:D', '-COMP:T/fin', '!SPEC:*', '-SPEC:P', 'PHI:PER:_', '-SPEC:N', 'PHI:DET:_', '-SPEC:C', 'INF', 'SPEC:*', 'ARG', '-SPEC:INF', 'VAL', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:ADV', '-COMP:ADV', '-SPEC:iR', 'COMP:v', '-SPEC:C/fin', '-SPEC:v', 'PF:lahella', '!SPEC:D', '-SPEC:T/fin', '-COMP:N', '-COMP:FORCE', 'PHI:NUM:_', 'P', '!COMP:*', '-COMP:uWH', 'LANG:FI', '-COMP:T', '-SPEC:Neg/fin', 'adjoinable', '-COMP:A'}
lahella         {'-SPEC:FORCE', '-SPEC:V', '-SPEC:ADV', '-SPEC:iWH', 'LF:near', 'COMP:D', '-COMP:T/fin', '-SPEC:P', '-COMP:ADV', 'PHI:PER:_', '-SPEC:N', '-SPEC:iR', 'PHI:DET:_', '-SPEC:C', '-SPEC:C/fin', '-SPEC:v', 'SPEC:*', '!COMP:D', 'PF:lahella', '-SPEC:T/fin', 'ARG', '-COMP:N', '-SPEC:INF', 'PHI:NUM:_', 'P', '-VAL', '!COMP:*', '-COMP:uWH', 'LANG:FI', '-COMP:T', '-SPEC:Neg/fin', 'adjoinable', '-COMP:A'}
lahella_1       {'-SPEC:FORCE', '-SPEC:V', '-SPEC:ADV', '-SPEC:iWH', 'LF:near', 'COMP:D', '-COMP:T/fin', '-SPEC:P', '-COMP:ADV', 'PHI:PER:_', '-SPEC:N', '-SPEC:iR', 'PHI:DET:_', '-SPEC:C', '-SPEC:C/fin', '-SPEC:v', 'SPEC:*', '!COMP:D', 'PF:lahella', '-SPEC:T/fin', 'ARG', '-COMP:N', '-SPEC:INF', 'PHI:NUM:_', 'P', '-VAL', '!COMP:*', '-COMP:uWH', 'LANG:FI', '-COMP:T', '-SPEC:Neg/fin', 'adjoinable', '-COMP:A'}
lahella_2       {'COMP:V', '-SPEC:V', '-SPEC:iWH', 'LF:near', 'COMP:D', '-COMP:T/fin', '!SPEC:*', '-SPEC:P', 'PHI:PER:_', '-SPEC:N', 'PHI:DET:_', '-SPEC:C', 'INF', 'SPEC:*', 'ARG', '-SPEC:INF', 'VAL', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:ADV', '-COMP:ADV', '-SPEC:iR', 'COMP:v', '-SPEC:C/fin', '-SPEC:v', 'PF:lahella', '!SPEC:D', '-SPEC:T/fin', '-COMP:N', '-COMP:FORCE', 'PHI:NUM:_', 'P', '!COMP:*', '-COMP:uWH', 'LANG:FI', '-COMP:T', '-SPEC:Neg/fin', 'adjoinable', '-COMP:A'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'-SPEC:FORCE', 'COMP:P', '-COMP:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', '-COMP:MA/inf', 'CLASS:INTR', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', 'SPEC:D', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', '-VAL', 'COMP:PP', 'PF:lahtea', 'V', 'LF:leave', 'LANG:FI'}
lavano          ['LANG:IT']
lava-           {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'COMP:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'LANG:IT', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PF:lava', 'PHI:NUM:_', '-VAL', '!COMP:*', 'V', 'LF:wash'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'!PROBE:N', '-SPEC:V', '-COMP:D', 'D', '-COMP:uR', '-COMP:T/fin', '-SPEC:P', '-ARG', 'LANG:IT', '-SPEC:C', 'COMP:N', 'PF:le', '-SPEC:MA/lla', '-SPEC:T/fin', '-SPEC:INF', 'LF:D', '!COMP:*', 'OP', '-COMP:P', '-SPEC:Neg/fin', 'adjoinable'}
leaves          ['LANG:EN']
leave           {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PF:leave', 'PHI:DET:_', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '!SPEC:D', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', '-VAL', 'V', 'LF:leave'}
leave-          {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PF:leave', 'PHI:DET:_', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '!SPEC:D', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', '-VAL', 'V', 'LF:leave'}
like-           {'LF:like', '-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '!COMP:D', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', '-VAL', 'PF:like', 'V'}
likes           ['LANG:EN']
like            {'LF:like', '-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '!COMP:D', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', '-VAL', 'PF:like', 'V'}
little          ['LANG:EN']
little-         {'2SPEC', 'SPEC:D', 'LANG:EN', '0', 'PF:little-', 'LF:little'}
lle             {'-SPEC:FORCE', 'TAIL:V,+SEM:directional', '-SPEC:V', '-SPEC:ADV', '-SPEC:iWH', '-COMP:ADV', 'COMP:D', '-COMP:T/fin', '-SPEC:P', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:N', '-SPEC:iR', '-SPEC:*', '-SPEC:C', '-SPEC:C/fin', '-SPEC:v', '-SPEC:T/fin', 'ARG', '-COMP:N', '-SPEC:INF', 'PHI:NUM:_', '+SEM:directional', 'LF:for', 'P', '-VAL', '!COMP:*', '-COMP:uWH', 'LANG:FI', '-COMP:T', '-SPEC:Neg/fin', 'PF:P(lle)', 'adjoinable', '-COMP:A'}
lla             {'-SPEC:FORCE', '-SPEC:V', '-SPEC:ADV', '-SPEC:iWH', '-COMP:ADV', 'COMP:D', '-COMP:T/fin', '-SPEC:P', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:N', '-SPEC:iR', '-SPEC:C', '-SPEC:C/fin', '-SPEC:v', 'SPEC:*', 'TAIL:T', '-SPEC:T/fin', 'ARG', '-COMP:N', 'TAIL:*V', 'LF:by', '-SPEC:INF', 'PHI:NUM:_', 'P', '-VAL', '!COMP:*', '-COMP:uWH', 'LANG:FI', '-COMP:T', '-SPEC:Neg/fin', 'PF:P(lla)', 'adjoinable', '-COMP:A'}
Luisa           ['LANG:IT']
Luisa-          {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-SEM:directional', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'LANG:IT', 'COMP:uR', '-SPEC:uWH', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'LF:Luisa', 'PF:Luisa', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'-SPEC:FORCE', 'COMP:P', 'SPEC:TO/inf', 'COMP:D', 'PHI:PER:_', 'PHI:DET:_', 'LF:read', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PF:luke', '-COMP:P', 'PHI:NUM:_', '-VAL', '!COMP:*', 'V', 'LANG:FI', 'CLASS:TR'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'-SPEC:FORCE', 'COMP:P', 'ASP:BOUNDED', 'SPEC:TO/inf', 'COMP:D', 'PHI:PER:_', 'PHI:DET:_', 'PF:loyta-', '-COMP:v', 'SPEC:ADV', '!COMP:D', '-COMP:V', 'LF:find', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', '-COMP:P', 'PHI:NUM:_', '-VAL', '!COMP:*', 'V', 'LANG:FI', 'CLASS:TR'}
Mary            ['LANG:EN']
Mary-           {'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', 'PF:Mary', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'LF:Mary', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', '-SEM:directional', 'COMP:T/prt', '-COMP:VA/inf', '-adjoinable', '-SPEC:C/fin', 'LANG:EN', '-COMP:AUX', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'COMP:D/rel', '-SPEC:V', 'COMP:R', 'PF:Merja', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', '-COMP:C/fin', '-SEM:directional', 'COMP:T/prt', '-COMP:VA/inf', '-adjoinable', '-SPEC:C/fin', '-COMP:AUX', 'N', '-SPEC:T/fin', '-COMP:N', 'LF:Merja', '-SPEC:uWH', 'LANG:FI', '-COMP:WH', '-COMP:A'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'TAIL:T', 'PF:malla', '-SPEC:T/fin', '-SPEC:FORCE', 'MA/inf', 'LF:by', 'ADV', 'COMP:v', '-SPEC:N', 'SPEC:*', 'LANG:FI', '-SPEC:Neg/fin', 'adjoinable'}
meren           ['LANG:FI']
mere-           {'LF:ocean', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-COMP:C/fin', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'PF:meri', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:uWH', 'LANG:FI', '-COMP:WH', '-COMP:A'}
mies            {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-COMP:C/fin', 'PF:mies', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'COMP:uR', 'LF:man', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:uWH', 'LANG:FI', '-COMP:WH', '-COMP:A'}
mistake         {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'LF:mistake', 'COMP:R', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-COMP:WH', '-SPEC:uWH', '-COMP:C/fin', 'PF:mistake', '-COMP:A'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-COMP:C/fin', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', 'PF:mika-', '-COMP:V', 'COMP:C', '-COMP:AUX', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:uWH', 'LANG:FI', 'LF:what', '-COMP:WH', '-COMP:A'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'-SPEC:FORCE', 'LANGN:EN', 'COMP:P', 'PHI:GEN:_', 'COMP:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', '-COMP:P', 'PHI:NUM:_', '+SEM:directional', '-VAL', 'LF:move', '!COMP:*', 'V', 'CLASS:TR', 'PF:move'}
mukavasti       ['LANG:EN']
mukava-         {'PF:mukavasti', '2SPEC', 'SPEC:D', 'LANG:FI', '0', 'LF:comfortably'}
must            {'COMP:V', 'PHI:GEN:_', '-SPEC:V', 'SPEC:TO/inf', '-COMP:T/fin', 'SPEC:FORCE', '!SPEC:*', 'COMP:T/prt', '-SPEC:N', 'T', 'SPEC:C/fin', 'FIN', '-SPEC:C', 'COMP:v', 'LANG:EN', '-SPEC:v', 'SPEC:*', '-SPEC:Neg', 'SPEC:D', 'LF:must', 'ARG', '-SPEC:T/fin', 'PHI:PER:_', '-SPEC:TO/inf', 'MODAL', 'PHI:NUM:_', '-COMP:INF', 'PHI:DET:_', 'VAL', '!COMP:*', 'COMP:Neg', 'PF:must', 'T/fin', '!PROBE:V'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'-SPEC:FORCE', 'COMP:P', 'ASP:BOUNDED', 'COMP:D', '-COMP:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'LF:sell', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'PF:myy', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', '-COMP:P', 'PHI:NUM:_', '-VAL', '!COMP:*', 'V', 'LANG:FI', 'CLASS:TR'}
naki            ['LANG:FI']
nakee           ['LANG:FI']
nake-           {'-SPEC:FORCE', '-COMP:MA/tta', '-COMP:ESSA/inf', 'COMP:P', 'ASP:BOUNDED', 'SPEC:TO/inf', 'COMP:D', 'PF:nake', 'PHI:PER:_', 'PHI:DET:_', '-COMP:MA/ssa', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', '-COMP:P', 'PHI:NUM:_', '-VAL', '!COMP:*', 'LF:see', 'V', 'LANG:FI', 'CLASS:TR'}
nayttaa         ['LANG:FI']
naytta-         {'-SPEC:FORCE', 'COMP:P', 'SPEC:TO/inf', '-ARG', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', 'LF:seem', '!SPEC:D', '-SPEC:T/fin', '-COMP:N', 'SPEC:P', '!COMP:VA/inf', 'VAL', 'V', 'LANG:FI', 'PF:naytta', 'SEM:internal'}
ndo             {'COMP:V', 'PRG', '-SPEC:T/fin', '-COMP:FORCE', '-SPEC:V', '-COMP:T/fin', '?ARG', 'VAL', 'COMP:v', 'PF:PRG', '!COMP:*', 'LANG:EN', 'LF:ing', 'INF', '-COMP:C/fin'}
ne              {'!PROBE:N', '-SPEC:V', '-COMP:D', 'D', '-COMP:uR', '-COMP:T/fin', '-SPEC:P', '-ARG', '-SPEC:C', 'COMP:N', '-SPEC:MA/lla', 'PHI:PER:3', '-SPEC:T/fin', 'OP', '-SPEC:INF', 'PF:ne', 'LF:those', 'PHI:NUM:PL', '!COMP:*', 'LANG:FI', '-COMP:P', '-SPEC:Neg/fin', 'adjoinable'}
niiden          ['LANG:EN']
nen             {'A', 'PF:a', '-SPEC:A', 'SPEC:*', '-SPEC:D', 'LF:ing', 'COMP:0', 'LANG:FI', 'TAIL:D'}
not             {'POL:NEG', '-COMP:FIN', 'Neg', 'ARG', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:C', '-COMP:D', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '!COMP:*', 'PF:not', 'LANG:EN', 'LF:not', 'SPEC:*'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-SPEC:FORCE', 'COMP:P', '-COMP:D', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', '-COMP:MA/inf', 'CLASS:INTR', 'LF:sleep', 'PF:nukku', '-COMP:Neg/fin', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', 'SPEC:D', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', '-VAL', 'V', 'LANG:FI', '-COMP:T'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-COMP:C/fin', '-SPEC:P', 'LANG:FI', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'PF:omaisuuden', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:uWH', 'LF:possessions', '-COMP:WH', '-COMP:A'}
operatoria      ['LANG:IT']
operatoria-     {'LF:operation', 'LANG:IT', '2SPEC', 'SPEC:D', 'PF:operatoria', '0'}
ostaa           ['LANG:FI']
osta-           {'-SPEC:FORCE', 'COMP:P', 'ASP:BOUNDED', 'SPEC:TO/inf', 'COMP:D', 'PHI:PER:_', 'PHI:DET:_', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', '-COMP:P', 'PHI:NUM:_', '-VAL', 'PF:osta', '!COMP:*', 'V', 'LANG:FI', 'CLASS:TR', 'LF:buy'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-COMP:C/fin', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', 'LF:day', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'SEM:nonreferential', 'N', '-SPEC:T/fin', '-COMP:N', 'PF:paiva', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:uWH', 'LANG:FI', '-COMP:WH', '-COMP:A'}
past            {'-float', '-SPEC:FORCE', 'PHI:GEN:_', '-SPEC:V', '-SPEC:ADV', '-SPEC:iWH', 'PF:past', 'COMP:D', '-COMP:T/fin', '-SPEC:P', '-COMP:ADV', 'PHI:PER:_', '-SPEC:N', '-SPEC:iR', 'PHI:DET:_', 'LF:past', '-SPEC:C', 'LANG:EN', '-SPEC:*', '-SPEC:C/fin', '-SPEC:v', '-SPEC:T/fin', 'ARG', '-COMP:N', '-SPEC:INF', 'PHI:NUM:_', 'P', '-VAL', '!COMP:*', '-COMP:uWH', '-COMP:T', '-SPEC:Neg/fin', 'adjoinable', '-COMP:A'}
Pariisia        ['LANG:FI']
Pariisi-        {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-COMP:C/fin', 'PF:Pariisi', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'LF:Paris', '-SPEC:uWH', 'LANG:FI', '-COMP:WH', '-COMP:A'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-SEM:directional', '-COMP:C/fin', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'PF:Pekka', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', 'LF:Pekka', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:uWH', 'LANG:FI', '-COMP:WH', '-COMP:A'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'-SPEC:FORCE', 'COMP:P', 'LF:fear', 'SPEC:TO/inf', 'COMP:D', 'PHI:PER:_', 'PHI:DET:_', '-COMP:v', 'SPEC:ADV', 'PF:pelkaa', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', '-COMP:P', 'PHI:NUM:_', '-VAL', '!COMP:*', 'V', 'LANG:FI', 'CLASS:TR'}
persuades       ['LANG:EN']
persuade-       {'PF:persuade', '-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'SEM:external', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', '-VAL', '!COMP:*', 'LF:persuade', 'V', 'COMP:TO/inf'}
peruuntui       ['LANG:FI']
peruuntu-       {'-SPEC:FORCE', 'COMP:P', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:FI', 'PHI:DET:_', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', 'SPEC:D', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', '-VAL', 'PF:peruuntui', 'V', 'LF:cancelled'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'-SPEC:FORCE', 'COMP:P', 'ASP:BOUNDED', 'PF:pese_asp', 'SPEC:TO/inf', 'COMP:D', 'PHI:PER:_', 'PHI:DET:_', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', '-COMP:P', 'PHI:NUM:_', '-VAL', '!COMP:*', 'V', 'LANG:FI', 'CLASS:TR', 'LF:wash'}
pese-           {'-SPEC:FORCE', 'COMP:P', 'SPEC:TO/inf', 'COMP:D', 'PHI:PER:_', 'PHI:DET:_', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'PF:pese', 'ARG', 'SPEC:P', '-COMP:P', 'PHI:NUM:_', '-VAL', '!COMP:*', 'V', 'LANG:FI', 'CLASS:TR', 'LF:wash'}
petardi         {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', 'PF:petardi', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'LANG:IT', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'LF:firecrackers', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
pieni           ['LANG:FI']
pieni-          {'2SPEC', 'SPEC:D', 'LF:small', '0', 'PF:pieni-', 'LANG:FI'}
poikien         ['LANG:FI']
poika-          {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-COMP:C/fin', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', 'LF:boy', '-SPEC:T/fin', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-COMP:N', 'PF:poika', '-SPEC:uWH', 'LANG:FI', '-COMP:WH', '-COMP:A'}
puhelinta       ['LANG:FI']
puhelin-        {'2SPEC', 'SPEC:D', 'LF:phone', 'PF:puhelin', 'LANG:FI', '0'}
punainen        ['LANG:FI']
puna-           {'2SPEC', 'SPEC:D', 'PF:puna-', 'LANG:FI', '0', 'LF:red'}
presupposto     {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', 'PF:presupposto', 'COMP:R', '-SPEC:ADV', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'LANG:IT', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'LF:presupposition', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
primary         {'LF:nurse', 'COMP:D/rel', '-SPEC:V', '-SPEC:FORCE', 'COMP:P', 'COMP:R', '-SPEC:ADV', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'PF:primary', 'LANG:IT', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
promises        ['LANG:EN']
promise-        {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'COMP:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', 'SPEC:D', 'PF:promise', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', '-VAL', 'V', 'SEM:internal', 'LF:promise'}
problem         {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', 'PF:problem', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'LF:problem', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
pyytaa          ['LANG:FI']
pyyta-          {'-SPEC:FORCE', 'COMP:P', 'SPEC:TO/inf', 'COMP:D', 'PHI:PER:_', 'PHI:DET:_', 'PF:pyyda', 'SEM:external', 'LF:ask', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', '-COMP:P', 'PHI:NUM:_', '-VAL', '!COMP:*', 'V', 'LANG:FI', 'CLASS:TR'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', '-COMP:D', 'LF:race', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'PHI:DET:_', '-COMP:MA/inf', 'CLASS:INTR', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'SPEC:D', 'LAMG:EN', 'PHI:NUM:_', '-VAL', 'PF:race', 'V'}
raukesi         ['LANG:FI']
raukea-         {'-SPEC:FORCE', 'COMP:P', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', 'PF:raukea', '-VAL', 'V', 'LANG:FI', 'LF:terminate'}
red             ['LANG:EN']
red-            {'2SPEC', 'SPEC:D', 'LANG:EN', 'PF:red', '0', 'LF:red'}
saavuttaa       ['LANG:FI']
saavutta-       {'-SPEC:FORCE', 'COMP:P', 'ASP:BOUNDED', 'SPEC:TO/inf', 'COMP:D', 'PHI:PER:_', 'PHI:DET:_', 'PF:saavutta-', '-COMP:v', 'SPEC:ADV', '!COMP:D', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', '-COMP:P', 'PHI:NUM:_', '-VAL', 'LF:reach', '!COMP:*', 'V', 'LANG:FI', 'CLASS:TR'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'-SPEC:FORCE', 'COMP:P', 'PF:sano-', 'SPEC:TO/inf', 'COMP:D', 'PHI:PER:_', 'PHI:DET:_', 'CLASS:TR', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', 'LF:say', 'SPEC:D', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', '-COMP:P', 'PHI:NUM:_', '-VAL', '!COMP:*', 'V', 'LANG:FI', 'COMP:VA/inf', 'COMP:FORCE'}
said            ['LANG:EN']
say'            {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', 'LF:say', 'SPEC:D', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', '-VAL', 'V', 'PF:say', '!COMP:FORCE'}
say-            {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', 'LF:say', 'SPEC:D', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', '-VAL', 'V', 'PF:say', '!COMP:FORCE'}
sala            ['LANG:IT']
sala-           {'PF:sala', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-SPEC:P', 'COMP:T/prt', 'LF:room', '-COMP:VA/inf', '-SPEC:N', 'LANG:IT', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
scoppiati       ['LANG:IT']
scoppia-        {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'LANG:IT', 'PF:scoppia', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', '-VAL', 'V', 'LF:explode'}
sentenza        {'PF:sentenza', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'LANG:IT', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'LF:sentence', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
Seine           ['LANG:EN']
Seine-          {'LF:Seine', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'PF:Seine', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
sembrano        ['LANG:IT']
sembra-         {'-SPEC:FORCE', 'COMP:P', '-COMP:D', 'SPEC:TO/inf', 'LANG:EN', '-COMP:v', 'PF:sembra', 'SPEC:ADV', '-COMP:V', 'LF:seem', 'SPEC:D', '-SPEC:T/fin', '-COMP:N', 'SPEC:P', '-VAL', 'V', '-ASP', '-ARG', '!COMP:ARE/inf'}
sleeps          ['LANG:EN']
sleep           {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', '-COMP:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', '-COMP:MA/inf', 'CLASS:INTR', 'PF:sleep', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'SPEC:D', 'PHI:NUM:_', '-VAL', 'V', 'LF:sleep'}
sleep-          {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', '-COMP:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', '-COMP:MA/inf', 'CLASS:INTR', 'PF:sleep', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'SPEC:D', 'PHI:NUM:_', '-VAL', 'V', 'LF:sleep'}
solution        {'LF:solution', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-SPEC:P', 'COMP:T/prt', 'PF:solution', '-COMP:VA/inf', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'PF:sopimus', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-COMP:C/fin', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', '!COMP:A/inf', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'LF:agreement', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:uWH', 'LANG:FI', '-COMP:WH', '-COMP:A'}
spinge          ['LANG:IT']
spinge-         {'-SPEC:FORCE', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:PER:_', 'LF:push', 'PHI:DET:_', 'LANG:IT', '-COMP:v', 'SPEC:ADV', '!COMP:D', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'PF:spinge', 'SPEC:P', 'PHI:NUM:_', '-VAL', 'V', '-COMP:P'}
ssa             {'PF:ssa', '-SPEC:FORCE', '-SPEC:V', '-SPEC:ADV', '-SPEC:iWH', '-COMP:ADV', 'COMP:D', '-COMP:T/fin', '-SPEC:P', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:N', '-SPEC:iR', '-SPEC:C', '-SPEC:C/fin', '-SPEC:v', 'SPEC:*', 'COMP:n/MA', '-SPEC:T/fin', 'ARG', '-COMP:N', 'TAIL:V', '-SPEC:INF', 'LF:in', 'PHI:NUM:_', 'P', '-VAL', '!COMP:*', '-COMP:uWH', 'LANG:FI', '-COMP:T', '-SPEC:Neg/fin', 'adjoinable', '-COMP:A'}
stanno          ['LANG:IT']
sta-            {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'LF:stay', 'COMP:PRG', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'PF:sta', 'SPEC:D', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', '-VAL', 'V', '-ASP', 'SEM:internal'}
sti             {'TAIL:T', '-SPEC:T/fin', '-SPEC:FORCE', 'LF:by', 'LANG:FI', 'ADV', '-SPEC:N', '!COMP:*', 'SPEC:*', '-ARG', '-SPEC:Neg/fin', 'PF:sti', 'adjoinable'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-SPEC:FORCE', 'PF:sukka-', 'COMP:D/rel', '-SPEC:V', 'COMP:P', 'COMP:R', '-SPEC:ADV', '-COMP:C/fin', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'LF:socks', '-SPEC:uWH', 'LANG:FI', '-COMP:WH', '-COMP:A'}
surprised       ['LANG:EN']
surprise-       {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'SPEC:TO/inf', '-COMP:T/fin', 'COMP:D', 'PHI:PER:_', 'PHI:DET:_', 'LANG:EN', '-COMP:v', 'SPEC:ADV', 'PF:surprise', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', '-COMP:P', 'PHI:NUM:_', 'LF:surprise', '-VAL', '!COMP:*', 'V', 'CLASS:TR'}
talo            {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-COMP:C/fin', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', 'LF:house', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'PF:talo', '-SPEC:uWH', 'LANG:FI', '-COMP:WH', '-COMP:A'}
tama            ['LANG:EN']
tama-           {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-COMP:C/fin', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', 'PHI', '-SPEC:N', 'COMP:uR', 'PF:tama', '-SPEC:C/fin', '-COMP:v', 'LF:this', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:uWH', 'LANG:FI', '-COMP:WH', '-COMP:A'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'-SPEC:FORCE', 'COMP:P', 'PF:taytyy', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', '!COMP:A/inf', 'FIN', '-COMP:v', 'SPEC:*', 'SPEC:ADV', '-COMP:V', '-SPEC:T/fin', 'LF:must', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', 'MODAL', '-VAL', 'V', 'LANG:FI', '-ASP'}
teki            ['LANG:FI']
teke-           {'-SPEC:FORCE', 'COMP:P', 'ASP:BOUNDED', 'LF:make', 'SPEC:TO/inf', 'LANG:FI', 'COMP:D', 'PHI:PER:_', 'PHI:DET:_', '-COMP:v', 'SPEC:ADV', '!COMP:D', '-COMP:V', 'PF:teke', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', '-COMP:P', 'PHI:NUM:_', '-VAL', '!COMP:*', 'V', '-COMP:A/inf', 'CLASS:TR'}
that            {'LF:that', 'COMP:C/fin', '-VAL', '!PROBE:FIN', 'FIN', '!COMP:*', 'PF:that', 'LANG:EN', '-SPEC:*', 'COMP:T/fin', '-ARG', 'FORCE'}
the             {'!PROBE:N', '-SPEC:V', '-COMP:D', 'D', '-COMP:uR', '-COMP:T/fin', '-SPEC:P', 'LF:the', '-ARG', '-SPEC:C', 'COMP:N', 'LANG:EN', '-SPEC:MA/lla', '-SPEC:T/fin', 'PHI:DEF:DEF', '-SPEC:INF', 'PF:the', '!COMP:*', 'OP', '-COMP:P', '-SPEC:Neg/fin', 'adjoinable'}
to              {'PHI:GEN:_', '-SPEC:V', '-SPEC:iWH', 'LF:to', 'COMP:D', '-COMP:T/fin', '-SPEC:P', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:N', '-SPEC:C', 'PF:to', 'ARG', '-SPEC:INF', '+SEM:directional', '-float', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:ADV', '-SPEC:iR', '-SPEC:*', '-SPEC:C/fin', 'LANG:EN', '-SPEC:v', '-SPEC:T/fin', '-COMP:N', 'TAIL:V', 'PHI:NUM:_', 'P', '-VAL', '!COMP:*', '-COMP:uWH', '-COMP:T', '-SPEC:Neg/fin', 'adjoinable', '-COMP:A'}
to_inf          {'COMP:V', 'TO/inf', '-SPEC:V', '-COMP:T/fin', 'PF:TO/inf', 'COMP:v', 'LANG:EN', 'LF:TO/inf', '-SPEC:v', 'INF', '-SPEC:T/fin', '-COMP:FORCE', '-VAL', '?ARG', '!COMP:*', '-COMP:C/fin', 'adjoinable'}
towards         {'-float', '-SPEC:FORCE', 'PHI:GEN:_', '-SPEC:V', '-SPEC:ADV', '-SPEC:iWH', '-COMP:ADV', 'COMP:D', '-COMP:T/fin', '-SPEC:P', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:N', '-SPEC:iR', '-SPEC:C', '-SPEC:*', 'LANG:EN', '-SPEC:C/fin', '-SPEC:v', '-SPEC:T/fin', 'ARG', '-COMP:N', 'TAIL:V', '-SPEC:INF', 'PHI:NUM:_', 'P', '-VAL', '!COMP:*', '-COMP:uWH', 'PF:towards', '-COMP:T', '-SPEC:Neg/fin', 'LF:towards', 'adjoinable', '-COMP:A'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'-SPEC:FORCE', 'COMP:P', 'SPEC:TO/inf', 'COMP:D', 'PHI:PER:_', 'PHI:DET:_', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'PF:tonaise', 'SPEC:P', '-COMP:P', 'PHI:NUM:_', '-VAL', '!COMP:*', 'V', 'LANG:FI', 'CLASS:TR', 'LF:nudge'}
tta             {'-SPEC:FORCE', '-SPEC:V', '-SPEC:ADV', '-SPEC:iWH', 'PF:tta', 'COMP:D', '-COMP:T/fin', '-SPEC:P', '-COMP:ADV', 'PHI:PER:_', '-SPEC:N', '-SPEC:iR', 'PHI:DET:_', '-SPEC:C', '-SPEC:C/fin', '-SPEC:v', 'SPEC:*', 'COMP:n/MA', '-SPEC:T/fin', 'ARG', '-COMP:N', '-SPEC:INF', 'PHI:NUM:_', 'P', '-VAL', 'LF:without', 'ADV', '!COMP:*', '-COMP:uWH', 'LANG:FI', '-COMP:T', '-SPEC:Neg/fin', 'adjoinable', '-COMP:A'}
tries           ['LANG:EN']
try-            {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', 'SPEC:D', 'PF:try', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', '!COMP:-ARG', 'PHI:NUM:_', '!COMP:TO/inf', '-VAL', 'LF:try', 'V', 'SEM:internal'}
verifiche       {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:N', 'LANG:IT', 'COMP:uR', '-SPEC:C/fin', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'LF:verification', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'PF:verifiche', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'!COMP:P', '-SPEC:FORCE', 'COMP:P', '-COMP:D', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', '-COMP:MA/inf', 'CLASS:INTR', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', 'SPEC:D', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PF:virtaa', 'LF:flow', 'PHI:NUM:_', '-VAL', 'V', 'LANG:FI'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:*', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'PF:volu', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', '-VAL', 'LF:want', '!COMP:*', 'V', 'SEM:internal'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'PF:voitta', '-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'ASP:BOUNDED', 'SPEC:TO/inf', 'COMP:D', 'PHI:PER:_', 'PHI:DET:_', 'LF:win', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', '-COMP:P', 'PHI:NUM:_', '-VAL', '!COMP:*', 'V', 'SEM:achievement', 'CLASS:TR'}
wants           ['LANG:EN']
want-           {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'COMP:D', 'PHI:PER:_', 'PHI:DET:_', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', '-COMP:P', 'PF:want', '-SPEC:TO/inf', 'PHI:NUM:_', '-VAL', 'LF:want', '!COMP:*', 'V', 'CLASS:TR', 'COMP:TO/inf'}
what            ['LANG:EN']
what-           {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:P', 'PF:what', '-SPEC:ADV', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:C/fin', 'LANG:EN', '-COMP:AUX', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:uWH', '-COMP:C/fin', 'LF:what', '-COMP:WH', '-COMP:A'}
which           {'!PROBE:N', 'PF:which', 'LF:which', '-SPEC:V', '-COMP:D', 'D', '-COMP:uR', '-COMP:T/fin', '-SPEC:P', '-ARG', '-SPEC:C', 'COMP:N', 'LANG:EN', '-SPEC:MA/lla', '-SPEC:T/fin', '-SPEC:INF', '!COMP:*', 'OP', 'OP:WH', '-COMP:P', '-SPEC:Neg/fin', 'adjoinable'}
who             ['LANG:EN']
who-            {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', 'LF:who', 'COMP:T/prt', 'PF:who', '-COMP:VA/inf', '-SPEC:C/fin', 'LANG:EN', '-COMP:AUX', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
whether         {'LF:whether', '-ARG', '!PROBE:FIN', 'FIN', '-SPEC:*', 'LANG:EN', 'COMP:C/fin', 'Q', 'OP:Q', '-VAL', '!COMP:*', 'COMP:T/fin', 'OP', 'OP:WH', 'FORCE', 'PF:whether'}
yrittaa         ['LANG:FI']
yritta-         {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', '!COMP:A/inf', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', 'PF:yritta', 'SPEC:D', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', '!COMP:-ARG', 'PHI:NUM:_', '-VAL', 'LF:try', 'V', 'SEM:internal'}
mina            ['LANG:EN']
mina-           {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', '-COMP:C/fin', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:C/fin', 'PF:mina', '-COMP:AUX', 'N', '-SPEC:T/fin', '-COMP:N', 'LF:I', '-SPEC:uWH', 'LANG:FI', '-COMP:WH', '-COMP:A'}
sina            ['LANG:EN']
sina-           {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', '-COMP:C/fin', 'COMP:T/prt', '-COMP:VA/inf', 'LF:you', '-SPEC:C/fin', '-COMP:AUX', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:uWH', 'LANG:FI', 'PF:sina', '-COMP:WH', '-COMP:A'}
han             ['LANG:EN']
han-            {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', '-COMP:C/fin', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:C/fin', 'PF:han', '-COMP:AUX', 'LF:s/he', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:uWH', 'LANG:FI', '-COMP:WH', '-COMP:A'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', 'PF:me', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', 'LF:we', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', '-COMP:C/fin', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:C/fin', '-COMP:AUX', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:uWH', 'LANG:FI', '-COMP:WH', '-COMP:A'}
te              ['LANG:EN']
te-             {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'PF:te', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', '-COMP:C/fin', 'COMP:T/prt', '-COMP:VA/inf', 'LF:you', '-SPEC:C/fin', '-COMP:AUX', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:uWH', 'LANG:FI', '-COMP:WH', '-COMP:A'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', '-COMP:C/fin', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:C/fin', '-COMP:AUX', 'N', '-SPEC:T/fin', 'LF:they', '-COMP:N', 'PF:he', '-SPEC:uWH', 'LANG:FI', '-COMP:WH', '-COMP:A'}
se              {'!PROBE:N', '-SPEC:V', '-COMP:D', 'D', '-COMP:uR', '-COMP:T/fin', '-SPEC:P', '-ARG', '-SPEC:C', 'COMP:N', 'LF:the/that', '-SPEC:MA/lla', '-SPEC:T/fin', 'OP', '-SPEC:INF', 'PF:se', '!COMP:*', 'LANG:FI', '-COMP:P', '-SPEC:Neg/fin', 'adjoinable'}
sen             {'!PROBE:N', '-SPEC:V', '-COMP:D', 'D', '-COMP:uR', '-COMP:T/fin', '-SPEC:P', '-ARG', '-SPEC:C', 'COMP:N', 'LF:the/that', '-SPEC:MA/lla', '-SPEC:T/fin', 'OP', '-SPEC:INF', 'TAIL:ASP', 'PF:sen', '!COMP:*', 'LANG:FI', '-COMP:P', '-SPEC:Neg/fin', 'TAIL:*POL:NEG', 'adjoinable', 'TAIL:PHI'}
I               ['LANG:EN']
I-              {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'PF:I', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:C/fin', 'LANG:EN', '-COMP:AUX', 'N', '-SPEC:T/fin', '-COMP:N', 'LF:I', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
you             ['LANG:EN']
you-            {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'PF:you', 'SPEC:A', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', 'COMP:T/prt', '-COMP:VA/inf', 'LF:you', '-SPEC:C/fin', 'LANG:EN', '-COMP:AUX', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
he              ['LANG:EN']
he-             {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-COMP:WH', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:C/fin', 'LANG:EN', '-COMP:AUX', 'N', '-SPEC:T/fin', '-COMP:N', 'PF:he', '-SPEC:uWH', '-COMP:C/fin', 'LF:he', '-COMP:A'}
she             ['LANG:EN']
she-            {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-COMP:WH', 'LF:she', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:C/fin', 'LANG:EN', '-COMP:AUX', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:uWH', '-COMP:C/fin', 'PF:she', '-COMP:A'}
we              ['LANG:EN']
we-             {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', 'PF:we', '-COMP:V', 'COMP:C', 'SPEC:A', 'LF:we', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:C/fin', 'LANG:EN', '-COMP:AUX', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
you_pl          ['LANG:EN']
you_pl-         {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', 'PHI', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN', '-COMP:v', '-COMP:AUX', '-COMP:V', 'LF:you_pl', 'COMP:C', 'SPEC:A', 'PF:you_pl', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
they            ['LANG:EN']
they-           {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', 'COMP:T/prt', '-COMP:VA/inf', '-SPEC:C/fin', 'LANG:EN', '-COMP:AUX', 'N', '-SPEC:T/fin', 'LF:they', '-COMP:N', 'PF:they', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
it              ['LANG:EN']
it-             {'!PROBE:N', '-SPEC:V', '-COMP:D', 'D', '-COMP:uR', '-COMP:T/fin', '-SPEC:P', '-ARG', '-SPEC:C', 'COMP:N', 'LANG:EN', '-SPEC:MA/lla', 'LF:it/that', '-SPEC:T/fin', '-SPEC:INF', 'PF:it', '!COMP:*', 'OP', '-COMP:P', '-SPEC:Neg/fin', 'adjoinable'}
io              ['LANG:EN']
io-             {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', 'COMP:T/prt', '-COMP:VA/inf', 'LANG:IT', 'PF:io', '-SPEC:C/fin', '-COMP:AUX', 'N', '-SPEC:T/fin', '-COMP:N', 'LF:I', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
tu              ['LANG:EN']
tu-             {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', 'COMP:T/prt', '-COMP:VA/inf', 'LANG:IT', 'LF:you', '-SPEC:C/fin', '-COMP:AUX', 'PF:tu', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
lui             ['LANG:EN']
lui-            {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-COMP:WH', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', 'COMP:T/prt', '-COMP:VA/inf', 'LANG:IT', 'PF:lui', '-SPEC:C/fin', '-COMP:AUX', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:uWH', '-COMP:C/fin', 'LF:he', '-COMP:A'}
lei             ['LANG:EN']
lei-            {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'LF:she', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', 'COMP:T/prt', '-COMP:VA/inf', 'LANG:IT', '-SPEC:C/fin', '-COMP:AUX', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', 'PF:lei', '-COMP:A'}
noi             ['LANG:EN']
noi-            {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', 'LF:we', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'PF:noi', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', 'COMP:T/prt', '-COMP:VA/inf', 'LANG:IT', '-SPEC:C/fin', '-COMP:AUX', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
voi             ['LANG:EN']
voi-            {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'LF:you_pl', 'COMP:C', 'SPEC:A', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', 'COMP:T/prt', '-COMP:VA/inf', 'LANG:IT', '-SPEC:C/fin', '-COMP:AUX', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:uWH', '-COMP:C/fin', 'PF:voi', '-COMP:WH', '-COMP:A'}
loro            ['LANG:EN']
loro-           {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', 'COMP:T/prt', '-COMP:VA/inf', 'LANG:IT', '-SPEC:C/fin', '-COMP:AUX', 'PF:loro', 'N', '-SPEC:T/fin', 'LF:they', '-COMP:N', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
mi              ['LANG:EN']
mi-             {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', 'CL', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', 'COMP:T/prt', '-COMP:VA/inf', 'LANG:IT', '-SPEC:C/fin', 'LF:me', 'PF:mi(cl)', '-COMP:AUX', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
la              ['LANG:EN']
la-             {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', 'CL', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', 'PF:la(cl)', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'LF:her', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', 'COMP:T/prt', '-COMP:VA/inf', 'LANG:IT', '-SPEC:C/fin', '-COMP:AUX', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
lo              ['LANG:EN']
lo-             {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', 'CL', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'LF:him', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', 'COMP:T/prt', '-COMP:VA/inf', 'LANG:IT', '-SPEC:C/fin', '-COMP:AUX', 'N', '-SPEC:T/fin', '-COMP:N', 'PF:lo(cl)', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
si              ['LANG:EN']
si-             {'PF:si(cl)', 'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', 'LF:3sg', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', 'COMP:T/prt', '-COMP:VA/inf', 'LANG:IT', '-SPEC:C/fin', '-COMP:AUX', 'N', '-SPEC:T/fin', '-COMP:N', 'CAL:CL', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'PHI_N', 'COMP:D/rel', '-SPEC:V', 'COMP:R', '-SPEC:P', '-SPEC:N', 'COMP:uR', '-COMP:v', '-COMP:V', 'COMP:C', 'SPEC:A', '-COMP:*', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', 'COMP:T/prt', '-COMP:VA/inf', 'LANG:IT', '-SPEC:C/fin', '-COMP:AUX', 'LF:there', 'N', '-SPEC:T/fin', '-COMP:N', 'PF:ci', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
[-n]            {'PHI', 'inflectional', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:1', 'LANG:FI'}
[-t]            {'PHI', 'inflectional', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:FI', 'PHI:PER:2'}
[-V]            {'PHI', 'inflectional', 'PHI:NUM:SG', 'LANG:FI', 'PHI:PER:3'}
[-mme]          {'PHI', 'inflectional', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:1', 'LANG:FI'}
[-mme]          {'inflectional', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:1', 'LANG:FI'}
[-tte]          {'PHI', 'inflectional', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:FI', 'PHI:PER:2'}
[-vat]          {'PHI', 'inflectional', 'PHI:NUM:PL', 'LANG:FI', 'PHI:PER:3'}
[-ni]           {'PHI', 'inflectional', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:1', 'LANG:FI'}
[-si]           {'PHI', 'inflectional', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:FI', 'PHI:PER:2'}
[-nsa]          {'PHI', 'inflectional', 'PHI:NUM:SG', 'LANG:FI', 'PHI:PER:3'}
[-an]           {'PHI', 'inflectional', 'PHI:NUM:SG', 'LANG:FI', 'PHI:DET:DET', 'PHI:PER:3'}
[-nne]          {'inflectional', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:FI', 'PHI:PER:2'}
[-s]            {'PHI', 'inflectional', 'PHI:NUM:SG', 'PHI:GEN:M', 'PHI:GEN:F', 'LANG:EN', 'PHI:PER:3'}
[-0]            {'inflectional', 'PHI:NUM:SG', 'PHI:GEN:N', 'PHI', 'PHI:NUM:PL', 'PHI:DET:DEF', 'LANG:EN', 'PHI:PER:1', 'PHI:PER:2', 'PHI:PER:3'}
[-o]            {'PHI', 'LANG:IT', 'inflectional', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:1'}
[-i]            {'PHI', 'LANG:IT', 'inflectional', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:2'}
[-a]            {'PHI', 'LANG:IT', 'inflectional', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:3'}
[-e]            {'PHI', 'LANG:IT', 'inflectional', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:3'}
[-iamo]         {'PHI', 'LANG:IT', 'inflectional', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:1'}
[-te]           {'PHI', 'LANG:IT', 'inflectional', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:2'}
[-no]           {'PHI', 'LANG:IT', 'inflectional', 'PHI:NUM:PL', 'PHI:DET:DEF', 'PHI:PER:3'}
[-nom]          {'NOM', 'inflectional', 'LANG:EN', 'TAIL:FIN,ARG,VAL', 'adjoinable'}
[-par]          {'TAIL:ARG,-VAL', 'inflectional', 'PAR', 'LANG:FI', 'adjoinable'}
[-gen]          {'-float', 'inflectional', 'LANG:EN', 'GEN', 'TAIL:INF,ARG'}
gen             {'-float', 'inflectional', 'LANG:EN', 'GEN', 'TAIL:INF,ARG'}
[-n_acc]        {'TAIL:ARG,ASP:BOUNDED', 'inflectional', 'LANG:FI', 'n-ACC', 'TAIL:*POL:NEG', 'adjoinable', 'TAIL:PHI'}
[-t_acc]        {'TAIL:ARG,ASP:BOUNDED', 'inflectional', 't-ACC', 'LANG:FI', 'TAIL:*POL:NEG', 'adjoinable'}
[-0_acc]        {'TAIL:ARG,ASP:BOUNDED', 'inflectional', 'LANG:FI', 'TAIL:*PHI', '0_ACC', 'TAIL:*POL:NEG', 'adjoinable'}
asp             {'inflectional', 'LANG:EN', 'ASP:BOUNDED'}
a'              {'a', 'LF:A', 'PF:a', 'LANG:X'}
b'              {'PF:b', 'b', 'LANG:X', 'LF:B'}
b''             {'b', 'LANG:EN', '-COMP:c', 'PF:b', 'LF:B'}
c''             {'LF:C', 'LANG:EN', 'SPEC:a', 'PF:c', 'c'}
c'              {'LF:C', 'LANG:X', 'PF:c', 'c'}
d'              {'LF:D', 'PF:d', 'd', 'LANG:'}
a''             ['LANG:EN']
x'              {'LF:X', 'PF:x', 'x', 'LANG:X'}
y'              {'LF:Y', 'PF:y', 'LANG:X', 'y'}
z'              {'PF:x', 'LF:Z', 'LANG:X', 'z'}
John'           {'LF:John', "N'", 'PF:John', 'LANG:X'}
admires'        {"V'", 'PF:admires', 'LANG:X', 'LF:admires'}
admires''       {'-SPEC:FORCE', 'COMP:P', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:PER:_', 'PHI:DET:_', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'ASP', 'SPEC:D', '-SPEC:T/fin', '-COMP:N', 'ARG', 'SPEC:P', 'PHI:NUM:_', 'LF:admires', '-VAL', 'V', 'PF:admires'}
Mary'           {'PF:Mary', "N'", 'LF:mary', 'LANG:X'}
T/fin           {'LF:T', 'COMP:V', 'PHI:GEN:_', '-SPEC:V', 'SPEC:TO/inf', '-COMP:T/fin', 'SPEC:FORCE', '!SPEC:*', 'COMP:T/prt', '-SPEC:N', 'T', 'SPEC:C/fin', 'FIN', '-SPEC:C', 'COMP:v', 'LANG:EN', '-SPEC:v', 'SPEC:*', '-SPEC:Neg', 'SPEC:D', 'ARG', 'PF:T', '-SPEC:T/fin', 'PHI:PER:_', '-SPEC:TO/inf', 'PHI:NUM:_', '-COMP:INF', 'PHI:DET:_', 'VAL', '!COMP:*', 'T/fin', '!PROBE:V'}
v               {'ASP', 'COMP:V', 'LF:v', 'SPEC:D', 'ARG', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-SPEC:N', 'PF:v', '!COMP:*', 'LANG:EN', 'v', '!PROBE:V'}
C/fin           {'-COMP:C/fin', 'LF:C/fin', 'PF:C', '-SPEC:N', '!PROBE:FIN', 'FIN', '-SPEC:C/fin', 'LANG:EN', 'SPEC:*', 'C', 'C/fin', 'COMP:Neg/fin', '-SPEC:T/fin', '-COMP:T/prt', 'VAL', '!COMP:*', 'COMP:T/fin', '-ARG'}
T               {'LF:T', '-COMP:NEG', 'COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', '-SPEC:V', 'PHI:PER:_', 'COMP:T/prt', 'PHI:DET:_', '-SPEC:N', 'T', 'COMP:v', 'FIN', 'LANG:EN', 'SPEC:*', 'SPEC:D', 'ARG', 'PF:T', '-SPEC:T/fin', 'PHI:NUM:_', 'VAL', '!COMP:*', '!PROBE:V'}
T/prt           {'T/prt', 'PF:T/prt', '-COMP:NEG', 'COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', '-SPEC:V', 'COMP:D', 'COMP:T/prt', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:N', 'T', 'COMP:v', 'FIN', '-SPEC:C/fin', 'LANG:EN', 'SPEC:*', 'LF:T/prt', 'SPEC:D', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'VAL', '!COMP:*', '!PROBE:V'}
a0              {'A', '-SPEC:A', '-adjoinable', '-SPEC:D', 'LANG:EN', 'COMP:0', 'LF:A', 'TAIL:D', 'PF:A'}
n               {'COMP:V', 'PHI:GEN:_', 'COMP:D/rel', '-SPEC:V', 'COMP:R', 'PHI:PER:_', 'PF:n', '-SPEC:P', '!SPEC:*', 'PHI:DET:_', '-SPEC:N', 'COMP:uR', '-COMP:v', 'INF', 'SPEC:*', '-COMP:V', 'COMP:C', 'SPEC:A', 'ARG', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'LF:n', 'VAL', 'COMP:0', '-SPEC:FORCE', 'COMP:P', '-SPEC:ADV', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:v', '-SPEC:C/fin', 'LANG:EN', '-COMP:AUX', 'N', '!SPEC:D', '-SPEC:T/fin', '-COMP:N', 'n', 'PHI:NUM:_', '!COMP:*', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
impass          {'ASP', 'COMP:V', 'PF:impass', 'SPEC:D', 'ARG', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-SPEC:N', '!COMP:*', 'LANG:EN', 'v', 'LF:impass', '!PROBE:V'}
cau             {'ASP', 'COMP:V', 'SPEC:D', 'ARG', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:DET:_', '-VAL', '-SPEC:N', '!COMP:*', 'LANG:EN', 'v', 'LF:v/Cause', '!PROBE:V', 'PF:Cau'}
INF             {'COMP:V', '-SPEC:T/fin', '-COMP:FORCE', '-SPEC:V', '-COMP:T/fin', 'COMP:v', 'PF:INF', 'LF:INF', '!COMP:*', 'LANG:EN', 'INF', '-COMP:C/fin'}
prtcpl          {'T/prt', 'PF:T/prt', 'COMP:V', '-COMP:NEG', '-SPEC:FORCE', 'PHI:GEN:_', '-SPEC:V', 'COMP:D', '-COMP:T/fin', 'COMP:T/prt', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:N', 'T', 'COMP:v', 'FIN', '-SPEC:C/fin', 'LANG:EN', 'INF', 'LF:T/prt', 'SPEC:*', 'SPEC:D', 'ARG', '-SPEC:T/fin', '-COMP:FORCE', 'PHI:NUM:_', 'VAL', '!COMP:*', '-COMP:C/fin', '!PROBE:V'}
TO/inf          {'COMP:V', 'TO/inf', '-SPEC:V', '-COMP:T/fin', 'PF:TO/inf', 'COMP:v', 'LANG:EN', '-SPEC:v', 'LF:TO/inf', 'INF', '-SPEC:T/fin', '-COMP:FORCE', '-VAL', '?ARG', '!COMP:V', '!COMP:*', '-COMP:C/fin', 'adjoinable'}
A/inf           {'COMP:V', 'A/inf', '-SPEC:V', '-COMP:T/fin', 'COMP:v', 'LF:A/inf', '?VAL', 'SPEC:*', 'INF', 'LANG:EN', '-SPEC:T/fin', '-COMP:FORCE', '?ARG', 'PF:A/inf', '!COMP:*', '-COMP:C/fin', '-SPEC:Neg/fin'}
ARE/inf         {'COMP:V', '-SPEC:V', '-COMP:T/fin', '-adjoinable', 'COMP:v', 'LANG:EN', 'SPEC:*', 'INF', 'ARE/inf', '-SPEC:T/fin', '-COMP:FORCE', 'PF:are', '?ARG', 'VAL', '!COMP:*', '-COMP:C/fin', 'LF:ARE/inf'}
ESSA/inf        {'COMP:V', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:V', '-COMP:T/fin', '-SPEC:N', 'COMP:v', 'LANG:EN', '?VAL', 'SPEC:*', 'INF', 'TAIL:T', '-SPEC:T/fin', 'LF:while', '-COMP:FORCE', 'ADV', '?ARG', '!COMP:*', 'ESSA/inf', '-SPEC:Neg/fin', 'PF:essa', 'adjoinable'}
TUA/inf         {'COMP:V', 'TUA/inf', 'LF:after', '-SPEC:FORCE', 'PHI:GEN:_', '-SPEC:V', 'PHI:PER:_', '-COMP:T/fin', '!SPEC:*', 'PHI:DET:_', '-SPEC:N', 'COMP:v', 'LANG:EN', 'INF', 'SPEC:*', 'TAIL:T', '-SPEC:T/fin', 'ARG', '-COMP:FORCE', 'PHI:NUM:_', 'PF:tua', 'ADV', 'VAL', '!COMP:*', '-COMP:C/fin', '-SPEC:Neg/fin', 'adjoinable'}
VA/inf          {'COMP:V', 'PF:vAn', 'PHI:GEN:_', '-SPEC:V', 'VA/inf', 'PHI:PER:_', '-COMP:T/fin', '!SPEC:*', 'PHI:DET:_', '-SPEC:N', 'COMP:v', 'LANG:EN', 'INF', 'SPEC:*', '-SPEC:T/fin', 'ARG', '-COMP:FORCE', 'LF:VA', 'PHI:NUM:_', 'VAL', '!COMP:*', '-COMP:C/fin'}
MA/ssa          {'COMP:V', '-SPEC:FORCE', 'PHI:GEN:_', 'MA/inf', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:N', 'COMP:v', '-SPEC:*', 'LANG:EN', 'PF:massa', '-SPEC:T/fin', 'ARG', 'TAIL:V', 'PHI:NUM:_', 'MA/ssa', 'ADV', '-VAL', '-SPEC:Neg/fin', 'LF:in_doing', 'adjoinable'}
MA/tta          {'TAIL:T', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PF:matta', 'MA/inf', 'PHI:GEN:_', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:DET:_', '-VAL', 'ADV', 'LF:without_doing', '-SPEC:N', 'LANG:EN', '-SPEC:Neg/fin', 'adjoinable'}
MA/lla          {'PF:malla', 'COMP:V', 'PHI:GEN:_', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:N', 'ARG', 'LF:by_doing', '-SPEC:FORCE', 'MA/inf', 'COMP:v', 'LANG:EN', 'TAIL:T', '-SPEC:T/fin', 'PHI:NUM:_', '-VAL', 'ADV', '-SPEC:Neg/fin', 'adjoinable'}
MA/inf          {'COMP:V', 'PHI:GEN:_', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:N', 'LF:to_do', 'ARG', 'PF:maan', '-SPEC:FORCE', 'MA/inf', 'COMP:v', 'LANG:EN', '-SPEC:T/fin', 'TAIL:V', 'PHI:NUM:_', '-VAL', 'ADV', '-SPEC:Neg/fin', 'adjoinable'}
E/inf           {'TAIL:T', '-SPEC:T/fin', '-SPEC:FORCE', 'LF:by', 'LANG:FI', '-VAL', 'ADV', '-SPEC:N', 'SPEC:*', '-ARG', 'PF:en', '-SPEC:Neg/fin', 'adjoinable'}
BE-             {'-SPEC:FORCE', 'COMP:P', 'SPEC:TO/inf', 'COMP:T/prt', '-COMP:T/fin', 'LANG:EN', '-COMP:v', 'SPEC:ADV', '-COMP:V', 'PF:BE', 'ASP', 'SPEC:D', '-SPEC:T/fin', 'COPULA', '-COMP:N', 'SPEC:P', 'LF:BE', '-VAL', '!COMP:*', 'V', '-ARG'}
D               {'!PROBE:N', '-SPEC:V', '-COMP:D', 'D', '-COMP:uR', '-COMP:T/fin', '-SPEC:P', '-ARG', '-SPEC:C', 'COMP:N', 'LANG:EN', '-SPEC:MA/lla', 'PF:D', '-SPEC:T/fin', '-SPEC:INF', 'LF:D', '!COMP:*', 'OP', '-COMP:P', '-SPEC:Neg/fin', 'adjoinable'}
D/rel           {'!PROBE:N', '-COMP:C/fin', '-SPEC:V', '-COMP:D', 'D', 'LF:D/rel', 'PF:D/rel', '-SPEC:P', '-COMP:T/fin', '-ARG', '-COMP:uR', '-SPEC:C', 'COMP:N', 'LANG:EN', 'D/rel', '-SPEC:MA/lla', 'OP:_', '-SPEC:T/fin', 'inflectional', '-SPEC:INF', 'OP:REL', '!COMP:*', 'OP', '-SPEC:Neg/fin', 'adjoinable'}
P               {'-float', '-SPEC:FORCE', 'PHI:GEN:_', '-SPEC:V', '-SPEC:ADV', '-SPEC:iWH', '-COMP:ADV', 'COMP:D', '-COMP:T/fin', '-SPEC:P', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:N', '-SPEC:iR', '-SPEC:C', '-SPEC:*', 'LANG:EN', '-SPEC:C/fin', '-SPEC:v', 'LF:P', '-SPEC:T/fin', 'ARG', '-COMP:N', 'adjoinable', '-SPEC:INF', 'PHI:NUM:_', 'P', '-VAL', '!COMP:*', '-COMP:uWH', '-COMP:T', '-SPEC:Neg/fin', 'PF:P', '-COMP:A'}
pro             ['LANG:EN']
pro-            {'-SPEC:FORCE', 'COMP:D/rel', '-SPEC:V', 'COMP:P', '-SPEC:ADV', 'COMP:R', '-SPEC:P', 'COMP:T/prt', '-COMP:VA/inf', 'PHI', '-SPEC:N', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN', 'LF:pro', '-COMP:v', '-COMP:AUX', '-COMP:V', 'COMP:C', 'SPEC:A', 'N', '-SPEC:T/fin', '-COMP:N', '-SPEC:R', 'COMP:R/D', '-SPEC:INF', 'PF:(pro)', '-SPEC:uWH', '-COMP:C/fin', '-COMP:WH', '-COMP:A'}
cl              {'RIGHT:ARE/inf', 'inflectional', 'LEFT:T/fin', 'LEFT:D,CL', 'LANG:EN', 'RIGHT:PRG', 'CL'}
inc             {'INCORPORATED', 'inflectional', 'LANG:EN'}
sg              {'inflectional', 'PHI:NUM:SG', 'LANG:EN'}
pl              {'inflectional', 'PHI:NUM:PL', 'LANG:EN'}
1p              {'PHI:PER:1', 'inflectional', 'LANG:EN'}
2p              {'inflectional', 'LANG:EN', 'PHI:PER:2'}
3p              {'inflectional', 'LANG:EN', 'PHI:PER:3'}
def             {'inflectional', 'PHI:DET:DEF', 'LANG:EN'}
indef           {'inflectional', 'LANG:EN', 'PHI:DET:INDEF'}
hum             {'inflectional', 'PHI:HUM:HUM', 'LANG:EN'}
nonhum          {'inflectional', 'PHI:HUM:NONHUM', 'LANG:EN'}
m               {'inflectional', 'LANG:EN', 'PHI:GEN:M'}
f               {'inflectional', 'LANG:EN', 'PHI:GEN:F'}
nom             {'NOM', 'inflectional', 'LANG:EN', 'TAIL:FIN,!COMP:*,VAL'}
acc             {'TAIL:v', 'ACC', 'inflectional', 'LANG:EN'}
dat             {'TAIL:v', 'inflectional', 'LANG:EN', 'DAT'}
uC/op           {'inflectional', 'uC/op', 'LANG:EN'}
wh              {'OP:_', 'OP:WH', 'inflectional', 'LANG:EN'}
wh_             {'inflectional', 'OP:_', 'LANG:EN', 'FORCE:OP:WH', 'OP'}
top             {'OP:TOP', 'inflectional', 'LANG:EN'}
foc             {'OP:FOC', 'inflectional', 'LANG:EN'}
C/op            {'OP:C/OP', 'inflectional', 'LANG:EN'}
Q               {'inflectional', 'LANG:EN', 'OP:Q', 'OP', 'OP:WH'}
