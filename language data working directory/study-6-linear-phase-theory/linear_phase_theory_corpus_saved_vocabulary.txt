ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'-COMP:N', 'TAIL:V', '-COMP:uWH', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:P', '-SPEC:V', '-SPEC:v', 'P', 'COMP:D', '-SPEC:iR', '-SPEC:ADV', 'PF:a', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', 'COMP:ARE/inf', '-SPEC:Neg/fin', '-SPEC:C/fin', 'LANG:IT', '-SPEC:N', '-SPEC:iWH', '-COMP:ADV', '-ARG', '-VAL', '-SPEC:C', 'LF:to', 'adjoinable', '-SPEC:*'}
a_D             {'-SPEC:P', 'D', '-SPEC:T/fin', '-SPEC:V', 'LF:D', '-SPEC:MA/lla', '-COMP:uR', '!PROBE:N', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:N', 'OP', 'COMP:N', 'PF:D', '-ARG', 'LANG:EN', '-SPEC:C', 'adjoinable', '-SPEC:D'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:Neg', '-COMP:P', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', '!COMP:*', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'SPEC:P', '-SPEC:Neg', 'V', 'SPEC:TO/inf', 'CLASS:TR', 'LF:admire', 'LANG:EN', '-VAL', '-COMP:V', 'PHI:DET:_', 'PF:admire', 'COMP:P', 'PHI:GEN:_'}
admire*         ['LANG:EN']
T/fin*          {'LF:T', "PF:T/fin'", 'NO_DET', '-VAL', '!SPEC:*', 'LANG:EN', 'CAT:T/fin', 'NO_NUMBER'}
v*              {'LF:v', 'NO_DET', 'LANG:EN', '-VAL', 'NO_NUMBER', 'PF:v', 'CAT:v'}
admire**        ['LANG:EN']
T/fin**         {"PF:T/fin''", 'LF:T', 'PHI:PER:3', 'NO_PERSON', 'NO_DET', 'LANG:EN', '-VAL', '!SPEC:*', 'CAT:T/fin', 'NO_NUMBER'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:adora', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'LANG:IT', 'SPEC:P', 'V', 'SPEC:TO/inf', 'LF:admire', 'PHI:GEN:_', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
antaa           ['LANG:FI']
anta-           {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', '+SEM:directional', '-COMP:FIN', 'CLASS:DITR', '!COMP:*', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'PF:antaa', 'SPEC:D', 'SPEC:P', 'V', 'ASP:BOUNDED', 'SPEC:TO/inf', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P', 'LF:give'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:DET:_', 'LF:ask', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'PF:ask', 'SPEC:D', 'SPEC:P', 'V', 'SPEC:TO/inf', 'LANG:EN', 'PHI:GEN:_', '-VAL', '-COMP:V', 'SEM:internal', 'COMP:P'}
ask-            {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:DET:_', 'LF:ask', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'PF:ask', 'SPEC:D', 'SPEC:P', 'V', 'SPEC:TO/inf', 'LANG:EN', 'PHI:GEN:_', '-VAL', '-COMP:V', 'SEM:internal', 'COMP:P'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:WH', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LF:key', '-SPEC:N', '-SPEC:uWH', '-COMP:V', 'PF:avain', '-SEM:directional', 'COMP:R', 'COMP:P', 'COMP:R/D'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:WH', '-COMP:A', 'PF:auto', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', 'LF:car', '-SPEC:uWH', '-COMP:V', '-SEM:directional', 'COMP:R', 'COMP:P', 'COMP:R/D'}
city            {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', 'LF:city', 'COMP:uR', '-SPEC:ADV', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', '-SPEC:uWH', 'PF:city', 'LANG:EN', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
che             ['LANG:IT']
che-            {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LF:who', 'LANG:IT', '-SPEC:N', 'PF:che', '-SPEC:uWH', '-COMP:*', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
chiamato        ['LANG:IT']
chiamata-       {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:chiamato', 'SPEC:ADV', 'PHI:PER:_', 'LF:called', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'LANG:IT', 'SPEC:P', 'V', 'SPEC:TO/inf', 'PHI:GEN:_', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
danno           {'PF:danno', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'LF:damage', 'COMP:uR', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LANG:IT', '-SPEC:N', '-SPEC:uWH', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', 'PF:detest', '-COMP:T/fin', 'ARG', 'COMP:ARE/inf', 'ASP', '-COMP:v', 'LANG:IT', 'SPEC:P', 'V', 'LF:detest', 'SPEC:TO/inf', 'PHI:GEN:_', '-VAL', '-COMP:V', 'SEM:internal', 'COMP:P'}
devono          ['LANG:EN']
deva-           {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'LF:must', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:ADV', 'PHI:PER:_', '-ASP', 'PF:deva', '-COMP:T/fin', 'ARG', 'COMP:ARE/inf', '-COMP:v', 'LANG:IT', 'SPEC:D', 'SPEC:P', 'V', 'SPEC:TO/inf', 'PHI:GEN:_', '-VAL', '-COMP:V', 'SEM:internal', 'COMP:P'}
di              {'LANG:FI', '-COMP:uWH', '-COMP:N', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:P', '-SPEC:V', '-SPEC:v', 'PHI:NUM:_', 'PHI:PER:_', 'P', 'LF:of', 'COMP:D', '-SPEC:iR', '-SPEC:ADV', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', 'ARG', '-SPEC:Neg/fin', '-SPEC:C/fin', '-adjoinable', '-SPEC:N', '-SPEC:iWH', '-COMP:ADV', 'PF:di', '-VAL', '-SPEC:C', 'PHI:DET:_', 'SPEC:*'}
does            {'-SPEC:FORCE', '-SPEC:T/fin', 'COMP:T/prt', '-SPEC:V', 'PHI:NUM:SG', '-SPEC:v', 'PHI:NUM:_', 'PHI:PER:_', 'FIN', 'PF:does', '-COMP:INF', '!COMP:*', '-COMP:T/fin', 'T/fin', 'ARG', '!PROBE:V', '!SPEC:D', 'PHI:GEN:M', 'COMP:Neg', 'T', 'VAL', '-SPEC:C/fin', '-SPEC:TO/inf', '-SPEC:N', 'SPEC:D', 'COMP:V', 'PHI:GEN:F', '-SPEC:Neg', 'PHI:PER:3', 'SPEC:TO/inf', 'LF:does', 'LANG:EN', 'COMP:v', 'PHI:GEN:_', 'PHI:DET:_', 'SPEC:*'}
does_C          ['LANG:EN']
does-           {'-SPEC:FORCE', '-SPEC:T/fin', 'COMP:T/prt', '-SPEC:V', 'PHI:NUM:SG', '-SPEC:v', 'PHI:NUM:_', 'PHI:PER:_', 'FIN', 'PF:does', '-COMP:INF', '!COMP:*', '-COMP:T/fin', 'T/fin', 'ARG', '!PROBE:V', '!SPEC:D', 'PHI:GEN:M', 'COMP:Neg', 'T', 'VAL', '-SPEC:C/fin', '-SPEC:TO/inf', '-SPEC:N', 'SPEC:D', 'COMP:V', 'PHI:GEN:F', '-SPEC:Neg', 'PHI:PER:3', 'SPEC:TO/inf', 'LF:does', 'LANG:EN', 'COMP:v', 'PHI:GEN:_', 'PHI:DET:_', 'SPEC:*'}
dorme           ['LANG:IT']
dorme-          {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', '-COMP:T/fin', 'PF:dorme', 'ARG', 'ASP', '-COMP:v', '!SPEC:D', 'SPEC:P', 'V', 'SPEC:TO/inf', 'LANG:EN', 'PHI:GEN:_', '-VAL', 'LF:sleep', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'LANG:FI', '-SPEC:T/fin', 'COMP:T/prt', 'PHI:NUM:_', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:T', 'FIN', '%SPEC:INF', '!COMP:T', '!COMP:*', '!SPEC:*', 'ARG', 'LF:neg', 'VAL', 'NEG', 'PF:ei', 'POL:NEG', 'Neg/fin', 'SEM:internal', 'SPEC:*'}
e-              {'LANG:FI', '-SPEC:T/fin', 'COMP:T/prt', 'PHI:NUM:_', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:T', 'FIN', '%SPEC:INF', '!COMP:T', '!COMP:*', '!SPEC:*', 'ARG', 'LF:neg', 'VAL', 'NEG', 'PF:ei', 'POL:NEG', 'Neg/fin', 'SEM:internal', 'SPEC:*'}
elaa            ['LANG:FI']
ela-            {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', 'LF:live', '-COMP:T/fin', 'ARG', 'PF:elaa', 'CLASS:INTR', '-COMP:v', 'ASP', '-COMP:D', '-COMP:MA/inf', 'SPEC:D', 'SPEC:P', 'V', 'SPEC:TO/inf', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
etsii           ['LANG:FI']
etsi-           {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'PF:etsi', 'SPEC:P', 'V', 'SPEC:TO/inf', 'LF:search', '-VAL', '!COMP:D', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
etta            {'LANG:FI', 'COMP:T/fin', '!PROBE:T/fin', 'FIN', 'PF:etta', 'LF:that', '-ARG', '!COMP:*', '-VAL', 'FORCE', '-SPEC:*', 'COMP:C/fin'}
flow'           {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'PF:flow', 'SPEC:D', 'SPEC:P', 'V', 'LF:flow', 'SPEC:TO/inf', 'LANG:EN', 'PHI:GEN:_', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
from            {'-COMP:N', '-COMP:uWH', '-SPEC:FORCE', '-SPEC:T/fin', '-SPEC:P', '-SPEC:V', 'PHI:NUM:_', '-SPEC:v', 'PHI:PER:_', 'P', 'COMP:D', '-float', '-SPEC:iR', '-SPEC:ADV', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', 'ARG', '-SPEC:Neg/fin', '-SPEC:C/fin', 'PF:from', '-SPEC:N', '-SPEC:iWH', '-COMP:ADV', 'LANG:EN', 'PHI:GEN:_', '-VAL', '-SPEC:C', 'TAIL:V,+SEM:directional', 'PHI:DET:_', 'adjoinable', 'LF:from', '-SPEC:*'}
gave            ['LANG:EN']
give-           {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', '+SEM:directional', '-COMP:FIN', 'CLASS:DITR', '!COMP:*', '-COMP:T/fin', 'PF:give', 'ARG', 'ASP', '-COMP:v', 'SPEC:D', 'SPEC:P', 'V', 'SPEC:TO/inf', 'LANG:EN', 'PHI:GEN:_', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P', 'LF:give'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:WH', '-COMP:A', 'LF:Giuseppe', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LANG:IT', '-SPEC:N', 'PF:Giuseppe', '-SPEC:uWH', '-COMP:V', '-SEM:directional', 'COMP:R', 'COMP:P', 'COMP:R/D'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:P', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', '!COMP:*', '-COMP:T/fin', 'PF:haluaa', 'ARG', 'ASP', '-COMP:v', 'COMP:A/inf', 'LF:want', 'SPEC:P', 'V', 'ASP:BOUNDED', 'SPEC:TO/inf', 'CLASS:TR', '-VAL', '-COMP:V', 'SEM:internal', 'COMP:P', '-SPEC:*'}
hairitsee       ['LANG:FI']
hairitse-       {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:hairitsee', 'SPEC:ADV', 'PHI:PER:_', '-COMP:FIN', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'SPEC:D', 'LF:disturb', 'SPEC:P', 'V', 'SPEC:TO/inf', '-VAL', '!COMP:D', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:ADV', 'PHI:PER:_', 'PF:ha', '-ASP', '-COMP:T/fin', 'ARG', '-COMP:v', 'LANG:IT', 'SPEC:D', 'SPEC:P', 'COMP:T', 'V', 'LF:have', 'SPEC:TO/inf', 'PHI:GEN:_', '-VAL', '-COMP:V', 'SEM:internal', 'COMP:P', 'SPEC:*'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', '-COMP:T/fin', 'ARG', 'ASP', 'CLASS:INTR', '-COMP:v', '-COMP:D', 'LF:disappear', '-COMP:MA/inf', 'SPEC:D', 'SPEC:P', 'V', 'PF:havia', 'SPEC:TO/inf', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', '-COMP:FIN', '!COMP:*', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'PF:ihaile-', 'SPEC:P', 'V', 'SPEC:TO/inf', 'CLASS:TR', 'LF:admire', '-VAL', '!COMP:D', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
il              {'-SPEC:P', 'PF:il', 'D', '-SPEC:T/fin', '-SPEC:V', '-SPEC:MA/lla', '-COMP:uR', '!PROBE:N', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', '-COMP:D', '-SPEC:Neg/fin', 'LANG:IT', '-SPEC:N', 'OP', 'COMP:N', 'LF:the', '-ARG', '-SPEC:C', 'adjoinable', '-SPEC:D'}
i               {'-SPEC:P', 'PF:il', 'D', '-SPEC:T/fin', '-SPEC:V', '-SPEC:MA/lla', '-COMP:uR', '!PROBE:N', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', '-COMP:D', '-SPEC:Neg/fin', 'LANG:IT', '-SPEC:N', 'OP', 'COMP:N', 'LF:the', '-ARG', '-SPEC:C', 'adjoinable', '-SPEC:D'}
in              {'-COMP:N', '-COMP:uWH', '-SPEC:FORCE', '-SPEC:T/fin', '-SPEC:P', '-SPEC:V', 'PHI:NUM:_', '-SPEC:v', 'PHI:PER:_', 'P', 'COMP:D', '-SPEC:iR', '-SPEC:ADV', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', 'ARG', 'PF:in', '-SPEC:Neg/fin', '-SPEC:C/fin', 'LANG:IT', 'LF:in', '-SPEC:N', '-SPEC:iWH', '-COMP:ADV', 'PHI:GEN:_', '-VAL', '-SPEC:C', 'PHI:DET:_', 'adjoinable'}
infermieri      {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', 'LF:nurses', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LANG:IT', '-SPEC:N', '-SPEC:uWH', 'PF:infermieri', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
is              ['LANG:EN']
be-             {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'SPEC:ADV', 'LF:be', '-COMP:TO/inf', '!COMP:*', '-COMP:T/fin', 'ASP', '-COMP:v', 'PF:be', 'COPULA', 'SPEC:D', 'SPEC:P', 'V', 'SPEC:TO/inf', '-ARG', 'LANG:EN', '-VAL', '-COMP:V', 'COMP:P'}
istuuko         ['LANG:FI']
istuu-          {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', 'PF:istuu', '-COMP:T/fin', 'ARG', 'ASP', 'CLASS:INTR', '-COMP:v', '-COMP:D', '-COMP:MA/inf', 'SPEC:D', 'SPEC:P', 'V', 'SPEC:TO/inf', '-VAL', '-COMP:V', 'PHI:DET:_', 'LF:sit', 'COMP:P'}
John            ['LANG:EN']
John-           {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:WH', '-COMP:A', '-SPEC:R', 'LF:John', 'COMP:uR', '-SPEC:ADV', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-adjoinable', '-SPEC:N', '-SPEC:uWH', 'LANG:EN', 'PF:John', '-COMP:V', '-SEM:directional', 'COMP:R', 'COMP:P', 'COMP:R/D'}
joka            ['LANG:FI']
joka-           {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LF:who', '-SPEC:N', 'PF:joka', '-SPEC:uWH', '-COMP:*', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'PF:Jukka', 'LF:Jukka', 'SPEC:A', '-COMP:A', '-COMP:WH', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', '-SPEC:uWH', '-COMP:V', '-SEM:directional', 'COMP:R', 'COMP:P', 'COMP:R/D'}
juosten         ['LANG:FI']
juokse-         {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', 'PF:juokse-', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'SPEC:P', 'V', 'SPEC:TO/inf', 'LF:run', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
istuu           ['LANG:FI']
istu-           {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', 'PF:istuu', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'SPEC:P', 'V', 'SPEC:TO/inf', '-VAL', '-COMP:V', 'PHI:DET:_', 'LF:sit', 'COMP:P'}
kaksi           {'LANG:FI', 'PHI:DET:_', 'PHI:NUM:_', 'LF:two', 'PHI:NUM:SG', 'PHI:PER:_', 'COMP:N', 'PF:kaksi', 'NUM', 'TAIL:ARG,VAL,FIN', '-VAL', 'COMP:n', 'ARG', 'SPEC:*'}
kaksi           {'LF:two', 'COMP:N', 'PF:kaksi', 'NUM', 'TAIL:*POL:NEG', 'LANG:EN', 'COMP:n', 'TAIL:ARG,ASP:BOUNDED', 'SPEC:*'}
kaksi_1         {'LANG:FI', 'PHI:DET:_', 'PHI:NUM:_', 'LF:two', 'PHI:NUM:SG', 'PHI:PER:_', 'COMP:N', 'PF:kaksi', 'NUM', 'TAIL:ARG,VAL,FIN', '-VAL', 'COMP:n', 'ARG', 'SPEC:*'}
kaksi_2         {'LF:two', 'COMP:N', 'PF:kaksi', 'NUM', 'TAIL:*POL:NEG', 'LANG:EN', 'COMP:n', 'TAIL:ARG,ASP:BOUNDED', 'SPEC:*'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'LANG:FI', 'LF:two', 'COMP:n', 'COMP:N', 'PF:kaksi', 'NUM', 'SPEC:*'}
kaupunkia       ['LANG:EN']
kaupunki        {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-COMP:P', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', 'LF:city', 'COMP:uR', '-SPEC:ADV', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', '-SPEC:uWH', '-COMP:V', 'COMP:R/D', 'PF:kaupunki', 'COMP:R', '-COMP:WH'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'LANG:FI', '-COMP:N', 'LF:order', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', '-COMP:T/fin', 'ARG', 'PF:kaske', 'ASP', '-COMP:v', 'SEM:external', 'SPEC:P', 'V', 'SPEC:TO/inf', '!COMP:A/inf', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', 'PF:kello', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-COMP:WH', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', '-SPEC:uWH', '-COMP:V', 'COMP:R/D', 'COMP:R', 'LF:watch', 'COMP:P'}
kello0-         {'LANG:FI', 'PF:kello', '0', 'SPEC:D', 'LF:watch', '2SPEC'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PF:key', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LF:key', '-SPEC:N', '-SPEC:uWH', 'LANG:EN', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', 'PF:kirja', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-COMP:WH', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'LF:book', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', '-SPEC:uWH', '-COMP:V', '-SEM:directional', 'COMP:R', 'COMP:P', 'COMP:R/D'}
kohti           {'LANG:FI', 'TAIL:V', '-COMP:uWH', '-SPEC:T/fin', '-COMP:N', 'LF:towards', '-SPEC:FORCE', '-SPEC:v', '-SPEC:P', '-SPEC:V', 'P', 'PHI:NUM:_', 'COMP:D', '-SPEC:iR', 'PHI:PER:_', '-SPEC:ADV', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', 'ARG', 'PF:kohti', '-SPEC:Neg/fin', '-SPEC:C/fin', '-SPEC:N', '-SPEC:iWH', '-COMP:ADV', '-VAL', '-SPEC:C', 'PHI:DET:_', 'adjoinable', 'SPEC:*'}
koko            {'LANG:FI', '-SPEC:P', 'D', '-SPEC:T/fin', '-SPEC:V', '-SPEC:MA/lla', '-COMP:uR', 'TAIL:T', '!PROBE:N', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:N', 'PF:koko', 'OP', 'COMP:N', '-ARG', '-SPEC:C', 'adjoinable', '-SPEC:D', 'LF:all'}
kuka            ['LANG:FI']
kuka-           {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', 'PF:kuka', '-SPEC:C/fin', 'LF:who', '-SPEC:N', 'PHI', '-SPEC:uWH', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
kuorsaa-        {'LANG:FI', '-COMP:N', '-SPEC:FORCE', 'LF:snore', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:D', '-COMP:v', 'SPEC:P', 'V', 'SPEC:TO/inf', 'PF:kuorsaa', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P', '-COMP:WH'}
kuorsaamalla    ['LANG:FI']
lahella         {'LANG:FI', '-COMP:C/fin', '-COMP:uWH', '-SPEC:T/fin', 'PHI:NUM:_', '-SPEC:v', 'PHI:PER:_', 'P', 'COMP:D', '-SPEC:INF', 'ARG', '-SPEC:Neg/fin', 'VAL', '-SPEC:N', '-SPEC:iWH', 'INF', 'PF:lahella', 'COMP:v', 'PHI:DET:_', 'adjoinable', 'SPEC:*', '-COMP:N', '-SPEC:FORCE', '-SPEC:P', '-SPEC:V', '-SPEC:iR', '-SPEC:ADV', '!COMP:*', '!SPEC:*', '-COMP:T/fin', 'LF:near', '!SPEC:D', '-SPEC:C/fin', 'COMP:V', '-COMP:ADV', '-COMP:FORCE', '-SPEC:C'}
lahella         {'LANG:FI', '-COMP:uWH', '-COMP:N', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:P', '-SPEC:V', '-SPEC:v', 'PHI:NUM:_', 'PHI:PER:_', 'P', 'COMP:D', '-SPEC:iR', '-SPEC:ADV', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', 'ARG', 'LF:near', '-SPEC:Neg/fin', '-SPEC:C/fin', '-SPEC:N', '-SPEC:iWH', '-COMP:ADV', 'PF:lahella', '-VAL', '!COMP:D', '-SPEC:C', 'PHI:DET:_', 'adjoinable', 'SPEC:*'}
lahella_1       {'LANG:FI', '-COMP:uWH', '-COMP:N', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:P', '-SPEC:V', '-SPEC:v', 'PHI:NUM:_', 'PHI:PER:_', 'P', 'COMP:D', '-SPEC:iR', '-SPEC:ADV', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', 'ARG', 'LF:near', '-SPEC:Neg/fin', '-SPEC:C/fin', '-SPEC:N', '-SPEC:iWH', '-COMP:ADV', 'PF:lahella', '-VAL', '!COMP:D', '-SPEC:C', 'PHI:DET:_', 'adjoinable', 'SPEC:*'}
lahella_2       {'LANG:FI', '-COMP:C/fin', '-COMP:uWH', '-SPEC:T/fin', 'PHI:NUM:_', '-SPEC:v', 'PHI:PER:_', 'P', 'COMP:D', '-SPEC:INF', 'ARG', '-SPEC:Neg/fin', 'VAL', '-SPEC:N', '-SPEC:iWH', 'INF', 'PF:lahella', 'COMP:v', 'PHI:DET:_', 'adjoinable', 'SPEC:*', '-COMP:N', '-SPEC:FORCE', '-SPEC:P', '-SPEC:V', '-SPEC:iR', '-SPEC:ADV', '!COMP:*', '!SPEC:*', '-COMP:T/fin', 'LF:near', '!SPEC:D', '-SPEC:C/fin', 'COMP:V', '-COMP:ADV', '-COMP:FORCE', '-SPEC:C'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'LANG:FI', 'PF:lahtea', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:D', 'CLASS:INTR', '-COMP:v', 'LF:leave', 'COMP:PP', 'SPEC:D', '-COMP:MA/inf', 'SPEC:P', 'V', 'SPEC:TO/inf', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
lavano          ['LANG:IT']
lava-           {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', 'LF:wash', '!COMP:*', 'PF:lava', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'LANG:IT', 'SPEC:P', 'V', 'SPEC:TO/inf', 'PHI:GEN:_', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-SPEC:P', 'D', '-SPEC:T/fin', '-SPEC:V', 'LF:D', '-SPEC:MA/lla', '-COMP:uR', '!PROBE:N', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', '-COMP:D', '-SPEC:Neg/fin', 'LANG:IT', '-SPEC:N', 'OP', 'COMP:N', 'PF:le', '-ARG', '-SPEC:C', 'adjoinable', '-SPEC:D'}
leaves          ['LANG:EN']
leave           {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:ADV', 'PHI:PER:_', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', '!SPEC:D', 'LF:leave', 'SPEC:P', 'V', 'SPEC:TO/inf', 'LANG:EN', 'PHI:GEN:_', '-VAL', '-COMP:V', 'PF:leave', 'COMP:P'}
leave-          {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:ADV', 'PHI:PER:_', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', '!SPEC:D', 'LF:leave', 'SPEC:P', 'V', 'SPEC:TO/inf', 'LANG:EN', 'PHI:GEN:_', '-VAL', '-COMP:V', 'PF:leave', 'COMP:P'}
like-           {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', 'PF:like', 'LF:like', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'SPEC:P', 'V', 'SPEC:TO/inf', 'LANG:EN', 'PHI:GEN:_', '-VAL', '!COMP:D', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
likes           ['LANG:EN']
like            {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', 'PF:like', 'LF:like', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'SPEC:P', 'V', 'SPEC:TO/inf', 'LANG:EN', 'PHI:GEN:_', '-VAL', '!COMP:D', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
little          ['LANG:EN']
little-         {'SPEC:D', 'LANG:EN', 'LF:little', '0', 'PF:little-', '2SPEC'}
lle             {'LANG:FI', '-COMP:uWH', '-COMP:N', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:P', '-SPEC:V', '-SPEC:v', 'PHI:NUM:_', 'PHI:PER:_', 'P', 'COMP:D', '-SPEC:iR', '-SPEC:ADV', '+SEM:directional', 'PF:P(lle)', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', 'ARG', '-SPEC:Neg/fin', '-SPEC:C/fin', '-SPEC:N', '-SPEC:iWH', '-COMP:ADV', 'LF:for', '-VAL', '-SPEC:C', 'TAIL:V,+SEM:directional', 'PHI:DET:_', 'adjoinable', '-SPEC:*'}
lla             {'LANG:FI', '-COMP:uWH', '-COMP:N', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:P', '-SPEC:V', '-SPEC:v', 'PHI:NUM:_', 'PHI:PER:_', 'P', 'PHI:DET:_', 'COMP:D', '-SPEC:iR', 'TAIL:T', '-SPEC:ADV', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', 'ARG', '-SPEC:Neg/fin', '-SPEC:C/fin', '-SPEC:N', '-SPEC:iWH', '-COMP:ADV', 'TAIL:*V', '-VAL', '-SPEC:C', 'LF:by', 'adjoinable', 'SPEC:*', 'PF:P(lla)'}
Luisa           ['LANG:IT']
Luisa-          {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', 'PF:Luisa', '-SPEC:T/fin', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:WH', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'LF:Luisa', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LANG:IT', '-SPEC:N', '-SPEC:uWH', '-COMP:V', '-SEM:directional', 'COMP:R', 'COMP:P', 'COMP:R/D'}
lukemalla       ['LANG:FI']
luke-           {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', 'LF:read', '!COMP:*', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'PF:luke', 'SPEC:P', 'V', 'SPEC:TO/inf', 'CLASS:TR', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', 'PF:loyta-', '!COMP:*', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'LF:find', 'SPEC:P', 'V', 'ASP:BOUNDED', 'SPEC:TO/inf', 'CLASS:TR', '-VAL', '!COMP:D', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
Mary            ['LANG:EN']
Mary-           {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:WH', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', 'LF:Mary', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-adjoinable', '-SPEC:N', '-SPEC:uWH', 'LANG:EN', '-COMP:V', '-SEM:directional', 'COMP:R', 'COMP:P', 'PF:Mary', 'COMP:R/D'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'LANG:FI', '-COMP:C/fin', '-SEM:directional', '-SPEC:T/fin', '-SPEC:P', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-COMP:WH', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-adjoinable', '-SPEC:N', 'PF:Merja', '-SPEC:uWH', '-COMP:V', 'LF:Merja', 'COMP:R', 'COMP:P', 'COMP:R/D'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'LANG:FI', '-SPEC:FORCE', '-SPEC:T/fin', '-SPEC:N', 'MA/inf', 'SPEC:*', 'TAIL:T', 'COMP:v', 'ADV', 'adjoinable', 'LF:by', 'PF:malla', '-SPEC:Neg/fin'}
meren           ['LANG:FI']
mere-           {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', 'PF:meri', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', '-SPEC:uWH', '-COMP:V', 'LF:ocean', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
mies            {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'PF:man', '-SPEC:N', 'LF:man', '-SPEC:uWH', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
mistake         {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'LF:mistake', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', 'PF:mistake', '-SPEC:uWH', 'LANG:EN', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PF:mika-', 'LF:what', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', '-SPEC:uWH', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'LANGN:EN', '-COMP:P', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', '+SEM:directional', '!COMP:*', 'PF:move', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'SPEC:P', 'V', 'SPEC:TO/inf', 'CLASS:TR', 'LF:move', '-VAL', '-COMP:V', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P'}
mukavasti       ['LANG:EN']
mukava-         {'LANG:FI', 'LF:comfortably', '0', 'SPEC:D', 'PF:mukavasti', '2SPEC'}
must            {'-SPEC:FORCE', '-SPEC:T/fin', 'LF:must', 'COMP:T/prt', '-SPEC:V', '-SPEC:v', 'PHI:NUM:_', 'PHI:PER:_', 'FIN', 'MODAL', '-COMP:INF', '!COMP:*', '-COMP:T/fin', 'T/fin', 'ARG', '!PROBE:V', '!SPEC:D', 'T', 'COMP:Neg', '-SPEC:C/fin', 'VAL', 'PF:must', '-SPEC:TO/inf', '-SPEC:N', 'SPEC:D', 'COMP:V', '-SPEC:Neg', 'SPEC:TO/inf', 'LANG:EN', 'PHI:GEN:_', 'COMP:v', 'PHI:DET:_', 'SPEC:*'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', 'PF:myy', '!COMP:*', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'LF:sell', 'SPEC:P', 'V', 'ASP:BOUNDED', 'SPEC:TO/inf', 'CLASS:TR', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
naki            ['LANG:FI']
nake-           {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', '!COMP:*', '-COMP:T/fin', 'LF:see', 'ARG', 'ASP', '-COMP:v', '-COMP:MA/inf', '-COMP:ESSA/inf', 'SPEC:P', 'PF:nake', 'V', 'ASP:BOUNDED', 'SPEC:TO/inf', 'CLASS:TR', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
nayttaa         ['LANG:FI']
naytta-         {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'LF:seem', 'SPEC:ADV', '!COMP:VA/inf', '-COMP:T/fin', 'ASP', '-COMP:v', '!SPEC:D', 'PF:naytta', 'VAL', 'SPEC:P', 'V', '-ARG', 'SPEC:TO/inf', '-COMP:V', 'SEM:internal', 'COMP:P'}
ndo             {'-COMP:C/fin', 'VAL', '-SPEC:T/fin', '-SPEC:V', 'LF:ing', 'COMP:V', 'PF:PRG', 'INF', 'PRG', 'LANG:EN', '-COMP:FORCE', 'COMP:v', '!COMP:*', '-COMP:T/fin', '?ARG'}
ne              {'LANG:FI', 'PF:ne', 'PHI:NUM:PL', 'D', '-SPEC:P', '-SPEC:T/fin', '-SPEC:V', '-SPEC:MA/lla', '-COMP:uR', '!PROBE:N', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', 'LF:those', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:N', 'OP', 'COMP:N', 'PHI:PER:3', '-ARG', '-SPEC:C', 'adjoinable', '-SPEC:D'}
niiden          ['LANG:EN']
nen             {'LANG:FI', 'COMP:0', 'TAIL:D', '-SPEC:A', 'LF:ing', 'SPEC:*', 'PF:a', 'adjoinable', 'A', '-SPEC:D'}
not             {'-SPEC:T/fin', 'PHI:NUM:_', 'PF:not', '-COMP:D', 'PHI:PER:_', 'POL:NEG', 'LF:not', '-COMP:FIN', 'Neg', 'LANG:EN', 'PHI:GEN:_', '-VAL', '!COMP:*', 'PHI:DET:_', 'ARG', '-COMP:C', 'SPEC:*'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:T', 'SPEC:ADV', 'PHI:PER:_', '-COMP:Neg/fin', '-COMP:T/fin', 'ARG', 'ASP', 'CLASS:INTR', 'PF:nukku', '-COMP:v', '-COMP:D', '-COMP:MA/inf', 'SPEC:D', 'SPEC:P', 'V', 'SPEC:TO/inf', '-VAL', 'LF:sleep', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PF:omaisuuden', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', 'LF:possessions', '-SPEC:uWH', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
operatoria      ['LANG:IT']
operatoria-     {'LANG:IT', 'SPEC:D', '0', 'LF:operation', '2SPEC', 'PF:operatoria'}
ostaa           ['LANG:FI']
osta-           {'LANG:FI', '-COMP:N', '-SPEC:FORCE', 'LF:buy', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', '!COMP:*', '-COMP:T/fin', 'PF:osta', 'ARG', 'ASP', '-COMP:v', 'SPEC:P', 'V', 'ASP:BOUNDED', 'SPEC:TO/inf', 'CLASS:TR', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:WH', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'SEM:nonreferential', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', 'LF:day', '-SPEC:uWH', '-COMP:V', 'PF:paiva', 'COMP:R', 'COMP:P', 'COMP:R/D'}
Pariisia        ['LANG:FI']
Pariisi-        {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', 'PF:Pariisi', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', 'LF:Paris', '-SPEC:uWH', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:WH', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'LF:Pekka', 'PF:Pekka', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', '-SPEC:uWH', '-COMP:V', '-SEM:directional', 'COMP:R', 'COMP:P', 'COMP:R/D'}
pelottaa        ['LANG:FI']
pelkaa-         {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:P', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', '!COMP:*', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'SPEC:P', 'V', 'SPEC:TO/inf', 'CLASS:TR', 'LF:fear', '-VAL', 'PF:pelkaa', '-COMP:V', 'COMP:P'}
persuades       ['LANG:EN']
persuade-       {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', '!COMP:*', '-COMP:T/fin', 'COMP:TO/inf', 'ARG', 'ASP', '-COMP:v', 'SEM:external', 'LF:persuade', 'SPEC:P', 'V', 'SPEC:TO/inf', 'LANG:EN', 'PHI:GEN:_', '-VAL', 'PF:persuade', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
peruuntui       ['LANG:FI']
peruuntu-       {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', 'LF:cancelled', '-COMP:T/fin', 'ARG', 'ASP', 'PF:peruuntui', '-COMP:v', 'SPEC:D', 'SPEC:P', 'V', 'SPEC:TO/inf', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', 'LF:wash', 'PF:pese', '!COMP:*', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'SPEC:P', 'V', 'ASP:BOUNDED', 'SPEC:TO/inf', 'CLASS:TR', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
pese-           {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', 'LF:wash', 'PF:pese', '!COMP:*', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'SPEC:P', 'V', 'SPEC:TO/inf', 'CLASS:TR', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
petardi         {'PF:petardi', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'LF:firecrackers', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LANG:IT', '-SPEC:N', '-SPEC:uWH', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
pieni           ['LANG:FI']
pieni-          {'LANG:FI', 'LF:small', '0', 'SPEC:D', 'PF:pieni-', '2SPEC'}
poikien         ['LANG:FI']
poika-          {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:WH', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PF:poika', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', '-SPEC:uWH', '-COMP:V', 'COMP:R/D', 'COMP:R', 'LF:boy', 'COMP:P'}
puhelinta       ['LANG:FI']
puhelin-        {'LANG:FI', 'SPEC:D', '0', 'LF:phone', '2SPEC', 'PF:puhelin'}
punainen        ['LANG:FI']
puna-           {'LANG:FI', 'LF:red', '0', 'SPEC:D', 'PF:puna-', '2SPEC'}
presupposto     {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LANG:IT', 'PF:presupposto', '-SPEC:N', 'LF:presupposition', '-SPEC:uWH', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
primary         {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'PF:primary', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', 'LF:nurse', 'LANG:IT', '-SPEC:C/fin', '-SPEC:N', '-SPEC:uWH', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
promises        ['LANG:EN']
promise-        {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'PF:promise', 'SPEC:D', 'SPEC:P', 'V', 'SPEC:TO/inf', 'LANG:EN', 'PHI:GEN:_', '-VAL', 'LF:promise', '-COMP:V', 'SEM:internal', 'COMP:P'}
pyytaa          ['LANG:FI']
pyyta-          {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'LF:ask', 'SPEC:ADV', 'PHI:PER:_', '-COMP:T/fin', 'PF:pyyda', 'ARG', 'ASP', '-COMP:v', 'SEM:external', 'SPEC:P', 'V', 'SPEC:TO/inf', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
raukesi         ['LANG:FI']
raukea-         {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', 'LF:terminate', 'PF:raukea', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'SPEC:P', 'V', 'SPEC:TO/inf', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
red             ['LANG:EN']
red-            {'LANG:EN', '2SPEC', '0', 'SPEC:D', 'LF:red', 'PF:red'}
saavuttaa       ['LANG:FI']
saavutta-       {'LANG:FI', '-COMP:N', '-SPEC:FORCE', 'PF:saavutta-', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', 'LF:reach', '!COMP:*', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'SPEC:P', 'V', 'ASP:BOUNDED', 'SPEC:TO/inf', 'CLASS:TR', '-VAL', '!COMP:D', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', 'COMP:VA/inf', 'LF:say', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'SPEC:D', 'SPEC:P', 'V', 'SPEC:TO/inf', 'PF:sano-', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P', 'COMP:FORCE'}
said            ['LANG:EN']
say'            {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', '!COMP:FORCE', 'LF:say', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'SPEC:D', 'SPEC:P', 'PF:say', 'V', 'SPEC:TO/inf', 'LANG:EN', 'PHI:GEN:_', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
say-            {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', '!COMP:FORCE', 'LF:say', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'SPEC:D', 'SPEC:P', 'PF:say', 'V', 'SPEC:TO/inf', 'LANG:EN', 'PHI:GEN:_', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
sala            ['LANG:IT']
sala-           {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'LF:room', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LANG:IT', '-SPEC:N', '-SPEC:uWH', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', 'PF:sala', '-COMP:WH'}
scoppiati       ['LANG:IT']
scoppia-        {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'LF:explode', 'LANG:IT', 'PF:scoppia', 'SPEC:P', 'V', 'SPEC:TO/inf', 'PHI:GEN:_', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
sen             {'LANG:FI', '-SPEC:P', 'D', '-SPEC:T/fin', '-SPEC:V', 'TAIL:PHI', '-SPEC:MA/lla', '-COMP:uR', '!PROBE:N', 'TAIL:*POL:NEG', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', 'PF:sen', 'TAIL:ASP', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:N', 'OP', 'COMP:N', 'LF:the/that', '-ARG', '-SPEC:C', 'adjoinable', '-SPEC:D'}
se'             {'LANG:FI', '-SPEC:P', 'D', '-SPEC:T/fin', '-SPEC:V', '-SPEC:MA/lla', '-COMP:uR', '!PROBE:N', 'PF:se', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:N', 'OP', 'COMP:N', 'LF:the/that', '-ARG', '-SPEC:C', 'adjoinable', '-SPEC:D'}
se              {'LANG:FI', '-SPEC:P', 'D', '-SPEC:T/fin', '-SPEC:V', '-SPEC:MA/lla', '-COMP:uR', '!PROBE:N', 'PF:se', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:N', 'OP', 'COMP:N', 'LF:the/that', '-ARG', '-SPEC:C', 'adjoinable', '-SPEC:D'}
se              ['LANG:FI']
sentenza        {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:A', 'LF:sentence', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LANG:IT', '-SPEC:N', 'PF:sentenza', '-SPEC:uWH', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
Seine           ['LANG:EN']
Seine-          {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', 'PF:Seine', '-SPEC:uWH', 'LANG:EN', '-COMP:V', 'COMP:R/D', 'LF:Seine', 'COMP:R', 'COMP:P', '-COMP:WH'}
sembrano        ['LANG:IT']
sembra-         {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'LF:seem', 'SPEC:ADV', 'PF:sembra', '-ASP', '-COMP:T/fin', '-COMP:D', '-COMP:v', 'SPEC:D', 'SPEC:P', '!COMP:ARE/inf', 'V', '-ARG', 'LANG:EN', 'SPEC:TO/inf', '-VAL', '-COMP:V', 'COMP:P'}
sleeps          ['LANG:EN']
sleep           {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', '-COMP:T/fin', 'ARG', 'ASP', 'CLASS:INTR', '-COMP:v', '-COMP:D', '-COMP:MA/inf', 'SPEC:D', 'SPEC:P', 'V', 'PF:sleep', 'LANG:EN', 'SPEC:TO/inf', '-VAL', 'LF:sleep', '-COMP:V', 'PHI:DET:_', 'PHI:GEN:_', 'COMP:P'}
sleep-          {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', '-COMP:T/fin', 'ARG', 'ASP', 'CLASS:INTR', '-COMP:v', '-COMP:D', '-COMP:MA/inf', 'SPEC:D', 'SPEC:P', 'V', 'PF:sleep', 'LANG:EN', 'SPEC:TO/inf', '-VAL', 'LF:sleep', '-COMP:V', 'PHI:DET:_', 'PHI:GEN:_', 'COMP:P'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', 'LF:agreement', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'PF:sopimus', '-SPEC:N', '-SPEC:uWH', '!COMP:A/inf', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
spinge          ['LANG:IT']
spinge-         {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:spinge', '-COMP:P', 'SPEC:ADV', 'PHI:PER:_', 'LF:push', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'LANG:IT', 'SPEC:P', 'V', 'SPEC:TO/inf', 'PHI:GEN:_', '-VAL', '!COMP:D', '-COMP:V', 'PHI:DET:_'}
ssa             {'LANG:FI', 'TAIL:V', '-COMP:uWH', '-SPEC:T/fin', '-COMP:N', '-SPEC:FORCE', '-SPEC:P', '-SPEC:v', '-SPEC:V', 'PHI:NUM:_', 'P', 'PHI:PER:_', 'COMP:D', '-SPEC:iR', '-SPEC:ADV', '-SPEC:INF', '!COMP:*', 'COMP:n/MA', '-COMP:T/fin', 'ARG', '-SPEC:Neg/fin', '-SPEC:C/fin', 'LF:in', 'PF:ssa', '-SPEC:N', '-SPEC:iWH', '-COMP:ADV', '-VAL', '-SPEC:C', 'PHI:DET:_', 'adjoinable', 'SPEC:*'}
stanno          ['LANG:IT']
sta-            {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:ADV', 'PHI:PER:_', '-ASP', '-COMP:T/fin', 'ARG', 'COMP:PRG', '-COMP:v', 'PF:sta', 'SPEC:D', 'SPEC:P', 'LF:stay', 'V', 'SPEC:TO/inf', 'LANG:EN', 'PHI:GEN:_', '-VAL', '-COMP:V', 'SEM:internal', 'COMP:P'}
sti             {'LANG:FI', '-SPEC:FORCE', '-SPEC:T/fin', 'PF:sti', '-SPEC:N', 'SPEC:*', 'TAIL:T', '-ARG', '!COMP:*', 'ADV', 'adjoinable', 'LF:by', '-SPEC:Neg/fin'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PF:sukka-', 'LF:socks', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', '-SPEC:uWH', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
talo            {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', 'LF:house', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', 'PF:talo', '-SPEC:C/fin', '-SPEC:N', '-SPEC:uWH', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
tama            ['LANG:EN']
tama-           {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', 'PHI', '-SPEC:uWH', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', 'PF:tama', 'LF:this', '-COMP:WH'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'LF:must', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', 'FIN', 'MODAL', '-ASP', '-COMP:T/fin', 'ARG', '-COMP:v', 'SPEC:P', 'V', 'PF:taytyy', 'SPEC:TO/inf', '!COMP:A/inf', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P', 'SPEC:*'}
teki            ['LANG:FI']
teke-           {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', '!COMP:*', 'LF:make', 'PF:teke', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'SPEC:P', '-COMP:A/inf', 'V', 'ASP:BOUNDED', 'SPEC:TO/inf', 'CLASS:TR', '-VAL', '!COMP:D', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
that            {'COMP:T/fin', '!PROBE:T/fin', 'FIN', 'LF:that', '-ARG', 'LANG:EN', 'PF:that', '!COMP:*', '-VAL', 'FORCE', '-SPEC:*', 'COMP:C/fin'}
the             {'-SPEC:P', 'D', '-SPEC:T/fin', '-SPEC:V', '-SPEC:MA/lla', 'PF:the', '-COMP:uR', '!PROBE:N', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:N', 'OP', 'COMP:N', 'PHI:DEF:DEF', 'LF:the', 'LANG:EN', '-ARG', '-SPEC:C', 'adjoinable', '-SPEC:D'}
to              {'-COMP:N', '-COMP:uWH', '-SPEC:FORCE', '-SPEC:T/fin', '-SPEC:P', '-SPEC:V', 'PHI:NUM:_', '-SPEC:v', 'PHI:PER:_', 'P', 'LF:to', 'COMP:D', '-float', '-SPEC:iR', '-SPEC:ADV', '+SEM:directional', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', 'ARG', '-SPEC:Neg/fin', '-SPEC:C/fin', 'PF:to', '-SPEC:N', '-SPEC:iWH', '-COMP:ADV', 'LANG:EN', 'PHI:GEN:_', '-VAL', '-SPEC:C', 'TAIL:V,+SEM:directional', 'PHI:DET:_', 'adjoinable', '-SPEC:*'}
to_inf          {'-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:v', 'TO/inf', '!COMP:*', '-COMP:T/fin', 'COMP:V', 'PF:TO/inf', 'INF', 'LANG:EN', '-COMP:FORCE', '-VAL', 'COMP:v', 'LF:TO/inf', 'adjoinable', '?ARG'}
towards         {'-COMP:N', 'TAIL:V', 'PF:towards', '-COMP:uWH', '-SPEC:T/fin', 'LF:towards', '-SPEC:FORCE', '-SPEC:v', '-SPEC:P', '-SPEC:V', 'P', 'PHI:NUM:_', 'COMP:D', '-float', '-SPEC:iR', 'PHI:PER:_', '-SPEC:ADV', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', 'ARG', '-SPEC:Neg/fin', '-SPEC:C/fin', '-SPEC:N', '-SPEC:iWH', '-COMP:ADV', 'LANG:EN', 'PHI:GEN:_', '-VAL', '-SPEC:C', 'PHI:DET:_', 'adjoinable', '-SPEC:*'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'LF:nudge', '-COMP:P', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', '!COMP:*', '-COMP:T/fin', 'PF:tonaise', 'ARG', 'ASP', '-COMP:v', 'SPEC:P', 'V', 'SPEC:TO/inf', 'CLASS:TR', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
tta             {'LANG:FI', '-COMP:uWH', '-COMP:N', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:P', '-SPEC:V', '-SPEC:v', 'PHI:NUM:_', 'PHI:PER:_', 'P', 'PF:tta', 'COMP:D', '-SPEC:iR', '-SPEC:ADV', '-SPEC:INF', '!COMP:*', 'COMP:n/MA', 'ADV', 'ARG', '-COMP:T/fin', '-SPEC:Neg/fin', '-SPEC:C/fin', 'LF:without', '-SPEC:N', '-SPEC:iWH', '-COMP:ADV', '-VAL', '-SPEC:C', 'PHI:DET:_', 'adjoinable', 'SPEC:*'}
tries           ['LANG:EN']
try-            {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:ADV', 'PHI:PER:_', 'PF:try', '-COMP:T/fin', 'ARG', 'ASP', '!COMP:TO/inf', '-COMP:v', '!COMP:-ARG', 'SPEC:D', 'SPEC:P', 'V', 'LF:try', 'LANG:EN', 'SPEC:TO/inf', '-VAL', '-COMP:V', 'PHI:GEN:_', 'SEM:internal', 'COMP:P'}
verifiche       {'-COMP:C/fin', '-SPEC:P', 'PF:verifiche', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LANG:IT', 'LF:verification', '-SPEC:N', '-SPEC:uWH', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'LANG:FI', '-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', 'PF:virtaa', '!COMP:P', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:D', '-COMP:v', 'SPEC:D', 'SPEC:P', 'V', 'LF:flow', 'SPEC:TO/inf', '-VAL', '-COMP:V', 'PHI:DET:_', 'COMP:P'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:ADV', 'PHI:PER:_', 'PF:volu', '!COMP:*', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'LF:want', 'SPEC:P', 'V', 'SPEC:TO/inf', 'LANG:EN', 'PHI:GEN:_', '-VAL', '-COMP:V', 'SEM:internal', 'COMP:P', '-SPEC:*'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', '!COMP:*', 'PF:voitta', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'SEM:achievement', 'SPEC:P', 'V', 'ASP:BOUNDED', 'SPEC:TO/inf', 'LF:win', 'CLASS:TR', 'LANG:EN', '-VAL', '-COMP:V', 'PHI:DET:_', 'PHI:GEN:_', 'COMP:P'}
wants           ['LANG:EN']
want-           {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PHI:PER:_', 'COMP:D', '!COMP:*', '-COMP:T/fin', 'COMP:TO/inf', 'ARG', 'PF:want', 'ASP', '-COMP:v', '-SPEC:TO/inf', 'LF:want', 'SPEC:P', 'V', 'CLASS:TR', 'LANG:EN', '-COMP:V', '-VAL', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P'}
what            ['LANG:EN']
what-           {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:A', 'PF:what', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', 'LF:what', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', '-SPEC:uWH', '-COMP:*', 'LANG:EN', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
which           {'-SPEC:P', 'D', '-SPEC:T/fin', '-SPEC:V', 'OP:WH', '-SPEC:MA/lla', '-COMP:uR', '!PROBE:N', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', 'LF:which', '-COMP:D', '-SPEC:Neg/fin', 'PF:which', '-SPEC:N', 'OP', 'COMP:N', '-ARG', 'LANG:EN', '-SPEC:C', 'adjoinable', '-SPEC:D'}
who             ['LANG:EN']
who-            {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', 'PF:who', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LF:who', '-SPEC:N', '-SPEC:uWH', '-COMP:*', 'LANG:EN', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
whether         {'OP:Q', 'OP:WH', 'FIN', '!COMP:*', 'Q', 'PF:whether', 'COMP:C/fin', 'COMP:T/fin', 'OP', '!PROBE:T/fin', '-ARG', 'LANG:EN', '-VAL', 'FORCE', 'LF:whether', '-SPEC:*'}
yrittaa         ['LANG:FI']
yritta-         {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:ADV', 'PHI:PER:_', 'PF:yritta', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', '!COMP:-ARG', 'SPEC:D', 'SPEC:P', 'V', 'LF:try', 'LANG:EN', 'SPEC:TO/inf', '!COMP:A/inf', '-VAL', '-COMP:V', 'SEM:internal', 'PHI:GEN:_', 'COMP:P'}
mina            ['LANG:EN']
mina-           {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', '-COMP:D', '-COMP:v', '-COMP:AUX', 'LF:I', '-SPEC:C/fin', 'PF:mina', '-SPEC:N', '-SPEC:uWH', '-COMP:*', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
sina            ['LANG:EN']
sina-           {'LANG:FI', 'PF:sina', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:P', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', 'LF:you', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', '-SPEC:uWH', '-COMP:*', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
han             ['LANG:EN']
han-            {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', 'PF:han', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', '-SPEC:uWH', '-COMP:*', 'LF:s/he', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:A', 'PF:me', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LF:we', '-SPEC:N', '-SPEC:uWH', '-COMP:*', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
te              ['LANG:EN']
te-             {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', 'PF:te', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', 'LF:you', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', '-SPEC:uWH', '-COMP:*', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'LANG:FI', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', 'PF:he', '-SPEC:uWH', '-COMP:*', 'LF:they', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
se-             {'LANG:FI', '-SPEC:P', 'D', '-SPEC:T/fin', '-SPEC:V', '-SPEC:MA/lla', '-COMP:uR', '!PROBE:N', 'PF:se', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', '-COMP:D', '-SPEC:Neg/fin', 'LF:it/that', '-SPEC:N', 'OP', 'COMP:N', '-ARG', '-SPEC:C', 'adjoinable', '-SPEC:D'}
I               ['LANG:EN']
I-              {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', '-COMP:D', '-COMP:v', '-COMP:AUX', 'LF:I', '-SPEC:C/fin', '-SPEC:N', 'PF:I', '-SPEC:uWH', '-COMP:*', 'LANG:EN', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
you             ['LANG:EN']
you-            {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', 'LF:you', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', 'PF:you', '-SPEC:uWH', '-COMP:*', 'LANG:EN', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
he              ['LANG:EN']
he-             {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LF:he', '-SPEC:N', 'PF:he', '-SPEC:uWH', '-COMP:*', 'LANG:EN', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
she             ['LANG:EN']
she-            {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', 'PF:she', 'LF:she', 'LANG:EN', '-SPEC:uWH', '-COMP:*', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
we              ['LANG:EN']
we-             {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', 'PF:we', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LF:we', '-SPEC:N', '-SPEC:uWH', '-COMP:*', 'LANG:EN', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
you_pl          ['LANG:EN']
you_pl-         {'PF:you_pl', '-COMP:C/fin', '-SPEC:P', '-SPEC:T/fin', '-SPEC:FORCE', 'N', '-COMP:N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', 'PHI', '-SPEC:uWH', 'LANG:EN', 'LF:you_pl', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
they            ['LANG:EN']
they-           {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:WH', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', '-SPEC:uWH', '-COMP:*', 'LANG:EN', 'LF:they', '-COMP:V', 'PF:they', 'COMP:R', 'COMP:P', 'COMP:R/D'}
it              ['LANG:EN']
it-             {'-SPEC:P', 'D', '-SPEC:T/fin', '-SPEC:V', '-SPEC:MA/lla', 'PF:it', '-COMP:uR', '!PROBE:N', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', '-COMP:D', '-SPEC:Neg/fin', 'LF:it/that', '-SPEC:N', 'OP', 'COMP:N', '-ARG', 'LANG:EN', '-SPEC:C', 'adjoinable', '-SPEC:D'}
io              ['LANG:EN']
io-             {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', '-COMP:D', '-COMP:v', '-COMP:AUX', 'LF:I', 'LANG:IT', '-SPEC:C/fin', '-SPEC:N', 'PF:io', '-SPEC:uWH', '-COMP:*', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
tu              ['LANG:EN']
tu-             {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', 'PF:tu', '-SPEC:INF', 'PHI_N', 'LF:you', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LANG:IT', '-SPEC:N', '-SPEC:uWH', '-COMP:*', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
lui             ['LANG:EN']
lui-            {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', 'PF:lui', '-SPEC:INF', 'PHI_N', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LF:he', 'LANG:IT', '-SPEC:N', '-SPEC:uWH', '-COMP:*', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
lei             ['LANG:EN']
lei-            {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LANG:IT', '-SPEC:N', 'PF:lei', '-SPEC:uWH', 'LF:she', '-COMP:*', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
noi             ['LANG:EN']
noi-            {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LANG:IT', 'LF:we', '-SPEC:N', 'COMP:R', '-SPEC:uWH', '-COMP:*', '-COMP:V', 'COMP:R/D', 'PF:noi', 'COMP:P', '-COMP:WH'}
voi             ['LANG:EN']
voi-            {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LANG:IT', '-SPEC:N', '-SPEC:uWH', 'PF:voi', 'LF:you_pl', '-COMP:*', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
loro            ['LANG:EN']
loro-           {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', '-COMP:D', '-COMP:v', 'PF:loro', '-COMP:AUX', '-SPEC:C/fin', 'LANG:IT', '-SPEC:N', '-SPEC:uWH', '-COMP:*', 'LF:they', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
mi              ['LANG:EN']
mi-             {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LANG:IT', '-SPEC:N', 'CL', '-SPEC:uWH', '-COMP:*', 'LF:me', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', 'PF:mi(cl)', '-COMP:WH'}
la              ['LANG:EN']
la-             {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', 'LF:her', '-SPEC:V', 'SPEC:A', 'PF:la(cl)', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LANG:IT', '-SPEC:N', 'CL', '-SPEC:uWH', '-COMP:*', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
lo              ['LANG:EN']
lo-             {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:WH', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LANG:IT', '-SPEC:N', 'CL', '-SPEC:uWH', '-COMP:*', 'LF:him', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', 'PF:lo(cl)'}
si              ['LANG:EN']
si-             {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:A', 'PF:si(cl)', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', 'CAL:CL', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LANG:IT', '-SPEC:N', '-SPEC:uWH', 'LF:3sg', '-COMP:*', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'PHI_N', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', 'LANG:IT', 'PF:ci', '-SPEC:N', 'LF:there', '-SPEC:uWH', '-COMP:*', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
[-n]            {'LANG:FI', 'PHI:PER:1', 'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'PHI:HUM:HUM', 'PHI'}
[-t]            {'LANG:FI', 'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'PHI:HUM:HUM', 'PHI', 'PHI:PER:2'}
[-V]            {'LANG:FI', 'PHI:PER:3', 'PHI:NUM:SG', 'inflectional', 'PHI'}
[-mme]          {'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:1', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI'}
[-mme]          {'LANG:FI', 'PHI:NUM:PL', 'PHI:DET:DEF', 'PHI:PER:1', 'inflectional', 'PHI:HUM:HUM'}
[-tte]          {'LANG:FI', 'PHI:NUM:PL', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI', 'PHI:PER:2'}
[-vat]          {'LANG:FI', 'PHI:PER:3', 'PHI:NUM:PL', 'inflectional', 'PHI'}
[-ni]           {'LANG:FI', 'PHI:PER:1', 'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'PHI:HUM:HUM', 'PHI'}
[-si]           {'LANG:FI', 'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'PHI:HUM:HUM', 'PHI', 'PHI:PER:2'}
[-nsa]          {'LANG:FI', 'PHI:PER:3', 'PHI:NUM:SG', 'inflectional', 'PHI'}
[-an]           {'LANG:FI', 'PHI:PER:3', 'inflectional', 'PHI'}
[-nne]          {'LANG:FI', 'PHI:NUM:PL', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI:PER:2'}
[-s]            {'PHI:GEN:M', 'PHI:PER:3', 'LANG:EN', 'PHI:NUM:SG', 'inflectional', 'PHI:GEN:F', 'PHI'}
[-0]            {'PHI:NUM:PL', 'PHI:PER:1', 'PHI:NUM:SG', 'PHI:DET:DEF', 'inflectional', 'PHI:GEN:N', 'PHI', 'PHI:PER:2', 'PHI:PER:3', 'LANG:EN'}
[-o]            {'LANG:IT', 'PHI:PER:1', 'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'PHI:HUM:HUM', 'PHI'}
[-i]            {'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'PHI:HUM:HUM', 'PHI', 'PHI:PER:2'}
[-a]            {'PHI:PER:3', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'PHI'}
[-e]            {'PHI:PER:3', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'inflectional', 'PHI'}
[-iamo]         {'PHI:NUM:PL', 'LANG:IT', 'PHI:PER:1', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI'}
[-te]           {'PHI:NUM:PL', 'LANG:IT', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI', 'PHI:PER:2'}
[-no]           {'PHI:PER:3', 'PHI:NUM:PL', 'LANG:IT', 'PHI:DET:DEF', 'inflectional', 'PHI'}
[-nom]          {'TAIL:FIN,ARG,VAL', 'LANG:EN', 'inflectional', 'NOM', 'adjoinable'}
[-par]          {'PAR', 'LANG:FI', 'TAIL:ARG,-VAL', 'inflectional', 'adjoinable'}
[-gen]          {'GEN', 'LANG:EN', 'inflectional', '-float', 'TAIL:INF,ARG'}
gen             {'GEN', 'LANG:EN', 'inflectional', '-float', 'TAIL:INF,ARG'}
[-n_acc]        {'LANG:FI', 'TAIL:*POL:NEG', 'TAIL:PHI', 'n-ACC', 'inflectional', 'adjoinable', 'TAIL:ARG,ASP:BOUNDED'}
[-t_acc]        {'LANG:FI', 'TAIL:*POL:NEG', 't-ACC', 'inflectional', 'adjoinable', 'TAIL:ARG,ASP:BOUNDED'}
[-0_acc]        {'LANG:FI', 'TAIL:*POL:NEG', 'adjoinable', '0_ACC', 'inflectional', 'TAIL:*PHI', 'TAIL:ARG,ASP:BOUNDED'}
asp             {'ASP:BOUNDED', 'LANG:EN', 'inflectional'}
a'              {'LF:A', 'PF:a', 'LANG:X', 'a'}
b'              {'b', 'LF:B', 'PF:b', 'LANG:X'}
b''             {'b', 'LANG:EN', 'LF:B', 'PF:b', '-COMP:c'}
c''             {'LF:C', 'c', 'LANG:EN', 'SPEC:a', 'PF:c'}
c'              {'LF:C', 'c', 'LANG:X', 'PF:c'}
d'              {'PF:d', 'LF:D', 'LANG:', 'd'}
a''             ['LANG:EN']
x'              {'LANG:X', 'LF:X', 'PF:x', 'x'}
y'              {'y', 'PF:y', 'LF:Y', 'LANG:X'}
z'              {'LF:Z', 'z', 'PF:x', 'LANG:X'}
John'           {'LF:John', 'LANG:X', 'PF:John', "N'"}
admires'        {'PF:admires', "V'", 'LF:admires', 'LANG:X'}
admires''       {'-COMP:N', 'PF:admires', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:PER:_', '-COMP:T/fin', 'ARG', 'ASP', '-COMP:v', 'SPEC:D', 'SPEC:P', 'V', 'SPEC:TO/inf', 'LANG:EN', 'LF:admires', '-VAL', '-COMP:V', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P'}
Mary'           {'LANG:X', 'LF:mary', 'PF:Mary', "N'"}
T/fin           {'LF:T', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:T/prt', '-SPEC:V', 'PHI:NUM:_', '-SPEC:v', 'PHI:PER:_', 'FIN', '-COMP:INF', '!COMP:*', '-COMP:T/fin', 'T/fin', 'ARG', '!PROBE:V', '!SPEC:D', 'T', '-SPEC:C/fin', '-SPEC:TO/inf', 'VAL', '-SPEC:N', 'SPEC:D', 'COMP:V', '-SPEC:Neg', 'SPEC:TO/inf', 'LANG:EN', 'PHI:GEN:_', 'COMP:v', 'PHI:DET:_', 'PF:T', 'SPEC:*'}
v               {'LF:v', 'PHI:NUM:_', '-SPEC:N', 'COMP:V', 'SPEC:D', 'PHI:PER:_', 'v', 'ASP', 'LANG:EN', 'PHI:GEN:_', '!COMP:*', '-VAL', 'PHI:DET:_', 'ARG', '!PROBE:V', 'PF:v'}
C/fin           {'-COMP:C/fin', '-SPEC:T/fin', '-COMP:T/prt', 'COMP:Neg/fin', 'FIN', '!COMP:*', '!PROBE:FIN', 'C/fin', 'PF:C', '-SPEC:C/fin', 'VAL', '-SPEC:N', 'COMP:T/fin', '-ARG', 'LANG:EN', 'LF:C/fin', 'SPEC:*', 'C'}
T               {'LF:T', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:T/prt', '-SPEC:V', 'PHI:NUM:_', 'PHI:PER:_', 'FIN', '!COMP:*', 'ARG', '!PROBE:V', 'T', 'VAL', 'COMP:V', 'SPEC:D', '-SPEC:N', '-COMP:NEG', 'LANG:EN', 'PHI:GEN:_', 'COMP:v', 'PHI:DET:_', 'PF:T', 'SPEC:*'}
T/prt           {'-SPEC:FORCE', '-SPEC:T/fin', 'COMP:T/prt', '-SPEC:V', 'PHI:NUM:_', 'PHI:PER:_', 'FIN', 'COMP:D', '!COMP:*', 'ARG', '!PROBE:V', 'PF:T/prt', 'T', 'VAL', 'COMP:V', 'SPEC:D', 'LF:T/prt', '-SPEC:N', '-COMP:NEG', 'LANG:EN', 'PHI:GEN:_', 'COMP:v', 'PHI:DET:_', 'T/prt', 'SPEC:*'}
a0              {'COMP:0', 'TAIL:D', '-SPEC:A', '-adjoinable', 'LF:A', 'LANG:EN', 'adjoinable', 'PF:A', 'A', '-SPEC:D'}
n               {'-COMP:C/fin', 'COMP:0', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:PER:_', 'COMP:uR', '-SPEC:INF', 'ARG', '-COMP:D', 'VAL', '-SPEC:N', 'INF', '-SPEC:uWH', 'COMP:v', 'PHI:DET:_', 'COMP:R', 'COMP:R/D', 'SPEC:*', '-SPEC:P', '-SPEC:FORCE', '-COMP:N', '-SPEC:V', 'N', 'SPEC:A', '-COMP:A', '-SPEC:R', '-SPEC:ADV', '!COMP:*', '!SPEC:*', 'LF:n', '-COMP:v', '-COMP:AUX', '!SPEC:D', '-SPEC:C/fin', 'PF:n', 'COMP:V', 'n', 'LANG:EN', 'PHI:GEN:_', '-COMP:V', 'COMP:P', '-COMP:WH'}
impass          {'PF:impass', 'PHI:NUM:_', '-SPEC:N', 'COMP:V', 'SPEC:D', 'PHI:PER:_', 'v', 'LF:impass', 'LANG:EN', 'PHI:GEN:_', '!COMP:*', '-VAL', 'PHI:DET:_', 'ARG', '!PROBE:V', 'ASP'}
cau             {'PF:Cau', 'LF:v/Cause', 'PHI:NUM:_', '-SPEC:N', 'COMP:V', 'SPEC:D', 'PHI:PER:_', 'v', 'LANG:EN', 'PHI:GEN:_', '!COMP:*', '-VAL', 'PHI:DET:_', 'ARG', '!PROBE:V', 'ASP'}
INF             {'-COMP:C/fin', '-SPEC:T/fin', 'LF:INF', '-SPEC:V', 'COMP:V', 'INF', 'LANG:EN', '-COMP:FORCE', 'COMP:v', '!COMP:*', '-COMP:T/fin', 'PF:INF'}
prtcpl          {'-COMP:C/fin', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:T/prt', '-SPEC:V', 'PHI:NUM:_', 'PHI:PER:_', 'FIN', 'COMP:D', '!COMP:*', '-COMP:T/fin', 'ARG', '!PROBE:V', 'PF:T/prt', 'T', 'VAL', '-SPEC:N', 'SPEC:D', 'LF:T/prt', 'COMP:V', 'INF', '-COMP:NEG', 'LANG:EN', '-COMP:FORCE', 'COMP:v', 'PHI:GEN:_', 'PHI:DET:_', 'T/prt', 'SPEC:*'}
TO/inf          {'-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', '-SPEC:v', '!COMP:V', 'TO/inf', '!COMP:*', '-COMP:T/fin', 'COMP:V', 'PF:TO/inf', 'INF', 'LANG:EN', '-COMP:FORCE', '-VAL', 'COMP:v', 'LF:TO/inf', 'adjoinable', '?ARG'}
A/inf           {'-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', '!COMP:*', '-COMP:T/fin', '?VAL', 'PF:A/inf', '-SPEC:Neg/fin', 'LF:A/inf', 'COMP:V', 'A/inf', 'INF', 'LANG:EN', '-COMP:FORCE', 'COMP:v', 'SPEC:*', '?ARG'}
ARE/inf         {'-COMP:C/fin', '-SPEC:T/fin', 'PF:are', '-SPEC:V', 'LF:ARE/inf', '!COMP:*', '-COMP:T/fin', 'VAL', '-adjoinable', 'COMP:V', 'INF', 'LANG:EN', '-COMP:FORCE', 'COMP:v', 'ARE/inf', 'SPEC:*', '?ARG'}
ESSA/inf        {'-COMP:C/fin', '-SPEC:FORCE', '-SPEC:T/fin', '-SPEC:V', 'TAIL:T', 'ESSA/inf', '!COMP:*', '-COMP:T/fin', 'ADV', '?VAL', '-SPEC:Neg/fin', 'LF:while', '-SPEC:N', 'COMP:V', 'INF', 'PF:essa', 'LANG:EN', '-COMP:FORCE', 'COMP:v', 'adjoinable', 'SPEC:*', '?ARG'}
TUA/inf         {'-COMP:C/fin', '-SPEC:FORCE', '-SPEC:T/fin', '-SPEC:V', 'TUA/inf', 'PHI:NUM:_', 'PHI:PER:_', 'TAIL:T', 'PF:tua', '!COMP:*', '!SPEC:*', '-COMP:T/fin', 'ADV', 'ARG', '-SPEC:Neg/fin', 'LF:after', 'VAL', '-SPEC:N', 'COMP:V', 'INF', 'LANG:EN', '-COMP:FORCE', 'COMP:v', 'PHI:GEN:_', 'PHI:DET:_', 'adjoinable', 'SPEC:*'}
VA/inf          {'-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', 'PHI:NUM:_', 'PHI:PER:_', '!COMP:*', '!SPEC:*', '-COMP:T/fin', 'ARG', 'VAL', 'PF:vAn', '-SPEC:N', 'COMP:V', 'INF', 'LF:VA', 'LANG:EN', '-COMP:FORCE', 'VA/inf', 'COMP:v', 'PHI:GEN:_', 'PHI:DET:_', 'SPEC:*'}
MA/ssa          {'TAIL:V', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:PER:_', 'MA/inf', 'ADV', 'ARG', '-SPEC:Neg/fin', 'COMP:V', '-SPEC:N', 'PF:massa', 'LANG:EN', 'PHI:GEN:_', 'COMP:v', 'LF:in_doing', '-VAL', 'PHI:DET:_', 'adjoinable', '-SPEC:*'}
MA/tta          {'LF:without_doing', '-SPEC:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:N', 'PHI:PER:_', 'MA/inf', 'TAIL:T', 'LANG:EN', 'PHI:GEN:_', '-VAL', 'ADV', 'ARG', 'adjoinable', 'PF:matta', '-SPEC:Neg/fin'}
MA/lla          {'LF:by_doing', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:PER:_', 'MA/inf', 'ARG', '-SPEC:Neg/fin', '-SPEC:N', 'COMP:v', 'PHI:DET:_', 'adjoinable', '-SPEC:FORCE', 'TAIL:T', 'ADV', 'PF:malla', 'COMP:V', 'LANG:EN', 'PHI:GEN:_', '-VAL'}
MA/inf          {'TAIL:V', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:PER:_', 'MA/inf', 'PF:maan', 'ARG', '-SPEC:Neg/fin', '-SPEC:N', 'COMP:v', 'PHI:DET:_', 'adjoinable', '-SPEC:FORCE', 'ADV', 'COMP:V', 'LF:to_do', 'LANG:EN', 'PHI:GEN:_', '-VAL'}
E/inf           {'LANG:FI', '-SPEC:FORCE', '-SPEC:T/fin', '-SPEC:N', 'TAIL:T', 'ADV', '-ARG', '-VAL', 'PF:en', 'LF:by', 'adjoinable', 'SPEC:*', '-SPEC:Neg/fin'}
BE-             {'-COMP:N', '-SPEC:FORCE', '-SPEC:T/fin', 'COMP:T/prt', 'SPEC:ADV', '!COMP:*', '-COMP:T/fin', 'ASP', '-COMP:v', 'COPULA', 'SPEC:D', 'SPEC:P', 'V', '-ARG', 'LANG:EN', 'SPEC:TO/inf', '-VAL', '-COMP:V', 'LF:BE', 'PF:BE', 'COMP:P'}
D               {'-SPEC:P', 'D', '-SPEC:T/fin', '-SPEC:V', 'LF:D', '-SPEC:MA/lla', '-COMP:uR', '!PROBE:N', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:N', 'OP', 'COMP:N', 'PF:D', '-ARG', 'LANG:EN', '-SPEC:C', 'adjoinable', '-SPEC:D'}
P               {'-COMP:N', '-COMP:uWH', '-SPEC:FORCE', '-SPEC:T/fin', '-SPEC:P', '-SPEC:V', 'PF:P', '-SPEC:v', 'PHI:NUM:_', 'PHI:PER:_', 'P', 'COMP:D', '-float', '-SPEC:iR', '-SPEC:ADV', 'LF:P', '-SPEC:INF', '!COMP:*', '-COMP:T/fin', 'ARG', '-SPEC:Neg/fin', '-SPEC:C/fin', '-SPEC:N', '-SPEC:iWH', '-COMP:ADV', 'LANG:EN', 'PHI:GEN:_', '-VAL', '-SPEC:C', 'PHI:DET:_', 'adjoinable', '-SPEC:*'}
pro             ['LANG:EN']
pro-            {'-COMP:C/fin', '-SPEC:P', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'N', '-SPEC:V', 'SPEC:A', 'PF:(pro)', '-COMP:A', '-SPEC:R', '-SPEC:ADV', 'COMP:uR', '-SPEC:INF', 'LF:pro', '-COMP:D', '-COMP:v', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:N', 'PHI', '-SPEC:uWH', 'LANG:EN', '-COMP:V', 'COMP:R/D', 'COMP:R', 'COMP:P', '-COMP:WH'}
cl              {'LEFT:T/fin', 'LANG:EN', 'RIGHT:ARE/inf', 'RIGHT:PRG', 'inflectional', 'LEFT:D,CL', 'CL'}
inc             {'inflectional', 'INCORPORATED', 'LANG:EN'}
sg              {'inflectional', 'LANG:EN', 'PHI:NUM:SG'}
pl              {'inflectional', 'PHI:NUM:PL', 'LANG:EN'}
1p              {'inflectional', 'LANG:EN', 'PHI:PER:1'}
2p              {'inflectional', 'LANG:EN', 'PHI:PER:2'}
3p              {'PHI:PER:3', 'inflectional', 'LANG:EN'}
def             {'inflectional', 'LANG:EN', 'PHI:DET:DEF'}
indef           {'inflectional', 'LANG:EN', 'PHI:DET:INDEF'}
hum             {'inflectional', 'LANG:EN', 'PHI:HUM:HUM'}
nonhum          {'PHI:HUM:NONHUM', 'inflectional', 'LANG:EN'}
m               {'PHI:GEN:M', 'inflectional', 'LANG:EN'}
f               {'inflectional', 'PHI:GEN:F', 'LANG:EN'}
nom             {'inflectional', 'NOM', 'LANG:EN', 'TAIL:FIN,!COMP:*,VAL'}
acc             {'ACC', 'inflectional', 'TAIL:v', 'LANG:EN'}
dat             {'inflectional', 'DAT', 'LANG:EN', 'TAIL:v'}
uC/op           {'inflectional', 'uC/op', 'LANG:EN'}
wh              {'inflectional', 'LANG:EN', 'OP:_', 'OP:WH'}
wh_             {'LANG:EN', 'OP:_', 'OP', 'inflectional', 'FORCE:OP:WH'}
top             {'inflectional', 'LANG:EN', 'OP:TOP'}
foc             {'inflectional', 'LANG:EN', 'OP:FOC'}
C/op            {'inflectional', 'LANG:EN', 'OP:C/OP'}
rel             {'OP:REL', '-COMP:C/fin', 'LANG:EN', 'inflectional', 'adjoinable'}
Q               {'OP:Q', 'LANG:EN', 'OP', 'inflectional', 'OP:WH'}
