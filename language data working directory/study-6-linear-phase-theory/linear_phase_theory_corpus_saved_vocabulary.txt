ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'COMP:ARE/inf', '-SPEC:v', '-VAL', '-SPEC:C', '-SPEC:iWH', '-SPEC:FORCE', '-COMP:uWH', 'LANG:IT', 'LF:to', 'PF:a', '-SPEC:N', '-SPEC:C/fin', '-SPEC:V', '-SPEC:ADV', 'COMP:D', '-SPEC:Neg/fin', '-COMP:T/fin', 'adjoinable', '-SPEC:P', '-ARG', '-SPEC:iR', '!COMP:*', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:*', 'P', '-COMP:N'}
a_D             {'LANG:EN', '-SPEC:C', 'LF:D', '-SPEC:N', '-SPEC:D', '-SPEC:INF', 'D', '!PROBE:N', '-COMP:D', '-SPEC:V', 'OP', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:MA/lla', '-SPEC:P', 'adjoinable', '-ARG', '!COMP:*', '-SPEC:T/fin', '-COMP:uR', 'PF:D', 'COMP:N'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'PHI:PER:_', '-COMP:V', 'V', 'LANG:EN', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'LF:admire', 'PHI:GEN:_', 'PF:admire', 'PHI:NUM:_', '-COMP:P', '-SPEC:Neg', 'SPEC:ADV', 'COMP:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', '!COMP:*', '-COMP:Neg', 'SPEC:P', 'ASP', 'CLASS:TR', '-SPEC:T/fin', '-COMP:N'}
admire*         ['LANG:EN']
T/fin*          {'LANG:EN', '-VAL', 'CAT:T/fin', 'NO_DET', 'LF:T', "PF:T/fin'", 'NO_NUMBER', '!SPEC:*'}
v*              {'CAT:v', 'LF:v', 'PF:v', 'LANG:EN', '-VAL', 'NO_NUMBER', 'NO_DET'}
admire**        ['LANG:EN']
T/fin**         {'LANG:EN', '-VAL', 'CAT:T/fin', 'NO_DET', "PF:T/fin''", 'LF:T', 'NO_PERSON', 'NO_NUMBER', 'PHI:PER:3', '!SPEC:*'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'PHI:PER:_', '-COMP:V', 'V', 'PF:adora', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'LF:admire', 'LANG:IT', 'PHI:GEN:_', 'PHI:NUM:_', 'SPEC:ADV', 'COMP:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'SPEC:P', 'ASP', '-SPEC:T/fin', '-COMP:N'}
antaa           ['LANG:FI']
anta-           {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', 'LF:give', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP:BOUNDED', 'PF:antaa', '+SEM:directional', 'SPEC:ADV', 'COMP:D', 'SPEC:D', 'CLASS:DITR', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', '!COMP:*', 'LANG:FI', 'SPEC:P', '-COMP:FIN', 'ASP', '-SPEC:T/fin', '-COMP:N'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'PHI:PER:_', '-COMP:V', 'V', 'LANG:EN', '-VAL', 'SPEC:TO/inf', 'LF:ask', '-SPEC:FORCE', 'PHI:GEN:_', 'PHI:NUM:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'COMP:D', 'PF:ask', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'SPEC:P', 'ASP', '-SPEC:T/fin', '-COMP:N'}
ask-            {'PHI:PER:_', '-COMP:V', 'V', 'LANG:EN', '-VAL', 'SPEC:TO/inf', 'LF:ask', '-SPEC:FORCE', 'PHI:GEN:_', 'PHI:NUM:_', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', 'COMP:D', 'PF:ask', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'SPEC:P', 'ASP', '-SPEC:T/fin', '-COMP:N'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-COMP:V', '-COMP:C/fin', '-SPEC:FORCE', 'SPEC:A', 'LF:key', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-SEM:directional', '-COMP:WH', 'PF:avain', '-COMP:N', 'LANG:FI', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'PF:auto', '-COMP:V', '-COMP:C/fin', 'LF:car', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-SEM:directional', '-COMP:WH', '-COMP:N', 'LANG:FI', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
city            {'-COMP:V', '-COMP:C/fin', 'LANG:EN', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', 'LF:city', '-COMP:ADV', 'PF:city', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
che             ['LANG:IT']
che-            {'-COMP:V', '-COMP:C/fin', 'LF:who', 'PHI_N', '-SPEC:FORCE', 'SPEC:A', 'LANG:IT', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', 'PF:che', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-COMP:*', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
chiamato        ['LANG:IT']
chiamata-       {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'LANG:IT', 'PHI:GEN:_', 'PHI:NUM:_', 'SPEC:ADV', 'PF:chiamato', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'LF:called', 'ARG', 'SPEC:P', 'ASP', '-SPEC:T/fin', '-COMP:N'}
danno           {'-COMP:V', '-COMP:C/fin', '-SPEC:FORCE', 'SPEC:A', 'LANG:IT', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', 'LF:damage', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', 'PF:danno', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'PHI:PER:_', '-COMP:V', 'V', 'COMP:ARE/inf', '-VAL', 'SPEC:TO/inf', 'LF:detest', '-SPEC:FORCE', 'LANG:IT', 'PHI:GEN:_', 'PHI:NUM:_', 'SEM:internal', 'SPEC:ADV', 'COMP:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'SPEC:P', 'ASP', 'PF:detest', '-SPEC:T/fin', '-COMP:N'}
devono          ['LANG:EN']
deva-           {'PHI:PER:_', '-COMP:V', 'V', 'COMP:ARE/inf', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'LANG:IT', 'PHI:GEN:_', 'PHI:NUM:_', '-ASP', 'SEM:internal', 'LF:must', 'SPEC:D', 'SPEC:ADV', 'PF:deva', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'SPEC:P', '-SPEC:T/fin', '-COMP:N'}
di              {'PHI:PER:_', '-SPEC:v', '-VAL', '-SPEC:C', '-SPEC:iWH', '-SPEC:FORCE', '-COMP:uWH', '-SPEC:N', 'SPEC:*', 'PHI:NUM:_', '-SPEC:C/fin', '-adjoinable', '-SPEC:V', '-SPEC:ADV', 'COMP:D', '-SPEC:Neg/fin', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:P', 'ARG', '-SPEC:iR', '!COMP:*', 'LF:of', 'LANG:FI', 'PF:di', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:INF', 'P', '-COMP:N'}
does            {'LF:does', '!PROBE:V', 'T', '-SPEC:v', 'SPEC:TO/inf', 'VAL', '-SPEC:FORCE', 'PHI:GEN:_', 'PHI:NUM:_', '-COMP:INF', 'PF:does', 'PHI:NUM:SG', '-SPEC:V', 'COMP:T/prt', 'COMP:D', 'SPEC:D', 'T/fin', '-COMP:T/fin', 'ARG', '!COMP:*', 'PHI:PER:3', 'PHI:PER:_', '-SPEC:TO/inf', 'LANG:EN', 'PHI:GEN:M', 'COMP:v', '-SPEC:N', 'SPEC:*', '-SPEC:C/fin', '-SPEC:Neg', 'COMP:V', 'FIN', 'PHI:DET:_', 'PHI:GEN:F', '!SPEC:D', 'COMP:Neg', '-SPEC:T/fin'}
does_C          ['LANG:EN']
does-           {'LF:does', '!PROBE:V', 'T', '-SPEC:v', 'SPEC:TO/inf', 'VAL', '-SPEC:FORCE', 'PHI:GEN:_', 'PHI:NUM:_', '-COMP:INF', 'PF:does', 'PHI:NUM:SG', '-SPEC:V', 'COMP:T/prt', 'COMP:D', 'SPEC:D', 'T/fin', '-COMP:T/fin', 'ARG', '!COMP:*', 'PHI:PER:3', 'PHI:PER:_', '-SPEC:TO/inf', 'LANG:EN', 'PHI:GEN:M', 'COMP:v', '-SPEC:N', 'SPEC:*', '-SPEC:C/fin', '-SPEC:Neg', 'COMP:V', 'FIN', 'PHI:DET:_', 'PHI:GEN:F', '!SPEC:D', 'COMP:Neg', '-SPEC:T/fin'}
dorme           ['LANG:IT']
dorme-          {'PHI:PER:_', '-COMP:V', 'V', 'PF:dorme', 'LANG:EN', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:GEN:_', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'LF:sleep', 'ARG', '!SPEC:D', 'SPEC:P', 'ASP', '-SPEC:T/fin', '-COMP:N'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'PHI:PER:_', 'NEG', 'LF:neg', 'VAL', 'Neg/fin', '%SPEC:INF', 'PHI:NUM:_', 'SPEC:*', 'COMP:T/prt', 'SEM:internal', '-SPEC:T', '!COMP:T', 'PF:ei', 'FIN', 'PHI:DET:_', 'ARG', '!COMP:*', 'LANG:FI', 'POL:NEG', '!SPEC:*', '-SPEC:T/fin'}
e-              {'PHI:PER:_', 'NEG', 'LF:neg', 'VAL', 'Neg/fin', '%SPEC:INF', 'PHI:NUM:_', 'SPEC:*', 'COMP:T/prt', 'SEM:internal', '-SPEC:T', '!COMP:T', 'PF:ei', 'FIN', 'PHI:DET:_', 'ARG', '!COMP:*', 'LANG:FI', 'POL:NEG', '!SPEC:*', '-SPEC:T/fin'}
elaa            ['LANG:FI']
ela-            {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', 'PF:elaa', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:D', 'LF:live', 'SPEC:ADV', 'SPEC:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'LANG:FI', 'CLASS:INTR', 'SPEC:P', 'ASP', '-SPEC:T/fin', '-COMP:N'}
etsii           ['LANG:FI']
etsi-           {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', 'LF:search', '-SPEC:FORCE', 'PHI:NUM:_', 'PF:etsi', 'SPEC:ADV', 'COMP:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'LANG:FI', 'SPEC:P', 'ASP', '!COMP:D', '-SPEC:T/fin', '-COMP:N'}
etta            {'-VAL', '!PROBE:T/fin', 'FIN', 'PF:etta', '-ARG', 'COMP:T/fin', '!COMP:*', 'FORCE', 'LF:that', 'LANG:FI', 'COMP:C/fin', '-SPEC:*'}
flow'           {'PHI:PER:_', '-COMP:V', 'V', 'LANG:EN', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'LF:flow', 'PHI:NUM:_', 'PHI:GEN:_', 'PF:flow', 'SPEC:ADV', 'SPEC:D', '-COMP:T/fin', 'PHI:DET:_', 'COMP:P', '-COMP:v', 'ARG', 'SPEC:P', 'ASP', '-SPEC:T/fin', '-COMP:N'}
from            {'PHI:PER:_', '-float', 'LANG:EN', '-SPEC:v', '-VAL', '-SPEC:C', '-SPEC:iWH', '-SPEC:FORCE', '-COMP:uWH', '-SPEC:N', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:C/fin', '-SPEC:V', '-SPEC:ADV', 'COMP:D', '-SPEC:Neg/fin', '-COMP:T/fin', 'PHI:DET:_', 'P', 'adjoinable', '-SPEC:P', 'ARG', '-SPEC:iR', '!COMP:*', 'PF:from', '-COMP:ADV', 'TAIL:V,+SEM:directional', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:*', 'LF:from', '-COMP:N'}
gave            ['LANG:EN']
give-           {'PHI:PER:_', '-COMP:V', 'V', 'LANG:EN', '-VAL', 'SPEC:TO/inf', 'LF:give', '-SPEC:FORCE', 'PHI:GEN:_', 'PHI:NUM:_', '+SEM:directional', 'SPEC:ADV', 'COMP:D', 'SPEC:D', 'CLASS:DITR', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'PF:give', 'ARG', '!COMP:*', 'SPEC:P', '-COMP:FIN', 'ASP', '-SPEC:T/fin', '-COMP:N'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-COMP:V', '-COMP:C/fin', '-SPEC:FORCE', 'SPEC:A', 'LANG:IT', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', 'PF:Giuseppe', '-SPEC:V', 'LF:Giuseppe', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-SEM:directional', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP:BOUNDED', 'PF:haluaa', 'SEM:internal', '-COMP:P', 'SPEC:ADV', 'COMP:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'LF:want', 'COMP:P', 'ARG', '!COMP:*', '-COMP:N', 'LANG:FI', 'SPEC:P', 'ASP', '-SPEC:*', 'CLASS:TR', '-SPEC:T/fin', 'COMP:A/inf'}
hairitsee       ['LANG:FI']
hairitse-       {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:D', 'PF:hairitsee', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'LANG:FI', 'SPEC:P', '-COMP:FIN', 'ASP', '!COMP:D', 'LF:disturb', '-SPEC:T/fin', '-COMP:N'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'PHI:PER:_', '-COMP:V', 'V', 'COMP:T', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'LANG:IT', 'PHI:GEN:_', 'SPEC:*', 'PHI:NUM:_', '-ASP', 'SEM:internal', 'PF:ha', 'LF:have', 'SPEC:ADV', 'SPEC:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'SPEC:P', '-SPEC:T/fin', '-COMP:N'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'PF:havia', 'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:D', 'SPEC:ADV', 'SPEC:D', 'LF:disappear', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'LANG:FI', 'CLASS:INTR', 'SPEC:P', 'ASP', '-SPEC:T/fin', '-COMP:N'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PF:ihaile-', 'LF:admire', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'COMP:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', '!COMP:*', 'LANG:FI', 'SPEC:P', '-COMP:FIN', 'ASP', '!COMP:D', 'CLASS:TR', '-SPEC:T/fin', '-COMP:N'}
il              {'PF:il', '-SPEC:C', 'LANG:IT', '-SPEC:N', '-SPEC:D', '-SPEC:INF', 'D', '!PROBE:N', '-COMP:D', '-SPEC:V', 'OP', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:MA/lla', '-SPEC:P', 'adjoinable', '-ARG', '!COMP:*', 'LF:the', '-SPEC:T/fin', '-COMP:uR', 'COMP:N'}
i               {'PF:il', '-SPEC:C', 'LANG:IT', '-SPEC:N', '-SPEC:D', '-SPEC:INF', 'D', '!PROBE:N', '-COMP:D', '-SPEC:V', 'OP', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:MA/lla', '-SPEC:P', 'adjoinable', '-ARG', '!COMP:*', 'LF:the', '-SPEC:T/fin', '-COMP:uR', 'COMP:N'}
in              {'PHI:PER:_', '-SPEC:v', '-VAL', '-SPEC:C', '-SPEC:iWH', '-SPEC:FORCE', '-COMP:uWH', 'LANG:IT', '-SPEC:N', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:C/fin', '-SPEC:V', 'PF:in', '-SPEC:ADV', 'COMP:D', '-SPEC:Neg/fin', '-COMP:T/fin', 'PHI:DET:_', 'adjoinable', '-SPEC:P', 'ARG', '-SPEC:iR', '!COMP:*', 'LF:in', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:INF', 'P', '-COMP:N'}
infermieri      {'-COMP:V', '-COMP:C/fin', 'LF:nurses', '-SPEC:FORCE', 'SPEC:A', 'LANG:IT', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', 'PF:infermieri', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
is              ['LANG:EN']
be-             {'-COMP:V', 'V', 'LANG:EN', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', '-COMP:TO/inf', 'PF:be', 'SPEC:ADV', 'SPEC:D', 'COPULA', '-COMP:T/fin', '-COMP:v', 'COMP:P', '-ARG', '!COMP:*', 'SPEC:P', 'LF:be', 'ASP', '-SPEC:T/fin', '-COMP:N'}
istuuko         ['LANG:FI']
istuu-          {'PHI:PER:_', 'PF:istuu', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', 'LF:sit', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:D', 'SPEC:ADV', 'SPEC:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'LANG:FI', 'CLASS:INTR', 'SPEC:P', 'ASP', '-SPEC:T/fin', '-COMP:N'}
John            ['LANG:EN']
John-           {'-COMP:V', '-COMP:C/fin', 'LANG:EN', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', 'LF:John', '-SPEC:uWH', 'N', '-COMP:D', '-adjoinable', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', 'PF:John', '-SEM:directional', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-COMP:V', '-COMP:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'LF:Jukka', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-SEM:directional', '-COMP:WH', 'PF:Jukka', '-COMP:N', 'LANG:FI', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
juosten         ['LANG:FI']
juokse-         {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:T/fin', 'PF:juokse-', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'ARG', 'LF:run', 'LANG:FI', 'SPEC:P', 'ASP', '-SPEC:T/fin', '-COMP:N'}
istuu           ['LANG:FI']
istu-           {'PHI:PER:_', 'PF:istuu', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', 'LF:sit', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'LANG:FI', 'SPEC:P', 'ASP', '-SPEC:T/fin', '-COMP:N'}
kaksi           {'PHI:PER:_', 'LF:two', '-VAL', 'PHI:DET:_', 'TAIL:ARG,VAL,FIN', 'COMP:n', 'ARG', 'LANG:FI', 'SPEC:*', 'PF:kaksi', 'PHI:NUM:_', 'NUM', 'COMP:N', 'PHI:NUM:SG'}
kaksi           {'LF:two', 'LANG:EN', 'COMP:n', 'TAIL:ARG,ASP:BOUNDED', 'SPEC:*', 'PF:kaksi', 'TAIL:*POL:NEG', 'NUM', 'COMP:N'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'LF:two', 'LANG:FI', 'SPEC:*', 'PF:kaksi', 'COMP:n', 'NUM', 'COMP:N'}
kaupunkia       ['LANG:EN']
kaupunki        {'-COMP:V', '-COMP:C/fin', 'PF:kaupunki', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', '-COMP:P', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', 'LANG:FI', '-COMP:AUX', 'LF:city', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'LF:order', '!COMP:A/inf', 'SPEC:ADV', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'LANG:FI', 'PF:kaske', 'SPEC:P', 'ASP', 'SEM:external', '-SPEC:T/fin', '-COMP:N'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-COMP:V', '-COMP:C/fin', 'PF:kello', '-SPEC:FORCE', 'SPEC:A', 'LF:watch', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', 'LANG:FI', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
kello0-         {'SPEC:D', 'LANG:FI', 'LF:watch', '0', 'PF:kello', '2SPEC'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-COMP:V', '-COMP:C/fin', 'LANG:EN', '-SPEC:FORCE', 'SPEC:A', 'LF:key', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', 'PF:key', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-COMP:V', '-COMP:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', 'LF:book', '-COMP:D', 'PF:kirja', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-SEM:directional', '-COMP:WH', '-COMP:N', 'LANG:FI', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
kohti           {'PHI:PER:_', 'TAIL:V', '-SPEC:v', '-VAL', '-SPEC:C', '-SPEC:iWH', '-SPEC:FORCE', '-COMP:uWH', '-SPEC:N', 'SPEC:*', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:V', 'LF:towards', '-SPEC:ADV', 'COMP:D', '-SPEC:Neg/fin', '-COMP:T/fin', 'PHI:DET:_', 'adjoinable', '-SPEC:P', 'ARG', '-SPEC:iR', '!COMP:*', 'LANG:FI', 'PF:kohti', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:INF', 'P', '-COMP:N'}
koko            {'PF:koko', '-SPEC:C', '-SPEC:N', '-SPEC:D', '-SPEC:INF', 'D', '!PROBE:N', '-COMP:D', '-SPEC:V', 'TAIL:T', 'OP', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:MA/lla', 'adjoinable', '-SPEC:P', 'LF:all', '-ARG', '!COMP:*', 'LANG:FI', '-SPEC:T/fin', '-COMP:uR', 'COMP:N'}
kuka            ['LANG:FI']
kuka-           {'-COMP:V', '-COMP:C/fin', 'LF:who', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', 'PHI', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', 'LANG:FI', 'PF:kuka', '-COMP:ADV', '-COMP:AUX', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
kuorsaa-        {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', '-COMP:D', 'SPEC:ADV', '-COMP:T/fin', 'PHI:DET:_', 'COMP:P', '-COMP:v', '-COMP:WH', 'ARG', 'LANG:FI', 'SPEC:P', 'PF:kuorsaa', '-SPEC:T/fin', 'LF:snore', '-COMP:N'}
kuorsaamalla    ['LANG:FI']
lahella         {'LF:near', '-SPEC:v', 'VAL', '-SPEC:iWH', '-SPEC:C', '-SPEC:FORCE', 'PHI:NUM:_', '-SPEC:V', '-SPEC:ADV', 'COMP:D', '-SPEC:Neg/fin', '-COMP:T/fin', 'ARG', '-SPEC:iR', '!COMP:*', '-COMP:ADV', '!SPEC:*', '-SPEC:INF', 'PHI:PER:_', 'INF', '-COMP:C/fin', 'COMP:v', '-COMP:uWH', '-SPEC:N', 'SPEC:*', '-SPEC:C/fin', 'COMP:V', '-COMP:FORCE', 'PHI:DET:_', 'adjoinable', '-SPEC:P', '!SPEC:D', 'LANG:FI', '-SPEC:T/fin', 'PF:lahella', 'P', '-COMP:N'}
lahella         {'PHI:PER:_', 'LF:near', '-SPEC:v', '-VAL', '-SPEC:C', '-SPEC:iWH', '-SPEC:FORCE', '-COMP:uWH', '-SPEC:N', 'SPEC:*', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:V', '-SPEC:ADV', 'COMP:D', '-SPEC:Neg/fin', '-COMP:T/fin', 'PHI:DET:_', 'adjoinable', '-SPEC:P', 'ARG', '-SPEC:iR', '!COMP:*', '-COMP:N', 'LANG:FI', '-COMP:ADV', '!COMP:D', '-SPEC:INF', 'PF:lahella', 'P', '-SPEC:T/fin'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:D', 'COMP:PP', 'SPEC:ADV', 'SPEC:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'PF:lahtea', 'ARG', 'LANG:FI', 'CLASS:INTR', 'SPEC:P', 'ASP', 'LF:leave', '-SPEC:T/fin', '-COMP:N'}
lavano          ['LANG:IT']
lava-           {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', 'PF:lava', '-SPEC:FORCE', 'LANG:IT', 'PHI:GEN:_', 'PHI:NUM:_', 'SPEC:ADV', 'COMP:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', '!COMP:*', 'SPEC:P', 'LF:wash', 'ASP', '-SPEC:T/fin', '-COMP:N'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-SPEC:C', 'LF:D', 'LANG:IT', '-SPEC:N', '-SPEC:D', '-SPEC:INF', 'D', '!PROBE:N', '-COMP:D', '-SPEC:V', 'OP', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:MA/lla', 'PF:le', '-SPEC:P', 'adjoinable', '-ARG', '!COMP:*', '-SPEC:T/fin', '-COMP:uR', 'COMP:N'}
leaves          ['LANG:EN']
leave           {'PHI:PER:_', '-COMP:V', 'V', 'LANG:EN', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:GEN:_', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'PF:leave', 'COMP:P', 'ARG', '!SPEC:D', 'SPEC:P', 'ASP', 'LF:leave', '-SPEC:T/fin', '-COMP:N'}
leave-          {'PHI:PER:_', '-COMP:V', 'V', 'LANG:EN', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:GEN:_', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'PF:leave', 'COMP:P', 'ARG', '!SPEC:D', 'SPEC:P', 'ASP', 'LF:leave', '-SPEC:T/fin', '-COMP:N'}
like-           {'PHI:PER:_', 'PF:like', 'V', '-COMP:V', 'LANG:EN', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:GEN:_', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'LF:like', 'SPEC:P', 'ASP', '!COMP:D', '-SPEC:T/fin', '-COMP:N'}
likes           ['LANG:EN']
like            {'PHI:PER:_', 'PF:like', 'V', '-COMP:V', 'LANG:EN', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:GEN:_', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'LF:like', 'SPEC:P', 'ASP', '!COMP:D', '-SPEC:T/fin', '-COMP:N'}
little          ['LANG:EN']
little-         {'SPEC:D', '0', 'LANG:EN', 'PF:little-', '2SPEC', 'LF:little'}
lle             {'PHI:PER:_', '-SPEC:v', '-VAL', '-SPEC:C', '-SPEC:iWH', '-SPEC:FORCE', '-COMP:uWH', 'PF:P(lle)', '-SPEC:N', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:V', '+SEM:directional', '-SPEC:ADV', 'COMP:D', '-SPEC:Neg/fin', 'LF:for', '-COMP:T/fin', 'PHI:DET:_', 'adjoinable', '-SPEC:P', 'ARG', '-SPEC:iR', '!COMP:*', 'LANG:FI', '-COMP:ADV', 'TAIL:V,+SEM:directional', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:*', 'P', '-COMP:N'}
lla             {'PHI:PER:_', '-SPEC:v', '-VAL', '-SPEC:C', '-SPEC:iWH', '-SPEC:FORCE', '-COMP:uWH', '-SPEC:N', 'SPEC:*', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:V', 'TAIL:T', '-SPEC:ADV', 'COMP:D', '-SPEC:Neg/fin', 'TAIL:*V', '-COMP:T/fin', 'PHI:DET:_', 'adjoinable', '-SPEC:P', 'ARG', '-SPEC:iR', 'LF:by', '!COMP:*', 'LANG:FI', 'PF:P(lla)', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:INF', 'P', '-COMP:N'}
Luisa           ['LANG:IT']
Luisa-          {'-COMP:V', '-COMP:C/fin', '-SPEC:FORCE', 'SPEC:A', 'LANG:IT', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:INF', 'N', '-COMP:D', '-SPEC:V', 'PF:Luisa', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-SEM:directional', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', 'LF:Luisa', '-SPEC:T/fin', '-COMP:A'}
lukemalla       ['LANG:FI']
luke-           {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:P', 'PF:luke', 'SPEC:ADV', 'COMP:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', '!COMP:*', 'LANG:FI', 'SPEC:P', 'LF:read', 'ASP', 'CLASS:TR', '-SPEC:T/fin', '-COMP:N'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'PF:loyta-', 'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP:BOUNDED', '-COMP:P', 'SPEC:ADV', 'COMP:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', '!COMP:*', 'LANG:FI', 'SPEC:P', 'ASP', '!COMP:D', 'CLASS:TR', 'LF:find', '-COMP:N'}
Mary            ['LANG:EN']
Mary-           {'PF:Mary', '-COMP:V', '-COMP:C/fin', 'LANG:EN', 'LF:Mary', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-adjoinable', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-SEM:directional', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-COMP:V', '-COMP:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-adjoinable', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', 'LF:Merja', '-SEM:directional', '-SPEC:P', '-COMP:WH', '-COMP:N', 'LANG:FI', '-COMP:AUX', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:INF', 'PF:Merja', '-COMP:A'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'TAIL:T', '-SPEC:Neg/fin', 'COMP:v', 'ADV', 'PF:malla', 'MA/inf', 'adjoinable', '-SPEC:FORCE', 'LF:by', 'LANG:FI', '-SPEC:N', 'SPEC:*', '-SPEC:T/fin'}
meren           ['LANG:FI']
mere-           {'-COMP:V', '-COMP:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', 'LANG:FI', '-COMP:AUX', 'PF:meri', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:INF', 'LF:ocean', '-COMP:A'}
mistake         {'-COMP:V', '-COMP:C/fin', 'LANG:EN', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', 'PF:mistake', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', 'LF:mistake', '-SPEC:T/fin', '-COMP:A'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-COMP:V', '-COMP:C/fin', 'PF:mika-', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', 'LANG:FI', 'LF:what', '-COMP:ADV', '-COMP:AUX', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'PHI:PER:_', '-COMP:V', 'V', 'PF:move', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:GEN:_', 'PHI:NUM:_', 'ASP', '-COMP:P', '+SEM:directional', 'SPEC:ADV', 'COMP:D', 'LANGN:EN', '-COMP:T/fin', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'ARG', '!COMP:*', 'SPEC:P', 'LF:move', 'CLASS:TR', '-SPEC:T/fin', '-COMP:N'}
mukavasti       ['LANG:EN']
mukava-         {'SPEC:D', 'LANG:FI', '0', 'PF:mukavasti', 'LF:comfortably', '2SPEC'}
must            {'PHI:PER:_', '!PROBE:V', 'T', '-SPEC:TO/inf', 'LANG:EN', '-SPEC:v', 'SPEC:TO/inf', 'COMP:v', 'VAL', '-SPEC:FORCE', '-SPEC:N', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:C/fin', '-COMP:INF', 'MODAL', 'SPEC:*', '-SPEC:V', 'PF:must', 'COMP:T/prt', '-SPEC:Neg', 'LF:must', 'COMP:D', 'SPEC:D', 'COMP:V', 'T/fin', '-COMP:T/fin', 'FIN', 'PHI:DET:_', 'ARG', '!COMP:*', '!SPEC:D', 'COMP:Neg', '-SPEC:T/fin'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'PHI:PER:_', '-COMP:V', 'PF:myy', 'V', 'LF:sell', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP:BOUNDED', '-COMP:P', 'SPEC:ADV', 'COMP:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', '!COMP:*', 'LANG:FI', 'SPEC:P', 'ASP', 'CLASS:TR', '-SPEC:T/fin', '-COMP:N'}
naki            ['LANG:FI']
nake-           {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP:BOUNDED', '-COMP:MA/inf', '-COMP:P', 'SPEC:ADV', 'COMP:D', 'LF:see', '-COMP:ESSA/inf', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'PF:nake', '!COMP:*', 'LANG:FI', 'SPEC:P', 'ASP', 'CLASS:TR', '-SPEC:T/fin', '-COMP:N'}
nayttaa         ['LANG:FI']
naytta-         {'-COMP:V', 'V', 'LF:seem', 'SPEC:TO/inf', 'VAL', '-SPEC:FORCE', 'SEM:internal', 'SPEC:ADV', '-COMP:T/fin', '-COMP:v', 'COMP:P', '-ARG', 'PF:naytta', '!SPEC:D', 'LANG:FI', '!COMP:VA/inf', 'SPEC:P', 'ASP', '-SPEC:T/fin', '-COMP:N'}
ndo             {'INF', 'COMP:V', '-COMP:C/fin', 'LANG:EN', '-COMP:FORCE', '-COMP:T/fin', 'PRG', 'COMP:v', 'VAL', 'PF:PRG', 'LF:ing', '?ARG', '!COMP:*', '-SPEC:T/fin', '-SPEC:V'}
ne              {'-SPEC:C', '-SPEC:N', '-SPEC:D', '-SPEC:INF', 'D', '!PROBE:N', '-COMP:D', '-SPEC:V', 'OP', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:MA/lla', 'PHI:NUM:PL', '-SPEC:P', 'adjoinable', '-ARG', '!COMP:*', 'PF:ne', 'LANG:FI', 'PHI:PER:3', 'LF:those', '-COMP:uR', 'COMP:N', '-SPEC:T/fin'}
niiden          ['LANG:EN']
nen             {'A', 'TAIL:D', 'adjoinable', 'LF:ing', 'LANG:FI', 'PF:a', 'SPEC:*', '-SPEC:D', 'COMP:0', '-SPEC:A'}
not             {'PHI:PER:_', 'LANG:EN', '-VAL', 'PHI:DET:_', 'Neg', '-COMP:C', 'ARG', '!COMP:*', 'PHI:GEN:_', 'SPEC:*', '-COMP:FIN', 'LF:not', 'PHI:NUM:_', 'POL:NEG', '-COMP:D', '-SPEC:T/fin', 'PF:not'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', 'PF:nukku', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', '-COMP:D', 'SPEC:ADV', 'SPEC:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', '-COMP:T', 'LF:sleep', 'COMP:P', 'ARG', 'LANG:FI', 'CLASS:INTR', 'SPEC:P', '-COMP:Neg/fin', '-SPEC:T/fin', '-COMP:N'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-COMP:V', '-COMP:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'PF:omaisuuden', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', 'LF:possessions', '-COMP:WH', '-COMP:N', 'LANG:FI', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
operatoria      ['LANG:IT']
operatoria-     {'SPEC:D', 'LANG:IT', 'LF:operation', '0', '2SPEC', 'PF:operatoria'}
ostaa           ['LANG:FI']
osta-           {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PF:osta', 'PHI:NUM:_', 'ASP:BOUNDED', '-COMP:P', 'SPEC:ADV', 'COMP:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', '!COMP:*', '-COMP:N', 'LANG:FI', 'SPEC:P', 'ASP', 'CLASS:TR', '-SPEC:T/fin', 'LF:buy'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-COMP:V', '-COMP:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:INF', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', 'LF:day', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', 'LANG:FI', '-COMP:AUX', '-COMP:ADV', 'SEM:nonreferential', 'PF:paiva', '-SPEC:T/fin', '-COMP:A'}
Pariisia        ['LANG:FI']
Pariisi-        {'-COMP:V', '-COMP:C/fin', 'PF:Pariisi', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', 'LF:Paris', '-COMP:N', 'LANG:FI', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-COMP:V', '-COMP:C/fin', '-SPEC:FORCE', 'SPEC:A', 'PF:Pekka', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-SEM:directional', 'LF:Pekka', '-COMP:WH', '-COMP:N', 'LANG:FI', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
pelottaa        ['LANG:FI']
pelkaa-         {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'LF:fear', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'COMP:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'PF:pelkaa', 'ARG', '!COMP:*', 'LANG:FI', 'SPEC:P', 'ASP', 'CLASS:TR', '-SPEC:T/fin', '-COMP:N'}
persuades       ['LANG:EN']
persuade-       {'PHI:PER:_', 'COMP:TO/inf', '-COMP:V', 'V', 'LANG:EN', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:GEN:_', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', '!COMP:*', 'SPEC:P', 'PF:persuade', 'ASP', 'LF:persuade', 'SEM:external', '-SPEC:T/fin', '-COMP:N'}
peruuntui       ['LANG:FI']
peruuntu-       {'PHI:PER:_', '-COMP:V', 'V', 'LF:cancelled', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'LANG:FI', 'SPEC:P', 'ASP', 'PF:peruuntui', '-SPEC:T/fin', '-COMP:N'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP:BOUNDED', '-COMP:P', 'SPEC:ADV', 'COMP:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', '!COMP:*', 'LANG:FI', 'SPEC:P', 'PF:pese', 'LF:wash', 'ASP', 'CLASS:TR', '-SPEC:T/fin', '-COMP:N'}
pese-           {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'COMP:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', '!COMP:*', 'LANG:FI', 'SPEC:P', 'PF:pese', 'LF:wash', 'ASP', 'CLASS:TR', '-SPEC:T/fin', '-COMP:N'}
petardi         {'-COMP:V', '-COMP:C/fin', '-SPEC:FORCE', 'SPEC:A', 'LANG:IT', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', 'LF:firecrackers', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', 'PF:petardi', '-SPEC:T/fin', '-COMP:A'}
pieni           ['LANG:FI']
pieni-          {'PF:pieni-', 'SPEC:D', 'LANG:FI', '0', '2SPEC', 'LF:small'}
poikien         ['LANG:FI']
poika-          {'-COMP:V', '-COMP:C/fin', '-SPEC:FORCE', 'SPEC:A', 'LF:boy', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', 'PF:poika', '-COMP:WH', '-COMP:N', 'LANG:FI', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
puhelinta       ['LANG:FI']
puhelin-        {'PF:puhelin', 'SPEC:D', 'LANG:FI', '0', '2SPEC', 'LF:phone'}
punainen        ['LANG:FI']
puna-           {'LF:red', 'SPEC:D', 'LANG:FI', '0', 'PF:puna-', '2SPEC'}
presupposto     {'-COMP:V', '-COMP:C/fin', '-SPEC:FORCE', 'SPEC:A', 'LF:presupposition', 'LANG:IT', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', 'PF:presupposto', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
primary         {'-COMP:V', '-COMP:C/fin', 'LF:nurse', '-SPEC:FORCE', 'SPEC:A', 'LANG:IT', 'PF:primary', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
promises        ['LANG:EN']
promise-        {'PHI:PER:_', '-COMP:V', 'V', 'LANG:EN', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'LF:promise', 'PHI:GEN:_', 'PHI:NUM:_', 'SEM:internal', 'SPEC:ADV', 'COMP:D', 'SPEC:D', 'PF:promise', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'SPEC:P', 'ASP', '-SPEC:T/fin', '-COMP:N'}
pyytaa          ['LANG:FI']
pyyta-          {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', 'PF:pyyda', 'LF:ask', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'LANG:FI', 'SPEC:P', 'ASP', 'SEM:external', '-SPEC:T/fin', '-COMP:N'}
raukesi         ['LANG:FI']
raukea-         {'LF:terminate', 'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', 'PF:raukea', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'LANG:FI', 'SPEC:P', 'ASP', '-SPEC:T/fin', '-COMP:N'}
red             ['LANG:EN']
red-            {'LF:red', 'SPEC:D', '0', 'LANG:EN', '2SPEC', 'PF:red'}
saavuttaa       ['LANG:FI']
saavutta-       {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP:BOUNDED', '-COMP:P', 'PF:saavutta-', 'SPEC:ADV', 'COMP:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', '!COMP:*', 'LANG:FI', 'SPEC:P', 'LF:reach', 'ASP', '!COMP:D', 'CLASS:TR', '-SPEC:T/fin', '-COMP:N'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', 'PF:sano-', '-SPEC:FORCE', 'COMP:VA/inf', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'COMP:FORCE', 'ARG', 'LF:say', 'LANG:FI', 'SPEC:P', 'ASP', '-SPEC:T/fin', '-COMP:N'}
said            ['LANG:EN']
say'            {'PHI:PER:_', '-COMP:V', 'V', '!COMP:FORCE', 'LANG:EN', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:GEN:_', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'LF:say', 'SPEC:P', 'ASP', 'PF:say', '-SPEC:T/fin', '-COMP:N'}
say-            {'PHI:PER:_', '-COMP:V', 'V', '!COMP:FORCE', 'LANG:EN', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:GEN:_', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'LF:say', 'SPEC:P', 'ASP', 'PF:say', '-SPEC:T/fin', '-COMP:N'}
sala            ['LANG:IT']
sala-           {'-COMP:V', '-COMP:C/fin', '-SPEC:FORCE', 'SPEC:A', 'LANG:IT', '-SPEC:N', 'LF:room', '-SPEC:uWH', '-SPEC:C/fin', 'N', '-COMP:D', 'PF:sala', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
scoppiati       ['LANG:IT']
scoppia-        {'PHI:PER:_', 'LF:explode', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', 'PF:scoppia', '-SPEC:FORCE', 'LANG:IT', 'PHI:GEN:_', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'SPEC:P', 'ASP', '-SPEC:T/fin', '-COMP:N'}
sen             {'LF:the/that', '-SPEC:C', 'TAIL:PHI', '-SPEC:N', 'PF:sen', '-SPEC:D', 'TAIL:*POL:NEG', '-SPEC:INF', 'D', '!PROBE:N', '-COMP:D', 'TAIL:ASP', '-SPEC:V', 'OP', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:MA/lla', '-SPEC:P', 'adjoinable', '-ARG', '!COMP:*', 'LANG:FI', '-SPEC:T/fin', '-COMP:uR', 'COMP:N'}
se'             {'LF:the/that', '-SPEC:C', '-SPEC:N', '-SPEC:D', '-SPEC:INF', 'D', '!PROBE:N', 'PF:se', '-COMP:D', '-SPEC:V', 'OP', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:MA/lla', '-SPEC:P', 'adjoinable', '-ARG', '!COMP:*', 'LANG:FI', '-SPEC:T/fin', '-COMP:uR', 'COMP:N'}
sentenza        {'-COMP:V', '-COMP:C/fin', 'PF:sentenza', '-SPEC:FORCE', 'LF:sentence', 'SPEC:A', 'LANG:IT', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
Seine           ['LANG:EN']
Seine-          {'-COMP:V', '-COMP:C/fin', 'LANG:EN', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', 'LF:Seine', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', 'PF:Seine', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
sembrano        ['LANG:IT']
sembra-         {'-COMP:V', 'V', 'LF:seem', 'LANG:EN', '!COMP:ARE/inf', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', '-COMP:D', '-ASP', 'SPEC:ADV', 'SPEC:D', '-COMP:T/fin', '-COMP:v', 'COMP:P', 'PF:sembra', '-ARG', 'SPEC:P', '-SPEC:T/fin', '-COMP:N'}
sleeps          ['LANG:EN']
sleep           {'PHI:PER:_', '-COMP:V', 'V', 'LANG:EN', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PF:sleep', 'PHI:GEN:_', 'PHI:NUM:_', '-COMP:D', 'SPEC:ADV', 'SPEC:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'LF:sleep', 'ARG', 'SPEC:P', 'CLASS:INTR', 'ASP', '-SPEC:T/fin', '-COMP:N'}
sleep-          {'PHI:PER:_', '-COMP:V', 'V', 'LANG:EN', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PF:sleep', 'PHI:GEN:_', 'PHI:NUM:_', '-COMP:D', 'SPEC:ADV', 'SPEC:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'LF:sleep', 'ARG', 'SPEC:P', 'CLASS:INTR', 'ASP', '-SPEC:T/fin', '-COMP:N'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'LF:agreement', '-COMP:V', '-COMP:C/fin', 'PF:sopimus', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '!COMP:A/inf', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', 'LANG:FI', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
spinge          ['LANG:IT']
spinge-         {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'LANG:IT', 'PHI:GEN:_', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'LF:push', 'ARG', 'SPEC:P', 'ASP', '!COMP:D', 'PF:spinge', '-SPEC:T/fin', '-COMP:N'}
ssa             {'PHI:PER:_', 'TAIL:V', 'COMP:n/MA', '-SPEC:v', '-VAL', '-SPEC:C', '-SPEC:iWH', '-SPEC:FORCE', '-COMP:uWH', '-SPEC:N', 'SPEC:*', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:V', '-SPEC:ADV', 'COMP:D', '-SPEC:Neg/fin', '-COMP:T/fin', 'PHI:DET:_', 'adjoinable', '-SPEC:P', 'ARG', '-SPEC:iR', '!COMP:*', '-COMP:N', 'LF:in', 'LANG:FI', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:INF', 'P', 'PF:ssa'}
stanno          ['LANG:IT']
sta-            {'PHI:PER:_', '-COMP:V', 'V', 'PF:sta', 'LANG:EN', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:GEN:_', 'COMP:PRG', 'PHI:NUM:_', '-ASP', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'SPEC:P', 'LF:stay', '-SPEC:T/fin', '-COMP:N'}
sti             {'TAIL:T', '-SPEC:Neg/fin', 'ADV', 'adjoinable', '-ARG', '-SPEC:FORCE', 'LF:by', '!COMP:*', 'LANG:FI', '-SPEC:N', 'SPEC:*', '-SPEC:T/fin', 'PF:sti'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-COMP:V', '-COMP:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', '-COMP:A', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', 'LF:socks', '-COMP:N', 'LANG:FI', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', 'PF:sukka-'}
talo            {'-COMP:V', 'PF:talo', '-COMP:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', 'LF:house', '-COMP:N', 'LANG:FI', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
tama            ['LANG:EN']
tama-           {'PF:tama', '-COMP:V', '-COMP:C/fin', '-SPEC:FORCE', 'SPEC:A', 'LF:this', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', 'PHI', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', 'LANG:FI', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PF:taytyy', 'SPEC:*', 'PHI:NUM:_', 'MODAL', '-ASP', 'LF:must', '!COMP:A/inf', 'SPEC:ADV', '-COMP:T/fin', 'FIN', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'ARG', 'LANG:FI', 'SPEC:P', '-SPEC:T/fin', '-COMP:N'}
teki            ['LANG:FI']
teke-           {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', '-COMP:A/inf', 'PHI:NUM:_', 'ASP:BOUNDED', '-COMP:P', 'SPEC:ADV', 'PF:teke', 'COMP:D', 'LF:make', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', '!COMP:*', 'LANG:FI', 'SPEC:P', 'ASP', '!COMP:D', 'CLASS:TR', '-SPEC:T/fin', '-COMP:N'}
that            {'PF:that', 'LANG:EN', '-VAL', '!PROBE:T/fin', 'FIN', '-ARG', 'COMP:T/fin', '!COMP:*', 'FORCE', 'LF:that', 'COMP:C/fin', '-SPEC:*'}
the             {'PHI:DEF:DEF', 'LANG:EN', '-SPEC:C', '-SPEC:N', '-SPEC:D', '-SPEC:INF', 'D', '!PROBE:N', '-COMP:D', '-SPEC:V', 'OP', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:MA/lla', '-SPEC:P', 'adjoinable', '-ARG', '!COMP:*', 'PF:the', 'LF:the', '-SPEC:T/fin', '-COMP:uR', 'COMP:N'}
to              {'PHI:PER:_', '-float', 'LANG:EN', '-SPEC:v', '-VAL', '-SPEC:C', '-SPEC:iWH', '-SPEC:FORCE', '-COMP:uWH', 'LF:to', '-SPEC:N', 'PHI:NUM:_', '-SPEC:C/fin', 'PHI:GEN:_', '-SPEC:V', '+SEM:directional', '-SPEC:ADV', 'COMP:D', '-SPEC:Neg/fin', '-COMP:T/fin', 'PHI:DET:_', 'adjoinable', '-SPEC:P', 'ARG', '-SPEC:iR', '!COMP:*', 'PF:to', '-COMP:ADV', 'TAIL:V,+SEM:directional', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:*', 'P', '-COMP:N'}
to_inf          {'INF', '-COMP:C/fin', 'LANG:EN', '-SPEC:v', '-VAL', 'COMP:v', '-SPEC:V', 'TO/inf', 'COMP:V', '-COMP:FORCE', 'PF:TO/inf', '-COMP:T/fin', 'adjoinable', '?ARG', '!COMP:*', 'LF:TO/inf', '-SPEC:T/fin'}
towards         {'PF:towards', 'TAIL:V', 'PHI:PER:_', '-float', 'LANG:EN', '-SPEC:v', '-VAL', '-SPEC:C', '-SPEC:iWH', '-SPEC:FORCE', '-COMP:uWH', '-SPEC:N', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:C/fin', '-SPEC:V', 'LF:towards', '-SPEC:ADV', 'COMP:D', '-SPEC:Neg/fin', '-COMP:T/fin', 'PHI:DET:_', 'adjoinable', '-SPEC:P', 'ARG', '-SPEC:iR', '!COMP:*', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:*', 'P', '-COMP:N'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', 'LF:nudge', '-SPEC:FORCE', 'PF:tonaise', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'COMP:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', '!COMP:*', 'LANG:FI', 'SPEC:P', 'ASP', 'CLASS:TR', '-SPEC:T/fin', '-COMP:N'}
tta             {'PHI:PER:_', 'PF:tta', 'COMP:n/MA', '-SPEC:v', '-VAL', '-SPEC:C', '-SPEC:iWH', '-SPEC:FORCE', '-COMP:uWH', '-SPEC:N', 'SPEC:*', 'PHI:NUM:_', '-SPEC:C/fin', 'LF:without', '-SPEC:V', '-SPEC:ADV', 'COMP:D', '-SPEC:Neg/fin', '-COMP:T/fin', 'PHI:DET:_', 'ADV', 'adjoinable', '-SPEC:P', 'ARG', '-SPEC:iR', '!COMP:*', 'LANG:FI', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:INF', 'P', '-COMP:N'}
tries           ['LANG:EN']
try-            {'PHI:PER:_', '-COMP:V', 'V', 'LANG:EN', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', '!COMP:TO/inf', 'PHI:GEN:_', 'PHI:NUM:_', 'LF:try', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'PF:try', 'ARG', 'SPEC:P', 'ASP', '!COMP:-ARG', '-SPEC:T/fin', '-COMP:N'}
verifiche       {'PF:verifiche', '-COMP:V', '-COMP:C/fin', 'LF:verification', '-SPEC:FORCE', 'SPEC:A', 'LANG:IT', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'PHI:PER:_', '-COMP:V', 'V', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'LF:flow', 'PHI:NUM:_', 'ASP', '-COMP:D', 'SPEC:ADV', 'SPEC:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'PF:virtaa', 'LANG:FI', 'SPEC:P', '!COMP:P', '-SPEC:T/fin', '-COMP:N'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'PHI:PER:_', '-COMP:V', 'V', 'LANG:EN', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:GEN:_', 'PHI:NUM:_', 'SEM:internal', 'SPEC:ADV', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'LF:want', 'COMP:P', 'ARG', 'PF:volu', '!COMP:*', 'SPEC:P', 'ASP', '-SPEC:*', '-SPEC:T/fin', '-COMP:N'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'PHI:PER:_', '-COMP:V', 'V', 'LANG:EN', '-VAL', 'SPEC:TO/inf', 'LF:win', 'CLASS:TR', '-SPEC:FORCE', 'PHI:GEN:_', 'PHI:NUM:_', 'ASP:BOUNDED', 'SEM:achievement', '-COMP:P', 'SPEC:ADV', 'COMP:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', '!COMP:*', 'SPEC:P', 'ASP', 'PF:voitta', '-SPEC:T/fin', '-COMP:N'}
wants           ['LANG:EN']
want-           {'PHI:PER:_', 'COMP:TO/inf', '-COMP:V', 'V', '-SPEC:TO/inf', 'LANG:EN', '-VAL', '-SPEC:FORCE', 'PHI:GEN:_', 'PHI:NUM:_', 'PF:want', '-COMP:P', 'SPEC:ADV', 'COMP:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'LF:want', 'COMP:P', 'ARG', '!COMP:*', 'SPEC:P', 'ASP', 'CLASS:TR', '-SPEC:T/fin', '-COMP:N'}
what            ['LANG:EN']
what-           {'-COMP:V', '-COMP:C/fin', 'LANG:EN', 'PHI_N', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', 'PF:what', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', 'LF:what', '-COMP:ADV', '-COMP:AUX', '-COMP:*', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
which           {'LANG:EN', '-SPEC:C', 'PF:which', '-SPEC:N', '-SPEC:D', '-SPEC:INF', 'D', '!PROBE:N', '-COMP:D', '-SPEC:V', 'OP:WH', 'OP', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:MA/lla', 'LF:which', '-SPEC:P', 'adjoinable', '-ARG', '!COMP:*', '-SPEC:T/fin', '-COMP:uR', 'COMP:N'}
who             ['LANG:EN']
who-            {'-COMP:V', '-COMP:C/fin', 'LANG:EN', 'LF:who', 'PHI_N', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-COMP:*', '-SPEC:INF', 'PF:who', '-SPEC:T/fin', '-COMP:A'}
whether         {'LANG:EN', 'Q', '-VAL', 'PF:whether', '!PROBE:T/fin', 'COMP:T/fin', 'COMP:C/fin', 'OP:Q', 'OP:WH', 'OP', 'FIN', '-ARG', '!COMP:*', 'FORCE', 'LF:whether', '-SPEC:*'}
yrittaa         ['LANG:FI']
yritta-         {'PHI:PER:_', '-COMP:V', 'PF:yritta', 'V', 'LANG:EN', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:GEN:_', 'PHI:NUM:_', 'LF:try', 'SEM:internal', '!COMP:A/inf', 'SPEC:D', 'SPEC:ADV', '-COMP:T/fin', 'PHI:DET:_', '-COMP:v', 'COMP:P', 'ARG', 'SPEC:P', 'ASP', '!COMP:-ARG', '-SPEC:T/fin', '-COMP:N'}
mina            ['LANG:EN']
mina-           {'-COMP:V', '-COMP:C/fin', 'PHI_N', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', '-COMP:A', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'PF:mina', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', 'LANG:FI', '-COMP:AUX', '-COMP:ADV', '-COMP:*', '-SPEC:INF', '-SPEC:T/fin', 'LF:I'}
sina            ['LANG:EN']
sina-           {'-COMP:V', '-COMP:C/fin', 'PHI_N', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', 'LF:you', '-COMP:WH', '-COMP:N', 'PF:sina', 'LANG:FI', '-COMP:AUX', '-COMP:ADV', '-COMP:*', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
han             ['LANG:EN']
han-            {'-COMP:V', '-COMP:C/fin', 'PHI_N', '-SPEC:FORCE', 'SPEC:A', 'PF:han', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', 'LF:s/he', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', 'LANG:FI', '-COMP:AUX', '-COMP:ADV', '-COMP:*', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-COMP:V', '-COMP:C/fin', 'LF:we', 'PHI_N', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', 'PF:me', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', 'LANG:FI', '-COMP:AUX', '-COMP:ADV', '-COMP:*', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
te              ['LANG:EN']
te-             {'-COMP:V', '-COMP:C/fin', 'PHI_N', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', 'LF:you', '-COMP:WH', 'PF:te', '-COMP:N', 'LANG:FI', '-COMP:AUX', '-COMP:ADV', '-COMP:*', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he-             {'-COMP:V', '-COMP:C/fin', 'LF:they', 'PHI_N', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'PF:he', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', 'LANG:FI', '-COMP:AUX', '-COMP:ADV', '-COMP:*', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
he-             {'-COMP:V', '-COMP:C/fin', 'LANG:EN', 'PHI_N', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', '-COMP:A', 'COMP:uR', '-SPEC:ADV', 'PF:he', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-COMP:*', '-SPEC:INF', '-SPEC:T/fin', 'LF:he'}
se              ['LANG:FI']
se-             {'-SPEC:C', '-SPEC:N', '-SPEC:D', '-SPEC:INF', 'D', '!PROBE:N', 'LF:it/that', 'PF:se', '-COMP:D', '-SPEC:V', 'OP', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:MA/lla', '-SPEC:P', 'adjoinable', '-ARG', '!COMP:*', 'LANG:FI', '-SPEC:T/fin', '-COMP:uR', 'COMP:N'}
I               ['LANG:EN']
I-              {'-COMP:V', '-COMP:C/fin', 'LANG:EN', 'PF:I', 'PHI_N', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', '-COMP:A', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-COMP:*', '-SPEC:INF', '-SPEC:T/fin', 'LF:I'}
you             ['LANG:EN']
you-            {'-COMP:V', '-COMP:C/fin', 'LANG:EN', 'PHI_N', 'PF:you', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', 'LF:you', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-COMP:*', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
he              ['LANG:EN']
she             ['LANG:EN']
she-            {'-COMP:V', '-COMP:C/fin', 'LANG:EN', 'LF:she', 'PHI_N', 'PF:she', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-COMP:*', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
we              ['LANG:EN']
we-             {'PF:we', '-COMP:V', '-COMP:C/fin', 'LANG:EN', 'LF:we', 'PHI_N', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-COMP:*', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
you_pl          ['LANG:EN']
you_pl-         {'-COMP:V', 'PF:you_pl', 'LANG:EN', '-COMP:C/fin', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', 'PHI', '-COMP:D', '-SPEC:V', '-COMP:A', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', 'LF:you_pl'}
they            ['LANG:EN']
they-           {'-COMP:V', '-COMP:C/fin', 'LANG:EN', 'LF:they', 'PHI_N', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', 'PF:they', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-COMP:*', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
it              ['LANG:EN']
it-             {'LANG:EN', 'PF:it', '-SPEC:C', '-SPEC:N', '-SPEC:D', '-SPEC:INF', 'D', '!PROBE:N', 'LF:it/that', '-COMP:D', '-SPEC:V', 'OP', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:MA/lla', '-SPEC:P', 'adjoinable', '-ARG', '!COMP:*', '-SPEC:T/fin', '-COMP:uR', 'COMP:N'}
io              ['LANG:EN']
io-             {'-COMP:V', '-COMP:C/fin', 'PF:io', 'PHI_N', '-SPEC:FORCE', 'SPEC:A', 'LANG:IT', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', '-COMP:A', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-COMP:*', '-SPEC:INF', '-SPEC:T/fin', 'LF:I'}
tu              ['LANG:EN']
tu-             {'-COMP:V', '-COMP:C/fin', 'PHI_N', '-SPEC:FORCE', 'SPEC:A', 'LANG:IT', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'PF:tu', '-COMP:v', 'COMP:R/D', 'COMP:P', '-SPEC:R', '-SPEC:P', 'LF:you', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-COMP:*', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
lui             ['LANG:EN']
lui-            {'-COMP:V', '-COMP:C/fin', 'PHI_N', '-SPEC:FORCE', 'SPEC:A', 'LANG:IT', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', '-COMP:A', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', 'PF:lui', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-COMP:*', '-SPEC:INF', '-SPEC:T/fin', 'LF:he'}
lei             ['LANG:EN']
lei-            {'-COMP:V', '-COMP:C/fin', 'LF:she', 'PHI_N', '-SPEC:FORCE', 'SPEC:A', 'LANG:IT', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', 'PF:lei', '-COMP:ADV', '-COMP:AUX', '-COMP:*', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
noi             ['LANG:EN']
noi-            {'-COMP:V', '-COMP:C/fin', 'LF:we', 'PHI_N', '-SPEC:FORCE', 'SPEC:A', 'LANG:IT', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', 'PF:noi', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-COMP:*', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
voi             ['LANG:EN']
voi-            {'-COMP:V', '-COMP:C/fin', 'PHI_N', '-SPEC:FORCE', 'SPEC:A', 'LANG:IT', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', '-COMP:A', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', 'PF:voi', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-COMP:*', '-SPEC:INF', '-SPEC:T/fin', 'LF:you_pl'}
loro            ['LANG:EN']
loro-           {'-COMP:V', '-COMP:C/fin', 'LF:they', 'PHI_N', 'PF:loro', '-SPEC:FORCE', 'SPEC:A', 'LANG:IT', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-COMP:*', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
mi              ['LANG:EN']
mi-             {'-COMP:V', 'PHI_N', '-SPEC:FORCE', 'LANG:IT', '-SPEC:uWH', 'N', 'CL', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', '-COMP:T/fin', '-COMP:v', '-COMP:ADV', 'LF:me', '-SPEC:INF', '-COMP:N', '-COMP:C/fin', 'PF:mi(cl)', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', 'COMP:R', 'COMP:R/D', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:AUX', '-COMP:*', '-SPEC:T/fin', '-COMP:A'}
la              ['LANG:EN']
la-             {'-COMP:V', 'PHI_N', '-SPEC:FORCE', 'LANG:IT', '-COMP:*', '-SPEC:uWH', 'N', 'CL', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', '-COMP:T/fin', '-COMP:v', '-COMP:ADV', '-SPEC:INF', '-COMP:N', '-COMP:C/fin', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', 'COMP:R', 'COMP:R/D', 'COMP:P', '-SPEC:R', '-SPEC:P', 'PF:la(cl)', '-COMP:WH', '-COMP:AUX', 'LF:her', '-SPEC:T/fin', '-COMP:A'}
lo              ['LANG:EN']
lo-             {'-COMP:V', 'LF:him', 'PHI_N', '-SPEC:FORCE', 'LANG:IT', '-SPEC:uWH', 'N', 'CL', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', '-COMP:T/fin', '-COMP:v', '-COMP:ADV', '-SPEC:INF', '-COMP:N', '-COMP:C/fin', 'SPEC:A', '-SPEC:N', 'PF:lo(cl)', '-SPEC:C/fin', 'COMP:R', 'COMP:R/D', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:AUX', '-COMP:*', '-SPEC:T/fin', '-COMP:A'}
si              ['LANG:EN']
si-             {'-COMP:V', 'PHI_N', 'LF:3sg', '-SPEC:FORCE', 'LANG:IT', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', '-COMP:T/fin', '-COMP:v', '-COMP:ADV', '-SPEC:INF', '-COMP:N', '-COMP:C/fin', 'SPEC:A', '-SPEC:N', 'PF:si(cl)', 'CAL:CL', '-SPEC:C/fin', 'COMP:R', 'COMP:R/D', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:AUX', '-COMP:*', '-SPEC:T/fin', '-COMP:A'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-COMP:V', '-COMP:C/fin', 'PHI_N', 'PF:ci', '-SPEC:FORCE', 'SPEC:A', 'LANG:IT', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', '-COMP:D', 'LF:there', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', '-COMP:T/fin', 'COMP:R/D', '-COMP:v', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-COMP:*', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
[-n]            {'inflectional', 'LANG:FI', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-t]            {'inflectional', 'LANG:FI', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-V]            {'inflectional', 'LANG:FI', 'PHI:PER:3', 'PHI', 'PHI:NUM:SG'}
[-mme]          {'inflectional', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI', 'PHI:DET:DEF', 'PHI:PER:1'}
[-mme]          {'inflectional', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:DET:DEF', 'PHI:PER:1'}
[-tte]          {'inflectional', 'LANG:FI', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI', 'PHI:DET:DEF'}
[-vat]          {'inflectional', 'LANG:FI', 'PHI:PER:3', 'PHI:NUM:PL', 'PHI'}
[-ni]           {'inflectional', 'LANG:FI', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-si]           {'inflectional', 'LANG:FI', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-nsa]          {'inflectional', 'LANG:FI', 'PHI:PER:3', 'PHI', 'PHI:NUM:SG'}
[-an]           {'inflectional', 'PHI', 'LANG:FI', 'PHI:PER:3'}
[-nne]          {'inflectional', 'LANG:FI', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:DET:DEF'}
[-s]            {'inflectional', 'LANG:EN', 'PHI:PER:3', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI', 'PHI:GEN:F'}
[-0]            {'inflectional', 'PHI:PER:2', 'LANG:EN', 'PHI:NUM:SG', 'PHI:NUM:PL', 'PHI:GEN:N', 'PHI:PER:3', 'PHI', 'PHI:DET:DEF', 'PHI:PER:1'}
[-o]            {'inflectional', 'LANG:IT', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-i]            {'inflectional', 'LANG:IT', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-a]            {'inflectional', 'LANG:IT', 'PHI:PER:3', 'PHI', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-e]            {'inflectional', 'LANG:IT', 'PHI:PER:3', 'PHI', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-iamo]         {'inflectional', 'LANG:IT', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI', 'PHI:DET:DEF', 'PHI:PER:1'}
[-te]           {'inflectional', 'LANG:IT', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI', 'PHI:DET:DEF'}
[-no]           {'inflectional', 'LANG:IT', 'PHI:PER:3', 'PHI:NUM:PL', 'PHI', 'PHI:DET:DEF'}
[-nom]          {'inflectional', 'LANG:EN', 'TAIL:FIN,ARG,VAL', 'adjoinable', 'NOM'}
[-par]          {'PAR', 'inflectional', 'LANG:FI', 'TAIL:ARG,-VAL', 'adjoinable'}
[-gen]          {'-float', 'inflectional', 'LANG:EN', 'GEN', 'TAIL:INF,ARG'}
gen             {'-float', 'inflectional', 'LANG:EN', 'GEN', 'TAIL:INF,ARG'}
[-n_acc]        {'n-ACC', 'inflectional', 'LANG:FI', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'adjoinable', 'TAIL:PHI'}
[-t_acc]        {'inflectional', 'LANG:FI', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 't-ACC', 'adjoinable'}
[-0_acc]        {'inflectional', 'LANG:FI', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*PHI', 'TAIL:*POL:NEG', '0_ACC', 'adjoinable'}
asp             {'inflectional', 'LANG:EN', 'ASP:BOUNDED'}
a'              {'LF:A', 'LANG:X', 'a', 'PF:a'}
b'              {'LF:B', 'b', 'PF:b', 'LANG:X'}
b''             {'LANG:EN', '-COMP:c', 'LF:B', 'b', 'PF:b'}
c''             {'SPEC:a', 'LANG:EN', 'LF:C', 'PF:c', 'c'}
c'              {'PF:c', 'c', 'LANG:X', 'LF:C'}
d'              {'d', 'PF:d', 'LF:D', 'LANG:'}
a''             ['LANG:EN']
x'              {'LF:X', 'LANG:X', 'PF:x', 'x'}
y'              {'LANG:X', 'y', 'PF:y', 'LF:Y'}
z'              {'LANG:X', 'z', 'PF:x', 'LF:Z'}
John'           {"N'", 'LF:John', 'LANG:X', 'PF:John'}
admires'        {'PF:admires', 'LANG:X', 'LF:admires', "V'"}
admires''       {'PHI:PER:_', '-COMP:V', 'V', 'LANG:EN', '-VAL', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:GEN:_', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:D', '-COMP:T/fin', 'LF:admires', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'ARG', 'PF:admires', 'SPEC:P', 'ASP', '-SPEC:T/fin', '-COMP:N'}
Mary'           {"N'", 'LF:mary', 'LANG:X', 'PF:Mary'}
T/fin           {'PHI:PER:_', '!PROBE:V', 'T', '-SPEC:TO/inf', 'LANG:EN', '-SPEC:v', 'PF:T', 'SPEC:TO/inf', 'COMP:v', 'VAL', 'LF:T', '-SPEC:FORCE', '-SPEC:N', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:C/fin', '-COMP:INF', 'SPEC:*', '-SPEC:V', 'COMP:T/prt', '-SPEC:Neg', 'COMP:D', 'SPEC:D', 'COMP:V', 'T/fin', '-COMP:T/fin', 'FIN', 'PHI:DET:_', 'ARG', '!COMP:*', '!SPEC:D', '-SPEC:T/fin'}
v               {'PHI:PER:_', '!PROBE:V', 'COMP:V', 'SPEC:D', 'LANG:EN', '-VAL', 'PHI:DET:_', 'ARG', '!COMP:*', 'LF:v', 'PF:v', '-SPEC:N', 'PHI:NUM:_', 'PHI:GEN:_', 'ASP', 'v'}
C/fin           {'C', 'C/fin', '-COMP:C/fin', 'LANG:EN', 'VAL', 'COMP:T/fin', '-COMP:T/prt', 'SPEC:*', '-SPEC:N', '-SPEC:C/fin', 'COMP:Neg/fin', 'PF:C', 'FIN', '-ARG', '!COMP:*', 'LF:C/fin', '!PROBE:FIN', '-SPEC:T/fin'}
T               {'PHI:PER:_', 'T', '!PROBE:V', 'LANG:EN', 'PF:T', 'COMP:v', '-COMP:NEG', 'VAL', 'LF:T', '-SPEC:FORCE', '-SPEC:N', 'PHI:NUM:_', 'PHI:GEN:_', 'SPEC:*', '-SPEC:V', 'COMP:T/prt', 'COMP:D', 'COMP:V', 'SPEC:D', 'FIN', 'PHI:DET:_', 'ARG', '!COMP:*', '-SPEC:T/fin'}
T/prt           {'PHI:PER:_', '!PROBE:V', 'T', 'LANG:EN', 'COMP:v', '-COMP:NEG', 'VAL', 'PF:T/prt', '-SPEC:FORCE', '-SPEC:N', 'SPEC:*', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:V', 'COMP:T/prt', 'COMP:V', 'SPEC:D', 'LF:T/prt', 'COMP:D', 'FIN', 'PHI:DET:_', 'ARG', 'T/prt', '!COMP:*', '-SPEC:T/fin'}
a0              {'LANG:EN', 'A', 'TAIL:D', 'adjoinable', 'LF:A', '-SPEC:A', '-SPEC:D', 'COMP:0', '-adjoinable', 'PF:A'}
n               {'-COMP:V', 'VAL', '-SPEC:FORCE', 'PHI:GEN:_', 'PHI:NUM:_', '-SPEC:uWH', 'N', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', '-COMP:T/fin', '-COMP:v', 'ARG', 'PF:n', '!COMP:*', '-COMP:ADV', '!SPEC:*', '-SPEC:INF', '-COMP:N', 'PHI:PER:_', 'INF', '-COMP:C/fin', 'LANG:EN', 'COMP:v', 'SPEC:A', '-SPEC:N', 'SPEC:*', '-SPEC:C/fin', 'n', 'COMP:0', 'COMP:R', 'COMP:V', 'LF:n', 'COMP:R/D', 'COMP:P', '-SPEC:R', '-SPEC:P', 'PHI:DET:_', '-COMP:WH', '!SPEC:D', '-COMP:AUX', '-SPEC:T/fin', '-COMP:A'}
impass          {'LF:impass', 'PHI:PER:_', 'PF:impass', '!PROBE:V', 'COMP:V', 'SPEC:D', 'LANG:EN', '-VAL', 'PHI:DET:_', 'ARG', '!COMP:*', '-SPEC:N', 'PHI:NUM:_', 'PHI:GEN:_', 'ASP', 'v'}
cau             {'PHI:PER:_', '!PROBE:V', 'COMP:V', 'SPEC:D', 'LANG:EN', '-VAL', 'PHI:DET:_', 'ARG', 'LF:v/Cause', '!COMP:*', '-SPEC:N', 'PHI:NUM:_', 'PHI:GEN:_', 'ASP', 'v', 'PF:Cau'}
INF             {'INF', 'COMP:V', '-COMP:C/fin', 'LANG:EN', '-COMP:FORCE', '-COMP:T/fin', 'COMP:v', 'PF:INF', '!COMP:*', 'LF:INF', '-SPEC:T/fin', '-SPEC:V'}
prtcpl          {'PHI:PER:_', 'INF', 'T', '!PROBE:V', '-COMP:C/fin', 'LANG:EN', 'COMP:v', '-COMP:NEG', 'VAL', 'PF:T/prt', '-SPEC:FORCE', '-SPEC:N', 'SPEC:*', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:V', 'COMP:T/prt', 'SPEC:D', 'COMP:D', 'LF:T/prt', 'COMP:V', '-COMP:FORCE', '-COMP:T/fin', 'FIN', 'PHI:DET:_', 'ARG', 'T/prt', '!COMP:*', '-SPEC:T/fin'}
TO/inf          {'INF', '-COMP:C/fin', 'LANG:EN', '-SPEC:v', '-VAL', 'COMP:v', '!COMP:V', '-SPEC:V', 'TO/inf', 'COMP:V', '-COMP:FORCE', 'PF:TO/inf', '-COMP:T/fin', 'adjoinable', '?ARG', '!COMP:*', 'LF:TO/inf', '-SPEC:T/fin'}
A/inf           {'A/inf', 'INF', '-COMP:C/fin', 'LANG:EN', 'COMP:v', 'LF:A/inf', 'SPEC:*', '-SPEC:V', 'COMP:V', '-SPEC:Neg/fin', '-COMP:FORCE', '-COMP:T/fin', '?ARG', '!COMP:*', 'PF:A/inf', '?VAL', '-SPEC:T/fin'}
ARE/inf         {'INF', '-COMP:C/fin', 'LANG:EN', 'COMP:v', 'VAL', 'ARE/inf', 'PF:are', 'SPEC:*', '-adjoinable', '-SPEC:V', 'COMP:V', '-COMP:FORCE', '-COMP:T/fin', '?ARG', 'LF:ARE/inf', '!COMP:*', '-SPEC:T/fin'}
ESSA/inf        {'INF', '-COMP:C/fin', 'LANG:EN', 'COMP:v', '-SPEC:FORCE', 'LF:while', 'ESSA/inf', 'SPEC:*', '-SPEC:N', '-SPEC:V', 'PF:essa', 'TAIL:T', 'COMP:V', '-COMP:FORCE', '-SPEC:Neg/fin', '-COMP:T/fin', 'ADV', 'adjoinable', '?ARG', '!COMP:*', '?VAL', '-SPEC:T/fin'}
TUA/inf         {'PHI:PER:_', 'INF', 'CAL', '-COMP:C/fin', 'LANG:EN', 'COMP:v', '-SPEC:FORCE', '-SPEC:N', 'PHI:NUM:_', 'PHI:GEN:_', 'LF:after', '-SPEC:V', 'TAIL:T', 'COMP:V', '-COMP:FORCE', '-SPEC:Neg/fin', 'PF:tua', '-COMP:T/fin', 'ADV', 'PHI:DET:_', 'adjoinable', 'ARG', '!COMP:*', 'TUA/inf', '!SPEC:*', '-SPEC:T/fin'}
VA/inf          {'PHI:PER:_', 'INF', '-COMP:C/fin', 'LANG:EN', 'COMP:v', 'VAL', '-SPEC:N', 'PHI:NUM:_', 'PHI:GEN:_', 'SPEC:*', '-SPEC:V', 'PF:vAn', 'COMP:V', '-COMP:FORCE', '-COMP:T/fin', 'PHI:DET:_', 'LF:VA', 'ARG', '!COMP:*', 'VA/inf', '!SPEC:*', '-SPEC:T/fin'}
MA/ssa          {'PHI:PER:_', 'TAIL:V', 'LANG:EN', '-VAL', 'COMP:v', '-SPEC:FORCE', '-SPEC:N', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:V', '-SPEC:Neg/fin', 'PHI:DET:_', 'MA/inf', 'ADV', 'adjoinable', 'ARG', 'PF:massa', '-SPEC:*', 'LF:in_doing', '-SPEC:T/fin'}
MA/tta          {'PHI:PER:_', 'LF:without_doing', 'TAIL:T', 'LANG:EN', '-VAL', '-SPEC:Neg/fin', 'PHI:DET:_', 'MA/inf', 'ADV', 'adjoinable', 'ARG', '-SPEC:FORCE', '-SPEC:N', 'PHI:NUM:_', 'PHI:GEN:_', 'PF:matta', '-SPEC:T/fin'}
MA/lla          {'-SPEC:FORCE', 'PHI:GEN:_', 'PHI:NUM:_', 'TAIL:T', 'LF:by_doing', '-SPEC:Neg/fin', 'MA/inf', 'ADV', 'ARG', 'PHI:PER:_', 'LANG:EN', '-VAL', 'COMP:v', '-SPEC:N', 'COMP:V', 'PHI:DET:_', 'PF:malla', 'adjoinable', '-SPEC:T/fin'}
MA/inf          {'TAIL:V', '-SPEC:FORCE', 'PHI:GEN:_', 'PHI:NUM:_', '-SPEC:Neg/fin', 'MA/inf', 'ADV', 'ARG', 'PHI:PER:_', 'PF:maan', 'LANG:EN', '-VAL', 'COMP:v', '-SPEC:N', 'COMP:V', 'PHI:DET:_', 'adjoinable', 'LF:to_do', '-SPEC:T/fin'}
E/inf           {'PF:en', '-SPEC:Neg/fin', '-VAL', 'ADV', 'adjoinable', '-ARG', '-SPEC:FORCE', 'LF:by', 'LANG:FI', '-SPEC:N', 'SPEC:*', '-SPEC:T/fin'}
BE-             {'-COMP:V', 'V', 'LANG:EN', '-VAL', 'SPEC:TO/inf', 'PF:BE', '-SPEC:FORCE', 'COMP:T/prt', 'SPEC:ADV', 'SPEC:D', 'COPULA', '-COMP:T/fin', '-COMP:v', 'COMP:P', '-ARG', '!COMP:*', 'SPEC:P', 'ASP', 'LF:BE', '-SPEC:T/fin', '-COMP:N'}
D               {'LANG:EN', '-SPEC:C', 'LF:D', '-SPEC:N', '-SPEC:D', '-SPEC:INF', 'D', '!PROBE:N', '-COMP:D', '-SPEC:V', 'OP', '-SPEC:Neg/fin', '-COMP:T/fin', '-SPEC:MA/lla', '-SPEC:P', 'adjoinable', '-ARG', '!COMP:*', '-SPEC:T/fin', '-COMP:uR', 'PF:D', 'COMP:N'}
P               {'PHI:PER:_', '-float', 'LANG:EN', 'LF:P', '-SPEC:v', '-VAL', '-SPEC:C', '-SPEC:iWH', '-SPEC:FORCE', 'PF:P', '-COMP:uWH', '-SPEC:N', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:C/fin', '-SPEC:V', '-SPEC:ADV', 'COMP:D', '-SPEC:Neg/fin', '-COMP:T/fin', 'PHI:DET:_', 'adjoinable', '-SPEC:P', 'ARG', '-SPEC:iR', '!COMP:*', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:*', 'P', '-COMP:N'}
pro             ['LANG:EN']
pro-            {'-COMP:V', '-COMP:C/fin', 'LANG:EN', '-SPEC:FORCE', 'SPEC:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:uWH', 'N', 'PHI', '-COMP:D', '-SPEC:V', 'COMP:uR', '-SPEC:ADV', 'COMP:R', 'PF:(pro)', 'LF:pro', '-COMP:T/fin', '-COMP:v', 'COMP:R/D', 'COMP:P', '-SPEC:R', '-SPEC:P', '-COMP:WH', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-SPEC:INF', '-SPEC:T/fin', '-COMP:A'}
cl              {'RIGHT:ARE/inf', 'LEFT:D,CL', 'inflectional', 'LANG:EN', 'LEFT:T/fin', 'RIGHT:PRG', 'CL'}
inc             {'inflectional', 'INCORPORATED', 'LANG:EN'}
sg              {'inflectional', 'LANG:EN', 'PHI:NUM:SG'}
pl              {'inflectional', 'PHI:NUM:PL', 'LANG:EN'}
1p              {'inflectional', 'LANG:EN', 'PHI:PER:1'}
2p              {'inflectional', 'PHI:PER:2', 'LANG:EN'}
3p              {'inflectional', 'LANG:EN', 'PHI:PER:3'}
def             {'inflectional', 'LANG:EN', 'PHI:DET:DEF'}
indef           {'inflectional', 'LANG:EN', 'PHI:DET:INDEF'}
hum             {'PHI:HUM:HUM', 'inflectional', 'LANG:EN'}
nonhum          {'inflectional', 'PHI:HUM:NONHUM', 'LANG:EN'}
m               {'PHI:GEN:M', 'inflectional', 'LANG:EN'}
f               {'inflectional', 'LANG:EN', 'PHI:GEN:F'}
nom             {'LANG:EN', 'inflectional', 'TAIL:FIN,!COMP:*,VAL', 'NOM'}
acc             {'TAIL:v', 'inflectional', 'ACC', 'LANG:EN'}
dat             {'DAT', 'TAIL:v', 'inflectional', 'LANG:EN'}
uC/op           {'inflectional', 'uC/op', 'LANG:EN'}
wh              {'OP:WH', 'inflectional', 'OP:_', 'LANG:EN'}
wh_             {'inflectional', 'OP', 'LANG:EN', 'FORCE:OP:WH', 'OP:_'}
top             {'inflectional', 'LANG:EN', 'OP:TOP'}
foc             {'inflectional', 'OP:FOC', 'LANG:EN'}
C/op            {'inflectional', 'LANG:EN', 'OP:C/OP'}
rel             {'adjoinable', 'inflectional', '-COMP:C/fin', 'LANG:EN', 'OP:REL'}
Q               {'OP:WH', 'inflectional', 'OP', 'LANG:EN', 'OP:Q'}
