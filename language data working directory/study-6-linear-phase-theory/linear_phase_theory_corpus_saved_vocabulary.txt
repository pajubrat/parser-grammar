ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'-COMP:uWH', '-COMP:T/fin', '-COMP:ADV', 'PF:a', '-SPEC:T/fin', 'LF:to', '-SPEC:v', 'adjoinable', '-SPEC:N', '-ARG', '!COMP:*', '-SPEC:C', '-SPEC:C/fin', 'COMP:D', 'P', '-SPEC:*', '-SPEC:iR', 'LANG:IT', '-COMP:N', '-SPEC:iWH', '-SPEC:P', '-VAL', '-SPEC:INF', '-SPEC:ADV', '-SPEC:V', '-SPEC:FORCE', '-SPEC:Neg/fin', 'COMP:ARE/inf'}
a_D             {'!PROBE:N', 'LANG:EN', 'OP', '-COMP:D', 'LF:D', '-COMP:T/fin', '-SPEC:T/fin', '-SPEC:N', 'adjoinable', '-COMP:uR', '-ARG', '-SPEC:C', '!COMP:*', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:P', '-SPEC:INF', 'D', 'PF:D', 'COMP:N', '-SPEC:Neg/fin', '-SPEC:D'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'V', 'CLASS:TR', '-COMP:Neg', 'PF:admire', 'LANG:EN', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', '!COMP:*', '-SPEC:Neg', 'COMP:D', 'SPEC:TO/inf', 'PHI:GEN:_', '-COMP:P', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'LF:admire', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
admire*         ['LANG:EN']
T/fin*          {'!SPEC:*', 'LANG:EN', "PF:T/fin'", '-VAL', 'CAT:T/fin', 'LF:T', 'NO_NUMBER', 'NO_DET'}
v*              {'-VAL', 'LANG:EN', 'LF:v', 'PF:v', 'NO_NUMBER', 'NO_DET', 'CAT:v'}
admire**        ['LANG:EN']
T/fin**         {'!SPEC:*', 'LANG:EN', 'PHI:PER:3', 'NO_DET', '-VAL', 'NO_PERSON', 'CAT:T/fin', 'LF:T', 'NO_NUMBER', "PF:T/fin''"}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'V', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'COMP:D', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', 'LANG:IT', '-COMP:v', '-COMP:N', 'PHI:DET:_', 'PF:adora', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'LF:admire', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
antaa           ['LANG:FI']
anta-           {'V', 'SPEC:D', 'SPEC:ADV', '-COMP:FIN', 'ARG', 'LF:give', '-SPEC:T/fin', 'ASP', 'PF:antaa', 'ASP:BOUNDED', '!COMP:*', 'COMP:D', 'SPEC:TO/inf', 'LANG:FI', 'PHI:PER:_', '-COMP:N', 'CLASS:DITR', '-COMP:v', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V', '+SEM:directional'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'V', 'SPEC:D', 'SEM:internal', 'LANG:EN', 'PF:ask', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'LF:ask', 'COMP:D', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
ask-            {'V', 'SPEC:D', 'SEM:internal', 'LANG:EN', 'PF:ask', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'LF:ask', 'COMP:D', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', 'PF:avain', 'LF:key', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', '-SEM:directional', 'LANG:FI', 'SPEC:A', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'COMP:uR', 'LF:car', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', '-SEM:directional', 'LANG:FI', 'SPEC:A', '-COMP:v', '-COMP:N', 'PF:auto', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
city            {'COMP:uR', 'LANG:EN', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', 'LF:city', '-SPEC:C/fin', 'PF:city', 'SPEC:A', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
che             ['LANG:IT']
che-            {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', '-COMP:*', 'SPEC:A', 'PHI_N', 'LF:who', '-SPEC:V', 'LANG:IT', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', 'PF:che', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
chiamato        ['LANG:IT']
chiamata-       {'V', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'LF:called', 'PF:chiamato', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', 'LANG:IT', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
danno           {'COMP:uR', 'LF:damage', '-COMP:T/fin', 'N', '-COMP:D', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'SPEC:A', 'LANG:IT', '-COMP:v', '-COMP:N', 'PF:danno', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'V', 'SEM:internal', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'PF:detest', 'COMP:D', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', 'LANG:IT', '-COMP:v', '-COMP:N', 'PHI:DET:_', 'LF:detest', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V', 'COMP:ARE/inf'}
devono          ['LANG:EN']
deva-           {'V', 'SPEC:D', 'SEM:internal', 'SPEC:ADV', 'ARG', 'LF:must', '-SPEC:T/fin', '-ASP', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', 'LANG:IT', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'PF:deva', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V', 'COMP:ARE/inf'}
di              {'-COMP:uWH', 'ARG', '-COMP:T/fin', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:v', '-SPEC:N', '!COMP:*', '-adjoinable', '-SPEC:C', '-SPEC:C/fin', 'COMP:D', 'P', 'LANG:FI', '-SPEC:iR', 'LF:of', '-SPEC:V', '-COMP:N', '-SPEC:iWH', 'PHI:PER:_', '-SPEC:P', 'PHI:DET:_', '-VAL', '-SPEC:INF', '-SPEC:ADV', 'PHI:NUM:_', 'SPEC:*', '-SPEC:FORCE', 'PF:di', '-SPEC:Neg/fin'}
does            {'PHI:NUM:SG', 'SPEC:INF', 'COMP:v', 'SPEC:D', 'LANG:EN', 'FIN', 'T', '!SPEC:*', 'ARG', '-COMP:T/fin', 'VAL', 'PHI:PER:3', '-SPEC:T/fin', '-SPEC:v', 'COMP:V', '-SPEC:N', '!COMP:*', '-SPEC:C/fin', 'T/fin', 'COMP:D', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:Neg', 'SPEC:*', 'PHI:GEN:M', 'PF:does', 'LF:does', 'PHI:PER:_', '-COMP:INF', 'PHI:DET:_', 'COMP:T/prt', 'PHI:NUM:_', '-SPEC:V', '-SPEC:FORCE', 'PHI:GEN:F', '!PROBE:V'}
does_C          ['LANG:EN']
does-           {'PHI:NUM:SG', 'SPEC:INF', 'COMP:v', 'SPEC:D', 'LANG:EN', 'FIN', 'T', '!SPEC:*', 'ARG', '-COMP:T/fin', 'VAL', 'PHI:PER:3', '-SPEC:T/fin', '-SPEC:v', 'COMP:V', '-SPEC:N', '!COMP:*', '-SPEC:C/fin', 'T/fin', 'COMP:D', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:Neg', 'SPEC:*', 'PHI:GEN:M', 'PF:does', 'LF:does', 'PHI:PER:_', '-COMP:INF', 'PHI:DET:_', 'COMP:T/prt', 'PHI:NUM:_', '-SPEC:V', '-SPEC:FORCE', 'PHI:GEN:F', '!PROBE:V'}
dorme           ['LANG:IT']
dorme-          {'V', 'LANG:EN', 'SPEC:ADV', 'ARG', 'PF:dorme', '-SPEC:T/fin', 'ASP', '!SPEC:D', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V', 'LF:sleep'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'SEM:internal', '!SPEC:*', 'FIN', 'PF:ei', 'ARG', '!COMP:T', 'VAL', '%SPEC:INF', '-SPEC:T/fin', 'LF:neg', '!COMP:*', '-SPEC:T', 'LANG:FI', 'Neg/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'POL:NEG', 'SPEC:*', 'COMP:T/prt', 'NEG'}
e-              {'SEM:internal', '!SPEC:*', 'FIN', 'PF:ei', 'ARG', '!COMP:T', 'VAL', '%SPEC:INF', '-SPEC:T/fin', 'LF:neg', '!COMP:*', '-SPEC:T', 'LANG:FI', 'Neg/fin', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'POL:NEG', 'SPEC:*', 'COMP:T/prt', 'NEG'}
elaa            ['LANG:FI']
ela-            {'V', 'SPEC:D', 'SPEC:ADV', 'ARG', '-COMP:D', '-SPEC:T/fin', 'ASP', 'PF:elaa', 'SPEC:TO/inf', 'LANG:FI', 'LF:live', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V', 'CLASS:INTR'}
etsii           ['LANG:FI']
etsi-           {'V', 'PF:etsi', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'COMP:D', 'SPEC:TO/inf', 'LANG:FI', 'PHI:PER:_', '!COMP:D', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'LF:search', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
etta            {'LANG:FI', '-SPEC:*', 'FORCE', 'COMP:T/fin', 'FIN', 'PF:ettÃ¤', '-VAL', '!PROBE:T/fin', 'LF:that', '!COMP:*', '-ARG', 'COMP:C/fin'}
flow'           {'V', 'SPEC:D', 'LANG:EN', 'PF:flow', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'LF:flow', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
from            {'LANG:EN', '-COMP:uWH', 'ARG', '-COMP:T/fin', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:v', 'adjoinable', '-SPEC:N', '!COMP:*', '-SPEC:C', '-SPEC:C/fin', 'LF:from', 'COMP:D', 'P', 'TAIL:V,+SEM:directional', '-SPEC:*', 'PHI:GEN:_', '-SPEC:iR', '-SPEC:V', 'PHI:PER:_', '-COMP:N', '-SPEC:iWH', '-SPEC:P', '-float', 'PHI:DET:_', '-VAL', '-SPEC:INF', '-SPEC:ADV', 'PHI:NUM:_', 'PF:from', '-SPEC:FORCE', '-SPEC:Neg/fin'}
gave            ['LANG:EN']
give-           {'V', 'SPEC:D', 'LANG:EN', 'SPEC:ADV', '-COMP:FIN', 'ARG', 'LF:give', '-SPEC:T/fin', 'ASP', '!COMP:*', 'COMP:D', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', '-COMP:N', 'PF:give', 'CLASS:DITR', '-COMP:v', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V', '+SEM:directional'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', 'PF:Giuseppe', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'LF:Giuseppe', '-SEM:directional', 'SPEC:A', 'LANG:IT', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'V', 'CLASS:TR', 'SEM:internal', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'COMP:A/inf', 'ASP', 'ASP:BOUNDED', '!COMP:*', 'PF:haluaa', 'COMP:D', 'SPEC:TO/inf', '-SPEC:*', 'LANG:FI', '-COMP:P', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'PHI:DET:_', '-VAL', 'LF:want', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
hairitsee       ['LANG:FI']
hairitse-       {'V', 'SPEC:D', 'SPEC:ADV', '-COMP:FIN', 'ARG', '-SPEC:T/fin', 'ASP', 'LF:disturb', 'SPEC:TO/inf', 'LANG:FI', 'PHI:PER:_', '!COMP:D', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V', 'PF:hairitsee'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'V', 'SPEC:D', 'SEM:internal', 'PF:ha', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'LF:have', '-ASP', 'COMP:T', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', 'LANG:IT', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', 'SPEC:*', '-SPEC:FORCE', '-COMP:V'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'V', 'SPEC:D', 'SPEC:ADV', 'ARG', '-COMP:D', '-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'LANG:FI', 'PF:havia', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'LF:disappear', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V', 'CLASS:INTR'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'CLASS:TR', 'V', 'PF:ihaile-', '-COMP:FIN', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', '!COMP:*', 'COMP:D', 'SPEC:TO/inf', 'LANG:FI', '-COMP:P', 'PHI:PER:_', '!COMP:D', '-COMP:N', '-COMP:v', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'LF:admire', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
il              {'!PROBE:N', 'OP', '-COMP:D', '-COMP:T/fin', '-SPEC:T/fin', 'PF:il', '-SPEC:N', 'adjoinable', '-COMP:uR', '-ARG', '-SPEC:C', '!COMP:*', 'LANG:IT', '-SPEC:MA/lla', '-SPEC:P', 'LF:the', '-SPEC:INF', 'D', '-SPEC:V', 'COMP:N', '-SPEC:Neg/fin', '-SPEC:D'}
i               {'!PROBE:N', 'OP', '-COMP:D', '-COMP:T/fin', '-SPEC:T/fin', 'PF:il', '-SPEC:N', 'adjoinable', '-COMP:uR', '-ARG', '-SPEC:C', '!COMP:*', 'LANG:IT', '-SPEC:MA/lla', '-SPEC:P', 'LF:the', '-SPEC:INF', 'D', '-SPEC:V', 'COMP:N', '-SPEC:Neg/fin', '-SPEC:D'}
in              {'LF:in', 'PF:in', '-COMP:uWH', 'ARG', '-COMP:T/fin', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:v', 'adjoinable', '-SPEC:N', '!COMP:*', '-SPEC:C', '-SPEC:C/fin', 'COMP:D', 'P', 'PHI:GEN:_', '-SPEC:iR', 'PHI:PER:_', 'LANG:IT', '-COMP:N', '-SPEC:iWH', '-SPEC:P', 'PHI:DET:_', '-VAL', '-SPEC:INF', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:V', '-SPEC:FORCE', '-SPEC:Neg/fin'}
infermieri      {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'SPEC:A', 'PF:infermieri', 'LANG:IT', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', 'LF:nurses', '-SPEC:INF', '-SPEC:ADV', '-COMP:C/fin', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
is              ['LANG:EN']
be-             {'V', 'SPEC:D', 'LF:be', 'PF:be', 'COPULA', 'LANG:EN', 'SPEC:ADV', '-SPEC:T/fin', 'ASP', '-COMP:TO/inf', '-ARG', '!COMP:*', 'SPEC:TO/inf', '-COMP:v', '-COMP:N', '-VAL', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
istuuko         ['LANG:FI']
istuu-          {'V', 'SPEC:D', 'SPEC:ADV', 'ARG', '-COMP:D', 'PF:istuu', '-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'LANG:FI', 'PHI:PER:_', 'LF:sit', '-COMP:N', '-COMP:v', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V', 'CLASS:INTR'}
John            ['LANG:EN']
John-           {'COMP:uR', 'LANG:EN', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', '-adjoinable', '-SEM:directional', 'LF:John', 'SPEC:A', '-COMP:v', '-COMP:N', '-SPEC:P', 'PF:John', 'COMP:R', '-SPEC:INF', '-SPEC:ADV', '-COMP:C/fin', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', 'PF:Jukka', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', '-SEM:directional', 'LANG:FI', 'SPEC:A', 'LF:Jukka', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
juosten         ['LANG:FI']
juokse-         {'V', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'PF:juokse-', 'LF:run', 'SPEC:TO/inf', 'LANG:FI', 'PHI:PER:_', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
istuu           ['LANG:FI']
istu-           {'V', 'SPEC:ADV', 'ARG', 'PF:istuu', '-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'LANG:FI', 'PHI:PER:_', 'LF:sit', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
kaksi           {'TAIL:ARG,VAL,FIN', 'PF:kaksi', 'PHI:NUM:SG', 'LF:two', 'LANG:FI', 'PHI:PER:_', 'ARG', 'NUM', 'COMP:n', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:*', 'COMP:N'}
kaksi           {'PF:kaksi', 'LF:two', 'LANG:EN', 'NUM', 'COMP:n', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'SPEC:*', 'COMP:N'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'PF:kaksi', 'LANG:FI', 'LF:two', 'SPEC:*', 'COMP:N', 'NUM', 'COMP:n'}
kaupunkia       ['LANG:EN']
kaupunki        {'COMP:uR', 'PF:kaupunki', '-COMP:T/fin', 'N', '-COMP:D', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', 'LF:city', '-SPEC:C/fin', 'LANG:FI', 'SPEC:A', '-COMP:P', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'V', 'SEM:external', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'PF:kaske', 'SPEC:TO/inf', 'LANG:FI', 'PHI:PER:_', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', '!COMP:A/inf', 'COMP:P', '-SPEC:FORCE', '-COMP:V', 'LF:order'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', 'LF:watch', 'PF:kello', '-COMP:AUX', 'COMP:R/D', '-SPEC:N', '-SPEC:C/fin', 'LANG:FI', 'SPEC:A', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
kello0-         {'SPEC:D', 'LF:watch', 'PF:kello', 'LANG:FI', '2SPEC', '0'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'COMP:uR', 'LANG:EN', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', 'LF:key', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'SPEC:A', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', 'PF:key', '-SPEC:INF', '-SPEC:ADV', '-COMP:C/fin', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'PF:kirja', 'COMP:R/D', '-SPEC:C/fin', '-SEM:directional', 'LANG:FI', 'SPEC:A', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', 'LF:book', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
kohti           {'-COMP:uWH', 'TAIL:V', 'ARG', '-COMP:T/fin', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:v', 'adjoinable', '-SPEC:N', '!COMP:*', '-SPEC:C', '-SPEC:C/fin', 'COMP:D', 'LANG:FI', 'P', '-SPEC:iR', '-SPEC:V', 'PHI:PER:_', '-COMP:N', '-SPEC:iWH', '-SPEC:P', 'PHI:DET:_', '-VAL', '-SPEC:INF', '-SPEC:ADV', 'PHI:NUM:_', 'SPEC:*', '-SPEC:FORCE', '-SPEC:Neg/fin', 'PF:kohti', 'LF:towards'}
koko            {'!PROBE:N', 'OP', '-COMP:D', '-COMP:T/fin', '-SPEC:T/fin', 'adjoinable', '-SPEC:N', '-COMP:uR', '-ARG', '-SPEC:C', '!COMP:*', 'TAIL:T', 'LANG:FI', '-SPEC:MA/lla', 'LF:all', '-SPEC:P', 'PF:koko', '-SPEC:INF', 'D', '-SPEC:V', 'COMP:N', '-SPEC:Neg/fin', '-SPEC:D'}
kuka            ['LANG:FI']
kuka-           {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'PHI', 'LANG:FI', 'SPEC:A', 'PF:kuka', 'LF:who', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
kuorsaa-        {'V', 'PF:kuorsaa', 'SPEC:ADV', '-COMP:D', '-COMP:T/fin', 'ARG', '-SPEC:T/fin', 'ASP', 'LF:snore', 'SPEC:TO/inf', 'LANG:FI', 'PHI:PER:_', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', '-COMP:WH', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
kuorsaamalla    ['LANG:FI']
lahella         {'COMP:v', '!SPEC:*', '-COMP:uWH', 'ARG', '-COMP:T/fin', 'VAL', '-COMP:ADV', 'INF', '!COMP:*', 'PF:lahella', '-SPEC:C', 'COMP:D', '-SPEC:iR', 'PHI:PER:_', '-SPEC:P', 'PHI:NUM:_', '-SPEC:ADV', 'SPEC:*', '!PROBE:V', '-COMP:FORCE', '-SPEC:T/fin', '!SPEC:D', 'LF:near', '-SPEC:v', 'adjoinable', '-SPEC:N', 'COMP:V', '-SPEC:C/fin', 'P', 'LANG:FI', '-COMP:N', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:INF', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-SPEC:Neg/fin'}
lahella         {'-COMP:uWH', 'ARG', '-COMP:T/fin', '-COMP:ADV', '-SPEC:T/fin', 'LF:near', '-SPEC:v', 'adjoinable', '-SPEC:N', '!COMP:*', 'PF:lahella', '-SPEC:C', '-SPEC:C/fin', 'COMP:D', 'P', 'LANG:FI', '-SPEC:iR', '!COMP:D', '-SPEC:V', '-COMP:N', '-SPEC:iWH', 'PHI:PER:_', '-SPEC:P', 'PHI:DET:_', '-VAL', '-SPEC:INF', '-SPEC:ADV', 'PHI:NUM:_', 'SPEC:*', '-SPEC:FORCE', '-SPEC:Neg/fin'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'V', 'SPEC:D', 'SPEC:ADV', 'ARG', '-COMP:D', 'COMP:PP', '-SPEC:T/fin', 'ASP', 'LF:leave', 'SPEC:TO/inf', 'LANG:FI', 'PHI:PER:_', '-COMP:N', 'PF:lahtea', '-COMP:v', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V', 'CLASS:INTR'}
lavano          ['LANG:IT']
lava-           {'V', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'PF:lava', '!COMP:*', 'COMP:D', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', 'LANG:IT', '-COMP:v', '-COMP:N', 'PHI:DET:_', 'LF:wash', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'!PROBE:N', 'OP', '-COMP:D', 'LF:D', '-COMP:T/fin', '-SPEC:T/fin', '-SPEC:N', 'adjoinable', '-COMP:uR', '-ARG', '-SPEC:C', '!COMP:*', 'LANG:IT', '-SPEC:MA/lla', '-SPEC:P', '-SPEC:INF', 'D', '-SPEC:V', 'COMP:N', '-SPEC:Neg/fin', 'PF:le', '-SPEC:D'}
leaves          ['LANG:EN']
leave           {'V', 'LANG:EN', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', '!SPEC:D', 'LF:leave', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'PF:leave', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
leave-          {'V', 'LANG:EN', 'SPEC:ADV', 'ARG', '-COMP:T/fin', '-SPEC:T/fin', 'ASP', '!SPEC:D', 'LF:leave', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'PF:leave', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
like-           {'V', 'LF:like', 'LANG:EN', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'PF:like', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', '!COMP:D', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
likes           ['LANG:EN']
like            {'V', 'LF:like', 'LANG:EN', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'PF:like', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', '!COMP:D', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
little          ['LANG:EN']
little-         {'SPEC:D', 'LANG:EN', 'LF:little', '2SPEC', '0', 'PF:little-'}
lle             {'-COMP:uWH', 'ARG', '-COMP:T/fin', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:v', 'adjoinable', '-SPEC:N', 'PF:P(lle)', '!COMP:*', '-SPEC:C', '-SPEC:C/fin', 'COMP:D', 'P', '-SPEC:*', 'TAIL:V,+SEM:directional', 'LANG:FI', '-SPEC:iR', 'PHI:PER:_', '-COMP:N', '-SPEC:iWH', '-SPEC:P', 'PHI:DET:_', '-VAL', '-SPEC:INF', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:V', '-SPEC:FORCE', 'LF:for', '-SPEC:Neg/fin', '+SEM:directional'}
lla             {'-COMP:uWH', 'ARG', 'TAIL:*V', '-COMP:T/fin', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:v', 'adjoinable', '-SPEC:N', '!COMP:*', '-SPEC:C', '-SPEC:C/fin', 'TAIL:T', 'COMP:D', 'LF:by', 'P', 'LANG:FI', '-SPEC:iR', '-SPEC:V', 'PHI:PER:_', '-COMP:N', 'PF:P(lla)', '-SPEC:iWH', '-SPEC:P', 'PHI:DET:_', '-VAL', '-SPEC:INF', '-SPEC:ADV', 'PHI:NUM:_', 'SPEC:*', '-SPEC:FORCE', '-SPEC:Neg/fin'}
Luisa           ['LANG:IT']
Luisa-          {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'PF:Luisa', '-SEM:directional', 'SPEC:A', 'LANG:IT', '-COMP:v', '-COMP:N', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', 'LF:Luisa', '-COMP:V', '-SPEC:R', '-COMP:A'}
lukemalla       ['LANG:FI']
luke-           {'PF:luke', 'CLASS:TR', 'V', 'SPEC:ADV', 'ARG', 'LF:read', '-SPEC:T/fin', 'ASP', '!COMP:*', 'COMP:D', 'SPEC:TO/inf', 'LANG:FI', '-COMP:P', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'V', 'CLASS:TR', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'ASP:BOUNDED', '!COMP:*', 'COMP:D', 'LF:find', 'PF:loyta-', 'LANG:FI', 'SPEC:TO/inf', '-COMP:P', 'PHI:PER:_', '!COMP:D', '-COMP:N', '-COMP:v', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
Mary            ['LANG:EN']
Mary-           {'COMP:uR', 'LF:Mary', 'LANG:EN', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', '-adjoinable', '-SEM:directional', 'SPEC:A', '-COMP:v', '-COMP:N', '-SPEC:FORCE', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', 'PF:Mary', '-COMP:V', '-SPEC:R', '-COMP:A'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', 'PF:Merja', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', 'LF:Merja', '-adjoinable', '-SPEC:C/fin', '-SEM:directional', 'LANG:FI', 'SPEC:A', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'LF:by', 'COMP:v', 'LANG:FI', 'SPEC:*', 'PF:malla', '-SPEC:T/fin', '-SPEC:Neg/fin', 'ADV', '-SPEC:N', 'adjoinable', 'MA/inf', '-SPEC:FORCE', 'TAIL:T'}
meren           ['LANG:FI']
mere-           {'COMP:uR', 'LF:ocean', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'LANG:FI', 'SPEC:A', '-COMP:v', '-COMP:N', '-SPEC:FORCE', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', 'PF:meri', '-COMP:V', '-SPEC:R', '-COMP:A'}
mistake         {'LF:mistake', 'COMP:uR', 'PF:mistake', 'LANG:EN', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'SPEC:A', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'PF:mika-', 'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-COMP:V', '-SPEC:C/fin', 'LANG:FI', 'SPEC:A', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', 'LF:what', '-SPEC:R', '-COMP:A'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'CLASS:TR', 'V', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', '!COMP:*', 'LANGN:EN', 'COMP:D', 'SPEC:TO/inf', 'PHI:GEN:_', 'LF:move', '-COMP:P', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'PF:move', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V', '+SEM:directional'}
mukavasti       ['LANG:EN']
mukava-         {'0', 'LANG:FI', 'SPEC:D', '2SPEC', 'PF:mukavasti', 'LF:comfortably'}
must            {'SPEC:INF', 'SPEC:D', 'COMP:v', 'LANG:EN', 'FIN', 'T', '!SPEC:*', 'ARG', '-COMP:T/fin', 'VAL', 'LF:must', '-SPEC:T/fin', '-SPEC:v', 'COMP:V', '-SPEC:N', 'PF:must', '!COMP:*', '-SPEC:C/fin', 'T/fin', 'COMP:D', 'SPEC:TO/inf', 'PHI:GEN:_', 'COMP:Neg', 'SPEC:*', 'PHI:PER:_', 'MODAL', '-COMP:INF', 'PHI:DET:_', 'COMP:T/prt', 'PHI:NUM:_', '-SPEC:V', '-SPEC:FORCE', '!PROBE:V'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'V', 'CLASS:TR', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'ASP:BOUNDED', '!COMP:*', 'PF:myy', 'COMP:D', 'SPEC:TO/inf', 'LANG:FI', '-COMP:P', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'LF:sell', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
naki            ['LANG:FI']
nake-           {'V', 'CLASS:TR', 'LF:see', 'SPEC:ADV', 'ARG', 'PF:nake', '-SPEC:T/fin', 'ASP', '-COMP:MA/inf', 'ASP:BOUNDED', '!COMP:*', 'COMP:D', 'SPEC:TO/inf', 'LANG:FI', '-COMP:P', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V', '-COMP:ESSA/inf'}
nayttaa         ['LANG:FI']
naytta-         {'V', 'SPEC:D', 'SEM:internal', 'SPEC:ADV', 'ARG', 'PF:naytta', 'LF:seem', '-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'LANG:FI', 'PHI:PER:_', '!COMP:VA/inf', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
ndo             {'COMP:v', '-COMP:FORCE', 'LANG:EN', '-COMP:T/fin', 'VAL', 'INF', '-SPEC:T/fin', '?ARG', 'COMP:V', '!COMP:*', 'PRG', 'PF:PRG', 'LF:ing', '-COMP:C/fin', '-SPEC:V', '!PROBE:V'}
ne              {'!PROBE:N', 'OP', '-COMP:D', '-COMP:T/fin', 'PHI:PER:3', '-SPEC:T/fin', '-SPEC:N', 'adjoinable', '-COMP:uR', '-ARG', 'LF:those', 'PHI:NUM:PL', '-SPEC:C', '!COMP:*', 'LANG:FI', 'PF:ne', '-SPEC:MA/lla', '-SPEC:P', '-SPEC:INF', 'D', '-SPEC:V', 'COMP:N', '-SPEC:Neg/fin', '-SPEC:D'}
niiden          ['LANG:EN']
nen             {'LF:ing', '-SPEC:A', 'LANG:FI', 'TAIL:D', 'A', 'COMP:0', 'PF:a', 'adjoinable', 'SPEC:*', '-SPEC:D'}
not             {'PHI:GEN:_', 'LANG:EN', 'PHI:PER:_', 'LF:not', 'ARG', '-COMP:FIN', '-COMP:C', 'Neg', 'PF:not', '-COMP:D', '-SPEC:T/fin', '-VAL', 'PHI:NUM:_', 'PHI:DET:_', 'POL:NEG', 'SPEC:*', '!COMP:*'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'V', 'SPEC:D', 'SPEC:ADV', 'ARG', '-COMP:T/fin', '-COMP:D', '-SPEC:T/fin', 'ASP', 'PF:nukku', '-COMP:Neg/fin', 'SPEC:TO/inf', 'LANG:FI', '-COMP:T', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V', 'LF:sleep', 'CLASS:INTR'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'LANG:FI', 'SPEC:A', 'LF:possessions', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', 'PF:omaisuuden', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
operatoria      ['LANG:IT']
operatoria-     {'SPEC:D', 'PF:operatoria', 'LF:operation', '2SPEC', 'LANG:IT', '0'}
ostaa           ['LANG:FI']
osta-           {'V', 'CLASS:TR', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'ASP:BOUNDED', '!COMP:*', 'COMP:D', 'SPEC:TO/inf', 'LANG:FI', '-COMP:P', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'PF:osta', 'COMP:P', '-SPEC:FORCE', '-COMP:V', 'LF:buy'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'COMP:uR', 'LF:day', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', 'SEM:nonreferential', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', 'PF:paiva', '-SPEC:C/fin', 'LANG:FI', 'SPEC:A', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
Pariisia        ['LANG:FI']
Pariisi-        {'COMP:uR', '-COMP:D', 'PF:Pariisi', 'LF:Paris', 'N', '-COMP:T/fin', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'LANG:FI', 'SPEC:A', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'PF:Pekka', 'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', 'LF:Pekka', '-SPEC:C/fin', '-SEM:directional', 'LANG:FI', 'SPEC:A', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
pelottaa        ['LANG:FI']
pelkaa-         {'V', 'CLASS:TR', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'PF:pelkaa', '!COMP:*', 'COMP:D', 'SPEC:TO/inf', 'LANG:FI', '-COMP:P', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'LF:fear', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
persuades       ['LANG:EN']
persuade-       {'V', 'SEM:external', 'LANG:EN', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'COMP:TO/inf', 'ASP', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', 'LF:persuade', 'PF:persuade', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
peruuntui       ['LANG:FI']
peruuntu-       {'V', 'SPEC:D', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'LF:cancelled', 'LANG:FI', 'PHI:PER:_', '-COMP:v', '-COMP:N', 'PF:peruuntui', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'CLASS:TR', 'V', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'ASP:BOUNDED', '!COMP:*', 'PF:pese', 'COMP:D', 'SPEC:TO/inf', 'LANG:FI', '-COMP:P', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'PHI:DET:_', 'LF:wash', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
pese-           {'CLASS:TR', 'V', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', '!COMP:*', 'PF:pese', 'COMP:D', 'SPEC:TO/inf', 'LANG:FI', '-COMP:P', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'PHI:DET:_', 'LF:wash', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
petardi         {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'SPEC:A', 'PF:petardi', 'LANG:IT', '-COMP:v', '-SPEC:P', '-COMP:N', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', 'LF:firecrackers', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
pieni           ['LANG:FI']
pieni-          {'SPEC:D', 'LANG:FI', 'PF:pieni-', '2SPEC', '0', 'LF:small'}
poikien         ['LANG:FI']
poika-          {'COMP:uR', 'PF:poika', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'LF:boy', 'LANG:FI', 'SPEC:A', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
puhelinta       ['LANG:FI']
puhelin-        {'LF:phone', 'SPEC:D', 'LANG:FI', 'PF:puhelin', '2SPEC', '0'}
punainen        ['LANG:FI']
puna-           {'PF:puna-', 'LF:red', 'LANG:FI', 'SPEC:D', '2SPEC', '0'}
presupposto     {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'SPEC:A', 'PF:presupposto', 'LANG:IT', '-COMP:v', '-COMP:N', '-SPEC:P', 'LF:presupposition', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
primary         {'COMP:uR', 'LF:nurse', '-COMP:T/fin', 'N', '-COMP:D', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'PF:primary', 'SPEC:A', 'LANG:IT', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
promises        ['LANG:EN']
promise-        {'V', 'SPEC:D', 'SEM:internal', 'LANG:EN', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'COMP:D', 'SPEC:TO/inf', 'PHI:GEN:_', 'LF:promise', 'PHI:PER:_', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'PF:promise', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
pyytaa          ['LANG:FI']
pyyta-          {'V', 'SEM:external', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'LF:ask', 'PF:pyyda', 'SPEC:TO/inf', 'LANG:FI', 'PHI:PER:_', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
raukesi         ['LANG:FI']
raukea-         {'V', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'LF:terminate', 'SPEC:TO/inf', 'LANG:FI', 'PHI:PER:_', 'PF:raukea', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
red             ['LANG:EN']
red-            {'SPEC:D', 'LF:red', 'PF:red', 'LANG:EN', '2SPEC', '0'}
saavuttaa       ['LANG:FI']
saavutta-       {'CLASS:TR', 'V', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'ASP:BOUNDED', '!COMP:*', 'COMP:D', 'SPEC:TO/inf', 'LANG:FI', '-COMP:P', 'PHI:PER:_', '!COMP:D', '-COMP:N', '-COMP:v', 'LF:reach', 'PF:saavutta-', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'V', 'SPEC:D', 'LF:say', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'PF:sano-', 'SPEC:TO/inf', 'LANG:FI', 'COMP:VA/inf', 'PHI:PER:_', '-COMP:v', '-COMP:N', 'PHI:DET:_', 'COMP:FORCE', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
said            ['LANG:EN']
say'            {'V', 'LF:say', 'SPEC:D', 'LANG:EN', 'PF:say', 'SPEC:ADV', 'ARG', '!COMP:FORCE', '-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
say-            {'V', 'LF:say', 'SPEC:D', 'LANG:EN', 'PF:say', 'SPEC:ADV', 'ARG', '!COMP:FORCE', '-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
sala            ['LANG:IT']
sala-           {'COMP:uR', 'PF:sala', '-COMP:T/fin', 'N', '-COMP:D', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'SPEC:A', 'LANG:IT', '-COMP:v', '-COMP:N', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', 'LF:room', '-COMP:V', '-SPEC:R', '-COMP:A'}
scoppiati       ['LANG:IT']
scoppia-        {'V', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', 'LANG:IT', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'PF:scoppia', 'SPEC:P', 'COMP:P', 'LF:explode', '-SPEC:FORCE', '-COMP:V'}
sen             {'LF:the/that', '!PROBE:N', 'OP', '-COMP:D', '-COMP:T/fin', '-SPEC:T/fin', 'PF:sen', 'TAIL:PHI', 'TAIL:*POL:NEG', '-SPEC:N', 'adjoinable', '-COMP:uR', '-ARG', '-SPEC:C', '!COMP:*', 'TAIL:ASP', 'LANG:FI', '-SPEC:MA/lla', '-SPEC:P', '-SPEC:INF', 'D', '-SPEC:V', 'COMP:N', '-SPEC:Neg/fin', '-SPEC:D'}
se'             {'LF:the/that', '!PROBE:N', 'OP', '-COMP:D', '-COMP:T/fin', '-SPEC:T/fin', '-SPEC:N', 'adjoinable', '-COMP:uR', '-ARG', '-SPEC:C', 'PF:se', '!COMP:*', 'LANG:FI', '-SPEC:MA/lla', '-SPEC:P', '-SPEC:INF', 'D', '-SPEC:V', 'COMP:N', '-SPEC:Neg/fin', '-SPEC:D'}
sentenza        {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', 'PF:sentenza', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', 'LF:sentence', '-SPEC:C/fin', 'SPEC:A', 'LANG:IT', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
Seine           ['LANG:EN']
Seine-          {'COMP:uR', 'LANG:EN', 'LF:Seine', '-COMP:D', '-COMP:T/fin', 'PF:Seine', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'SPEC:A', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
sembrano        ['LANG:IT']
sembra-         {'V', 'SPEC:D', 'LANG:EN', 'SPEC:ADV', '-COMP:D', 'LF:seem', '-SPEC:T/fin', '!COMP:ARE/inf', '-ARG', '-ASP', 'SPEC:TO/inf', '-COMP:v', '-COMP:N', '-VAL', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V', 'PF:sembra'}
sleeps          ['LANG:EN']
sleep           {'V', 'SPEC:D', 'LANG:EN', 'PF:sleep', 'SPEC:ADV', 'ARG', '-COMP:D', '-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V', 'LF:sleep', 'CLASS:INTR'}
sleep-          {'V', 'SPEC:D', 'LANG:EN', 'PF:sleep', 'SPEC:ADV', 'ARG', '-COMP:D', '-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V', 'LF:sleep', 'CLASS:INTR'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', 'PF:sopimus', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'LANG:FI', 'SPEC:A', '-SPEC:V', 'LF:agreement', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', '!COMP:A/inf', 'COMP:P', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
spinge          ['LANG:IT']
spinge-         {'V', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'LF:push', 'PF:spinge', 'SPEC:TO/inf', 'PHI:GEN:_', '-COMP:P', 'PHI:PER:_', '!COMP:D', 'LANG:IT', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', '-SPEC:FORCE', '-COMP:V'}
ssa             {'LF:in', '-COMP:uWH', 'TAIL:V', 'ARG', '-COMP:T/fin', 'PF:ssa', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:v', 'adjoinable', '-SPEC:N', '!COMP:*', '-SPEC:C', '-SPEC:C/fin', 'COMP:D', 'P', 'LANG:FI', '-SPEC:iR', '-SPEC:V', 'PHI:PER:_', '-COMP:N', '-SPEC:iWH', '-SPEC:P', 'PHI:DET:_', '-VAL', '-SPEC:INF', '-SPEC:ADV', '-SPEC:Neg/fin', 'PHI:NUM:_', 'SPEC:*', '-SPEC:FORCE', 'COMP:n/MA'}
stanno          ['LANG:IT']
sta-            {'V', 'SEM:internal', 'PF:sta', 'SPEC:D', 'LANG:EN', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', '-ASP', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', '-COMP:v', '-COMP:N', '-SPEC:FORCE', 'PHI:DET:_', '-VAL', 'COMP:PRG', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', 'LF:stay', '-COMP:V'}
sti             {'LF:by', 'LANG:FI', '-ARG', 'PF:sti', '-SPEC:FORCE', '-SPEC:T/fin', '-SPEC:Neg/fin', 'ADV', '-SPEC:N', 'adjoinable', 'SPEC:*', '!COMP:*', 'TAIL:T'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'LANG:FI', 'SPEC:A', '-SPEC:V', '-COMP:v', '-COMP:N', '-SPEC:P', 'LF:socks', 'COMP:R', '-SPEC:INF', '-SPEC:ADV', '-COMP:C/fin', '-COMP:WH', 'COMP:P', 'PF:sukka-', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
talo            {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'LF:house', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'LANG:FI', 'SPEC:A', '-COMP:v', '-COMP:N', '-SPEC:FORCE', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', 'PF:talo', '-COMP:V', '-SPEC:R', '-COMP:A'}
tama            ['LANG:EN']
tama-           {'PF:tama', 'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-COMP:V', '-SPEC:C/fin', 'PHI', 'LANG:FI', 'SPEC:A', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', 'LF:this', '-SPEC:R', '-COMP:A'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'V', 'PF:taytyy', 'FIN', 'SPEC:ADV', 'ARG', 'LF:must', '-SPEC:T/fin', '-ASP', 'SPEC:TO/inf', 'LANG:FI', 'PHI:PER:_', 'MODAL', '-COMP:v', '-COMP:N', '-SPEC:FORCE', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', '!COMP:A/inf', 'SPEC:*', 'COMP:P', '-COMP:V'}
teki            ['LANG:FI']
teke-           {'V', 'CLASS:TR', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'LF:make', 'ASP:BOUNDED', '!COMP:*', '-COMP:A/inf', 'PF:teke', 'COMP:D', 'SPEC:TO/inf', 'LANG:FI', '-COMP:P', 'PHI:PER:_', '!COMP:D', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
that            {'-SPEC:*', 'COMP:T/fin', 'FORCE', 'LANG:EN', 'FIN', '-VAL', '!PROBE:T/fin', 'LF:that', 'PF:that', '!COMP:*', '-ARG', 'COMP:C/fin'}
the             {'!PROBE:N', 'LANG:EN', 'OP', '-COMP:D', '-COMP:T/fin', '-SPEC:T/fin', '-SPEC:N', 'adjoinable', '-COMP:uR', '-ARG', '-SPEC:C', '!COMP:*', 'PHI:DEF:DEF', 'PF:the', '-SPEC:MA/lla', '-SPEC:P', 'LF:the', '-SPEC:INF', 'D', '-SPEC:V', 'COMP:N', '-SPEC:Neg/fin', '-SPEC:D'}
to              {'LANG:EN', '-COMP:uWH', 'ARG', '-COMP:T/fin', '-COMP:ADV', '-SPEC:T/fin', 'LF:to', '-SPEC:v', 'adjoinable', '-SPEC:N', '!COMP:*', 'PF:to', '-SPEC:C', '-SPEC:C/fin', 'COMP:D', 'P', '-SPEC:*', 'TAIL:V,+SEM:directional', 'PHI:GEN:_', '-SPEC:iR', 'PHI:PER:_', '-COMP:N', '-SPEC:iWH', '-SPEC:P', '-float', 'PHI:DET:_', '-VAL', '-SPEC:INF', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:V', '-SPEC:FORCE', '-SPEC:Neg/fin', '+SEM:directional'}
to_inf          {'COMP:v', '-COMP:FORCE', 'LANG:EN', '-COMP:T/fin', 'TO/inf', 'INF', '-SPEC:T/fin', '-SPEC:v', '?ARG', 'adjoinable', 'COMP:V', '!COMP:*', 'PF:TO/inf', 'LF:TO/inf', '-VAL', '-COMP:C/fin', '-SPEC:V', '!PROBE:V'}
towards         {'LANG:EN', 'TAIL:V', '-COMP:uWH', 'ARG', '-COMP:T/fin', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:v', 'adjoinable', '-SPEC:N', '!COMP:*', '-SPEC:C', '-SPEC:C/fin', 'COMP:D', 'P', '-SPEC:*', 'PHI:GEN:_', '-SPEC:iR', '-SPEC:V', 'PHI:PER:_', '-COMP:N', '-SPEC:iWH', '-SPEC:P', '-float', 'PHI:DET:_', '-VAL', '-SPEC:INF', '-SPEC:ADV', 'PHI:NUM:_', 'PF:towards', '-SPEC:FORCE', '-SPEC:Neg/fin', 'LF:towards'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'V', 'CLASS:TR', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'PF:tonaise', '!COMP:*', 'COMP:D', 'SPEC:TO/inf', 'LANG:FI', '-COMP:P', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'LF:nudge', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
tta             {'LF:without', '-COMP:uWH', 'ARG', '-COMP:T/fin', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:v', 'adjoinable', '-SPEC:N', '!COMP:*', '-SPEC:C', '-SPEC:C/fin', 'COMP:D', 'P', 'LANG:FI', '-SPEC:iR', '-SPEC:V', 'PHI:PER:_', '-COMP:N', '-SPEC:iWH', '-SPEC:P', 'PHI:DET:_', '-VAL', '-SPEC:INF', '-SPEC:ADV', '-SPEC:Neg/fin', 'ADV', 'PHI:NUM:_', 'SPEC:*', '-SPEC:FORCE', 'PF:tta', 'COMP:n/MA'}
tries           ['LANG:EN']
try-            {'V', 'SPEC:D', 'SEM:internal', 'LANG:EN', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', '!COMP:-ARG', 'LF:try', '!COMP:TO/inf', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', 'PF:try', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
verifiche       {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', 'LF:verification', 'PF:verifiche', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'SPEC:A', 'LANG:IT', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'V', 'SPEC:D', 'SPEC:ADV', '-COMP:D', 'ARG', '-SPEC:T/fin', '!COMP:P', 'ASP', 'LF:flow', 'SPEC:TO/inf', 'LANG:FI', 'PHI:PER:_', '-COMP:v', '-COMP:N', 'PF:virtaa', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'V', 'SEM:internal', 'LANG:EN', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', '!COMP:*', 'PF:volu', 'SPEC:TO/inf', '-SPEC:*', 'PHI:GEN:_', 'PHI:PER:_', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'LF:want', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'V', 'CLASS:TR', 'LANG:EN', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', 'SEM:achievement', 'ASP:BOUNDED', '!COMP:*', 'LF:win', 'COMP:D', 'SPEC:TO/inf', 'PHI:GEN:_', '-COMP:P', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V', 'PF:voitta'}
wants           ['LANG:EN']
want-           {'V', 'CLASS:TR', 'LANG:EN', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'COMP:TO/inf', 'ASP', '!COMP:*', 'COMP:D', 'PHI:GEN:_', '-COMP:P', 'PHI:PER:_', '-COMP:N', '-COMP:v', 'PHI:DET:_', '-VAL', 'LF:want', '-SPEC:TO/inf', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V', 'PF:want'}
what            ['LANG:EN']
what-           {'COMP:uR', 'LANG:EN', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-COMP:V', '-SPEC:C/fin', 'PF:what', '-COMP:*', 'SPEC:A', 'PHI_N', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', 'LF:what', '-SPEC:R', '-COMP:A'}
which           {'OP:WH', '!PROBE:N', 'LANG:EN', 'OP', '-COMP:D', '-COMP:T/fin', '-SPEC:T/fin', '-SPEC:N', 'adjoinable', '-COMP:uR', '-ARG', '-SPEC:C', '!COMP:*', 'LF:which', '-SPEC:MA/lla', '-SPEC:P', '-SPEC:INF', 'D', '-SPEC:V', 'COMP:N', 'PF:which', '-SPEC:Neg/fin', '-SPEC:D'}
who             ['LANG:EN']
who-            {'COMP:uR', 'LANG:EN', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', '-COMP:*', 'SPEC:A', 'PHI_N', 'LF:who', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', 'PF:who', '-COMP:A'}
whether         {'LF:whether', 'PF:whether', 'OP:WH', 'FORCE', 'LANG:EN', 'COMP:T/fin', 'OP', 'FIN', '!PROBE:T/fin', '!COMP:*', '-ARG', '-SPEC:*', 'OP:Q', '-VAL', 'Q', 'COMP:C/fin'}
yrittaa         ['LANG:FI']
yritta-         {'V', 'SPEC:D', 'SEM:internal', 'LANG:EN', 'SPEC:ADV', 'ARG', '-SPEC:T/fin', 'ASP', '!COMP:-ARG', 'LF:try', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'PF:yritta', '!COMP:A/inf', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
mina            ['LANG:EN']
mina-           {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', '-COMP:*', 'PF:mina', 'LANG:FI', 'SPEC:A', 'PHI_N', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', 'LF:I', '-SPEC:R', '-COMP:A'}
sina            ['LANG:EN']
sina-           {'COMP:uR', '-COMP:D', 'LF:you', 'N', '-COMP:T/fin', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', '-COMP:*', 'LANG:FI', 'SPEC:A', 'PHI_N', '-COMP:v', '-COMP:N', '-SPEC:P', 'PF:sina', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
han             ['LANG:EN']
han-            {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', '-COMP:*', 'LANG:FI', 'LF:s/he', 'SPEC:A', 'PHI_N', 'PF:han', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', '-COMP:*', 'LANG:FI', 'SPEC:A', 'PF:me', 'PHI_N', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', 'LF:we', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
te              ['LANG:EN']
te-             {'COMP:uR', 'PF:te', 'LF:you', 'N', '-COMP:T/fin', '-SPEC:uWH', '-COMP:ADV', '-COMP:D', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', '-COMP:*', 'LANG:FI', 'SPEC:A', 'PHI_N', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he-             {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'LF:they', 'COMP:R/D', '-SPEC:C/fin', 'PF:he', '-COMP:*', 'LANG:FI', 'SPEC:A', 'PHI_N', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
he-             {'COMP:uR', 'LANG:EN', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-COMP:V', '-SPEC:C/fin', 'PF:he', '-COMP:*', 'SPEC:A', 'PHI_N', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', 'LF:he', '-SPEC:R', '-COMP:A'}
se              ['LANG:FI']
se-             {'!PROBE:N', 'OP', '-COMP:D', '-COMP:T/fin', '-SPEC:T/fin', '-SPEC:N', 'adjoinable', '-COMP:uR', '-ARG', '-SPEC:C', 'PF:se', '!COMP:*', 'LANG:FI', '-SPEC:MA/lla', '-SPEC:P', 'LF:it/that', '-SPEC:INF', 'D', '-SPEC:V', 'COMP:N', '-SPEC:Neg/fin', '-SPEC:D'}
I               ['LANG:EN']
I-              {'COMP:uR', 'LANG:EN', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'PF:I', '-COMP:*', 'SPEC:A', 'PHI_N', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', 'LF:I', '-SPEC:R', '-COMP:A'}
you             ['LANG:EN']
you-            {'COMP:uR', 'LANG:EN', '-COMP:D', 'LF:you', 'N', '-COMP:T/fin', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', '-COMP:*', 'SPEC:A', 'PHI_N', '-COMP:v', 'PF:you', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
he              ['LANG:EN']
she             ['LANG:EN']
she-            {'COMP:uR', 'LANG:EN', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', 'LF:she', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', '-COMP:*', 'SPEC:A', 'PHI_N', '-COMP:v', 'PF:she', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
we              ['LANG:EN']
we-             {'COMP:uR', 'LANG:EN', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', 'PF:we', '-SPEC:C/fin', '-COMP:*', 'SPEC:A', 'PHI_N', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', 'LF:we', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
you_pl          ['LANG:EN']
you_pl-         {'COMP:uR', 'LANG:EN', '-COMP:D', 'LF:you_pl', 'N', '-COMP:T/fin', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'PHI', 'SPEC:A', '-COMP:A', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', 'PF:you_pl'}
they            ['LANG:EN']
they-           {'COMP:uR', 'LANG:EN', 'PF:they', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'LF:they', 'COMP:R/D', '-SPEC:C/fin', '-COMP:*', 'SPEC:A', 'PHI_N', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
it              ['LANG:EN']
it-             {'!PROBE:N', 'LANG:EN', 'PF:it', 'OP', '-COMP:D', '-COMP:T/fin', '-SPEC:T/fin', '-SPEC:N', 'adjoinable', '-COMP:uR', '-ARG', '-SPEC:C', '!COMP:*', '-SPEC:MA/lla', '-SPEC:P', 'LF:it/that', '-SPEC:INF', 'D', '-SPEC:V', 'COMP:N', '-SPEC:Neg/fin', '-SPEC:D'}
io              ['LANG:EN']
io-             {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'PF:io', '-COMP:*', 'SPEC:A', 'PHI_N', 'LANG:IT', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', 'LF:I', '-SPEC:R', '-COMP:A'}
tu              ['LANG:EN']
tu-             {'COMP:uR', '-COMP:D', 'LF:you', 'N', '-COMP:T/fin', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', '-COMP:*', 'PF:tu', 'SPEC:A', 'PHI_N', 'LANG:IT', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
lui             ['LANG:EN']
lui-            {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', 'PF:lui', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-COMP:V', '-SPEC:C/fin', '-COMP:*', 'SPEC:A', 'PHI_N', 'LANG:IT', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', 'LF:he', '-SPEC:R', '-COMP:A'}
lei             ['LANG:EN']
lei-            {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', 'LF:she', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', '-COMP:*', 'SPEC:A', 'PHI_N', 'LANG:IT', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', 'PF:lei', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
noi             ['LANG:EN']
noi-            {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', '-COMP:*', 'PF:noi', 'SPEC:A', 'PHI_N', 'LANG:IT', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', 'LF:we', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
voi             ['LANG:EN']
voi-            {'COMP:uR', '-COMP:D', 'LF:you_pl', 'N', '-COMP:T/fin', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'PF:voi', '-COMP:*', 'SPEC:A', 'PHI_N', 'LANG:IT', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
loro            ['LANG:EN']
loro-           {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'LF:they', 'COMP:R/D', '-SPEC:C/fin', '-COMP:*', 'SPEC:A', 'PHI_N', 'LANG:IT', '-COMP:v', '-COMP:N', '-SPEC:P', '-SPEC:FORCE', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', 'PF:loro', '-COMP:V', '-SPEC:R', '-COMP:A'}
mi              ['LANG:EN']
mi-             {'COMP:uR', 'CL', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', 'COMP:R/D', '-COMP:*', 'PF:mi(cl)', 'SPEC:A', '-COMP:v', '-SPEC:P', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-COMP:V', '-COMP:A', '-COMP:D', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:C/fin', 'PHI_N', 'LANG:IT', '-COMP:N', 'COMP:R', '-SPEC:INF', 'LF:me', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-SPEC:R'}
la              ['LANG:EN']
la-             {'COMP:uR', 'CL', 'LF:her', '-COMP:T/fin', 'PF:la(cl)', 'N', '-SPEC:uWH', '-COMP:ADV', 'COMP:R/D', '-COMP:*', 'SPEC:A', '-COMP:v', '-SPEC:P', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-COMP:V', '-COMP:A', '-COMP:D', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:C/fin', 'PHI_N', 'LANG:IT', '-COMP:N', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-SPEC:R'}
lo              ['LANG:EN']
lo-             {'COMP:uR', 'CL', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', 'COMP:R/D', '-COMP:*', 'SPEC:A', '-COMP:v', '-SPEC:P', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-COMP:V', '-COMP:A', '-COMP:D', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', '-SPEC:C/fin', 'PHI_N', 'LANG:IT', '-COMP:N', 'COMP:R', 'LF:him', '-SPEC:INF', '-COMP:C/fin', 'PF:lo(cl)', '-SPEC:V', '-SPEC:FORCE', '-SPEC:R'}
si              ['LANG:EN']
si-             {'COMP:uR', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', 'COMP:R/D', 'LF:3sg', 'PF:si(cl)', '-COMP:*', 'SPEC:A', '-COMP:v', '-SPEC:P', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-COMP:V', '-COMP:A', '-COMP:D', '-SPEC:T/fin', 'CAL:CL', '-COMP:AUX', '-SPEC:N', '-SPEC:C/fin', 'PHI_N', 'LANG:IT', '-COMP:N', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-SPEC:R'}
gli             ['LANG:EN']
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'COMP:uR', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'LF:there', '-COMP:*', 'SPEC:A', 'PHI_N', 'PF:ci', 'LANG:IT', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', '-COMP:A'}
[-n]            {'PHI', 'PHI:NUM:SG', 'LANG:FI', 'inflectional', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:PER:1'}
[-t]            {'PHI:NUM:SG', 'LANG:FI', 'inflectional', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI', 'PHI:PER:2'}
[-V]            {'PHI:NUM:SG', 'LANG:FI', 'inflectional', 'PHI', 'PHI:PER:3'}
[-mme]          {'PHI:NUM:PL', 'PHI', 'LANG:FI', 'inflectional', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:PER:1'}
[-mme]          {'PHI:NUM:PL', 'LANG:FI', 'inflectional', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:PER:1'}
[-tte]          {'PHI:NUM:PL', 'LANG:FI', 'inflectional', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI', 'PHI:PER:2'}
[-vat]          {'LANG:FI', 'inflectional', 'PHI:NUM:PL', 'PHI', 'PHI:PER:3'}
[-ni]           {'PHI', 'PHI:NUM:SG', 'LANG:FI', 'inflectional', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:PER:1'}
[-si]           {'PHI:NUM:SG', 'LANG:FI', 'inflectional', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI', 'PHI:PER:2'}
[-nsa]          {'LANG:FI', 'PHI', 'PHI:PER:3', 'inflectional'}
[-an]           {'LANG:FI', 'PHI', 'PHI:PER:3', 'inflectional'}
[-nne]          {'LANG:FI', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:2'}
[-s]            {'PHI', 'PHI:NUM:SG', 'LANG:EN', 'inflectional', 'PHI:GEN:M', 'PHI:GEN:F', 'PHI:PER:3'}
[-0]            {'PHI:NUM:SG', 'LANG:EN', 'inflectional', 'PHI:PER:3', 'PHI:GEN:N', 'PHI:PER:1', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI', 'PHI:PER:2'}
[-o]            {'PHI', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF', 'LANG:IT', 'PHI:PER:1'}
[-i]            {'PHI:NUM:SG', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF', 'LANG:IT', 'PHI', 'PHI:PER:2'}
[-a]            {'PHI:NUM:SG', 'inflectional', 'PHI:DET:DEF', 'LANG:IT', 'PHI', 'PHI:PER:3'}
[-e]            {'PHI:NUM:SG', 'inflectional', 'PHI:DET:DEF', 'LANG:IT', 'PHI', 'PHI:PER:3'}
[-iamo]         {'PHI:NUM:PL', 'PHI', 'LANG:IT', 'inflectional', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:PER:1'}
[-te]           {'PHI:NUM:PL', 'LANG:IT', 'inflectional', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI', 'PHI:PER:2'}
[-no]           {'PHI:NUM:PL', 'inflectional', 'PHI:DET:DEF', 'LANG:IT', 'PHI', 'PHI:PER:3'}
[-nom]          {'NOM', 'LANG:EN', 'adjoinable', 'inflectional', 'TAIL:FIN,ARG,VAL'}
[-par]          {'LANG:FI', 'adjoinable', 'inflectional', 'PAR', 'TAIL:ARG,-VAL'}
[-gen]          {'TAIL:INF,ARG', 'LANG:EN', 'GEN', 'inflectional'}
gen             {'TAIL:INF,ARG', 'LANG:EN', 'GEN', 'inflectional'}
[-n_acc]        {'TAIL:ARG,ASP:BOUNDED', 'TAIL:PHI', 'LANG:FI', 'n-ACC', 'TAIL:*POL:NEG', 'adjoinable', 'inflectional'}
[-t_acc]        {'TAIL:ARG,ASP:BOUNDED', 't-ACC', 'LANG:FI', 'TAIL:*POL:NEG', 'adjoinable', 'inflectional'}
[-0_acc]        {'TAIL:ARG,ASP:BOUNDED', 'TAIL:*PHI', 'LANG:FI', 'TAIL:*POL:NEG', 'adjoinable', 'inflectional', '0_ACC'}
asp             {'ASP:BOUNDED', 'LANG:EN', 'inflectional'}
a'              {'LANG:X', 'a', 'LF:A', 'PF:a'}
b'              {'LANG:X', 'b', 'LF:B', 'PF:b'}
b''             {'-COMP:c', 'LANG:EN', 'LF:B', 'b', 'PF:b'}
c''             {'LANG:EN', 'LF:C', 'c', 'SPEC:a', 'PF:c'}
c'              {'LF:C', 'c', 'LANG:X', 'PF:c'}
d'              {'LF:D', 'LANG:', 'PF:d', 'd'}
a''             ['LANG:EN']
x'              {'LANG:X', 'LF:X', 'PF:x', 'x'}
y'              {'LANG:X', 'LF:Y', 'PF:y', 'y'}
z'              {'LANG:X', 'z', 'PF:x', 'LF:Z'}
John'           {"N'", 'LF:John', 'LANG:X', 'PF:John'}
admires'        {'PF:admires', 'LF:admires', 'LANG:X', "V'"}
admires''       {'V', 'SPEC:D', 'LANG:EN', 'SPEC:ADV', 'ARG', 'PF:admires', '-SPEC:T/fin', 'ASP', 'LF:admires', 'SPEC:TO/inf', 'PHI:GEN:_', 'PHI:PER:_', '-COMP:v', '-COMP:N', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V'}
Mary'           {"N'", 'LANG:X', 'PF:Mary', 'LF:mary'}
T/fin           {'SPEC:INF', 'SPEC:D', 'COMP:v', 'LANG:EN', 'FIN', 'T', '!SPEC:*', 'ARG', '-COMP:T/fin', 'VAL', '-SPEC:T/fin', '-SPEC:v', 'LF:T', 'COMP:V', '-SPEC:N', '!COMP:*', '-SPEC:C/fin', 'T/fin', 'COMP:D', 'SPEC:TO/inf', 'PHI:GEN:_', 'SPEC:*', 'PHI:PER:_', '-COMP:INF', '-SPEC:FORCE', 'PHI:DET:_', 'COMP:T/prt', 'PHI:NUM:_', '-SPEC:V', 'PF:T', '!PROBE:V'}
v               {'SPEC:D', 'PHI:GEN:_', 'LANG:EN', 'PHI:PER:_', 'PF:v', 'ARG', 'v', 'PHI:DET:_', '-VAL', 'ASP', 'PHI:NUM:_', 'LF:v', 'COMP:V', '-SPEC:N', '!COMP:*', '!PROBE:V'}
C/fin           {'COMP:T/fin', 'LANG:EN', 'FIN', 'C', 'VAL', 'LF:C/fin', '-SPEC:T/fin', '-COMP:T/prt', '-SPEC:N', '!PROBE:FIN', '-ARG', '!COMP:*', '-SPEC:C/fin', 'PF:C', 'C/fin', 'COMP:Neg/fin', '-COMP:C/fin', 'SPEC:*'}
T               {'SPEC:D', 'COMP:v', 'LANG:EN', 'FIN', 'T', '!SPEC:*', 'ARG', '!PROBE:V', 'VAL', '-SPEC:T/fin', 'LF:T', 'COMP:V', '-SPEC:N', '!COMP:*', 'COMP:D', 'PHI:GEN:_', 'SPEC:*', 'PHI:PER:_', '-SPEC:FORCE', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:V', 'PF:T', '-COMP:NEG', 'COMP:T/prt'}
T/prt           {'T/prt', 'SPEC:D', 'COMP:v', 'LANG:EN', 'FIN', 'T', '!SPEC:*', 'ARG', 'VAL', '-SPEC:T/fin', 'COMP:V', '-SPEC:N', '!COMP:*', 'COMP:D', 'PHI:GEN:_', 'SPEC:*', 'PHI:PER:_', 'PHI:DET:_', 'PF:T/prt', 'COMP:T/prt', 'PHI:NUM:_', 'LF:T/prt', '-SPEC:V', '-SPEC:FORCE', '-COMP:NEG', '!PROBE:V'}
a0              {'PF:A', 'TAIL:D', 'LANG:EN', 'A', 'COMP:0', 'LF:A', 'adjoinable', '-SPEC:A', '-adjoinable', '-SPEC:D'}
n               {'LF:n', 'COMP:uR', 'LANG:EN', 'COMP:v', '!SPEC:*', 'ARG', '-COMP:T/fin', 'N', 'VAL', '-SPEC:uWH', '-COMP:ADV', 'INF', 'COMP:R/D', '!COMP:*', 'SPEC:A', 'PHI:GEN:_', 'PHI:PER:_', 'COMP:0', '-COMP:v', '-SPEC:P', 'PHI:NUM:_', '-SPEC:ADV', '-COMP:WH', 'COMP:P', 'SPEC:*', '-COMP:V', '-COMP:A', '-COMP:D', '-SPEC:T/fin', '!SPEC:D', 'n', '-COMP:AUX', '-SPEC:N', 'COMP:V', '-SPEC:C/fin', 'PF:n', '-COMP:N', 'PHI:DET:_', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:V', '-SPEC:FORCE', '-SPEC:R'}
impass          {'SPEC:D', 'PHI:GEN:_', 'LANG:EN', 'PHI:PER:_', 'ARG', 'v', 'PHI:DET:_', 'PF:impass', '-VAL', 'ASP', 'PHI:NUM:_', 'COMP:V', '-SPEC:N', '!COMP:*', 'LF:impass', '!PROBE:V'}
cau             {'SPEC:D', 'PHI:GEN:_', 'LANG:EN', 'PHI:PER:_', 'ARG', 'PF:Cau', 'v', 'LF:v/Cause', 'PHI:DET:_', '-VAL', 'ASP', 'PHI:NUM:_', 'COMP:V', '-SPEC:N', '!COMP:*', '!PROBE:V'}
INF             {'LF:INF', 'COMP:v', 'LANG:EN', '-COMP:FORCE', '-COMP:T/fin', 'PF:INF', 'INF', '-SPEC:T/fin', '-COMP:C/fin', 'COMP:V', '-SPEC:V', '!COMP:*', '!PROBE:V'}
prtcpl          {'T/prt', 'SPEC:D', 'COMP:v', '-COMP:FORCE', 'LANG:EN', 'FIN', 'T', '!SPEC:*', 'ARG', '-COMP:T/fin', 'VAL', 'INF', '-SPEC:T/fin', 'COMP:V', '-SPEC:N', '!COMP:*', 'COMP:D', 'PHI:GEN:_', '-SPEC:V', 'PHI:PER:_', 'PHI:DET:_', 'PF:T/prt', '-COMP:C/fin', 'COMP:T/prt', 'LF:T/prt', 'PHI:NUM:_', 'SPEC:*', '-SPEC:FORCE', '-COMP:NEG', '!PROBE:V'}
TO/inf          {'COMP:v', '-COMP:FORCE', 'LANG:EN', '-COMP:T/fin', 'TO/inf', 'INF', '-SPEC:T/fin', '-SPEC:v', '?ARG', 'adjoinable', 'COMP:V', '!COMP:*', '!COMP:V', 'PF:TO/inf', 'LF:TO/inf', '-VAL', '-COMP:C/fin', '-SPEC:V', '!PROBE:V'}
A/inf           {'COMP:v', '-COMP:FORCE', 'LANG:EN', 'PF:A/inf', '-COMP:T/fin', 'A/inf', 'INF', '-SPEC:T/fin', '?ARG', 'COMP:V', '!COMP:*', 'SPEC:*', '-SPEC:Neg/fin', '-COMP:C/fin', '?VAL', 'LF:A/inf', '-SPEC:V', '!PROBE:V'}
ARE/inf         {'COMP:v', '-COMP:FORCE', 'LANG:EN', '-COMP:T/fin', 'VAL', 'ARE/inf', 'INF', '-SPEC:T/fin', '?ARG', 'COMP:V', '!COMP:*', '-adjoinable', '-SPEC:V', 'PF:are', '-COMP:C/fin', 'LF:ARE/inf', 'SPEC:*', '!PROBE:V'}
ESSA/inf        {'ESSA/inf', 'COMP:v', '-COMP:FORCE', 'LANG:EN', 'PF:essa', '-COMP:T/fin', '!PROBE:V', 'INF', '-SPEC:T/fin', '?ARG', 'adjoinable', '-SPEC:N', 'COMP:V', '!COMP:*', 'TAIL:T', '-SPEC:V', 'LF:while', '-COMP:C/fin', '?VAL', 'ADV', 'SPEC:*', '-SPEC:FORCE', '-SPEC:Neg/fin'}
TUA/inf         {'LF:after', 'COMP:v', '-COMP:FORCE', '!SPEC:*', 'LANG:EN', 'ARG', '-COMP:T/fin', '!PROBE:V', 'INF', '-SPEC:T/fin', 'adjoinable', '-SPEC:N', 'TUA/inf', 'CAL', 'COMP:V', '!COMP:*', 'TAIL:T', 'PHI:GEN:_', 'PF:tua', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', '-COMP:C/fin', 'ADV', '-SPEC:V', '-SPEC:FORCE', '-SPEC:Neg/fin'}
VA/inf          {'COMP:v', '-COMP:FORCE', 'LANG:EN', '!SPEC:*', 'ARG', '-COMP:T/fin', 'VAL', 'VA/inf', 'INF', '-SPEC:T/fin', '-SPEC:N', 'COMP:V', '!COMP:*', 'PHI:GEN:_', 'SPEC:*', 'PHI:PER:_', 'PHI:DET:_', 'PHI:NUM:_', 'PF:vAn', '-COMP:C/fin', 'LF:VA', '-SPEC:V', '!PROBE:V'}
MA/ssa          {'COMP:v', 'LANG:EN', 'TAIL:V', 'ARG', '-SPEC:T/fin', 'PF:massa', 'COMP:V', 'adjoinable', '-SPEC:N', '-SPEC:*', 'PHI:GEN:_', 'PHI:PER:_', 'PHI:DET:_', '-VAL', 'PHI:NUM:_', 'ADV', 'MA/inf', '-SPEC:FORCE', '-SPEC:Neg/fin', 'LF:in_doing'}
MA/tta          {'LF:without_doing', 'PHI:GEN:_', 'LANG:EN', 'PHI:PER:_', 'ARG', 'PHI:DET:_', '-SPEC:T/fin', '-VAL', 'PF:matta', '-SPEC:Neg/fin', 'PHI:NUM:_', 'ADV', 'adjoinable', '-SPEC:N', 'MA/inf', '-SPEC:FORCE', 'TAIL:T'}
MA/lla          {'COMP:v', 'LANG:EN', 'ARG', 'LF:by_doing', 'TAIL:T', 'PHI:GEN:_', 'PHI:PER:_', 'PHI:NUM:_', 'MA/inf', 'PF:malla', '-SPEC:T/fin', 'COMP:V', 'adjoinable', '-SPEC:N', 'PHI:DET:_', '-VAL', 'ADV', '-SPEC:FORCE', '-SPEC:Neg/fin'}
MA/inf          {'COMP:v', 'LANG:EN', 'ARG', 'LF:to_do', 'PHI:GEN:_', 'PHI:PER:_', 'PHI:NUM:_', 'MA/inf', 'TAIL:V', 'PF:maan', '-SPEC:T/fin', 'COMP:V', '-SPEC:N', 'adjoinable', 'PHI:DET:_', '-VAL', 'ADV', '-SPEC:FORCE', '-SPEC:Neg/fin'}
E/inf           {'LF:by', 'LANG:FI', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL', 'ADV', '-SPEC:N', 'adjoinable', 'SPEC:*', '-ARG', 'PF:en', '-SPEC:Neg/fin'}
BE-             {'V', 'SPEC:D', 'LANG:EN', 'COPULA', 'SPEC:ADV', '-COMP:T/fin', '-SPEC:T/fin', 'ASP', 'LF:BE', '!COMP:*', '-ARG', 'PF:BE', 'SPEC:TO/inf', '-COMP:v', '-COMP:N', '-VAL', 'SPEC:P', 'COMP:P', '-SPEC:FORCE', '-COMP:V', 'COMP:T/prt'}
D               {'!PROBE:N', 'LANG:EN', 'OP', '-COMP:D', 'LF:D', '-COMP:T/fin', '-SPEC:T/fin', '-SPEC:N', 'adjoinable', '-COMP:uR', '-ARG', '-SPEC:C', '!COMP:*', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:P', '-SPEC:INF', 'D', 'PF:D', 'COMP:N', '-SPEC:Neg/fin', '-SPEC:D'}
P               {'LANG:EN', '-COMP:uWH', 'ARG', '-COMP:T/fin', '-COMP:ADV', 'PF:P', '-SPEC:T/fin', '-SPEC:v', 'adjoinable', '-SPEC:N', '!COMP:*', 'LF:P', '-SPEC:C', '-SPEC:C/fin', 'COMP:D', 'P', '-SPEC:*', 'PHI:GEN:_', '-SPEC:iR', 'PHI:PER:_', '-COMP:N', '-SPEC:iWH', '-SPEC:P', '-float', 'PHI:DET:_', '-VAL', '-SPEC:INF', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:V', '-SPEC:FORCE', '-SPEC:Neg/fin'}
pro             ['LANG:EN']
pro-            {'COMP:uR', 'LANG:EN', '-COMP:D', '-COMP:T/fin', 'N', '-SPEC:uWH', '-COMP:ADV', 'LF:pro', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:N', 'COMP:R/D', '-SPEC:C/fin', 'PHI', 'SPEC:A', '-COMP:A', '-COMP:v', '-COMP:N', '-SPEC:P', 'COMP:R', '-SPEC:INF', '-COMP:C/fin', '-SPEC:ADV', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:FORCE', '-COMP:V', '-SPEC:R', 'PF:(pro)'}
cl              {'LEFT:D,CL', 'RIGHT:ARE/inf', 'LANG:EN', 'CL', 'inflectional', 'RIGHT:PRG', 'LEFT:T/fin'}
inc             {'INCORPORATED', 'LANG:EN', 'inflectional'}
sg              {'PHI:NUM:SG', 'LANG:EN', 'inflectional'}
pl              {'PHI:NUM:PL', 'LANG:EN', 'inflectional'}
1p              {'PHI:PER:1', 'LANG:EN', 'inflectional'}
2p              {'PHI:PER:2', 'LANG:EN', 'inflectional'}
3p              {'PHI:PER:3', 'LANG:EN', 'inflectional'}
def             {'PHI:DET:DEF', 'LANG:EN', 'inflectional'}
indef           {'PHI:DET:INDEF', 'LANG:EN', 'inflectional'}
hum             {'PHI:HUM:HUM', 'LANG:EN', 'inflectional'}
nonhum          {'LANG:EN', 'PHI:HUM:NONHUM', 'inflectional'}
m               {'PHI:GEN:M', 'LANG:EN', 'inflectional'}
f               {'PHI:GEN:F', 'LANG:EN', 'inflectional'}
nom             {'LANG:EN', 'TAIL:FIN,!COMP:*,VAL', 'inflectional'}
acc             {'TAIL:v', 'LANG:EN', 'inflectional'}
dat             {'TAIL:!COMP:*,v', 'LANG:EN', 'inflectional'}
uC/op           {'uC/op', 'LANG:EN', 'inflectional'}
wh              {'OP:_', 'OP:WH', 'LANG:EN', 'inflectional'}
wh_             {'OP:_', 'LANG:EN', 'OP', 'inflectional', 'FORCE:OP:WH'}
top             {'OP:TOP', 'LANG:EN', 'inflectional'}
foc             {'OP:FOC', 'LANG:EN', 'inflectional'}
C/op            {'OP:C/OP', 'LANG:EN', 'inflectional'}
rel             {'-COMP:C/fin', 'LANG:EN', 'adjoinable', 'inflectional', 'OP:REL'}
Q               {'OP:WH', 'LANG:EN', 'OP', 'inflectional', 'OP:Q'}
