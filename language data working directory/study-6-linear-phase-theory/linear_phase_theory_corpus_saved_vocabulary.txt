ï»¿dummy        {'dummy', 'LANG:FI'}
a               {'COMP:ARE/inf', '-SPEC:*', '!COMP:*', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iWH', '-SPEC:V', '-COMP:uWH', '-SPEC:Neg/fin', 'LF:to', 'adjoinable', 'COMP:D', '-SPEC:C', '-VAL', '-SPEC:ADV', 'LANG:IT', '-SPEC:v', 'P', '-ARG', '-SPEC:P', '-SPEC:INF', '-SPEC:N', '-COMP:N', '-SPEC:iR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:a'}
a_D             {'LF:D', 'PF:D', '-COMP:T/fin', '!COMP:*', '-SPEC:V', '!PROBE:N', '-COMP:D', 'OP', '-SPEC:Neg/fin', 'COMP:N', 'adjoinable', '-SPEC:C', 'D', '-ARG', '-SPEC:P', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:D', '-SPEC:N', '-SPEC:T/fin', 'LANG:EN'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-COMP:P', '-COMP:Neg', 'PHI:NUM:_', '!COMP:*', 'PHI:DET:_', '-COMP:v', 'CLASS:TR', '-COMP:V', 'COMP:P', 'COMP:D', 'ASP', 'SPEC:ADV', '-VAL', 'LF:admire', 'V', 'SPEC:P', 'PF:admire', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:Neg'}
admire*         ['LANG:EN']
T/fin*          {"PF:T/fin'", 'NO_DET', 'LF:T', 'LANG:FI', 'NO_NUMBER', '!SPEC:*', '-VAL', 'CAT:T/fin'}
v*              {'PF:v', 'LF:v', 'LANG:FI', 'NO_DET', '-VAL', 'CAT:v', 'NO_NUMBER'}
admire**        ['LANG:EN']
T/fin**         {'PHI:PER:3', "PF:T/fin''", 'NO_DET', 'LF:T', 'NO_PERSON', 'LANG:FI', 'NO_NUMBER', '!SPEC:*', '-VAL', 'CAT:T/fin'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'COMP:D', 'ASP', 'SPEC:ADV', '-VAL', 'LF:admire', 'LANG:IT', 'V', 'SPEC:P', 'PF:adora', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
antaa           ['LANG:FI']
anta-           {'ASP:BOUNDED', 'PHI:NUM:_', '!COMP:*', 'PHI:DET:_', 'LF:give', '-COMP:FIN', '-COMP:v', '-COMP:V', 'COMP:P', 'COMP:D', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'CLASS:DITR', 'SPEC:P', '+SEM:directional', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:D', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:antaa'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'LF:ask', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'COMP:D', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', '-SPEC:T/fin', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:D', '-COMP:N', 'ARG', 'PF:ask', '-SPEC:FORCE', 'SEM:internal', 'LANG:EN'}
ask-            {'LF:ask', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'COMP:D', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', '-SPEC:T/fin', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:D', '-COMP:N', 'ARG', 'PF:ask', '-SPEC:FORCE', 'SEM:internal', 'LANG:EN'}
avain_0acc      ['LANG:FI']
avain_nom       ['LANG:FI']
avain           ['LANG:FI']
avaimen_acc     ['LANG:FI']
avaimen         ['LANG:FI']
avaimet         ['LANG:FI']
avainta         ['LANG:FI']
avain-          {'N', 'COMP:R/D', '-SEM:directional', '-SPEC:uWH', 'COMP:uR', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'PF:avain', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'LF:key'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'PF:auto', 'COMP:P', '-SPEC:ADV', 'LF:car', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-SEM:directional'}
city            {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'PF:city', 'LF:city', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'LANG:EN'}
che             ['LANG:IT']
che-            {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-COMP:*', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', 'PHI_N', '-COMP:WH', '-COMP:V', 'COMP:P', 'LF:who', '-SPEC:ADV', 'LANG:IT', '-COMP:A', 'SPEC:A', '-COMP:C/fin', 'PF:che', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
chiamato        ['LANG:IT']
chiamata-       {'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', 'LANG:IT', 'LF:called', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'PF:chiamato', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
danno           {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', 'LANG:IT', 'LF:damage', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:danno'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'COMP:ARE/inf', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', 'PHI:GEN:_', '-COMP:V', 'PF:detest', 'COMP:D', 'ASP', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:IT', 'V', 'SPEC:P', 'LF:detest', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'SEM:internal'}
devono          ['LANG:FI']
deva-           {'PF:deva', 'COMP:ARE/inf', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:IT', 'LF:must', 'V', '-ASP', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:D', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'SEM:internal'}
di              {'PHI:NUM:_', '!COMP:*', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iWH', '-SPEC:V', '-COMP:uWH', 'PHI:DET:_', '-SPEC:Neg/fin', 'COMP:D', '-adjoinable', '-SPEC:C', '-VAL', '-SPEC:ADV', 'LF:of', 'SPEC:*', '-SPEC:v', 'PF:di', 'P', '-SPEC:P', 'PHI:PER:_', '-SPEC:INF', 'LANG:FI', '-SPEC:N', '-COMP:N', 'ARG', '-SPEC:iR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
does            {'COMP:Neg', 'LF:does', 'PHI:NUM:_', '!COMP:*', 'T', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:V', 'COMP:v', '!PROBE:V', 'PHI:GEN:_', 'SPEC:INF', 'PHI:GEN:F', 'PHI:GEN:M', 'COMP:D', 'COMP:V', '!SPEC:*', 'SPEC:*', '-SPEC:v', 'PHI:PER:3', 'COMP:T/prt', 'PHI:NUM:SG', 'FIN', 'SPEC:TO/inf', '-COMP:INF', 'PF:does', 'T/fin', 'SPEC:D', 'PHI:PER:_', '-SPEC:N', 'ARG', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'VAL', 'LANG:EN'}
does_C          ['LANG:EN']
does-           {'COMP:Neg', 'LF:does', 'PHI:NUM:_', '!COMP:*', 'T', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:V', 'COMP:v', '!PROBE:V', 'PHI:GEN:_', 'SPEC:INF', 'PHI:GEN:F', 'PHI:GEN:M', 'COMP:D', 'COMP:V', '!SPEC:*', 'SPEC:*', '-SPEC:v', 'PHI:PER:3', 'COMP:T/prt', 'PHI:NUM:SG', 'FIN', 'SPEC:TO/inf', '-COMP:INF', 'PF:does', 'T/fin', 'SPEC:D', 'PHI:PER:_', '-SPEC:N', 'ARG', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'VAL', 'LANG:EN'}
dorme           ['LANG:IT']
dorme-          {'PHI:NUM:_', 'PHI:DET:_', '!SPEC:D', '-COMP:v', 'PF:dorme', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'LF:sleep', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'LF:neg', 'PHI:NUM:_', '!COMP:*', 'PHI:DET:_', 'POL:NEG', 'NEG', 'PF:ei', '!SPEC:*', 'SPEC:*', 'COMP:T/prt', 'FIN', 'PHI:PER:_', 'Neg/fin', '-SPEC:T', '%SPEC:INF', 'LANG:FI', 'SEM:internal', 'ARG', '-SPEC:T/fin', '!COMP:T', 'VAL'}
e-              {'LF:neg', 'PHI:NUM:_', '!COMP:*', 'PHI:DET:_', 'POL:NEG', 'NEG', 'PF:ei', '!SPEC:*', 'SPEC:*', 'COMP:T/prt', 'FIN', 'PHI:PER:_', 'Neg/fin', '-SPEC:T', '%SPEC:INF', 'LANG:FI', 'SEM:internal', 'ARG', '-SPEC:T/fin', '!COMP:T', 'VAL'}
elaa            ['LANG:FI']
ela-            {'PHI:NUM:_', 'LF:live', 'PHI:DET:_', '-COMP:D', '-COMP:v', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'CLASS:INTR', 'SPEC:D', 'LANG:FI', '-COMP:N', 'ARG', 'PF:elaa', '-SPEC:T/fin', '-SPEC:FORCE'}
etsii           ['LANG:FI']
etsi-           {'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', '-COMP:V', 'LF:search', 'COMP:P', 'COMP:D', 'ASP', 'SPEC:ADV', '-VAL', '!COMP:D', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'PF:etsi', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
etta            {'FORCE', 'COMP:T/fin', '-ARG', '!PROBE:T/fin', '-SPEC:*', '!COMP:*', 'FIN', 'COMP:C/fin', 'LF:that', 'LANG:FI', 'PF:ettÃ¤', '-VAL'}
flow'           {'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', 'PHI:GEN:_', 'LF:flow', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:D', 'PF:flow', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'LANG:EN'}
from            {'PHI:NUM:_', '-float', '-SPEC:*', '!COMP:*', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iWH', '-SPEC:V', '-COMP:uWH', 'PHI:DET:_', 'PHI:GEN:_', '-SPEC:Neg/fin', 'adjoinable', 'COMP:D', '-SPEC:C', 'LF:from', '-VAL', '-SPEC:ADV', '-SPEC:v', 'P', '-SPEC:T/fin', '-SPEC:P', 'PHI:PER:_', '-SPEC:INF', '-SPEC:N', '-COMP:N', 'ARG', '-SPEC:iR', '-SPEC:C/fin', 'TAIL:V,+SEM:directional', '-SPEC:FORCE', 'PF:from', 'LANG:EN'}
gave            ['LANG:EN']
give-           {'PF:give', 'PHI:NUM:_', '!COMP:*', 'PHI:DET:_', 'LF:give', '-COMP:FIN', '-COMP:v', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'COMP:D', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'CLASS:DITR', 'SPEC:P', '+SEM:directional', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:D', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'LANG:EN'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', 'LF:Giuseppe', '-SPEC:ADV', 'LANG:IT', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'PF:Giuseppe', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-SEM:directional'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'ASP:BOUNDED', '-COMP:P', 'PHI:NUM:_', '-SPEC:*', '!COMP:*', 'PHI:DET:_', '-COMP:v', 'PF:haluaa', 'CLASS:TR', '-COMP:V', 'COMP:P', 'COMP:D', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'LF:want', 'COMP:A/inf', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'SEM:internal'}
hairitsee       ['LANG:FI']
hairitse-       {'PHI:NUM:_', 'PHI:DET:_', 'PF:hairitsee', '-COMP:FIN', '-COMP:v', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', '!COMP:D', 'LF:disturb', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:D', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'PF:ha', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'SPEC:ADV', '-VAL', 'LANG:IT', 'SPEC:*', 'V', '-ASP', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:D', 'COMP:T', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'SEM:internal', 'LF:have'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'PHI:NUM:_', 'LF:disappear', 'PHI:DET:_', '-COMP:D', '-COMP:v', 'PF:havia', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'CLASS:INTR', 'SPEC:D', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'-COMP:P', 'PHI:NUM:_', '!COMP:*', 'PHI:DET:_', '-COMP:FIN', '-COMP:v', 'CLASS:TR', '-COMP:V', 'COMP:P', 'COMP:D', 'ASP', 'SPEC:ADV', '-VAL', 'LF:admire', 'PF:ihaile-', '!COMP:D', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
il              {'-COMP:T/fin', '!COMP:*', '-SPEC:V', '!PROBE:N', '-COMP:D', 'OP', '-SPEC:Neg/fin', 'COMP:N', 'adjoinable', '-SPEC:C', 'LANG:IT', 'D', '-ARG', '-SPEC:P', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', 'PF:il', '-SPEC:D', '-SPEC:N', 'LF:the', '-SPEC:T/fin'}
i               {'-COMP:T/fin', '!COMP:*', '-SPEC:V', '!PROBE:N', '-COMP:D', 'OP', '-SPEC:Neg/fin', 'COMP:N', 'adjoinable', '-SPEC:C', 'LANG:IT', 'D', '-ARG', '-SPEC:P', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', 'PF:il', '-SPEC:D', '-SPEC:N', 'LF:the', '-SPEC:T/fin'}
in              {'PF:in', 'PHI:NUM:_', '!COMP:*', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iWH', '-SPEC:V', '-COMP:uWH', 'PHI:DET:_', 'PHI:GEN:_', '-SPEC:Neg/fin', 'adjoinable', 'COMP:D', '-SPEC:C', '-VAL', '-SPEC:ADV', 'LANG:IT', '-SPEC:v', 'P', '-SPEC:P', 'LF:in', 'PHI:PER:_', '-SPEC:INF', '-SPEC:N', '-COMP:N', 'ARG', '-SPEC:iR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
infermieri      {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', 'PF:infermieri', '-SPEC:ADV', 'LANG:IT', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', 'LF:nurses', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
is              ['LANG:EN']
be-             {'!COMP:*', '-COMP:v', '-COMP:V', 'COMP:P', 'ASP', '-COMP:TO/inf', 'SPEC:ADV', '-VAL', 'PF:be', 'V', 'SPEC:P', '-ARG', 'SPEC:TO/inf', 'COPULA', 'SPEC:D', '-COMP:N', 'LF:be', '-SPEC:T/fin', '-SPEC:FORCE', 'LANG:EN'}
istuuko         ['LANG:FI']
istuu-          {'PF:istuu', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:D', '-COMP:v', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', 'LF:sit', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'CLASS:INTR', 'SPEC:D', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
John            ['LANG:EN']
John-           {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', '-adjoinable', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', '-SPEC:FORCE', 'LF:John', '-SPEC:N', '-COMP:N', 'PF:John', '-SPEC:T/fin', '-SPEC:C/fin', 'LANG:EN', '-SEM:directional'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', 'LF:Jukka', '-SPEC:V', '-SPEC:R', '-COMP:D', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', 'PF:Jukka', '-SPEC:FORCE', '-SEM:directional'}
juosten         ['LANG:FI']
juokse-         {'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'PF:juokse-', 'LANG:FI', 'LF:run', '-COMP:N', '-SPEC:T/fin', '-SPEC:FORCE'}
istuu           ['LANG:FI']
istu-           {'PF:istuu', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', 'LF:sit', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
kaksi           {'PF:kaksi', 'PHI:NUM:_', 'COMP:n', 'LF:two', 'PHI:NUM:SG', 'PHI:PER:_', 'PHI:DET:_', 'TAIL:ARG,VAL,FIN', 'COMP:N', 'LANG:FI', 'ARG', '-VAL', 'NUM', 'SPEC:*'}
kaksi           {'PF:kaksi', 'COMP:n', 'LF:two', 'COMP:N', 'TAIL:*POL:NEG', 'LANG:FI', 'NUM', 'SPEC:*', 'TAIL:ARG,ASP:BOUNDED'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'COMP:N', 'PF:kaksi', 'LANG:FI', 'COMP:n', 'LF:two', 'NUM', 'SPEC:*'}
kaupunkia       ['LANG:FI']
kaupunki        {'N', '-COMP:P', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', '-SPEC:FORCE', 'LF:city', 'LANG:FI', '-COMP:N', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'PF:kaupunki'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'LF:order', 'PF:kaske', 'PHI:PER:_', 'SPEC:TO/inf', 'SEM:external', '!COMP:A/inf', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'PF:kello', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'LF:watch'}
kello0-         {'2SPEC', '0', 'LANG:FI', 'PF:kello', 'SPEC:D', 'LF:watch'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'PF:key', '-COMP:N', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'LANG:EN', 'LF:key'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', 'PF:kirja', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'LF:book', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-SEM:directional'}
kohti           {'PHI:NUM:_', '!COMP:*', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iWH', '-SPEC:V', '-COMP:uWH', 'PHI:DET:_', '-SPEC:Neg/fin', 'LF:towards', 'adjoinable', 'COMP:D', 'PF:kohti', '-SPEC:C', '-VAL', '-SPEC:ADV', 'SPEC:*', '-SPEC:v', 'P', '-SPEC:P', 'PHI:PER:_', '-SPEC:INF', 'LANG:FI', '-SPEC:N', '-COMP:N', 'ARG', '-SPEC:iR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'TAIL:V'}
koko            {'-COMP:T/fin', '!COMP:*', '-SPEC:V', '!PROBE:N', '-COMP:D', 'LF:all', 'OP', '-SPEC:Neg/fin', 'COMP:N', 'adjoinable', 'TAIL:T', '-SPEC:C', 'D', '-ARG', '-SPEC:P', '-COMP:uR', 'PF:koko', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:D', 'LANG:FI', '-SPEC:N', '-SPEC:T/fin'}
kuka            ['LANG:FI']
kuka-           {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', 'LF:who', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'PF:kuka', 'PHI', 'LANG:FI', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
kuorsaa-        {'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', '-COMP:D', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', 'ASP', 'PF:kuorsaa', '-VAL', 'SPEC:ADV', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'LF:snore', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
kuorsaamalla    ['LANG:FI']
lahella         {'!COMP:*', '-SPEC:iWH', '-SPEC:V', '!SPEC:D', 'COMP:v', '!PROBE:V', 'adjoinable', 'INF', '!SPEC:*', '-SPEC:C', '-SPEC:ADV', '-SPEC:v', 'P', '-SPEC:P', '-COMP:N', 'ARG', '-SPEC:iR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'VAL', '-COMP:FORCE', 'PHI:NUM:_', '-COMP:T/fin', '-COMP:ADV', '-COMP:uWH', 'PHI:DET:_', '-SPEC:Neg/fin', 'LF:near', 'COMP:D', 'COMP:V', 'SPEC:*', '-COMP:C/fin', 'PHI:PER:_', '-SPEC:INF', 'LANG:FI', '-SPEC:N', 'PF:lahella'}
lahella         {'PHI:NUM:_', '!COMP:*', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iWH', '-SPEC:V', '-COMP:uWH', 'PHI:DET:_', '-SPEC:Neg/fin', 'LF:near', 'adjoinable', 'COMP:D', '-SPEC:C', '-VAL', '-SPEC:ADV', '!COMP:D', 'SPEC:*', '-SPEC:v', 'P', '-SPEC:P', 'PHI:PER:_', '-SPEC:INF', 'LANG:FI', '-SPEC:N', '-COMP:N', 'ARG', '-SPEC:iR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:lahella'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'PHI:NUM:_', 'PHI:DET:_', 'PF:lahtea', '-COMP:D', '-COMP:v', 'LF:leave', '-COMP:V', 'COMP:P', 'ASP', 'COMP:PP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'CLASS:INTR', 'SPEC:D', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
lavano          ['LANG:IT']
lava-           {'PHI:NUM:_', '!COMP:*', 'PHI:DET:_', '-COMP:v', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'COMP:D', 'PF:lava', 'ASP', 'SPEC:ADV', '-VAL', 'LF:wash', 'LANG:IT', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'LF:D', 'PF:le', '-COMP:T/fin', '!COMP:*', '-SPEC:V', '!PROBE:N', '-COMP:D', 'OP', '-SPEC:Neg/fin', 'COMP:N', 'adjoinable', '-SPEC:C', 'LANG:IT', 'D', '-ARG', '-SPEC:P', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:D', '-SPEC:N', '-SPEC:T/fin'}
leaves          ['LANG:EN']
leave           {'PHI:NUM:_', 'PHI:DET:_', '!SPEC:D', '-COMP:v', 'LF:leave', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'PF:leave', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'LANG:EN'}
leave-          {'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', '!SPEC:D', '-COMP:v', 'LF:leave', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'PF:leave', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'LANG:EN'}
like-           {'PHI:NUM:_', 'LF:like', 'PHI:DET:_', '-COMP:v', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', '!COMP:D', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'PF:like', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'LANG:EN'}
likes           ['LANG:EN']
like            {'PHI:NUM:_', 'LF:like', 'PHI:DET:_', '-COMP:v', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', '!COMP:D', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'PF:like', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'LANG:EN'}
little          ['LANG:EN']
little-         {'2SPEC', '0', 'LF:little', 'SPEC:D', 'LANG:EN', 'PF:little-'}
lle             {'PHI:NUM:_', '-SPEC:*', '!COMP:*', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iWH', '-SPEC:V', '-COMP:uWH', 'PF:P(lle)', 'PHI:DET:_', '-SPEC:Neg/fin', 'adjoinable', 'COMP:D', '-SPEC:C', '-VAL', '-SPEC:ADV', '-SPEC:v', 'P', '+SEM:directional', '-SPEC:T/fin', '-SPEC:P', 'PHI:PER:_', 'LF:for', '-SPEC:INF', 'LANG:FI', '-SPEC:N', '-COMP:N', 'ARG', '-SPEC:iR', '-SPEC:C/fin', 'TAIL:V,+SEM:directional', '-SPEC:FORCE'}
lla             {'PF:P(lla)', 'PHI:NUM:_', '!COMP:*', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iWH', '-SPEC:V', '-COMP:uWH', 'PHI:DET:_', '-SPEC:Neg/fin', 'adjoinable', 'TAIL:T', 'COMP:D', '-SPEC:C', '-VAL', '-SPEC:ADV', 'SPEC:*', '-SPEC:v', 'P', '-SPEC:P', 'PHI:PER:_', '-SPEC:INF', 'LF:by', 'LANG:FI', 'TAIL:*V', '-COMP:N', 'ARG', '-SPEC:iR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N'}
Luisa           ['LANG:IT']
Luisa-          {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', 'LANG:IT', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', 'LF:Luisa', 'PF:Luisa', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-SEM:directional'}
lukemalla       ['LANG:FI']
luke-           {'-COMP:P', 'PHI:NUM:_', '!COMP:*', 'PHI:DET:_', '-COMP:v', 'PF:luke', 'CLASS:TR', '-COMP:V', 'COMP:P', 'COMP:D', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'LF:read', 'PHI:PER:_', 'SPEC:TO/inf', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'ASP:BOUNDED', '-COMP:P', 'PHI:NUM:_', '!COMP:*', 'PHI:DET:_', '-COMP:v', 'CLASS:TR', '-COMP:V', 'COMP:P', 'COMP:D', 'ASP', 'SPEC:ADV', '-VAL', '!COMP:D', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'PF:loyta-', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'LF:find'}
Mary            ['LANG:EN']
Mary-           {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', 'PF:Mary', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', '-adjoinable', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:N', '-COMP:N', 'LF:Mary', '-SPEC:T/fin', '-SPEC:C/fin', 'LANG:EN', '-SEM:directional'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'N', 'PF:Merja', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'LF:Merja', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', '-adjoinable', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-SEM:directional'}
Merjalle        ['LANG:FI']
Merjalla        ['LANG:FI']
malla           {'PF:malla', 'COMP:v', '-SPEC:FORCE', '-SPEC:Neg/fin', 'LF:by', 'TAIL:T', 'LANG:FI', 'adjoinable', '-SPEC:N', 'ADV', '-SPEC:T/fin', 'MA/inf', 'SPEC:*'}
meren           ['LANG:FI']
mere-           {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'PF:meri', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'LF:ocean'}
mistake         {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', 'PF:mistake', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', '-COMP:N', 'LF:mistake', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'LANG:EN'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', 'LF:what', '-SPEC:P', 'PF:mika-', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'-COMP:P', 'PHI:NUM:_', '!COMP:*', 'PHI:DET:_', '-COMP:v', 'PHI:GEN:_', 'CLASS:TR', 'PF:move', '-COMP:V', 'LF:move', 'COMP:D', 'ASP', 'COMP:P', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', '+SEM:directional', 'PHI:PER:_', 'SPEC:TO/inf', 'LANGN:EN', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
mukavasti       ['LANG:FI']
mukava-         {'PF:mukavasti', '2SPEC', 'LANG:FI', '0', 'LF:comfortably', 'SPEC:D'}
must            {'COMP:Neg', 'PHI:NUM:_', '!COMP:*', 'T', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:V', 'COMP:v', '!PROBE:V', 'PHI:GEN:_', 'SPEC:INF', 'COMP:D', 'COMP:V', '!SPEC:*', 'SPEC:*', 'LF:must', '-SPEC:v', 'COMP:T/prt', 'FIN', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:INF', 'SPEC:D', 'T/fin', 'PF:must', 'MODAL', '-SPEC:N', 'ARG', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'VAL', 'LANG:EN'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'ASP:BOUNDED', '-COMP:P', 'PHI:NUM:_', '!COMP:*', 'PHI:DET:_', '-COMP:v', 'PF:myy', 'CLASS:TR', '-COMP:V', 'COMP:P', 'COMP:D', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'ARG', 'PHI:PER:_', 'SPEC:TO/inf', 'LANG:FI', 'LF:sell', '-COMP:N', '-SPEC:T/fin', '-SPEC:FORCE'}
naki            ['LANG:FI']
nake-           {'ASP:BOUNDED', '-COMP:P', 'PHI:NUM:_', '!COMP:*', 'PHI:DET:_', '-COMP:ESSA/inf', '-COMP:MA/inf', '-COMP:v', 'CLASS:TR', '-COMP:V', 'COMP:P', 'COMP:D', 'ASP', 'LF:see', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'LANG:FI', '-COMP:N', 'ARG', 'PF:nake', '-SPEC:T/fin', '-SPEC:FORCE'}
nayttaa         ['LANG:FI']
naytta-         {'PHI:NUM:_', 'PF:naytta', 'PHI:DET:_', '-COMP:v', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'LF:seem', 'SPEC:P', '!COMP:VA/inf', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:D', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'SEM:internal'}
ndo             {'PF:PRG', '-COMP:FORCE', '-COMP:T/fin', '!COMP:*', '?ARG', '-SPEC:V', 'COMP:v', '!PROBE:V', 'INF', 'COMP:V', 'LF:ing', '-COMP:C/fin', 'PRG', 'LANG:FI', '-SPEC:T/fin', 'VAL'}
ne              {'PHI:NUM:PL', 'LF:those', '-COMP:T/fin', '!COMP:*', '-SPEC:V', '!PROBE:N', '-COMP:D', 'OP', '-SPEC:Neg/fin', 'COMP:N', 'adjoinable', '-SPEC:C', 'D', 'PHI:PER:3', '-ARG', '-SPEC:P', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:D', 'LANG:FI', '-SPEC:N', '-SPEC:T/fin', 'PF:ne'}
niiden          ['LANG:FI']
nen             {'LF:ing', '-SPEC:A', 'COMP:0', 'TAIL:D', '-SPEC:D', 'adjoinable', 'LANG:FI', 'A', 'PF:a', 'SPEC:*'}
not             {'PHI:NUM:_', '-SPEC:T/fin', 'SPEC:*', '!COMP:*', 'PHI:PER:_', 'PHI:DET:_', '-COMP:D', 'Neg', 'POL:NEG', 'LF:not', '-COMP:FIN', '-COMP:C', 'PHI:GEN:_', 'ARG', '-VAL', 'PF:not', 'LANG:EN'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'PHI:NUM:_', '-COMP:T/fin', 'PHI:DET:_', 'PF:nukku', '-COMP:D', '-COMP:v', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', 'V', '-COMP:T', 'SPEC:P', '-COMP:Neg/fin', 'PHI:PER:_', 'SPEC:TO/inf', 'CLASS:INTR', 'SPEC:D', 'LF:sleep', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'N', 'PF:omaisuuden', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', '-SPEC:N', '-COMP:N', 'LF:possessions', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
operatoria      ['LANG:IT']
operatoria-     {'2SPEC', '0', 'PF:operatoria', 'LF:operation', 'LANG:IT', 'SPEC:D'}
ostaa           ['LANG:FI']
osta-           {'ASP:BOUNDED', '-COMP:P', 'PHI:NUM:_', '!COMP:*', 'PHI:DET:_', '-COMP:v', 'LF:buy', 'CLASS:TR', '-COMP:V', 'COMP:P', 'COMP:D', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:osta'}
paivan          ['LANG:FI']
paivaa          ['LANG:FI']
paiva           ['LANG:FI']
paiva-          {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', 'LF:day', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', 'PF:paiva', 'SEM:nonreferential', '-COMP:N', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
Pariisia        ['LANG:FI']
Pariisi-        {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', 'PF:Pariisi', 'LF:Paris', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', 'LF:Pekka', 'PF:Pekka', '-SPEC:R', 'COMP:R', '-COMP:WH', '-COMP:v', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', '-SEM:directional'}
pelottaa        ['LANG:FI']
pelkaa-         {'-COMP:P', 'PHI:NUM:_', '!COMP:*', 'PHI:DET:_', '-COMP:v', 'CLASS:TR', '-COMP:V', 'COMP:P', 'COMP:D', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'LF:fear', 'PHI:PER:_', 'SPEC:TO/inf', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:pelkaa'}
persuades       ['LANG:EN']
persuade-       {'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'SEM:external', 'PF:persuade', 'COMP:TO/inf', '-COMP:N', 'ARG', 'LF:persuade', '-SPEC:T/fin', '-SPEC:FORCE', 'LANG:EN'}
peruuntui       ['LANG:FI']
peruuntu-       {'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', 'PF:peruuntui', '-COMP:V', 'LF:cancelled', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:D', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'ASP:BOUNDED', '-COMP:P', 'PHI:NUM:_', '!COMP:*', 'PHI:DET:_', '-COMP:v', 'CLASS:TR', '-COMP:V', 'COMP:P', 'COMP:D', 'ASP', 'SPEC:ADV', '-VAL', 'LF:wash', 'V', 'SPEC:P', 'PF:pese', 'PHI:PER:_', 'SPEC:TO/inf', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
pese-           {'-COMP:P', 'PHI:NUM:_', '!COMP:*', 'PHI:DET:_', '-COMP:v', 'CLASS:TR', '-COMP:V', 'COMP:P', 'COMP:D', 'ASP', 'SPEC:ADV', '-VAL', 'LF:wash', 'V', 'SPEC:P', 'PF:pese', 'PHI:PER:_', 'SPEC:TO/inf', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
petardi         {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', 'LF:firecrackers', '-SPEC:ADV', 'LANG:IT', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', '-COMP:N', 'PF:petardi', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
pieni           ['LANG:FI']
pieni-          {'PF:pieni-', '2SPEC', 'LF:small', 'LANG:FI', '0', 'SPEC:D'}
poikien         ['LANG:FI']
poika-          {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', 'LF:boy', '-COMP:AUX', '-SPEC:INF', '-SPEC:FORCE', 'LANG:FI', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', 'PF:poika'}
puhelinta       ['LANG:FI']
puhelin-        {'2SPEC', 'LF:phone', 'LANG:FI', '0', 'PF:puhelin', 'SPEC:D'}
punainen        ['LANG:FI']
puna-           {'2SPEC', 'LF:red', '0', 'LANG:FI', 'PF:puna-', 'SPEC:D'}
presupposto     {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', 'LANG:IT', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'LF:presupposition', 'PF:presupposto', '-COMP:N', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
primary         {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', 'PF:primary', '-COMP:V', 'COMP:P', '-SPEC:ADV', 'LANG:IT', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', 'LF:nurse', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
promises        ['LANG:EN']
promise-        {'LF:promise', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'COMP:D', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'PF:promise', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:D', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'SEM:internal', 'LANG:EN'}
pyytaa          ['LANG:FI']
pyyta-          {'LF:ask', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'PF:pyyda', 'SEM:external', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
raukesi         ['LANG:FI']
raukea-         {'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', '-COMP:V', 'COMP:P', 'LF:terminate', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'PF:raukea', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
red             ['LANG:EN']
red-            {'2SPEC', 'LF:red', '0', 'LANG:EN', 'SPEC:D', 'PF:red'}
saavuttaa       ['LANG:FI']
saavutta-       {'LF:reach', 'ASP:BOUNDED', '-COMP:P', 'PHI:NUM:_', '!COMP:*', 'PHI:DET:_', '-COMP:v', 'CLASS:TR', '-COMP:V', 'COMP:P', 'COMP:D', 'ASP', 'PF:saavutta-', '-VAL', 'SPEC:ADV', '!COMP:D', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'PHI:NUM:_', 'COMP:VA/inf', 'PHI:DET:_', '-COMP:v', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', 'COMP:FORCE', '-VAL', 'V', 'SPEC:P', 'LF:say', 'PHI:PER:_', 'PF:sano-', 'SPEC:TO/inf', 'SPEC:D', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
said            ['LANG:EN']
say'            {'PHI:NUM:_', '!COMP:FORCE', 'PHI:DET:_', '-COMP:v', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'LF:say', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:D', 'PF:say', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'LANG:EN'}
say-            {'PHI:NUM:_', '!COMP:FORCE', 'PHI:DET:_', '-COMP:v', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'LF:say', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:D', 'PF:say', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'LANG:EN'}
sala            ['LANG:IT']
sala-           {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', 'LANG:IT', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:P', 'LF:room', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', 'PF:sala', '-SPEC:FORCE'}
scoppiati       ['LANG:IT']
scoppia-        {'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', 'PHI:GEN:_', 'PF:scoppia', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', 'LANG:IT', 'LF:explode', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
sen             {'-COMP:T/fin', 'TAIL:ASP', '!COMP:*', 'TAIL:PHI', '-SPEC:V', '!PROBE:N', '-COMP:D', 'OP', '-SPEC:Neg/fin', 'COMP:N', 'LF:the/that', 'adjoinable', '-SPEC:C', 'D', '-ARG', '-SPEC:P', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:D', 'TAIL:*POL:NEG', 'LANG:FI', '-SPEC:N', 'PF:sen', '-SPEC:T/fin'}
se'             {'-COMP:T/fin', '!COMP:*', '-SPEC:V', '!PROBE:N', '-COMP:D', 'PF:se', 'OP', '-SPEC:Neg/fin', 'COMP:N', 'LF:the/that', 'adjoinable', '-SPEC:C', 'D', '-ARG', '-SPEC:P', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:D', 'LANG:FI', '-SPEC:N', '-SPEC:T/fin'}
sentenza        {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', 'LF:sentence', '-SPEC:V', '-SPEC:R', '-COMP:D', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', 'LANG:IT', '-COMP:A', 'SPEC:A', '-COMP:C/fin', 'PF:sentenza', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
Seine           ['LANG:FI']
Seine-          {'N', 'COMP:R/D', 'LF:Seine', '-SPEC:uWH', 'COMP:uR', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', 'PF:Seine', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
sembrano        ['LANG:IT']
sembra-         {'-COMP:D', '-COMP:v', '-COMP:V', 'COMP:P', 'SPEC:ADV', '-VAL', 'V', 'LF:seem', '-ASP', 'SPEC:P', '-ARG', 'PF:sembra', 'SPEC:TO/inf', 'SPEC:D', '!COMP:ARE/inf', 'LANG:FI', '-COMP:N', '-SPEC:T/fin', '-SPEC:FORCE'}
sleeps          ['LANG:EN']
sleep           {'PHI:NUM:_', 'PHI:DET:_', '-COMP:D', '-COMP:v', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'CLASS:INTR', 'SPEC:D', 'LF:sleep', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:sleep', 'LANG:EN'}
sleep-          {'PHI:NUM:_', 'PHI:DET:_', '-COMP:D', '-COMP:v', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'CLASS:INTR', 'SPEC:D', 'LF:sleep', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:sleep', 'LANG:EN'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', 'LF:agreement', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', '!COMP:A/inf', '-COMP:N', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:sopimus'}
spinge          ['LANG:IT']
spinge-         {'-COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', 'PHI:GEN:_', 'LF:push', 'PF:spinge', '-COMP:V', 'ASP', 'SPEC:ADV', '-VAL', 'LANG:IT', '!COMP:D', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
ssa             {'PHI:NUM:_', '!COMP:*', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iWH', '-SPEC:V', '-COMP:uWH', 'PHI:DET:_', '-SPEC:Neg/fin', 'adjoinable', 'COMP:D', '-SPEC:C', '-VAL', '-SPEC:ADV', 'SPEC:*', '-SPEC:v', 'ARG', 'P', '-SPEC:P', 'LF:in', 'PHI:PER:_', '-SPEC:INF', 'COMP:n/MA', 'LANG:FI', '-SPEC:N', '-COMP:N', 'PF:ssa', '-SPEC:iR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'TAIL:V'}
stanno          ['LANG:IT']
sta-            {'PHI:NUM:_', 'PHI:DET:_', 'LF:stay', '-COMP:v', 'COMP:PRG', '-COMP:V', 'COMP:P', 'SPEC:ADV', '-VAL', 'V', '-ASP', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:D', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'SEM:internal', 'PF:sta'}
sti             {'-ARG', '!COMP:*', 'ADV', '-SPEC:Neg/fin', 'LF:by', 'TAIL:T', 'LANG:FI', 'adjoinable', '-SPEC:N', 'PF:sti', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:*'}
sukkaa          ['LANG:FI']
sukan           ['LANG:FI']
sukat           ['LANG:FI']
sukka-          {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', 'LF:socks', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', 'PF:sukka-', '-COMP:N', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
talo            {'N', 'PF:talo', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', 'LF:house', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
tama            ['LANG:FI']
tama-           {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', 'LF:this', '-COMP:C/fin', '-SPEC:P', 'PF:tama', '-COMP:AUX', '-SPEC:INF', 'PHI', 'LANG:FI', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
tassa           ['LANG:FI']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', 'PF:taytyy', '-COMP:V', 'COMP:P', 'SPEC:ADV', '-VAL', 'SPEC:*', 'LF:must', 'V', '-ASP', 'SPEC:P', 'PHI:PER:_', 'FIN', 'SPEC:TO/inf', 'MODAL', '!COMP:A/inf', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
teki            ['LANG:FI']
teke-           {'ASP:BOUNDED', '-COMP:P', 'PHI:NUM:_', '!COMP:*', 'PHI:DET:_', '-COMP:A/inf', '-COMP:v', 'CLASS:TR', '-COMP:V', 'COMP:P', 'COMP:D', 'ASP', 'SPEC:ADV', '-VAL', '!COMP:D', 'V', 'SPEC:P', 'PHI:PER:_', 'LF:make', 'SPEC:TO/inf', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:teke'}
that            {'FORCE', 'COMP:T/fin', '-ARG', 'PF:that', '!PROBE:T/fin', '-SPEC:*', '!COMP:*', 'FIN', 'COMP:C/fin', 'LF:that', '-VAL', 'LANG:EN'}
the             {'-COMP:T/fin', '!COMP:*', '-SPEC:V', '!PROBE:N', '-COMP:D', 'OP', '-SPEC:Neg/fin', 'PF:the', 'COMP:N', 'adjoinable', '-SPEC:C', 'PHI:DEF:DEF', 'D', '-ARG', '-SPEC:P', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:D', '-SPEC:N', 'LF:the', '-SPEC:T/fin', 'LANG:EN'}
to              {'PHI:NUM:_', '-float', '-SPEC:*', '!COMP:*', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iWH', '-SPEC:V', '-COMP:uWH', 'PHI:DET:_', 'PHI:GEN:_', '-SPEC:Neg/fin', 'LF:to', 'adjoinable', 'COMP:D', 'PF:to', '-SPEC:C', '-VAL', '-SPEC:ADV', '-SPEC:v', 'P', '+SEM:directional', '-SPEC:T/fin', '-SPEC:P', 'PHI:PER:_', '-SPEC:INF', '-SPEC:N', '-COMP:N', 'ARG', '-SPEC:iR', '-SPEC:C/fin', 'TAIL:V,+SEM:directional', '-SPEC:FORCE', 'LANG:EN'}
to_inf          {'-COMP:FORCE', '-COMP:T/fin', '!COMP:*', 'PF:TO/inf', '?ARG', '-SPEC:V', 'COMP:v', '!PROBE:V', 'adjoinable', 'INF', 'COMP:V', '-VAL', '-SPEC:v', '-COMP:C/fin', 'LANG:FI', 'TO/inf', '-SPEC:T/fin', 'LF:TO/inf'}
towards         {'PHI:NUM:_', '-float', '-SPEC:*', '!COMP:*', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iWH', '-SPEC:V', '-COMP:uWH', 'PHI:DET:_', 'PHI:GEN:_', '-SPEC:Neg/fin', 'LF:towards', 'adjoinable', 'LANG:EN', 'COMP:D', '-SPEC:C', '-VAL', '-SPEC:ADV', 'PF:towards', '-SPEC:v', 'P', '-SPEC:P', 'PHI:PER:_', '-SPEC:INF', '-SPEC:N', '-COMP:N', 'ARG', '-SPEC:iR', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'TAIL:V'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'-COMP:P', 'PHI:NUM:_', '!COMP:*', 'PHI:DET:_', '-COMP:v', 'LF:nudge', 'CLASS:TR', '-COMP:V', 'COMP:P', 'COMP:D', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'PHI:PER:_', 'PF:tonaise', 'SPEC:TO/inf', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
tta             {'PHI:NUM:_', '!COMP:*', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iWH', 'LF:without', '-SPEC:V', '-COMP:uWH', 'PHI:DET:_', '-SPEC:Neg/fin', 'adjoinable', 'COMP:D', '-SPEC:C', '-VAL', '-SPEC:ADV', 'PF:tta', 'SPEC:*', '-SPEC:v', 'P', '-SPEC:iR', '-SPEC:P', 'PHI:PER:_', '-SPEC:INF', 'COMP:n/MA', 'LANG:FI', '-SPEC:N', '-COMP:N', 'ARG', 'ADV', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
tries           ['LANG:EN']
try-            {'PHI:NUM:_', 'PHI:DET:_', 'PF:try', '-COMP:v', 'PHI:GEN:_', '-COMP:V', 'COMP:P', '!COMP:-ARG', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', '!COMP:TO/inf', 'SPEC:D', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'SEM:internal', 'LANG:EN', 'LF:try'}
verifiche       {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', 'LANG:IT', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'PF:verifiche', '-SPEC:N', '-COMP:N', 'LF:verification', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'PHI:NUM:_', 'PF:virtaa', 'PHI:DET:_', '-COMP:D', '-COMP:v', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', 'V', '!COMP:P', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:D', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'LF:flow'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'PHI:NUM:_', '-SPEC:*', '!COMP:*', 'PHI:DET:_', '-COMP:v', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'PF:volu', 'PHI:PER:_', 'SPEC:TO/inf', 'LF:want', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'SEM:internal'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'ASP:BOUNDED', '-COMP:P', 'PHI:NUM:_', '!COMP:*', 'PHI:DET:_', '-COMP:v', 'CLASS:TR', '-COMP:V', 'COMP:P', 'COMP:D', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'PF:voitta', 'SPEC:P', 'LF:win', 'PHI:PER:_', 'SEM:achievement', 'SPEC:TO/inf', 'LANG:FI', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE'}
wants           ['LANG:EN']
want-           {'-COMP:P', '-SPEC:TO/inf', 'PHI:NUM:_', 'PF:want', '!COMP:*', 'PHI:DET:_', '-COMP:v', 'PHI:GEN:_', 'CLASS:TR', '-COMP:V', 'COMP:P', 'COMP:D', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'PHI:PER:_', 'LF:want', 'COMP:TO/inf', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'LANG:EN'}
what            ['LANG:EN']
what-           {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', 'PF:what', '-COMP:ADV', '-COMP:*', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', 'PHI_N', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', 'LF:what', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'LANG:EN'}
which           {'PF:which', '-COMP:T/fin', '!COMP:*', '-SPEC:V', '!PROBE:N', '-COMP:D', 'OP', '-SPEC:Neg/fin', 'COMP:N', 'adjoinable', 'OP:WH', '-SPEC:C', 'D', '-ARG', '-SPEC:P', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:D', '-SPEC:N', '-SPEC:T/fin', 'LF:which', 'LANG:EN'}
who             ['LANG:EN']
who-            {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-COMP:*', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', 'PHI_N', '-COMP:WH', '-COMP:V', 'COMP:P', 'LF:who', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:N', '-COMP:N', 'PF:who', '-SPEC:T/fin', '-SPEC:C/fin', 'LANG:EN'}
whether         {'LF:whether', '-SPEC:*', '!COMP:*', 'OP', 'OP:Q', 'OP:WH', 'Q', 'COMP:C/fin', '-VAL', 'FORCE', 'COMP:T/fin', '-ARG', '!PROBE:T/fin', 'FIN', 'PF:whether', 'LANG:EN'}
yrittaa         ['LANG:FI']
yritta-         {'PHI:NUM:_', 'PHI:DET:_', 'PF:yritta', '-COMP:v', 'PHI:GEN:_', '-COMP:V', 'COMP:P', '!COMP:-ARG', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'SPEC:D', '!COMP:A/inf', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'SEM:internal', 'LANG:EN', 'LF:try'}
mina            ['LANG:FI']
mina-           {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-COMP:*', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', 'PHI_N', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', 'PF:mina', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', 'LF:I', '-COMP:N', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
sina            ['LANG:FI']
sina-           {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-COMP:*', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', 'PHI_N', '-COMP:WH', '-COMP:V', 'LF:you', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', '-SPEC:FORCE', 'LANG:FI', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', 'PF:sina'}
han             ['LANG:FI']
han-            {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-COMP:*', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', 'PHI_N', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', 'LF:s/he', '-SPEC:FORCE', '-SPEC:INF', 'LANG:FI', '-SPEC:N', '-COMP:N', 'PF:han', '-SPEC:T/fin', '-SPEC:C/fin'}
hanet           ['LANG:FI']
me              ['LANG:FI']
me-             {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-COMP:*', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', 'PHI_N', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:P', 'PF:me', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', 'LF:we', '-SPEC:FORCE'}
te              ['LANG:FI']
te-             {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-COMP:*', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', 'PHI_N', '-COMP:WH', '-COMP:V', 'LF:you', 'COMP:P', 'PF:te', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
he_FI           ['LANG:FI']
heidan          ['LANG:FI']
he-             {'N', 'PF:he', 'COMP:uR', '-SPEC:uWH', 'COMP:R/D', '-COMP:T/fin', 'LF:they', '-COMP:ADV', '-COMP:*', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', 'PHI_N', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
he-             {'N', 'PF:he', 'COMP:uR', '-SPEC:uWH', 'COMP:R/D', '-COMP:T/fin', '-COMP:ADV', '-COMP:*', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', 'PHI_N', 'LF:he', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'LANG:EN'}
se              ['LANG:FI']
se-             {'-COMP:T/fin', '!COMP:*', '-SPEC:V', '!PROBE:N', '-COMP:D', 'PF:se', 'OP', '-SPEC:Neg/fin', 'COMP:N', 'adjoinable', '-SPEC:C', 'D', '-ARG', '-SPEC:P', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:D', 'LANG:FI', '-SPEC:N', '-SPEC:T/fin', 'LF:it/that'}
I               ['LANG:FI']
I-              {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-COMP:*', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', 'PHI_N', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', 'PF:I', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'LF:I', '-COMP:N', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'LANG:EN'}
you             ['LANG:FI']
you-            {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-COMP:*', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', 'PHI_N', '-COMP:WH', '-COMP:V', 'LF:you', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:you', 'LANG:EN'}
he              ['LANG:FI']
she             ['LANG:FI']
she-            {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-COMP:*', 'LF:she', '-SPEC:V', '-SPEC:R', '-COMP:D', 'COMP:R', 'PHI_N', '-COMP:WH', '-COMP:v', '-COMP:V', 'COMP:P', '-SPEC:ADV', 'PF:she', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'LANG:EN'}
we              ['LANG:FI']
we-             {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-COMP:*', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', 'PHI_N', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:P', 'PF:we', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', 'LF:we', '-SPEC:FORCE', 'LANG:EN'}
you_pl          ['LANG:FI']
you_pl-         {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', 'PF:you_pl', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'LF:you_pl', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'PHI', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'LANG:EN'}
they            ['LANG:FI']
they-           {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', 'LF:they', '-COMP:ADV', '-COMP:*', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', 'PHI_N', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', 'PF:they', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'LANG:EN'}
it              ['LANG:EN']
it-             {'-COMP:T/fin', '!COMP:*', '-SPEC:V', '!PROBE:N', '-COMP:D', 'OP', '-SPEC:Neg/fin', 'COMP:N', 'adjoinable', '-SPEC:C', 'D', 'PF:it', '-ARG', '-SPEC:P', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:D', '-SPEC:N', '-SPEC:T/fin', 'LF:it/that', 'LANG:EN'}
io              ['LANG:FI']
io-             {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-COMP:*', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', 'PHI_N', '-COMP:WH', '-COMP:V', 'PF:io', 'COMP:P', '-SPEC:ADV', 'LANG:IT', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'LF:I', '-COMP:N', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
tu              ['LANG:FI']
tu-             {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-COMP:*', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', 'PHI_N', '-COMP:WH', '-COMP:V', 'PF:tu', 'LF:you', 'COMP:P', '-SPEC:ADV', 'LANG:IT', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
lui             ['LANG:FI']
lui-            {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-COMP:*', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', 'PHI_N', 'LF:he', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', 'LANG:IT', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', 'PF:lui', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
lei             ['LANG:FI']
lei-            {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-COMP:*', 'LF:she', '-SPEC:V', '-SPEC:R', '-COMP:D', 'COMP:R', 'PHI_N', '-COMP:WH', '-COMP:v', '-COMP:V', 'COMP:P', '-SPEC:ADV', 'LANG:IT', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', 'PF:lei', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
noi             ['LANG:FI']
noi-            {'N', 'PF:noi', 'COMP:uR', '-SPEC:uWH', 'COMP:R/D', '-COMP:T/fin', '-COMP:ADV', '-COMP:*', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', 'PHI_N', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', 'LANG:IT', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', 'LF:we', '-SPEC:FORCE'}
voi             ['LANG:FI']
voi-            {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-COMP:*', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', 'PHI_N', '-COMP:WH', '-COMP:V', 'PF:voi', 'COMP:P', '-SPEC:ADV', 'LANG:IT', '-COMP:A', 'LF:you_pl', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
loro            ['LANG:EN']
loro-           {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', 'LF:they', '-COMP:ADV', '-COMP:*', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', 'PHI_N', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', 'LANG:IT', '-COMP:A', 'SPEC:A', '-COMP:C/fin', 'PF:loro', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
mi              ['LANG:FI']
mi-             {'N', '-SPEC:uWH', '-COMP:*', '-SPEC:V', '-SPEC:R', 'PHI_N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-SPEC:P', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'COMP:uR', '-COMP:T/fin', '-COMP:ADV', '-COMP:D', 'COMP:R', '-COMP:v', '-COMP:V', 'PF:mi(cl)', 'CL', 'LANG:IT', 'LF:me', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', 'COMP:R/D'}
la              ['LANG:FI']
la-             {'N', '-SPEC:uWH', '-COMP:*', '-SPEC:V', '-SPEC:R', 'PHI_N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-SPEC:P', 'LF:her', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'COMP:uR', '-COMP:T/fin', '-COMP:ADV', '-COMP:D', 'COMP:R', '-COMP:v', '-COMP:V', 'CL', 'LANG:IT', '-COMP:A', 'PF:la(cl)', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', 'COMP:R/D'}
lo              ['LANG:FI']
lo-             {'N', '-SPEC:uWH', '-COMP:*', '-SPEC:V', '-SPEC:R', 'PHI_N', '-COMP:WH', 'COMP:P', '-SPEC:ADV', '-SPEC:P', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'COMP:uR', 'PF:lo(cl)', '-COMP:T/fin', '-COMP:ADV', '-COMP:D', 'COMP:R', '-COMP:v', '-COMP:V', 'CL', 'LANG:IT', '-COMP:A', 'SPEC:A', '-COMP:C/fin', 'LF:him', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', 'COMP:R/D'}
si              ['LANG:FI']
si-             {'N', '-SPEC:uWH', '-COMP:*', '-SPEC:V', '-SPEC:R', 'PHI_N', '-COMP:WH', 'CAL:CL', 'COMP:P', '-SPEC:ADV', '-SPEC:P', 'LF:3sg', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'COMP:R/D', 'COMP:uR', '-COMP:T/fin', '-COMP:ADV', '-COMP:D', 'COMP:R', '-COMP:v', '-COMP:V', 'LANG:IT', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', 'PF:si(cl)'}
gli             ['LANG:FI']
gli             ['LANG:FI']
ci              ['LANG:FI']
ci-             {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-COMP:*', '-SPEC:V', '-COMP:D', '-SPEC:R', 'PF:ci', 'COMP:R', 'PHI_N', '-COMP:WH', '-COMP:v', '-COMP:V', 'LF:there', 'COMP:P', '-SPEC:ADV', 'LANG:IT', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', '-COMP:AUX', '-SPEC:INF', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
[-n]            {'PHI', 'LANG:FI', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:1'}
[-t]            {'PHI:PER:2', 'PHI', 'LANG:FI', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:DET:DEF'}
[-V]            {'PHI:PER:3', 'PHI', 'LANG:FI', 'inflectional', 'PHI:NUM:SG'}
[-mme]          {'PHI:NUM:PL', 'PHI', 'LANG:FI', 'inflectional', 'PHI:HUM:HUM', 'PHI:PER:1', 'PHI:DET:DEF'}
[-mme]          {'PHI:NUM:PL', 'LANG:FI', 'PHI:HUM:HUM', 'inflectional', 'PHI:PER:1', 'PHI:DET:DEF'}
[-tte]          {'PHI:NUM:PL', 'PHI:PER:2', 'PHI', 'LANG:FI', 'inflectional', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-vat]          {'PHI:NUM:PL', 'PHI:PER:3', 'PHI', 'LANG:FI', 'inflectional'}
[-ni]           {'PHI', 'LANG:FI', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:1'}
[-si]           {'PHI:PER:2', 'PHI', 'LANG:FI', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:DET:DEF'}
[-nsa]          {'PHI:PER:3', 'PHI', 'LANG:FI', 'inflectional'}
[-an]           {'PHI:PER:3', 'PHI', 'LANG:FI', 'inflectional'}
[-nne]          {'PHI:NUM:PL', 'PHI:PER:2', 'LANG:FI', 'inflectional', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-s]            {'PHI:PER:3', 'PHI', 'PHI:GEN:F', 'PHI:GEN:M', 'inflectional', 'PHI:NUM:SG', 'LANG:EN'}
[-0]            {'PHI:NUM:PL', 'PHI:PER:2', 'PHI:PER:3', 'inflectional', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:DET:DEF', 'PHI:GEN:N', 'PHI', 'LANG:EN'}
[-o]            {'PHI', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:DET:DEF', 'LANG:IT', 'PHI:PER:1'}
[-i]            {'PHI:PER:2', 'PHI', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:DET:DEF', 'LANG:IT'}
[-a]            {'PHI:PER:3', 'PHI', 'inflectional', 'PHI:NUM:SG', 'PHI:DET:DEF', 'LANG:IT'}
[-e]            {'PHI:PER:3', 'PHI', 'inflectional', 'PHI:NUM:SG', 'PHI:DET:DEF', 'LANG:IT'}
[-iamo]         {'PHI:NUM:PL', 'PHI', 'inflectional', 'PHI:HUM:HUM', 'PHI:PER:1', 'PHI:DET:DEF', 'LANG:IT'}
[-te]           {'PHI:NUM:PL', 'PHI:PER:2', 'PHI', 'inflectional', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT'}
[-no]           {'PHI:NUM:PL', 'PHI:PER:3', 'PHI', 'inflectional', 'PHI:DET:DEF', 'LANG:IT'}
[-nom]          {'adjoinable', 'LANG:FI', 'NOM', 'inflectional', 'TAIL:FIN,ARG,VAL'}
[-par]          {'PAR', 'adjoinable', 'LANG:FI', 'inflectional', 'TAIL:ARG,-VAL'}
[-gen]          {'GEN', 'LANG:FI', 'inflectional', 'TAIL:INF,ARG'}
gen             {'GEN', 'LANG:FI', 'inflectional', 'TAIL:INF,ARG'}
[-n_acc]        {'TAIL:*POL:NEG', 'adjoinable', 'LANG:FI', 'inflectional', 'TAIL:PHI', 'n-ACC', 'TAIL:ARG,ASP:BOUNDED'}
[-t_acc]        {'TAIL:*POL:NEG', 'adjoinable', 'LANG:FI', 'inflectional', 't-ACC', 'TAIL:ARG,ASP:BOUNDED'}
[-0_acc]        {'TAIL:*POL:NEG', 'adjoinable', 'LANG:FI', 'inflectional', 'TAIL:*PHI', 'TAIL:ARG,ASP:BOUNDED', '0_ACC'}
asp             {'ASP:BOUNDED', 'LANG:FI', 'inflectional'}
a'              {'LANG:X', 'LF:A', 'PF:a', 'a'}
b'              {'b', 'LF:B', 'LANG:X', 'PF:b'}
b''             {'b', '-COMP:c', 'LANG:FI', 'LF:B', 'PF:b'}
c''             {'c', 'LF:C', 'LANG:FI', 'SPEC:a', 'PF:c'}
c'              {'c', 'PF:c', 'LF:C', 'LANG:X'}
d'              {'PF:d', 'd', 'LF:D', 'LANG:'}
a''             ['LANG:FI']
x'              {'LANG:X', 'LF:X', 'PF:x', 'x'}
y'              {'LF:Y', 'PF:y', 'y', 'LANG:X'}
z'              {'LANG:X', 'PF:x', 'LF:Z', 'z'}
John'           {'LANG:X', "N'", 'PF:John', 'LF:John'}
admires'        {'PF:admires', 'LF:admires', 'LANG:X', "V'"}
admires''       {'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'LANG:EN', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'LF:admires', 'SPEC:D', '-COMP:N', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:admires'}
Mary'           {'LF:mary', "N'", 'LANG:X', 'PF:Mary'}
T/fin           {'PHI:NUM:_', '!COMP:*', 'T', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:V', 'COMP:v', '!PROBE:V', 'COMP:D', 'COMP:V', '!SPEC:*', 'SPEC:*', '-SPEC:v', 'COMP:T/prt', 'LF:T', 'FIN', 'SPEC:TO/inf', '-COMP:INF', 'SPEC:D', 'T/fin', '-SPEC:FORCE', 'PHI:PER:_', 'LANG:FI', '-SPEC:N', 'ARG', 'PF:T', '-SPEC:T/fin', '-SPEC:C/fin', 'VAL'}
v               {'PHI:NUM:_', '!COMP:*', 'PHI:PER:_', 'PHI:DET:_', 'v', 'SPEC:D', '!PROBE:V', 'PF:v', 'ASP', 'LF:v', 'LANG:FI', '-SPEC:N', 'COMP:V', 'ARG', '-VAL'}
C/fin           {'!COMP:*', '-COMP:T/prt', 'COMP:Neg/fin', 'SPEC:*', 'COMP:T/fin', '-ARG', '-COMP:C/fin', '-SPEC:T/fin', 'C/fin', 'FIN', 'LF:C/fin', 'PF:C', 'LANG:FI', '-SPEC:N', '-SPEC:C/fin', 'C', 'VAL', '!PROBE:FIN'}
T               {'PHI:NUM:_', 'T', '!COMP:*', 'PHI:DET:_', '-SPEC:V', 'COMP:v', '!PROBE:V', '-COMP:NEG', 'COMP:D', 'COMP:V', '!SPEC:*', 'SPEC:*', 'COMP:T/prt', 'LF:T', 'FIN', 'PHI:PER:_', 'SPEC:D', 'LANG:FI', '-SPEC:N', 'ARG', 'PF:T', '-SPEC:T/fin', '-SPEC:FORCE', 'VAL'}
T/prt           {'PF:T/prt', 'PHI:NUM:_', 'T', '!COMP:*', 'PHI:DET:_', 'LF:T/prt', '-SPEC:V', 'COMP:v', '!PROBE:V', '-COMP:NEG', 'COMP:D', 'COMP:V', '!SPEC:*', 'SPEC:*', 'COMP:T/prt', 'FIN', 'PHI:PER:_', 'SPEC:D', '-SPEC:FORCE', 'LANG:FI', '-SPEC:N', 'ARG', '-SPEC:T/fin', 'T/prt', 'VAL'}
a0              {'-SPEC:A', 'COMP:0', 'TAIL:D', 'LF:A', '-SPEC:D', 'adjoinable', 'LANG:FI', 'A', 'PF:A', 'SPEC:*'}
n               {'N', '-SPEC:uWH', '!COMP:*', '-SPEC:V', 'PF:n', '-SPEC:R', 'COMP:v', 'n', '!SPEC:D', '-COMP:WH', 'COMP:P', 'INF', '!SPEC:*', '-SPEC:ADV', '-SPEC:P', '-COMP:N', 'ARG', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'VAL', 'PHI:NUM:_', 'LF:n', 'COMP:uR', '-COMP:T/fin', '-COMP:ADV', 'PHI:DET:_', '-COMP:D', 'COMP:R', '-COMP:v', '-COMP:V', 'COMP:V', 'SPEC:*', '-COMP:A', 'SPEC:A', '-COMP:C/fin', 'COMP:0', 'PHI:PER:_', '-COMP:AUX', '-SPEC:INF', 'LANG:FI', '-SPEC:N', 'COMP:R/D'}
impass          {'PHI:NUM:_', '!COMP:*', 'PHI:PER:_', 'PHI:DET:_', 'v', 'SPEC:D', '!PROBE:V', 'PF:impass', 'ASP', 'LANG:FI', '-SPEC:N', 'LF:impass', 'ARG', 'COMP:V', '-VAL'}
cau             {'PHI:NUM:_', 'LF:v/Cause', '!COMP:*', 'PHI:PER:_', 'PHI:DET:_', 'PF:Cau', 'v', 'SPEC:D', '!PROBE:V', 'ASP', 'LANG:FI', '-SPEC:N', 'COMP:V', 'ARG', '-VAL'}
INF             {'-COMP:FORCE', '-COMP:C/fin', '-COMP:T/fin', 'PF:INF', '!COMP:*', 'LF:INF', '-SPEC:V', 'COMP:v', '!PROBE:V', 'LANG:FI', 'INF', 'COMP:V', '-SPEC:T/fin'}
prtcpl          {'PF:T/prt', '-COMP:FORCE', 'PHI:NUM:_', 'T', '!COMP:*', '-COMP:T/fin', 'PHI:DET:_', 'LF:T/prt', '-SPEC:V', 'COMP:v', '!PROBE:V', '-COMP:NEG', 'INF', 'COMP:D', 'COMP:V', '!SPEC:*', 'SPEC:*', '-COMP:C/fin', 'COMP:T/prt', 'FIN', 'PHI:PER:_', 'SPEC:D', '-SPEC:FORCE', 'LANG:FI', '-SPEC:N', 'ARG', '-SPEC:T/fin', 'T/prt', 'VAL'}
TO/inf          {'-COMP:FORCE', '-COMP:T/fin', '!COMP:*', 'PF:TO/inf', '?ARG', '-SPEC:V', 'COMP:v', '!PROBE:V', 'adjoinable', 'INF', 'COMP:V', '!COMP:V', '-VAL', '-SPEC:v', '-COMP:C/fin', 'LANG:FI', 'TO/inf', '-SPEC:T/fin', 'LF:TO/inf'}
A/inf           {'-COMP:FORCE', '-COMP:T/fin', 'A/inf', '!COMP:*', 'LF:A/inf', '?ARG', '?VAL', '-SPEC:V', 'COMP:v', '!PROBE:V', '-SPEC:Neg/fin', 'INF', 'COMP:V', 'SPEC:*', '-COMP:C/fin', 'PF:A/inf', 'LANG:FI', '-SPEC:T/fin'}
ARE/inf         {'-COMP:FORCE', '-COMP:T/fin', '!COMP:*', '?ARG', '-SPEC:V', 'COMP:v', '!PROBE:V', 'ARE/inf', 'INF', 'COMP:V', '-adjoinable', 'SPEC:*', '-COMP:C/fin', 'LF:ARE/inf', 'LANG:FI', 'PF:are', '-SPEC:T/fin', 'VAL'}
ESSA/inf        {'-COMP:FORCE', '-COMP:T/fin', '!COMP:*', '?VAL', '?ARG', '-SPEC:V', 'COMP:v', '!PROBE:V', '-SPEC:Neg/fin', 'adjoinable', 'TAIL:T', 'INF', 'COMP:V', 'SPEC:*', 'PF:essa', '-COMP:C/fin', 'LF:while', 'LANG:FI', '-SPEC:N', 'ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'ESSA/inf'}
TUA/inf         {'-COMP:FORCE', 'PHI:NUM:_', '-COMP:T/fin', '!COMP:*', 'PHI:DET:_', '-SPEC:V', 'COMP:v', '!PROBE:V', '-SPEC:Neg/fin', 'adjoinable', 'TAIL:T', 'INF', 'COMP:V', '!SPEC:*', 'CAL', 'SPEC:*', 'TUA/inf', '-COMP:C/fin', 'PF:tua', 'PHI:PER:_', 'LF:after', 'LANG:FI', '-SPEC:N', 'ARG', 'ADV', '-SPEC:T/fin', '-SPEC:FORCE'}
VA/inf          {'-COMP:FORCE', 'PF:vAn', 'PHI:NUM:_', '-COMP:T/fin', '!COMP:*', 'PHI:DET:_', '-SPEC:V', 'COMP:v', '!PROBE:V', 'INF', 'COMP:V', '!SPEC:*', 'SPEC:*', '-COMP:C/fin', 'PHI:PER:_', 'LANG:FI', '-SPEC:N', 'VA/inf', 'ARG', 'LF:VA', '-SPEC:T/fin', 'VAL'}
MA/ssa          {'PHI:NUM:_', '-SPEC:*', 'PHI:DET:_', 'PF:massa', 'MA/inf', 'COMP:v', '-SPEC:Neg/fin', 'adjoinable', 'LF:in_doing', 'COMP:V', '-VAL', 'PHI:PER:_', 'LANG:FI', '-SPEC:N', 'ARG', 'ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'TAIL:V'}
MA/tta          {'PHI:NUM:_', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PF:matta', '-VAL', '-SPEC:FORCE', '-SPEC:Neg/fin', 'adjoinable', 'TAIL:T', 'LANG:FI', '-SPEC:N', 'ARG', 'ADV', 'LF:without_doing', 'MA/inf', 'SPEC:*'}
MA/lla          {'PHI:NUM:_', 'PHI:DET:_', 'MA/inf', 'COMP:v', '-SPEC:Neg/fin', 'LF:by_doing', 'adjoinable', 'TAIL:T', 'COMP:V', '-VAL', 'SPEC:*', 'PF:malla', 'PHI:PER:_', 'LANG:FI', '-SPEC:N', 'ARG', 'ADV', '-SPEC:T/fin', '-SPEC:FORCE'}
MA/inf          {'PHI:NUM:_', 'PHI:DET:_', 'MA/inf', 'COMP:v', '-SPEC:Neg/fin', 'adjoinable', 'COMP:V', '-VAL', 'LF:to_do', 'PF:maan', 'SPEC:*', 'PHI:PER:_', 'LANG:FI', '-SPEC:N', 'ARG', 'ADV', '-SPEC:T/fin', '-SPEC:FORCE', 'TAIL:V'}
E/inf           {'-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', 'PF:en', 'LF:by', 'LANG:FI', 'adjoinable', '-SPEC:N', 'ADV', '-VAL', '-SPEC:FORCE', 'SPEC:*'}
BE-             {'LF:BE', '!COMP:*', '-COMP:T/fin', '-COMP:v', 'PF:BE', '-COMP:V', 'COMP:P', 'ASP', 'SPEC:ADV', '-VAL', 'V', 'SPEC:P', '-ARG', 'COMP:T/prt', 'SPEC:TO/inf', 'COPULA', 'SPEC:D', 'LANG:FI', '-COMP:N', '-SPEC:T/fin', '-SPEC:FORCE'}
D               {'LF:D', 'PF:D', '-COMP:T/fin', '!COMP:*', '-SPEC:V', '!PROBE:N', '-COMP:D', 'OP', '-SPEC:Neg/fin', 'COMP:N', 'adjoinable', '-SPEC:C', 'D', '-ARG', '-SPEC:P', '-COMP:uR', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:D', 'LANG:FI', '-SPEC:N', '-SPEC:T/fin'}
P               {'PHI:NUM:_', '!COMP:*', '-COMP:T/fin', '-COMP:ADV', '-SPEC:iWH', '-SPEC:V', '-COMP:uWH', 'PHI:DET:_', 'LF:P', '-SPEC:Neg/fin', 'adjoinable', 'COMP:D', '-SPEC:C', '-VAL', '-SPEC:ADV', 'SPEC:*', '-SPEC:v', 'P', '-SPEC:P', 'PHI:PER:_', '-SPEC:INF', '-SPEC:FORCE', 'LANG:FI', '-SPEC:N', '-COMP:N', 'ARG', '-SPEC:iR', '-SPEC:C/fin', '-SPEC:T/fin', 'PF:P'}
pro             ['LANG:FI']
pro-            {'N', 'COMP:R/D', 'COMP:uR', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-SPEC:V', '-COMP:D', '-SPEC:R', 'COMP:R', '-COMP:v', '-COMP:WH', '-COMP:V', 'COMP:P', '-SPEC:ADV', '-COMP:A', 'SPEC:A', '-COMP:C/fin', '-SPEC:P', 'LF:pro', '-COMP:AUX', '-SPEC:INF', 'PF:(pro)', 'PHI', 'LANG:FI', '-SPEC:N', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:FORCE'}
cl              {'RIGHT:PRG', 'LANG:FI', 'inflectional', 'LEFT:T/fin', 'CL', 'LEFT:D,CL', 'RIGHT:ARE/inf'}
inc             {'INCORPORATED', 'LANG:FI', 'inflectional'}
sg              {'PHI:NUM:SG', 'LANG:FI', 'inflectional'}
pl              {'PHI:NUM:PL', 'LANG:FI', 'inflectional'}
1p              {'PHI:PER:1', 'LANG:FI', 'inflectional'}
2p              {'PHI:PER:2', 'LANG:FI', 'inflectional'}
3p              {'PHI:PER:3', 'LANG:FI', 'inflectional'}
def             {'PHI:DET:DEF', 'LANG:FI', 'inflectional'}
indef           {'PHI:DET:INDEF', 'LANG:FI', 'inflectional'}
hum             {'LANG:FI', 'inflectional', 'PHI:HUM:HUM'}
nonhum          {'LANG:FI', 'inflectional', 'PHI:HUM:NONHUM'}
m               {'LANG:FI', 'PHI:GEN:M', 'inflectional'}
f               {'PHI:GEN:F', 'LANG:FI', 'inflectional'}
nom             {'LANG:FI', 'TAIL:FIN,!COMP:*,VAL', 'inflectional'}
acc             {'TAIL:v', 'LANG:FI', 'inflectional'}
dat             {'LANG:FI', 'inflectional', 'TAIL:!COMP:*,v'}
uC/op           {'uC/op', 'LANG:FI', 'inflectional'}
wh              {'OP:_', 'OP:WH', 'LANG:FI', 'inflectional'}
wh_             {'OP:_', 'FORCE:OP:WH', 'LANG:FI', 'inflectional', '!SPEC:OP:_', 'OP'}
top             {'OP:TOP', 'LANG:FI', 'inflectional'}
foc             {'LANG:FI', 'inflectional', 'OP:FOC'}
C/op            {'LANG:FI', 'inflectional', 'OP:C/OP'}
rel             {'adjoinable', 'LANG:FI', '-COMP:C/fin', 'inflectional', 'OP:REL'}
Q               {'OP:Q', 'LANG:FI', 'inflectional', 'OP:WH', 'OP'}
