ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'-SPEC:*', '-SPEC:Neg/fin', '-ARG', '-SPEC:P', '-SPEC:v', '-SPEC:iR', 'LANG:IT', '-SPEC:INF', 'COMP:D', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C', '-SPEC:N', '-COMP:N', '!COMP:*', '-SPEC:iWH', '-COMP:uWH', 'P', '-COMP:ADV', 'adjoinable', 'COMP:ARE/inf', '-SPEC:V', '-SPEC:FORCE', '-VAL', 'LF:to', 'PF:a'}
a_D             {'LF:D', '-SPEC:Neg/fin', '-SPEC:P', 'D', '-ARG', '-COMP:D', 'LANG:EN', '-SPEC:INF', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', '-SPEC:N', '-COMP:uR', '-SPEC:D', '!PROBE:N', 'OP', 'PF:D', 'COMP:N', 'adjoinable', '-SPEC:V', '!COMP:*'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'SPEC:TO/inf', 'SPEC:ADV', 'V', 'LANG:EN', 'PHI:NUM:_', 'PF:admire', '-COMP:P', 'PHI:GEN:_', 'COMP:D', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', '!COMP:*', 'COMP:P', 'LF:admire', 'PHI:DET:_', 'PHI:PER:_', 'CLASS:TR', '-COMP:Neg', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-SPEC:Neg', '-COMP:V'}
admire*         ['LANG:EN']
T/fin*          {'CAT:T/fin', "PF:T/fin'", '!SPEC:*', 'LANG:EN', 'NO_NUMBER', 'NO_DET', 'LF:T', '-VAL'}
v*              {'NO_NUMBER', 'NO_DET', 'PF:v', 'CAT:v', 'LANG:EN', '-VAL', 'LF:v'}
admire**        ['LANG:EN']
T/fin**         {"PF:T/fin''", 'CAT:T/fin', 'NO_PERSON', '!SPEC:*', 'LANG:EN', 'NO_NUMBER', 'NO_DET', 'PHI:PER:3', 'LF:T', '-VAL'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'SPEC:TO/inf', 'SPEC:ADV', 'V', '-COMP:V', 'PHI:NUM:_', 'LANG:IT', 'COMP:D', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'LF:admire', 'PF:adora', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:FORCE', 'ASP', 'PHI:GEN:_', 'ARG', '-VAL', 'SPEC:P'}
antaa           ['LANG:FI']
anta-           {'SPEC:TO/inf', 'SPEC:ADV', 'LF:give', 'SPEC:D', 'V', 'PHI:NUM:_', 'LANG:FI', 'COMP:D', '-SPEC:T/fin', '-COMP:T/fin', '+SEM:directional', '-COMP:N', '-COMP:v', '!COMP:*', '-COMP:FIN', 'COMP:P', 'PHI:DET:_', 'PF:antaa', 'PHI:PER:_', 'ASP:BOUNDED', '-SPEC:FORCE', 'CLASS:DITR', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'SPEC:TO/inf', 'SPEC:ADV', '-VAL', 'SPEC:D', 'V', 'PF:ask', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:D', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:FORCE', 'SEM:internal', 'ASP', 'SPEC:P', 'ARG', 'LF:ask', '-COMP:V'}
ask-            {'SPEC:TO/inf', 'SPEC:ADV', '-VAL', 'SPEC:D', 'V', 'PF:ask', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:D', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:FORCE', 'SEM:internal', 'ASP', 'SPEC:P', 'ARG', 'LF:ask', '-COMP:V'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', 'LF:key', '-SEM:directional', '-SPEC:uWH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'PF:avain', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SEM:directional', '-SPEC:uWH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', 'PF:auto', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'LF:car', 'COMP:uR', '-COMP:V'}
city            {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', 'LANG:EN', '-SPEC:uWH', 'LF:city', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', 'PF:city', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
che             ['LANG:IT']
che-            {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:INF', 'PHI_N', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', 'PF:che', 'LF:who', 'N', '-COMP:T/fin', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:*', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
chiamato        ['LANG:IT']
chiamata-       {'SPEC:TO/inf', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'LANG:IT', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'LF:called', 'COMP:P', 'PHI:DET:_', 'PF:chiamato', 'PHI:PER:_', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
danno           {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', 'PF:danno', 'LANG:IT', '-SPEC:INF', 'LF:damage', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'SPEC:TO/inf', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'LANG:IT', 'LF:detest', 'PF:detest', 'PHI:GEN:_', 'COMP:D', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', 'COMP:ARE/inf', '-SPEC:FORCE', 'SEM:internal', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
devono          ['LANG:EN']
deva-           {'SPEC:TO/inf', 'SPEC:ADV', 'SPEC:D', 'V', '-COMP:V', 'PHI:NUM:_', 'LANG:IT', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', 'COMP:ARE/inf', '-ASP', '-SPEC:FORCE', 'SEM:internal', 'SPEC:P', 'ARG', '-VAL', 'LF:must', 'PF:deva'}
di              {'-SPEC:Neg/fin', '-SPEC:P', '-SPEC:v', '-adjoinable', '-SPEC:iR', '-SPEC:INF', 'PHI:NUM:_', 'SPEC:*', 'LANG:FI', 'COMP:D', '-SPEC:C/fin', 'LF:of', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:C', '-SPEC:N', '-COMP:N', '!COMP:*', '-SPEC:iWH', '-COMP:uWH', 'PHI:DET:_', 'P', 'PHI:PER:_', '-COMP:ADV', 'PF:di', '-SPEC:V', '-SPEC:FORCE', 'ARG', '-VAL'}
does            {'-SPEC:v', 'PF:does', 'COMP:Neg', 'SPEC:*', 'COMP:D', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:T/fin', '!COMP:*', 'T', 'PHI:GEN:F', 'PHI:GEN:M', 'COMP:T/prt', '-COMP:INF', 'PHI:GEN:_', 'ARG', '-SPEC:Neg', 'SPEC:TO/inf', 'SPEC:D', 'VAL', 'LANG:EN', 'COMP:V', 'PHI:NUM:_', 'FIN', 'T/fin', 'PHI:PER:3', 'LF:does', '!PROBE:V', '-SPEC:N', 'PHI:DET:_', 'PHI:NUM:SG', 'COMP:v', 'PHI:PER:_', '-SPEC:TO/inf', '-SPEC:V', '-SPEC:FORCE', '!SPEC:D'}
does_C          ['LANG:EN']
does-           {'-SPEC:v', 'PF:does', 'COMP:Neg', 'SPEC:*', 'COMP:D', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:T/fin', '!COMP:*', 'T', 'PHI:GEN:F', 'PHI:GEN:M', 'COMP:T/prt', '-COMP:INF', 'PHI:GEN:_', 'ARG', '-SPEC:Neg', 'SPEC:TO/inf', 'SPEC:D', 'VAL', 'LANG:EN', 'COMP:V', 'PHI:NUM:_', 'FIN', 'T/fin', 'PHI:PER:3', 'LF:does', '!PROBE:V', '-SPEC:N', 'PHI:DET:_', 'PHI:NUM:SG', 'COMP:v', 'PHI:PER:_', '-SPEC:TO/inf', '-SPEC:V', '-SPEC:FORCE', '!SPEC:D'}
dorme           ['LANG:IT']
dorme-          {'SPEC:TO/inf', 'PF:dorme', 'SPEC:ADV', 'V', '-COMP:V', 'LANG:EN', 'PHI:NUM:_', 'LF:sleep', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', '!SPEC:D', '-SPEC:FORCE', 'ASP', 'PHI:GEN:_', 'ARG', '-VAL', 'SPEC:P'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'VAL', '!SPEC:*', 'POL:NEG', 'PHI:NUM:_', 'SPEC:*', 'FIN', 'LANG:FI', '-SPEC:T', 'LF:neg', '-SPEC:T/fin', 'Neg/fin', 'PHI:DET:_', 'PF:ei', 'PHI:PER:_', 'NEG', '%SPEC:INF', 'COMP:T/prt', '!COMP:*', 'SEM:internal', 'ARG', '!COMP:T'}
e-              {'VAL', '!SPEC:*', 'POL:NEG', 'PHI:NUM:_', 'SPEC:*', 'FIN', 'LANG:FI', '-SPEC:T', 'LF:neg', '-SPEC:T/fin', 'Neg/fin', 'PHI:DET:_', 'PF:ei', 'PHI:PER:_', 'NEG', '%SPEC:INF', 'COMP:T/prt', '!COMP:*', 'SEM:internal', 'ARG', '!COMP:T'}
elaa            ['LANG:FI']
ela-            {'SPEC:TO/inf', 'SPEC:ADV', 'PF:elaa', 'SPEC:D', 'V', '-COMP:D', 'PHI:NUM:_', 'LF:live', 'LANG:FI', '-SPEC:T/fin', '-COMP:T/fin', 'CLASS:INTR', '-COMP:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
etsii           ['LANG:FI']
etsi-           {'SPEC:TO/inf', 'SPEC:ADV', '-VAL', 'V', '!COMP:D', 'PHI:NUM:_', 'LANG:FI', 'COMP:D', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'PF:etsi', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', 'LF:search', '-COMP:V'}
etta            {'-SPEC:*', 'LF:that', '-ARG', 'PF:etta', 'FORCE', 'COMP:T/fin', 'COMP:C/fin', '!PROBE:T/fin', 'FIN', 'LANG:FI', '!COMP:*', '-VAL'}
flow'           {'SPEC:TO/inf', 'SPEC:ADV', 'SPEC:D', 'V', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PF:flow', 'PHI:PER:_', 'LF:flow', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
from            {'-SPEC:Neg/fin', '-SPEC:*', '-SPEC:P', '-SPEC:v', 'LANG:EN', '-SPEC:iR', '-SPEC:INF', 'PHI:NUM:_', 'COMP:D', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:T/fin', 'LF:from', 'TAIL:V,+SEM:directional', '-COMP:N', '-SPEC:C', '-float', '-SPEC:N', '-SPEC:iWH', '-COMP:uWH', '!COMP:*', 'PHI:DET:_', 'PF:from', 'P', 'PHI:PER:_', '-COMP:ADV', 'adjoinable', '-SPEC:V', '-SPEC:FORCE', 'PHI:GEN:_', 'ARG', '-VAL'}
gave            ['LANG:EN']
give-           {'SPEC:TO/inf', 'SPEC:ADV', 'LF:give', 'SPEC:D', 'V', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:D', '-SPEC:T/fin', '-COMP:T/fin', '+SEM:directional', '-COMP:N', '-COMP:v', '!COMP:*', '-COMP:FIN', 'COMP:P', 'PF:give', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:FORCE', 'CLASS:DITR', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SEM:directional', '-SPEC:uWH', 'LANG:IT', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', 'LF:Giuseppe', 'PF:Giuseppe', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'SPEC:TO/inf', 'SPEC:ADV', '-SPEC:*', 'V', 'PHI:NUM:_', '-COMP:P', 'LANG:FI', 'COMP:D', '-SPEC:T/fin', 'LF:want', 'COMP:A/inf', '-COMP:T/fin', '-COMP:N', '-COMP:v', '!COMP:*', 'COMP:P', 'PF:haluaa', 'PHI:DET:_', 'PHI:PER:_', 'CLASS:TR', 'ASP:BOUNDED', '-SPEC:FORCE', 'SEM:internal', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
hairitsee       ['LANG:FI']
hairitse-       {'SPEC:TO/inf', 'SPEC:ADV', 'SPEC:D', 'V', '!COMP:D', 'PHI:NUM:_', 'ASP', 'LANG:FI', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'PF:hairitsee', '-COMP:FIN', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:FORCE', 'LF:disturb', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'SPEC:TO/inf', 'SPEC:ADV', 'PF:ha', 'SPEC:D', 'V', 'COMP:T', 'LANG:IT', 'PHI:NUM:_', 'SPEC:*', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', 'LF:have', '-ASP', '-SPEC:FORCE', 'SEM:internal', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'SPEC:TO/inf', 'PF:havia', 'SPEC:ADV', 'SPEC:D', 'V', '-COMP:D', 'PHI:NUM:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:T/fin', 'LF:disappear', 'CLASS:INTR', '-COMP:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'SPEC:TO/inf', 'SPEC:ADV', 'V', '!COMP:D', 'PHI:NUM:_', '-COMP:P', 'LANG:FI', 'COMP:D', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', '!COMP:*', '-COMP:FIN', 'COMP:P', 'LF:admire', 'PF:ihaile-', 'PHI:DET:_', 'PHI:PER:_', 'CLASS:TR', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
il              {'-SPEC:Neg/fin', 'LF:the', 'D', '-SPEC:P', '-ARG', '-COMP:D', 'LANG:IT', '-SPEC:INF', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', '-SPEC:N', '-COMP:uR', '-SPEC:D', '!PROBE:N', 'OP', 'COMP:N', 'adjoinable', 'PF:il', '-SPEC:V', '!COMP:*'}
i               {'-SPEC:Neg/fin', 'LF:the', 'D', '-SPEC:P', '-ARG', '-COMP:D', 'LANG:IT', '-SPEC:INF', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', '-SPEC:N', '-COMP:uR', '-SPEC:D', '!PROBE:N', 'OP', 'COMP:N', 'adjoinable', 'PF:il', '-SPEC:V', '!COMP:*'}
in              {'-SPEC:Neg/fin', '-SPEC:P', '-SPEC:v', '-SPEC:iR', 'LANG:IT', '-SPEC:INF', 'PHI:NUM:_', 'COMP:D', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C', '-SPEC:N', '-COMP:N', '!COMP:*', '-SPEC:iWH', '-COMP:uWH', 'PHI:DET:_', 'P', 'PHI:PER:_', '-COMP:ADV', 'adjoinable', 'LF:in', '-SPEC:V', 'PF:in', '-SPEC:FORCE', 'PHI:GEN:_', 'ARG', '-VAL'}
infermieri      {'-COMP:A', 'LF:nurses', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:ADV', 'PF:infermieri', '-SPEC:T/fin', 'COMP:R', 'N', '-COMP:T/fin', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
is              ['LANG:EN']
be-             {'SPEC:TO/inf', 'SPEC:ADV', '-ARG', 'SPEC:D', 'V', 'PF:be', '-COMP:TO/inf', 'LANG:EN', 'LF:be', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', '-SPEC:FORCE', 'COPULA', '!COMP:*', 'ASP', 'SPEC:P', '-VAL', '-COMP:V'}
istuuko         ['LANG:FI']
istuu-          {'SPEC:TO/inf', 'SPEC:ADV', 'SPEC:D', 'PF:istuu', 'LF:sit', 'V', '-COMP:D', 'PHI:NUM:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:T/fin', 'CLASS:INTR', '-COMP:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
John            ['LANG:EN']
John-           {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-adjoinable', '-SEM:directional', 'LANG:EN', '-SPEC:uWH', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:ADV', 'LF:John', '-SPEC:T/fin', 'COMP:R', 'N', '-COMP:T/fin', 'SPEC:A', '-COMP:N', 'PF:John', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'PF:Jukka', '-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SEM:directional', '-SPEC:uWH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'LF:Jukka', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
juosten         ['LANG:FI']
juokse-         {'SPEC:TO/inf', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'LANG:FI', '-SPEC:T/fin', 'LF:run', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', 'PF:juokse-', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
istuu           ['LANG:FI']
istu-           {'SPEC:TO/inf', 'SPEC:ADV', 'PF:istuu', 'LF:sit', 'V', 'PHI:NUM:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
kaksi           {'NUM', 'COMP:n', 'PHI:DET:_', 'PHI:NUM:SG', 'COMP:N', 'PHI:PER:_', 'PF:kaksi', 'PHI:NUM:_', 'TAIL:ARG,VAL,FIN', 'SPEC:*', 'LANG:FI', 'LF:two', 'ARG', '-VAL'}
kaksi           {'NUM', 'TAIL:*POL:NEG', 'COMP:n', 'LANG:EN', 'COMP:N', 'PF:kaksi', 'SPEC:*', 'LF:two', 'TAIL:ARG,ASP:BOUNDED'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'NUM', 'SPEC:*', 'LANG:FI', 'COMP:n', 'LF:two', 'COMP:N', 'PF:kaksi'}
kaupunkia       ['LANG:EN']
kaupunki        {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', 'LF:city', '-SPEC:INF', '-COMP:P', 'LANG:FI', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', 'PF:kaupunki', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'SPEC:TO/inf', '!COMP:A/inf', 'LF:order', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PF:kaske', 'PHI:PER:_', 'SEM:external', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'PF:kello', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'LF:watch', 'COMP:uR', '-COMP:V'}
kello0-         {'PF:kello', 'LANG:FI', '0', '2SPEC', 'SPEC:D', 'LF:watch'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', 'LF:key', 'LANG:EN', '-SPEC:uWH', '-SPEC:INF', '-SPEC:C/fin', 'PF:key', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', 'PF:kirja', '-COMP:D', '-SEM:directional', '-SPEC:uWH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'LF:book', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
kohti           {'PF:kohti', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:v', '-SPEC:iR', 'LF:towards', '-SPEC:INF', 'PHI:NUM:_', 'SPEC:*', 'LANG:FI', 'COMP:D', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C', '-SPEC:N', '-COMP:N', '!COMP:*', 'TAIL:V', '-SPEC:iWH', '-COMP:uWH', 'PHI:DET:_', 'P', 'PHI:PER:_', '-COMP:ADV', 'adjoinable', '-SPEC:V', '-SPEC:FORCE', 'ARG', '-VAL'}
koko            {'PF:koko', '-SPEC:Neg/fin', '-SPEC:P', 'D', '-ARG', '-COMP:D', '-SPEC:INF', 'LANG:FI', '-SPEC:MA/lla', 'TAIL:T', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', '-SPEC:N', '-COMP:uR', '-SPEC:D', '!PROBE:N', 'OP', 'COMP:N', 'adjoinable', '-SPEC:V', '!COMP:*', 'LF:all'}
kuka            ['LANG:FI']
kuka-           {'-COMP:A', 'PF:kuka', 'PHI', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'LF:who', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
kuorsaa-        {'SPEC:TO/inf', 'SPEC:ADV', 'V', '-COMP:D', 'PHI:NUM:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'PF:kuorsaa', 'PHI:DET:_', '-COMP:WH', 'SPEC:P', 'PHI:PER:_', '-SPEC:FORCE', 'ASP', 'LF:snore', 'ARG', '-VAL', '-COMP:V'}
kuorsaamalla    ['LANG:FI']
lahella         {'-SPEC:Neg/fin', '-COMP:C/fin', 'LF:near', '!SPEC:*', '-SPEC:v', '-COMP:FORCE', '-SPEC:INF', 'SPEC:*', 'LANG:FI', 'PF:lahella', 'COMP:D', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-SPEC:iWH', '-COMP:uWH', '-SPEC:FORCE', 'adjoinable', 'ARG', '-SPEC:P', 'VAL', '-SPEC:iR', 'COMP:V', 'PHI:NUM:_', '-SPEC:ADV', '-SPEC:C', '-SPEC:N', 'PHI:DET:_', 'P', 'COMP:v', 'PHI:PER:_', '-COMP:ADV', '-SPEC:V', '!COMP:*', 'INF', '!SPEC:D'}
lahella         {'-SPEC:Neg/fin', 'LF:near', '-SPEC:P', '!COMP:D', '-SPEC:v', '-SPEC:iR', '-SPEC:INF', 'PHI:NUM:_', 'SPEC:*', 'LANG:FI', 'PF:lahella', 'COMP:D', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C', '-SPEC:N', '-COMP:N', '-SPEC:iWH', '-COMP:uWH', '-SPEC:FORCE', 'PHI:DET:_', 'P', 'PHI:PER:_', '-COMP:ADV', 'adjoinable', '-SPEC:V', '!COMP:*', 'ARG', '-VAL'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'SPEC:TO/inf', 'SPEC:ADV', 'SPEC:D', 'V', '-COMP:D', 'PHI:NUM:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:T/fin', 'CLASS:INTR', '-COMP:N', '-COMP:v', 'LF:leave', 'COMP:P', 'COMP:PP', 'PHI:DET:_', 'PHI:PER:_', 'PF:lahtea', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
lavano          ['LANG:IT']
lava-           {'SPEC:TO/inf', 'LF:wash', 'SPEC:ADV', 'PF:lava', 'V', '-COMP:V', 'PHI:NUM:_', 'LANG:IT', 'COMP:D', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_', 'PHI:PER:_', '!COMP:*', 'ASP', 'PHI:GEN:_', 'ARG', '-VAL', 'SPEC:P'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'LF:D', '-SPEC:Neg/fin', '-SPEC:P', 'D', '-ARG', '-COMP:D', 'LANG:IT', '-SPEC:INF', '-SPEC:MA/lla', 'PF:le', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', '-SPEC:N', '-COMP:uR', '-SPEC:D', '!PROBE:N', 'OP', 'COMP:N', 'adjoinable', '-SPEC:V', '!COMP:*'}
leaves          ['LANG:EN']
leave           {'SPEC:TO/inf', 'PF:leave', 'SPEC:ADV', 'V', '-COMP:V', 'LANG:EN', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'LF:leave', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', '!SPEC:D', '-SPEC:FORCE', 'ASP', 'PHI:GEN:_', 'ARG', '-VAL', 'SPEC:P'}
leave-          {'SPEC:TO/inf', 'PF:leave', 'SPEC:ADV', 'V', 'LANG:EN', 'PHI:NUM:_', 'ASP', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'LF:leave', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:FORCE', '!SPEC:D', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
like-           {'SPEC:TO/inf', 'SPEC:ADV', 'V', '!COMP:D', '-COMP:V', 'LANG:EN', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:T/fin', 'LF:like', '-COMP:N', 'PF:like', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:FORCE', 'ASP', 'PHI:GEN:_', 'ARG', '-VAL', 'SPEC:P'}
likes           ['LANG:EN']
like            {'SPEC:TO/inf', 'SPEC:ADV', 'V', '!COMP:D', '-COMP:V', 'LANG:EN', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:T/fin', 'LF:like', '-COMP:N', 'PF:like', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:FORCE', 'ASP', 'PHI:GEN:_', 'ARG', '-VAL', 'SPEC:P'}
little          ['LANG:EN']
little-         {'2SPEC', '0', 'SPEC:D', 'LF:little', 'LANG:EN', 'PF:little-'}
lle             {'-SPEC:*', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:v', '-SPEC:iR', '-SPEC:INF', 'PHI:NUM:_', 'LANG:FI', 'COMP:D', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:T/fin', '+SEM:directional', '-SPEC:C', 'TAIL:V,+SEM:directional', '-COMP:N', '-SPEC:N', '!COMP:*', '-SPEC:iWH', '-COMP:uWH', 'PHI:DET:_', 'P', 'PHI:PER:_', '-COMP:ADV', 'adjoinable', 'LF:for', '-SPEC:V', '-SPEC:FORCE', 'PF:P(lle)', 'ARG', '-VAL'}
lla             {'-SPEC:Neg/fin', '-SPEC:P', 'LF:by', '-SPEC:v', '-SPEC:iR', '-SPEC:INF', 'PHI:NUM:_', 'SPEC:*', 'LANG:FI', 'COMP:D', '-SPEC:C/fin', 'TAIL:T', 'PF:P(lla)', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:C', 'TAIL:*V', '-COMP:N', '-SPEC:N', '!COMP:*', '-SPEC:iWH', '-COMP:uWH', 'PHI:DET:_', 'P', 'PHI:PER:_', '-COMP:ADV', 'adjoinable', '-SPEC:V', '-SPEC:FORCE', 'ARG', '-VAL'}
Luisa           ['LANG:IT']
Luisa-          {'LF:Luisa', '-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', 'PF:Luisa', '-SEM:directional', '-SPEC:uWH', 'LANG:IT', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
lukemalla       ['LANG:FI']
luke-           {'SPEC:TO/inf', 'SPEC:ADV', 'V', 'LF:read', 'PF:luke', 'PHI:NUM:_', '-COMP:P', 'LANG:FI', 'COMP:D', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', '!COMP:*', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', 'CLASS:TR', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'SPEC:TO/inf', 'SPEC:ADV', 'V', '!COMP:D', 'LF:find', 'PHI:NUM:_', '-COMP:P', 'LANG:FI', 'COMP:D', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', '!COMP:*', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_', 'PHI:PER:_', 'CLASS:TR', 'ASP:BOUNDED', 'PF:loyta-', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
Mary            ['LANG:EN']
Mary-           {'-COMP:A', 'LF:Mary', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-adjoinable', '-SEM:directional', 'LANG:EN', '-SPEC:uWH', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', 'PF:Mary', '-COMP:V'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-adjoinable', '-SEM:directional', '-SPEC:uWH', '-SPEC:INF', 'LANG:FI', 'PF:Merja', '-SPEC:C/fin', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', 'LF:Merja', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'-SPEC:N', 'ADV', '-SPEC:Neg/fin', 'LF:by', '-SPEC:T/fin', 'COMP:v', 'MA/inf', 'PF:malla', 'adjoinable', 'SPEC:*', 'LANG:FI', '-SPEC:FORCE', 'TAIL:T'}
meren           ['LANG:FI']
mere-           {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', 'PF:meri', 'N', '-COMP:T/fin', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', 'LF:ocean', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
mistake         {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', 'LANG:EN', '-SPEC:uWH', '-SPEC:INF', '-SPEC:C/fin', 'PF:mistake', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'LF:mistake', 'COMP:uR', '-COMP:V'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', 'LF:what', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'PF:mika-', 'COMP:uR', '-COMP:V'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'SPEC:TO/inf', 'SPEC:ADV', 'V', 'PHI:NUM:_', '-COMP:P', 'PF:move', 'PHI:GEN:_', 'COMP:D', '-SPEC:T/fin', '-COMP:T/fin', '+SEM:directional', '-COMP:N', '-COMP:v', '!COMP:*', 'COMP:P', 'PHI:DET:_', 'LF:move', 'PHI:PER:_', 'CLASS:TR', 'LANGN:EN', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
mukavasti       ['LANG:EN']
mukava-         {'LF:comfortably', 'LANG:FI', '0', '2SPEC', 'SPEC:D', 'PF:mukavasti'}
must            {'SPEC:TO/inf', 'SPEC:D', 'VAL', 'PF:must', '-SPEC:v', 'LANG:EN', 'COMP:V', 'PHI:NUM:_', 'COMP:Neg', 'FIN', 'T/fin', 'SPEC:*', 'COMP:D', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:T/fin', '!PROBE:V', '-SPEC:Neg', '-SPEC:N', '!COMP:*', 'MODAL', 'PHI:DET:_', 'T', 'COMP:v', 'PHI:PER:_', '-SPEC:TO/inf', '-SPEC:V', 'COMP:T/prt', '-SPEC:FORCE', '-COMP:INF', '!SPEC:D', 'PHI:GEN:_', 'ARG', 'LF:must'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'SPEC:TO/inf', 'SPEC:ADV', 'V', 'PHI:NUM:_', '-COMP:P', 'LANG:FI', 'COMP:D', 'LF:sell', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', '!COMP:*', 'COMP:P', 'PHI:DET:_', 'SPEC:P', 'PHI:PER:_', 'CLASS:TR', 'ASP:BOUNDED', '-SPEC:FORCE', 'ASP', 'PF:myy', 'ARG', '-VAL', '-COMP:V'}
naki            ['LANG:FI']
nake-           {'SPEC:TO/inf', 'SPEC:ADV', 'V', 'PHI:NUM:_', '-COMP:P', 'LANG:FI', 'COMP:D', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:MA/inf', '-COMP:v', '!COMP:*', 'COMP:P', '-COMP:ESSA/inf', 'PHI:DET:_', 'LF:see', 'PHI:PER:_', 'CLASS:TR', 'ASP:BOUNDED', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', 'PF:nake', '-COMP:V'}
nayttaa         ['LANG:FI']
naytta-         {'SPEC:TO/inf', 'SPEC:ADV', 'LF:seem', '-ARG', 'V', 'VAL', '!COMP:VA/inf', 'ASP', 'LANG:FI', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'PF:naytta', 'COMP:P', '-SPEC:FORCE', 'SEM:internal', '!SPEC:D', 'SPEC:P', '-COMP:V'}
ndo             {'-COMP:C/fin', 'LF:ing', 'VAL', 'PRG', '-COMP:T/fin', '-COMP:FORCE', 'LANG:EN', 'COMP:v', 'COMP:V', '-SPEC:V', '!COMP:*', 'INF', 'PF:PRG', '-SPEC:T/fin', '?ARG'}
ne              {'PHI:NUM:PL', '-SPEC:Neg/fin', '-SPEC:P', 'D', '-ARG', '-COMP:D', '-SPEC:INF', 'LANG:FI', 'PHI:PER:3', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', 'LF:those', '-SPEC:N', '-SPEC:D', '-COMP:uR', '!PROBE:N', 'PF:ne', 'OP', 'COMP:N', 'adjoinable', '-SPEC:V', '!COMP:*'}
niiden          ['LANG:EN']
nen             {'-SPEC:D', 'LF:ing', 'A', 'COMP:0', 'adjoinable', 'TAIL:D', 'SPEC:*', 'LANG:FI', '-SPEC:A', 'PF:a'}
not             {'-COMP:C', '-COMP:FIN', 'PHI:DET:_', 'Neg', '-COMP:D', 'POL:NEG', 'LANG:EN', 'PHI:PER:_', 'PHI:NUM:_', 'LF:not', 'SPEC:*', 'PF:not', '!COMP:*', '-SPEC:T/fin', 'PHI:GEN:_', 'ARG', '-VAL'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'SPEC:TO/inf', 'SPEC:ADV', '-VAL', 'SPEC:D', 'V', '-COMP:D', 'PHI:NUM:_', 'PF:nukku', 'LANG:FI', 'LF:sleep', '-SPEC:T/fin', '-COMP:T/fin', 'CLASS:INTR', '-COMP:N', '-COMP:v', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_', 'PHI:PER:_', '-COMP:T', 'ASP', 'SPEC:P', 'ARG', '-COMP:Neg/fin', '-COMP:V'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', 'LF:possessions', 'PF:omaisuuden', '-SPEC:uWH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
operatoria      ['LANG:IT']
operatoria-     {'LF:operation', '2SPEC', '0', 'SPEC:D', 'PF:operatoria', 'LANG:IT'}
ostaa           ['LANG:FI']
osta-           {'SPEC:TO/inf', 'SPEC:ADV', 'V', 'PHI:NUM:_', '-COMP:P', 'PF:osta', 'LANG:FI', 'COMP:D', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', '!COMP:*', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', 'CLASS:TR', 'ASP:BOUNDED', '-SPEC:FORCE', 'LF:buy', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', '-SPEC:INF', 'LANG:FI', 'PF:paiva', '-SPEC:C/fin', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', 'LF:day', 'SEM:nonreferential', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
Pariisia        ['LANG:FI']
Pariisi-        {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', '-SPEC:INF', 'PF:Pariisi', 'LANG:FI', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', 'LF:Paris', '-COMP:V'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SEM:directional', '-SPEC:uWH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', 'PF:Pekka', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', 'LF:Pekka', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
pelottaa        ['LANG:FI']
pelkaa-         {'SPEC:TO/inf', 'SPEC:ADV', 'V', 'PHI:NUM:_', '-COMP:P', 'LANG:FI', 'COMP:D', '-SPEC:T/fin', '-COMP:T/fin', 'LF:fear', '-COMP:N', '-COMP:v', '!COMP:*', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', 'CLASS:TR', 'PF:pelkaa', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
persuades       ['LANG:EN']
persuade-       {'SPEC:TO/inf', 'PF:persuade', 'SPEC:ADV', 'V', '-COMP:V', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_', 'PHI:PER:_', 'LF:persuade', 'SEM:external', '!COMP:*', 'ASP', 'SPEC:P', 'ARG', '-VAL', 'COMP:TO/inf'}
peruuntui       ['LANG:FI']
peruuntu-       {'SPEC:TO/inf', 'SPEC:ADV', 'SPEC:D', 'V', '-COMP:V', 'PHI:NUM:_', 'LF:cancelled', 'LANG:FI', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', 'PF:peruuntui', '-SPEC:FORCE', 'ASP', 'ARG', '-VAL', 'SPEC:P'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'SPEC:TO/inf', 'LF:wash', 'SPEC:ADV', 'V', '-COMP:V', 'PHI:NUM:_', '-COMP:P', 'LANG:FI', 'COMP:D', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', '!COMP:*', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', 'CLASS:TR', 'ASP:BOUNDED', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', 'PF:pese'}
pese-           {'SPEC:TO/inf', 'LF:wash', 'SPEC:ADV', 'V', '-COMP:V', 'PHI:NUM:_', '-COMP:P', 'LANG:FI', 'COMP:D', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', '!COMP:*', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', 'CLASS:TR', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', 'PF:pese'}
petardi         {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:INF', 'LF:firecrackers', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', 'PF:petardi', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
pieni           ['LANG:FI']
pieni-          {'SPEC:D', 'LANG:FI', 'LF:small', 'PF:pieni-', '0', '2SPEC'}
poikien         ['LANG:FI']
poika-          {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', 'LF:boy', 'N', 'PF:poika', '-COMP:T/fin', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
puhelinta       ['LANG:FI']
puhelin-        {'LF:phone', 'LANG:FI', '0', '2SPEC', 'SPEC:D', 'PF:puhelin'}
punainen        ['LANG:FI']
puna-           {'LF:red', 'SPEC:D', 'LANG:FI', 'PF:puna-', '0', '2SPEC'}
presupposto     {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', 'LF:presupposition', 'PF:presupposto', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
primary         {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', 'COMP:uR', '-COMP:WH', '-SPEC:R', 'LF:nurse', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'PF:primary', '-COMP:V'}
promises        ['LANG:EN']
promise-        {'SPEC:TO/inf', 'SPEC:ADV', 'SPEC:D', 'V', 'LANG:EN', 'PHI:NUM:_', 'ASP', 'LF:promise', 'PHI:GEN:_', 'COMP:D', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:FORCE', 'SEM:internal', 'PF:promise', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
pyytaa          ['LANG:FI']
pyyta-          {'SPEC:TO/inf', 'SPEC:ADV', 'V', '-COMP:V', 'PHI:NUM:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', 'PF:pyyda', 'SEM:external', 'LF:ask', '-SPEC:FORCE', 'ASP', 'ARG', '-VAL', 'SPEC:P'}
raukesi         ['LANG:FI']
raukea-         {'SPEC:TO/inf', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'LANG:FI', 'LF:terminate', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', 'PF:raukea', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
red             ['LANG:EN']
red-            {'LF:red', '2SPEC', '0', 'SPEC:D', 'PF:red', 'LANG:EN'}
saavuttaa       ['LANG:FI']
saavutta-       {'SPEC:TO/inf', 'SPEC:ADV', 'V', '!COMP:D', 'LF:reach', 'PHI:NUM:_', '-COMP:P', 'LANG:FI', 'COMP:D', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', '!COMP:*', 'COMP:P', 'PHI:DET:_', 'PF:saavutta-', 'PHI:PER:_', 'CLASS:TR', 'ASP:BOUNDED', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'SPEC:TO/inf', 'SPEC:ADV', 'LF:say', 'SPEC:D', 'V', 'PHI:NUM:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:T/fin', 'COMP:FORCE', '-COMP:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'COMP:VA/inf', 'PHI:PER:_', 'PF:sano-', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
said            ['LANG:EN']
say'            {'SPEC:TO/inf', 'SPEC:ADV', 'LF:say', 'SPEC:D', 'V', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', '!COMP:FORCE', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PF:say', 'PHI:PER:_', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
say-            {'SPEC:TO/inf', 'SPEC:ADV', 'LF:say', 'SPEC:D', 'V', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', '!COMP:FORCE', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PF:say', 'PHI:PER:_', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
sala            ['LANG:IT']
sala-           {'-COMP:A', 'PF:sala', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', 'LF:room', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
scoppiati       ['LANG:IT']
scoppia-        {'LF:explode', 'SPEC:TO/inf', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'LANG:IT', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', 'PF:scoppia', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
sen             {'TAIL:*POL:NEG', '-SPEC:Neg/fin', '-SPEC:P', 'D', '-ARG', '-COMP:D', 'TAIL:PHI', '-SPEC:INF', 'LANG:FI', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', '-SPEC:N', '-COMP:uR', '-SPEC:D', '!PROBE:N', 'OP', 'COMP:N', 'adjoinable', '-SPEC:V', '!COMP:*', 'PF:sen', 'LF:the/that', 'TAIL:ASP'}
se'             {'-SPEC:Neg/fin', '-SPEC:P', 'D', '-ARG', '-COMP:D', '-SPEC:INF', 'LANG:FI', '-SPEC:MA/lla', 'PF:se', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', '-SPEC:N', '-COMP:uR', '-SPEC:D', '!PROBE:N', 'OP', 'COMP:N', 'adjoinable', '-SPEC:V', '!COMP:*', 'LF:the/that'}
sentenza        {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', 'PF:sentenza', '-SPEC:V', '-SPEC:FORCE', 'LF:sentence', 'COMP:uR', '-COMP:V'}
Seine           ['LANG:EN']
Seine-          {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', 'LANG:EN', '-SPEC:uWH', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'PF:Seine', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'LF:Seine', 'COMP:uR', '-COMP:V'}
sembrano        ['LANG:IT']
sembra-         {'SPEC:TO/inf', 'SPEC:ADV', 'LF:seem', '-ARG', 'SPEC:D', 'V', '-COMP:D', '!COMP:ARE/inf', '-COMP:V', 'LANG:EN', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'PF:sembra', '-ASP', '-SPEC:FORCE', '-VAL', 'SPEC:P'}
sleeps          ['LANG:EN']
sleep           {'SPEC:TO/inf', 'SPEC:ADV', 'SPEC:D', 'V', '-COMP:D', 'LANG:EN', 'PHI:NUM:_', 'LF:sleep', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:T/fin', 'CLASS:INTR', '-COMP:N', '-COMP:v', 'COMP:P', 'PF:sleep', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
sleep-          {'SPEC:TO/inf', 'SPEC:ADV', 'SPEC:D', 'V', '-COMP:D', 'LANG:EN', 'PHI:NUM:_', 'LF:sleep', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:T/fin', 'CLASS:INTR', '-COMP:N', '-COMP:v', 'COMP:P', 'PF:sleep', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-COMP:A', '!COMP:A/inf', 'LF:agreement', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', '-SPEC:INF', 'LANG:FI', 'PF:sopimus', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
spinge          ['LANG:IT']
spinge-         {'SPEC:TO/inf', 'LF:push', 'SPEC:ADV', 'V', '!COMP:D', '-COMP:V', 'PHI:NUM:_', 'LANG:IT', '-COMP:P', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'PF:spinge', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:FORCE', 'ASP', 'PHI:GEN:_', 'ARG', '-VAL', 'SPEC:P'}
ssa             {'-SPEC:Neg/fin', '-SPEC:P', '-SPEC:v', 'COMP:n/MA', '-SPEC:iR', '-SPEC:INF', 'PHI:NUM:_', 'SPEC:*', 'LANG:FI', 'COMP:D', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C', '-SPEC:N', '-COMP:N', '!COMP:*', 'TAIL:V', '-SPEC:iWH', '-COMP:uWH', 'PHI:DET:_', 'P', 'PHI:PER:_', '-COMP:ADV', 'PF:ssa', 'adjoinable', 'LF:in', '-SPEC:V', '-SPEC:FORCE', 'ARG', '-VAL'}
stanno          ['LANG:IT']
sta-            {'SPEC:TO/inf', 'SPEC:ADV', 'SPEC:D', 'V', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'PF:sta', 'COMP:P', 'COMP:PRG', 'PHI:DET:_', 'PHI:PER:_', 'LF:stay', '-ASP', '-SPEC:FORCE', 'SEM:internal', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
sti             {'-SPEC:N', 'ADV', '-SPEC:Neg/fin', '-ARG', 'LF:by', '-SPEC:FORCE', '-SPEC:T/fin', 'adjoinable', 'SPEC:*', 'LANG:FI', '!COMP:*', 'TAIL:T', 'PF:sti'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-COMP:A', '-COMP:C/fin', 'PF:sukka-', '-COMP:AUX', '-SPEC:P', '-COMP:D', 'LF:socks', '-SPEC:uWH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
talo            {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', 'LF:house', '-SPEC:FORCE', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', 'PF:talo', 'COMP:uR', '-COMP:V'}
tama            ['LANG:EN']
tama-           {'-COMP:A', 'PHI', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', '-SPEC:INF', 'PF:tama', 'LANG:FI', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', 'LF:this', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'SPEC:TO/inf', '!COMP:A/inf', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'SPEC:*', 'FIN', 'LANG:FI', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'MODAL', 'PHI:DET:_', 'PHI:PER:_', 'PF:taytyy', '-ASP', '-SPEC:FORCE', 'SPEC:P', 'ARG', '-VAL', 'LF:must', '-COMP:V'}
teki            ['LANG:FI']
teke-           {'SPEC:TO/inf', 'SPEC:ADV', 'V', '!COMP:D', 'PHI:NUM:_', '-COMP:P', 'LANG:FI', 'COMP:D', '-SPEC:T/fin', 'LF:make', '-COMP:T/fin', '-COMP:N', '-COMP:v', '!COMP:*', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_', 'PHI:PER:_', 'CLASS:TR', 'ASP:BOUNDED', 'PF:teke', '-COMP:A/inf', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
that            {'-SPEC:*', 'LF:that', '-ARG', 'LANG:EN', 'FORCE', 'COMP:T/fin', 'PF:that', 'COMP:C/fin', '!PROBE:T/fin', 'FIN', '!COMP:*', '-VAL'}
the             {'-SPEC:Neg/fin', 'LF:the', 'D', '-SPEC:P', '-ARG', '-COMP:D', 'LANG:EN', '-SPEC:INF', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', '-SPEC:N', '-COMP:uR', '-SPEC:D', '!PROBE:N', 'OP', 'COMP:N', 'PHI:DEF:DEF', 'adjoinable', 'PF:the', '-SPEC:V', '!COMP:*'}
to              {'-SPEC:*', '-SPEC:Neg/fin', 'PF:to', '-SPEC:P', '-SPEC:v', 'LANG:EN', '-SPEC:iR', '-SPEC:INF', 'PHI:NUM:_', 'COMP:D', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:T/fin', '+SEM:directional', '-SPEC:C', 'TAIL:V,+SEM:directional', '-COMP:N', '-SPEC:N', '-float', '!COMP:*', '-SPEC:iWH', '-COMP:uWH', 'PHI:DET:_', 'P', 'PHI:PER:_', '-COMP:ADV', 'adjoinable', '-SPEC:V', '-SPEC:FORCE', 'PHI:GEN:_', 'ARG', '-VAL', 'LF:to'}
to_inf          {'LF:TO/inf', '-COMP:C/fin', '-SPEC:v', '-COMP:FORCE', 'LANG:EN', 'COMP:V', '-SPEC:T/fin', '-COMP:T/fin', 'PF:TO/inf', 'COMP:v', 'TO/inf', 'adjoinable', '-SPEC:V', '!COMP:*', 'INF', '?ARG', '-VAL'}
towards         {'-SPEC:Neg/fin', '-SPEC:*', '-SPEC:P', '-SPEC:v', 'LANG:EN', '-SPEC:iR', 'LF:towards', '-SPEC:INF', 'PHI:NUM:_', 'COMP:D', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C', '-SPEC:N', '-COMP:N', '-float', 'TAIL:V', 'PF:towards', '-SPEC:iWH', '-COMP:uWH', '!COMP:*', 'P', 'PHI:DET:_', 'PHI:PER:_', '-COMP:ADV', 'adjoinable', '-SPEC:V', '-SPEC:FORCE', 'PHI:GEN:_', 'ARG', '-VAL'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'SPEC:TO/inf', 'SPEC:ADV', 'V', 'LF:nudge', 'PHI:NUM:_', '-COMP:P', 'LANG:FI', 'COMP:D', '-SPEC:T/fin', 'PF:tonaise', '-COMP:T/fin', '-COMP:N', '-COMP:v', '!COMP:*', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', 'CLASS:TR', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
tta             {'ADV', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:v', 'COMP:n/MA', '-SPEC:iR', '-SPEC:INF', 'PHI:NUM:_', 'SPEC:*', 'LANG:FI', 'COMP:D', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C', '-SPEC:N', '-COMP:N', '!COMP:*', '-SPEC:iWH', '-COMP:uWH', 'PHI:DET:_', 'P', 'PHI:PER:_', '-COMP:ADV', 'adjoinable', 'LF:without', '-SPEC:V', 'PF:tta', '-SPEC:FORCE', 'ARG', '-VAL'}
tries           ['LANG:EN']
try-            {'SPEC:TO/inf', 'SPEC:ADV', 'SPEC:D', 'V', '!COMP:-ARG', 'LANG:EN', 'PHI:NUM:_', 'LF:try', 'PHI:GEN:_', '-SPEC:T/fin', 'PF:try', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', '!COMP:TO/inf', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:FORCE', 'SEM:internal', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
verifiche       {'PF:verifiche', '-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', 'LANG:IT', 'LF:verification', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'!COMP:P', 'SPEC:TO/inf', 'SPEC:ADV', 'SPEC:D', 'V', '-COMP:D', 'PHI:NUM:_', 'PF:virtaa', 'LANG:FI', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', 'LF:flow', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'SPEC:TO/inf', 'SPEC:ADV', '-SPEC:*', 'V', 'LANG:EN', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', 'LF:want', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', '-SPEC:FORCE', 'PHI:DET:_', 'PHI:PER:_', 'PF:volu', '!COMP:*', 'SEM:internal', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'SPEC:TO/inf', 'SPEC:ADV', 'LF:win', 'V', 'LANG:EN', 'PHI:NUM:_', '-COMP:P', 'PHI:GEN:_', 'COMP:D', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', '!COMP:*', 'SEM:achievement', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', 'CLASS:TR', 'PF:voitta', 'ASP:BOUNDED', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
wants           ['LANG:EN']
want-           {'SPEC:ADV', 'V', '-COMP:V', 'LANG:EN', 'PHI:NUM:_', 'PF:want', '-COMP:P', 'PHI:GEN:_', 'COMP:D', '-SPEC:T/fin', 'LF:want', '-COMP:T/fin', '-COMP:N', '-COMP:v', '!COMP:*', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:TO/inf', 'CLASS:TR', '-SPEC:FORCE', 'ASP', 'SPEC:P', 'ARG', '-VAL', 'COMP:TO/inf'}
what            ['LANG:EN']
what-           {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', 'LANG:EN', '-SPEC:uWH', '-SPEC:INF', 'PHI_N', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', 'PF:what', 'LF:what', '-COMP:WH', '-SPEC:R', '-COMP:*', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
which           {'-SPEC:Neg/fin', '-SPEC:P', 'D', '-ARG', '-COMP:D', 'LANG:EN', '-SPEC:INF', 'PF:which', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', '-SPEC:N', '-COMP:uR', 'OP:WH', '-SPEC:D', '!PROBE:N', 'OP', 'COMP:N', 'adjoinable', '-SPEC:V', '!COMP:*', 'LF:which'}
who             ['LANG:EN']
who-            {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', 'LANG:EN', '-SPEC:uWH', '-SPEC:INF', 'PHI_N', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'LF:who', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:*', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'PF:who', 'COMP:uR', '-COMP:V'}
whether         {'Q', '-SPEC:*', '-ARG', 'PF:whether', 'FORCE', 'LANG:EN', 'COMP:T/fin', '!PROBE:T/fin', 'COMP:C/fin', 'FIN', 'OP:WH', 'OP', 'OP:Q', '!COMP:*', 'LF:whether', '-VAL'}
yrittaa         ['LANG:FI']
yritta-         {'SPEC:TO/inf', '!COMP:A/inf', 'SPEC:ADV', 'SPEC:D', 'V', '!COMP:-ARG', 'LANG:EN', 'PHI:NUM:_', 'LF:try', 'PF:yritta', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:FORCE', 'SEM:internal', 'ASP', 'SPEC:P', 'ARG', '-VAL', '-COMP:V'}
mina            ['LANG:EN']
mina-           {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', '-SPEC:INF', 'PHI_N', 'LANG:FI', '-SPEC:C/fin', 'LF:I', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', 'PF:mina', '-SPEC:R', '-COMP:*', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
sina            ['LANG:EN']
sina-           {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', '-SPEC:INF', 'PHI_N', 'LANG:FI', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', 'LF:you', '-COMP:WH', '-SPEC:R', '-COMP:*', '-COMP:ADV', 'PF:sina', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
han             ['LANG:EN']
han-            {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', 'PF:han', '-COMP:D', '-SPEC:uWH', '-SPEC:INF', 'PHI_N', 'LANG:FI', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-SPEC:FORCE', '-COMP:WH', '-SPEC:R', '-COMP:*', '-COMP:ADV', '-SPEC:V', 'LF:s/he', 'COMP:uR', '-COMP:V'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', '-SPEC:INF', 'PHI_N', 'LANG:FI', 'PF:me', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:*', '-COMP:ADV', 'LF:we', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
te              ['LANG:EN']
te-             {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', 'PF:te', '-SPEC:INF', 'PHI_N', 'LANG:FI', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', 'LF:you', '-COMP:WH', '-SPEC:R', '-COMP:*', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he-             {'-COMP:A', 'LF:they', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', '-SPEC:INF', 'PHI_N', 'LANG:FI', 'PF:he', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:*', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
he-             {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', 'LANG:EN', '-SPEC:uWH', '-SPEC:INF', 'PHI_N', 'PF:he', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'LF:he', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:*', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
se              ['LANG:FI']
se-             {'-SPEC:Neg/fin', '-SPEC:P', 'D', '-ARG', '-COMP:D', '-SPEC:INF', 'LF:it/that', 'LANG:FI', '-SPEC:MA/lla', 'PF:se', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', '-SPEC:N', '-COMP:uR', '-SPEC:D', '!PROBE:N', 'OP', 'COMP:N', 'adjoinable', '-SPEC:V', '!COMP:*'}
I               ['LANG:EN']
I-              {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', 'LANG:EN', 'PF:I', '-SPEC:uWH', '-SPEC:INF', 'PHI_N', '-SPEC:C/fin', 'LF:I', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:*', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
you             ['LANG:EN']
you-            {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', 'LANG:EN', '-SPEC:uWH', '-SPEC:INF', 'PHI_N', '-SPEC:C/fin', 'PF:you', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', 'LF:you', '-COMP:WH', '-SPEC:R', '-COMP:*', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
he              ['LANG:EN']
she             ['LANG:EN']
she-            {'-COMP:A', '-COMP:C/fin', 'PF:she', '-COMP:AUX', 'LF:she', '-SPEC:P', '-COMP:D', 'LANG:EN', '-SPEC:uWH', '-SPEC:INF', 'PHI_N', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:*', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
we              ['LANG:EN']
we-             {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', 'LANG:EN', 'PF:we', '-SPEC:uWH', '-SPEC:INF', 'PHI_N', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:*', '-COMP:ADV', 'LF:we', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
you_pl          ['LANG:EN']
you_pl-         {'-COMP:A', 'PHI', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', 'LANG:EN', '-SPEC:uWH', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', 'LF:you_pl', '-SPEC:V', '-SPEC:FORCE', 'PF:you_pl', 'COMP:uR', '-COMP:V'}
they            ['LANG:EN']
they-           {'-COMP:A', 'LF:they', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', 'LANG:EN', '-SPEC:uWH', '-SPEC:INF', 'PHI_N', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:*', '-COMP:ADV', 'PF:they', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
it              ['LANG:EN']
it-             {'-SPEC:Neg/fin', '-SPEC:P', 'D', '-ARG', '-COMP:D', 'LANG:EN', '-SPEC:INF', 'LF:it/that', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:T/fin', 'PF:it', '-SPEC:C', '-SPEC:N', '-COMP:uR', '-SPEC:D', '!PROBE:N', 'OP', 'COMP:N', 'adjoinable', '-SPEC:V', '!COMP:*'}
io              ['LANG:EN']
io-             {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:INF', 'PHI_N', 'PF:io', '-SPEC:C/fin', 'LF:I', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', '-SPEC:ADV', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:*', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
tu              ['LANG:EN']
tu-             {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:INF', 'PHI_N', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', 'LF:you', 'PF:tu', '-COMP:WH', '-SPEC:R', '-COMP:*', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
lui             ['LANG:EN']
lui-            {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:INF', 'PHI_N', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'LF:he', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:*', '-COMP:ADV', 'PF:lui', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
lei             ['LANG:EN']
lei-            {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', 'LF:she', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:INF', 'PHI_N', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:*', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'PF:lei', 'COMP:uR', '-COMP:V'}
noi             ['LANG:EN']
noi-            {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', 'PF:noi', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:INF', 'PHI_N', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:*', '-COMP:ADV', 'LF:we', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
voi             ['LANG:EN']
voi-            {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:INF', 'PHI_N', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', 'PF:voi', '-SPEC:R', '-COMP:*', '-COMP:ADV', 'LF:you_pl', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
loro            ['LANG:EN']
loro-           {'-COMP:A', 'LF:they', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', 'PF:loro', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:INF', 'PHI_N', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:*', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
mi              ['LANG:EN']
mi-             {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', 'PF:mi(cl)', '-SPEC:uWH', '-SPEC:INF', 'PHI_N', '-SPEC:C/fin', 'CL', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'LF:me', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-COMP:WH', '-SPEC:R', '-COMP:*', '-SPEC:P', '-COMP:D', 'LANG:IT', '-SPEC:ADV', 'N', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
la              ['LANG:EN']
la-             {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:uWH', '-SPEC:INF', 'PHI_N', '-SPEC:C/fin', 'CL', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'SPEC:A', '-COMP:N', 'COMP:R/D', 'LF:her', '-COMP:WH', '-SPEC:R', '-COMP:*', '-SPEC:P', '-COMP:D', 'LANG:IT', '-SPEC:ADV', 'N', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:ADV', '-SPEC:V', 'PF:la(cl)', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
lo              ['LANG:EN']
lo-             {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:uWH', '-SPEC:INF', 'PHI_N', 'LF:him', '-SPEC:C/fin', 'CL', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-COMP:WH', '-SPEC:R', '-COMP:*', '-SPEC:P', '-COMP:D', 'LANG:IT', '-SPEC:ADV', 'N', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'PF:lo(cl)', 'COMP:uR', '-COMP:V'}
si              ['LANG:EN']
si-             {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:V', '-SPEC:uWH', '-SPEC:INF', 'PHI_N', '-SPEC:C/fin', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-COMP:WH', '-SPEC:R', '-COMP:*', '-SPEC:P', '-COMP:D', 'LF:3sg', 'PF:si(cl)', 'LANG:IT', '-SPEC:ADV', 'N', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', 'CAL:CL'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-SPEC:uWH', 'LANG:IT', '-SPEC:INF', 'PHI_N', 'LF:there', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', 'PF:ci', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:*', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', '-COMP:V'}
[-n]            {'PHI:NUM:SG', 'PHI:PER:1', 'LANG:FI', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:HUM:HUM'}
[-t]            {'PHI:DET:DEF', 'LANG:FI', 'PHI', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'}
[-V]            {'LANG:FI', 'PHI', 'PHI:PER:3', 'inflectional', 'PHI:NUM:SG'}
[-mme]          {'PHI:PER:1', 'PHI:NUM:PL', 'PHI', 'LANG:FI', 'inflectional', 'PHI:DET:DEF', 'PHI:HUM:HUM'}
[-mme]          {'PHI:PER:1', 'PHI:NUM:PL', 'LANG:FI', 'inflectional', 'PHI:DET:DEF', 'PHI:HUM:HUM'}
[-tte]          {'PHI:NUM:PL', 'PHI', 'LANG:FI', 'inflectional', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:2'}
[-vat]          {'PHI:NUM:PL', 'PHI', 'LANG:FI', 'PHI:PER:3', 'inflectional'}
[-ni]           {'PHI:NUM:SG', 'PHI:PER:1', 'LANG:FI', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:HUM:HUM'}
[-si]           {'PHI:DET:DEF', 'LANG:FI', 'PHI', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2'}
[-nsa]          {'LANG:FI', 'PHI', 'PHI:PER:3', 'inflectional', 'PHI:NUM:SG'}
[-an]           {'PHI:PER:3', 'PHI', 'inflectional', 'LANG:FI'}
[-nne]          {'PHI:NUM:PL', 'LANG:FI', 'inflectional', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:2'}
[-s]            {'PHI:GEN:M', 'PHI', 'PHI:PER:3', 'inflectional', 'PHI:NUM:SG', 'LANG:EN', 'PHI:GEN:F'}
[-0]            {'PHI:NUM:PL', 'PHI', 'PHI:GEN:N', 'PHI:NUM:SG', 'PHI:DET:DEF', 'LANG:EN', 'PHI:PER:2', 'PHI:PER:1', 'inflectional', 'PHI:PER:3'}
[-o]            {'PHI:NUM:SG', 'PHI:PER:1', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:IT'}
[-i]            {'PHI:DET:DEF', 'PHI', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'LANG:IT'}
[-a]            {'PHI:DET:DEF', 'PHI', 'PHI:PER:3', 'inflectional', 'PHI:NUM:SG', 'LANG:IT'}
[-e]            {'PHI:DET:DEF', 'PHI', 'PHI:PER:3', 'inflectional', 'PHI:NUM:SG', 'LANG:IT'}
[-iamo]         {'PHI:PER:1', 'PHI:NUM:PL', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:HUM:HUM', 'LANG:IT'}
[-te]           {'PHI:NUM:PL', 'PHI', 'inflectional', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:2', 'LANG:IT'}
[-no]           {'PHI:NUM:PL', 'PHI', 'PHI:PER:3', 'inflectional', 'PHI:DET:DEF', 'LANG:IT'}
[-nom]          {'adjoinable', 'inflectional', 'TAIL:FIN,ARG,VAL', 'LANG:EN', 'NOM'}
[-par]          {'PAR', 'adjoinable', 'LANG:FI', 'inflectional', 'TAIL:ARG,-VAL'}
[-gen]          {'TAIL:INF,ARG', '-float', 'GEN', 'inflectional', 'LANG:EN'}
gen             {'TAIL:INF,ARG', '-float', 'GEN', 'inflectional', 'LANG:EN'}
[-n_acc]        {'adjoinable', 'TAIL:*POL:NEG', 'LANG:FI', 'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'n-ACC', 'TAIL:PHI'}
[-t_acc]        {'adjoinable', 't-ACC', 'TAIL:*POL:NEG', 'LANG:FI', 'inflectional', 'TAIL:ARG,ASP:BOUNDED'}
[-0_acc]        {'adjoinable', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'TAIL:*PHI', 'LANG:FI', '0_ACC', 'inflectional'}
asp             {'ASP:BOUNDED', 'inflectional', 'LANG:EN'}
a'              {'LF:A', 'a', 'LANG:X', 'PF:a'}
b'              {'LANG:X', 'PF:b', 'LF:B', 'b'}
b''             {'b', 'PF:b', 'LANG:EN', '-COMP:c', 'LF:B'}
c''             {'SPEC:a', 'LANG:EN', 'c', 'PF:c', 'LF:C'}
c'              {'LANG:X', 'c', 'PF:c', 'LF:C'}
d'              {'LF:D', 'PF:d', 'd', 'LANG:'}
a''             ['LANG:EN']
x'              {'LANG:X', 'PF:x', 'LF:X', 'x'}
y'              {'LF:Y', 'y', 'PF:y', 'LANG:X'}
z'              {'PF:x', 'LF:Z', 'LANG:X', 'z'}
John'           {"N'", 'PF:John', 'LANG:X', 'LF:John'}
admires'        {"V'", 'PF:admires', 'LANG:X', 'LF:admires'}
admires''       {'SPEC:TO/inf', 'SPEC:ADV', 'PF:admires', 'SPEC:D', 'V', '-COMP:V', 'LANG:EN', 'PHI:NUM:_', 'LF:admires', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:FORCE', 'ASP', 'PHI:GEN:_', 'ARG', '-VAL', 'SPEC:P'}
Mary'           {"N'", 'LANG:X', 'LF:mary', 'PF:Mary'}
T/fin           {'SPEC:TO/inf', 'SPEC:D', 'VAL', '-SPEC:v', 'PF:T', 'LANG:EN', 'COMP:V', 'PHI:NUM:_', 'SPEC:*', 'FIN', 'T/fin', 'COMP:D', 'LF:T', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:T/fin', '!PROBE:V', '-SPEC:N', '!COMP:*', 'PHI:DET:_', 'T', 'COMP:v', 'PHI:PER:_', '-SPEC:TO/inf', '-SPEC:V', 'COMP:T/prt', '-SPEC:FORCE', '-COMP:INF', '!SPEC:D', 'PHI:GEN:_', 'ARG', '-SPEC:Neg'}
v               {'-SPEC:N', 'SPEC:D', 'PF:v', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'COMP:V', 'LF:v', 'PHI:NUM:_', '!COMP:*', 'v', 'ASP', 'PHI:GEN:_', 'ARG', '-VAL', '!PROBE:V'}
C/fin           {'C', '-COMP:C/fin', '-ARG', 'VAL', 'LANG:EN', 'COMP:T/fin', 'C/fin', 'SPEC:*', 'FIN', 'COMP:Neg/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:N', 'LF:C/fin', '!PROBE:FIN', '!COMP:*', 'PF:C', '-COMP:T/prt'}
T               {'SPEC:D', 'VAL', 'PF:T', 'LANG:EN', 'COMP:V', 'PHI:NUM:_', 'SPEC:*', 'FIN', 'COMP:D', 'LF:T', '-SPEC:T/fin', '!PROBE:V', '-SPEC:N', '-SPEC:FORCE', 'PHI:DET:_', 'T', 'COMP:v', 'PHI:PER:_', '-SPEC:V', 'COMP:T/prt', '!COMP:*', '-COMP:NEG', 'PHI:GEN:_', 'ARG'}
T/prt           {'SPEC:D', 'PF:T/prt', 'VAL', 'LANG:EN', 'COMP:V', 'PHI:NUM:_', 'SPEC:*', 'FIN', 'COMP:D', '-SPEC:T/fin', 'LF:T/prt', '!PROBE:V', '-SPEC:N', '!COMP:*', 'PHI:DET:_', 'T', 'COMP:v', 'PHI:PER:_', 'T/prt', '-SPEC:V', 'COMP:T/prt', '-SPEC:FORCE', '-COMP:NEG', 'PHI:GEN:_', 'ARG'}
a0              {'-SPEC:D', 'LANG:EN', '-adjoinable', 'COMP:0', 'adjoinable', 'TAIL:D', '-SPEC:A', 'PF:A', 'LF:A', 'A'}
n               {'-COMP:A', '-COMP:C/fin', '-COMP:AUX', '!SPEC:*', '-SPEC:uWH', 'PF:n', '-SPEC:INF', 'COMP:0', 'SPEC:*', '-SPEC:C/fin', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'SPEC:A', '-COMP:N', 'COMP:R/D', '!COMP:*', 'LF:n', '-COMP:WH', '-SPEC:R', 'PHI:GEN:_', 'ARG', 'n', '-SPEC:P', 'VAL', '-COMP:D', 'LANG:EN', 'COMP:V', 'PHI:NUM:_', '-SPEC:ADV', 'N', '-SPEC:N', '-COMP:v', 'COMP:P', 'PHI:DET:_', 'COMP:v', 'PHI:PER:_', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'INF', '!SPEC:D', 'COMP:uR', '-COMP:V'}
impass          {'-SPEC:N', 'SPEC:D', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'COMP:V', 'PHI:NUM:_', 'LF:impass', 'PF:impass', '!COMP:*', 'v', 'ASP', 'PHI:GEN:_', 'ARG', '-VAL', '!PROBE:V'}
cau             {'-SPEC:N', 'SPEC:D', 'PF:Cau', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'COMP:V', 'PHI:NUM:_', 'LF:v/Cause', '!COMP:*', 'v', 'ASP', 'PHI:GEN:_', 'ARG', '-VAL', '!PROBE:V'}
INF             {'-COMP:C/fin', 'LF:INF', 'LANG:EN', '-COMP:FORCE', 'COMP:v', 'COMP:V', '-SPEC:V', '!COMP:*', 'INF', '-SPEC:T/fin', 'PF:INF', '-COMP:T/fin'}
prtcpl          {'-COMP:C/fin', 'SPEC:D', 'PF:T/prt', 'VAL', '-COMP:FORCE', 'LANG:EN', 'COMP:V', 'PHI:NUM:_', 'SPEC:*', 'FIN', 'COMP:D', '-SPEC:T/fin', 'LF:T/prt', '-COMP:T/fin', '!PROBE:V', '-SPEC:N', '-SPEC:FORCE', 'PHI:DET:_', 'T', 'COMP:v', 'PHI:PER:_', 'T/prt', 'COMP:T/prt', '-SPEC:V', '!COMP:*', 'INF', '-COMP:NEG', 'PHI:GEN:_', 'ARG'}
TO/inf          {'LF:TO/inf', '-COMP:C/fin', '-SPEC:v', '-COMP:FORCE', 'LANG:EN', 'COMP:V', '-SPEC:T/fin', '-COMP:T/fin', '!COMP:V', 'PF:TO/inf', 'COMP:v', 'TO/inf', 'adjoinable', '-SPEC:V', '!COMP:*', 'INF', '?ARG', '-VAL'}
A/inf           {'-SPEC:Neg/fin', '-COMP:C/fin', 'A/inf', '?VAL', 'LANG:EN', '-COMP:FORCE', 'COMP:V', 'SPEC:*', '-SPEC:T/fin', '-COMP:T/fin', 'PF:A/inf', 'LF:A/inf', 'COMP:v', '-SPEC:V', '!COMP:*', 'INF', '?ARG'}
ARE/inf         {'-COMP:C/fin', 'ARE/inf', 'VAL', '-COMP:FORCE', '-adjoinable', 'PF:are', 'LANG:EN', 'COMP:V', 'SPEC:*', '-SPEC:T/fin', '-COMP:T/fin', 'COMP:v', 'LF:ARE/inf', '-SPEC:V', '!COMP:*', 'INF', '?ARG'}
ESSA/inf        {'ADV', '-SPEC:Neg/fin', '-COMP:C/fin', '?VAL', 'LANG:EN', '-COMP:FORCE', 'COMP:V', 'SPEC:*', 'LF:while', 'TAIL:T', 'PF:essa', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:N', '!COMP:*', 'COMP:v', 'adjoinable', '-SPEC:V', '-SPEC:FORCE', 'INF', 'ESSA/inf', '?ARG'}
TUA/inf         {'ADV', '-SPEC:Neg/fin', '-COMP:C/fin', '!SPEC:*', '-COMP:FORCE', 'LANG:EN', 'COMP:V', 'PHI:NUM:_', 'LF:after', 'TAIL:T', '-SPEC:T/fin', '-COMP:T/fin', 'TUA/inf', '-SPEC:N', '!COMP:*', 'PHI:DET:_', 'COMP:v', 'PHI:PER:_', 'adjoinable', '-SPEC:V', '-SPEC:FORCE', 'INF', 'CAL', 'PHI:GEN:_', 'ARG', 'PF:tua'}
VA/inf          {'-COMP:C/fin', 'VAL', '!SPEC:*', '-COMP:FORCE', 'LANG:EN', 'COMP:V', 'PHI:NUM:_', 'SPEC:*', '-SPEC:T/fin', '-COMP:T/fin', 'VA/inf', '-SPEC:N', 'PF:vAn', 'PHI:DET:_', 'COMP:v', 'PHI:PER:_', '-SPEC:V', '!COMP:*', 'INF', 'PHI:GEN:_', 'ARG', 'LF:VA'}
MA/ssa          {'ADV', '-SPEC:*', '-SPEC:Neg/fin', 'LANG:EN', 'COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:N', 'LF:in_doing', 'TAIL:V', 'PHI:DET:_', 'COMP:v', 'PHI:PER:_', 'MA/inf', 'adjoinable', 'PF:massa', '-SPEC:FORCE', 'PHI:GEN:_', 'ARG', '-VAL'}
MA/tta          {'-SPEC:N', 'ADV', 'PHI:GEN:_', '-SPEC:Neg/fin', 'PF:matta', '-SPEC:T/fin', 'PHI:DET:_', 'LANG:EN', 'PHI:PER:_', 'MA/inf', 'PHI:NUM:_', 'adjoinable', '-SPEC:FORCE', 'TAIL:T', 'LF:without_doing', 'ARG', '-VAL'}
MA/lla          {'ADV', '-SPEC:Neg/fin', '-SPEC:T/fin', 'LF:by_doing', 'MA/inf', 'adjoinable', 'PHI:GEN:_', 'ARG', 'LANG:EN', 'COMP:V', 'PHI:NUM:_', 'TAIL:T', '-SPEC:N', 'PHI:DET:_', 'COMP:v', 'PHI:PER:_', 'PF:malla', '-SPEC:FORCE', '-VAL'}
MA/inf          {'ADV', '-SPEC:Neg/fin', '-SPEC:T/fin', 'TAIL:V', 'LF:to_do', 'MA/inf', 'adjoinable', 'PHI:GEN:_', 'ARG', 'LANG:EN', 'COMP:V', 'PHI:NUM:_', 'PF:maan', '-SPEC:N', 'PHI:DET:_', 'COMP:v', 'PHI:PER:_', '-SPEC:FORCE', '-VAL'}
E/inf           {'-SPEC:N', 'ADV', '-SPEC:Neg/fin', '-ARG', 'LF:by', 'PF:en', 'adjoinable', 'SPEC:*', 'LANG:FI', '-SPEC:FORCE', '-SPEC:T/fin', '-VAL'}
BE-             {'SPEC:TO/inf', 'SPEC:ADV', '-ARG', 'SPEC:D', 'V', 'LANG:EN', 'PF:BE', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:N', '-COMP:v', 'COMP:P', '-SPEC:FORCE', 'LF:BE', 'COPULA', '!COMP:*', 'COMP:T/prt', 'ASP', 'SPEC:P', '-VAL', '-COMP:V'}
D               {'LF:D', '-SPEC:Neg/fin', '-SPEC:P', 'D', '-ARG', '-COMP:D', 'LANG:EN', '-SPEC:INF', '-SPEC:MA/lla', '-SPEC:T/fin', '-COMP:T/fin', '-SPEC:C', '-SPEC:N', '-COMP:uR', '-SPEC:D', '!PROBE:N', 'OP', 'PF:D', 'COMP:N', 'adjoinable', '-SPEC:V', '!COMP:*'}
P               {'-SPEC:Neg/fin', '-SPEC:*', '-SPEC:P', '-SPEC:v', 'LANG:EN', '-SPEC:iR', '-SPEC:INF', 'PHI:NUM:_', 'COMP:D', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:T/fin', 'LF:P', '-SPEC:C', '-SPEC:N', '-COMP:N', 'PF:P', '-float', '!COMP:*', '-SPEC:iWH', '-COMP:uWH', 'PHI:DET:_', 'P', 'PHI:PER:_', '-COMP:ADV', 'adjoinable', '-SPEC:V', '-SPEC:FORCE', 'PHI:GEN:_', 'ARG', '-VAL'}
pro             ['LANG:EN']
pro-            {'-COMP:A', 'PHI', '-COMP:C/fin', '-COMP:AUX', '-SPEC:P', '-COMP:D', '-COMP:V', 'LANG:EN', '-SPEC:uWH', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:ADV', '-SPEC:T/fin', 'COMP:R', '-COMP:T/fin', 'LF:pro', 'N', 'SPEC:A', '-COMP:N', 'COMP:R/D', '-SPEC:N', '-COMP:v', 'COMP:P', '-COMP:WH', '-SPEC:R', '-COMP:ADV', '-SPEC:V', '-SPEC:FORCE', 'COMP:uR', 'PF:(pro)'}
cl              {'RIGHT:PRG', 'LEFT:D,CL', 'inflectional', 'CL', 'RIGHT:ARE/inf', 'LANG:EN', 'LEFT:T/fin'}
inc             {'LANG:EN', 'inflectional', 'INCORPORATED'}
sg              {'PHI:NUM:SG', 'LANG:EN', 'inflectional'}
pl              {'PHI:NUM:PL', 'inflectional', 'LANG:EN'}
1p              {'PHI:PER:1', 'LANG:EN', 'inflectional'}
2p              {'LANG:EN', 'inflectional', 'PHI:PER:2'}
3p              {'LANG:EN', 'PHI:PER:3', 'inflectional'}
def             {'PHI:DET:DEF', 'LANG:EN', 'inflectional'}
indef           {'PHI:DET:INDEF', 'LANG:EN', 'inflectional'}
hum             {'LANG:EN', 'PHI:HUM:HUM', 'inflectional'}
nonhum          {'PHI:HUM:NONHUM', 'LANG:EN', 'inflectional'}
m               {'PHI:GEN:M', 'inflectional', 'LANG:EN'}
f               {'PHI:GEN:F', 'inflectional', 'LANG:EN'}
nom             {'TAIL:FIN,!COMP:*,VAL', 'NOM', 'inflectional', 'LANG:EN'}
acc             {'TAIL:v', 'LANG:EN', 'inflectional', 'ACC'}
dat             {'DAT', 'TAIL:v', 'LANG:EN', 'inflectional'}
uC/op           {'uC/op', 'LANG:EN', 'inflectional'}
wh              {'OP:_', 'OP:WH', 'LANG:EN', 'inflectional'}
wh_             {'OP:_', 'inflectional', 'OP', 'LANG:EN', 'FORCE:OP:WH'}
top             {'OP:TOP', 'LANG:EN', 'inflectional'}
foc             {'OP:FOC', 'LANG:EN', 'inflectional'}
C/op            {'LANG:EN', 'OP:C/OP', 'inflectional'}
rel             {'adjoinable', '-COMP:C/fin', 'inflectional', 'OP:REL', 'LANG:EN'}
Q               {'OP:WH', 'OP:Q', 'inflectional', 'OP', 'LANG:EN'}
