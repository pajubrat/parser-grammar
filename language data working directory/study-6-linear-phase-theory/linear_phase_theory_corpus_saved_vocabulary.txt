ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'-SPEC:iR', 'P', '-COMP:uWH', '-SPEC:*', '!COMP:*', 'LANG:IT', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-SPEC:iWH', '-ARG', 'COMP:D', '-VAL', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', 'COMP:ARE/inf', 'PF:a', '-SPEC:ADV', '-SPEC:C', 'LF:to', 'adjoinable', '-SPEC:N', '-SPEC:v', '-SPEC:Neg/fin'}
a_D             {'-COMP:D', '!COMP:*', 'LF:D', '-SPEC:T/fin', '-COMP:uR', 'COMP:N', '-SPEC:Neg/fin', '-ARG', 'OP', '-SPEC:INF', '-COMP:T/fin', 'PF:D', '-SPEC:V', '-SPEC:P', '-SPEC:D', '-SPEC:C', 'LANG:EN', '-SPEC:MA/lla', '!PROBE:N', 'adjoinable', '-SPEC:N', 'D'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-COMP:V', 'PHI:NUM:_', '!COMP:*', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'PF:admire', '-COMP:Neg', '-VAL', '-SPEC:Neg', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'LANG:EN', 'PHI:GEN:_', 'V', '-COMP:P', 'COMP:P', 'LF:admire'}
admire*         ['LANG:EN']
T/fin*          {'NO_NUMBER', 'CAT:T/fin', "PF:T/fin'", 'LANG:EN', '!SPEC:*', 'NO_DET', 'LF:T', '-VAL'}
v*              {'LF:v', 'LANG:EN', 'NO_NUMBER', 'PF:v', 'NO_DET', 'CAT:v', '-VAL'}
admire**        ['LANG:EN']
T/fin**         {'PHI:PER:3', 'NO_NUMBER', 'CAT:T/fin', "PF:T/fin''", 'LANG:EN', '!SPEC:*', 'NO_DET', 'LF:T', '-VAL', 'NO_PERSON'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'PF:adora', '-COMP:V', 'PHI:NUM:_', 'LANG:IT', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'COMP:D', '-VAL', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'PHI:GEN:_', 'V', 'COMP:P', 'LF:admire'}
antaa           ['LANG:FI']
anta-           {'LF:give', 'LANG:FI', '-COMP:V', 'PHI:NUM:_', '!COMP:*', '-COMP:FIN', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'CLASS:DITR', 'SPEC:ADV', 'COMP:D', 'PHI:DET:_', 'PF:antaa', '-VAL', 'SPEC:D', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'ASP:BOUNDED', 'V', '+SEM:directional', 'COMP:P'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'COMP:D', 'LF:ask', '-VAL', 'SPEC:D', 'SEM:internal', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'LANG:EN', 'PHI:GEN:_', 'PF:ask', 'V', 'COMP:P'}
ask-            {'-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'COMP:D', 'LF:ask', '-VAL', 'SPEC:D', 'SEM:internal', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'LANG:EN', 'PHI:GEN:_', 'PF:ask', 'V', 'COMP:P'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-COMP:D', 'LANG:FI', 'PF:avain', '-COMP:V', '-SPEC:R', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', '-SEM:directional', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'LF:key', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'PF:auto', '-COMP:D', 'LANG:FI', '-COMP:V', '-SPEC:R', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', 'LF:car', '-COMP:WH', '-SEM:directional', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
city            {'-COMP:D', '-SPEC:R', '-COMP:V', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'PF:city', 'N', '-COMP:v', '-SPEC:uWH', 'LANG:EN', 'COMP:R', 'LF:city', 'COMP:P', 'COMP:uR', '-SPEC:N'}
che             ['LANG:IT']
che-            {'-COMP:D', '-SPEC:R', '-COMP:V', 'PHI_N', 'LF:who', '-COMP:*', 'LANG:IT', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:T/fin', '-COMP:A', '-COMP:C/fin', '-COMP:N', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'PF:che', 'COMP:P', 'COMP:uR', '-SPEC:N'}
chiamato        ['LANG:IT']
chiamata-       {'-COMP:V', 'PHI:NUM:_', 'LANG:IT', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', '-VAL', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'LF:called', 'PHI:GEN:_', 'V', 'COMP:P', 'PF:chiamato'}
danno           {'-COMP:D', '-SPEC:R', '-COMP:V', 'LANG:IT', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:A', '-COMP:C/fin', '-COMP:N', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', 'LF:damage', '-SPEC:V', '-SPEC:P', 'PF:danno', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'-COMP:V', 'PHI:NUM:_', 'LANG:IT', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'COMP:D', '-VAL', 'SEM:internal', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', 'COMP:ARE/inf', 'LF:detest', '-COMP:v', 'PF:detest', 'PHI:GEN:_', 'V', 'COMP:P'}
devono          ['LANG:EN']
deva-           {'-COMP:V', 'PHI:NUM:_', 'LANG:IT', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'PF:deva', '-VAL', 'SPEC:D', 'SEM:internal', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', 'COMP:ARE/inf', '-ASP', '-COMP:v', 'PHI:GEN:_', 'LF:must', 'V', 'COMP:P'}
di              {'-SPEC:iR', 'P', '-adjoinable', '-COMP:uWH', 'LANG:FI', 'PHI:NUM:_', '!COMP:*', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-SPEC:iWH', 'SPEC:*', 'PF:di', 'COMP:D', 'PHI:DET:_', '-VAL', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:INF', '-COMP:T/fin', 'ARG', '-SPEC:V', '-SPEC:P', 'PHI:PER:_', 'LF:of', '-SPEC:ADV', '-SPEC:C', '-SPEC:N', '-SPEC:v', '-SPEC:Neg/fin'}
does            {'PHI:PER:3', 'COMP:v', 'PHI:GEN:F', 'PHI:NUM:_', '!COMP:*', 'T', '-SPEC:FORCE', 'SPEC:*', 'COMP:D', 'SPEC:D', '-SPEC:Neg', '-SPEC:C/fin', 'PHI:PER:_', 'COMP:V', 'PHI:GEN:_', '-SPEC:N', '!SPEC:D', 'T/fin', 'COMP:Neg', '-SPEC:T/fin', '!PROBE:V', 'COMP:T/prt', 'PHI:DET:_', 'VAL', 'FIN', 'LF:does', '-COMP:T/fin', 'ARG', '-SPEC:V', 'SPEC:TO/inf', '-SPEC:TO/inf', 'PF:does', 'LANG:EN', 'PHI:GEN:M', 'PHI:NUM:SG', '-COMP:INF', '-SPEC:v'}
does_C          ['LANG:EN']
does-           {'PHI:PER:3', 'COMP:v', 'PHI:GEN:F', 'PHI:NUM:_', '!COMP:*', 'T', '-SPEC:FORCE', 'SPEC:*', 'COMP:D', 'SPEC:D', '-SPEC:Neg', '-SPEC:C/fin', 'PHI:PER:_', 'COMP:V', 'PHI:GEN:_', '-SPEC:N', '!SPEC:D', 'T/fin', 'COMP:Neg', '-SPEC:T/fin', '!PROBE:V', 'COMP:T/prt', 'PHI:DET:_', 'VAL', 'FIN', 'LF:does', '-COMP:T/fin', 'ARG', '-SPEC:V', 'SPEC:TO/inf', '-SPEC:TO/inf', 'PF:does', 'LANG:EN', 'PHI:GEN:M', 'PHI:NUM:SG', '-COMP:INF', '-SPEC:v'}
dorme           ['LANG:IT']
dorme-          {'-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', '-VAL', 'LF:sleep', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', 'PF:dorme', '-COMP:v', 'LANG:EN', 'PHI:GEN:_', 'V', 'COMP:P', '!SPEC:D'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'LF:neg', 'POL:NEG', 'LANG:FI', '-SPEC:T', 'PHI:NUM:_', '!COMP:*', '-SPEC:T/fin', 'COMP:T/prt', 'PHI:DET:_', 'SPEC:*', 'FIN', 'VAL', '!SPEC:*', 'NEG', 'Neg/fin', '%SPEC:INF', 'SEM:internal', 'ARG', 'PHI:PER:_', '!COMP:T', 'PF:ei'}
e-              {'LF:neg', 'POL:NEG', 'LANG:FI', '-SPEC:T', 'PHI:NUM:_', '!COMP:*', '-SPEC:T/fin', 'COMP:T/prt', 'PHI:DET:_', 'SPEC:*', 'FIN', 'VAL', '!SPEC:*', 'NEG', 'Neg/fin', '%SPEC:INF', 'SEM:internal', 'ARG', 'PHI:PER:_', '!COMP:T', 'PF:ei'}
elaa            ['LANG:FI']
ela-            {'CLASS:INTR', '-COMP:D', 'LANG:FI', '-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'LF:live', '-VAL', 'SPEC:D', 'ASP', '-COMP:T/fin', 'PF:elaa', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'V', 'COMP:P'}
etsii           ['LANG:FI']
etsi-           {'LANG:FI', '-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'COMP:D', '-VAL', 'LF:search', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', '!COMP:D', 'V', 'COMP:P', 'PF:etsi'}
etta            {'-SPEC:*', 'LANG:FI', 'COMP:C/fin', '!COMP:*', 'LF:that', 'COMP:T/fin', '-ARG', 'PF:etta', 'FIN', '!PROBE:T/fin', '-VAL', 'FORCE'}
flow'           {'-COMP:V', 'PHI:NUM:_', 'PF:flow', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', '-VAL', 'SPEC:D', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'LANG:EN', 'LF:flow', 'PHI:GEN:_', 'V', 'COMP:P'}
from            {'-SPEC:iR', 'P', '-COMP:uWH', '-SPEC:*', 'PHI:NUM:_', '!COMP:*', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-SPEC:iWH', 'PHI:DET:_', 'COMP:D', '-float', 'LF:from', '-VAL', 'PF:from', '-COMP:ADV', 'TAIL:V,+SEM:directional', '-SPEC:C/fin', '-SPEC:INF', '-COMP:T/fin', 'ARG', '-SPEC:V', '-SPEC:P', 'PHI:PER:_', '-SPEC:ADV', '-SPEC:C', 'LANG:EN', 'PHI:GEN:_', 'adjoinable', '-SPEC:N', '-SPEC:v', '-SPEC:Neg/fin'}
gave            ['LANG:EN']
give-           {'LF:give', '-COMP:V', 'PF:give', 'PHI:NUM:_', '!COMP:*', '-COMP:FIN', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'CLASS:DITR', 'SPEC:ADV', 'COMP:D', 'PHI:DET:_', '-VAL', 'SPEC:D', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'LANG:EN', 'PHI:GEN:_', 'V', '+SEM:directional', 'COMP:P'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-COMP:D', '-SPEC:R', '-COMP:V', 'LANG:IT', 'PF:Giuseppe', 'LF:Giuseppe', 'COMP:R/D', '-SPEC:FORCE', '-COMP:A', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SEM:directional', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'-SPEC:*', 'LANG:FI', '-COMP:V', 'PHI:NUM:_', '!COMP:*', 'LF:want', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', '-VAL', 'SEM:internal', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'COMP:A/inf', 'PHI:PER:_', '-COMP:v', 'ASP:BOUNDED', 'PF:haluaa', 'V', '-COMP:P', 'COMP:P'}
hairitsee       ['LANG:FI']
hairitse-       {'LANG:FI', '-COMP:V', 'LF:disturb', 'PHI:NUM:_', '-COMP:FIN', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', '-VAL', 'SPEC:D', 'ASP', '-COMP:T/fin', 'ARG', 'PF:hairitsee', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', '!COMP:D', 'V', 'COMP:P'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'PF:ha', '-COMP:V', 'PHI:NUM:_', 'LANG:IT', 'COMP:T', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:*', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'LF:have', '-VAL', 'SPEC:D', 'SEM:internal', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-ASP', '-COMP:v', 'PHI:GEN:_', 'V', 'COMP:P'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'CLASS:INTR', '-COMP:D', 'LANG:FI', 'LF:disappear', '-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', '-VAL', 'SPEC:D', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', 'PF:havia', '-COMP:v', 'V', 'COMP:P'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'LANG:FI', '-COMP:V', 'PHI:NUM:_', '!COMP:*', '-COMP:FIN', 'PF:ihaile-', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', '-VAL', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', '!COMP:D', 'V', '-COMP:P', 'COMP:P', 'LF:admire'}
il              {'-COMP:D', 'PF:il', '!COMP:*', 'LANG:IT', '-SPEC:T/fin', '-COMP:uR', 'COMP:N', '-SPEC:Neg/fin', '-ARG', 'OP', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:D', '-SPEC:C', '-SPEC:MA/lla', 'LF:the', '!PROBE:N', 'adjoinable', '-SPEC:N', 'D'}
i               {'-COMP:D', 'PF:il', '!COMP:*', 'LANG:IT', '-SPEC:T/fin', '-COMP:uR', 'COMP:N', '-SPEC:Neg/fin', '-ARG', 'OP', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:D', '-SPEC:C', '-SPEC:MA/lla', 'LF:the', '!PROBE:N', 'adjoinable', '-SPEC:N', 'D'}
in              {'PF:in', 'P', '-SPEC:iR', '-COMP:uWH', 'adjoinable', 'PHI:NUM:_', '!COMP:*', 'LANG:IT', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-SPEC:iWH', 'PHI:DET:_', 'COMP:D', '-VAL', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:INF', '-COMP:T/fin', 'ARG', '-SPEC:V', '-SPEC:P', 'PHI:PER:_', '-SPEC:ADV', '-SPEC:C', 'PHI:GEN:_', 'LF:in', '-SPEC:N', '-SPEC:v', '-SPEC:Neg/fin'}
infermieri      {'LF:nurses', '-COMP:D', '-SPEC:R', '-COMP:V', 'LANG:IT', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:A', '-COMP:C/fin', '-COMP:N', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'PF:infermieri', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
is              ['LANG:EN']
be-             {'-COMP:V', '!COMP:*', '-SPEC:T/fin', 'COPULA', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-ARG', 'LF:be', '-VAL', 'PF:be', 'SPEC:D', 'ASP', '-COMP:TO/inf', '-COMP:T/fin', 'SPEC:TO/inf', '-COMP:v', 'LANG:EN', 'V', 'COMP:P'}
istuuko         ['LANG:FI']
istuu-          {'CLASS:INTR', '-COMP:D', 'LANG:FI', '-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'PF:istuu', '-VAL', 'SPEC:D', 'ASP', 'LF:sit', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'V', 'COMP:P'}
John            ['LANG:EN']
John-           {'PF:John', '-adjoinable', '-COMP:D', '-SPEC:R', '-COMP:V', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', 'LF:John', '-SEM:directional', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'LANG:EN', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-COMP:D', 'LANG:FI', '-COMP:V', '-SPEC:R', 'LF:Jukka', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', '-SEM:directional', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N', 'PF:Jukka'}
juosten         ['LANG:FI']
juokse-         {'LF:run', 'LANG:FI', '-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', '-VAL', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'PF:juokse-', 'V', 'COMP:P'}
istuu           ['LANG:FI']
istu-           {'LANG:FI', '-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'PF:istuu', '-VAL', 'ASP', 'LF:sit', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'V', 'COMP:P'}
kaksi           {'LF:two', 'ARG', 'PHI:PER:_', 'LANG:FI', 'COMP:n', 'PHI:NUM:_', 'COMP:N', 'SPEC:*', 'PHI:NUM:SG', 'TAIL:ARG,VAL,FIN', 'PHI:DET:_', '-VAL', 'NUM', 'PF:kaksi'}
kaksi           {'LF:two', 'COMP:n', 'COMP:N', 'LANG:EN', 'SPEC:*', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'NUM', 'PF:kaksi'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'LF:two', 'SPEC:*', 'LANG:FI', 'COMP:n', 'NUM', 'COMP:N', 'PF:kaksi'}
kaupunkia       ['LANG:EN']
kaupunki        {'-COMP:D', 'LANG:FI', '-COMP:V', '-SPEC:R', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'LF:city', '-COMP:P', 'COMP:uR', '-SPEC:N', 'PF:kaupunki'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'LANG:FI', 'PF:kaske', '-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', '-VAL', 'ASP', '-COMP:T/fin', 'ARG', '!COMP:A/inf', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'LF:order', 'SEM:external', 'V', 'COMP:P'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-COMP:D', 'LANG:FI', '-COMP:V', 'PF:kello', '-SPEC:R', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'LF:watch', '-COMP:A', '-COMP:C/fin', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
kello0-         {'LF:watch', 'LANG:FI', 'PF:kello', '0', 'SPEC:D', '2SPEC'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-COMP:D', '-SPEC:R', '-COMP:V', 'COMP:uR', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'LF:key', 'LANG:EN', 'COMP:R', 'COMP:P', 'PF:key', '-SPEC:N'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'PF:kirja', 'LF:book', 'LANG:FI', '-COMP:V', '-COMP:D', '-SPEC:R', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', '-SEM:directional', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
kohti           {'-SPEC:iR', 'P', '-COMP:uWH', 'LANG:FI', 'PF:kohti', 'PHI:NUM:_', '!COMP:*', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'LF:towards', '-SPEC:iWH', 'TAIL:V', 'SPEC:*', 'COMP:D', 'PHI:DET:_', '-VAL', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:INF', '-COMP:T/fin', 'ARG', '-SPEC:V', '-SPEC:P', 'PHI:PER:_', '-SPEC:ADV', '-SPEC:C', 'adjoinable', '-SPEC:N', '-SPEC:v', '-SPEC:Neg/fin'}
koko            {'TAIL:T', '-COMP:D', 'LANG:FI', 'LF:all', '!COMP:*', '-SPEC:T/fin', '-COMP:uR', 'COMP:N', '-SPEC:Neg/fin', '-ARG', 'OP', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:D', 'PF:koko', '-SPEC:C', '-SPEC:MA/lla', '!PROBE:N', 'adjoinable', '-SPEC:N', 'D'}
kuka            ['LANG:FI']
kuka-           {'PHI', 'LANG:FI', '-COMP:V', '-COMP:D', 'LF:who', '-SPEC:R', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', 'PF:kuka', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
kuorsaa-        {'-COMP:D', 'LANG:FI', '-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'LF:snore', '-COMP:WH', '-VAL', 'ASP', '-COMP:T/fin', 'ARG', 'PF:kuorsaa', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'V', 'COMP:P'}
kuorsaamalla    ['LANG:FI']
lahella         {'-SPEC:iR', 'P', 'COMP:v', 'LANG:FI', 'PHI:NUM:_', '!COMP:*', '-SPEC:FORCE', '-SPEC:iWH', '-COMP:C/fin', 'SPEC:*', 'COMP:D', '!SPEC:*', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:P', 'PHI:PER:_', 'COMP:V', 'PF:lahella', '-SPEC:ADV', '-SPEC:C', '-SPEC:N', '!SPEC:D', '-COMP:uWH', '-SPEC:T/fin', 'INF', '-COMP:N', 'PHI:DET:_', 'VAL', '-SPEC:INF', '-COMP:T/fin', 'ARG', '-SPEC:V', '-COMP:FORCE', 'LF:near', 'adjoinable', '-SPEC:v', '-SPEC:Neg/fin'}
lahella         {'-SPEC:iR', 'P', '-COMP:uWH', 'LANG:FI', 'PHI:NUM:_', '!COMP:*', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-SPEC:iWH', 'SPEC:*', 'PHI:DET:_', 'COMP:D', '-VAL', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:INF', '-COMP:T/fin', 'ARG', '-SPEC:V', '-SPEC:P', 'PHI:PER:_', 'PF:lahella', '-SPEC:ADV', 'LF:near', '!COMP:D', '-SPEC:C', 'adjoinable', '-SPEC:N', '-SPEC:v', '-SPEC:Neg/fin'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'CLASS:INTR', '-COMP:D', 'LANG:FI', '-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'PF:lahtea', 'SPEC:ADV', 'PHI:DET:_', '-VAL', 'SPEC:D', 'ASP', '-COMP:T/fin', 'ARG', 'LF:leave', 'SPEC:TO/inf', 'PHI:PER:_', 'COMP:PP', '-COMP:v', 'V', 'COMP:P'}
lavano          ['LANG:IT']
lava-           {'-COMP:V', 'PF:lava', 'PHI:NUM:_', '!COMP:*', 'LANG:IT', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'COMP:D', '-VAL', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'PHI:GEN:_', 'LF:wash', 'V', 'COMP:P'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'PF:le', '-COMP:D', '!COMP:*', 'LF:D', 'LANG:IT', '-SPEC:T/fin', '-COMP:uR', 'COMP:N', '-SPEC:Neg/fin', '-ARG', 'OP', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:D', '-SPEC:C', '-SPEC:MA/lla', '!PROBE:N', 'adjoinable', '-SPEC:N', 'D'}
leaves          ['LANG:EN']
leave           {'-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', '-VAL', 'ASP', '-COMP:T/fin', 'PF:leave', 'ARG', 'LF:leave', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'LANG:EN', 'PHI:GEN:_', 'V', 'COMP:P', '!SPEC:D'}
leave-          {'-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', '-VAL', 'ASP', '-COMP:T/fin', 'PF:leave', 'ARG', 'LF:leave', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'LANG:EN', 'PHI:GEN:_', 'V', 'COMP:P', '!SPEC:D'}
like-           {'PF:like', '-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'LF:like', 'PHI:DET:_', '-VAL', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', '!COMP:D', 'LANG:EN', 'PHI:GEN:_', 'V', 'COMP:P'}
likes           ['LANG:EN']
like            {'PF:like', '-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'LF:like', 'PHI:DET:_', '-VAL', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', '!COMP:D', 'LANG:EN', 'PHI:GEN:_', 'V', 'COMP:P'}
little          ['LANG:EN']
little-         {'LANG:EN', 'LF:little', 'PF:little-', '0', 'SPEC:D', '2SPEC'}
lle             {'-SPEC:iR', 'P', '-COMP:uWH', '-SPEC:*', 'LANG:FI', 'PHI:NUM:_', '!COMP:*', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-SPEC:iWH', 'PHI:DET:_', 'COMP:D', '-VAL', '-COMP:ADV', 'TAIL:V,+SEM:directional', '-SPEC:C/fin', 'LF:for', '-SPEC:INF', '-COMP:T/fin', 'ARG', '-SPEC:P', '-SPEC:V', 'PHI:PER:_', '-SPEC:ADV', 'PF:P(lle)', '-SPEC:C', '+SEM:directional', 'adjoinable', '-SPEC:N', '-SPEC:v', '-SPEC:Neg/fin'}
lla             {'TAIL:T', 'P', '-SPEC:iR', '-COMP:uWH', 'LANG:FI', 'PHI:NUM:_', '!COMP:*', 'LF:by', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-SPEC:iWH', 'SPEC:*', 'PHI:DET:_', 'COMP:D', '-VAL', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:INF', '-COMP:T/fin', 'ARG', 'TAIL:*V', '-SPEC:V', '-SPEC:P', 'PHI:PER:_', '-SPEC:ADV', '-SPEC:C', 'PF:P(lla)', 'adjoinable', '-SPEC:N', '-SPEC:v', '-SPEC:Neg/fin'}
Luisa           ['LANG:IT']
Luisa-          {'PF:Luisa', 'LF:Luisa', '-COMP:D', '-SPEC:R', '-COMP:V', 'LANG:IT', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:A', '-COMP:C/fin', '-COMP:N', '-COMP:WH', '-SEM:directional', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
lukemalla       ['LANG:FI']
luke-           {'LANG:FI', '-COMP:V', 'PF:luke', 'PHI:NUM:_', '!COMP:*', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', '-VAL', 'ASP', '-COMP:T/fin', 'LF:read', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'V', '-COMP:P', 'COMP:P'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'LANG:FI', '-COMP:V', 'PHI:NUM:_', '!COMP:*', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', '-VAL', 'ASP', 'PF:loyta-', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', '!COMP:D', 'ASP:BOUNDED', 'LF:find', 'V', '-COMP:P', 'COMP:P'}
Mary            ['LANG:EN']
Mary-           {'-adjoinable', '-COMP:D', '-SPEC:R', '-COMP:V', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'LF:Mary', '-COMP:A', '-COMP:C/fin', '-COMP:WH', '-SEM:directional', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'LANG:EN', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N', 'PF:Mary'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-adjoinable', '-COMP:D', 'LANG:FI', '-COMP:V', '-SPEC:R', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', 'LF:Merja', 'PF:Merja', '-COMP:WH', '-SEM:directional', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'PF:malla', 'TAIL:T', 'adjoinable', 'COMP:v', 'LANG:FI', 'LF:by', '-SPEC:T/fin', 'MA/inf', '-SPEC:FORCE', 'SPEC:*', 'ADV', '-SPEC:N', '-SPEC:Neg/fin'}
meren           ['LANG:FI']
mere-           {'-COMP:D', 'LANG:FI', '-COMP:V', '-SPEC:R', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', 'LF:ocean', 'PF:meri', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
mistake         {'-COMP:D', '-SPEC:R', '-COMP:V', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', 'LF:mistake', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', 'PF:mistake', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'LANG:EN', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-COMP:D', 'LANG:FI', '-COMP:V', '-SPEC:R', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', 'LF:what', '-COMP:WH', 'PF:mika-', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'LANGN:EN', '-COMP:V', 'PHI:NUM:_', '!COMP:*', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'LF:move', 'SPEC:ADV', 'COMP:D', 'CLASS:TR', 'PHI:DET:_', '-VAL', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'PHI:GEN:_', 'V', 'PF:move', '+SEM:directional', '-COMP:P', 'COMP:P'}
mukavasti       ['LANG:EN']
mukava-         {'LF:comfortably', 'PF:mukavasti', 'LANG:FI', '0', 'SPEC:D', '2SPEC'}
must            {'-SPEC:v', 'T/fin', 'COMP:Neg', 'MODAL', 'COMP:v', 'PHI:NUM:_', '!COMP:*', 'T', '-SPEC:FORCE', '-SPEC:T/fin', '!PROBE:V', 'COMP:T/prt', 'PHI:DET:_', 'SPEC:*', 'VAL', 'COMP:D', 'FIN', 'SPEC:D', 'PF:must', '-SPEC:Neg', '-SPEC:C/fin', '-COMP:T/fin', 'ARG', '-SPEC:V', 'SPEC:TO/inf', 'PHI:PER:_', 'COMP:V', '-SPEC:TO/inf', 'LANG:EN', 'PHI:GEN:_', 'LF:must', '-COMP:INF', '-SPEC:N', '!SPEC:D'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'LANG:FI', '-COMP:V', 'PHI:NUM:_', '!COMP:*', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'LF:sell', '-VAL', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', 'PF:myy', '-COMP:v', 'ASP:BOUNDED', 'V', '-COMP:P', 'COMP:P'}
naki            ['LANG:FI']
nake-           {'LANG:FI', '-COMP:V', 'PHI:NUM:_', '!COMP:*', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', '-VAL', 'ASP', '-COMP:T/fin', 'ARG', 'PF:nake', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:MA/inf', '-COMP:v', 'ASP:BOUNDED', '-COMP:ESSA/inf', 'V', '-COMP:P', 'LF:see', 'COMP:P'}
nayttaa         ['LANG:FI']
naytta-         {'LANG:FI', '-COMP:V', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'PF:naytta', 'SPEC:P', '-ARG', 'VAL', 'SPEC:ADV', 'SEM:internal', 'ASP', '-COMP:T/fin', 'SPEC:TO/inf', '!COMP:VA/inf', '-COMP:v', 'V', 'COMP:P', '!SPEC:D', 'LF:seem'}
ndo             {'PRG', '-COMP:T/fin', '-SPEC:V', '?ARG', 'COMP:v', 'LF:ing', '-COMP:FORCE', 'COMP:V', '!COMP:*', '-SPEC:T/fin', 'INF', 'LANG:EN', '-COMP:C/fin', 'VAL', 'PF:PRG'}
ne              {'PHI:PER:3', '-COMP:D', 'LANG:FI', '!COMP:*', '-SPEC:T/fin', '-COMP:uR', 'COMP:N', '-SPEC:Neg/fin', '!PROBE:N', '-ARG', 'OP', 'PF:ne', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:D', '-SPEC:C', '-SPEC:MA/lla', 'PHI:NUM:PL', 'LF:those', 'adjoinable', '-SPEC:N', 'D'}
niiden          ['LANG:EN']
nen             {'adjoinable', '-SPEC:D', 'LANG:FI', 'LF:ing', 'PF:a', 'TAIL:D', 'SPEC:*', 'COMP:0', '-SPEC:A', 'A'}
not             {'POL:NEG', 'ARG', 'PHI:PER:_', 'LF:not', '-COMP:D', 'PHI:NUM:_', '!COMP:*', '-COMP:FIN', 'PF:not', '-SPEC:T/fin', 'LANG:EN', 'SPEC:*', 'PHI:DET:_', 'PHI:GEN:_', 'Neg', '-VAL', '-COMP:C'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'CLASS:INTR', '-COMP:D', 'LANG:FI', '-COMP:V', 'PHI:NUM:_', 'PF:nukku', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', '-VAL', 'SPEC:D', 'LF:sleep', '-COMP:T/fin', 'ASP', 'ARG', 'SPEC:TO/inf', '-COMP:T', 'PHI:PER:_', '-COMP:Neg/fin', '-COMP:v', 'V', 'COMP:P'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-COMP:D', 'LANG:FI', '-COMP:V', '-SPEC:R', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'LF:possessions', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'PF:omaisuuden', 'COMP:uR', '-SPEC:N'}
operatoria      ['LANG:IT']
operatoria-     {'LF:operation', 'PF:operatoria', '0', 'SPEC:D', '2SPEC', 'LANG:IT'}
ostaa           ['LANG:FI']
osta-           {'LANG:FI', '-COMP:V', 'PHI:NUM:_', '!COMP:*', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'PF:osta', 'LF:buy', 'SPEC:P', 'CLASS:TR', 'SPEC:ADV', 'COMP:D', 'PHI:DET:_', '-VAL', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'ASP:BOUNDED', 'V', '-COMP:P', 'COMP:P'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-COMP:D', 'LANG:FI', '-COMP:V', '-SPEC:R', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', 'LF:day', '-COMP:A', '-COMP:C/fin', '-COMP:N', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', 'SEM:nonreferential', 'PF:paiva', '-SPEC:P', '-SPEC:V', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
Pariisia        ['LANG:FI']
Pariisi-        {'LF:Paris', '-COMP:D', 'LANG:FI', '-COMP:V', '-SPEC:R', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', 'PF:Pariisi', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-COMP:D', 'LANG:FI', '-COMP:V', '-SPEC:R', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', 'LF:Pekka', '-SEM:directional', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:P', '-SPEC:V', 'PF:Pekka', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
pelottaa        ['LANG:FI']
pelkaa-         {'LANG:FI', '-COMP:V', 'PHI:NUM:_', '!COMP:*', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', '-VAL', 'LF:fear', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', 'PF:pelkaa', '-COMP:v', 'V', '-COMP:P', 'COMP:P'}
persuades       ['LANG:EN']
persuade-       {'LF:persuade', '-COMP:V', 'PHI:NUM:_', '!COMP:*', '-SPEC:T/fin', 'PF:persuade', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'COMP:P', '-VAL', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'LANG:EN', 'SEM:external', 'PHI:GEN:_', 'V', 'COMP:TO/inf'}
peruuntui       ['LANG:FI']
peruuntu-       {'LF:cancelled', 'LANG:FI', '-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', '-VAL', 'SPEC:D', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'PF:peruuntui', 'V', 'COMP:P'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'LANG:FI', '-COMP:V', 'PHI:NUM:_', '!COMP:*', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'PF:pese', '-VAL', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'ASP:BOUNDED', 'LF:wash', 'V', '-COMP:P', 'COMP:P'}
pese-           {'LANG:FI', '-COMP:V', 'PHI:NUM:_', '!COMP:*', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'PF:pese', '-VAL', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'LF:wash', 'V', '-COMP:P', 'COMP:P'}
petardi         {'PF:petardi', '-COMP:D', '-SPEC:R', '-COMP:V', 'LF:firecrackers', 'LANG:IT', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:A', '-COMP:C/fin', '-COMP:N', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
pieni           ['LANG:FI']
pieni-          {'PF:pieni-', '2SPEC', 'LANG:FI', '0', 'SPEC:D', 'LF:small'}
poikien         ['LANG:FI']
poika-          {'-SPEC:N', '-COMP:D', 'LANG:FI', '-COMP:V', '-SPEC:R', 'PF:poika', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', 'LF:boy'}
puhelinta       ['LANG:FI']
puhelin-        {'LANG:FI', 'PF:puhelin', '0', 'SPEC:D', '2SPEC', 'LF:phone'}
punainen        ['LANG:FI']
puna-           {'LANG:FI', 'PF:puna-', '0', 'SPEC:D', '2SPEC', 'LF:red'}
presupposto     {'-COMP:D', '-SPEC:R', '-COMP:V', 'LANG:IT', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:A', '-COMP:C/fin', '-COMP:N', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'LF:presupposition', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N', 'PF:presupposto'}
primary         {'-COMP:D', '-SPEC:R', '-COMP:V', 'LF:nurse', 'LANG:IT', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:A', '-COMP:C/fin', '-COMP:N', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'PF:primary', 'COMP:P', 'COMP:uR', '-SPEC:N'}
promises        ['LANG:EN']
promise-        {'PF:promise', '-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'COMP:D', '-VAL', 'SPEC:D', 'SEM:internal', 'LF:promise', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'LANG:EN', 'PHI:GEN:_', 'V', 'COMP:P'}
pyytaa          ['LANG:FI']
pyyta-          {'LANG:FI', '-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'LF:ask', '-VAL', 'PF:pyyda', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'SEM:external', 'V', 'COMP:P'}
raukesi         ['LANG:FI']
raukea-         {'LANG:FI', '-COMP:V', 'LF:terminate', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', '-VAL', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'V', 'COMP:P', 'PF:raukea'}
red             ['LANG:EN']
red-            {'LANG:EN', 'LF:red', '0', 'SPEC:D', '2SPEC', 'PF:red'}
saavuttaa       ['LANG:FI']
saavutta-       {'LANG:FI', '-COMP:V', 'PHI:NUM:_', '!COMP:*', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', '-VAL', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', 'LF:reach', '-COMP:v', '!COMP:D', 'ASP:BOUNDED', 'V', '-COMP:P', 'PF:saavutta-', 'COMP:P'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'COMP:FORCE', 'LANG:FI', '-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'COMP:VA/inf', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', '-VAL', 'SPEC:D', 'ASP', 'PF:sano-', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', 'LF:say', '-COMP:v', 'V', 'COMP:P'}
said            ['LANG:EN']
say'            {'-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PF:say', 'PHI:DET:_', '-VAL', 'SPEC:D', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '!COMP:FORCE', 'LF:say', '-COMP:v', 'LANG:EN', 'PHI:GEN:_', 'V', 'COMP:P'}
say-            {'-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PF:say', 'PHI:DET:_', '-VAL', 'SPEC:D', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '!COMP:FORCE', 'LF:say', '-COMP:v', 'LANG:EN', 'PHI:GEN:_', 'V', 'COMP:P'}
sala            ['LANG:IT']
sala-           {'-COMP:D', '-SPEC:R', '-COMP:V', 'LANG:IT', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:A', '-COMP:C/fin', '-COMP:N', 'PF:sala', '-COMP:WH', 'SPEC:A', 'LF:room', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
scoppiati       ['LANG:IT']
scoppia-        {'-COMP:V', 'PHI:NUM:_', 'LANG:IT', 'LF:explode', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', '-VAL', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'PHI:GEN:_', 'PF:scoppia', 'V', 'COMP:P'}
sen             {'adjoinable', 'LF:the/that', 'LANG:FI', '-COMP:D', 'PF:sen', '!COMP:*', '-SPEC:T/fin', '-COMP:uR', 'COMP:N', '-SPEC:Neg/fin', '-ARG', 'OP', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:D', 'TAIL:PHI', 'TAIL:ASP', '-SPEC:C', '-SPEC:MA/lla', '!PROBE:N', 'TAIL:*POL:NEG', '-SPEC:N', 'D'}
se'             {'LF:the/that', 'LANG:FI', '-COMP:D', '!COMP:*', '-SPEC:T/fin', '-COMP:uR', 'COMP:N', '-SPEC:Neg/fin', '-ARG', 'PF:se', 'OP', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:D', '-SPEC:C', '-SPEC:MA/lla', '!PROBE:N', 'adjoinable', '-SPEC:N', 'D'}
sentenza        {'-COMP:D', '-SPEC:R', '-COMP:V', 'LANG:IT', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:A', '-COMP:C/fin', '-COMP:N', 'PF:sentenza', '-COMP:WH', 'COMP:P', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'LF:sentence', 'COMP:uR', '-SPEC:N'}
Seine           ['LANG:EN']
Seine-          {'-COMP:D', '-SPEC:R', '-COMP:V', 'LF:Seine', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', 'PF:Seine', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'LANG:EN', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
sembrano        ['LANG:IT']
sembra-         {'!COMP:ARE/inf', '-COMP:D', '-COMP:V', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-ARG', '-VAL', 'SPEC:D', '-COMP:T/fin', 'SPEC:TO/inf', '-ASP', '-COMP:v', 'LANG:EN', 'V', 'COMP:P', 'PF:sembra', 'LF:seem'}
sleeps          ['LANG:EN']
sleep           {'CLASS:INTR', '-COMP:D', '-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', 'PF:sleep', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', '-VAL', 'SPEC:D', 'LF:sleep', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'LANG:EN', 'PHI:GEN:_', 'V', 'COMP:P'}
sleep-          {'CLASS:INTR', '-COMP:D', '-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', 'PF:sleep', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', '-VAL', 'SPEC:D', 'LF:sleep', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'LANG:EN', 'PHI:GEN:_', 'V', 'COMP:P'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-COMP:D', 'LANG:FI', '-COMP:V', '-SPEC:R', 'PF:sopimus', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '!COMP:A/inf', '-SPEC:P', '-SPEC:V', '-SPEC:ADV', 'LF:agreement', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
spinge          ['LANG:IT']
spinge-         {'-COMP:V', 'PHI:NUM:_', 'LANG:IT', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:spinge', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', '-VAL', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', '!COMP:D', 'PHI:GEN:_', 'V', '-COMP:P', 'LF:push'}
ssa             {'-SPEC:iR', 'P', '-COMP:uWH', 'adjoinable', 'LANG:FI', 'PHI:NUM:_', '!COMP:*', '-SPEC:FORCE', '-SPEC:T/fin', '-SPEC:Neg/fin', '-COMP:N', '-SPEC:iWH', 'SPEC:*', 'TAIL:V', 'COMP:D', 'PHI:DET:_', '-VAL', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:INF', '-COMP:T/fin', 'ARG', '-SPEC:V', '-SPEC:P', 'PHI:PER:_', '-SPEC:ADV', 'COMP:n/MA', '-SPEC:C', 'PF:ssa', '-SPEC:N', '-SPEC:v', 'LF:in'}
stanno          ['LANG:IT']
sta-            {'LF:stay', '-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', '-VAL', 'SPEC:D', 'COMP:PRG', 'SEM:internal', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', 'PF:sta', '-ASP', '-COMP:v', 'LANG:EN', 'PHI:GEN:_', 'V', 'COMP:P'}
sti             {'TAIL:T', 'adjoinable', 'LANG:FI', '!COMP:*', 'LF:by', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:*', '-ARG', 'ADV', '-SPEC:N', 'PF:sti', '-SPEC:Neg/fin'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-COMP:D', 'LANG:FI', 'PF:sukka-', '-COMP:V', '-SPEC:R', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'LF:socks', 'COMP:P', 'COMP:uR', '-SPEC:N'}
talo            {'-COMP:D', 'LANG:FI', '-COMP:V', '-SPEC:R', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-COMP:A', 'PF:talo', '-COMP:C/fin', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', 'LF:house', '-SPEC:P', '-SPEC:V', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
tama            ['LANG:EN']
tama-           {'PHI', 'LANG:FI', '-COMP:V', '-COMP:D', '-SPEC:R', 'COMP:uR', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', 'LF:this', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'PF:tama', '-SPEC:N'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'MODAL', 'LANG:FI', '-COMP:V', 'PHI:NUM:_', 'PF:taytyy', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:*', 'SPEC:P', 'FIN', 'SPEC:ADV', 'PHI:DET:_', '-VAL', '-COMP:T/fin', 'ARG', '!COMP:A/inf', 'SPEC:TO/inf', 'PHI:PER:_', '-ASP', '-COMP:v', 'LF:must', 'V', 'COMP:P'}
teki            ['LANG:FI']
teke-           {'-COMP:A/inf', 'LANG:FI', '-COMP:V', 'PHI:NUM:_', '!COMP:*', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', '-VAL', 'LF:make', 'ASP', 'PF:teke', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', '!COMP:D', 'ASP:BOUNDED', 'V', '-COMP:P', 'COMP:P'}
that            {'PF:that', '-SPEC:*', 'COMP:C/fin', '!COMP:*', 'LANG:EN', 'LF:that', 'COMP:T/fin', '-ARG', 'FIN', '!PROBE:T/fin', '-VAL', 'FORCE'}
the             {'-COMP:D', '!COMP:*', '-SPEC:T/fin', '-COMP:uR', 'COMP:N', '-SPEC:Neg/fin', '-ARG', 'PF:the', 'OP', 'PHI:DEF:DEF', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:D', '-SPEC:C', 'LANG:EN', '-SPEC:MA/lla', 'LF:the', '!PROBE:N', 'adjoinable', '-SPEC:N', 'D'}
to              {'-SPEC:iR', 'P', '-SPEC:N', '-SPEC:*', '-COMP:uWH', 'PHI:NUM:_', '!COMP:*', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-SPEC:iWH', 'PHI:DET:_', 'COMP:D', '-float', '-VAL', '-COMP:ADV', 'TAIL:V,+SEM:directional', '-SPEC:C/fin', '-SPEC:INF', '-COMP:T/fin', 'ARG', '-SPEC:V', '-SPEC:P', 'PHI:PER:_', '-SPEC:ADV', '-SPEC:C', 'LANG:EN', 'PHI:GEN:_', 'LF:to', '+SEM:directional', 'adjoinable', 'PF:to', '-SPEC:v', '-SPEC:Neg/fin'}
to_inf          {'TO/inf', '?ARG', 'COMP:v', '!COMP:*', '-SPEC:T/fin', 'INF', '-COMP:C/fin', '-VAL', 'LF:TO/inf', 'PF:TO/inf', '-COMP:T/fin', '-SPEC:V', '-COMP:FORCE', 'COMP:V', 'LANG:EN', 'adjoinable', '-SPEC:v'}
towards         {'-SPEC:iR', 'P', '-COMP:uWH', '-SPEC:*', 'PHI:NUM:_', '!COMP:*', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', 'LF:towards', '-SPEC:iWH', 'TAIL:V', 'COMP:D', 'PHI:DET:_', '-float', '-VAL', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:INF', 'PF:towards', '-COMP:T/fin', 'ARG', '-SPEC:V', '-SPEC:P', 'PHI:PER:_', '-SPEC:ADV', '-SPEC:C', 'LANG:EN', 'PHI:GEN:_', 'adjoinable', '-SPEC:N', '-SPEC:v', '-SPEC:Neg/fin'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'LANG:FI', '-COMP:V', 'PHI:NUM:_', '!COMP:*', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'LF:nudge', 'PF:tonaise', '-VAL', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'V', '-COMP:P', 'COMP:P'}
tta             {'-SPEC:iR', 'LF:without', 'P', '-COMP:uWH', 'adjoinable', 'LANG:FI', 'PHI:NUM:_', '!COMP:*', '-SPEC:FORCE', '-SPEC:T/fin', 'PF:tta', '-SPEC:iWH', 'SPEC:*', '-COMP:N', 'COMP:D', 'PHI:DET:_', '-VAL', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:INF', '-COMP:T/fin', 'ARG', '-SPEC:V', '-SPEC:P', 'PHI:PER:_', '-SPEC:ADV', 'COMP:n/MA', '-SPEC:C', 'ADV', '-SPEC:N', '-SPEC:v', '-SPEC:Neg/fin'}
tries           ['LANG:EN']
try-            {'!COMP:TO/inf', '-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', '-VAL', 'SPEC:D', 'SEM:internal', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'PF:try', 'LANG:EN', 'PHI:GEN:_', 'LF:try', 'V', '!COMP:-ARG', 'COMP:P'}
verifiche       {'-COMP:D', '-SPEC:R', '-COMP:V', 'LANG:IT', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:A', '-COMP:C/fin', '-COMP:N', '-COMP:WH', 'PF:verifiche', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'LF:verification', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'-COMP:D', 'LANG:FI', '-COMP:V', 'PHI:NUM:_', '!COMP:P', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'PF:virtaa', '-VAL', 'SPEC:D', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'LF:flow', 'V', 'COMP:P'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'-SPEC:*', '-COMP:V', 'PHI:NUM:_', '!COMP:*', 'LF:want', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', '-VAL', 'SEM:internal', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'LANG:EN', 'PHI:GEN:_', 'V', 'COMP:P', 'PF:volu'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'-COMP:V', 'PHI:NUM:_', 'PF:voitta', '!COMP:*', '-SPEC:T/fin', '-SPEC:FORCE', 'SEM:achievement', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'LF:win', 'CLASS:TR', 'COMP:D', '-VAL', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'ASP:BOUNDED', 'LANG:EN', 'PHI:GEN:_', 'V', '-COMP:P', 'COMP:P'}
wants           ['LANG:EN']
want-           {'-COMP:V', 'PHI:NUM:_', '!COMP:*', 'LF:want', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'COMP:P', '-VAL', 'ASP', '-COMP:T/fin', 'ARG', 'PHI:PER:_', '-SPEC:TO/inf', 'PF:want', '-COMP:v', 'LANG:EN', 'PHI:GEN:_', 'V', '-COMP:P', 'COMP:TO/inf'}
what            ['LANG:EN']
what-           {'-COMP:D', '-SPEC:R', '-COMP:V', 'PHI_N', '-COMP:*', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', 'LF:what', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', 'PF:what', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'LANG:EN', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
which           {'-COMP:D', '!COMP:*', '-SPEC:T/fin', '-COMP:uR', 'COMP:N', '-SPEC:Neg/fin', 'LF:which', '!PROBE:N', '-ARG', 'OP', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', 'PF:which', '-SPEC:D', '-SPEC:C', 'LANG:EN', '-SPEC:MA/lla', 'OP:WH', 'adjoinable', '-SPEC:N', 'D'}
who             ['LANG:EN']
who-            {'-COMP:D', '-SPEC:R', '-COMP:V', 'PHI_N', 'LF:who', '-COMP:*', 'PF:who', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:T/fin', '-COMP:A', '-COMP:C/fin', '-COMP:N', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'LANG:EN', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
whether         {'-SPEC:*', '!COMP:*', 'LF:whether', '-ARG', 'FIN', 'OP:Q', '!PROBE:T/fin', 'OP', '-VAL', 'COMP:C/fin', 'LANG:EN', 'COMP:T/fin', 'OP:WH', 'Q', 'PF:whether', 'FORCE'}
yrittaa         ['LANG:FI']
yritta-         {'-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', '-VAL', 'SPEC:D', 'SEM:internal', 'ASP', 'PF:yritta', '-COMP:T/fin', 'ARG', '!COMP:A/inf', 'SPEC:TO/inf', 'PHI:PER:_', '-COMP:v', 'LANG:EN', 'PHI:GEN:_', 'LF:try', 'V', '!COMP:-ARG', 'COMP:P'}
mina            ['LANG:EN']
mina-           {'-COMP:D', 'LANG:FI', '-COMP:V', 'PHI_N', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', 'SPEC:A', '-COMP:ADV', 'PF:mina', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', 'LF:I', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
sina            ['LANG:EN']
sina-           {'-COMP:D', 'LANG:FI', '-COMP:V', 'PHI_N', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', 'PF:sina', '-COMP:T/fin', '-SPEC:V', 'LF:you', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
han             ['LANG:EN']
han-            {'PF:han', '-COMP:D', 'LANG:FI', '-COMP:V', 'PHI_N', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', 'LF:s/he', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-COMP:D', 'LANG:FI', '-COMP:V', 'PHI_N', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', 'PF:me', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', 'LF:we', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
te              ['LANG:EN']
te-             {'-COMP:D', 'LANG:FI', '-COMP:V', 'PHI_N', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', 'LF:you', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', 'PF:te', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he-             {'-COMP:D', 'LANG:FI', '-COMP:V', 'PHI_N', '-SPEC:R', '-COMP:*', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', 'PF:he', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', 'LF:they', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
he-             {'-COMP:D', '-SPEC:R', '-COMP:V', 'PHI_N', '-COMP:*', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', 'LF:he', '-COMP:WH', 'PF:he', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'LANG:EN', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
se              ['LANG:FI']
se-             {'LF:it/that', '-COMP:D', 'LANG:FI', '!COMP:*', '-SPEC:T/fin', '-COMP:uR', 'COMP:N', '-SPEC:Neg/fin', '-ARG', 'PF:se', 'OP', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:D', '-SPEC:C', '-SPEC:MA/lla', '!PROBE:N', 'adjoinable', '-SPEC:N', 'D'}
I               ['LANG:EN']
I-              {'-COMP:D', '-SPEC:R', '-COMP:V', 'PHI_N', '-COMP:*', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:T/fin', 'PF:I', '-COMP:A', '-COMP:C/fin', '-COMP:N', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', 'LF:I', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'LANG:EN', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
you             ['LANG:EN']
you-            {'-SPEC:N', '-COMP:D', '-SPEC:R', '-COMP:V', 'PHI_N', '-COMP:*', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', 'LF:you', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'LANG:EN', 'COMP:R', 'COMP:P', 'COMP:uR', 'PF:you'}
he              ['LANG:EN']
she             ['LANG:EN']
she-            {'-COMP:D', '-SPEC:R', '-COMP:V', 'PHI_N', 'LF:she', '-COMP:*', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', 'PF:she', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'LANG:EN', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
we              ['LANG:EN']
we-             {'-COMP:D', '-SPEC:R', '-COMP:V', 'PHI_N', '-COMP:*', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', 'PF:we', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', 'LF:we', '-COMP:v', '-SPEC:uWH', 'LANG:EN', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
you_pl          ['LANG:EN']
you_pl-         {'-SPEC:N', 'PHI', 'PF:you_pl', '-COMP:V', '-COMP:D', '-SPEC:R', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'LANG:EN', 'COMP:R', 'COMP:P', 'COMP:uR', 'LF:you_pl'}
they            ['LANG:EN']
they-           {'-COMP:D', '-SPEC:R', '-COMP:V', 'PHI_N', '-COMP:*', '-SPEC:FORCE', 'COMP:R/D', 'PF:they', '-SPEC:T/fin', '-COMP:A', '-COMP:C/fin', '-COMP:N', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', 'LF:they', '-SPEC:uWH', 'LANG:EN', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
it              ['LANG:EN']
it-             {'LF:it/that', '-COMP:D', '!COMP:*', '-SPEC:T/fin', '-COMP:uR', 'COMP:N', 'PF:it', '-SPEC:Neg/fin', '-ARG', 'OP', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:D', '-SPEC:C', 'LANG:EN', '-SPEC:MA/lla', '!PROBE:N', 'adjoinable', '-SPEC:N', 'D'}
io              ['LANG:EN']
io-             {'-COMP:D', '-SPEC:R', '-COMP:V', 'PHI_N', '-COMP:*', 'LANG:IT', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:T/fin', '-COMP:A', '-COMP:C/fin', '-COMP:N', 'PF:io', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', 'LF:I', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
tu              ['LANG:EN']
tu-             {'-COMP:D', '-SPEC:R', '-COMP:V', 'PHI_N', '-COMP:*', 'LANG:IT', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:T/fin', '-COMP:A', '-COMP:C/fin', '-COMP:N', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', 'LF:you', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N', 'PF:tu'}
lui             ['LANG:EN']
lui-            {'PF:lui', '-COMP:D', '-SPEC:R', '-COMP:V', 'PHI_N', '-COMP:*', 'LANG:IT', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:T/fin', '-COMP:A', '-COMP:C/fin', '-COMP:N', 'LF:he', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
lei             ['LANG:EN']
lei-            {'-COMP:D', '-SPEC:R', '-COMP:V', 'PHI_N', 'LF:she', '-COMP:*', 'LANG:IT', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:T/fin', '-COMP:A', 'PF:lei', '-COMP:C/fin', '-COMP:N', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
noi             ['LANG:EN']
noi-            {'-COMP:D', '-SPEC:R', '-COMP:V', 'PF:noi', 'PHI_N', '-COMP:*', 'LANG:IT', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:T/fin', '-COMP:A', '-COMP:C/fin', '-COMP:N', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', 'LF:we', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
voi             ['LANG:EN']
voi-            {'-SPEC:N', '-COMP:D', '-SPEC:R', '-COMP:V', 'PHI_N', '-COMP:*', 'LANG:IT', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:T/fin', '-COMP:A', '-COMP:C/fin', '-COMP:N', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'COMP:R', 'PF:voi', 'COMP:P', 'COMP:uR', 'LF:you_pl'}
loro            ['LANG:EN']
loro-           {'-COMP:D', '-SPEC:R', '-COMP:V', 'PHI_N', '-COMP:*', 'LANG:IT', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:T/fin', '-COMP:A', '-COMP:C/fin', '-COMP:N', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', 'PF:loro', '-SPEC:P', '-SPEC:V', '-SPEC:ADV', 'N', '-COMP:v', 'LF:they', '-SPEC:uWH', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
mi              ['LANG:EN']
mi-             {'LF:me', 'PF:mi(cl)', '-COMP:V', 'PHI_N', '-COMP:*', 'LANG:IT', '-SPEC:FORCE', 'COMP:R/D', '-COMP:A', '-COMP:C/fin', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', 'COMP:R', 'COMP:P', '-SPEC:N', 'CL', '-COMP:D', '-SPEC:R', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:uWH', 'COMP:uR'}
la              ['LANG:EN']
la-             {'-COMP:V', 'PHI_N', '-COMP:*', 'LANG:IT', '-SPEC:FORCE', 'COMP:R/D', '-COMP:A', '-COMP:C/fin', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', 'COMP:R', 'COMP:P', '-SPEC:N', 'CL', '-COMP:D', '-SPEC:R', '-SPEC:T/fin', '-COMP:N', 'PF:la(cl)', '-COMP:WH', 'LF:her', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:uWH', 'COMP:uR'}
lo              ['LANG:EN']
lo-             {'-COMP:V', 'PHI_N', '-COMP:*', 'LANG:IT', '-SPEC:FORCE', 'COMP:R/D', '-COMP:A', '-COMP:C/fin', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', 'LF:him', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', 'COMP:R', 'COMP:P', '-SPEC:N', 'CL', '-COMP:D', '-SPEC:R', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:uWH', 'PF:lo(cl)', 'COMP:uR'}
si              ['LANG:EN']
si-             {'-COMP:V', 'PHI_N', '-COMP:*', 'LANG:IT', '-SPEC:FORCE', 'COMP:R/D', '-COMP:A', '-COMP:C/fin', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:P', 'LF:3sg', '-SPEC:ADV', 'N', '-COMP:v', 'COMP:R', 'COMP:P', '-SPEC:N', 'PF:si(cl)', '-COMP:D', '-SPEC:R', 'CAL:CL', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:uWH', 'COMP:uR'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'LF:there', '-COMP:D', '-SPEC:R', '-COMP:V', 'PHI_N', '-COMP:*', 'LANG:IT', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:T/fin', '-COMP:A', '-COMP:C/fin', '-COMP:N', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'N', '-COMP:v', '-SPEC:uWH', 'PF:ci', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
[-n]            {'PHI:NUM:SG', 'PHI', 'LANG:FI', 'inflectional', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-t]            {'PHI:NUM:SG', 'PHI', 'LANG:FI', 'inflectional', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:DET:DEF'}
[-V]            {'PHI:PER:3', 'PHI:NUM:SG', 'PHI', 'LANG:FI', 'inflectional'}
[-mme]          {'PHI:NUM:PL', 'PHI', 'LANG:FI', 'inflectional', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-mme]          {'PHI:NUM:PL', 'inflectional', 'LANG:FI', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-tte]          {'PHI:NUM:PL', 'PHI', 'LANG:FI', 'inflectional', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:DET:DEF'}
[-vat]          {'PHI:PER:3', 'PHI', 'LANG:FI', 'inflectional', 'PHI:NUM:PL'}
[-ni]           {'PHI:NUM:SG', 'PHI', 'LANG:FI', 'inflectional', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-si]           {'PHI:NUM:SG', 'PHI', 'LANG:FI', 'inflectional', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:DET:DEF'}
[-nsa]          {'PHI:PER:3', 'PHI:NUM:SG', 'PHI', 'LANG:FI', 'inflectional'}
[-an]           {'PHI:PER:3', 'PHI', 'inflectional', 'LANG:FI'}
[-nne]          {'PHI:NUM:PL', 'inflectional', 'LANG:FI', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-s]            {'LANG:EN', 'PHI:PER:3', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI', 'PHI:GEN:F', 'inflectional'}
[-0]            {'PHI:PER:3', 'PHI', 'PHI:PER:1', 'PHI:DET:DEF', 'LANG:EN', 'PHI:NUM:SG', 'inflectional', 'PHI:NUM:PL', 'PHI:PER:2', 'PHI:GEN:N'}
[-o]            {'PHI:NUM:SG', 'PHI', 'inflectional', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT'}
[-i]            {'PHI:NUM:SG', 'PHI', 'inflectional', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT'}
[-a]            {'PHI:PER:3', 'PHI:NUM:SG', 'PHI', 'inflectional', 'LANG:IT', 'PHI:DET:DEF'}
[-e]            {'PHI:PER:3', 'PHI:NUM:SG', 'PHI', 'inflectional', 'LANG:IT', 'PHI:DET:DEF'}
[-iamo]         {'PHI:NUM:PL', 'PHI', 'inflectional', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT'}
[-te]           {'PHI:NUM:PL', 'PHI', 'inflectional', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT'}
[-no]           {'PHI:NUM:PL', 'PHI:PER:3', 'PHI', 'inflectional', 'LANG:IT', 'PHI:DET:DEF'}
[-nom]          {'LANG:EN', 'TAIL:FIN,ARG,VAL', 'inflectional', 'adjoinable', 'NOM'}
[-par]          {'PAR', 'inflectional', 'LANG:FI', 'adjoinable', 'TAIL:ARG,-VAL'}
[-gen]          {'LANG:EN', 'GEN', 'TAIL:INF,ARG', '-float', 'inflectional'}
gen             {'LANG:EN', 'GEN', 'TAIL:INF,ARG', '-float', 'inflectional'}
[-n_acc]        {'LANG:FI', 'TAIL:*POL:NEG', 'inflectional', 'TAIL:PHI', 'adjoinable', 'TAIL:ARG,ASP:BOUNDED', 'n-ACC'}
[-t_acc]        {'TAIL:*POL:NEG', 't-ACC', 'inflectional', 'LANG:FI', 'adjoinable', 'TAIL:ARG,ASP:BOUNDED'}
[-0_acc]        {'TAIL:*POL:NEG', 'TAIL:*PHI', '0_ACC', 'inflectional', 'LANG:FI', 'adjoinable', 'TAIL:ARG,ASP:BOUNDED'}
asp             {'LANG:EN', 'inflectional', 'ASP:BOUNDED'}
a'              {'LANG:X', 'PF:a', 'LF:A', 'a'}
b'              {'LF:B', 'PF:b', 'LANG:X', 'b'}
b''             {'LANG:EN', 'LF:B', 'b', '-COMP:c', 'PF:b'}
c''             {'LANG:EN', 'SPEC:a', 'LF:C', 'c', 'PF:c'}
c'              {'c', 'PF:c', 'LANG:X', 'LF:C'}
d'              {'d', 'LF:D', 'PF:d', 'LANG:'}
a''             ['LANG:EN']
x'              {'x', 'LANG:X', 'PF:x', 'LF:X'}
y'              {'y', 'PF:y', 'LANG:X', 'LF:Y'}
z'              {'LANG:X', 'PF:x', 'z', 'LF:Z'}
John'           {'PF:John', "N'", 'LF:John', 'LANG:X'}
admires'        {'LANG:X', "V'", 'LF:admires', 'PF:admires'}
admires''       {'-COMP:V', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:P', 'SPEC:ADV', 'PHI:DET:_', '-VAL', 'SPEC:D', 'ASP', '-COMP:T/fin', 'ARG', 'SPEC:TO/inf', 'PHI:PER:_', 'LF:admires', '-COMP:v', 'LANG:EN', 'PHI:GEN:_', 'V', 'COMP:P', 'PF:admires'}
Mary'           {"N'", 'LANG:X', 'LF:mary', 'PF:Mary'}
T/fin           {'-SPEC:v', 'T/fin', 'COMP:v', 'PHI:NUM:_', '!COMP:*', 'T', '-SPEC:FORCE', '-SPEC:T/fin', '!PROBE:V', 'COMP:T/prt', 'PHI:DET:_', 'SPEC:*', 'VAL', 'COMP:D', 'FIN', 'LF:T', 'SPEC:D', '-SPEC:Neg', '-SPEC:C/fin', '-COMP:T/fin', 'ARG', '-SPEC:V', 'SPEC:TO/inf', 'PHI:PER:_', 'COMP:V', '-SPEC:TO/inf', 'LANG:EN', 'PHI:GEN:_', '-COMP:INF', 'PF:T', '-SPEC:N', '!SPEC:D'}
v               {'ASP', '-SPEC:N', 'ARG', 'PF:v', 'PHI:PER:_', 'COMP:V', 'PHI:NUM:_', '!COMP:*', '!PROBE:V', 'LF:v', 'LANG:EN', 'PHI:DET:_', 'PHI:GEN:_', '-VAL', 'SPEC:D', 'v'}
C/fin           {'C/fin', 'PF:C', '!COMP:*', '-SPEC:T/fin', 'SPEC:*', '-COMP:C/fin', 'VAL', '-ARG', 'FIN', '!PROBE:FIN', 'COMP:Neg/fin', '-SPEC:C/fin', '-COMP:T/prt', 'LANG:EN', 'COMP:T/fin', 'LF:C/fin', '-SPEC:N', 'C'}
T               {'COMP:v', 'PHI:NUM:_', 'T', '!COMP:*', '-SPEC:T/fin', '-SPEC:FORCE', '!PROBE:V', 'COMP:T/prt', 'PHI:DET:_', 'SPEC:*', 'FIN', 'VAL', 'COMP:D', 'LF:T', 'SPEC:D', '-COMP:NEG', 'ARG', '-SPEC:V', 'PHI:PER:_', 'COMP:V', 'LANG:EN', 'PHI:GEN:_', 'PF:T', '-SPEC:N'}
T/prt           {'COMP:v', 'PHI:NUM:_', 'LF:T/prt', '!COMP:*', 'T', 'PF:T/prt', '-SPEC:FORCE', '-SPEC:T/fin', '!PROBE:V', 'COMP:T/prt', 'SPEC:*', 'FIN', 'VAL', 'COMP:D', 'PHI:DET:_', 'SPEC:D', '-COMP:NEG', 'ARG', '-SPEC:V', 'PHI:PER:_', 'COMP:V', 'LANG:EN', 'PHI:GEN:_', 'T/prt', '-SPEC:N'}
a0              {'-adjoinable', 'LF:A', 'adjoinable', '-SPEC:D', 'TAIL:D', 'LANG:EN', 'COMP:0', '-SPEC:A', 'A', 'PF:A'}
n               {'COMP:v', '-COMP:V', 'PHI:NUM:_', '!COMP:*', '-SPEC:FORCE', 'COMP:R/D', '-COMP:A', '-COMP:C/fin', 'SPEC:*', '!SPEC:*', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:P', 'PHI:PER:_', 'COMP:V', '-SPEC:ADV', 'N', '-COMP:v', 'n', 'PHI:GEN:_', 'COMP:R', 'COMP:P', '-SPEC:N', '!SPEC:D', 'LF:n', '-COMP:D', '-SPEC:R', '-SPEC:T/fin', 'INF', '-COMP:N', 'PHI:DET:_', 'COMP:0', 'VAL', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', 'ARG', '-SPEC:V', '-SPEC:uWH', 'LANG:EN', 'COMP:uR', 'PF:n'}
impass          {'ASP', '-SPEC:N', 'ARG', 'PHI:PER:_', 'LF:impass', 'PF:impass', 'COMP:V', 'PHI:NUM:_', '!COMP:*', '!PROBE:V', 'LANG:EN', 'PHI:DET:_', 'PHI:GEN:_', '-VAL', 'SPEC:D', 'v'}
cau             {'ASP', '-SPEC:N', 'ARG', 'PHI:PER:_', 'COMP:V', 'PHI:NUM:_', '!COMP:*', '!PROBE:V', 'LANG:EN', 'PHI:DET:_', 'PHI:GEN:_', 'LF:v/Cause', 'PF:Cau', '-VAL', 'SPEC:D', 'v'}
INF             {'-COMP:T/fin', 'PF:INF', '-SPEC:V', 'LF:INF', 'COMP:v', '-COMP:FORCE', 'COMP:V', '!COMP:*', '-SPEC:T/fin', 'INF', 'LANG:EN', '-COMP:C/fin'}
prtcpl          {'COMP:v', 'PHI:NUM:_', 'T', 'LF:T/prt', '!COMP:*', 'PF:T/prt', 'INF', '-SPEC:FORCE', 'SPEC:*', '-COMP:C/fin', '-SPEC:T/fin', 'COMP:D', '!PROBE:V', 'COMP:T/prt', 'FIN', 'VAL', 'PHI:DET:_', 'SPEC:D', '-COMP:NEG', '-COMP:T/fin', 'ARG', '-SPEC:V', 'PHI:PER:_', '-COMP:FORCE', 'COMP:V', 'LANG:EN', 'PHI:GEN:_', 'T/prt', '-SPEC:N'}
TO/inf          {'TO/inf', '?ARG', 'COMP:v', '!COMP:*', '-SPEC:T/fin', 'INF', '-COMP:C/fin', '-VAL', 'LF:TO/inf', 'PF:TO/inf', '-COMP:T/fin', '-SPEC:V', '-COMP:FORCE', 'COMP:V', '!COMP:V', 'LANG:EN', 'adjoinable', '-SPEC:v'}
A/inf           {'?ARG', 'COMP:v', '!COMP:*', '-SPEC:T/fin', 'INF', 'SPEC:*', '-COMP:C/fin', 'A/inf', '?VAL', 'LF:A/inf', '-COMP:T/fin', 'PF:A/inf', '-SPEC:V', '-COMP:FORCE', 'COMP:V', 'LANG:EN', '-SPEC:Neg/fin'}
ARE/inf         {'PF:are', '-adjoinable', '?ARG', 'COMP:v', '!COMP:*', '-SPEC:T/fin', 'INF', 'SPEC:*', '-COMP:C/fin', 'VAL', '-COMP:T/fin', '-SPEC:V', '-COMP:FORCE', 'COMP:V', 'LANG:EN', 'LF:ARE/inf', 'ARE/inf'}
ESSA/inf        {'TAIL:T', 'adjoinable', '?ARG', 'COMP:v', '!COMP:*', '-SPEC:T/fin', '-SPEC:FORCE', 'INF', 'SPEC:*', '-COMP:C/fin', '?VAL', 'PF:essa', '-COMP:T/fin', '-SPEC:V', 'LF:while', 'ESSA/inf', '-COMP:FORCE', 'COMP:V', 'LANG:EN', 'ADV', '-SPEC:N', '-SPEC:Neg/fin'}
TUA/inf         {'TAIL:T', 'adjoinable', 'COMP:v', 'PHI:NUM:_', '!COMP:*', '-SPEC:T/fin', 'LF:after', 'INF', '-SPEC:FORCE', 'PHI:DET:_', '-COMP:C/fin', 'CAL', '!SPEC:*', '-COMP:T/fin', 'ARG', '-SPEC:V', 'PHI:PER:_', '-COMP:FORCE', 'COMP:V', 'PF:tua', 'LANG:EN', 'TUA/inf', 'PHI:GEN:_', 'ADV', '-SPEC:N', '-SPEC:Neg/fin'}
VA/inf          {'COMP:v', 'PHI:NUM:_', '!COMP:*', '-SPEC:T/fin', 'INF', 'PHI:DET:_', '-COMP:C/fin', 'VAL', 'VA/inf', 'PF:vAn', '!SPEC:*', 'SPEC:*', 'LF:VA', '-COMP:T/fin', 'ARG', '-SPEC:V', 'PHI:PER:_', '-COMP:FORCE', 'COMP:V', 'LANG:EN', 'PHI:GEN:_', '-SPEC:N'}
MA/ssa          {'-SPEC:*', 'COMP:v', 'PHI:NUM:_', '-SPEC:T/fin', 'MA/inf', '-SPEC:FORCE', 'PHI:DET:_', 'TAIL:V', '-VAL', 'ADV', 'ARG', 'PHI:PER:_', 'COMP:V', 'PF:massa', 'LANG:EN', 'PHI:GEN:_', 'LF:in_doing', 'adjoinable', '-SPEC:N', '-SPEC:Neg/fin'}
MA/tta          {'TAIL:T', 'LF:without_doing', 'ARG', 'adjoinable', 'PHI:PER:_', 'PF:matta', 'PHI:NUM:_', '-SPEC:T/fin', 'MA/inf', '-SPEC:FORCE', 'LANG:EN', 'PHI:DET:_', 'PHI:GEN:_', 'ADV', '-VAL', '-SPEC:N', '-SPEC:Neg/fin'}
MA/lla          {'PF:malla', 'TAIL:T', 'COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', 'MA/inf', 'LF:by_doing', 'ADV', 'PHI:PER:_', 'COMP:V', 'PHI:GEN:_', '-SPEC:N', '-SPEC:T/fin', 'PHI:DET:_', '-VAL', 'ARG', 'LANG:EN', 'adjoinable', '-SPEC:Neg/fin'}
MA/inf          {'COMP:v', 'PHI:NUM:_', '-SPEC:FORCE', 'MA/inf', 'PF:maan', 'TAIL:V', 'ADV', 'PHI:PER:_', 'COMP:V', 'PHI:GEN:_', '-SPEC:N', '-SPEC:T/fin', 'PHI:DET:_', '-VAL', 'ARG', 'LF:to_do', 'LANG:EN', 'adjoinable', '-SPEC:Neg/fin'}
E/inf           {'adjoinable', 'LANG:FI', 'PF:en', 'LF:by', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:*', '-ARG', 'ADV', '-VAL', '-SPEC:N', '-SPEC:Neg/fin'}
BE-             {'-COMP:V', '!COMP:*', '-SPEC:T/fin', 'COPULA', 'LF:BE', 'COMP:T/prt', 'PF:BE', '-SPEC:FORCE', '-ARG', '-COMP:N', 'SPEC:P', 'SPEC:ADV', '-VAL', 'SPEC:D', 'ASP', '-COMP:T/fin', 'SPEC:TO/inf', '-COMP:v', 'LANG:EN', 'V', 'COMP:P'}
D               {'-COMP:D', '!COMP:*', 'LF:D', '-SPEC:T/fin', '-COMP:uR', 'COMP:N', '-SPEC:Neg/fin', '-ARG', 'OP', '-SPEC:INF', '-COMP:T/fin', 'PF:D', '-SPEC:V', '-SPEC:P', '-SPEC:D', '-SPEC:C', 'LANG:EN', '-SPEC:MA/lla', '!PROBE:N', 'adjoinable', '-SPEC:N', 'D'}
P               {'-SPEC:iR', 'P', '-COMP:uWH', '-SPEC:*', 'PHI:NUM:_', '!COMP:*', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-SPEC:iWH', 'PHI:DET:_', 'COMP:D', '-float', '-VAL', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:INF', '-COMP:T/fin', 'ARG', '-SPEC:V', '-SPEC:P', 'PHI:PER:_', '-SPEC:ADV', 'PF:P', '-SPEC:C', 'LANG:EN', 'PHI:GEN:_', 'LF:P', 'adjoinable', '-SPEC:N', '-SPEC:v', '-SPEC:Neg/fin'}
pro             ['LANG:EN']
pro-            {'PHI', '-COMP:D', '-COMP:V', '-SPEC:R', 'PF:(pro)', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:N', '-COMP:A', '-COMP:C/fin', '-COMP:WH', 'SPEC:A', '-COMP:ADV', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:INF', '-COMP:T/fin', '-SPEC:V', '-SPEC:P', '-SPEC:ADV', 'LF:pro', 'N', '-COMP:v', '-SPEC:uWH', 'LANG:EN', 'COMP:R', 'COMP:P', 'COMP:uR', '-SPEC:N'}
cl              {'LANG:EN', 'RIGHT:PRG', 'LEFT:T/fin', 'RIGHT:ARE/inf', 'inflectional', 'LEFT:D,CL', 'CL'}
inc             {'LANG:EN', 'INCORPORATED', 'inflectional'}
sg              {'LANG:EN', 'PHI:NUM:SG', 'inflectional'}
pl              {'LANG:EN', 'inflectional', 'PHI:NUM:PL'}
1p              {'LANG:EN', 'PHI:PER:1', 'inflectional'}
2p              {'PHI:PER:2', 'LANG:EN', 'inflectional'}
3p              {'LANG:EN', 'PHI:PER:3', 'inflectional'}
def             {'LANG:EN', 'PHI:DET:DEF', 'inflectional'}
indef           {'LANG:EN', 'PHI:DET:INDEF', 'inflectional'}
hum             {'LANG:EN', 'PHI:HUM:HUM', 'inflectional'}
nonhum          {'LANG:EN', 'PHI:HUM:NONHUM', 'inflectional'}
m               {'LANG:EN', 'PHI:GEN:M', 'inflectional'}
f               {'LANG:EN', 'inflectional', 'PHI:GEN:F'}
nom             {'LANG:EN', 'NOM', 'TAIL:FIN,!COMP:*,VAL', 'inflectional'}
acc             {'LANG:EN', 'ACC', 'inflectional', 'TAIL:v'}
dat             {'LANG:EN', 'DAT', 'inflectional', 'TAIL:v'}
uC/op           {'LANG:EN', 'uC/op', 'inflectional'}
wh              {'LANG:EN', 'OP:_', 'inflectional', 'OP:WH'}
wh_             {'LANG:EN', 'OP', 'FORCE:OP:WH', 'inflectional', 'OP:_'}
top             {'LANG:EN', 'OP:TOP', 'inflectional'}
foc             {'LANG:EN', 'inflectional', 'OP:FOC'}
C/op            {'LANG:EN', 'inflectional', 'OP:C/OP'}
rel             {'LANG:EN', '-COMP:C/fin', 'inflectional', 'adjoinable', 'OP:REL'}
Q               {'LANG:EN', 'OP:Q', 'inflectional', 'OP:WH', 'OP'}
