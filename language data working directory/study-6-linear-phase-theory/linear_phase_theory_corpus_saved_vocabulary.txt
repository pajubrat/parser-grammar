ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'-SPEC:C', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:v', 'PF:a', '-SPEC:*', 'LF:to', '-COMP:T/fin', '-COMP:ADV', 'adjoinable', '!COMP:*', '-SPEC:FORCE', 'TAIL:V', 'LANG:IT', '-COMP:N', '-SPEC:C/fin', '-ARG', '-SPEC:N', '-VAL', 'COMP:D', '-SPEC:V', '-SPEC:ADV', '-SPEC:iWH', 'COMP:ARE/inf', '-SPEC:iR', 'P'}
a_D             {'-SPEC:C', '!PROBE:N', '-SPEC:T/fin', 'D', '-SPEC:INF', '-COMP:D', '-SPEC:Neg/fin', 'OP', '-SPEC:P', 'LANG:EN', 'COMP:N', '-COMP:uR', '-COMP:T/fin', 'adjoinable', 'PF:D', '!COMP:*', 'LF:D', '-SPEC:V', '-ARG', '-SPEC:MA/lla'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'SPEC:P', 'PHI:DET:_', '-COMP:Neg', '-SPEC:Neg', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'PHI:NUM:_', 'ASP', 'PHI:GEN:_', 'COMP:P', 'LANG:EN', 'PF:admire', '-COMP:T/fin', 'V', '-COMP:P', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE', '-COMP:N', '-VAL', 'COMP:D', '-COMP:V', 'PHI:PER:_', 'ARG', 'LF:admire'}
admire*         ['LANG:EN']
T/fin*          {'NO_DET', 'CAT:T/fin', '-VAL', 'LF:T', 'LANG:EN', "PF:T/fin'", 'NO_NUMBER', '!SPEC:*'}
v*              {'-VAL', 'PF:v', 'LANG:EN', 'LF:v', 'CAT:v', 'NO_NUMBER', 'NO_DET'}
admire**        ['LANG:EN']
T/fin**         {'NO_NUMBER', 'NO_DET', 'PHI:PER:3', 'NO_PERSON', 'CAT:T/fin', '-VAL', 'LF:T', 'LANG:EN', "PF:T/fin''", '!SPEC:*'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', '-COMP:T/fin', 'V', 'PF:adora', 'SPEC:ADV', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', '-VAL', 'COMP:D', '-COMP:V', 'PHI:PER:_', 'ARG', 'LF:admire'}
antaa           ['LANG:FI']
anta-           {'CLASS:DITR', 'LF:give', 'SPEC:P', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', '-COMP:FIN', 'COMP:P', 'ASP:BOUNDED', '+SEM:directional', 'V', '-COMP:T/fin', 'LANG:FI', 'SPEC:ADV', '!COMP:*', 'SPEC:D', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'COMP:D', 'PHI:PER:_', 'ARG', 'PF:antaa'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'LANG:EN', '-COMP:T/fin', 'V', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', '-SPEC:FORCE', '-COMP:N', '-VAL', 'COMP:D', '-COMP:V', 'PHI:PER:_', 'LF:ask', 'ARG', 'PF:ask'}
ask-            {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'LANG:EN', '-COMP:T/fin', 'V', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', '-SPEC:FORCE', '-COMP:N', '-VAL', 'COMP:D', '-COMP:V', 'PHI:PER:_', 'LF:ask', 'ARG', 'PF:ask'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'LF:key', '-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', '-SEM:directional', 'COMP:R', 'N', 'LANG:FI', 'COMP:R/D', 'PF:avain', '-COMP:WH', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'LF:car', '-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', '-SEM:directional', 'COMP:R', 'N', 'LANG:FI', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'PF:auto', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C'}
city            {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'LF:city', 'COMP:P', '-SPEC:P', 'LANG:EN', 'PF:city', 'COMP:R', 'N', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C'}
che             ['LANG:IT']
che-            {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:C', 'COMP:R', 'N', 'PF:che', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', 'LF:who', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', '-COMP:*'}
chiamato        ['LANG:IT']
chiamata-       {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'PF:chiamato', '-COMP:T/fin', 'V', 'SPEC:ADV', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG', 'LF:called'}
danno           {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', 'LF:damage', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:R', 'N', 'PF:danno', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'LF:detest', 'COMP:P', '-COMP:T/fin', 'V', 'SEM:internal', 'SPEC:ADV', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', '-VAL', 'COMP:D', '-COMP:V', 'PHI:PER:_', 'COMP:ARE/inf', 'ARG', 'PF:detest'}
devono          ['LANG:EN']
deva-           {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'LF:must', 'COMP:P', '-COMP:T/fin', 'V', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', 'PF:deva', '-VAL', '-COMP:V', 'PHI:PER:_', '-ASP', 'COMP:ARE/inf', 'ARG'}
di              {'PF:di', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:C', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:v', '-COMP:T/fin', 'SPEC:*', '-COMP:ADV', 'LANG:FI', '-adjoinable', '!COMP:*', '-SPEC:FORCE', '-COMP:N', '-SPEC:C/fin', '-SPEC:N', '-VAL', 'COMP:D', 'LF:of', '-SPEC:V', '-SPEC:iWH', '-SPEC:ADV', 'PHI:PER:_', 'ARG', '-SPEC:iR', 'P'}
does            {'COMP:Neg', 'COMP:T/prt', '-SPEC:C', '-SPEC:T/fin', '-COMP:INF', 'PF:does', '-SPEC:v', 'VAL', 'SPEC:*', 'PHI:GEN:M', '-SPEC:TO/inf', 'PHI:PER:3', 'PHI:NUM:SG', '!COMP:*', 'SPEC:D', '-SPEC:N', '-SPEC:C/fin', '-SPEC:V', 'PHI:PER:_', 'ARG', 'FIN', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', '-SPEC:Neg', 'SPEC:TO/inf', 'T', 'LF:does', 'LANG:EN', 'PHI:GEN:F', '-COMP:T/fin', '!PROBE:V', 'COMP:v', 'COMP:V', 'T/fin', '-SPEC:FORCE', '!SPEC:D'}
does_C          ['LANG:EN']
does-           {'COMP:Neg', 'COMP:T/prt', '-SPEC:C', '-SPEC:T/fin', '-COMP:INF', 'PF:does', '-SPEC:v', 'VAL', 'SPEC:*', 'PHI:GEN:M', '-SPEC:TO/inf', 'PHI:PER:3', 'PHI:NUM:SG', '!COMP:*', 'SPEC:D', '-SPEC:N', '-SPEC:C/fin', '-SPEC:V', 'PHI:PER:_', 'ARG', 'FIN', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', '-SPEC:Neg', 'SPEC:TO/inf', 'T', 'LF:does', 'LANG:EN', 'PHI:GEN:F', '-COMP:T/fin', '!PROBE:V', 'COMP:v', 'COMP:V', 'T/fin', '-SPEC:FORCE', '!SPEC:D'}
dorme           ['LANG:IT']
dorme-          {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'LANG:EN', 'PF:dorme', '-COMP:T/fin', 'V', 'SPEC:ADV', '-SPEC:FORCE', '-COMP:N', 'LF:sleep', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG', '!SPEC:D'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'LF:neg', 'PHI:DET:_', '-SPEC:T', 'COMP:T/prt', 'PHI:NUM:_', '-SPEC:T/fin', 'Neg/fin', 'POL:NEG', 'NEG', '!COMP:T', 'VAL', '!SPEC:*', '%SPEC:INF', 'SPEC:*', 'SEM:internal', 'LANG:FI', '!COMP:*', 'PF:ei', 'PHI:PER:_', 'ARG', 'FIN'}
e-              {'LF:neg', 'PHI:DET:_', '-SPEC:T', 'COMP:T/prt', 'PHI:NUM:_', '-SPEC:T/fin', 'Neg/fin', 'POL:NEG', 'NEG', '!COMP:T', 'VAL', '!SPEC:*', '%SPEC:INF', 'SPEC:*', 'SEM:internal', 'LANG:FI', '!COMP:*', 'PF:ei', 'PHI:PER:_', 'ARG', 'FIN'}
elaa            ['LANG:FI']
ela-            {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', '-COMP:D', 'COMP:P', 'LF:live', '-COMP:T/fin', 'V', 'LANG:FI', 'SPEC:ADV', 'CLASS:INTR', 'SPEC:D', '-SPEC:FORCE', '-COMP:N', 'PF:elaa', '-COMP:MA/inf', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG'}
etsii           ['LANG:FI']
etsi-           {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'PF:etsi', 'COMP:P', '!COMP:D', '-COMP:T/fin', 'V', 'LANG:FI', 'SPEC:ADV', '-SPEC:FORCE', '-COMP:N', '-VAL', 'COMP:D', 'LF:search', '-COMP:V', 'PHI:PER:_', 'ARG'}
etta            {'COMP:T/fin', 'LANG:FI', '!COMP:*', 'PF:etta', '-VAL', '-ARG', '!PROBE:T/fin', 'COMP:C/fin', '-SPEC:*', 'LF:that', 'FORCE', 'FIN'}
flow'           {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'PF:flow', 'ASP', 'COMP:P', 'LANG:EN', '-COMP:T/fin', 'V', 'SPEC:ADV', 'SPEC:D', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'PHI:PER:_', 'LF:flow', 'ARG'}
from            {'LF:from', 'PHI:DET:_', 'PHI:GEN:_', 'PF:from', '-SPEC:C', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:INF', 'PHI:NUM:_', '-SPEC:Neg/fin', '-SPEC:P', '-float', 'LANG:EN', '-SPEC:v', '-COMP:T/fin', '-SPEC:*', 'TAIL:V,+SEM:directional', '-COMP:ADV', 'adjoinable', '!COMP:*', '-SPEC:FORCE', '-COMP:N', '-SPEC:C/fin', '-SPEC:N', '-VAL', 'COMP:D', '-SPEC:V', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:ADV', 'ARG', '-SPEC:iR', 'P'}
gave            ['LANG:EN']
give-           {'CLASS:DITR', 'LF:give', 'SPEC:P', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'ASP', '-COMP:FIN', 'COMP:P', 'LANG:EN', '-COMP:T/fin', '+SEM:directional', 'V', 'SPEC:ADV', '!COMP:*', 'SPEC:D', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'COMP:D', 'PHI:PER:_', 'PF:give', 'ARG'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'LF:Giuseppe', '-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:C', '-SEM:directional', 'COMP:R', 'N', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'PF:Giuseppe'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'LF:want', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'PF:haluaa', 'ASP:BOUNDED', '-SPEC:*', 'V', '-COMP:T/fin', '-COMP:P', 'COMP:A/inf', 'SEM:internal', 'LANG:FI', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE', '-COMP:N', '-VAL', 'COMP:D', '-COMP:V', 'PHI:PER:_', 'ARG'}
hairitsee       ['LANG:FI']
hairitse-       {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'LF:disturb', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', '-COMP:FIN', 'COMP:P', '!COMP:D', '-COMP:T/fin', 'V', 'PF:hairitsee', 'LANG:FI', 'SPEC:ADV', 'SPEC:D', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'LF:have', 'COMP:P', '-COMP:T/fin', 'V', 'SPEC:*', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', 'COMP:T', '-VAL', '-COMP:V', 'PHI:PER:_', '-ASP', 'ARG', 'PF:ha'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', '-COMP:D', 'COMP:P', 'PF:havia', '-COMP:T/fin', 'V', 'LANG:FI', 'SPEC:ADV', 'CLASS:INTR', 'SPEC:D', '-SPEC:FORCE', '-COMP:N', '-COMP:MA/inf', '-VAL', '-COMP:V', 'PHI:PER:_', 'LF:disappear', 'ARG'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', '-COMP:FIN', 'COMP:P', '!COMP:D', '-COMP:T/fin', 'V', '-COMP:P', 'LANG:FI', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', 'PF:ihaile-', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'COMP:D', 'PHI:PER:_', 'ARG', 'LF:admire'}
il              {'-SPEC:C', '!PROBE:N', '-SPEC:T/fin', 'D', '-SPEC:INF', '-COMP:D', '-SPEC:Neg/fin', 'OP', '-SPEC:P', 'COMP:N', '-COMP:uR', '-COMP:T/fin', 'adjoinable', '!COMP:*', 'LF:the', 'LANG:IT', '-SPEC:V', '-ARG', '-SPEC:MA/lla', 'PF:il'}
i               {'-SPEC:C', '!PROBE:N', '-SPEC:T/fin', 'D', '-SPEC:INF', '-COMP:D', '-SPEC:Neg/fin', 'OP', '-SPEC:P', 'COMP:N', '-COMP:uR', '-COMP:T/fin', 'adjoinable', '!COMP:*', 'LF:the', 'LANG:IT', '-SPEC:V', '-ARG', '-SPEC:MA/lla', 'PF:il'}
in              {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', '-SPEC:C', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:INF', 'PF:in', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:v', '-COMP:T/fin', '-COMP:ADV', 'adjoinable', '!COMP:*', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', '-SPEC:C/fin', '-SPEC:N', '-VAL', 'COMP:D', '-SPEC:V', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:ADV', 'ARG', 'LF:in', '-SPEC:iR', 'P'}
infermieri      {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:C', 'COMP:R', 'N', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', 'LF:nurses', '-SPEC:uWH', 'PF:infermieri', '-SPEC:ADV'}
is              ['LANG:EN']
be-             {'SPEC:P', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', '-COMP:TO/inf', 'COMP:P', 'LANG:EN', '-COMP:T/fin', 'V', 'SPEC:ADV', 'COPULA', 'SPEC:D', '!COMP:*', '-SPEC:FORCE', '-COMP:N', '-ARG', '-VAL', '-COMP:V', 'PF:be', 'LF:be'}
istuuko         ['LANG:FI']
istuu-          {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', '-COMP:D', 'COMP:P', '-COMP:T/fin', 'V', 'PF:istuu', 'LANG:FI', 'SPEC:ADV', 'CLASS:INTR', 'SPEC:D', 'LF:sit', '-SPEC:FORCE', '-COMP:N', '-COMP:MA/inf', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG'}
John            ['LANG:EN']
John-           {'PF:John', '-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'LANG:EN', '-SEM:directional', 'COMP:R', 'N', '-adjoinable', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', 'LF:John'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:R', 'PF:joka', 'N', 'LANG:FI', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', 'LF:who', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:*'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-SPEC:T/fin', '-SPEC:INF', 'LF:Jukka', '-COMP:v', 'PF:Jukka', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', '-SEM:directional', 'COMP:R', 'N', 'LANG:FI', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C'}
juosten         ['LANG:FI']
juokse-         {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'LF:run', '-COMP:T/fin', 'V', 'LANG:FI', 'SPEC:ADV', '-SPEC:FORCE', '-COMP:N', 'PF:juokse-', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG'}
istuu           ['LANG:FI']
istu-           {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', '-COMP:T/fin', 'V', 'PF:istuu', 'LANG:FI', 'SPEC:ADV', 'LF:sit', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG'}
kaksi           {'PF:kaksi', 'PHI:DET:_', 'LANG:FI', 'PHI:NUM:_', 'NUM', 'PHI:NUM:SG', 'LF:two', '-VAL', 'TAIL:ARG,VAL,FIN', 'COMP:N', 'PHI:PER:_', 'ARG', 'COMP:n', 'SPEC:*'}
kaksi           {'PF:kaksi', 'COMP:n', 'NUM', 'LF:two', 'TAIL:ARG,ASP:BOUNDED', 'COMP:N', 'LANG:EN', 'TAIL:*POL:NEG', 'SPEC:*'}
kaksi_1         {'PF:kaksi', 'PHI:DET:_', 'LANG:FI', 'PHI:NUM:_', 'NUM', 'PHI:NUM:SG', 'LF:two', '-VAL', 'TAIL:ARG,VAL,FIN', 'COMP:N', 'PHI:PER:_', 'ARG', 'COMP:n', 'SPEC:*'}
kaksi_2         {'PF:kaksi', 'COMP:n', 'NUM', 'LF:two', 'TAIL:ARG,ASP:BOUNDED', 'COMP:N', 'LANG:EN', 'TAIL:*POL:NEG', 'SPEC:*'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'PF:kaksi', 'COMP:N', 'LANG:FI', 'NUM', 'LF:two', 'COMP:n', 'SPEC:*'}
kaupunkia       ['LANG:EN']
kaupunki        {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'LF:city', '-SPEC:P', 'COMP:R', '-COMP:P', 'N', 'LANG:FI', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', 'COMP:uR', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', 'PF:kaupunki'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'LF:order', 'SPEC:P', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'PF:kaske', 'COMP:P', '-COMP:T/fin', 'V', '!COMP:A/inf', 'LANG:FI', 'SPEC:ADV', '-SPEC:FORCE', '-COMP:N', 'SEM:external', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'PF:kello', 'COMP:R', 'N', 'LANG:FI', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', 'LF:watch'}
kello0-         {'2SPEC', 'LANG:FI', 'PF:kello', '0', 'SPEC:D', 'LF:watch'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'LF:key', '-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'LANG:EN', 'PF:key', 'COMP:R', 'N', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:C', 'PF:kirja', '-SEM:directional', 'COMP:R', 'N', 'LANG:FI', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', 'LF:book', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV'}
kohti           {'PHI:DET:_', 'PHI:NUM:_', '-SPEC:C', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:v', '-COMP:T/fin', 'SPEC:*', '-COMP:ADV', 'adjoinable', 'LANG:FI', 'PF:kohti', '!COMP:*', '-SPEC:FORCE', 'TAIL:V', '-COMP:N', '-SPEC:C/fin', '-SPEC:N', '-VAL', 'COMP:D', '-SPEC:V', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:ADV', 'LF:towards', 'ARG', '-SPEC:iR', 'P'}
koko            {'-SPEC:C', '!PROBE:N', '-SPEC:T/fin', 'D', '-SPEC:INF', '-COMP:D', '-SPEC:Neg/fin', 'OP', '-SPEC:P', 'COMP:N', '-COMP:uR', '-COMP:T/fin', 'adjoinable', 'LANG:FI', '!COMP:*', 'LF:all', '-SPEC:V', '-ARG', '-SPEC:MA/lla', 'TAIL:T', 'PF:koko'}
kuka            ['LANG:FI']
kuka-           {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:C', 'COMP:R', 'N', 'PF:kuka', 'LANG:FI', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', 'LF:who', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'PHI'}
kuorsaa-        {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'LF:snore', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', '-COMP:D', 'COMP:P', '-COMP:T/fin', 'V', 'LANG:FI', 'SPEC:ADV', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG', 'PF:kuorsaa'}
kuorsaamalla    ['LANG:FI']
lahella         {'-SPEC:C', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:INF', '-SPEC:v', 'VAL', '!SPEC:*', 'SPEC:*', '-COMP:ADV', 'adjoinable', 'LANG:FI', '!COMP:*', '-COMP:N', 'LF:near', 'INF', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', 'COMP:D', 'PHI:PER:_', '-SPEC:ADV', 'ARG', 'P', 'PHI:DET:_', 'PHI:NUM:_', '-COMP:C/fin', '-SPEC:Neg/fin', '-SPEC:P', 'PF:lahella', '-COMP:T/fin', 'COMP:v', 'COMP:V', '-SPEC:FORCE', '-COMP:FORCE', '-SPEC:iWH', '!SPEC:D', '-SPEC:iR'}
lahella         {'PHI:DET:_', 'PHI:NUM:_', '-SPEC:C', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:v', 'PF:lahella', '!COMP:D', '-COMP:T/fin', 'SPEC:*', '-COMP:ADV', 'adjoinable', 'LANG:FI', '!COMP:*', '-SPEC:FORCE', '-COMP:N', 'LF:near', '-SPEC:C/fin', '-SPEC:N', '-VAL', 'COMP:D', '-SPEC:V', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:ADV', 'ARG', '-SPEC:iR', 'P'}
lahella_1       {'PHI:DET:_', 'PHI:NUM:_', '-SPEC:C', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:v', 'PF:lahella', '!COMP:D', '-COMP:T/fin', 'SPEC:*', '-COMP:ADV', 'adjoinable', 'LANG:FI', '!COMP:*', '-SPEC:FORCE', '-COMP:N', 'LF:near', '-SPEC:C/fin', '-SPEC:N', '-VAL', 'COMP:D', '-SPEC:V', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:ADV', 'ARG', '-SPEC:iR', 'P'}
lahella_2       {'-SPEC:C', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:INF', '-SPEC:v', 'VAL', '!SPEC:*', 'SPEC:*', '-COMP:ADV', 'adjoinable', 'LANG:FI', '!COMP:*', '-COMP:N', 'LF:near', 'INF', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', 'COMP:D', 'PHI:PER:_', '-SPEC:ADV', 'ARG', 'P', 'PHI:DET:_', 'PHI:NUM:_', '-COMP:C/fin', '-SPEC:Neg/fin', '-SPEC:P', 'PF:lahella', '-COMP:T/fin', 'COMP:v', 'COMP:V', '-SPEC:FORCE', '-COMP:FORCE', '-SPEC:iWH', '!SPEC:D', '-SPEC:iR'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'PF:lahtea', '-COMP:D', 'COMP:P', '-COMP:T/fin', 'V', 'LANG:FI', 'SPEC:ADV', 'CLASS:INTR', 'SPEC:D', '-SPEC:FORCE', '-COMP:N', '-COMP:MA/inf', 'LF:leave', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG', 'COMP:PP'}
lavano          ['LANG:IT']
lava-           {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', '-COMP:T/fin', 'PF:lava', 'V', 'SPEC:ADV', 'LF:wash', '!COMP:*', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', '-VAL', 'COMP:D', '-COMP:V', 'PHI:PER:_', 'ARG'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-SPEC:C', '!PROBE:N', '-SPEC:T/fin', 'D', '-SPEC:INF', '-COMP:D', '-SPEC:Neg/fin', 'OP', '-SPEC:P', 'COMP:N', '-COMP:uR', 'PF:le', '-COMP:T/fin', 'adjoinable', '!COMP:*', 'LANG:IT', 'LF:D', '-SPEC:V', '-ARG', '-SPEC:MA/lla'}
leaves          ['LANG:EN']
leave           {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'LANG:EN', 'PF:leave', '-COMP:T/fin', 'V', 'SPEC:ADV', '-SPEC:FORCE', '-COMP:N', 'LF:leave', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG', '!SPEC:D'}
leave-          {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'LANG:EN', 'PF:leave', '-COMP:T/fin', 'V', 'SPEC:ADV', '-SPEC:FORCE', '-COMP:N', 'LF:leave', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG', '!SPEC:D'}
like-           {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'PF:like', 'SPEC:TO/inf', 'ASP', 'LF:like', 'COMP:P', 'LANG:EN', '-COMP:T/fin', '!COMP:D', 'V', 'SPEC:ADV', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG'}
likes           ['LANG:EN']
like            {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'PF:like', 'SPEC:TO/inf', 'ASP', 'LF:like', 'COMP:P', 'LANG:EN', '-COMP:T/fin', '!COMP:D', 'V', 'SPEC:ADV', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG'}
little          ['LANG:EN']
little-         {'SPEC:D', '2SPEC', 'LANG:EN', 'LF:little', '0', 'PF:little-'}
lle             {'PHI:DET:_', 'PHI:NUM:_', '-SPEC:C', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:INF', 'LF:for', 'PF:P(lle)', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:v', '-SPEC:*', '+SEM:directional', 'TAIL:V,+SEM:directional', '-COMP:T/fin', '-COMP:ADV', 'adjoinable', 'LANG:FI', '!COMP:*', '-SPEC:FORCE', '-COMP:N', '-SPEC:C/fin', '-SPEC:N', '-VAL', 'COMP:D', '-SPEC:V', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:ADV', 'ARG', '-SPEC:iR', 'P'}
lla             {'PHI:DET:_', 'PHI:NUM:_', '-SPEC:C', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:v', 'TAIL:*V', '-COMP:T/fin', 'SPEC:*', '-COMP:ADV', 'adjoinable', 'LANG:FI', 'PF:P(lla)', '!COMP:*', '-SPEC:FORCE', '-COMP:N', '-SPEC:C/fin', '-SPEC:N', '-VAL', 'COMP:D', '-SPEC:V', 'LF:by', 'TAIL:T', '-SPEC:ADV', '-SPEC:iWH', 'PHI:PER:_', 'ARG', '-SPEC:iR', 'P'}
Luisa           ['LANG:IT']
Luisa-          {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', 'LF:Luisa', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'PF:Luisa', '-SEM:directional', 'COMP:R', 'N', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C'}
lukemalla       ['LANG:FI']
luke-           {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'PF:luke', '-COMP:T/fin', 'V', '-COMP:P', 'LANG:FI', 'SPEC:ADV', 'CLASS:TR', 'LF:read', '!COMP:*', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'COMP:D', 'PHI:PER:_', 'ARG'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'PF:loyta-', 'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'ASP:BOUNDED', '!COMP:D', 'V', '-COMP:T/fin', '-COMP:P', 'LANG:FI', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'COMP:D', 'PHI:PER:_', 'ARG', 'LF:find'}
Mary            ['LANG:EN']
Mary-           {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'LANG:EN', '-SEM:directional', 'COMP:R', 'N', '-adjoinable', 'LF:Mary', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', 'PF:Mary', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', '-SEM:directional', 'COMP:R', 'N', 'LF:Merja', 'LANG:FI', '-adjoinable', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', 'PF:Merja'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'SPEC:*', 'PF:malla', 'LANG:FI', 'ADV', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', 'adjoinable', '-SPEC:Neg/fin', 'LF:by', 'TAIL:T', 'COMP:v', 'MA/inf'}
meren           ['LANG:FI']
mere-           {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:R', 'PF:meri', 'N', 'LANG:FI', 'LF:ocean', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C'}
mies            {'PF:mies', '-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:R', 'N', 'LANG:FI', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'LF:man', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C'}
mistake         {'PF:mistake', '-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'LANG:EN', 'LF:mistake', 'COMP:R', 'N', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-SPEC:T/fin', '-SPEC:INF', 'PF:mika-', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:R', 'N', 'LANG:FI', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', 'LF:what'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'SPEC:P', 'LF:move', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'PHI:GEN:_', 'ASP', 'PF:move', 'COMP:P', 'LANGN:EN', '+SEM:directional', 'V', '-COMP:T/fin', '-COMP:P', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE', '-COMP:N', '-VAL', 'COMP:D', '-COMP:V', 'PHI:PER:_', 'ARG'}
mukavasti       ['LANG:EN']
mukava-         {'2SPEC', 'LANG:FI', 'PF:mukavasti', '0', 'LF:comfortably', 'SPEC:D'}
must            {'MODAL', 'PHI:DET:_', 'COMP:Neg', 'COMP:T/prt', '-SPEC:C', '-SPEC:T/fin', '-COMP:INF', '-SPEC:Neg', 'LF:must', 'SPEC:TO/inf', 'T', 'PHI:NUM:_', 'LANG:EN', '-SPEC:v', 'PHI:GEN:_', 'VAL', '-COMP:T/fin', '!PROBE:V', 'COMP:v', 'COMP:V', 'SPEC:*', '-SPEC:TO/inf', 'T/fin', '!COMP:*', 'SPEC:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:C/fin', 'PF:must', '-SPEC:V', 'PHI:PER:_', 'ARG', '!SPEC:D', 'FIN'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'PF:myy', 'ASP:BOUNDED', 'LF:sell', 'V', '-COMP:T/fin', '-COMP:P', 'LANG:FI', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE', '-COMP:N', '-VAL', 'COMP:D', '-COMP:V', 'PHI:PER:_', 'ARG'}
naki            ['LANG:FI']
nake-           {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'PF:nake', 'ASP:BOUNDED', '-COMP:T/fin', 'V', '-COMP:P', 'LANG:FI', 'SPEC:ADV', 'LF:see', 'CLASS:TR', '!COMP:*', '-COMP:MA/inf', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'COMP:D', 'PHI:PER:_', 'ARG', '-COMP:ESSA/inf'}
nayttaa         ['LANG:FI']
naytta-         {'SPEC:P', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'VAL', '-COMP:T/fin', 'V', 'SEM:internal', 'LANG:FI', 'SPEC:ADV', 'PF:naytta', 'LF:seem', '-SPEC:FORCE', '-COMP:N', '-ARG', '-COMP:V', '!COMP:VA/inf', '!SPEC:D'}
ndo             {'-SPEC:T/fin', '!COMP:*', '-COMP:C/fin', 'PF:PRG', 'INF', '-SPEC:V', 'LF:ing', '?ARG', 'LANG:EN', '-COMP:FORCE', 'VAL', 'PRG', '-COMP:T/fin', 'COMP:v', 'COMP:V'}
ne              {'-SPEC:C', '!PROBE:N', '-SPEC:T/fin', 'D', '-SPEC:INF', '-COMP:D', '-SPEC:Neg/fin', 'OP', '-SPEC:P', 'LF:those', 'COMP:N', '-COMP:uR', '-COMP:T/fin', 'adjoinable', 'LANG:FI', 'PHI:PER:3', 'PHI:NUM:PL', '!COMP:*', 'PF:ne', '-SPEC:V', '-ARG', '-SPEC:MA/lla'}
niiden          ['LANG:EN']
nen             {'SPEC:*', '-SPEC:D', 'LANG:FI', 'A', 'TAIL:D', 'LF:ing', 'COMP:0', 'PF:a', '-SPEC:A', 'adjoinable'}
not             {'PHI:DET:_', 'LF:not', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', 'POL:NEG', 'PF:not', 'Neg', '-COMP:C', '-COMP:D', '!COMP:*', '-COMP:FIN', '-VAL', 'LANG:EN', 'PHI:PER:_', 'ARG', 'SPEC:*'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', '-COMP:Neg/fin', 'ASP', '-COMP:D', 'COMP:P', '-COMP:T/fin', 'V', 'LANG:FI', 'SPEC:ADV', 'CLASS:INTR', 'SPEC:D', 'PF:nukku', '-COMP:MA/inf', '-SPEC:FORCE', '-COMP:N', '-COMP:T', 'LF:sleep', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'PF:omaisuuden', '-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'LF:possessions', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:R', 'N', 'LANG:FI', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C'}
operatoria      ['LANG:IT']
operatoria-     {'2SPEC', '0', 'SPEC:D', 'LF:operation', 'LANG:IT', 'PF:operatoria'}
ostaa           ['LANG:FI']
osta-           {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'ASP:BOUNDED', '-COMP:T/fin', 'V', '-COMP:P', 'LF:buy', 'LANG:FI', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE', '-COMP:N', 'PF:osta', '-VAL', '-COMP:V', 'COMP:D', 'PHI:PER:_', 'ARG'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-SPEC:T/fin', '-SPEC:INF', 'LF:day', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'PF:paiva', 'COMP:C', 'COMP:R', 'N', 'LANG:FI', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', 'SEM:nonreferential', '-SPEC:ADV'}
Pariisia        ['LANG:FI']
Pariisi-        {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:R', 'N', 'LANG:FI', 'LF:Paris', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', 'PF:Pariisi', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', '-SEM:directional', 'COMP:R', 'N', 'LANG:FI', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', 'LF:Pekka', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', 'PF:Pekka'}
pelottaa        ['LANG:FI']
pelkaa-         {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'LF:fear', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', '-COMP:T/fin', 'V', '-COMP:P', 'LANG:FI', 'SPEC:ADV', 'PF:pelkaa', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'COMP:D', 'PHI:PER:_', 'ARG'}
persuades       ['LANG:EN']
persuade-       {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'PF:persuade', 'COMP:TO/inf', 'ASP', 'COMP:P', 'LANG:EN', '-COMP:T/fin', 'V', 'LF:persuade', 'SPEC:ADV', '!COMP:*', '-SPEC:FORCE', '-COMP:N', 'SEM:external', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG'}
peruuntui       ['LANG:FI']
peruuntu-       {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'LF:cancelled', '-COMP:T/fin', 'V', 'LANG:FI', 'SPEC:ADV', 'SPEC:D', '-SPEC:FORCE', '-COMP:N', '-VAL', 'PF:peruuntui', '-COMP:V', 'PHI:PER:_', 'ARG'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'PF:pese', 'ASP:BOUNDED', '-COMP:T/fin', 'V', '-COMP:P', 'LANG:FI', 'SPEC:ADV', 'LF:wash', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'COMP:D', 'PHI:PER:_', 'ARG'}
pese-           {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'PF:pese', '-COMP:T/fin', 'V', '-COMP:P', 'LANG:FI', 'SPEC:ADV', 'LF:wash', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'COMP:D', 'PHI:PER:_', 'ARG'}
petardi         {'LF:firecrackers', 'PF:petardi', '-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:R', 'N', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C'}
pieni           ['LANG:FI']
pieni-          {'2SPEC', 'LANG:FI', 'PF:pieni-', '0', 'SPEC:D', 'LF:small'}
poikien         ['LANG:FI']
poika-          {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:R', 'LF:boy', 'N', 'LANG:FI', 'COMP:R/D', 'PF:poika', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C'}
puhelinta       ['LANG:FI']
puhelin-        {'2SPEC', 'PF:puhelin', 'LANG:FI', 'LF:phone', '0', 'SPEC:D'}
punainen        ['LANG:FI']
puna-           {'2SPEC', 'LANG:FI', '0', 'PF:puna-', 'SPEC:D', 'LF:red'}
presupposto     {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PF:presupposto', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:R', 'N', 'LF:presupposition', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C'}
primary         {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'LF:nurse', 'COMP:P', '-SPEC:P', 'COMP:R', 'N', 'COMP:R/D', '-SPEC:FORCE', 'PF:primary', '-COMP:WH', 'LANG:IT', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C'}
promises        ['LANG:EN']
promise-        {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'PF:promise', 'COMP:P', 'LANG:EN', '-COMP:T/fin', 'V', 'SEM:internal', 'SPEC:ADV', 'LF:promise', 'SPEC:D', '-SPEC:FORCE', '-COMP:N', '-VAL', 'COMP:D', '-COMP:V', 'PHI:PER:_', 'ARG'}
pyytaa          ['LANG:FI']
pyyta-          {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', '-COMP:T/fin', 'V', 'PF:pyyda', 'LANG:FI', 'SPEC:ADV', '-SPEC:FORCE', '-COMP:N', 'SEM:external', '-VAL', '-COMP:V', 'PHI:PER:_', 'LF:ask', 'ARG'}
raukesi         ['LANG:FI']
raukea-         {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'PF:raukea', '-COMP:T/fin', 'V', 'LF:terminate', 'LANG:FI', 'SPEC:ADV', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG'}
red             ['LANG:EN']
red-            {'2SPEC', 'LANG:EN', '0', 'SPEC:D', 'PF:red', 'LF:red'}
saavuttaa       ['LANG:FI']
saavutta-       {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'PF:saavutta-', 'COMP:P', 'ASP:BOUNDED', '!COMP:D', 'V', '-COMP:T/fin', 'LF:reach', '-COMP:P', 'LANG:FI', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'COMP:D', 'PHI:PER:_', 'ARG'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'COMP:FORCE', '-COMP:T/fin', 'LF:say', 'V', 'PF:sano-', 'LANG:FI', 'SPEC:ADV', 'SPEC:D', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG', 'COMP:VA/inf'}
said            ['LANG:EN']
say'            {'!COMP:FORCE', 'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'LANG:EN', '-COMP:T/fin', 'LF:say', 'V', 'PF:say', 'SPEC:ADV', 'SPEC:D', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG'}
say-            {'!COMP:FORCE', 'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'LANG:EN', '-COMP:T/fin', 'LF:say', 'V', 'PF:say', 'SPEC:ADV', 'SPEC:D', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG'}
sala            ['LANG:IT']
sala-           {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:R', 'PF:sala', 'N', 'LF:room', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C'}
scoppiati       ['LANG:IT']
scoppia-        {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', '-COMP:T/fin', 'V', 'SPEC:ADV', 'PF:scoppia', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG', 'LF:explode'}
sen             {'-SPEC:C', '!PROBE:N', 'TAIL:PHI', 'D', 'TAIL:ASP', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', '-SPEC:Neg/fin', 'OP', '-SPEC:P', 'COMP:N', '-COMP:uR', '-COMP:T/fin', 'TAIL:*POL:NEG', 'LF:the/that', 'adjoinable', 'LANG:FI', '!COMP:*', 'PF:sen', '-SPEC:V', '-ARG', '-SPEC:MA/lla'}
se'             {'-SPEC:C', '!PROBE:N', '-SPEC:T/fin', 'D', '-SPEC:INF', '-COMP:D', '-SPEC:Neg/fin', 'OP', '-SPEC:P', 'COMP:N', '-COMP:uR', '-COMP:T/fin', 'LF:the/that', 'adjoinable', 'LANG:FI', 'PF:se', '!COMP:*', '-SPEC:V', '-ARG', '-SPEC:MA/lla'}
se              {'-SPEC:C', '!PROBE:N', '-SPEC:T/fin', 'D', '-SPEC:INF', '-COMP:D', '-SPEC:Neg/fin', 'OP', '-SPEC:P', 'COMP:N', '-COMP:uR', '-COMP:T/fin', 'LF:the/that', 'adjoinable', 'LANG:FI', 'PF:se', '!COMP:*', '-SPEC:V', '-ARG', '-SPEC:MA/lla'}
se              ['LANG:FI']
sentenza        {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'LF:sentence', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:R', 'N', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', 'PF:sentenza'}
Seine           ['LANG:EN']
Seine-          {'PF:Seine', '-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'LF:Seine', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'LANG:EN', 'COMP:R', 'N', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C'}
sembrano        ['LANG:IT']
sembra-         {'SPEC:P', '-SPEC:T/fin', '-COMP:v', '!COMP:ARE/inf', 'SPEC:TO/inf', '-COMP:D', 'COMP:P', 'LANG:EN', '-COMP:T/fin', 'V', 'SPEC:ADV', 'LF:seem', 'SPEC:D', '-SPEC:FORCE', '-COMP:N', '-ARG', '-VAL', '-COMP:V', 'PF:sembra', '-ASP'}
sleeps          ['LANG:EN']
sleep           {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', '-COMP:D', 'COMP:P', 'LANG:EN', '-COMP:T/fin', 'V', 'SPEC:ADV', 'CLASS:INTR', 'SPEC:D', '-SPEC:FORCE', 'PF:sleep', '-COMP:N', '-COMP:MA/inf', 'LF:sleep', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG'}
sleep-          {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', '-COMP:D', 'COMP:P', 'LANG:EN', '-COMP:T/fin', 'V', 'SPEC:ADV', 'CLASS:INTR', 'SPEC:D', '-SPEC:FORCE', 'PF:sleep', '-COMP:N', '-COMP:MA/inf', 'LF:sleep', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-SPEC:T/fin', 'PF:sopimus', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:C', 'COMP:R', 'N', '!COMP:A/inf', 'LANG:FI', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', 'LF:agreement', '-SPEC:uWH', '-SPEC:ADV'}
spinge          ['LANG:IT']
spinge-         {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'LF:push', 'ASP', '-COMP:T/fin', '!COMP:D', 'V', '-COMP:P', 'PF:spinge', 'SPEC:ADV', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG'}
ssa             {'PHI:DET:_', 'PHI:NUM:_', '-SPEC:C', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:P', 'PF:ssa', '-SPEC:v', '-COMP:T/fin', 'SPEC:*', '-COMP:ADV', 'adjoinable', 'LANG:FI', '!COMP:*', '-SPEC:FORCE', 'TAIL:V', 'COMP:n/MA', '-COMP:N', '-SPEC:C/fin', '-SPEC:N', '-VAL', 'COMP:D', '-SPEC:V', '-SPEC:iWH', '-SPEC:ADV', 'PHI:PER:_', 'ARG', 'LF:in', '-SPEC:iR', 'P'}
stanno          ['LANG:IT']
sta-            {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', 'LF:stay', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'COMP:P', 'LANG:EN', 'PF:sta', '-COMP:T/fin', 'V', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'PHI:PER:_', '-ASP', 'COMP:PRG', 'ARG'}
sti             {'SPEC:*', 'LANG:FI', 'ADV', '-SPEC:T/fin', '!COMP:*', '-SPEC:FORCE', 'PF:sti', '-SPEC:N', '-ARG', '-SPEC:Neg/fin', 'LF:by', 'TAIL:T', 'adjoinable'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'LF:socks', 'COMP:R', 'N', 'LANG:FI', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', 'PF:sukka-', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C'}
talo            {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', 'PF:talo', '-SPEC:P', 'COMP:R', 'N', 'LANG:FI', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', 'LF:house'}
tama            ['LANG:EN']
tama-           {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PF:tama', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:C', 'LF:this', 'COMP:R', 'N', 'LANG:FI', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'PHI'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'MODAL', 'PF:taytyy', 'SPEC:P', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'LF:must', 'COMP:P', '-COMP:T/fin', 'V', 'SPEC:*', '!COMP:A/inf', 'LANG:FI', 'SPEC:ADV', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'PHI:PER:_', '-ASP', 'ARG', 'FIN'}
teki            ['LANG:FI']
teke-           {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'ASP:BOUNDED', '!COMP:D', 'V', '-COMP:T/fin', '-COMP:P', 'LANG:FI', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', 'LF:make', '-SPEC:FORCE', '-COMP:N', '-COMP:A/inf', '-VAL', '-COMP:V', 'COMP:D', 'PF:teke', 'PHI:PER:_', 'ARG'}
that            {'COMP:T/fin', '!COMP:*', '-VAL', '-ARG', 'LANG:EN', 'PF:that', '!PROBE:T/fin', 'COMP:C/fin', '-SPEC:*', 'LF:that', 'FORCE', 'FIN'}
the             {'-SPEC:C', '!PROBE:N', '-SPEC:T/fin', 'D', '-SPEC:INF', '-COMP:D', '-SPEC:Neg/fin', 'OP', '-SPEC:P', 'LANG:EN', 'COMP:N', '-COMP:uR', '-COMP:T/fin', 'adjoinable', '!COMP:*', 'LF:the', 'PF:the', '-SPEC:V', '-ARG', '-SPEC:MA/lla', 'PHI:DEF:DEF'}
to              {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', '-SPEC:C', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:P', '-float', 'LANG:EN', '-SPEC:v', '-SPEC:*', 'LF:to', 'TAIL:V,+SEM:directional', '+SEM:directional', '-COMP:T/fin', '-COMP:ADV', 'adjoinable', 'PF:to', '!COMP:*', '-SPEC:FORCE', '-COMP:N', '-SPEC:C/fin', '-SPEC:N', '-VAL', 'COMP:D', '-SPEC:V', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:ADV', 'ARG', '-SPEC:iR', 'P'}
to_inf          {'LF:TO/inf', '-SPEC:T/fin', '-COMP:C/fin', '?ARG', '-SPEC:v', 'LANG:EN', '-COMP:T/fin', 'COMP:v', 'TO/inf', 'COMP:V', 'adjoinable', '!COMP:*', 'PF:TO/inf', 'INF', '-SPEC:V', '-VAL', '-COMP:FORCE'}
towards         {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', '-SPEC:C', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:INF', 'PF:towards', '-SPEC:Neg/fin', '-SPEC:P', '-float', 'LANG:EN', '-SPEC:v', '-COMP:T/fin', '-SPEC:*', '-COMP:ADV', 'adjoinable', '!COMP:*', '-SPEC:FORCE', 'TAIL:V', '-COMP:N', '-SPEC:C/fin', '-SPEC:N', '-VAL', 'COMP:D', '-SPEC:V', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:ADV', 'LF:towards', 'ARG', '-SPEC:iR', 'P'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', '-COMP:T/fin', 'V', '-COMP:P', 'LANG:FI', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'COMP:D', 'PHI:PER:_', 'LF:nudge', 'ARG', 'PF:tonaise'}
tta             {'LF:without', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:C', 'ADV', 'PF:tta', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:P', '-SPEC:v', '-COMP:T/fin', 'SPEC:*', '-COMP:ADV', 'adjoinable', 'LANG:FI', '!COMP:*', '-SPEC:FORCE', '-COMP:N', 'COMP:n/MA', '-SPEC:C/fin', '-SPEC:N', '-VAL', 'COMP:D', '-SPEC:V', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:ADV', 'ARG', '-SPEC:iR', 'P'}
tries           ['LANG:EN']
try-            {'!COMP:-ARG', 'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', '!COMP:TO/inf', 'LANG:EN', 'LF:try', '-COMP:T/fin', 'V', 'PF:try', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG'}
verifiche       {'-SPEC:T/fin', 'LF:verification', '-SPEC:INF', '-COMP:v', 'PF:verifiche', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:R', 'N', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'PF:virtaa', 'SPEC:P', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', '-COMP:D', 'COMP:P', '-COMP:T/fin', 'V', 'LANG:FI', 'SPEC:ADV', 'SPEC:D', '-SPEC:FORCE', '-COMP:N', '!COMP:P', '-VAL', '-COMP:V', 'PHI:PER:_', 'LF:flow', 'ARG'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', 'LF:want', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'LANG:EN', '-SPEC:*', '-COMP:T/fin', 'V', 'SEM:internal', 'SPEC:ADV', '!COMP:*', '-SPEC:FORCE', '-COMP:N', 'PF:volu', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'LANG:EN', 'ASP:BOUNDED', '-COMP:T/fin', 'V', '-COMP:P', 'LF:win', 'PF:voitta', 'SPEC:ADV', 'CLASS:TR', '!COMP:*', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'COMP:D', 'PHI:PER:_', 'ARG', 'SEM:achievement'}
wants           ['LANG:EN']
want-           {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', 'LF:want', '-SPEC:T/fin', '-COMP:v', 'COMP:TO/inf', 'ASP', 'COMP:P', 'LANG:EN', '-COMP:T/fin', 'V', '-COMP:P', '-SPEC:TO/inf', 'SPEC:ADV', 'CLASS:TR', 'PF:want', '!COMP:*', '-SPEC:FORCE', '-COMP:N', '-COMP:V', '-VAL', 'COMP:D', 'PHI:PER:_', 'ARG'}
what            ['LANG:EN']
what-           {'PF:what', '-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'LANG:EN', 'COMP:R', 'N', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', 'LF:what', '-COMP:*'}
which           {'LF:which', '-SPEC:C', '!PROBE:N', '-SPEC:T/fin', 'D', 'OP:WH', '-SPEC:INF', '-COMP:D', '-SPEC:Neg/fin', 'OP', '-SPEC:P', 'LANG:EN', 'COMP:N', '-COMP:uR', '-COMP:T/fin', 'adjoinable', '!COMP:*', '-SPEC:V', '-ARG', 'PF:which', '-SPEC:MA/lla'}
who             ['LANG:EN']
who-            {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'LANG:EN', 'COMP:R', 'N', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', 'LF:who', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', 'PF:who', '-COMP:*'}
whether         {'OP:WH', 'OP', 'LANG:EN', 'COMP:C/fin', '-SPEC:*', 'COMP:T/fin', '!COMP:*', 'PF:whether', '-VAL', '-ARG', 'LF:whether', '!PROBE:T/fin', 'Q', 'FORCE', 'OP:Q', 'FIN'}
yrittaa         ['LANG:FI']
yritta-         {'!COMP:-ARG', 'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'PF:yritta', 'LANG:EN', 'LF:try', '-COMP:T/fin', 'V', '!COMP:A/inf', 'SEM:internal', 'SPEC:ADV', 'SPEC:D', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG'}
mina            ['LANG:EN']
mina-           {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:R', 'N', 'PF:mina', 'LF:I', 'LANG:FI', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:*'}
sina            ['LANG:EN']
sina-           {'LF:you', '-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:R', 'N', 'LANG:FI', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', 'PF:sina', '-COMP:*'}
han             ['LANG:EN']
han-            {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', 'LF:s/he', '-SPEC:R', '-COMP:C/fin', '-COMP:A', 'PF:han', 'COMP:P', '-SPEC:P', 'COMP:R', 'N', 'LANG:FI', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:*'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'PF:me', 'COMP:R', 'N', 'LANG:FI', 'LF:we', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:*'}
te              ['LANG:EN']
te-             {'PF:te', 'LF:you', '-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:R', 'N', 'LANG:FI', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:*'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', '-COMP:C/fin', 'LF:they', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:R', 'PF:he', 'N', 'LANG:FI', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:*'}
se-             {'-SPEC:C', '!PROBE:N', '-SPEC:T/fin', 'LF:it/that', 'D', '-SPEC:INF', '-COMP:D', '-SPEC:Neg/fin', 'OP', '-SPEC:P', 'COMP:N', '-COMP:uR', '-COMP:T/fin', 'adjoinable', 'LANG:FI', 'PF:se', '!COMP:*', '-SPEC:V', '-ARG', '-SPEC:MA/lla'}
I               ['LANG:EN']
I-              {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'LANG:EN', 'COMP:R', 'N', 'LF:I', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', 'PF:I', '-COMP:*'}
you             ['LANG:EN']
you-            {'LF:you', '-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'LANG:EN', 'COMP:R', 'N', 'COMP:R/D', 'PF:you', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:*'}
he              ['LANG:EN']
he-             {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', 'LF:he', '-SPEC:R', '-COMP:C/fin', '-COMP:A', 'COMP:P', '-SPEC:P', 'LANG:EN', 'COMP:R', 'PF:he', 'N', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:*'}
she             ['LANG:EN']
she-            {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'LANG:EN', 'LF:she', 'COMP:R', 'N', 'PF:she', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:*'}
we              ['LANG:EN']
we-             {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'LANG:EN', 'COMP:R', 'N', 'LF:we', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'PF:we', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:*'}
you_pl          ['LANG:EN']
you_pl-         {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', '-COMP:C/fin', 'LF:you_pl', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'LANG:EN', 'COMP:C', 'COMP:R', 'N', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', 'PF:you_pl', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'PHI'}
they            ['LANG:EN']
they-           {'PF:they', '-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', '-COMP:C/fin', 'LF:they', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'LANG:EN', 'COMP:R', 'N', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:*'}
it              ['LANG:EN']
it-             {'-SPEC:C', '!PROBE:N', '-SPEC:T/fin', 'LF:it/that', 'D', '-SPEC:INF', '-COMP:D', '-SPEC:Neg/fin', 'OP', '-SPEC:P', 'LANG:EN', 'PF:it', 'COMP:N', '-COMP:uR', '-COMP:T/fin', 'adjoinable', '!COMP:*', '-SPEC:V', '-ARG', '-SPEC:MA/lla'}
io              ['LANG:EN']
io-             {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:R', 'PF:io', 'N', 'LF:I', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:*'}
tu              ['LANG:EN']
tu-             {'PF:tu', 'LF:you', '-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:R', 'N', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:*'}
lui             ['LANG:EN']
lui-            {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', 'LF:he', '-SPEC:R', '-COMP:C/fin', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:C', 'COMP:R', 'N', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', 'PF:lui', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', '-COMP:*'}
lei             ['LANG:EN']
lei-            {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'LF:she', 'COMP:R', 'N', 'PF:lei', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:*'}
noi             ['LANG:EN']
noi-            {'PF:noi', '-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:R', 'N', 'LF:we', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:*'}
voi             ['LANG:EN']
voi-            {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', 'LF:you_pl', '-SPEC:R', '-COMP:C/fin', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:R', 'N', 'PF:voi', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:*'}
loro            ['LANG:EN']
loro-           {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', '-COMP:C/fin', 'LF:they', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:C', 'COMP:R', 'N', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', 'COMP:uR', 'SPEC:A', 'PF:loro', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', '-COMP:*'}
mi              ['LANG:EN']
mi-             {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'PF:mi(cl)', 'COMP:P', '-SPEC:P', 'COMP:R', 'LF:me', 'N', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', 'CL', '-COMP:*'}
la              ['LANG:EN']
la-             {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'LF:her', 'PHI_N', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'COMP:R', 'N', 'PF:la(cl)', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', 'CL', '-COMP:*'}
lo              ['LANG:EN']
lo-             {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'PF:lo(cl)', 'COMP:R', 'N', 'COMP:R/D', '-SPEC:FORCE', '-COMP:WH', 'LF:him', 'LANG:IT', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', 'CL', '-COMP:*'}
si              ['LANG:EN']
si-             {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', 'PF:si(cl)', '-SPEC:P', 'COMP:C', 'COMP:R', 'LF:3sg', 'N', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', 'CAL:CL', '-SPEC:uWH', '-SPEC:ADV', '-COMP:*'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'LF:there', '-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'PHI_N', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'PF:ci', 'COMP:P', '-SPEC:P', 'COMP:R', 'N', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', 'LANG:IT', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', '-COMP:*'}
[-n]            {'PHI:PER:1', 'LANG:FI', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'inflectional'}
[-t]            {'LANG:FI', 'PHI', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:DET:DEF', 'inflectional'}
[-V]            {'LANG:FI', 'PHI:PER:3', 'PHI:NUM:SG', 'PHI', 'inflectional'}
[-mme]          {'PHI:PER:1', 'LANG:FI', 'PHI', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'inflectional'}
[-mme]          {'PHI:PER:1', 'LANG:FI', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'inflectional'}
[-tte]          {'LANG:FI', 'PHI', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:DET:DEF', 'inflectional'}
[-vat]          {'LANG:FI', 'PHI:PER:3', 'PHI', 'PHI:NUM:PL', 'inflectional'}
[-ni]           {'PHI:PER:1', 'LANG:FI', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'inflectional'}
[-si]           {'LANG:FI', 'PHI', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:DET:DEF', 'inflectional'}
[-nsa]          {'LANG:FI', 'PHI:PER:3', 'PHI:NUM:SG', 'PHI', 'inflectional'}
[-an]           {'PHI', 'PHI:PER:3', 'LANG:FI', 'inflectional'}
[-nne]          {'LANG:FI', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:DET:DEF', 'inflectional'}
[-s]            {'LANG:EN', 'PHI:GEN:M', 'PHI:PER:3', 'PHI:NUM:SG', 'PHI:GEN:F', 'PHI', 'inflectional'}
[-0]            {'PHI:PER:1', 'PHI:PER:3', 'PHI:NUM:SG', 'PHI:NUM:PL', 'PHI:PER:2', 'PHI:DET:DEF', 'inflectional', 'PHI:GEN:N', 'LANG:EN', 'PHI'}
[-o]            {'PHI:PER:1', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI', 'LANG:IT', 'PHI:DET:DEF', 'inflectional'}
[-i]            {'PHI', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:PER:2', 'LANG:IT', 'PHI:DET:DEF', 'inflectional'}
[-a]            {'PHI:PER:3', 'PHI:NUM:SG', 'PHI', 'LANG:IT', 'PHI:DET:DEF', 'inflectional'}
[-e]            {'PHI:PER:3', 'PHI:NUM:SG', 'PHI', 'LANG:IT', 'PHI:DET:DEF', 'inflectional'}
[-iamo]         {'PHI:PER:1', 'PHI', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'LANG:IT', 'PHI:DET:DEF', 'inflectional'}
[-te]           {'PHI', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:PER:2', 'LANG:IT', 'PHI:DET:DEF', 'inflectional'}
[-no]           {'PHI:PER:3', 'PHI', 'PHI:NUM:PL', 'LANG:IT', 'PHI:DET:DEF', 'inflectional'}
[-nom]          {'adjoinable', 'LANG:EN', 'NOM', 'inflectional', 'TAIL:FIN,ARG,VAL'}
[-par]          {'adjoinable', 'LANG:FI', 'TAIL:ARG,-VAL', 'PAR', 'inflectional'}
[-gen]          {'-float', 'LANG:EN', 'TAIL:INF,ARG', 'GEN', 'inflectional'}
gen             {'-float', 'LANG:EN', 'TAIL:INF,ARG', 'GEN', 'inflectional'}
[-n_acc]        {'adjoinable', 'n-ACC', 'LANG:FI', 'TAIL:PHI', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'inflectional'}
[-t_acc]        {'adjoinable', 't-ACC', 'LANG:FI', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'inflectional'}
[-0_acc]        {'adjoinable', 'LANG:FI', '0_ACC', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'TAIL:*PHI', 'inflectional'}
asp             {'LANG:EN', 'ASP:BOUNDED', 'inflectional'}
a'              {'PF:a', 'LF:A', 'LANG:X', 'a'}
b'              {'LF:B', 'LANG:X', 'b', 'PF:b'}
b''             {'LF:B', 'LANG:EN', 'b', 'PF:b', '-COMP:c'}
c''             {'SPEC:a', 'LANG:EN', 'c', 'LF:C', 'PF:c'}
c'              {'LF:C', 'LANG:X', 'c', 'PF:c'}
d'              {'d', 'PF:d', 'LANG:', 'LF:D'}
a''             ['LANG:EN']
x'              {'PF:x', 'LANG:X', 'LF:X', 'x'}
y'              {'y', 'LANG:X', 'LF:Y', 'PF:y'}
z'              {'PF:x', 'z', 'LANG:X', 'LF:Z'}
John'           {'LF:John', 'LANG:X', "N'", 'PF:John'}
admires'        {'PF:admires', 'LANG:X', "V'", 'LF:admires'}
admires''       {'SPEC:P', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'COMP:P', 'LANG:EN', '-COMP:T/fin', 'V', 'PF:admires', 'LF:admires', 'SPEC:ADV', 'SPEC:D', '-SPEC:FORCE', '-COMP:N', '-VAL', '-COMP:V', 'PHI:PER:_', 'ARG'}
Mary'           {'PF:Mary', 'LANG:X', "N'", 'LF:mary'}
T/fin           {'PHI:DET:_', 'PHI:GEN:_', 'COMP:T/prt', '-SPEC:C', 'PF:T', '-SPEC:T/fin', '-COMP:INF', '-SPEC:Neg', 'SPEC:TO/inf', 'T', 'PHI:NUM:_', 'LANG:EN', '-SPEC:v', 'VAL', '-COMP:T/fin', '!PROBE:V', 'COMP:v', 'COMP:V', 'SPEC:*', '-SPEC:TO/inf', 'T/fin', '!COMP:*', 'SPEC:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:C/fin', '-SPEC:V', 'LF:T', 'PHI:PER:_', 'ARG', '!SPEC:D', 'FIN'}
v               {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', '!COMP:*', 'SPEC:D', 'ASP', '-SPEC:N', '-VAL', 'LANG:EN', 'PHI:PER:_', 'LF:v', 'v', 'PF:v', '!PROBE:V', 'ARG', 'COMP:V'}
C/fin           {'C', '-SPEC:T/fin', 'C/fin', '-COMP:C/fin', 'LANG:EN', 'VAL', '!PROBE:FIN', 'PF:C', 'SPEC:*', 'COMP:Neg/fin', '-COMP:T/prt', 'COMP:T/fin', '!COMP:*', '-SPEC:C/fin', '-SPEC:N', '-ARG', 'LF:C/fin', 'FIN'}
T               {'-COMP:NEG', 'PHI:DET:_', 'COMP:T/prt', 'PHI:NUM:_', 'PF:T', '-SPEC:T/fin', 'PHI:GEN:_', 'T', 'LANG:EN', 'VAL', '!PROBE:V', 'COMP:v', 'COMP:V', 'SPEC:*', '!COMP:*', 'SPEC:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:V', 'LF:T', 'PHI:PER:_', 'ARG', 'FIN'}
T/prt           {'-COMP:NEG', 'PHI:DET:_', 'PF:T/prt', 'COMP:T/prt', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:GEN:_', 'T', 'T/prt', 'LANG:EN', 'VAL', '!PROBE:V', 'COMP:v', 'COMP:V', 'SPEC:*', '!COMP:*', 'SPEC:D', '-SPEC:FORCE', '-SPEC:N', '-SPEC:V', 'COMP:D', 'LF:T/prt', 'PHI:PER:_', 'ARG', 'FIN'}
a0              {'LF:A', '-SPEC:D', '-adjoinable', 'A', 'TAIL:D', 'COMP:0', 'LANG:EN', 'PF:A', '-SPEC:A', 'adjoinable'}
n               {'LF:n', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:R', 'VAL', '!SPEC:*', 'SPEC:*', '!COMP:*', '-COMP:N', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', 'COMP:uR', 'INF', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'COMP:C', 'COMP:0', 'ARG', 'PHI:PER:_', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', '-COMP:v', '-COMP:C/fin', 'PF:n', '-COMP:A', 'COMP:P', '-SPEC:P', 'LANG:EN', 'COMP:v', 'COMP:R', 'COMP:V', 'N', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', 'n', '!SPEC:D'}
impass          {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PF:impass', '!COMP:*', 'SPEC:D', 'ASP', '-SPEC:N', '-VAL', 'LANG:EN', 'PHI:PER:_', 'v', 'ARG', '!PROBE:V', 'COMP:V', 'LF:impass'}
cau             {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'LF:v/Cause', '!COMP:*', 'SPEC:D', 'ASP', '-SPEC:N', '-VAL', 'LANG:EN', 'PHI:PER:_', 'v', 'PF:Cau', 'ARG', '!PROBE:V', 'COMP:V'}
INF             {'-SPEC:T/fin', '!COMP:*', 'LF:INF', '-COMP:C/fin', 'INF', '-SPEC:V', 'LANG:EN', 'PF:INF', '-COMP:FORCE', '-COMP:T/fin', 'COMP:v', 'COMP:V'}
prtcpl          {'-COMP:NEG', 'PHI:DET:_', 'PF:T/prt', 'COMP:T/prt', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:GEN:_', 'T', '-COMP:C/fin', 'T/prt', 'LANG:EN', 'VAL', '-COMP:T/fin', '!PROBE:V', 'COMP:v', 'COMP:V', 'SPEC:*', '!COMP:*', 'SPEC:D', '-SPEC:FORCE', 'INF', '-SPEC:N', '-SPEC:V', 'COMP:D', 'LF:T/prt', 'PHI:PER:_', '-COMP:FORCE', 'ARG', 'FIN'}
TO/inf          {'LF:TO/inf', '-SPEC:T/fin', '!COMP:V', '-COMP:C/fin', '?ARG', '-SPEC:v', 'LANG:EN', '-COMP:T/fin', 'COMP:v', 'TO/inf', 'COMP:V', 'adjoinable', '!COMP:*', 'PF:TO/inf', 'INF', '-SPEC:V', '-VAL', '-COMP:FORCE'}
A/inf           {'LF:A/inf', '-SPEC:T/fin', '-COMP:C/fin', '-SPEC:Neg/fin', '?ARG', 'LANG:EN', '?VAL', '-COMP:T/fin', 'COMP:v', 'COMP:V', 'SPEC:*', '!COMP:*', 'A/inf', 'INF', '-SPEC:V', '-COMP:FORCE', 'PF:A/inf'}
ARE/inf         {'-SPEC:T/fin', '-COMP:C/fin', 'PF:are', 'ARE/inf', '?ARG', 'LF:ARE/inf', 'LANG:EN', 'VAL', '-COMP:T/fin', 'COMP:v', 'COMP:V', 'SPEC:*', '-adjoinable', '!COMP:*', 'INF', '-SPEC:V', '-COMP:FORCE'}
ESSA/inf        {'ADV', '-SPEC:T/fin', '-COMP:C/fin', '-SPEC:Neg/fin', '?ARG', 'LF:while', '?VAL', 'LANG:EN', '-COMP:T/fin', 'PF:essa', 'COMP:v', 'COMP:V', 'SPEC:*', 'adjoinable', '!COMP:*', '-SPEC:FORCE', 'INF', '-SPEC:N', '-SPEC:V', 'TAIL:T', '-COMP:FORCE', 'ESSA/inf'}
TUA/inf         {'PF:tua', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'ADV', '-SPEC:T/fin', '-COMP:C/fin', '-SPEC:Neg/fin', 'LANG:EN', 'VAL', '-COMP:T/fin', 'COMP:v', '!SPEC:*', 'COMP:V', 'adjoinable', 'SPEC:*', 'TUA/inf', '!COMP:*', '-SPEC:FORCE', 'LF:after', 'INF', '-SPEC:N', '-SPEC:V', 'PHI:PER:_', 'TAIL:T', '-COMP:FORCE', 'ARG'}
VA/inf          {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', '-SPEC:T/fin', '-COMP:C/fin', 'LF:VA', 'LANG:EN', 'VAL', '-COMP:T/fin', 'COMP:v', '!SPEC:*', 'COMP:V', 'SPEC:*', '!COMP:*', 'INF', '-SPEC:N', 'PF:vAn', '-SPEC:V', 'PHI:PER:_', '-COMP:FORCE', 'ARG', 'VA/inf'}
MA/ssa          {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'ADV', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LANG:EN', 'LF:in_doing', '-SPEC:*', 'COMP:v', 'MA/inf', 'COMP:V', 'adjoinable', '-SPEC:FORCE', 'TAIL:V', '-SPEC:N', '-VAL', 'PHI:PER:_', 'ARG', 'PF:massa'}
MA/tta          {'PF:matta', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', 'ADV', '-SPEC:T/fin', 'LF:without_doing', '-SPEC:FORCE', '-SPEC:N', 'adjoinable', '-VAL', '-SPEC:Neg/fin', 'LANG:EN', 'TAIL:T', 'PHI:PER:_', 'ARG', 'MA/inf'}
MA/lla          {'-SPEC:T/fin', 'adjoinable', 'PF:malla', '-SPEC:N', '-VAL', 'PHI:PER:_', 'TAIL:T', 'ARG', 'MA/inf', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', 'ADV', '-SPEC:Neg/fin', 'LANG:EN', 'COMP:v', 'COMP:V', '-SPEC:FORCE', 'LF:by_doing'}
MA/inf          {'-SPEC:T/fin', 'adjoinable', '-SPEC:N', '-VAL', 'PHI:PER:_', 'ARG', 'MA/inf', 'PHI:DET:_', 'LF:to_do', 'PHI:NUM:_', 'PHI:GEN:_', 'ADV', 'PF:maan', '-SPEC:Neg/fin', 'LANG:EN', 'COMP:v', 'COMP:V', '-SPEC:FORCE', 'TAIL:V'}
E/inf           {'SPEC:*', 'LANG:FI', 'ADV', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', '-VAL', '-ARG', '-SPEC:Neg/fin', 'LF:by', 'TAIL:T', 'PF:en', 'adjoinable'}
BE-             {'SPEC:P', 'COMP:T/prt', '-SPEC:T/fin', '-COMP:v', 'SPEC:TO/inf', 'ASP', 'PF:BE', 'COMP:P', 'LANG:EN', '-COMP:T/fin', 'V', 'SPEC:ADV', 'COPULA', 'SPEC:D', '!COMP:*', '-SPEC:FORCE', 'LF:BE', '-COMP:N', '-ARG', '-VAL', '-COMP:V'}
D               {'-SPEC:C', '!PROBE:N', '-SPEC:T/fin', 'D', '-SPEC:INF', '-COMP:D', '-SPEC:Neg/fin', 'OP', '-SPEC:P', 'LANG:EN', 'COMP:N', '-COMP:uR', '-COMP:T/fin', 'adjoinable', 'PF:D', '!COMP:*', 'LF:D', '-SPEC:V', '-ARG', '-SPEC:MA/lla'}
D/rel           {'D/rel', '-SPEC:C', '!PROBE:N', '-SPEC:T/fin', '-SPEC:INF', 'D', '-COMP:D', '-COMP:C/fin', '-SPEC:Neg/fin', 'OP', 'COMP:N', 'LANG:EN', '-SPEC:P', '-COMP:uR', '-COMP:T/fin', 'adjoinable', 'PF:D/rel', 'LF:D/rel', '!COMP:*', 'SPEC:D', 'OP:_', '-SPEC:V', '-ARG', 'OP:REL', '-SPEC:MA/lla'}
P               {'PHI:DET:_', 'PHI:GEN:_', 'PHI:NUM:_', '-SPEC:C', 'PF:P', '-SPEC:T/fin', '-COMP:uWH', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:P', '-float', 'LANG:EN', '-SPEC:v', '-COMP:T/fin', '-SPEC:*', '-COMP:ADV', 'adjoinable', '!COMP:*', '-SPEC:FORCE', '-COMP:N', '-SPEC:C/fin', '-SPEC:N', '-VAL', 'COMP:D', '-SPEC:V', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:ADV', 'ARG', 'LF:P', '-SPEC:iR', 'P'}
pro             ['LANG:EN']
pro-            {'-SPEC:T/fin', '-SPEC:INF', '-COMP:v', 'LF:pro', '-COMP:C/fin', '-SPEC:R', '-COMP:A', 'COMP:P', '-SPEC:P', 'LANG:EN', 'COMP:C', 'PF:(pro)', 'COMP:R', 'N', 'COMP:R/D', '-COMP:WH', '-SPEC:FORCE', '-COMP:N', 'COMP:uR', 'SPEC:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:V', '-SPEC:N', '-COMP:AUX', '-SPEC:uWH', '-SPEC:ADV', 'PHI'}
cl              {'RIGHT:ARE/inf', 'RIGHT:PRG', 'LEFT:D,CL', 'LANG:EN', 'CL', 'LEFT:T/fin', 'inflectional'}
inc             {'LANG:EN', 'INCORPORATED', 'inflectional'}
sg              {'PHI:NUM:SG', 'LANG:EN', 'inflectional'}
pl              {'PHI:NUM:PL', 'LANG:EN', 'inflectional'}
1p              {'PHI:PER:1', 'LANG:EN', 'inflectional'}
2p              {'LANG:EN', 'PHI:PER:2', 'inflectional'}
3p              {'PHI:PER:3', 'LANG:EN', 'inflectional'}
def             {'LANG:EN', 'PHI:DET:DEF', 'inflectional'}
indef           {'PHI:DET:INDEF', 'LANG:EN', 'inflectional'}
hum             {'PHI:HUM:HUM', 'LANG:EN', 'inflectional'}
nonhum          {'PHI:HUM:NONHUM', 'LANG:EN', 'inflectional'}
m               {'LANG:EN', 'PHI:GEN:M', 'inflectional'}
f               {'PHI:GEN:F', 'LANG:EN', 'inflectional'}
nom             {'TAIL:FIN,!COMP:*,VAL', 'LANG:EN', 'NOM', 'inflectional'}
acc             {'TAIL:v', 'LANG:EN', 'ACC', 'inflectional'}
dat             {'LANG:EN', 'DAT', 'TAIL:v', 'inflectional'}
uC/op           {'LANG:EN', 'uC/op', 'inflectional'}
wh              {'OP:WH', 'OP:_', 'LANG:EN', 'inflectional'}
wh_             {'OP', 'LANG:EN', 'FORCE:OP:WH', 'OP:_', 'inflectional'}
top             {'OP:TOP', 'LANG:EN', 'inflectional'}
foc             {'LANG:EN', 'OP:FOC', 'inflectional'}
C/op            {'OP:C/OP', 'LANG:EN', 'inflectional'}
rel             {'OP:REL', 'adjoinable', 'LANG:EN', 'OP:_', 'SPEC:D', '-COMP:C/fin', 'inflectional'}
Q               {'OP', 'LANG:EN', 'OP:WH', 'OP:Q', 'inflectional'}
