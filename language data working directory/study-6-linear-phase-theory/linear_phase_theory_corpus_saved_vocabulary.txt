ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'PF:a', '!COMP:*', '-SPEC:iWH', '-SPEC:N', '-ARG', 'COMP:D', 'adjoinable', 'LANG:IT', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:C/fin', '-VAL', '-SPEC:P', '-SPEC:FORCE', '-SPEC:ADV', '-SPEC:C', '-SPEC:*', '-COMP:ADV', 'COMP:ARE/inf', '-SPEC:v', '-COMP:uWH', 'LF:to', '-SPEC:V', 'P', '-SPEC:iR', '-COMP:T/fin', '-SPEC:INF', '-SPEC:T/fin'}
a_D             {'LF:D', '!COMP:*', '!PROBE:N', '-COMP:uR', '-SPEC:N', '-ARG', 'LANG:EN', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:P', 'PF:D', 'D', '-SPEC:D', '-SPEC:MA/lla', 'COMP:N', '-SPEC:C', '-COMP:D', '-SPEC:V', 'OP', '-COMP:T/fin', '-SPEC:INF', '-SPEC:T/fin'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-COMP:Neg', '!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'PHI:PER:_', 'PF:admire', 'COMP:D', 'LANG:EN', '-COMP:v', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'LF:admire', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', '-SPEC:Neg', 'SPEC:ADV', '-COMP:V', 'SPEC:P', '-COMP:P', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:T/fin', 'V'}
admire*         ['LANG:EN']
T/fin*          {'LF:T', 'LANG:EN', "PF:T/fin'", '-VAL', '!SPEC:*', 'NO_NUMBER', 'CAT:T/fin', 'NO_DET'}
v*              {'LF:v', 'CAT:v', 'NO_NUMBER', 'PF:v', 'LANG:EN', '-VAL', 'NO_DET'}
admire**        ['LANG:EN']
T/fin**         {'LF:T', 'PHI:PER:3', 'LANG:EN', '-VAL', 'NO_PERSON', "PF:T/fin''", '!SPEC:*', 'NO_NUMBER', 'CAT:T/fin', 'NO_DET'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'PHI:DET:_', 'PHI:PER:_', 'COMP:D', '-COMP:v', 'LANG:IT', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', 'LF:admire', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PF:adora', '-COMP:T/fin', '-SPEC:T/fin', 'V'}
antaa           ['LANG:FI']
anta-           {'!COMP:*', 'PHI:DET:_', 'CLASS:DITR', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:N', 'COMP:D', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'PF:antaa', 'SPEC:ADV', 'ASP:BOUNDED', '+SEM:directional', '-COMP:FIN', '-COMP:V', 'SPEC:P', 'SPEC:D', '-COMP:T/fin', 'LF:give', '-SPEC:T/fin', 'V', 'LANG:FI'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'PHI:DET:_', 'PF:ask', 'PHI:PER:_', 'COMP:D', 'LANG:EN', '-COMP:v', 'LF:ask', '-VAL', 'SEM:internal', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:V', 'SPEC:P', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:T/fin', 'V', 'SPEC:D'}
ask-            {'PHI:DET:_', 'PF:ask', 'PHI:PER:_', 'COMP:D', 'LANG:EN', '-COMP:v', 'LF:ask', '-VAL', 'SEM:internal', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:V', 'SPEC:P', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:T/fin', 'V', 'SPEC:D'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'PF:avain', '-SPEC:N', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:C/fin', '-COMP:N', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', 'LF:key', '-COMP:ADV', '-SEM:directional', '-COMP:WH', '-SPEC:R', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LANG:FI'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-SPEC:uWH', '-SPEC:N', 'COMP:R', '-COMP:v', '-SPEC:C/fin', '-COMP:N', 'COMP:P', '-SPEC:P', 'LF:car', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-SEM:directional', '-COMP:WH', '-COMP:A', 'PF:auto', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LANG:FI'}
city            {'-SPEC:uWH', '-SPEC:N', 'COMP:R', 'LANG:EN', '-COMP:v', '-COMP:N', '-SPEC:C/fin', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'LF:city', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', 'PF:city', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
che             ['LANG:IT']
che-            {'-SPEC:uWH', '-SPEC:N', '-COMP:*', 'COMP:R', '-COMP:v', '-SPEC:C/fin', 'LANG:IT', '-COMP:N', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', 'PHI_N', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'PF:che', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LF:who'}
chiamato        ['LANG:IT']
chiamata-       {'PHI:DET:_', 'PHI:PER:_', '-COMP:v', 'PF:chiamato', 'LANG:IT', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:V', 'LF:called', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'V'}
danno           {'PF:danno', '-SPEC:uWH', '-SPEC:N', 'COMP:R', '-COMP:v', '-SPEC:C/fin', 'LANG:IT', '-COMP:N', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'LF:damage', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'PHI:DET:_', 'PHI:PER:_', 'COMP:D', '-COMP:v', 'LANG:IT', '-VAL', 'ASP', 'SEM:internal', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', 'COMP:ARE/inf', '-COMP:V', 'SPEC:P', 'PF:detest', '-COMP:T/fin', 'LF:detest', '-SPEC:T/fin', 'V'}
devono          ['LANG:EN']
deva-           {'PHI:DET:_', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', 'LANG:IT', '-COMP:N', '-VAL', 'SEM:internal', 'COMP:P', '-SPEC:T/fin', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'PF:deva', 'SPEC:ADV', 'COMP:ARE/inf', '-COMP:V', 'SPEC:P', '-COMP:T/fin', '-ASP', 'LF:must', 'V', 'SPEC:D'}
di              {'SPEC:*', '!COMP:*', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:N', 'PHI:PER:_', 'COMP:D', '-SPEC:C/fin', '-COMP:N', '-SPEC:Neg/fin', '-adjoinable', '-VAL', '-SPEC:P', '-SPEC:FORCE', 'PF:di', 'ARG', '-SPEC:C', '-SPEC:ADV', 'PHI:NUM:_', '-COMP:ADV', '-SPEC:v', '-COMP:uWH', '-SPEC:V', 'P', '-SPEC:iR', '-COMP:T/fin', 'LF:of', '-SPEC:INF', '-SPEC:T/fin', 'LANG:FI'}
does            {'SPEC:*', '!COMP:*', 'PHI:DET:_', '-SPEC:N', 'PHI:GEN:M', 'PHI:PER:_', '-COMP:INF', 'SPEC:TO/inf', 'T/fin', '-SPEC:FORCE', 'PHI:NUM:SG', '-SPEC:v', 'VAL', 'COMP:v', 'COMP:T/prt', 'FIN', '-SPEC:TO/inf', 'COMP:V', '-SPEC:T/fin', 'SPEC:D', 'PF:does', 'PHI:PER:3', 'LANG:EN', 'COMP:D', '-SPEC:C/fin', 'PHI:GEN:_', 'COMP:Neg', 'ARG', 'PHI:NUM:_', '-SPEC:Neg', 'PHI:GEN:F', '-SPEC:V', 'T', '-COMP:T/fin', 'LF:does', '!PROBE:V', '!SPEC:D'}
does_C          ['LANG:EN']
does-           {'SPEC:*', '!COMP:*', 'PHI:DET:_', '-SPEC:N', 'PHI:GEN:M', 'PHI:PER:_', '-COMP:INF', 'SPEC:TO/inf', 'T/fin', '-SPEC:FORCE', 'PHI:NUM:SG', '-SPEC:v', 'VAL', 'COMP:v', 'COMP:T/prt', 'FIN', '-SPEC:TO/inf', 'COMP:V', '-SPEC:T/fin', 'SPEC:D', 'PF:does', 'PHI:PER:3', 'LANG:EN', 'COMP:D', '-SPEC:C/fin', 'PHI:GEN:_', 'COMP:Neg', 'ARG', 'PHI:NUM:_', '-SPEC:Neg', 'PHI:GEN:F', '-SPEC:V', 'T', '-COMP:T/fin', 'LF:does', '!PROBE:V', '!SPEC:D'}
dorme           ['LANG:IT']
dorme-          {'PHI:DET:_', 'PHI:PER:_', 'LANG:EN', '-COMP:v', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'LF:sleep', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', 'PF:dorme', '-COMP:V', 'SPEC:P', '!SPEC:D', '-COMP:T/fin', '-SPEC:T/fin', 'V'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'%SPEC:INF', 'SPEC:*', '!COMP:*', 'PHI:DET:_', 'PHI:PER:_', 'SEM:internal', 'Neg/fin', '-SPEC:T', 'ARG', 'PHI:NUM:_', 'VAL', 'LF:neg', 'COMP:T/prt', 'POL:NEG', 'FIN', '!SPEC:*', 'NEG', '!COMP:T', 'PF:ei', '-SPEC:T/fin', 'LANG:FI'}
e-              {'%SPEC:INF', 'SPEC:*', '!COMP:*', 'PHI:DET:_', 'PHI:PER:_', 'SEM:internal', 'Neg/fin', '-SPEC:T', 'ARG', 'PHI:NUM:_', 'VAL', 'LF:neg', 'COMP:T/prt', 'POL:NEG', 'FIN', '!SPEC:*', 'NEG', '!COMP:T', 'PF:ei', '-SPEC:T/fin', 'LANG:FI'}
elaa            ['LANG:FI']
ela-            {'CLASS:INTR', 'PHI:DET:_', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:N', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'LF:live', 'SPEC:ADV', '-COMP:D', 'PF:elaa', 'SPEC:D', '-COMP:V', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'LANG:FI'}
etsii           ['LANG:FI']
etsi-           {'PHI:DET:_', 'PF:etsi', 'PHI:PER:_', 'COMP:D', '-COMP:v', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', '!COMP:D', 'SPEC:ADV', '-COMP:V', 'SPEC:P', '-COMP:T/fin', 'LF:search', '-SPEC:T/fin', 'V', 'LANG:FI'}
etta            {'!COMP:*', '-ARG', 'COMP:T/fin', 'FORCE', 'LF:that', '-VAL', 'FIN', '!PROBE:T/fin', 'PF:etta', 'COMP:C/fin', '-SPEC:*', 'LANG:FI'}
flow'           {'PHI:DET:_', 'PHI:PER:_', 'LANG:EN', '-COMP:v', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', 'LF:flow', '-COMP:V', 'SPEC:P', 'PF:flow', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'SPEC:D'}
from            {'!COMP:*', '-SPEC:iWH', 'TAIL:V,+SEM:directional', '-SPEC:N', 'PHI:DET:_', 'PHI:PER:_', 'LANG:EN', 'adjoinable', '-COMP:N', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:C/fin', '-VAL', '-SPEC:P', 'PHI:GEN:_', 'PF:from', '-SPEC:FORCE', 'ARG', '-SPEC:C', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:*', '-COMP:ADV', '-SPEC:v', '-COMP:uWH', '-SPEC:V', 'P', '-SPEC:iR', '-COMP:T/fin', '-float', '-SPEC:INF', 'LF:from', '-SPEC:T/fin'}
gave            ['LANG:EN']
give-           {'!COMP:*', 'PHI:DET:_', 'CLASS:DITR', 'PF:give', 'PHI:PER:_', 'LANG:EN', '-COMP:v', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', 'COMP:D', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', '+SEM:directional', '-COMP:FIN', '-COMP:V', 'SPEC:P', '-COMP:T/fin', 'LF:give', '-SPEC:T/fin', 'V', 'SPEC:D'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'LF:Giuseppe', '-SPEC:uWH', '-SPEC:N', 'COMP:R', '-COMP:v', '-SPEC:C/fin', 'LANG:IT', '-COMP:N', '-SPEC:T/fin', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-SEM:directional', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', 'PF:Giuseppe'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'PHI:PER:_', 'COMP:D', '-COMP:v', '-VAL', 'ASP', '-COMP:N', 'PF:haluaa', 'SEM:internal', 'SPEC:TO/inf', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', '-SPEC:*', 'SPEC:ADV', 'ASP:BOUNDED', '-COMP:V', 'LF:want', 'SPEC:P', '-COMP:P', 'COMP:A/inf', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'LANG:FI'}
hairitsee       ['LANG:FI']
hairitse-       {'PHI:DET:_', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:N', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'PF:hairitsee', '!COMP:D', 'SPEC:ADV', 'V', 'SPEC:D', '-COMP:V', 'SPEC:P', 'LF:disturb', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:FIN', 'LANG:FI'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'SPEC:*', 'COMP:T', 'PHI:DET:_', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', 'LANG:IT', '-COMP:N', '-VAL', 'SEM:internal', 'COMP:P', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PF:ha', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:V', 'SPEC:P', '-COMP:T/fin', '-ASP', '-SPEC:T/fin', 'LF:have', 'V', 'SPEC:D'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'CLASS:INTR', 'PF:havia', 'PHI:DET:_', 'LF:disappear', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:N', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:D', '-COMP:V', 'SPEC:D', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'LANG:FI'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'PF:ihaile-', '!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:N', 'COMP:D', 'COMP:P', 'LF:admire', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', '!COMP:D', 'SPEC:ADV', 'V', '-COMP:V', 'SPEC:P', '-COMP:P', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:FIN', 'LANG:FI'}
il              {'LF:the', '!COMP:*', '!PROBE:N', '-COMP:uR', '-SPEC:N', '-ARG', 'adjoinable', 'LANG:IT', '-SPEC:Neg/fin', '-SPEC:P', 'D', '-SPEC:D', '-SPEC:MA/lla', 'COMP:N', '-SPEC:C', '-COMP:D', '-SPEC:V', 'OP', '-COMP:T/fin', 'PF:il', '-SPEC:INF', '-SPEC:T/fin'}
i               {'LF:the', '!COMP:*', '!PROBE:N', '-COMP:uR', '-SPEC:N', '-ARG', 'adjoinable', 'LANG:IT', '-SPEC:Neg/fin', '-SPEC:P', 'D', '-SPEC:D', '-SPEC:MA/lla', 'COMP:N', '-SPEC:C', '-COMP:D', '-SPEC:V', 'OP', '-COMP:T/fin', 'PF:il', '-SPEC:INF', '-SPEC:T/fin'}
in              {'!COMP:*', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:N', 'PHI:PER:_', 'COMP:D', 'adjoinable', 'LANG:IT', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:C/fin', '-VAL', '-SPEC:P', 'PHI:GEN:_', 'LF:in', 'PF:in', '-SPEC:FORCE', 'ARG', '-SPEC:ADV', '-SPEC:C', 'PHI:NUM:_', '-COMP:ADV', '-SPEC:v', '-COMP:uWH', '-SPEC:V', 'P', '-SPEC:iR', '-COMP:T/fin', '-SPEC:INF', '-SPEC:T/fin'}
infermieri      {'-SPEC:uWH', '-SPEC:N', 'COMP:R', '-COMP:v', '-SPEC:C/fin', 'LANG:IT', '-COMP:N', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', 'PF:infermieri', 'LF:nurses', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
is              ['LANG:EN']
be-             {'!COMP:*', '-ARG', 'LANG:EN', 'SPEC:TO/inf', '-COMP:v', '-VAL', 'ASP', '-COMP:TO/inf', '-COMP:N', 'COMP:P', 'COPULA', '-SPEC:FORCE', 'PF:be', 'SPEC:ADV', 'SPEC:D', '-COMP:V', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'LF:be'}
istuuko         ['LANG:FI']
istuu-          {'CLASS:INTR', 'PHI:DET:_', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:N', 'PF:istuu', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:D', '-COMP:V', 'SPEC:D', 'SPEC:P', 'LF:sit', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'LANG:FI'}
John            ['LANG:EN']
John-           {'PF:John', '-SPEC:uWH', '-SPEC:N', 'COMP:R', 'LANG:EN', '-COMP:v', '-COMP:N', '-SPEC:C/fin', '-adjoinable', 'COMP:P', '-SPEC:P', 'COMP:uR', 'LF:John', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-SEM:directional', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-SPEC:uWH', '-SPEC:N', 'COMP:R', '-COMP:v', '-SPEC:C/fin', '-COMP:N', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-SEM:directional', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'PF:Jukka', 'N', '-COMP:C/fin', 'COMP:R/D', 'LF:Jukka', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LANG:FI'}
juosten         ['LANG:FI']
juokse-         {'PHI:DET:_', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:N', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', 'PF:juokse-', '-COMP:V', 'SPEC:P', '-COMP:T/fin', 'LF:run', '-SPEC:T/fin', 'V', 'LANG:FI'}
istuu           ['LANG:FI']
istu-           {'PHI:DET:_', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:N', 'PF:istuu', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'LF:sit', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'LANG:FI'}
kaksi           {'SPEC:*', 'PHI:NUM:_', 'PHI:DET:_', 'PF:kaksi', 'PHI:PER:_', '-VAL', 'TAIL:ARG,VAL,FIN', 'COMP:n', 'NUM', 'COMP:N', 'ARG', 'PHI:NUM:SG', 'LF:two', 'LANG:FI'}
kaksi           {'SPEC:*', 'TAIL:*POL:NEG', 'PF:kaksi', 'LANG:EN', 'COMP:n', 'NUM', 'COMP:N', 'TAIL:ARG,ASP:BOUNDED', 'LF:two'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'SPEC:*', 'NUM', 'COMP:N', 'PF:kaksi', 'LF:two', 'COMP:n', 'LANG:FI'}
kaupunkia       ['LANG:EN']
kaupunki        {'-SPEC:uWH', '-SPEC:N', 'COMP:R', '-COMP:v', '-SPEC:C/fin', '-COMP:N', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'LF:city', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', 'PF:kaupunki', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', '-COMP:P', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LANG:FI'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'PHI:DET:_', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:N', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', 'SEM:external', 'PF:kaske', '-COMP:V', '!COMP:A/inf', 'SPEC:P', 'LF:order', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'LANG:FI'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-SPEC:uWH', '-SPEC:N', 'COMP:R', '-COMP:v', '-SPEC:C/fin', '-COMP:N', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', 'PF:kello', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'LF:watch', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LANG:FI'}
kello0-         {'LF:watch', '2SPEC', 'SPEC:D', 'PF:kello', '0', 'LANG:FI'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-SPEC:uWH', '-SPEC:N', 'COMP:R', 'PF:key', 'LANG:EN', '-COMP:N', '-COMP:v', '-SPEC:C/fin', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', 'LF:key', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-SPEC:uWH', '-SPEC:N', 'COMP:R', '-COMP:v', '-SPEC:C/fin', '-COMP:N', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', 'PF:kirja', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-SEM:directional', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', 'LF:book', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LANG:FI'}
kohti           {'SPEC:*', '!COMP:*', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:N', 'PHI:PER:_', 'COMP:D', 'adjoinable', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:C/fin', '-VAL', '-SPEC:P', '-SPEC:FORCE', 'ARG', '-SPEC:ADV', '-SPEC:C', 'PHI:NUM:_', 'TAIL:V', '-COMP:ADV', '-SPEC:v', '-COMP:uWH', '-SPEC:V', 'P', 'PF:kohti', '-SPEC:iR', '-COMP:T/fin', '-SPEC:INF', '-SPEC:T/fin', 'LF:towards', 'LANG:FI'}
koko            {'!COMP:*', 'TAIL:T', '!PROBE:N', '-COMP:uR', '-SPEC:N', '-ARG', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:P', 'D', '-SPEC:D', '-SPEC:MA/lla', 'COMP:N', '-SPEC:C', 'LF:all', '-COMP:D', '-SPEC:V', 'PF:koko', 'OP', '-COMP:T/fin', '-SPEC:INF', '-SPEC:T/fin', 'LANG:FI'}
kuka            ['LANG:FI']
kuka-           {'-SPEC:uWH', '-SPEC:N', 'COMP:R', 'PHI', '-COMP:v', '-COMP:N', '-SPEC:C/fin', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', 'PF:kuka', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LF:who', 'LANG:FI'}
kuorsaa-        {'PF:kuorsaa', 'PHI:DET:_', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:N', 'COMP:P', '-SPEC:FORCE', 'LF:snore', 'ARG', 'PHI:NUM:_', '-COMP:D', 'SPEC:ADV', '-COMP:WH', '-COMP:V', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'LANG:FI'}
kuorsaamalla    ['LANG:FI']
lahella         {'SPEC:*', '!COMP:*', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:N', 'PHI:PER:_', 'adjoinable', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:C', '-SPEC:v', '-COMP:uWH', 'VAL', 'LF:near', 'COMP:v', 'P', 'COMP:V', '-SPEC:INF', '-SPEC:T/fin', 'LANG:FI', 'COMP:D', '-SPEC:C/fin', '-SPEC:P', 'ARG', '-SPEC:ADV', 'PHI:NUM:_', '-COMP:ADV', '-SPEC:V', 'PF:lahella', 'INF', '-COMP:FORCE', '-SPEC:iR', '!SPEC:*', '-COMP:C/fin', '-COMP:T/fin', '!SPEC:D'}
lahella         {'SPEC:*', '!COMP:*', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:N', 'PHI:PER:_', 'COMP:D', 'adjoinable', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:C/fin', '-VAL', '-SPEC:P', '-SPEC:FORCE', 'ARG', '-SPEC:ADV', '!COMP:D', '-SPEC:C', 'PHI:NUM:_', '-COMP:ADV', '-SPEC:v', '-COMP:uWH', 'LF:near', '-SPEC:V', 'PF:lahella', 'P', '-SPEC:iR', '-COMP:T/fin', '-SPEC:INF', '-SPEC:T/fin', 'LANG:FI'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'CLASS:INTR', 'COMP:PP', 'PF:lahtea', 'PHI:DET:_', 'PHI:PER:_', 'LF:leave', '-COMP:v', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:D', 'SPEC:D', '-COMP:V', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'LANG:FI'}
lavano          ['LANG:IT']
lava-           {'!COMP:*', 'PHI:DET:_', 'PHI:PER:_', 'COMP:D', '-COMP:v', 'LANG:IT', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'LF:wash', 'PF:lava', '-COMP:T/fin', '-SPEC:T/fin', 'V'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'LF:D', '!COMP:*', '!PROBE:N', '-COMP:uR', '-SPEC:N', '-ARG', 'adjoinable', 'LANG:IT', '-SPEC:Neg/fin', '-SPEC:P', 'D', '-SPEC:D', '-SPEC:MA/lla', 'COMP:N', '-SPEC:C', '-COMP:D', 'PF:le', '-SPEC:V', 'OP', '-COMP:T/fin', '-SPEC:INF', '-SPEC:T/fin'}
leaves          ['LANG:EN']
leave           {'PHI:DET:_', 'PHI:PER:_', 'LF:leave', 'LANG:EN', '-COMP:v', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:V', 'SPEC:P', '!SPEC:D', 'PF:leave', '-COMP:T/fin', '-SPEC:T/fin', 'V'}
leave-          {'PHI:DET:_', 'PHI:PER:_', 'LF:leave', 'LANG:EN', '-COMP:v', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', '-SPEC:T/fin', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PF:leave', '-COMP:T/fin', '!SPEC:D', 'V'}
like-           {'PHI:DET:_', 'PHI:PER:_', 'LANG:EN', '-COMP:v', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', '!COMP:D', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PF:like', 'LF:like', '-COMP:T/fin', '-SPEC:T/fin', 'V'}
likes           ['LANG:EN']
like            {'PHI:DET:_', 'PHI:PER:_', 'LANG:EN', '-COMP:v', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', '!COMP:D', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PF:like', 'LF:like', '-COMP:T/fin', '-SPEC:T/fin', 'V'}
little          ['LANG:EN']
little-         {'LF:little', '2SPEC', 'PF:little-', 'LANG:EN', '0', 'SPEC:D'}
lle             {'!COMP:*', '-SPEC:iWH', 'TAIL:V,+SEM:directional', '-SPEC:N', 'PHI:DET:_', 'PHI:PER:_', 'COMP:D', 'LF:for', 'adjoinable', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:C/fin', '-VAL', '-SPEC:P', '-SPEC:FORCE', 'ARG', '-SPEC:ADV', '-SPEC:C', 'PHI:NUM:_', '-SPEC:*', '-COMP:ADV', '-SPEC:v', '-COMP:uWH', '+SEM:directional', '-SPEC:V', 'P', '-SPEC:iR', '-COMP:T/fin', '-SPEC:INF', '-SPEC:T/fin', 'PF:P(lle)', 'LANG:FI'}
lla             {'SPEC:*', '!COMP:*', 'TAIL:T', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:N', 'PHI:PER:_', 'COMP:D', 'LF:by', 'adjoinable', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:C/fin', '-VAL', '-SPEC:P', '-SPEC:FORCE', 'PF:P(lla)', 'ARG', '-SPEC:C', '-SPEC:ADV', 'PHI:NUM:_', '-COMP:ADV', '-SPEC:v', '-COMP:uWH', '-SPEC:V', 'P', '-SPEC:iR', 'TAIL:*V', '-COMP:T/fin', '-SPEC:INF', '-SPEC:T/fin', 'LANG:FI'}
Luisa           ['LANG:IT']
Luisa-          {'-SPEC:uWH', '-SPEC:N', 'COMP:R', '-COMP:v', '-SPEC:C/fin', 'LANG:IT', '-COMP:N', 'COMP:P', '-SPEC:P', 'COMP:uR', 'PF:Luisa', '-SPEC:FORCE', '-SPEC:ADV', 'LF:Luisa', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-SEM:directional', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
lukemalla       ['LANG:FI']
luke-           {'!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:N', 'COMP:D', 'COMP:P', 'LF:read', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', 'PF:luke', '-COMP:V', 'SPEC:P', '-COMP:P', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'LANG:FI'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'PF:loyta-', '!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:N', 'COMP:D', 'LF:find', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', '!COMP:D', 'SPEC:ADV', 'ASP:BOUNDED', '-COMP:V', 'SPEC:P', '-COMP:P', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'LANG:FI'}
Mary            ['LANG:EN']
Mary-           {'-SPEC:uWH', '-SPEC:N', 'COMP:R', 'LANG:EN', '-COMP:v', '-COMP:N', '-SPEC:C/fin', '-adjoinable', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', 'PF:Mary', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-SEM:directional', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LF:Mary'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-SPEC:uWH', '-SPEC:N', 'COMP:R', 'PF:Merja', '-COMP:v', '-COMP:N', '-SPEC:C/fin', '-adjoinable', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-SEM:directional', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', 'LF:Merja', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LANG:FI'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'SPEC:*', 'PF:malla', 'COMP:v', 'TAIL:T', '-SPEC:N', 'LF:by', 'adjoinable', 'MA/inf', '-SPEC:Neg/fin', 'ADV', '-SPEC:FORCE', '-SPEC:T/fin', 'LANG:FI'}
meren           ['LANG:FI']
mere-           {'-SPEC:uWH', '-SPEC:N', 'COMP:R', '-COMP:v', '-SPEC:C/fin', '-COMP:N', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', 'LF:ocean', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', 'PF:meri', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LANG:FI'}
mistake         {'-SPEC:uWH', '-SPEC:N', 'COMP:R', 'LANG:EN', '-COMP:v', '-COMP:N', '-SPEC:C/fin', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', 'PF:mistake', '-COMP:C/fin', 'COMP:R/D', 'LF:mistake', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-SPEC:uWH', '-SPEC:N', 'COMP:R', 'PF:mika-', '-COMP:v', '-COMP:N', '-SPEC:C/fin', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', 'LF:what', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LANG:FI'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'PHI:PER:_', 'COMP:D', '-COMP:v', 'LANGN:EN', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', 'PF:move', '+SEM:directional', '-COMP:V', 'SPEC:P', '-COMP:P', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'LF:move'}
mukavasti       ['LANG:EN']
mukava-         {'PF:mukavasti', '2SPEC', 'LF:comfortably', 'SPEC:D', '0', 'LANG:FI'}
must            {'SPEC:*', '!COMP:*', 'PF:must', '-SPEC:N', 'PHI:DET:_', 'PHI:PER:_', 'LANG:EN', '-COMP:INF', 'SPEC:TO/inf', '-SPEC:T/fin', 'COMP:D', '-SPEC:C/fin', 'PHI:GEN:_', 'T/fin', 'COMP:Neg', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', '-SPEC:Neg', 'MODAL', '-SPEC:v', 'VAL', 'COMP:v', 'COMP:T/prt', '-SPEC:V', '!SPEC:D', 'T', 'FIN', '-SPEC:TO/inf', '-COMP:T/fin', 'COMP:V', '!PROBE:V', 'LF:must', 'SPEC:D'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'PHI:PER:_', 'COMP:D', '-COMP:v', '-VAL', 'ASP', 'PF:myy', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', 'ASP:BOUNDED', '-COMP:V', 'SPEC:P', 'LF:sell', '-COMP:P', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'LANG:FI'}
naki            ['LANG:FI']
nake-           {'!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:N', 'COMP:D', 'COMP:P', 'LF:see', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', 'ASP:BOUNDED', '-COMP:V', 'SPEC:P', '-COMP:P', '-COMP:ESSA/inf', 'PF:nake', '-COMP:T/fin', '-COMP:MA/inf', '-SPEC:T/fin', 'V', 'LANG:FI'}
nayttaa         ['LANG:FI']
naytta-         {'-ARG', '-COMP:v', 'SPEC:TO/inf', '-COMP:N', 'ASP', '-SPEC:T/fin', 'SEM:internal', 'COMP:P', '-SPEC:FORCE', 'SPEC:ADV', 'VAL', 'PF:naytta', '!COMP:VA/inf', '-COMP:V', 'SPEC:P', 'LF:seem', '-COMP:T/fin', '!SPEC:D', 'V', 'LANG:FI'}
ndo             {'?ARG', 'VAL', '!COMP:*', 'COMP:v', 'LF:ing', '-SPEC:V', 'LANG:EN', 'INF', '-COMP:FORCE', '-COMP:C/fin', '-COMP:T/fin', 'COMP:V', '-SPEC:T/fin', 'PF:PRG', 'PRG'}
ne              {'!COMP:*', '!PROBE:N', 'LF:those', '-COMP:uR', '-SPEC:N', '-ARG', 'PHI:PER:3', 'adjoinable', '-SPEC:Neg/fin', 'PHI:NUM:PL', '-SPEC:P', 'D', '-SPEC:D', '-SPEC:MA/lla', 'COMP:N', '-SPEC:C', '-COMP:D', '-SPEC:V', 'OP', 'PF:ne', '-COMP:T/fin', '-SPEC:INF', '-SPEC:T/fin', 'LANG:FI'}
niiden          ['LANG:EN']
nen             {'PF:a', 'A', 'SPEC:*', 'LF:ing', 'TAIL:D', 'adjoinable', '-SPEC:A', '-SPEC:D', 'COMP:0', 'LANG:FI'}
not             {'SPEC:*', '!COMP:*', 'PF:not', '-COMP:D', 'PHI:DET:_', 'PHI:PER:_', 'POL:NEG', 'LANG:EN', '-VAL', 'PHI:GEN:_', 'LF:not', 'Neg', 'ARG', '-COMP:C', '-SPEC:T/fin', '-COMP:FIN', 'PHI:NUM:_'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'CLASS:INTR', 'PHI:DET:_', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', 'PF:nukku', '-VAL', 'ASP', '-COMP:N', 'COMP:P', '-SPEC:T/fin', 'LF:sleep', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:D', 'SPEC:D', '-COMP:V', 'SPEC:P', '-COMP:T/fin', '-COMP:T', '-COMP:Neg/fin', 'V', 'LANG:FI'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-SPEC:uWH', '-SPEC:N', 'COMP:R', '-COMP:v', '-SPEC:C/fin', '-COMP:N', 'COMP:P', 'PF:omaisuuden', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'LF:possessions', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LANG:FI'}
operatoria      ['LANG:IT']
operatoria-     {'PF:operatoria', '2SPEC', 'LF:operation', 'LANG:IT', '0', 'SPEC:D'}
ostaa           ['LANG:FI']
osta-           {'!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:N', 'COMP:D', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', 'ASP:BOUNDED', 'PF:osta', '-COMP:V', 'SPEC:P', '-COMP:P', '-COMP:T/fin', 'LF:buy', '-SPEC:T/fin', 'V', 'LANG:FI'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'SEM:nonreferential', '-SPEC:N', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:C/fin', '-COMP:N', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', 'PF:paiva', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', 'LF:day', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LANG:FI'}
Pariisia        ['LANG:FI']
Pariisi-        {'-SPEC:uWH', '-SPEC:N', 'COMP:R', '-COMP:v', '-SPEC:C/fin', '-COMP:N', 'COMP:P', '-SPEC:P', 'PF:Pariisi', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', 'LF:Paris', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LANG:FI'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-SPEC:uWH', '-SPEC:N', 'COMP:R', '-COMP:v', '-SPEC:C/fin', '-COMP:N', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', 'LF:Pekka', '-SEM:directional', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'PF:Pekka', 'LANG:FI'}
pelottaa        ['LANG:FI']
pelkaa-         {'!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:N', 'COMP:D', 'LF:fear', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:V', 'SPEC:P', '-COMP:P', '-COMP:T/fin', 'PF:pelkaa', '-SPEC:T/fin', 'V', 'LANG:FI'}
persuades       ['LANG:EN']
persuade-       {'!COMP:*', 'LF:persuade', 'PHI:DET:_', 'PHI:PER:_', 'LANG:EN', '-COMP:v', 'PF:persuade', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'COMP:TO/inf', 'SPEC:ADV', 'SEM:external', '-COMP:V', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'V'}
peruuntui       ['LANG:FI']
peruuntu-       {'LANG:FI', 'PF:peruuntui', 'PHI:DET:_', 'PHI:PER:_', 'LF:cancelled', '-COMP:v', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:V', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'SPEC:D'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:N', 'COMP:D', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', 'ASP:BOUNDED', '-COMP:V', 'SPEC:P', '-COMP:P', 'LF:wash', '-COMP:T/fin', 'PF:pese', '-SPEC:T/fin', 'V', 'LANG:FI'}
pese-           {'!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:N', 'COMP:D', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:V', 'SPEC:P', '-COMP:P', 'LF:wash', '-COMP:T/fin', 'PF:pese', '-SPEC:T/fin', 'V', 'LANG:FI'}
petardi         {'-SPEC:uWH', '-SPEC:N', 'COMP:R', '-COMP:v', '-SPEC:C/fin', 'LANG:IT', '-COMP:N', 'COMP:P', '-SPEC:P', 'PF:petardi', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', 'LF:firecrackers', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
pieni           ['LANG:FI']
pieni-          {'2SPEC', 'LF:small', 'PF:pieni-', 'SPEC:D', '0', 'LANG:FI'}
poikien         ['LANG:FI']
poika-          {'-SPEC:uWH', '-SPEC:N', 'COMP:R', '-COMP:v', '-SPEC:C/fin', '-COMP:N', 'COMP:P', '-SPEC:P', 'LF:boy', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', 'PF:poika', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LANG:FI'}
puhelinta       ['LANG:FI']
puhelin-        {'2SPEC', 'PF:puhelin', 'SPEC:D', 'LF:phone', '0', 'LANG:FI'}
punainen        ['LANG:FI']
puna-           {'2SPEC', 'SPEC:D', 'LF:red', 'PF:puna-', '0', 'LANG:FI'}
presupposto     {'-SPEC:uWH', '-SPEC:N', 'COMP:R', '-COMP:v', '-SPEC:C/fin', 'LANG:IT', '-COMP:N', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', 'PF:presupposto', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', 'LF:presupposition', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
primary         {'LF:nurse', '-SPEC:uWH', '-SPEC:N', 'COMP:R', '-COMP:v', '-SPEC:C/fin', 'LANG:IT', '-COMP:N', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', 'PF:primary', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
promises        ['LANG:EN']
promise-        {'PHI:DET:_', 'PHI:PER:_', 'PF:promise', 'COMP:D', 'LANG:EN', '-COMP:v', '-VAL', 'SEM:internal', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', 'LF:promise', '-COMP:V', 'SPEC:P', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:T/fin', 'V', 'SPEC:D'}
pyytaa          ['LANG:FI']
pyyta-          {'PHI:DET:_', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-VAL', 'LF:ask', 'ASP', '-COMP:N', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', 'SEM:external', '-COMP:V', 'SPEC:P', 'PF:pyyda', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'LANG:FI'}
raukesi         ['LANG:FI']
raukea-         {'PHI:DET:_', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:N', '-SPEC:T/fin', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'LF:terminate', '-COMP:T/fin', 'PF:raukea', 'V', 'LANG:FI'}
red             ['LANG:EN']
red-            {'PF:red', '2SPEC', 'LF:red', 'LANG:EN', '0', 'SPEC:D'}
saavuttaa       ['LANG:FI']
saavutta-       {'!COMP:*', 'LF:reach', 'CLASS:TR', 'PHI:DET:_', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:N', 'COMP:D', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', '!COMP:D', 'SPEC:ADV', 'ASP:BOUNDED', '-COMP:V', 'SPEC:P', 'PF:saavutta-', '-COMP:P', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'LANG:FI'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'PHI:DET:_', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:N', 'COMP:P', 'COMP:FORCE', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', 'LF:say', 'SPEC:D', '-COMP:V', 'SPEC:P', 'PF:sano-', '-COMP:T/fin', 'COMP:VA/inf', '-SPEC:T/fin', 'V', 'LANG:FI'}
said            ['LANG:EN']
say'            {'PHI:DET:_', 'PHI:PER:_', 'LANG:EN', '-COMP:v', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', 'LF:say', '-COMP:V', 'PF:say', 'SPEC:P', '!COMP:FORCE', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'SPEC:D'}
say-            {'PHI:DET:_', 'PHI:PER:_', 'LANG:EN', '-COMP:v', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', 'LF:say', '-COMP:V', 'PF:say', 'SPEC:P', '!COMP:FORCE', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'SPEC:D'}
sala            ['LANG:IT']
sala-           {'LF:room', '-SPEC:uWH', '-SPEC:N', 'COMP:R', '-COMP:v', '-SPEC:C/fin', 'LANG:IT', '-COMP:N', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'PF:sala'}
scoppiati       ['LANG:IT']
scoppia-        {'PHI:DET:_', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', 'LANG:IT', '-VAL', 'ASP', '-COMP:N', 'COMP:P', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', 'PF:scoppia', '-COMP:V', 'SPEC:P', 'LF:explode', '-COMP:T/fin', '-SPEC:T/fin', 'V'}
sen             {'!COMP:*', 'TAIL:*POL:NEG', '!PROBE:N', '-COMP:uR', '-SPEC:N', '-ARG', 'TAIL:ASP', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:P', 'D', '-SPEC:D', '-SPEC:MA/lla', 'COMP:N', '-SPEC:C', '-COMP:D', 'PF:sen', 'TAIL:PHI', '-SPEC:V', 'OP', 'LF:the/that', '-COMP:T/fin', '-SPEC:INF', '-SPEC:T/fin', 'LANG:FI'}
se'             {'!COMP:*', '!PROBE:N', '-COMP:uR', '-SPEC:N', '-ARG', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:P', 'D', '-SPEC:D', '-SPEC:MA/lla', 'COMP:N', '-SPEC:C', '-COMP:D', 'PF:se', '-SPEC:V', 'OP', 'LF:the/that', '-COMP:T/fin', '-SPEC:INF', '-SPEC:T/fin', 'LANG:FI'}
sentenza        {'LF:sentence', '-SPEC:uWH', '-SPEC:N', 'COMP:R', 'PF:sentenza', '-COMP:v', '-SPEC:C/fin', 'LANG:IT', '-COMP:N', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
Seine           ['LANG:EN']
Seine-          {'-SPEC:uWH', '-SPEC:N', 'COMP:R', 'LANG:EN', '-COMP:v', '-COMP:N', '-SPEC:C/fin', 'COMP:P', '-SPEC:P', 'LF:Seine', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', 'PF:Seine', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
sembrano        ['LANG:IT']
sembra-         {'!COMP:ARE/inf', '-ARG', 'LANG:EN', '-COMP:v', '-COMP:N', '-VAL', 'SPEC:TO/inf', 'COMP:P', '-SPEC:FORCE', '-COMP:D', 'SPEC:ADV', '-COMP:V', 'SPEC:P', 'PF:sembra', 'LF:seem', '-COMP:T/fin', '-ASP', '-SPEC:T/fin', 'V', 'SPEC:D'}
sleeps          ['LANG:EN']
sleep           {'CLASS:INTR', 'PHI:DET:_', 'PHI:PER:_', 'LANG:EN', '-COMP:v', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', '-SPEC:T/fin', 'LF:sleep', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:D', '-COMP:V', 'SPEC:P', '-COMP:T/fin', 'PF:sleep', 'V', 'SPEC:D'}
sleep-          {'CLASS:INTR', 'PHI:DET:_', 'PHI:PER:_', 'LANG:EN', '-COMP:v', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', '-SPEC:T/fin', 'LF:sleep', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:D', '-COMP:V', 'SPEC:P', '-COMP:T/fin', 'PF:sleep', 'V', 'SPEC:D'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-SPEC:uWH', '-SPEC:N', 'COMP:R', '-COMP:v', '-SPEC:C/fin', '-COMP:N', 'COMP:P', '-SPEC:P', 'LF:agreement', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'PF:sopimus', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', '!COMP:A/inf', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LANG:FI'}
spinge          ['LANG:IT']
spinge-         {'PHI:DET:_', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', 'LANG:IT', '-VAL', 'ASP', '-COMP:N', 'PHI:GEN:_', 'PF:spinge', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', '!COMP:D', 'SPEC:ADV', '-COMP:V', 'SPEC:P', '-COMP:P', 'LF:push', '-COMP:T/fin', '-SPEC:T/fin', 'V'}
ssa             {'SPEC:*', '!COMP:*', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:N', 'PHI:PER:_', 'COMP:D', 'adjoinable', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:C/fin', '-VAL', '-SPEC:P', 'LF:in', '-SPEC:FORCE', 'ARG', '-SPEC:ADV', '-SPEC:C', 'PF:ssa', 'TAIL:V', 'PHI:NUM:_', '-COMP:ADV', '-SPEC:v', '-COMP:uWH', 'COMP:n/MA', '-SPEC:V', 'P', '-SPEC:iR', '-COMP:T/fin', '-SPEC:INF', '-SPEC:T/fin', 'LANG:FI'}
stanno          ['LANG:IT']
sta-            {'PHI:DET:_', 'PHI:PER:_', 'LANG:EN', '-COMP:v', '-COMP:N', '-VAL', 'SPEC:TO/inf', 'SEM:internal', 'COMP:P', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'PF:sta', 'SPEC:ADV', 'COMP:PRG', '-COMP:V', 'SPEC:P', '-COMP:T/fin', 'LF:stay', '-ASP', '-SPEC:T/fin', 'V', 'SPEC:D'}
sti             {'SPEC:*', '!COMP:*', 'TAIL:T', '-SPEC:N', '-ARG', 'LF:by', 'adjoinable', '-SPEC:Neg/fin', 'PF:sti', 'ADV', '-SPEC:FORCE', '-SPEC:T/fin', 'LANG:FI'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-SPEC:uWH', '-SPEC:N', 'COMP:R', '-COMP:v', '-SPEC:C/fin', '-COMP:N', 'PF:sukka-', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LF:socks', 'LANG:FI'}
talo            {'-SPEC:uWH', '-SPEC:N', 'COMP:R', '-COMP:v', '-SPEC:C/fin', '-COMP:N', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'PF:talo', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', 'LF:house', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LANG:FI'}
tama            ['LANG:EN']
tama-           {'-SPEC:uWH', '-SPEC:N', 'COMP:R', 'PHI', '-COMP:v', '-COMP:N', '-SPEC:C/fin', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'PF:tama', 'N', 'LF:this', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LANG:FI'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'SPEC:*', 'PHI:DET:_', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-COMP:N', '-VAL', '-SPEC:T/fin', 'COMP:P', 'PF:taytyy', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', 'MODAL', '-COMP:V', '!COMP:A/inf', 'SPEC:P', 'FIN', '-COMP:T/fin', '-ASP', 'LF:must', 'V', 'LANG:FI'}
teki            ['LANG:FI']
teke-           {'PF:teke', '!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:N', 'COMP:D', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', '!COMP:D', 'SPEC:ADV', 'ASP:BOUNDED', 'LF:make', '-COMP:A/inf', '-COMP:V', 'SPEC:P', '-COMP:P', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'LANG:FI'}
that            {'!COMP:*', '-ARG', 'COMP:T/fin', 'LANG:EN', 'FORCE', 'LF:that', '-VAL', 'PF:that', 'FIN', '!PROBE:T/fin', 'COMP:C/fin', '-SPEC:*'}
the             {'LF:the', '!COMP:*', '!PROBE:N', '-COMP:uR', '-SPEC:N', '-ARG', 'LANG:EN', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:P', 'D', '-SPEC:D', '-SPEC:MA/lla', 'COMP:N', 'PHI:DEF:DEF', '-SPEC:C', '-COMP:D', '-SPEC:V', 'PF:the', 'OP', '-COMP:T/fin', '-SPEC:INF', '-SPEC:T/fin'}
to              {'!COMP:*', '-SPEC:iWH', 'TAIL:V,+SEM:directional', '-SPEC:N', 'PHI:DET:_', 'PHI:PER:_', 'LANG:EN', 'adjoinable', '-COMP:N', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:C/fin', '-VAL', '-SPEC:P', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', '-SPEC:ADV', '-SPEC:C', 'PHI:NUM:_', '-SPEC:*', '-COMP:ADV', '-SPEC:v', '-COMP:uWH', '+SEM:directional', 'LF:to', '-SPEC:V', 'P', '-SPEC:iR', 'PF:to', '-COMP:T/fin', '-float', '-SPEC:INF', '-SPEC:T/fin'}
to_inf          {'TO/inf', '!COMP:*', 'LF:TO/inf', 'LANG:EN', 'adjoinable', '-VAL', 'PF:TO/inf', '-SPEC:v', '?ARG', 'COMP:v', '-SPEC:V', 'INF', '-COMP:FORCE', '-COMP:C/fin', '-COMP:T/fin', 'COMP:V', '-SPEC:T/fin'}
towards         {'!COMP:*', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:N', 'PHI:PER:_', 'LANG:EN', 'adjoinable', '-COMP:N', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:C/fin', '-VAL', '-SPEC:P', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', '-SPEC:ADV', '-SPEC:C', 'PHI:NUM:_', 'TAIL:V', '-SPEC:*', '-COMP:ADV', '-SPEC:v', '-COMP:uWH', 'PF:towards', '-SPEC:V', 'P', '-SPEC:iR', '-COMP:T/fin', '-float', '-SPEC:INF', '-SPEC:T/fin', 'LF:towards'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:N', 'COMP:D', 'COMP:P', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'PF:tonaise', 'SPEC:ADV', 'LF:nudge', '-COMP:V', 'SPEC:P', '-COMP:P', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'LANG:FI'}
tta             {'SPEC:*', '!COMP:*', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:N', 'PHI:PER:_', 'COMP:D', 'adjoinable', '-COMP:N', '-SPEC:Neg/fin', '-SPEC:C/fin', '-VAL', '-SPEC:P', 'ADV', 'LF:without', '-SPEC:FORCE', 'ARG', '-SPEC:ADV', '-SPEC:C', 'PHI:NUM:_', '-COMP:ADV', '-SPEC:v', '-COMP:uWH', 'COMP:n/MA', '-SPEC:V', 'P', '-SPEC:iR', 'PF:tta', '-COMP:T/fin', '-SPEC:INF', '-SPEC:T/fin', 'LANG:FI'}
tries           ['LANG:EN']
try-            {'PHI:DET:_', 'PHI:PER:_', 'LANG:EN', '-COMP:v', '-VAL', 'ASP', '-COMP:N', 'SEM:internal', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'LF:try', 'PF:try', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', '!COMP:-ARG', 'SPEC:ADV', '!COMP:TO/inf', '-COMP:V', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'SPEC:D'}
verifiche       {'-SPEC:uWH', '-SPEC:N', 'COMP:R', '-COMP:v', '-SPEC:C/fin', 'LANG:IT', '-COMP:N', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', 'LF:verification', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'PF:verifiche', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'PHI:DET:_', 'PHI:PER:_', '-COMP:v', 'SPEC:TO/inf', '-VAL', 'ASP', '-COMP:N', 'COMP:P', '-SPEC:FORCE', 'ARG', '!COMP:P', 'PHI:NUM:_', '-COMP:D', 'SPEC:ADV', 'LF:flow', 'SPEC:D', '-COMP:V', 'SPEC:P', 'PF:virtaa', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'LANG:FI'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'!COMP:*', 'PHI:DET:_', 'PF:volu', 'LANG:EN', '-COMP:v', '-VAL', 'ASP', '-COMP:N', 'SEM:internal', 'SPEC:TO/inf', 'COMP:P', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', '-SPEC:*', 'SPEC:ADV', '-COMP:V', 'LF:want', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'V'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'PHI:PER:_', 'LANG:EN', '-COMP:v', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', 'COMP:D', 'PHI:GEN:_', '-SPEC:FORCE', 'LF:win', 'ARG', 'PHI:NUM:_', 'SPEC:ADV', 'ASP:BOUNDED', 'SEM:achievement', 'PF:voitta', '-COMP:V', 'SPEC:P', '-COMP:P', '-COMP:T/fin', '-SPEC:T/fin', 'V'}
wants           ['LANG:EN']
want-           {'!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'PHI:PER:_', 'LANG:EN', '-COMP:v', '-VAL', 'ASP', '-COMP:N', 'COMP:D', 'COMP:P', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'COMP:TO/inf', 'SPEC:ADV', 'PF:want', '-COMP:V', 'LF:want', 'SPEC:P', '-COMP:P', '-SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'V'}
what            ['LANG:EN']
what-           {'-SPEC:uWH', '-SPEC:N', '-COMP:*', 'COMP:R', 'LANG:EN', '-COMP:v', '-COMP:N', '-SPEC:C/fin', 'PF:what', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', 'PHI_N', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', 'LF:what', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
which           {'!COMP:*', '!PROBE:N', '-COMP:uR', '-SPEC:N', '-ARG', 'LANG:EN', 'adjoinable', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:P', 'D', '-SPEC:D', '-SPEC:MA/lla', 'COMP:N', '-SPEC:C', '-COMP:D', 'PF:which', '-SPEC:V', 'LF:which', 'OP', '-COMP:T/fin', 'OP:WH', '-SPEC:T/fin'}
who             ['LANG:EN']
who-            {'-SPEC:uWH', '-SPEC:N', '-COMP:*', 'COMP:R', 'LANG:EN', '-COMP:v', '-COMP:N', '-SPEC:C/fin', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', 'PHI_N', 'LF:who', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'PF:who'}
whether         {'!COMP:*', 'Q', '-ARG', 'COMP:T/fin', 'LANG:EN', 'FORCE', '-VAL', 'OP:Q', '-SPEC:*', 'PF:whether', 'FIN', 'OP', '!PROBE:T/fin', 'LF:whether', 'COMP:C/fin', 'OP:WH'}
yrittaa         ['LANG:FI']
yritta-         {'PF:yritta', 'PHI:DET:_', 'PHI:PER:_', 'LANG:EN', '-COMP:v', '-VAL', 'ASP', '-COMP:N', 'SEM:internal', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', 'LF:try', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', '!COMP:-ARG', 'SPEC:ADV', '-COMP:V', '!COMP:A/inf', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'SPEC:D'}
mina            ['LANG:EN']
mina-           {'-SPEC:uWH', '-SPEC:N', '-COMP:*', 'COMP:R', '-COMP:v', '-SPEC:C/fin', 'PF:mina', '-COMP:N', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', 'PHI_N', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', 'LF:I', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LANG:FI'}
sina            ['LANG:EN']
sina-           {'-SPEC:uWH', '-SPEC:N', '-COMP:*', 'COMP:R', '-COMP:v', '-SPEC:C/fin', '-COMP:N', 'LF:you', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'PF:sina', 'SPEC:A', 'PHI_N', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LANG:FI'}
han             ['LANG:EN']
han-            {'LF:s/he', '-SPEC:uWH', '-SPEC:N', '-COMP:*', 'COMP:R', '-COMP:v', '-SPEC:C/fin', '-COMP:N', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', 'PHI_N', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'PF:han', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LANG:FI'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-SPEC:uWH', '-SPEC:N', '-COMP:*', 'COMP:R', '-COMP:v', '-SPEC:C/fin', '-COMP:N', '-SPEC:T/fin', 'LF:we', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', 'PHI_N', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', 'PF:me', 'LANG:FI'}
te              ['LANG:EN']
te-             {'PF:te', '-SPEC:uWH', '-SPEC:N', '-COMP:*', 'COMP:R', '-COMP:v', '-SPEC:C/fin', '-COMP:N', 'LF:you', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', 'PHI_N', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LANG:FI'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he-             {'LF:they', '-SPEC:uWH', '-SPEC:N', '-COMP:*', 'COMP:R', '-COMP:v', '-SPEC:C/fin', '-COMP:N', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', 'PHI_N', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'PF:he', 'LANG:FI'}
he-             {'-SPEC:uWH', '-SPEC:N', '-COMP:*', 'COMP:R', 'LANG:EN', '-COMP:v', '-COMP:N', '-SPEC:C/fin', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', 'PHI_N', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'LF:he', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'PF:he'}
se              ['LANG:FI']
se-             {'!COMP:*', '!PROBE:N', '-COMP:uR', '-SPEC:N', '-ARG', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:P', 'D', '-SPEC:D', '-SPEC:MA/lla', 'COMP:N', '-SPEC:C', '-COMP:D', 'LF:it/that', 'PF:se', '-SPEC:V', 'OP', '-COMP:T/fin', '-SPEC:INF', '-SPEC:T/fin', 'LANG:FI'}
I               ['LANG:EN']
I-              {'-SPEC:uWH', '-SPEC:N', '-COMP:*', 'COMP:R', 'LANG:EN', '-COMP:v', '-COMP:N', '-SPEC:C/fin', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', 'PHI_N', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', 'LF:I', '-COMP:V', '-SPEC:V', 'PF:I', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
you             ['LANG:EN']
you-            {'-SPEC:uWH', '-SPEC:N', '-COMP:*', 'COMP:R', 'LANG:EN', '-COMP:v', '-COMP:N', 'PF:you', '-SPEC:C/fin', 'LF:you', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', 'PHI_N', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
he              ['LANG:EN']
she             ['LANG:EN']
she-            {'-SPEC:uWH', '-SPEC:N', '-COMP:*', 'LF:she', 'COMP:R', 'LANG:EN', '-COMP:v', '-COMP:N', '-SPEC:C/fin', 'COMP:P', '-SPEC:P', 'PF:she', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', 'PHI_N', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
we              ['LANG:EN']
we-             {'PF:we', '-SPEC:uWH', '-SPEC:N', '-COMP:*', 'COMP:R', 'LANG:EN', '-COMP:v', '-COMP:N', '-SPEC:C/fin', 'LF:we', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', 'PHI_N', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
you_pl          ['LANG:EN']
you_pl-         {'-SPEC:uWH', '-SPEC:N', 'COMP:R', 'PHI', 'LANG:EN', '-COMP:N', '-COMP:v', '-SPEC:C/fin', 'COMP:P', '-SPEC:P', 'LF:you_pl', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', 'PF:you_pl', '-SPEC:T/fin'}
they            ['LANG:EN']
they-           {'LF:they', '-SPEC:uWH', '-SPEC:N', '-COMP:*', 'COMP:R', 'LANG:EN', '-COMP:v', '-COMP:N', '-SPEC:C/fin', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', 'PHI_N', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', 'PF:they', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
it              ['LANG:EN']
it-             {'!COMP:*', '!PROBE:N', '-COMP:uR', '-SPEC:N', '-ARG', 'LANG:EN', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:P', 'D', '-SPEC:D', '-SPEC:MA/lla', 'COMP:N', '-SPEC:C', '-COMP:D', 'LF:it/that', '-SPEC:V', 'OP', 'PF:it', '-COMP:T/fin', '-SPEC:INF', '-SPEC:T/fin'}
io              ['LANG:EN']
io-             {'-SPEC:uWH', '-SPEC:N', '-COMP:*', 'COMP:R', '-COMP:v', '-SPEC:C/fin', 'LANG:IT', '-COMP:N', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', 'PHI_N', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', 'LF:I', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', 'PF:io', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
tu              ['LANG:EN']
tu-             {'-SPEC:uWH', '-SPEC:N', '-COMP:*', 'COMP:R', '-COMP:v', '-SPEC:C/fin', 'LANG:IT', '-COMP:N', 'LF:you', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', 'PHI_N', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', 'PF:tu', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
lui             ['LANG:EN']
lui-            {'-SPEC:uWH', '-SPEC:N', '-COMP:*', 'COMP:R', '-COMP:v', '-SPEC:C/fin', 'LANG:IT', '-COMP:N', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', 'PHI_N', '-COMP:D', '-COMP:ADV', '-SPEC:R', 'PF:lui', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'LF:he', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
lei             ['LANG:EN']
lei-            {'-SPEC:uWH', '-SPEC:N', '-COMP:*', 'LF:she', 'COMP:R', 'PF:lei', '-COMP:v', 'LANG:IT', '-COMP:N', '-SPEC:C/fin', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', 'PHI_N', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
noi             ['LANG:EN']
noi-            {'-SPEC:uWH', '-SPEC:N', '-COMP:*', 'COMP:R', '-COMP:v', '-SPEC:C/fin', 'LANG:IT', '-COMP:N', 'LF:we', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', 'PHI_N', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'PF:noi'}
voi             ['LANG:EN']
voi-            {'-SPEC:uWH', '-SPEC:N', '-COMP:*', 'COMP:R', '-COMP:v', '-SPEC:INF', 'LANG:IT', '-COMP:N', '-SPEC:C/fin', 'COMP:P', '-SPEC:P', 'LF:you_pl', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', 'PHI_N', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', 'PF:voi', '-COMP:AUX', '-SPEC:T/fin'}
loro            ['LANG:EN']
loro-           {'LF:they', '-SPEC:uWH', '-SPEC:N', '-COMP:*', 'COMP:R', '-COMP:v', '-SPEC:C/fin', 'LANG:IT', '-COMP:N', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'PF:loro', 'SPEC:A', 'PHI_N', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
mi              ['LANG:EN']
mi-             {'-SPEC:N', '-COMP:*', 'COMP:R', 'LANG:IT', '-COMP:N', 'CL', 'COMP:P', 'COMP:uR', '-SPEC:FORCE', 'SPEC:A', 'PHI_N', '-COMP:WH', '-COMP:A', 'PF:mi(cl)', '-COMP:V', 'N', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'LF:me', '-SPEC:uWH', '-COMP:v', '-SPEC:C/fin', '-SPEC:P', '-SPEC:ADV', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-SPEC:V', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin'}
la              ['LANG:EN']
la-             {'-SPEC:N', '-COMP:*', 'COMP:R', 'LANG:IT', '-COMP:N', 'CL', 'COMP:P', 'COMP:uR', '-SPEC:FORCE', 'SPEC:A', 'PHI_N', '-COMP:WH', '-COMP:A', '-COMP:V', 'N', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', '-SPEC:uWH', '-COMP:v', '-SPEC:C/fin', '-SPEC:P', 'PF:la(cl)', '-SPEC:ADV', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-SPEC:V', 'LF:her', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin'}
lo              ['LANG:EN']
lo-             {'-SPEC:N', '-COMP:*', 'COMP:R', 'LF:him', 'LANG:IT', '-COMP:N', 'CL', 'COMP:P', 'COMP:uR', '-SPEC:FORCE', 'SPEC:A', 'PHI_N', '-COMP:WH', '-COMP:A', '-COMP:V', 'N', 'PF:lo(cl)', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', '-SPEC:uWH', '-COMP:v', '-SPEC:C/fin', '-SPEC:P', '-SPEC:ADV', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-SPEC:V', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin'}
si              ['LANG:EN']
si-             {'-SPEC:N', '-COMP:*', 'COMP:R', 'LANG:IT', '-COMP:N', 'COMP:P', 'PF:si(cl)', 'COMP:uR', '-SPEC:FORCE', 'SPEC:A', 'PHI_N', '-COMP:WH', '-COMP:A', '-COMP:V', 'N', 'LF:3sg', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', '-SPEC:uWH', '-COMP:v', '-SPEC:C/fin', '-SPEC:P', '-SPEC:ADV', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-SPEC:V', 'CAL:CL', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'PF:ci', '-SPEC:uWH', '-SPEC:N', '-COMP:*', 'COMP:R', '-COMP:v', '-SPEC:C/fin', 'LANG:IT', '-COMP:N', 'LF:there', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', 'PHI_N', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
[-n]            {'PHI:DET:DEF', 'inflectional', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:SG', 'LANG:FI'}
[-t]            {'PHI:DET:DEF', 'inflectional', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:SG', 'LANG:FI'}
[-V]            {'inflectional', 'PHI:PER:3', 'PHI', 'PHI:NUM:SG', 'LANG:FI'}
[-mme]          {'PHI:NUM:PL', 'PHI:DET:DEF', 'inflectional', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI', 'LANG:FI'}
[-mme]          {'PHI:NUM:PL', 'PHI:DET:DEF', 'inflectional', 'PHI:PER:1', 'PHI:HUM:HUM', 'LANG:FI'}
[-tte]          {'PHI:NUM:PL', 'PHI:DET:DEF', 'inflectional', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI', 'LANG:FI'}
[-vat]          {'PHI:NUM:PL', 'inflectional', 'PHI:PER:3', 'PHI', 'LANG:FI'}
[-ni]           {'PHI:DET:DEF', 'inflectional', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:SG', 'LANG:FI'}
[-si]           {'PHI:DET:DEF', 'inflectional', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:SG', 'LANG:FI'}
[-nsa]          {'inflectional', 'PHI:PER:3', 'PHI', 'PHI:NUM:SG', 'LANG:FI'}
[-an]           {'PHI', 'PHI:PER:3', 'inflectional', 'LANG:FI'}
[-nne]          {'PHI:NUM:PL', 'PHI:DET:DEF', 'inflectional', 'PHI:PER:2', 'PHI:HUM:HUM', 'LANG:FI'}
[-s]            {'inflectional', 'PHI:GEN:M', 'PHI:GEN:F', 'PHI:PER:3', 'PHI', 'PHI:NUM:SG', 'LANG:EN'}
[-0]            {'PHI:PER:3', 'PHI', 'PHI:GEN:N', 'LANG:EN', 'PHI:NUM:PL', 'PHI:DET:DEF', 'inflectional', 'PHI:PER:2', 'PHI:PER:1', 'PHI:NUM:SG'}
[-o]            {'PHI:DET:DEF', 'inflectional', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:SG', 'LANG:IT'}
[-i]            {'PHI:DET:DEF', 'inflectional', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:SG', 'LANG:IT'}
[-a]            {'PHI:DET:DEF', 'inflectional', 'PHI:PER:3', 'PHI', 'PHI:NUM:SG', 'LANG:IT'}
[-e]            {'PHI:DET:DEF', 'inflectional', 'PHI:PER:3', 'PHI', 'PHI:NUM:SG', 'LANG:IT'}
[-iamo]         {'PHI:NUM:PL', 'PHI:DET:DEF', 'inflectional', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI', 'LANG:IT'}
[-te]           {'PHI:NUM:PL', 'PHI:DET:DEF', 'inflectional', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI', 'LANG:IT'}
[-no]           {'PHI:NUM:PL', 'PHI:DET:DEF', 'inflectional', 'PHI:PER:3', 'PHI', 'LANG:IT'}
[-nom]          {'inflectional', 'NOM', 'LANG:EN', 'adjoinable', 'TAIL:FIN,ARG,VAL'}
[-par]          {'inflectional', 'PAR', 'adjoinable', 'TAIL:ARG,-VAL', 'LANG:FI'}
[-gen]          {'TAIL:INF,ARG', 'inflectional', '-float', 'GEN', 'LANG:EN'}
gen             {'TAIL:INF,ARG', 'inflectional', '-float', 'GEN', 'LANG:EN'}
[-n_acc]        {'inflectional', 'TAIL:*POL:NEG', 'TAIL:PHI', 'TAIL:ARG,ASP:BOUNDED', 'n-ACC', 'adjoinable', 'LANG:FI'}
[-t_acc]        {'inflectional', 'TAIL:*POL:NEG', 't-ACC', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable', 'LANG:FI'}
[-0_acc]        {'inflectional', 'TAIL:*POL:NEG', '0_ACC', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable', 'TAIL:*PHI', 'LANG:FI'}
asp             {'ASP:BOUNDED', 'inflectional', 'LANG:EN'}
a'              {'LF:A', 'PF:a', 'LANG:X', 'a'}
b'              {'LF:B', 'LANG:X', 'PF:b', 'b'}
b''             {'-COMP:c', 'PF:b', 'b', 'LF:B', 'LANG:EN'}
c''             {'SPEC:a', 'PF:c', 'c', 'LF:C', 'LANG:EN'}
c'              {'LF:C', 'PF:c', 'LANG:X', 'c'}
d'              {'LANG:', 'LF:D', 'd', 'PF:d'}
a''             ['LANG:EN']
x'              {'LANG:X', 'PF:x', 'LF:X', 'x'}
y'              {'PF:y', 'LANG:X', 'y', 'LF:Y'}
z'              {'z', 'PF:x', 'LANG:X', 'LF:Z'}
John'           {'PF:John', 'LANG:X', "N'", 'LF:John'}
admires'        {"V'", 'LF:admires', 'PF:admires', 'LANG:X'}
admires''       {'PHI:DET:_', 'PHI:PER:_', 'LANG:EN', '-COMP:v', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'PF:admires', 'SPEC:ADV', 'LF:admires', '-COMP:V', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'SPEC:D'}
Mary'           {'LANG:X', 'PF:Mary', "N'", 'LF:mary'}
T/fin           {'SPEC:*', '!COMP:*', 'PHI:DET:_', '-SPEC:N', 'PHI:PER:_', 'LANG:EN', '-COMP:INF', 'SPEC:TO/inf', 'COMP:D', '-SPEC:C/fin', 'PHI:GEN:_', 'T/fin', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', '-SPEC:Neg', 'PF:T', '-SPEC:v', 'VAL', 'COMP:v', 'LF:T', 'COMP:T/prt', '-SPEC:V', '!SPEC:D', 'T', 'FIN', '-SPEC:TO/inf', '-COMP:T/fin', 'COMP:V', '!PROBE:V', '-SPEC:T/fin', 'SPEC:D'}
v               {'LF:v', '!COMP:*', 'PHI:NUM:_', 'PHI:DET:_', 'v', 'PF:v', '-SPEC:N', 'PHI:PER:_', 'LANG:EN', 'PHI:GEN:_', '-VAL', 'ASP', 'COMP:V', 'ARG', '!PROBE:V', 'SPEC:D'}
C/fin           {'SPEC:*', '!COMP:*', 'PF:C', '-SPEC:N', '-ARG', '-COMP:T/prt', 'LANG:EN', 'COMP:T/fin', 'COMP:Neg/fin', '-SPEC:C/fin', 'C/fin', 'C', 'VAL', 'LF:C/fin', 'FIN', '!PROBE:FIN', '-COMP:C/fin', '-SPEC:T/fin'}
T               {'SPEC:*', '!COMP:*', 'PHI:DET:_', '-SPEC:N', 'PHI:PER:_', 'LANG:EN', 'COMP:D', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'PF:T', 'VAL', '-COMP:NEG', 'LF:T', 'COMP:v', 'COMP:T/prt', '-SPEC:V', 'T', 'FIN', 'COMP:V', '!PROBE:V', '-SPEC:T/fin', 'SPEC:D'}
T/prt           {'PF:T/prt', 'SPEC:*', '!COMP:*', 'T/prt', '-SPEC:N', 'PHI:DET:_', 'PHI:PER:_', 'LANG:EN', 'COMP:D', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'VAL', 'COMP:v', '-COMP:NEG', 'LF:T/prt', 'COMP:T/prt', '-SPEC:V', 'T', 'FIN', 'COMP:V', '!PROBE:V', '-SPEC:T/fin', 'SPEC:D'}
a0              {'A', 'TAIL:D', 'LANG:EN', 'adjoinable', '-adjoinable', 'LF:A', 'PF:A', '-SPEC:A', '-SPEC:D', 'COMP:0'}
n               {'SPEC:*', '!COMP:*', 'PHI:DET:_', '-SPEC:N', 'COMP:R', 'PHI:PER:_', '-COMP:N', 'COMP:P', 'COMP:uR', '-SPEC:FORCE', 'SPEC:A', 'COMP:0', '-COMP:WH', 'VAL', 'COMP:v', '-COMP:A', '-COMP:V', 'N', 'n', 'COMP:V', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin', 'PF:n', '-SPEC:uWH', 'LANG:EN', 'LF:n', '-COMP:v', '-SPEC:C/fin', 'PHI:GEN:_', '-SPEC:P', 'ARG', '-SPEC:ADV', 'PHI:NUM:_', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-SPEC:V', 'INF', '!SPEC:*', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '!SPEC:D'}
impass          {'PHI:NUM:_', '!COMP:*', 'PHI:DET:_', 'v', 'PF:impass', 'LF:impass', '-SPEC:N', 'LANG:EN', 'PHI:PER:_', '-VAL', 'ASP', 'PHI:GEN:_', 'COMP:V', 'ARG', '!PROBE:V', 'SPEC:D'}
cau             {'PHI:NUM:_', '!COMP:*', 'PHI:DET:_', 'v', '-SPEC:N', 'LF:v/Cause', 'LANG:EN', 'PHI:PER:_', '-VAL', 'ASP', 'PHI:GEN:_', 'PF:Cau', 'COMP:V', 'ARG', '!PROBE:V', 'SPEC:D'}
INF             {'!COMP:*', 'COMP:v', 'LF:INF', '-SPEC:V', 'LANG:EN', 'INF', '-COMP:FORCE', '-COMP:C/fin', '-COMP:T/fin', 'COMP:V', 'PF:INF', '-SPEC:T/fin'}
prtcpl          {'PF:T/prt', 'SPEC:*', '!COMP:*', 'T/prt', '-SPEC:N', 'PHI:DET:_', 'PHI:PER:_', 'LANG:EN', 'COMP:D', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:NUM:_', 'VAL', 'COMP:v', '-COMP:NEG', 'LF:T/prt', 'COMP:T/prt', '-SPEC:V', 'T', 'FIN', 'INF', '-COMP:FORCE', '-COMP:C/fin', '-COMP:T/fin', 'COMP:V', '!PROBE:V', '-SPEC:T/fin', 'SPEC:D'}
TO/inf          {'TO/inf', '!COMP:*', 'LF:TO/inf', 'LANG:EN', 'adjoinable', '-VAL', 'PF:TO/inf', '-SPEC:v', '?ARG', 'COMP:v', '-SPEC:V', 'INF', '-COMP:FORCE', '-COMP:C/fin', '-COMP:T/fin', 'COMP:V', '!COMP:V', '-SPEC:T/fin'}
A/inf           {'SPEC:*', '!COMP:*', '?VAL', 'LANG:EN', 'A/inf', '-SPEC:Neg/fin', '?ARG', 'COMP:v', '-SPEC:V', 'LF:A/inf', 'INF', '-COMP:FORCE', '-COMP:C/fin', '-COMP:T/fin', 'COMP:V', 'PF:A/inf', '-SPEC:T/fin'}
ARE/inf         {'SPEC:*', '!COMP:*', 'LANG:EN', 'PF:are', '-adjoinable', 'ARE/inf', 'LF:ARE/inf', '?ARG', 'VAL', 'COMP:v', '-SPEC:V', 'INF', '-COMP:FORCE', '-COMP:C/fin', '-COMP:T/fin', 'COMP:V', '-SPEC:T/fin'}
ESSA/inf        {'PF:essa', 'SPEC:*', '!COMP:*', 'TAIL:T', '-SPEC:N', 'COMP:V', '?VAL', 'LANG:EN', 'adjoinable', '-SPEC:Neg/fin', 'ADV', '-SPEC:FORCE', '?ARG', 'COMP:v', '-SPEC:V', 'ESSA/inf', 'INF', '-COMP:FORCE', '-COMP:C/fin', '-COMP:T/fin', 'LF:while', '-SPEC:T/fin'}
TUA/inf         {'!COMP:*', 'TAIL:T', 'PHI:DET:_', '-SPEC:N', 'PHI:PER:_', 'LANG:EN', 'adjoinable', 'PHI:GEN:_', '-SPEC:Neg/fin', 'TUA/inf', 'ADV', '-SPEC:FORCE', 'ARG', 'LF:after', 'PHI:NUM:_', 'PF:tua', 'CAL', 'COMP:v', '-SPEC:V', 'INF', '-COMP:FORCE', '!SPEC:*', '-COMP:C/fin', '-COMP:T/fin', 'COMP:V', '-SPEC:T/fin'}
VA/inf          {'PF:vAn', 'LF:VA', '!COMP:*', 'SPEC:*', 'PHI:DET:_', '-SPEC:N', 'PHI:PER:_', 'LANG:EN', 'VA/inf', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_', 'VAL', 'COMP:v', '-SPEC:V', 'INF', '-COMP:FORCE', '!SPEC:*', '-COMP:C/fin', '-COMP:T/fin', 'COMP:V', '-SPEC:T/fin'}
MA/ssa          {'PHI:DET:_', '-SPEC:N', 'PHI:PER:_', 'LANG:EN', 'adjoinable', '-VAL', 'MA/inf', '-SPEC:Neg/fin', 'PHI:GEN:_', 'ADV', '-SPEC:FORCE', 'ARG', 'PF:massa', 'PHI:NUM:_', 'TAIL:V', '-SPEC:*', 'LF:in_doing', 'COMP:v', 'COMP:V', '-SPEC:T/fin'}
MA/tta          {'TAIL:T', 'PHI:DET:_', '-SPEC:N', 'PF:matta', 'PHI:PER:_', 'LANG:EN', 'adjoinable', '-VAL', 'MA/inf', '-SPEC:Neg/fin', 'PHI:GEN:_', 'LF:without_doing', 'ADV', '-SPEC:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_'}
MA/lla          {'TAIL:T', 'PHI:DET:_', '-SPEC:N', 'PHI:PER:_', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:FORCE', 'COMP:v', 'COMP:V', '-SPEC:T/fin', 'PF:malla', 'LANG:EN', 'PHI:GEN:_', '-VAL', 'MA/inf', 'ADV', 'LF:by_doing', 'ARG', 'PHI:NUM:_'}
MA/inf          {'PHI:DET:_', '-SPEC:N', 'PHI:PER:_', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:FORCE', 'TAIL:V', 'COMP:v', 'PF:maan', 'COMP:V', '-SPEC:T/fin', 'LANG:EN', 'PHI:GEN:_', '-VAL', 'MA/inf', 'ADV', 'ARG', 'PHI:NUM:_', 'LF:to_do'}
E/inf           {'SPEC:*', 'PF:en', '-SPEC:N', '-ARG', 'LF:by', '-VAL', 'adjoinable', '-SPEC:Neg/fin', 'ADV', '-SPEC:FORCE', '-SPEC:T/fin', 'LANG:FI'}
BE-             {'!COMP:*', '-ARG', 'LANG:EN', '-COMP:v', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', 'COPULA', 'PF:BE', '-SPEC:FORCE', 'LF:BE', 'SPEC:ADV', 'COMP:T/prt', '-COMP:V', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'V', 'SPEC:D'}
D               {'LF:D', '!COMP:*', '!PROBE:N', '-COMP:uR', '-SPEC:N', '-ARG', 'LANG:EN', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:P', 'PF:D', 'D', '-SPEC:D', '-SPEC:MA/lla', 'COMP:N', '-SPEC:C', '-COMP:D', '-SPEC:V', 'OP', '-COMP:T/fin', '-SPEC:INF', '-SPEC:T/fin'}
P               {'!COMP:*', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:N', 'PHI:PER:_', 'LANG:EN', 'adjoinable', '-COMP:N', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:C/fin', '-VAL', '-SPEC:P', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', '-SPEC:ADV', '-SPEC:C', 'PHI:NUM:_', '-SPEC:*', '-COMP:ADV', '-SPEC:v', '-COMP:uWH', '-SPEC:V', 'PF:P', 'P', '-SPEC:iR', '-COMP:T/fin', '-float', '-SPEC:INF', 'LF:P', '-SPEC:T/fin'}
pro             ['LANG:EN']
pro-            {'-SPEC:uWH', '-SPEC:N', 'COMP:R', 'PHI', 'LANG:EN', '-COMP:N', '-COMP:v', 'PF:(pro)', '-SPEC:C/fin', 'COMP:P', '-SPEC:P', 'COMP:uR', '-SPEC:FORCE', '-SPEC:ADV', 'SPEC:A', '-COMP:D', '-COMP:ADV', '-SPEC:R', '-COMP:WH', '-COMP:A', '-COMP:V', '-SPEC:V', 'LF:pro', 'N', '-COMP:C/fin', 'COMP:R/D', '-COMP:T/fin', '-SPEC:INF', '-COMP:AUX', '-SPEC:T/fin'}
cl              {'LEFT:T/fin', 'CL', 'RIGHT:PRG', 'inflectional', 'RIGHT:ARE/inf', 'LANG:EN', 'LEFT:D,CL'}
inc             {'INCORPORATED', 'inflectional', 'LANG:EN'}
sg              {'inflectional', 'PHI:NUM:SG', 'LANG:EN'}
pl              {'PHI:NUM:PL', 'inflectional', 'LANG:EN'}
1p              {'inflectional', 'LANG:EN', 'PHI:PER:1'}
2p              {'inflectional', 'PHI:PER:2', 'LANG:EN'}
3p              {'PHI:PER:3', 'inflectional', 'LANG:EN'}
def             {'PHI:DET:DEF', 'inflectional', 'LANG:EN'}
indef           {'PHI:DET:INDEF', 'inflectional', 'LANG:EN'}
hum             {'inflectional', 'LANG:EN', 'PHI:HUM:HUM'}
nonhum          {'PHI:HUM:NONHUM', 'inflectional', 'LANG:EN'}
m               {'PHI:GEN:M', 'inflectional', 'LANG:EN'}
f               {'inflectional', 'PHI:GEN:F', 'LANG:EN'}
nom             {'inflectional', 'NOM', 'LANG:EN', 'TAIL:FIN,!COMP:*,VAL'}
acc             {'TAIL:v', 'inflectional', 'ACC', 'LANG:EN'}
dat             {'TAIL:v', 'inflectional', 'DAT', 'LANG:EN'}
uC/op           {'inflectional', 'LANG:EN', 'uC/op'}
wh              {'OP:_', 'OP:WH', 'inflectional', 'LANG:EN'}
wh_             {'OP', 'FORCE:OP:WH', 'inflectional', 'OP:_', 'LANG:EN'}
top             {'OP:TOP', 'inflectional', 'LANG:EN'}
foc             {'inflectional', 'OP:FOC', 'LANG:EN'}
C/op            {'inflectional', 'LANG:EN', 'OP:C/OP'}
rel             {'inflectional', '-COMP:C/fin', 'LANG:EN', 'adjoinable', 'OP:REL'}
Q               {'OP', 'OP:WH', 'inflectional', 'OP:Q', 'LANG:EN'}
