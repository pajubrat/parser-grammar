ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'-SPEC:C', '!COMP:*', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', 'LANG:IT', '-COMP:T/fin', '-ARG', '-SPEC:ADV', '-SPEC:P', 'PF:a', '-SPEC:N', '-SPEC:v', '-SPEC:Neg/fin', 'P', '-SPEC:iR', '-SPEC:iWH', 'COMP:D', 'COMP:ARE/inf', '-VAL', '-COMP:ADV', 'adjoinable', '-COMP:uWH', '-SPEC:FORCE', 'LF:to', '-COMP:N', '-SPEC:C/fin', '-SPEC:INF'}
a_D             {'-SPEC:C', 'PF:D', 'OP', '!COMP:*', 'D', '!PROBE:N', '-SPEC:V', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:D', '-ARG', '-SPEC:P', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:MA/lla', 'LF:D', 'LANG:EN', 'COMP:N', '-COMP:uR', 'adjoinable', '-SPEC:D', '-SPEC:INF'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-SPEC:Neg', 'PHI:NUM:_', '-COMP:v', '!COMP:*', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', '-COMP:T/fin', 'CLASS:TR', 'LF:admire', '-COMP:P', 'PHI:DET:_', 'ASP', '-COMP:V', 'LANG:EN', 'PHI:GEN:_', 'COMP:D', 'SPEC:ADV', '-VAL', 'ARG', 'PF:admire', '-SPEC:FORCE', '-COMP:Neg', 'SPEC:P', '-COMP:N', 'COMP:P', 'PHI:PER:_'}
admire*         ['LANG:EN']
T/fin*          {'LF:T', 'NO_NUMBER', '!SPEC:*', 'LANG:EN', '-VAL', 'NO_DET', 'CAT:T/fin', "PF:T/fin'"}
v*              {'LF:v', 'PF:v', 'CAT:v', 'NO_NUMBER', 'LANG:EN', '-VAL', 'NO_DET'}
admire**        ['LANG:EN']
T/fin**         {'LF:T', 'NO_NUMBER', '!SPEC:*', 'NO_PERSON', "PF:T/fin''", 'LANG:EN', '-VAL', 'PHI:PER:3', 'NO_DET', 'CAT:T/fin'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'PHI:NUM:_', 'PF:adora', '-COMP:v', '-SPEC:T/fin', 'LANG:IT', 'V', '-COMP:T/fin', 'LF:admire', 'PHI:DET:_', 'ASP', '-COMP:V', 'PHI:GEN:_', 'COMP:D', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', 'PHI:PER:_'}
antaa           ['LANG:FI']
anta-           {'PHI:NUM:_', '-COMP:v', '!COMP:*', 'CLASS:DITR', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PF:antaa', '+SEM:directional', '-COMP:T/fin', 'SPEC:D', 'PHI:DET:_', 'ASP', '-COMP:V', 'ASP:BOUNDED', 'COMP:D', 'SPEC:ADV', '-VAL', '-COMP:FIN', 'ARG', 'LF:give', '-SPEC:FORCE', 'SPEC:P', '-COMP:N', 'LANG:FI', 'COMP:P', 'PHI:PER:_'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'V', 'SPEC:D', '-COMP:T/fin', 'SEM:internal', 'PHI:DET:_', '-COMP:N', 'ASP', '-COMP:V', 'PF:ask', 'LANG:EN', 'PHI:GEN:_', 'COMP:D', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', 'LF:ask', 'COMP:P', 'PHI:PER:_'}
ask-            {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'V', 'SPEC:D', '-COMP:T/fin', 'SEM:internal', 'PHI:DET:_', '-COMP:N', 'ASP', '-COMP:V', 'PF:ask', 'LANG:EN', 'PHI:GEN:_', 'COMP:D', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', 'LF:ask', 'COMP:P', 'PHI:PER:_'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SEM:directional', '-SPEC:N', '-SPEC:P', 'PF:avain', 'LF:key', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', 'LANG:FI', 'SPEC:A', 'N', '-SPEC:INF'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'PF:auto', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SEM:directional', '-SPEC:N', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', 'LF:car', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', 'LANG:FI', 'SPEC:A', 'N', '-SPEC:INF'}
city            {'-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SPEC:N', '-SPEC:P', '-COMP:A', 'LF:city', '-COMP:V', 'LANG:EN', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', '-SPEC:FORCE', 'PF:city', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
che             ['LANG:IT']
che-            {'-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', 'LANG:IT', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', 'PHI_N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:N', '-SPEC:R', '-SPEC:P', 'PF:che', 'LF:who', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
chiamato        ['LANG:IT']
chiamata-       {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'LANG:IT', 'V', '-COMP:T/fin', 'PF:chiamato', 'PHI:DET:_', 'ASP', '-COMP:V', 'PHI:GEN:_', 'SPEC:ADV', '-VAL', 'ARG', 'LF:called', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', 'PHI:PER:_'}
danno           {'-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', 'LANG:IT', '-COMP:T/fin', '-COMP:D', 'LF:damage', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:N', '-SPEC:R', 'PF:danno', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'V', 'LANG:IT', '-COMP:T/fin', 'SEM:internal', 'PHI:DET:_', 'ASP', 'LF:detest', 'PF:detest', '-COMP:V', 'PHI:GEN:_', 'COMP:D', 'SPEC:ADV', 'COMP:ARE/inf', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', 'PHI:PER:_'}
devono          ['LANG:EN']
deva-           {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'V', 'SPEC:D', 'LANG:IT', '-COMP:T/fin', 'SEM:internal', 'PHI:DET:_', 'PF:deva', 'PHI:PER:_', '-COMP:V', 'PHI:GEN:_', 'SPEC:ADV', 'COMP:ARE/inf', '-VAL', '-ASP', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', 'LF:must'}
di              {'-SPEC:C', 'PHI:NUM:_', '!COMP:*', 'SPEC:*', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-adjoinable', 'LF:of', '-SPEC:ADV', '-SPEC:P', '-SPEC:N', 'PF:di', '-SPEC:v', '-SPEC:Neg/fin', 'PHI:DET:_', 'PHI:PER:_', 'P', '-SPEC:iR', '-SPEC:iWH', 'COMP:D', '-VAL', '-COMP:ADV', 'ARG', '-COMP:uWH', '-SPEC:FORCE', '-COMP:N', 'LANG:FI', '-SPEC:INF'}
does            {'!COMP:*', 'SPEC:*', '-SPEC:T/fin', 'COMP:V', 'T/fin', 'COMP:v', 'PHI:NUM:SG', '-SPEC:N', '-SPEC:v', 'PF:does', 'LANG:EN', '!PROBE:V', 'PHI:GEN:_', 'COMP:D', '-SPEC:TO/inf', 'COMP:Neg', '-SPEC:C/fin', '-SPEC:Neg', 'FIN', 'PHI:NUM:_', '-SPEC:V', 'VAL', 'PHI:PER:3', '-COMP:T/fin', 'SPEC:D', 'PHI:DET:_', '!SPEC:D', '-COMP:INF', 'COMP:T/prt', 'T', 'LF:does', 'ARG', '-SPEC:FORCE', 'SPEC:TO/inf', 'PHI:GEN:F', 'PHI:PER:_', 'PHI:GEN:M'}
does_C          ['LANG:EN']
does-           {'!COMP:*', 'SPEC:*', '-SPEC:T/fin', 'COMP:V', 'T/fin', 'COMP:v', 'PHI:NUM:SG', '-SPEC:N', '-SPEC:v', 'PF:does', 'LANG:EN', '!PROBE:V', 'PHI:GEN:_', 'COMP:D', '-SPEC:TO/inf', 'COMP:Neg', '-SPEC:C/fin', '-SPEC:Neg', 'FIN', 'PHI:NUM:_', '-SPEC:V', 'VAL', 'PHI:PER:3', '-COMP:T/fin', 'SPEC:D', 'PHI:DET:_', '!SPEC:D', '-COMP:INF', 'COMP:T/prt', 'T', 'LF:does', 'ARG', '-SPEC:FORCE', 'SPEC:TO/inf', 'PHI:GEN:F', 'PHI:PER:_', 'PHI:GEN:M'}
dorme           ['LANG:IT']
dorme-          {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'PHI:DET:_', 'ASP', 'LF:sleep', '-COMP:V', 'LANG:EN', 'PHI:GEN:_', '!SPEC:D', 'SPEC:ADV', 'PF:dorme', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', 'PHI:PER:_'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'PHI:NUM:_', '!SPEC:*', '!COMP:*', 'SPEC:*', '-SPEC:T/fin', 'VAL', 'POL:NEG', '%SPEC:INF', 'SEM:internal', 'PHI:DET:_', 'LF:neg', 'NEG', 'COMP:T/prt', '-SPEC:T', 'ARG', 'Neg/fin', 'PF:ei', '!COMP:T', 'LANG:FI', 'PHI:PER:_', 'FIN'}
e-              {'PHI:NUM:_', '!SPEC:*', '!COMP:*', 'SPEC:*', '-SPEC:T/fin', 'VAL', 'POL:NEG', '%SPEC:INF', 'SEM:internal', 'PHI:DET:_', 'LF:neg', 'NEG', 'COMP:T/prt', '-SPEC:T', 'ARG', 'Neg/fin', 'PF:ei', '!COMP:T', 'LANG:FI', 'PHI:PER:_', 'FIN'}
elaa            ['LANG:FI']
ela-            {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'V', 'SPEC:D', '-COMP:T/fin', '-COMP:D', 'PF:elaa', 'LF:live', 'PHI:DET:_', 'ASP', '-COMP:V', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'LANG:FI', 'CLASS:INTR', 'COMP:P', 'PHI:PER:_'}
etsii           ['LANG:FI']
etsi-           {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:V', 'COMP:D', 'SPEC:ADV', '-VAL', 'PF:etsi', 'LANG:FI', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'LF:search', 'COMP:P', 'PHI:PER:_', '!COMP:D'}
etta            {'!COMP:*', '-SPEC:*', 'FORCE', '!PROBE:T/fin', '-VAL', 'COMP:C/fin', 'LF:that', '-ARG', 'PF:etta', 'COMP:T/fin', 'LANG:FI', 'FIN'}
flow'           {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'V', 'SPEC:D', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:V', 'LANG:EN', 'PHI:GEN:_', 'PF:flow', 'SPEC:ADV', '-VAL', 'ARG', 'LF:flow', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', 'PHI:PER:_'}
from            {'-SPEC:C', 'PHI:NUM:_', '!COMP:*', '-SPEC:*', 'TAIL:V,+SEM:directional', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', 'PF:from', '-SPEC:ADV', '-SPEC:P', '-SPEC:N', '-SPEC:v', '-SPEC:Neg/fin', 'PHI:DET:_', 'LF:from', 'PHI:PER:_', 'P', 'LANG:EN', 'PHI:GEN:_', '-SPEC:iR', '-SPEC:iWH', 'COMP:D', '-VAL', '-COMP:ADV', '-float', 'adjoinable', 'ARG', '-COMP:uWH', '-SPEC:FORCE', '-COMP:N', '-SPEC:C/fin', '-SPEC:INF'}
gave            ['LANG:EN']
give-           {'PHI:NUM:_', '-COMP:v', '!COMP:*', 'CLASS:DITR', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', '+SEM:directional', '-COMP:T/fin', 'SPEC:D', 'PHI:DET:_', 'ASP', '-COMP:V', 'LANG:EN', 'PHI:GEN:_', 'PF:give', 'COMP:D', 'SPEC:ADV', '-VAL', '-COMP:FIN', 'ARG', 'LF:give', '-SPEC:FORCE', 'SPEC:P', '-COMP:N', 'COMP:P', 'PHI:PER:_'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'LF:Giuseppe', 'PF:Giuseppe', '-COMP:C/fin', '-COMP:v', '-SPEC:T/fin', '-SPEC:V', 'LANG:IT', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SEM:directional', '-SPEC:N', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'PHI:NUM:_', '-COMP:v', '-SPEC:*', '!COMP:*', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', '-COMP:T/fin', 'CLASS:TR', 'LF:want', 'SEM:internal', 'COMP:A/inf', '-COMP:P', 'PHI:DET:_', 'ASP', '-COMP:V', 'ASP:BOUNDED', 'COMP:D', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'PF:haluaa', '-COMP:N', 'LANG:FI', 'COMP:P', 'PHI:PER:_'}
hairitsee       ['LANG:FI']
hairitse-       {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'V', 'SPEC:D', '-COMP:T/fin', 'PF:hairitsee', 'PHI:DET:_', 'ASP', '-COMP:V', 'SPEC:ADV', '-VAL', '-COMP:FIN', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'LANG:FI', 'LF:disturb', 'COMP:P', 'PHI:PER:_', '!COMP:D'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'PHI:NUM:_', '-COMP:v', 'SPEC:*', '-SPEC:T/fin', 'V', 'SPEC:D', 'LANG:IT', '-COMP:T/fin', 'SEM:internal', 'PF:ha', 'PHI:DET:_', '-COMP:V', 'LF:have', 'PHI:GEN:_', 'SPEC:ADV', '-VAL', '-ASP', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', 'COMP:T', 'PHI:PER:_'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'PHI:NUM:_', 'PF:havia', '-COMP:v', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'SPEC:D', '-COMP:D', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:V', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'LANG:FI', 'CLASS:INTR', 'COMP:P', 'LF:disappear'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'PHI:NUM:_', '-COMP:v', '!COMP:*', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'CLASS:TR', 'LF:admire', 'PF:ihaile-', '-COMP:P', 'PHI:DET:_', 'ASP', '-COMP:V', 'COMP:D', 'SPEC:ADV', '-VAL', '-COMP:FIN', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'LANG:FI', 'COMP:P', 'PHI:PER:_', '!COMP:D'}
il              {'-SPEC:C', 'OP', '!COMP:*', 'D', '!PROBE:N', '-SPEC:V', '-SPEC:T/fin', 'LANG:IT', '-COMP:T/fin', '-COMP:D', 'PF:il', '-ARG', '-SPEC:P', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:MA/lla', 'COMP:N', '-COMP:uR', 'LF:the', 'adjoinable', '-SPEC:D', '-SPEC:INF'}
i               {'-SPEC:C', 'OP', '!COMP:*', 'D', '!PROBE:N', '-SPEC:V', '-SPEC:T/fin', 'LANG:IT', '-COMP:T/fin', '-COMP:D', 'PF:il', '-ARG', '-SPEC:P', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:MA/lla', 'COMP:N', '-COMP:uR', 'LF:the', 'adjoinable', '-SPEC:D', '-SPEC:INF'}
in              {'-SPEC:C', 'PHI:NUM:_', '!COMP:*', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', 'LANG:IT', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:P', '-SPEC:N', '-SPEC:v', '-SPEC:Neg/fin', 'PHI:DET:_', 'PF:in', 'PHI:PER:_', 'P', 'PHI:GEN:_', '-SPEC:iR', '-SPEC:iWH', 'COMP:D', '-VAL', '-COMP:ADV', 'adjoinable', 'ARG', '-COMP:uWH', '-SPEC:FORCE', '-COMP:N', 'LF:in', '-SPEC:INF'}
infermieri      {'-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', 'LANG:IT', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SPEC:N', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', 'LF:nurses', '-SPEC:FORCE', '-COMP:WH', 'PF:infermieri', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
is              ['LANG:EN']
be-             {'!COMP:*', '-COMP:v', '-SPEC:T/fin', 'V', 'SPEC:D', 'PF:be', '-COMP:T/fin', '-ARG', 'LF:be', 'ASP', '-COMP:V', 'LANG:EN', 'SPEC:ADV', 'COPULA', '-VAL', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', '-COMP:TO/inf', 'COMP:P'}
istuuko         ['LANG:FI']
istuu-          {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'SPEC:D', '-COMP:D', 'PF:istuu', 'LF:sit', 'PHI:DET:_', 'ASP', '-COMP:V', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'LANG:FI', 'CLASS:INTR', 'COMP:P', 'PHI:PER:_'}
John            ['LANG:EN']
John-           {'LF:John', '-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-adjoinable', 'PF:John', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:D', '-COMP:AUX', '-SEM:directional', '-SPEC:N', '-SPEC:R', '-SPEC:P', '-COMP:A', '-COMP:V', 'LANG:EN', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'LF:Jukka', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SEM:directional', '-SPEC:N', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-SPEC:INF', '-COMP:N', 'LANG:FI', 'SPEC:A', 'N', 'PF:Jukka'}
juosten         ['LANG:FI']
juokse-         {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'PF:juokse-', 'PHI:DET:_', 'ASP', '-COMP:V', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', 'LF:run', '-COMP:N', 'LANG:FI', 'COMP:P', 'PHI:PER:_'}
istuu           ['LANG:FI']
istu-           {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'PF:istuu', 'LF:sit', 'PHI:DET:_', 'ASP', '-COMP:V', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'LANG:FI', 'COMP:P', 'PHI:PER:_'}
kaksi           {'COMP:N', 'PHI:NUM:_', 'SPEC:*', '-VAL', 'PHI:DET:_', 'ARG', 'COMP:n', 'TAIL:ARG,VAL,FIN', 'PHI:NUM:SG', 'PF:kaksi', 'LF:two', 'LANG:FI', 'NUM', 'PHI:PER:_'}
kaksi           {'COMP:N', 'LANG:EN', 'SPEC:*', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'PF:kaksi', 'LF:two', 'COMP:n', 'NUM'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'COMP:N', 'COMP:n', 'SPEC:*', 'PF:kaksi', 'LF:two', 'LANG:FI', 'NUM'}
kaupunkia       ['LANG:EN']
kaupunki        {'-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SPEC:N', '-SPEC:P', '-COMP:P', 'PF:kaupunki', '-COMP:A', 'LF:city', '-COMP:V', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', 'LANG:FI', 'SPEC:A', 'N', '-SPEC:INF'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'SEM:external', 'PHI:NUM:_', '-COMP:v', '!COMP:A/inf', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'PF:kaske', 'LF:order', 'PHI:DET:_', 'ASP', '-COMP:V', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'LANG:FI', 'COMP:P', 'PHI:PER:_'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SPEC:N', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', 'LF:watch', 'PF:kello', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', 'LANG:FI', 'SPEC:A', 'N', '-SPEC:INF'}
kello0-         {'LF:watch', 'PF:kello', '0', 'LANG:FI', '2SPEC', 'SPEC:D'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', 'PF:key', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SPEC:N', '-SPEC:P', 'LF:key', '-COMP:A', '-COMP:V', 'LANG:EN', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'SPEC:A', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SEM:directional', '-SPEC:N', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', 'LF:book', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', 'LANG:FI', 'PF:kirja', 'N', '-SPEC:INF'}
kohti           {'PF:kohti', '-SPEC:C', 'PHI:NUM:_', '!COMP:*', 'SPEC:*', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', 'LF:towards', '-SPEC:ADV', '-SPEC:P', 'TAIL:V', '-SPEC:N', '-SPEC:v', '-SPEC:Neg/fin', 'PHI:DET:_', 'PHI:PER:_', 'P', '-SPEC:iR', '-SPEC:iWH', 'COMP:D', '-VAL', '-COMP:ADV', 'adjoinable', 'ARG', '-COMP:uWH', '-SPEC:FORCE', '-COMP:N', 'LANG:FI', '-SPEC:INF'}
koko            {'-SPEC:C', 'OP', '!COMP:*', 'D', '!PROBE:N', '-SPEC:V', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:D', '-ARG', '-SPEC:P', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:MA/lla', 'COMP:N', '-COMP:uR', 'TAIL:T', 'PF:koko', 'adjoinable', '-SPEC:D', 'LANG:FI', 'LF:all', '-SPEC:INF'}
kuka            ['LANG:FI']
kuka-           {'-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SPEC:N', '-SPEC:P', 'LF:who', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', 'PF:kuka', 'PHI', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', 'LANG:FI', 'SPEC:A', 'N', '-SPEC:INF'}
kuorsaa-        {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', '-COMP:T/fin', '-COMP:D', 'LF:snore', 'PHI:DET:_', 'ASP', 'PF:kuorsaa', '-COMP:V', 'SPEC:ADV', '-VAL', 'ARG', '-COMP:WH', '-SPEC:FORCE', 'SPEC:P', '-COMP:N', 'LANG:FI', 'COMP:P', 'PHI:PER:_'}
kuorsaamalla    ['LANG:FI']
lahella         {'!COMP:*', 'INF', 'SPEC:*', '-COMP:C/fin', '-SPEC:T/fin', 'COMP:V', 'COMP:v', '-SPEC:ADV', '-SPEC:N', '-SPEC:v', '-SPEC:iWH', 'COMP:D', '-COMP:uWH', 'LF:near', '-COMP:N', '-COMP:FORCE', 'LANG:FI', '-SPEC:C/fin', '-SPEC:INF', '-SPEC:C', 'PHI:NUM:_', '!SPEC:*', '-SPEC:V', 'VAL', '-COMP:T/fin', 'PF:lahella', '-SPEC:P', '-SPEC:Neg/fin', 'PHI:DET:_', 'P', '-SPEC:iR', '!SPEC:D', '-COMP:ADV', 'adjoinable', 'ARG', '-SPEC:FORCE', 'PHI:PER:_'}
lahella         {'-SPEC:C', 'PHI:NUM:_', '!COMP:*', 'SPEC:*', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', 'PF:lahella', '-SPEC:ADV', '-SPEC:P', '-SPEC:N', '-SPEC:v', '-SPEC:Neg/fin', 'PHI:DET:_', 'PHI:PER:_', 'P', '-SPEC:iR', '-SPEC:iWH', 'COMP:D', '-VAL', '-COMP:ADV', 'adjoinable', 'ARG', '-COMP:uWH', '-SPEC:FORCE', 'LF:near', '-COMP:N', 'LANG:FI', '-SPEC:INF', '!COMP:D'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'PHI:NUM:_', '-COMP:v', 'COMP:PP', '-SPEC:T/fin', 'V', 'SPEC:D', '-COMP:T/fin', '-COMP:D', 'PHI:DET:_', 'ASP', '-COMP:V', 'SPEC:ADV', 'LF:leave', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'PF:lahtea', 'LANG:FI', 'CLASS:INTR', 'COMP:P', 'PHI:PER:_'}
lavano          ['LANG:IT']
lava-           {'PF:lava', 'PHI:NUM:_', '!COMP:*', '-COMP:v', '-SPEC:T/fin', 'LF:wash', 'V', 'LANG:IT', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:V', 'PHI:GEN:_', 'COMP:D', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', 'PHI:PER:_'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-SPEC:C', 'OP', '!COMP:*', 'D', '!PROBE:N', '-SPEC:V', '-SPEC:T/fin', 'LANG:IT', '-COMP:T/fin', '-COMP:D', '-ARG', '-SPEC:P', '-SPEC:N', '-SPEC:Neg/fin', 'PF:le', '-SPEC:MA/lla', 'LF:D', 'COMP:N', '-COMP:uR', 'adjoinable', '-SPEC:D', '-SPEC:INF'}
leaves          ['LANG:EN']
leave           {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:V', 'LANG:EN', 'PHI:GEN:_', '!SPEC:D', 'SPEC:ADV', 'LF:leave', '-VAL', 'ARG', 'PF:leave', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', 'PHI:PER:_'}
leave-          {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', '-COMP:T/fin', 'V', 'PHI:DET:_', 'ASP', '-COMP:V', 'LANG:EN', 'PHI:GEN:_', '!SPEC:D', 'SPEC:ADV', 'LF:leave', '-VAL', 'ARG', 'PF:leave', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', 'PHI:PER:_'}
like-           {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'PHI:DET:_', 'ASP', 'PF:like', '-COMP:V', 'LANG:EN', 'PHI:GEN:_', 'SPEC:ADV', '-VAL', 'ARG', 'LF:like', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', 'PHI:PER:_', '!COMP:D'}
likes           ['LANG:EN']
like            {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'PHI:DET:_', 'ASP', 'PF:like', '-COMP:V', 'LANG:EN', 'PHI:GEN:_', 'SPEC:ADV', '-VAL', 'ARG', 'LF:like', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', 'PHI:PER:_', '!COMP:D'}
little          ['LANG:EN']
little-         {'LF:little', 'LANG:EN', '0', 'PF:little-', '2SPEC', 'SPEC:D'}
lle             {'-SPEC:C', 'PHI:NUM:_', '!COMP:*', '-SPEC:*', '-SPEC:C/fin', 'TAIL:V,+SEM:directional', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '+SEM:directional', '-SPEC:ADV', '-SPEC:P', '-SPEC:N', '-SPEC:v', '-SPEC:Neg/fin', 'PHI:DET:_', '-COMP:N', 'PHI:PER:_', 'P', 'LF:for', '-SPEC:iR', '-SPEC:iWH', 'COMP:D', '-VAL', '-COMP:ADV', 'adjoinable', 'ARG', '-COMP:uWH', '-SPEC:FORCE', 'PF:P(lle)', 'LANG:FI', '-SPEC:INF'}
lla             {'-SPEC:C', 'PF:P(lla)', 'PHI:NUM:_', 'TAIL:*V', '!COMP:*', 'SPEC:*', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:P', '-SPEC:N', '-SPEC:v', '-SPEC:Neg/fin', 'PHI:DET:_', 'PHI:PER:_', 'P', '-SPEC:iR', '-SPEC:iWH', 'COMP:D', 'TAIL:T', '-VAL', '-COMP:ADV', 'adjoinable', 'ARG', '-COMP:uWH', 'LF:by', '-SPEC:FORCE', '-COMP:N', 'LANG:FI', '-SPEC:INF'}
Luisa           ['LANG:IT']
Luisa-          {'-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', 'LANG:IT', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SEM:directional', '-SPEC:N', '-SPEC:P', 'PF:Luisa', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', 'LF:Luisa', 'SPEC:A', 'N', '-SPEC:INF'}
lukemalla       ['LANG:FI']
luke-           {'PHI:NUM:_', '-COMP:v', '!COMP:*', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'CLASS:TR', '-COMP:P', '-COMP:N', 'ASP', 'PHI:DET:_', '-COMP:V', 'COMP:D', 'SPEC:ADV', 'PF:luke', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', 'LF:read', 'LANG:FI', 'COMP:P', 'PHI:PER:_'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'PHI:NUM:_', '-COMP:v', '!COMP:*', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'CLASS:TR', 'PF:loyta-', '-COMP:P', 'PHI:DET:_', 'ASP', '-COMP:V', 'ASP:BOUNDED', 'COMP:D', 'SPEC:ADV', 'LF:find', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'LANG:FI', 'COMP:P', 'PHI:PER:_', '!COMP:D'}
Mary            ['LANG:EN']
Mary-           {'-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-adjoinable', '-COMP:D', 'PF:Mary', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SEM:directional', '-SPEC:N', '-SPEC:R', '-SPEC:P', '-COMP:A', '-COMP:V', 'LANG:EN', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', 'LF:Mary', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-adjoinable', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SEM:directional', '-SPEC:N', 'PF:Merja', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', 'LF:Merja', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', 'LANG:FI', 'SPEC:A', 'N', '-SPEC:INF'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'MA/inf', 'SPEC:*', 'TAIL:T', '-SPEC:T/fin', 'ADV', 'adjoinable', 'COMP:v', 'LF:by', '-SPEC:FORCE', '-SPEC:Neg/fin', '-SPEC:N', 'LANG:FI', 'PF:malla'}
meren           ['LANG:FI']
mere-           {'-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'LF:ocean', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SPEC:N', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-SPEC:INF', '-COMP:N', 'LANG:FI', 'SPEC:A', 'N', 'PF:meri'}
mistake         {'-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'LF:mistake', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', 'PF:mistake', '-SPEC:N', '-COMP:AUX', '-SPEC:R', '-SPEC:P', '-COMP:A', '-COMP:V', 'LANG:EN', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SPEC:N', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'LF:what', 'COMP:uR', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', 'PF:mika-', '-COMP:N', 'LANG:FI', 'SPEC:A', 'N', '-SPEC:INF'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'PHI:NUM:_', '-COMP:v', '!COMP:*', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', '+SEM:directional', 'CLASS:TR', '-COMP:T/fin', '-COMP:P', 'PHI:DET:_', 'PF:move', 'ASP', 'PHI:PER:_', '-COMP:V', 'PHI:GEN:_', 'COMP:D', 'SPEC:ADV', '-VAL', 'ARG', 'LANGN:EN', '-SPEC:FORCE', 'SPEC:P', '-COMP:N', 'COMP:P', 'LF:move'}
mukavasti       ['LANG:EN']
mukava-         {'PF:mukavasti', '0', 'LANG:FI', '2SPEC', 'SPEC:D', 'LF:comfortably'}
must            {'-SPEC:Neg', 'PHI:NUM:_', '!COMP:*', '-SPEC:C/fin', 'MODAL', 'SPEC:*', '-SPEC:T/fin', 'COMP:V', '-SPEC:V', 'VAL', '-COMP:T/fin', 'SPEC:D', 'T/fin', 'COMP:v', '-SPEC:N', '-SPEC:v', 'PHI:DET:_', 'PHI:PER:_', 'LANG:EN', '!PROBE:V', 'PHI:GEN:_', 'COMP:D', '!SPEC:D', '-COMP:INF', 'PF:must', 'COMP:T/prt', 'T', 'ARG', '-SPEC:FORCE', 'SPEC:TO/inf', '-SPEC:TO/inf', 'COMP:Neg', 'LF:must', 'FIN'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'PHI:NUM:_', '-COMP:v', 'LF:sell', '!COMP:*', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'CLASS:TR', '-COMP:P', 'PHI:DET:_', 'ASP', '-COMP:V', 'ASP:BOUNDED', 'COMP:D', 'SPEC:ADV', '-VAL', 'ARG', 'PF:myy', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'LANG:FI', 'COMP:P', 'PHI:PER:_'}
naki            ['LANG:FI']
nake-           {'-COMP:MA/inf', 'PHI:NUM:_', '-COMP:v', '!COMP:*', '-COMP:ESSA/inf', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'CLASS:TR', 'LF:see', '-COMP:P', '-COMP:N', 'ASP', 'PHI:DET:_', '-COMP:V', 'ASP:BOUNDED', 'COMP:D', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', 'PF:nake', 'LANG:FI', 'COMP:P', 'PHI:PER:_'}
nayttaa         ['LANG:FI']
naytta-         {'-COMP:v', 'PF:naytta', '-SPEC:T/fin', 'VAL', 'V', 'LF:seem', '-COMP:T/fin', '-ARG', 'SEM:internal', 'ASP', '!COMP:VA/inf', '-COMP:V', '!SPEC:D', 'SPEC:ADV', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'LANG:FI', 'COMP:P'}
ndo             {'LANG:EN', '!COMP:*', 'INF', '?ARG', 'LF:ing', '-COMP:C/fin', '-SPEC:T/fin', 'COMP:V', 'PF:PRG', 'VAL', '-SPEC:V', '-COMP:T/fin', 'COMP:v', 'PRG', '-COMP:FORCE'}
ne              {'-SPEC:C', 'OP', '!COMP:*', 'D', '!PROBE:N', '-SPEC:V', '-SPEC:T/fin', 'PHI:PER:3', 'PF:ne', '-COMP:T/fin', '-COMP:D', '-ARG', '-SPEC:P', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:MA/lla', 'COMP:N', '-COMP:uR', '-SPEC:D', 'adjoinable', 'LF:those', 'PHI:NUM:PL', 'LANG:FI', '-SPEC:INF'}
niiden          ['LANG:EN']
nen             {'SPEC:*', 'LF:ing', 'A', 'adjoinable', 'TAIL:D', 'PF:a', '-SPEC:A', '-SPEC:D', 'LANG:FI', 'COMP:0'}
not             {'-COMP:C', 'LANG:EN', 'PHI:NUM:_', '!COMP:*', 'LF:not', 'SPEC:*', 'PHI:GEN:_', '-SPEC:T/fin', '-VAL', 'POL:NEG', '-COMP:FIN', 'ARG', '-COMP:D', 'PF:not', 'Neg', 'PHI:DET:_', 'PHI:PER:_'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'PF:nukku', 'PHI:NUM:_', '-COMP:v', '-COMP:Neg/fin', '-SPEC:T/fin', 'V', 'SPEC:D', '-COMP:T/fin', '-COMP:D', 'PHI:DET:_', 'ASP', 'LF:sleep', '-COMP:V', '-COMP:T', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'LANG:FI', 'CLASS:INTR', 'COMP:P', 'PHI:PER:_'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', 'LF:possessions', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', 'PF:omaisuuden', '-COMP:D', '-SPEC:N', '-COMP:AUX', '-SPEC:R', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', 'LANG:FI', 'SPEC:A', 'N', '-SPEC:INF'}
operatoria      ['LANG:IT']
operatoria-     {'LF:operation', '0', 'PF:operatoria', '2SPEC', 'LANG:IT', 'SPEC:D'}
ostaa           ['LANG:FI']
osta-           {'PHI:NUM:_', '-COMP:v', '!COMP:*', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'CLASS:TR', '-COMP:P', '-COMP:N', 'ASP', 'PHI:DET:_', '-COMP:V', 'ASP:BOUNDED', 'PF:osta', 'COMP:D', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', 'LF:buy', 'LANG:FI', 'COMP:P', 'PHI:PER:_'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', 'SEM:nonreferential', '-SPEC:N', '-SPEC:R', '-SPEC:P', 'PF:paiva', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', 'LF:day', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', 'LANG:FI', 'SPEC:A', 'N', '-SPEC:INF'}
Pariisia        ['LANG:FI']
Pariisi-        {'-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SPEC:N', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', 'PF:Pariisi', '-SPEC:FORCE', 'LF:Paris', '-COMP:WH', '-COMP:N', 'LANG:FI', 'SPEC:A', 'N', '-SPEC:INF'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SEM:directional', '-SPEC:N', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'PF:Pekka', 'COMP:uR', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-SPEC:INF', '-COMP:N', 'LANG:FI', 'SPEC:A', 'N', 'LF:Pekka'}
pelottaa        ['LANG:FI']
pelkaa-         {'PHI:NUM:_', '-COMP:v', '!COMP:*', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', '-COMP:T/fin', 'CLASS:TR', 'PF:pelkaa', '-COMP:P', 'PHI:DET:_', 'ASP', '-COMP:V', 'COMP:D', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'LF:fear', '-COMP:N', 'LANG:FI', 'COMP:P', 'PHI:PER:_'}
persuades       ['LANG:EN']
persuade-       {'SEM:external', 'PHI:NUM:_', '!COMP:*', '-COMP:v', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'PF:persuade', 'PHI:DET:_', 'ASP', '-COMP:V', 'LANG:EN', 'PHI:GEN:_', 'COMP:TO/inf', 'SPEC:ADV', '-VAL', 'LF:persuade', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', 'PHI:PER:_'}
peruuntui       ['LANG:FI']
peruuntu-       {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'V', 'SPEC:D', '-COMP:T/fin', 'PHI:DET:_', 'ASP', 'LF:cancelled', '-COMP:V', 'SPEC:ADV', '-VAL', 'PF:peruuntui', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'LANG:FI', 'COMP:P', 'PHI:PER:_'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'PHI:NUM:_', '-COMP:v', '!COMP:*', '-SPEC:T/fin', 'LF:wash', 'V', '-COMP:T/fin', 'CLASS:TR', 'PF:pese', '-COMP:P', 'PHI:DET:_', 'ASP', '-COMP:V', 'ASP:BOUNDED', 'COMP:D', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'LANG:FI', 'COMP:P', 'PHI:PER:_'}
pese-           {'PHI:NUM:_', '-COMP:v', '!COMP:*', '-SPEC:T/fin', 'LF:wash', 'V', '-COMP:T/fin', 'CLASS:TR', 'PF:pese', '-COMP:P', 'PHI:DET:_', 'ASP', '-COMP:V', 'COMP:D', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'LANG:FI', 'COMP:P', 'PHI:PER:_'}
petardi         {'-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', 'LANG:IT', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SPEC:N', '-SPEC:P', 'LF:firecrackers', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', 'PF:petardi', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
pieni           ['LANG:FI']
pieni-          {'0', 'PF:pieni-', 'LANG:FI', '2SPEC', 'SPEC:D', 'LF:small'}
poikien         ['LANG:FI']
poika-          {'-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', 'PF:poika', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SPEC:N', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', 'LF:boy', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', 'LANG:FI', 'SPEC:A', 'N', '-SPEC:INF'}
puhelinta       ['LANG:FI']
puhelin-        {'PF:puhelin', '0', 'LF:phone', 'LANG:FI', '2SPEC', 'SPEC:D'}
punainen        ['LANG:FI']
puna-           {'0', 'LF:red', 'LANG:FI', '2SPEC', 'SPEC:D', 'PF:puna-'}
presupposto     {'-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', 'LANG:IT', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SPEC:N', '-SPEC:P', '-COMP:A', 'LF:presupposition', 'COMP:P', '-COMP:V', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF', 'PF:presupposto'}
primary         {'-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', 'LANG:IT', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SPEC:N', '-SPEC:P', 'PF:primary', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'LF:nurse', 'COMP:uR', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
promises        ['LANG:EN']
promise-        {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'V', 'SPEC:D', '-COMP:T/fin', 'LF:promise', 'SEM:internal', 'PHI:DET:_', 'ASP', '-COMP:V', 'LANG:EN', 'PHI:GEN:_', 'COMP:D', 'SPEC:ADV', '-VAL', 'PF:promise', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', 'PHI:PER:_'}
pyytaa          ['LANG:FI']
pyyta-          {'SEM:external', 'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:V', 'LF:ask', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'PF:pyyda', 'SPEC:TO/inf', 'SPEC:P', '-COMP:N', 'LANG:FI', 'COMP:P', 'PHI:PER:_'}
raukesi         ['LANG:FI']
raukea-         {'PHI:NUM:_', 'LF:terminate', '-COMP:v', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'PF:raukea', 'PHI:DET:_', 'ASP', '-COMP:V', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'LANG:FI', 'COMP:P', 'PHI:PER:_'}
red             ['LANG:EN']
red-            {'LANG:EN', '0', 'LF:red', 'PF:red', '2SPEC', 'SPEC:D'}
saavuttaa       ['LANG:FI']
saavutta-       {'PHI:NUM:_', '-COMP:v', '!COMP:*', 'PF:saavutta-', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'CLASS:TR', '-COMP:P', 'PHI:DET:_', 'ASP', '-COMP:V', 'ASP:BOUNDED', 'COMP:D', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'LF:reach', 'LANG:FI', 'COMP:P', 'PHI:PER:_', '!COMP:D'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'V', 'SPEC:D', '-COMP:T/fin', 'LF:say', 'COMP:VA/inf', 'PHI:DET:_', 'ASP', 'PF:sano-', '-COMP:V', 'COMP:FORCE', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'LANG:FI', 'COMP:P', 'PHI:PER:_'}
said            ['LANG:EN']
say'            {'PHI:NUM:_', '-COMP:v', 'PF:say', '-SPEC:T/fin', 'V', 'SPEC:D', '-COMP:T/fin', 'LF:say', 'PHI:DET:_', 'ASP', '-COMP:V', 'LANG:EN', 'PHI:GEN:_', 'SPEC:ADV', '-VAL', '!COMP:FORCE', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', 'PHI:PER:_'}
say-            {'PHI:NUM:_', '-COMP:v', 'PF:say', '-SPEC:T/fin', 'V', 'SPEC:D', '-COMP:T/fin', 'LF:say', 'PHI:DET:_', 'ASP', '-COMP:V', 'LANG:EN', 'PHI:GEN:_', 'SPEC:ADV', '-VAL', '!COMP:FORCE', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', 'PHI:PER:_'}
sala            ['LANG:IT']
sala-           {'-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', 'LANG:IT', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SPEC:N', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'PF:sala', 'COMP:uR', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-SPEC:INF', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', 'LF:room'}
scoppiati       ['LANG:IT']
scoppia-        {'PHI:NUM:_', '-COMP:v', 'LF:explode', '-SPEC:T/fin', 'V', 'LANG:IT', '-COMP:T/fin', 'PHI:DET:_', 'ASP', '-COMP:V', 'PHI:GEN:_', 'SPEC:ADV', '-VAL', 'ARG', 'PF:scoppia', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', 'PHI:PER:_'}
sen             {'LF:the/that', '-SPEC:C', 'OP', 'PF:sen', 'D', 'TAIL:PHI', '!COMP:*', '!PROBE:N', '-SPEC:V', '-SPEC:T/fin', 'TAIL:*POL:NEG', '-COMP:T/fin', '-COMP:D', '-ARG', 'TAIL:ASP', '-SPEC:P', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:MA/lla', 'COMP:N', '-COMP:uR', 'adjoinable', '-SPEC:D', 'LANG:FI', '-SPEC:INF'}
se'             {'LF:the/that', '-SPEC:C', 'OP', '!COMP:*', 'D', '!PROBE:N', '-SPEC:V', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:D', '-ARG', '-SPEC:P', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:MA/lla', 'COMP:N', '-COMP:uR', 'PF:se', 'adjoinable', '-SPEC:D', 'LANG:FI', '-SPEC:INF'}
sentenza        {'-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', 'LANG:IT', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SPEC:N', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', 'PF:sentenza', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', 'LF:sentence', 'SPEC:A', 'N', '-SPEC:INF'}
Seine           ['LANG:EN']
Seine-          {'-COMP:v', '-COMP:C/fin', 'LF:Seine', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SPEC:N', '-SPEC:P', '-COMP:A', '-COMP:V', 'LANG:EN', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', 'PF:Seine', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
sembrano        ['LANG:IT']
sembra-         {'-COMP:v', '-SPEC:T/fin', 'V', 'LF:seem', 'PF:sembra', 'SPEC:D', '-COMP:D', '-ARG', '-COMP:T/fin', '-COMP:V', 'LANG:EN', 'SPEC:ADV', '-VAL', '-ASP', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '!COMP:ARE/inf', '-COMP:N', 'COMP:P'}
sleeps          ['LANG:EN']
sleep           {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'PF:sleep', 'V', '-COMP:T/fin', 'SPEC:D', '-COMP:D', 'PHI:DET:_', 'ASP', 'LF:sleep', '-COMP:V', 'LANG:EN', 'PHI:GEN:_', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', 'CLASS:INTR', 'PHI:PER:_'}
sleep-          {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'PF:sleep', 'V', '-COMP:T/fin', 'SPEC:D', '-COMP:D', 'PHI:DET:_', 'ASP', 'LF:sleep', '-COMP:V', 'LANG:EN', 'PHI:GEN:_', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', 'CLASS:INTR', 'PHI:PER:_'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', '!COMP:A/inf', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SPEC:N', '-SPEC:P', '-COMP:A', 'PF:sopimus', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', 'LF:agreement', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', 'LANG:FI', 'SPEC:A', 'N', '-SPEC:INF'}
spinge          ['LANG:IT']
spinge-         {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'V', 'LANG:IT', '-COMP:T/fin', '-COMP:P', 'PHI:DET:_', 'ASP', '-COMP:V', 'PHI:GEN:_', 'SPEC:ADV', '-VAL', 'LF:push', 'ARG', 'PF:spinge', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', '!COMP:D'}
ssa             {'-SPEC:C', 'PHI:NUM:_', '!COMP:*', 'SPEC:*', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', 'COMP:n/MA', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:P', 'TAIL:V', '-SPEC:N', '-SPEC:v', 'PF:ssa', '-SPEC:Neg/fin', 'PHI:DET:_', 'PHI:PER:_', 'P', '-SPEC:iR', '-SPEC:iWH', 'COMP:D', '-VAL', '-COMP:ADV', 'adjoinable', 'ARG', '-COMP:uWH', 'LF:in', '-SPEC:FORCE', '-COMP:N', 'LANG:FI', '-SPEC:INF'}
stanno          ['LANG:IT']
sta-            {'PHI:NUM:_', '-COMP:v', 'COMP:PRG', '-SPEC:T/fin', 'V', 'SPEC:D', '-COMP:T/fin', 'LF:stay', 'SEM:internal', 'PHI:DET:_', '-COMP:V', 'LANG:EN', 'PF:sta', 'PHI:GEN:_', 'SPEC:ADV', '-VAL', '-ASP', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', 'PHI:PER:_'}
sti             {'!COMP:*', 'SPEC:*', 'TAIL:T', '-SPEC:T/fin', 'PF:sti', 'ADV', 'adjoinable', '-ARG', 'LF:by', '-SPEC:FORCE', '-SPEC:Neg/fin', '-SPEC:N', 'LANG:FI'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'LF:socks', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:v', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SPEC:N', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', 'LANG:FI', 'SPEC:A', 'N', '-SPEC:INF', 'PF:sukka-'}
talo            {'PF:talo', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SPEC:N', '-SPEC:P', 'LF:house', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', 'LANG:FI', 'SPEC:A', 'N', '-SPEC:INF'}
tama            ['LANG:EN']
tama-           {'LF:this', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SPEC:N', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', 'PF:tama', 'PHI', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', 'LANG:FI', 'SPEC:A', 'N', '-SPEC:INF'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'PHI:NUM:_', '-COMP:v', 'SPEC:*', 'MODAL', '!COMP:A/inf', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'SPEC:ADV', '-VAL', '-ASP', 'ARG', 'PF:taytyy', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'LANG:FI', 'COMP:P', 'LF:must', 'FIN'}
teki            ['LANG:FI']
teke-           {'PHI:NUM:_', '-COMP:v', '!COMP:*', 'PF:teke', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'CLASS:TR', 'LF:make', '-COMP:P', 'PHI:DET:_', 'ASP', '-COMP:V', 'ASP:BOUNDED', 'COMP:D', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', '-COMP:A/inf', 'LANG:FI', 'COMP:P', 'PHI:PER:_', '!COMP:D'}
that            {'LANG:EN', '!COMP:*', '-SPEC:*', 'FORCE', 'PF:that', '!PROBE:T/fin', '-VAL', 'COMP:C/fin', 'LF:that', '-ARG', 'COMP:T/fin', 'FIN'}
the             {'-SPEC:C', 'OP', '!COMP:*', 'D', '!PROBE:N', 'PHI:DEF:DEF', '-SPEC:V', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:D', '-ARG', '-SPEC:P', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:MA/lla', 'COMP:N', 'LANG:EN', '-COMP:uR', 'LF:the', 'adjoinable', '-SPEC:D', 'PF:the', '-SPEC:INF'}
to              {'-SPEC:C', 'PHI:NUM:_', '!COMP:*', '-SPEC:*', 'TAIL:V,+SEM:directional', 'PF:to', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '+SEM:directional', '-SPEC:ADV', '-SPEC:P', '-SPEC:N', '-SPEC:v', '-SPEC:Neg/fin', 'PHI:DET:_', 'PHI:PER:_', 'P', 'LANG:EN', 'PHI:GEN:_', '-SPEC:iR', '-SPEC:iWH', 'COMP:D', '-VAL', '-COMP:ADV', '-float', 'adjoinable', 'ARG', '-COMP:uWH', '-SPEC:FORCE', 'LF:to', '-COMP:N', '-SPEC:C/fin', '-SPEC:INF'}
to_inf          {'!COMP:*', 'INF', '-COMP:C/fin', '-SPEC:T/fin', 'COMP:V', '-SPEC:V', '-COMP:T/fin', 'COMP:v', '-SPEC:v', 'PF:TO/inf', 'LANG:EN', 'TO/inf', '?ARG', '-VAL', 'adjoinable', 'LF:TO/inf', '-COMP:FORCE'}
towards         {'-SPEC:C', 'PHI:NUM:_', '!COMP:*', '-SPEC:*', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', 'LF:towards', 'PF:towards', '-SPEC:ADV', '-SPEC:P', 'TAIL:V', '-SPEC:N', '-SPEC:v', '-SPEC:Neg/fin', 'PHI:DET:_', 'PHI:PER:_', 'P', 'LANG:EN', 'PHI:GEN:_', '-SPEC:iR', '-SPEC:iWH', 'COMP:D', '-VAL', '-COMP:ADV', '-float', 'adjoinable', 'ARG', '-COMP:uWH', '-SPEC:FORCE', '-COMP:N', '-SPEC:C/fin', '-SPEC:INF'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'PHI:NUM:_', '-COMP:v', '!COMP:*', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'CLASS:TR', '-COMP:P', '-COMP:N', 'ASP', 'PHI:DET:_', '-COMP:V', 'COMP:D', 'LF:nudge', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', 'PF:tonaise', 'LANG:FI', 'COMP:P', 'PHI:PER:_'}
tta             {'-SPEC:C', 'PHI:NUM:_', '!COMP:*', 'SPEC:*', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', 'COMP:n/MA', '-COMP:T/fin', 'ADV', 'PF:tta', '-SPEC:ADV', '-SPEC:P', '-SPEC:N', '-SPEC:v', '-SPEC:Neg/fin', 'PHI:DET:_', 'PHI:PER:_', 'P', '-SPEC:iR', '-SPEC:iWH', 'COMP:D', '-VAL', '-COMP:ADV', 'adjoinable', 'ARG', '-COMP:uWH', 'LF:without', '-SPEC:FORCE', '-COMP:N', 'LANG:FI', '-SPEC:INF'}
tries           ['LANG:EN']
try-            {'PHI:NUM:_', 'LF:try', '-COMP:v', '-SPEC:T/fin', '!COMP:TO/inf', 'V', 'SPEC:D', '-COMP:T/fin', 'SEM:internal', 'PHI:DET:_', '!COMP:-ARG', 'ASP', '-COMP:V', 'LANG:EN', 'PHI:GEN:_', 'SPEC:ADV', '-VAL', 'ARG', 'PF:try', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', 'PHI:PER:_'}
verifiche       {'-COMP:v', '-COMP:C/fin', 'LF:verification', '-SPEC:T/fin', '-SPEC:V', 'LANG:IT', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SPEC:N', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', 'PF:verifiche', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'V', 'SPEC:D', '-COMP:T/fin', '-COMP:D', 'PF:virtaa', 'PHI:DET:_', 'ASP', '-COMP:V', 'SPEC:ADV', '-VAL', '!COMP:P', 'ARG', 'LF:flow', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'LANG:FI', 'COMP:P', 'PHI:PER:_'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'PHI:NUM:_', '!COMP:*', '-SPEC:*', '-COMP:v', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'LF:want', 'SEM:internal', 'PHI:DET:_', 'ASP', '-COMP:V', 'LANG:EN', 'PHI:GEN:_', 'SPEC:ADV', '-VAL', 'ARG', 'PF:volu', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', 'PHI:PER:_'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'PHI:NUM:_', '-COMP:v', '!COMP:*', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'CLASS:TR', '-COMP:P', 'PHI:DET:_', 'ASP', '-COMP:V', 'SEM:achievement', 'ASP:BOUNDED', 'LANG:EN', 'PHI:GEN:_', 'COMP:D', 'SPEC:ADV', '-VAL', 'PF:voitta', 'LF:win', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', 'PHI:PER:_'}
wants           ['LANG:EN']
want-           {'PHI:NUM:_', '-COMP:v', '!COMP:*', '-SPEC:T/fin', 'V', '-COMP:T/fin', 'CLASS:TR', 'LF:want', '-COMP:P', '-COMP:N', 'ASP', 'PHI:DET:_', 'PHI:PER:_', '-COMP:V', 'LANG:EN', 'PHI:GEN:_', 'COMP:TO/inf', 'COMP:D', 'SPEC:ADV', '-VAL', 'ARG', '-SPEC:FORCE', 'SPEC:P', '-SPEC:TO/inf', 'COMP:P', 'PF:want'}
what            ['LANG:EN']
what-           {'-COMP:v', '-COMP:C/fin', 'PF:what', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', 'PHI_N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:N', '-SPEC:R', '-SPEC:P', '-COMP:A', '-COMP:V', 'LANG:EN', 'COMP:P', '-SPEC:uWH', 'LF:what', 'COMP:uR', '-COMP:*', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
which           {'-SPEC:C', 'OP', 'PF:which', 'D', '!COMP:*', '!PROBE:N', '-SPEC:V', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:D', '-ARG', '-SPEC:P', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:MA/lla', 'COMP:N', 'LANG:EN', '-COMP:uR', 'OP:WH', 'adjoinable', 'LF:which', '-SPEC:D', '-SPEC:INF'}
who             ['LANG:EN']
who-            {'-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'PF:who', 'PHI_N', 'COMP:R/D', '-SPEC:ADV', '-SPEC:N', '-COMP:AUX', '-SPEC:R', '-SPEC:P', 'LF:who', '-COMP:A', '-COMP:V', 'LANG:EN', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
whether         {'OP', '!COMP:*', '-SPEC:*', '-ARG', 'COMP:T/fin', 'COMP:C/fin', 'LANG:EN', 'FORCE', '!PROBE:T/fin', '-VAL', 'OP:WH', 'OP:Q', 'Q', 'LF:whether', 'PF:whether', 'FIN'}
yrittaa         ['LANG:FI']
yritta-         {'PHI:NUM:_', 'LF:try', '-COMP:v', '!COMP:A/inf', '-SPEC:T/fin', 'V', 'SPEC:D', '-COMP:T/fin', 'SEM:internal', 'PHI:DET:_', '!COMP:-ARG', 'ASP', '-COMP:V', 'LANG:EN', 'PHI:GEN:_', 'SPEC:ADV', '-VAL', 'PF:yritta', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P', 'PHI:PER:_'}
mina            ['LANG:EN']
mina-           {'PF:mina', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', 'PHI_N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:N', '-SPEC:R', '-SPEC:P', '-COMP:A', 'LF:I', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', 'LANG:FI', 'SPEC:A', 'N', '-SPEC:INF'}
sina            ['LANG:EN']
sina-           {'-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', 'PF:sina', 'COMP:R', 'COMP:R/D', 'PHI_N', '-SPEC:ADV', '-COMP:D', '-SPEC:N', '-COMP:AUX', '-SPEC:R', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-COMP:ADV', 'LF:you', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', 'LANG:FI', 'SPEC:A', 'N', '-SPEC:INF'}
han             ['LANG:EN']
han-            {'-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', 'PF:han', 'COMP:R', 'COMP:R/D', 'PHI_N', '-SPEC:ADV', '-COMP:D', '-SPEC:N', '-COMP:AUX', '-SPEC:R', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', 'LF:s/he', '-COMP:N', 'LANG:FI', 'SPEC:A', 'N', '-SPEC:INF'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'LF:we', 'COMP:R', 'PHI_N', 'COMP:R/D', '-SPEC:ADV', '-SPEC:N', '-COMP:AUX', '-SPEC:R', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-COMP:ADV', 'PF:me', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', 'LANG:FI', 'SPEC:A', 'N', '-SPEC:INF'}
te              ['LANG:EN']
te-             {'-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', 'PHI_N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:N', '-SPEC:R', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-COMP:ADV', 'LF:you', 'PF:te', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', 'LANG:FI', 'SPEC:A', 'N', '-SPEC:INF'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he-             {'PF:he', '-COMP:v', '-COMP:C/fin', '-SPEC:C/fin', 'LF:they', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', 'PHI_N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:N', '-SPEC:R', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', 'LANG:FI', 'SPEC:A', 'N', '-SPEC:INF'}
he-             {'PF:he', '-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', 'PHI_N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:N', '-SPEC:R', '-SPEC:P', '-COMP:A', '-COMP:V', 'LANG:EN', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-COMP:ADV', '-SPEC:FORCE', 'LF:he', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
se              ['LANG:FI']
se-             {'-SPEC:C', 'OP', '!COMP:*', 'D', '!PROBE:N', 'LF:it/that', '-SPEC:V', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:D', '-ARG', '-SPEC:P', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:MA/lla', 'COMP:N', '-COMP:uR', 'PF:se', 'adjoinable', '-SPEC:D', 'LANG:FI', '-SPEC:INF'}
I               ['LANG:EN']
I-              {'-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'PF:I', 'PHI_N', 'COMP:R/D', '-SPEC:ADV', '-SPEC:N', '-COMP:AUX', '-SPEC:R', '-SPEC:P', '-COMP:A', 'LF:I', '-COMP:V', 'LANG:EN', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
you             ['LANG:EN']
you-            {'-COMP:v', '-COMP:C/fin', 'PF:you', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', 'PHI_N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:N', '-SPEC:R', '-SPEC:P', '-COMP:A', '-COMP:V', 'LANG:EN', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-COMP:ADV', 'LF:you', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
he              ['LANG:EN']
she             ['LANG:EN']
she-            {'-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', 'PHI_N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:N', '-SPEC:R', '-SPEC:P', '-COMP:A', 'LF:she', '-COMP:V', 'LANG:EN', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:*', 'PF:she', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
we              ['LANG:EN']
we-             {'-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'LF:we', 'COMP:R', 'PHI_N', 'COMP:R/D', '-SPEC:ADV', '-SPEC:N', '-COMP:AUX', '-SPEC:R', 'PF:we', '-SPEC:P', '-COMP:A', '-COMP:V', 'LANG:EN', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
you_pl          ['LANG:EN']
you_pl-         {'-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SPEC:N', '-SPEC:P', 'PF:you_pl', '-COMP:A', '-COMP:V', 'LANG:EN', 'COMP:P', '-SPEC:uWH', 'LF:you_pl', 'COMP:uR', '-COMP:ADV', 'PHI', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
they            ['LANG:EN']
they-           {'-COMP:v', '-COMP:C/fin', 'LF:they', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', 'PHI_N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:N', '-SPEC:R', '-SPEC:P', '-COMP:A', '-COMP:V', 'LANG:EN', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-COMP:ADV', 'PF:they', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
it              ['LANG:EN']
it-             {'-SPEC:C', 'OP', '!COMP:*', 'D', '!PROBE:N', 'PF:it', 'LF:it/that', '-SPEC:V', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:D', '-ARG', '-SPEC:P', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:MA/lla', 'COMP:N', 'LANG:EN', '-COMP:uR', 'adjoinable', '-SPEC:D', '-SPEC:INF'}
io              ['LANG:EN']
io-             {'-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', 'LANG:IT', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', 'PHI_N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:N', '-SPEC:R', '-SPEC:P', '-COMP:A', 'LF:I', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:*', 'PF:io', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
tu              ['LANG:EN']
tu-             {'-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', 'LANG:IT', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', 'PHI_N', '-SPEC:ADV', '-COMP:AUX', 'PF:tu', '-SPEC:N', '-SPEC:R', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-COMP:ADV', 'LF:you', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
lui             ['LANG:EN']
lui-            {'-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', 'LANG:IT', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', 'PHI_N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:N', '-SPEC:R', '-SPEC:P', 'PF:lui', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-COMP:ADV', '-SPEC:FORCE', 'LF:he', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
lei             ['LANG:EN']
lei-            {'-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', 'LANG:IT', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', 'PHI_N', 'PF:lei', '-SPEC:ADV', '-SPEC:N', '-COMP:AUX', '-SPEC:R', '-SPEC:P', '-COMP:A', 'LF:she', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
noi             ['LANG:EN']
noi-            {'-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', 'LANG:IT', '-COMP:T/fin', '-COMP:D', 'LF:we', 'COMP:R', 'PHI_N', 'COMP:R/D', '-SPEC:ADV', '-SPEC:N', 'PF:noi', '-COMP:AUX', '-SPEC:R', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
voi             ['LANG:EN']
voi-            {'-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', 'LANG:IT', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', 'PHI_N', '-SPEC:ADV', 'PF:voi', '-SPEC:N', '-COMP:AUX', '-SPEC:R', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'LF:you_pl', 'COMP:uR', '-COMP:*', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
loro            ['LANG:EN']
loro-           {'-COMP:v', '-COMP:C/fin', 'LF:they', '-SPEC:T/fin', '-SPEC:V', 'LANG:IT', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', 'PHI_N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:N', '-SPEC:R', '-SPEC:P', 'PF:loro', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:*', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
mi              ['LANG:EN']
mi-             {'-COMP:C/fin', '-SPEC:T/fin', 'LANG:IT', 'COMP:R', 'COMP:R/D', 'PHI_N', '-SPEC:ADV', '-SPEC:N', 'COMP:uR', '-COMP:*', '-COMP:N', '-SPEC:C/fin', 'COMP:P', 'N', '-SPEC:INF', '-COMP:v', '-SPEC:V', '-COMP:T/fin', 'LF:me', '-COMP:D', '-COMP:AUX', '-SPEC:R', '-SPEC:P', '-COMP:A', '-COMP:V', '-SPEC:uWH', 'PF:mi(cl)', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', 'CL', 'SPEC:A'}
la              ['LANG:EN']
la-             {'LF:her', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:IT', 'COMP:R', 'COMP:R/D', 'PHI_N', '-SPEC:ADV', '-SPEC:N', 'COMP:uR', '-COMP:*', '-COMP:N', '-SPEC:C/fin', 'COMP:P', 'N', '-SPEC:INF', '-COMP:v', '-SPEC:V', '-COMP:T/fin', '-COMP:D', '-COMP:AUX', '-SPEC:R', '-SPEC:P', '-COMP:A', 'PF:la(cl)', '-COMP:V', '-SPEC:uWH', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', 'CL', 'SPEC:A'}
lo              ['LANG:EN']
lo-             {'-COMP:C/fin', '-SPEC:T/fin', 'LANG:IT', 'COMP:R', 'COMP:R/D', 'PHI_N', '-SPEC:ADV', '-SPEC:N', 'LF:him', 'COMP:uR', 'PF:lo(cl)', '-COMP:*', '-COMP:N', '-SPEC:C/fin', 'COMP:P', 'N', '-SPEC:INF', '-COMP:v', '-SPEC:V', '-COMP:T/fin', '-COMP:D', '-COMP:AUX', '-SPEC:R', '-SPEC:P', '-COMP:A', '-COMP:V', '-SPEC:uWH', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', 'CL', 'SPEC:A'}
si              ['LANG:EN']
si-             {'PF:si(cl)', '-COMP:C/fin', '-SPEC:T/fin', 'LANG:IT', 'CAL:CL', 'COMP:R', 'COMP:R/D', 'PHI_N', '-SPEC:ADV', 'LF:3sg', '-SPEC:N', 'COMP:uR', '-COMP:*', '-COMP:N', '-SPEC:C/fin', 'COMP:P', 'N', '-SPEC:INF', '-COMP:v', '-SPEC:V', '-COMP:T/fin', '-COMP:D', '-COMP:AUX', '-SPEC:R', '-SPEC:P', '-COMP:A', '-COMP:V', '-SPEC:uWH', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', 'SPEC:A'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-COMP:v', '-COMP:C/fin', '-SPEC:T/fin', '-SPEC:V', 'LANG:IT', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', 'PF:ci', 'PHI_N', '-SPEC:ADV', '-SPEC:N', '-COMP:AUX', '-SPEC:R', '-SPEC:P', '-COMP:A', '-COMP:V', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:*', 'LF:there', '-COMP:ADV', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'SPEC:A', 'N', '-SPEC:INF'}
[-n]            {'PHI:HUM:HUM', 'inflectional', 'PHI', 'PHI:NUM:SG', 'PHI:PER:1', 'LANG:FI', 'PHI:DET:DEF'}
[-t]            {'PHI:HUM:HUM', 'inflectional', 'PHI', 'PHI:PER:2', 'PHI:NUM:SG', 'LANG:FI', 'PHI:DET:DEF'}
[-V]            {'inflectional', 'PHI', 'PHI:NUM:SG', 'LANG:FI', 'PHI:PER:3'}
[-mme]          {'PHI:HUM:HUM', 'inflectional', 'PHI', 'PHI:PER:1', 'PHI:NUM:PL', 'LANG:FI', 'PHI:DET:DEF'}
[-mme]          {'PHI:HUM:HUM', 'inflectional', 'PHI:PER:1', 'PHI:NUM:PL', 'LANG:FI', 'PHI:DET:DEF'}
[-tte]          {'PHI:HUM:HUM', 'inflectional', 'PHI', 'PHI:PER:2', 'PHI:NUM:PL', 'LANG:FI', 'PHI:DET:DEF'}
[-vat]          {'inflectional', 'PHI', 'PHI:NUM:PL', 'LANG:FI', 'PHI:PER:3'}
[-ni]           {'PHI:HUM:HUM', 'inflectional', 'PHI', 'PHI:NUM:SG', 'PHI:PER:1', 'LANG:FI', 'PHI:DET:DEF'}
[-si]           {'PHI:HUM:HUM', 'inflectional', 'PHI', 'PHI:PER:2', 'PHI:NUM:SG', 'LANG:FI', 'PHI:DET:DEF'}
[-nsa]          {'inflectional', 'PHI', 'PHI:NUM:SG', 'LANG:FI', 'PHI:PER:3'}
[-an]           {'LANG:FI', 'inflectional', 'PHI', 'PHI:PER:3'}
[-nne]          {'PHI:HUM:HUM', 'inflectional', 'PHI:PER:2', 'PHI:NUM:PL', 'LANG:FI', 'PHI:DET:DEF'}
[-s]            {'LANG:EN', 'inflectional', 'PHI', 'PHI:NUM:SG', 'PHI:GEN:F', 'PHI:PER:3', 'PHI:GEN:M'}
[-0]            {'PHI:GEN:N', 'LANG:EN', 'inflectional', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:PER:3', 'PHI', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:NUM:PL'}
[-o]            {'PHI:HUM:HUM', 'inflectional', 'PHI', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:DET:DEF', 'LANG:IT'}
[-i]            {'PHI:HUM:HUM', 'inflectional', 'PHI', 'PHI:PER:2', 'PHI:NUM:SG', 'PHI:DET:DEF', 'LANG:IT'}
[-a]            {'inflectional', 'PHI', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:3', 'LANG:IT'}
[-e]            {'inflectional', 'PHI', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:3', 'LANG:IT'}
[-iamo]         {'PHI:HUM:HUM', 'inflectional', 'PHI', 'PHI:PER:1', 'PHI:NUM:PL', 'PHI:DET:DEF', 'LANG:IT'}
[-te]           {'PHI:HUM:HUM', 'inflectional', 'PHI', 'PHI:PER:2', 'PHI:NUM:PL', 'PHI:DET:DEF', 'LANG:IT'}
[-no]           {'inflectional', 'PHI', 'PHI:NUM:PL', 'PHI:DET:DEF', 'PHI:PER:3', 'LANG:IT'}
[-nom]          {'LANG:EN', 'inflectional', 'TAIL:FIN,ARG,VAL', 'NOM', 'adjoinable'}
[-par]          {'PAR', 'TAIL:ARG,-VAL', 'inflectional', 'LANG:FI', 'adjoinable'}
[-gen]          {'LANG:EN', 'inflectional', 'GEN', 'TAIL:INF,ARG', '-float'}
gen             {'LANG:EN', 'inflectional', 'GEN', 'TAIL:INF,ARG', '-float'}
[-n_acc]        {'inflectional', 'n-ACC', 'TAIL:PHI', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'TAIL:*POL:NEG', 'adjoinable'}
[-t_acc]        {'inflectional', 't-ACC', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'TAIL:*POL:NEG', 'adjoinable'}
[-0_acc]        {'0_ACC', 'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'TAIL:*PHI', 'TAIL:*POL:NEG', 'adjoinable'}
asp             {'LANG:EN', 'ASP:BOUNDED', 'inflectional'}
a'              {'LANG:X', 'LF:A', 'a', 'PF:a'}
b'              {'PF:b', 'LF:B', 'b', 'LANG:X'}
b''             {'LANG:EN', 'PF:b', '-COMP:c', 'b', 'LF:B'}
c''             {'c', 'LANG:EN', 'PF:c', 'SPEC:a', 'LF:C'}
c'              {'c', 'LANG:X', 'PF:c', 'LF:C'}
d'              {'LF:D', 'd', 'LANG:', 'PF:d'}
a''             ['LANG:EN']
x'              {'LF:X', 'PF:x', 'LANG:X', 'x'}
y'              {'LF:Y', 'y', 'PF:y', 'LANG:X'}
z'              {'z', 'LF:Z', 'PF:x', 'LANG:X'}
John'           {"N'", 'LF:John', 'PF:John', 'LANG:X'}
admires'        {"V'", 'PF:admires', 'LANG:X', 'LF:admires'}
admires''       {'PHI:NUM:_', '-COMP:v', '-SPEC:T/fin', 'V', 'SPEC:D', '-COMP:T/fin', 'PHI:DET:_', '-COMP:N', 'ASP', '-COMP:V', 'LANG:EN', 'PHI:GEN:_', 'SPEC:ADV', '-VAL', 'LF:admires', 'ARG', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', 'PF:admires', 'COMP:P', 'PHI:PER:_'}
Mary'           {"N'", 'PF:Mary', 'LF:mary', 'LANG:X'}
T/fin           {'LF:T', '-SPEC:Neg', 'PHI:NUM:_', '!COMP:*', 'SPEC:*', '-SPEC:T/fin', 'COMP:V', '-SPEC:V', 'VAL', '-COMP:T/fin', 'SPEC:D', 'T/fin', 'COMP:v', '-SPEC:N', '-SPEC:v', 'PHI:DET:_', 'LANG:EN', '!PROBE:V', 'PHI:GEN:_', 'COMP:D', 'PF:T', '!SPEC:D', '-COMP:INF', 'COMP:T/prt', 'T', 'ARG', '-SPEC:FORCE', 'SPEC:TO/inf', '-SPEC:TO/inf', '-SPEC:C/fin', 'PHI:PER:_', 'FIN'}
v               {'LF:v', 'LANG:EN', 'PF:v', '!COMP:*', 'PHI:NUM:_', 'PHI:GEN:_', 'v', 'COMP:V', '-VAL', 'SPEC:D', 'ARG', '-SPEC:N', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '!PROBE:V'}
C/fin           {'!COMP:*', 'SPEC:*', '-COMP:C/fin', '-SPEC:C/fin', '-SPEC:T/fin', 'VAL', 'LF:C/fin', '-ARG', '-SPEC:N', 'COMP:Neg/fin', 'COMP:T/fin', 'LANG:EN', '!PROBE:FIN', 'C/fin', '-COMP:T/prt', 'PF:C', 'C', 'FIN'}
T               {'LF:T', 'PHI:NUM:_', '!COMP:*', 'SPEC:*', '-SPEC:T/fin', 'COMP:V', 'VAL', '-SPEC:V', 'SPEC:D', 'COMP:v', '-SPEC:N', 'PHI:DET:_', 'LANG:EN', '!PROBE:V', 'PHI:GEN:_', 'COMP:D', 'PF:T', 'COMP:T/prt', 'T', 'ARG', '-SPEC:FORCE', '-COMP:NEG', 'PHI:PER:_', 'FIN'}
T/prt           {'PHI:NUM:_', 'FIN', '!COMP:*', 'PF:T/prt', 'SPEC:*', '-SPEC:T/fin', 'COMP:V', 'VAL', '-SPEC:V', 'SPEC:D', 'COMP:v', '-SPEC:N', 'PHI:DET:_', 'T/prt', 'LF:T/prt', 'LANG:EN', 'PHI:GEN:_', 'COMP:D', 'COMP:T/prt', 'T', 'ARG', '-SPEC:FORCE', '-COMP:NEG', 'PHI:PER:_', '!PROBE:V'}
a0              {'LANG:EN', 'LF:A', 'A', '-adjoinable', 'adjoinable', 'TAIL:D', 'PF:A', '-SPEC:A', '-SPEC:D', 'COMP:0'}
n               {'!COMP:*', '-COMP:C/fin', 'INF', 'SPEC:*', '-SPEC:T/fin', 'COMP:V', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', 'COMP:v', '-SPEC:N', 'COMP:0', 'LANG:EN', 'PHI:GEN:_', 'COMP:uR', '-COMP:N', '-SPEC:C/fin', 'COMP:P', 'N', '-SPEC:INF', 'PF:n', 'PHI:NUM:_', '!SPEC:*', '-COMP:v', '-SPEC:V', 'VAL', '-COMP:T/fin', '-COMP:D', '-COMP:AUX', '-SPEC:R', '-SPEC:P', 'PHI:DET:_', '-COMP:A', '-COMP:V', '-SPEC:uWH', '!SPEC:D', 'LF:n', 'n', '-COMP:ADV', 'ARG', '-SPEC:FORCE', '-COMP:WH', 'SPEC:A', 'PHI:PER:_'}
impass          {'LANG:EN', 'LF:impass', '!COMP:*', 'PHI:NUM:_', 'PHI:GEN:_', 'v', 'COMP:V', '-VAL', 'SPEC:D', 'ARG', '-SPEC:N', 'PF:impass', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '!PROBE:V'}
cau             {'LANG:EN', 'PHI:NUM:_', '!COMP:*', 'PF:Cau', 'PHI:GEN:_', 'v', 'COMP:V', '-VAL', 'LF:v/Cause', 'SPEC:D', 'ARG', '-SPEC:N', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '!PROBE:V'}
INF             {'LANG:EN', '!COMP:*', 'INF', '-COMP:C/fin', '-SPEC:T/fin', 'COMP:V', '-SPEC:V', '-COMP:T/fin', 'LF:INF', 'PF:INF', 'COMP:v', '-COMP:FORCE'}
prtcpl          {'PHI:NUM:_', 'FIN', '!COMP:*', 'PF:T/prt', 'INF', 'SPEC:*', '-COMP:C/fin', '-SPEC:T/fin', 'COMP:V', '-SPEC:V', 'VAL', '-COMP:T/fin', 'SPEC:D', 'COMP:v', '-SPEC:N', 'PHI:DET:_', 'T/prt', 'LF:T/prt', 'LANG:EN', 'PHI:GEN:_', 'COMP:D', 'COMP:T/prt', 'T', 'ARG', '-SPEC:FORCE', '-COMP:FORCE', '-COMP:NEG', 'PHI:PER:_', '!PROBE:V'}
TO/inf          {'!COMP:*', 'INF', '-COMP:C/fin', '-SPEC:T/fin', 'COMP:V', '-SPEC:V', '-COMP:T/fin', 'COMP:v', '-SPEC:v', 'PF:TO/inf', 'LANG:EN', 'TO/inf', '?ARG', '-VAL', 'adjoinable', 'LF:TO/inf', '-COMP:FORCE', '!COMP:V'}
A/inf           {'LF:A/inf', '!COMP:*', 'SPEC:*', 'INF', '-COMP:C/fin', '-SPEC:T/fin', 'COMP:V', '-SPEC:V', '-COMP:T/fin', 'COMP:v', '-SPEC:Neg/fin', '?VAL', 'A/inf', 'LANG:EN', '?ARG', '-COMP:FORCE', 'PF:A/inf'}
ARE/inf         {'!COMP:*', 'INF', 'SPEC:*', '-COMP:C/fin', 'LF:ARE/inf', '-SPEC:T/fin', 'VAL', 'COMP:V', '-SPEC:V', '-adjoinable', '-COMP:T/fin', 'COMP:v', 'PF:are', 'LANG:EN', '?ARG', '-COMP:FORCE', 'ARE/inf'}
ESSA/inf        {'!COMP:*', 'INF', 'SPEC:*', '-COMP:C/fin', '-SPEC:T/fin', 'COMP:V', '-SPEC:V', '-COMP:T/fin', 'ADV', 'COMP:v', '-SPEC:Neg/fin', '-SPEC:N', '?VAL', 'ESSA/inf', 'LANG:EN', '?ARG', 'TAIL:T', 'PF:essa', 'LF:while', 'adjoinable', '-SPEC:FORCE', '-COMP:FORCE'}
TUA/inf         {'PHI:NUM:_', '!SPEC:*', '!COMP:*', 'INF', '-COMP:C/fin', '-SPEC:T/fin', 'COMP:V', '-SPEC:V', '-COMP:T/fin', 'ADV', 'TUA/inf', 'COMP:v', 'LF:after', '-SPEC:Neg/fin', '-SPEC:N', 'PHI:DET:_', 'CAL', 'LANG:EN', 'PHI:GEN:_', 'TAIL:T', 'PF:tua', 'adjoinable', 'ARG', '-SPEC:FORCE', '-COMP:FORCE', 'PHI:PER:_'}
VA/inf          {'PHI:NUM:_', '!SPEC:*', '!COMP:*', 'INF', 'VA/inf', '-COMP:C/fin', 'SPEC:*', 'PF:vAn', '-SPEC:T/fin', 'COMP:V', 'VAL', '-SPEC:V', '-COMP:T/fin', 'COMP:v', '-SPEC:N', 'PHI:DET:_', 'LF:VA', 'LANG:EN', 'PHI:GEN:_', 'ARG', '-COMP:FORCE', 'PHI:PER:_'}
MA/ssa          {'PF:massa', 'LF:in_doing', 'PHI:NUM:_', '-SPEC:*', '-SPEC:T/fin', 'COMP:V', 'ADV', 'COMP:v', 'TAIL:V', '-SPEC:Neg/fin', '-SPEC:N', 'PHI:DET:_', 'LANG:EN', 'PHI:GEN:_', 'MA/inf', '-VAL', 'adjoinable', 'ARG', '-SPEC:FORCE', 'PHI:PER:_'}
MA/tta          {'LANG:EN', 'PHI:NUM:_', 'MA/inf', 'PHI:GEN:_', 'TAIL:T', '-SPEC:T/fin', '-VAL', 'ADV', 'adjoinable', 'LF:without_doing', 'ARG', '-SPEC:FORCE', '-SPEC:Neg/fin', '-SPEC:N', 'PHI:DET:_', 'PF:matta', 'PHI:PER:_'}
MA/lla          {'-SPEC:T/fin', 'COMP:V', 'ADV', 'COMP:v', '-SPEC:N', 'LANG:EN', 'PHI:GEN:_', 'MA/inf', 'TAIL:T', 'LF:by_doing', 'PHI:NUM:_', '-SPEC:Neg/fin', 'PHI:DET:_', 'PF:malla', '-VAL', 'adjoinable', 'ARG', '-SPEC:FORCE', 'PHI:PER:_'}
MA/inf          {'LF:to_do', '-SPEC:T/fin', 'COMP:V', 'ADV', 'COMP:v', 'TAIL:V', '-SPEC:N', 'LANG:EN', 'PHI:GEN:_', 'MA/inf', 'PHI:NUM:_', '-SPEC:Neg/fin', 'PHI:DET:_', 'PF:maan', '-VAL', 'adjoinable', 'ARG', '-SPEC:FORCE', 'PHI:PER:_'}
E/inf           {'SPEC:*', '-SPEC:T/fin', '-VAL', 'ADV', 'adjoinable', '-ARG', 'LF:by', '-SPEC:FORCE', '-SPEC:Neg/fin', '-SPEC:N', 'PF:en', 'LANG:FI'}
BE-             {'!COMP:*', '-COMP:v', '-SPEC:T/fin', 'V', 'SPEC:D', '-COMP:T/fin', '-ARG', 'LF:BE', 'ASP', '-COMP:V', 'LANG:EN', 'SPEC:ADV', 'COMP:T/prt', 'COPULA', 'PF:BE', '-VAL', '-SPEC:FORCE', 'SPEC:P', 'SPEC:TO/inf', '-COMP:N', 'COMP:P'}
D               {'-SPEC:C', 'PF:D', 'OP', '!COMP:*', 'D', '!PROBE:N', '-SPEC:V', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:D', '-ARG', '-SPEC:P', '-SPEC:N', '-SPEC:Neg/fin', '-SPEC:MA/lla', 'LF:D', 'LANG:EN', 'COMP:N', '-COMP:uR', 'adjoinable', '-SPEC:D', '-SPEC:INF'}
P               {'-SPEC:C', 'PHI:NUM:_', '!COMP:*', '-SPEC:*', '-SPEC:T/fin', 'LF:P', '-SPEC:V', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:P', '-SPEC:N', '-SPEC:v', '-SPEC:Neg/fin', 'PHI:DET:_', 'PHI:PER:_', 'P', 'LANG:EN', 'PHI:GEN:_', '-SPEC:iR', '-SPEC:iWH', 'COMP:D', '-VAL', '-COMP:ADV', '-float', 'adjoinable', 'ARG', '-COMP:uWH', 'PF:P', '-SPEC:FORCE', '-COMP:N', '-SPEC:C/fin', '-SPEC:INF'}
pro             ['LANG:EN']
pro-            {'-COMP:v', '-COMP:C/fin', 'SPEC:A', '-SPEC:T/fin', '-SPEC:V', '-COMP:T/fin', '-COMP:D', 'COMP:R', 'COMP:R/D', '-SPEC:ADV', '-COMP:AUX', '-SPEC:R', '-SPEC:N', '-SPEC:P', 'LF:pro', '-COMP:A', '-COMP:V', 'LANG:EN', 'COMP:P', '-SPEC:uWH', 'COMP:uR', '-COMP:ADV', 'PHI', '-SPEC:FORCE', '-COMP:WH', '-COMP:N', '-SPEC:C/fin', 'PF:(pro)', 'N', '-SPEC:INF'}
cl              {'LEFT:T/fin', 'LANG:EN', 'CL', 'inflectional', 'LEFT:D,CL', 'RIGHT:ARE/inf', 'RIGHT:PRG'}
inc             {'LANG:EN', 'inflectional', 'INCORPORATED'}
sg              {'LANG:EN', 'inflectional', 'PHI:NUM:SG'}
pl              {'LANG:EN', 'PHI:NUM:PL', 'inflectional'}
1p              {'LANG:EN', 'inflectional', 'PHI:PER:1'}
2p              {'LANG:EN', 'inflectional', 'PHI:PER:2'}
3p              {'LANG:EN', 'inflectional', 'PHI:PER:3'}
def             {'LANG:EN', 'PHI:DET:DEF', 'inflectional'}
indef           {'LANG:EN', 'inflectional', 'PHI:DET:INDEF'}
hum             {'LANG:EN', 'PHI:HUM:HUM', 'inflectional'}
nonhum          {'LANG:EN', 'inflectional', 'PHI:HUM:NONHUM'}
m               {'LANG:EN', 'inflectional', 'PHI:GEN:M'}
f               {'LANG:EN', 'PHI:GEN:F', 'inflectional'}
nom             {'TAIL:FIN,!COMP:*,VAL', 'LANG:EN', 'inflectional', 'NOM'}
acc             {'TAIL:v', 'LANG:EN', 'inflectional', 'ACC'}
dat             {'TAIL:v', 'LANG:EN', 'inflectional', 'DAT'}
uC/op           {'uC/op', 'LANG:EN', 'inflectional'}
wh              {'LANG:EN', 'OP:WH', 'OP:_', 'inflectional'}
wh_             {'LANG:EN', 'OP', 'inflectional', 'OP:_', 'FORCE:OP:WH'}
top             {'LANG:EN', 'OP:TOP', 'inflectional'}
foc             {'OP:FOC', 'LANG:EN', 'inflectional'}
C/op            {'LANG:EN', 'inflectional', 'OP:C/OP'}
rel             {'OP:REL', 'LANG:EN', 'inflectional', '-COMP:C/fin', 'adjoinable'}
Q               {'LANG:EN', 'OP', 'inflectional', 'OP:WH', 'OP:Q'}
