ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'COMP:D', 'PF:a', '-SPEC:N', 'P', '!COMP:*', '-SPEC:ADV', '-ARG', '-SPEC:P', '-SPEC:T/fin', 'COMP:ARE/inf', 'adjoinable', '-COMP:N', '-SPEC:FORCE', '-COMP:T', '-COMP:T/fin', 'LF:to', '-SPEC:INF', '-VAL', '-SPEC:*', '-SPEC:iR', '-COMP:uWH', '-SPEC:v', 'LANG:IT', '-SPEC:Neg/fin', 'TAIL:V', '-COMP:A', '-SPEC:iWH', '-SPEC:V', '-SPEC:C', '-COMP:ADV', '-SPEC:C/fin'}
a_D             {'!COMP:*', 'LF:D', '-ARG', '-SPEC:P', 'PF:D', '-SPEC:T/fin', 'OP', 'COMP:N', 'adjoinable', '!PROBE:N', '-COMP:P', '-COMP:D', 'D', '-SPEC:MA/lla', '-COMP:T/fin', '-SPEC:INF', '-COMP:uR', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:C', 'LANG:EN'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'COMP:D', 'ARG', 'SPEC:TO/inf', 'COMP:P', '!COMP:*', 'PHI:NUM:_', 'SPEC:P', 'PF:admire', '-SPEC:T/fin', 'LF:admire', 'CLASS:TR', 'PHI:GEN:_', '-COMP:N', 'SPEC:ADV', '-COMP:P', '-SPEC:FORCE', '-COMP:T/fin', '-VAL', 'V', '-SPEC:Neg', 'ASP', 'PHI:PER:_', 'PHI:DET:_', '-COMP:v', '-COMP:V', 'LANG:EN', '-COMP:Neg'}
admire*         ['LANG:EN']
T/fin*          {'NO_DET', '-VAL', "PF:T/fin'", 'NO_NUMBER', 'CAT:T/fin', '!SPEC:*', 'LF:T', 'LANG:EN'}
v*              {'NO_DET', 'LF:v', '-VAL', 'PF:v', 'CAT:v', 'LANG:EN', 'NO_NUMBER'}
admire**        ['LANG:EN']
T/fin**         {'NO_DET', '-VAL', "PF:T/fin''", 'NO_NUMBER', 'CAT:T/fin', '!SPEC:*', 'NO_PERSON', 'LANG:EN', 'LF:T', 'PHI:PER:3'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'COMP:D', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', 'LF:admire', 'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', 'LANG:IT', '-COMP:v', 'PF:adora', '-COMP:V', 'SPEC:ADV'}
antaa           ['LANG:FI']
anta-           {'COMP:D', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'LF:give', '!COMP:*', 'CLASS:DITR', 'SPEC:P', 'SPEC:D', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:N', 'SPEC:ADV', '-SPEC:FORCE', 'PF:antaa', '-VAL', 'V', 'ASP:BOUNDED', '-COMP:FIN', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:V', '+SEM:directional', 'LANG:FI'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'COMP:D', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:N', 'PF:ask', 'LF:ask', 'SPEC:ADV', '-SPEC:FORCE', 'SEM:internal', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:V', 'LANG:EN'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', 'PF:avain', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SEM:directional', '-COMP:A', '-SPEC:V', '-SPEC:C/fin', '-COMP:V', 'COMP:T/prt', 'LF:key', 'SPEC:A', 'COMP:R', 'COMP:C', 'LANG:FI'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', 'PF:auto', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', 'COMP:C', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SEM:directional', '-COMP:A', '-SPEC:V', '-SPEC:C/fin', '-COMP:V', 'COMP:T/prt', 'SPEC:A', 'COMP:R', 'LF:car', 'LANG:FI'}
bank            {'PF:bank1', '-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', 'FREQ:1', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', 'LF:bank_inst', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'LANG:EN', 'SPEC:A', 'COMP:R', 'COMP:C', '-SPEC:C/fin'}
bank            {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'PF:bank2', 'COMP:uR', '-COMP:N', 'LF:bank_river', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', 'FREQ:2', '-COMP:A', '-SPEC:V', '-COMP:V', 'COMP:T/prt', 'LANG:EN', 'SPEC:A', 'COMP:R', 'COMP:C', '-SPEC:C/fin'}
barn            {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'LF:barn', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', 'PF:barn', '-COMP:v', '-SPEC:V', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'LANG:EN', 'SPEC:A', 'COMP:R', 'COMP:C', '-SPEC:C/fin'}
city            {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'PF:city', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', 'LF:city', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'LANG:EN', 'SPEC:A', 'COMP:R', 'COMP:C', '-SPEC:C/fin'}
che             ['LANG:IT']
che-            {'-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', 'LF:who', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', 'LANG:IT', '-COMP:A', 'PF:che', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'COMP:uR', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:*', 'SPEC:A', 'COMP:R', '-SPEC:C/fin'}
chiamato        ['LANG:IT']
chiamata-       {'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:P', 'LF:called', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'PF:chiamato', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', 'LANG:IT', '-COMP:v', '-COMP:V', 'SPEC:ADV'}
claims          ['LANG:EN']
claim-          {'PF:claim', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'LF:claim', 'PHI:GEN:_', '-COMP:N', 'SPEC:ADV', '-COMP:D', '-SPEC:FORCE', '-VAL', 'COMP:T/fin', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:V', 'LANG:EN'}
danno           {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', 'LF:damage', '-SPEC:P', 'PF:danno', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', 'LANG:IT', '-COMP:v', '-COMP:A', '-SPEC:V', '-COMP:V', 'COMP:T/prt', 'SPEC:A', 'COMP:R', 'COMP:C', '-SPEC:C/fin'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'COMP:D', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', 'COMP:ARE/inf', 'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'SEM:internal', 'LF:detest', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', 'PF:detest', 'LANG:IT', '-COMP:v', '-COMP:V', 'SPEC:ADV'}
devono          ['LANG:EN']
deva-           {'-ASP', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'COMP:ARE/inf', 'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'SEM:internal', '-VAL', 'V', 'PF:deva', 'PHI:DET:_', 'PHI:PER:_', 'LF:must', 'LANG:IT', '-COMP:v', '-COMP:V', 'SPEC:ADV'}
di              {'COMP:D', '-SPEC:N', 'P', 'ARG', 'PF:di', '!COMP:*', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:P', '-SPEC:T/fin', 'LF:of', '-COMP:N', '-adjoinable', '-SPEC:FORCE', '-COMP:T', '-COMP:T/fin', '-SPEC:INF', '-VAL', 'PHI:DET:_', '-SPEC:iR', '-COMP:uWH', 'PHI:PER:_', '-SPEC:v', '-SPEC:Neg/fin', 'SPEC:*', '-COMP:A', '-SPEC:iWH', '-SPEC:V', '-SPEC:C', '-SPEC:C/fin', '-COMP:ADV', 'LANG:FI'}
does            {'-SPEC:N', 'ARG', '!COMP:*', 'SPEC:TO/inf', '-SPEC:TO/inf', 'PHI:NUM:_', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:v', 'PF:does', 'PHI:GEN:M', 'SPEC:FORCE', '-SPEC:Neg', '-COMP:INF', 'SPEC:*', 'COMP:T/prt', 'PHI:PER:3', 'PHI:NUM:SG', '!SPEC:*', 'SPEC:D', 'T', 'T/fin', 'PHI:GEN:F', 'LF:does', '-COMP:T/fin', 'COMP:V', '!PROBE:V', 'FIN', 'COMP:Neg', 'PHI:DET:_', 'PHI:PER:_', 'VAL', '-SPEC:v', 'SPEC:C/fin', '-SPEC:V', '-SPEC:C', 'LANG:EN'}
does_C          ['LANG:EN']
does-           {'-SPEC:N', 'ARG', '!COMP:*', 'SPEC:TO/inf', '-SPEC:TO/inf', 'PHI:NUM:_', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:v', 'PF:does', 'PHI:GEN:M', 'SPEC:FORCE', '-SPEC:Neg', '-COMP:INF', 'SPEC:*', 'COMP:T/prt', 'PHI:PER:3', 'PHI:NUM:SG', '!SPEC:*', 'SPEC:D', 'T', 'T/fin', 'PHI:GEN:F', 'LF:does', '-COMP:T/fin', 'COMP:V', '!PROBE:V', 'FIN', 'COMP:Neg', 'PHI:DET:_', 'PHI:PER:_', 'VAL', '-SPEC:v', 'SPEC:C/fin', '-SPEC:V', '-SPEC:C', 'LANG:EN'}
dorme           ['LANG:IT']
dorme-          {'-COMP:MA/inf', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:N', 'CLASS:INTR', 'SPEC:ADV', '-COMP:D', '-SPEC:FORCE', '-VAL', 'V', 'PF:dorme', 'PHI:DET:_', 'ASP', 'PHI:PER:_', 'LF:sleep', '-COMP:v', '-COMP:V', '!SPEC:D', 'LANG:EN'}
disappeared     ['LANG:EN']
disappear-      {'-COMP:MA/inf', 'LF:disappear', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:N', 'CLASS:INTR', 'SPEC:ADV', '-COMP:D', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', 'PF:disappear', '-COMP:V', 'LANG:EN'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'0', '2SPEC', 'PF:easy', 'LANG:EN', 'SPEC:D', 'LF:easy'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'ARG', '!COMP:*', '!SPEC:*', 'PHI:NUM:_', '-SPEC:T/fin', 'Neg/fin', 'LF:neg', '%SPEC:INF', 'SEM:internal', 'FIN', 'NEG', 'PHI:DET:_', 'PHI:PER:_', 'POL:NEG', 'VAL', '-SPEC:T', 'SPEC:*', 'PF:ei', '!COMP:T', 'COMP:T/prt', 'LANG:FI'}
e-              {'ARG', '!COMP:*', '!SPEC:*', 'PHI:NUM:_', '-SPEC:T/fin', 'Neg/fin', 'LF:neg', '%SPEC:INF', 'SEM:internal', 'FIN', 'NEG', 'PHI:DET:_', 'PHI:PER:_', 'POL:NEG', 'VAL', '-SPEC:T', 'SPEC:*', 'PF:ei', '!COMP:T', 'COMP:T/prt', 'LANG:FI'}
elaa            ['LANG:FI']
ela-            {'-COMP:MA/inf', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'PF:elaa', '-COMP:N', 'CLASS:INTR', '-COMP:D', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:V', 'SPEC:ADV', 'LF:live', 'LANG:FI'}
etsii           ['LANG:FI']
etsi-           {'COMP:D', 'LF:search', 'ARG', '!COMP:D', 'SPEC:TO/inf', 'COMP:P', '!COMP:*', 'SPEC:P', 'PHI:NUM:_', '-SPEC:T/fin', 'CLASS:TR', '-COMP:N', '-COMP:P', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:V', 'SPEC:ADV', 'PF:etsi', 'LANG:FI'}
etta            {'-SPEC:D', 'PF:etta', '!PROBE:FIN', '-VAL', 'FIN', '!COMP:*', '-SPEC:*', 'COMP:T/fin', '-ARG', 'FORCE', 'LF:that', 'COMP:C/fin', 'LANG:FI'}
fell            ['LANG:EN']
fell-           {'-COMP:MA/inf', 'PF:fell', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:N', 'CLASS:INTR', 'SPEC:ADV', '-COMP:D', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', 'LF:fell', '-COMP:v', '-COMP:V', 'LANG:EN'}
flow'           {'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'LF:flow', 'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', 'PF:flow', '-COMP:v', 'LANG:EN', '-COMP:V', 'SPEC:ADV'}
from            {'COMP:D', '-SPEC:N', 'P', 'ARG', '!COMP:*', 'PF:from', '-SPEC:ADV', 'TAIL:V,+SEM:directional', 'PHI:NUM:_', '-SPEC:P', '-SPEC:T/fin', 'PHI:GEN:_', 'adjoinable', '-COMP:N', '-float', '-SPEC:FORCE', '-COMP:T', '-COMP:T/fin', 'LF:from', '-SPEC:INF', '-VAL', '-SPEC:*', 'PHI:DET:_', '-SPEC:iR', '-COMP:uWH', 'PHI:PER:_', '-SPEC:v', '-SPEC:Neg/fin', '-SPEC:V', '-COMP:A', '-SPEC:iWH', '-SPEC:C', 'LANG:EN', '-COMP:ADV', '-SPEC:C/fin'}
gave            ['LANG:EN']
give-           {'COMP:D', '+SEM:directional', 'PF:give', 'ARG', 'SPEC:TO/inf', 'LF:give', 'COMP:P', 'CLASS:DITR', '!COMP:*', 'SPEC:P', 'SPEC:D', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:GEN:_', '-COMP:N', 'SPEC:ADV', '-SPEC:FORCE', '-VAL', 'V', '-COMP:FIN', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:V', 'LANG:EN'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', 'LF:Giuseppe', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', 'COMP:C', '-SPEC:R', '-SPEC:uWH', 'N', 'LANG:IT', '-SEM:directional', '-COMP:A', '-COMP:v', '-SPEC:V', '-COMP:V', 'COMP:T/prt', 'SPEC:A', 'COMP:R', 'PF:Giuseppe', '-SPEC:C/fin'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'COMP:D', 'ARG', 'SPEC:TO/inf', 'COMP:P', '!COMP:*', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', 'CLASS:TR', '-COMP:N', '-COMP:P', '-SPEC:FORCE', 'SEM:internal', 'LF:want', '-VAL', 'V', 'ASP:BOUNDED', '-SPEC:*', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', 'COMP:A/inf', 'PF:haluaa', '-COMP:V', 'SPEC:ADV', 'LANG:FI'}
hairitsee       ['LANG:FI']
hairitse-       {'PF:hairitsee', 'COMP:D', 'ARG', '!COMP:D', 'SPEC:TO/inf', 'COMP:P', 'SPEC:D', '!COMP:*', 'SPEC:P', 'PHI:NUM:_', '-SPEC:T/fin', 'CLASS:TR', '-COMP:N', '-COMP:P', '-SPEC:FORCE', 'LF:disturb', '-VAL', 'V', '-COMP:FIN', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:V', 'SPEC:ADV', 'LANG:FI'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'-ASP', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:D', 'PF:ha', 'SPEC:P', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:T', '-COMP:N', '-SPEC:FORCE', 'SEM:internal', '-VAL', 'V', 'PHI:DET:_', 'PHI:PER:_', 'LANG:IT', 'SPEC:*', '-COMP:v', '-COMP:V', 'SPEC:ADV', 'LF:have'}
horse           {'LF:horse', '-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'PF:horse', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'LANG:EN', 'SPEC:A', 'COMP:R', 'COMP:C', '-SPEC:C/fin'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'-COMP:MA/inf', 'LF:disappear', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', '-COMP:N', 'CLASS:INTR', 'PF:havia', '-COMP:D', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:V', 'SPEC:ADV', 'LANG:FI'}
Helsingissa     ['LANG:FI']
Helsinki        ['LANG:FI']
Helsinki-       {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'LF:Helsinki', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', 'PF:Helsinki', '-COMP:v', '-COMP:A', '-SPEC:V', '-SPEC:C/fin', '-COMP:V', 'COMP:T/prt', 'SPEC:A', 'COMP:R', 'COMP:C', 'LANG:FI'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'COMP:D', 'ARG', '!COMP:D', 'SPEC:TO/inf', 'COMP:P', '!COMP:*', 'SPEC:P', 'PHI:NUM:_', '-SPEC:T/fin', 'LF:admire', 'CLASS:TR', '-COMP:N', 'PF:ihaile-', '-COMP:P', '-SPEC:FORCE', '-VAL', 'V', '-COMP:FIN', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:V', 'SPEC:ADV', 'LANG:FI'}
il              {'!COMP:*', '-ARG', '-SPEC:P', 'PF:il', '-SPEC:T/fin', 'OP', 'COMP:N', 'adjoinable', '-COMP:P', '-COMP:D', 'D', '-SPEC:MA/lla', '-COMP:T/fin', '-SPEC:INF', '-COMP:uR', 'LANG:IT', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:C', '!PROBE:N', 'LF:the'}
i               {'!COMP:*', '-ARG', '-SPEC:P', 'PF:il', '-SPEC:T/fin', 'OP', 'COMP:N', 'adjoinable', '-COMP:P', '-COMP:D', 'D', '-SPEC:MA/lla', '-COMP:T/fin', '-SPEC:INF', '-COMP:uR', 'LANG:IT', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:C', '!PROBE:N', 'LF:the'}
in              {'COMP:D', 'PF:in', '-SPEC:N', 'P', 'ARG', '!COMP:*', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:P', '-SPEC:T/fin', 'LF:in', 'PHI:GEN:_', 'adjoinable', '-COMP:N', '-SPEC:FORCE', '-COMP:T', '-COMP:T/fin', '-SPEC:INF', '-VAL', 'PHI:DET:_', '-SPEC:iR', '-COMP:uWH', 'PHI:PER:_', '-SPEC:v', 'LANG:IT', '-SPEC:Neg/fin', '-COMP:A', '-SPEC:iWH', '-SPEC:V', '-SPEC:C', '-COMP:ADV', '-SPEC:C/fin'}
infermieri      {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', 'LF:nurses', '-SPEC:R', '-SPEC:uWH', 'N', 'LANG:IT', '-COMP:v', '-COMP:A', '-SPEC:V', '-COMP:V', 'COMP:T/prt', 'PF:infermieri', 'SPEC:A', 'COMP:R', 'COMP:C', '-SPEC:C/fin'}
is              ['LANG:EN']
be-             {'SPEC:TO/inf', '!COMP:*', 'COMP:P', 'SPEC:D', '-ARG', 'SPEC:P', '-SPEC:T/fin', 'LF:be', '-COMP:N', 'COPULA', 'SPEC:ADV', '-SPEC:FORCE', '-COMP:TO/inf', '-VAL', 'V', 'ASP', 'PF:be', '-COMP:v', '-COMP:V', 'LANG:EN'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'-COMP:MA/inf', 'PF:istuu', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', '-COMP:N', 'CLASS:INTR', '-COMP:D', '-SPEC:FORCE', 'LF:sit', 'V', '-VAL', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:V', 'SPEC:ADV', 'LANG:FI'}
John            ['LANG:EN']
John-           {'PF:John', '-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'LF:John', 'COMP:P', 'COMP:R/D', 'COMP:uR', '-adjoinable', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SEM:directional', '-SPEC:V', 'LANG:EN', 'SPEC:A', 'COMP:R', '-SPEC:C/fin'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', 'LF:who', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'PF:joka', 'COMP:R/D', 'COMP:uR', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-SPEC:C/fin', '-COMP:*', 'SPEC:A', 'COMP:R', 'LANG:FI'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'LF:Jukka', '-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SEM:directional', '-COMP:A', '-SPEC:V', 'PF:Jukka', '-SPEC:C/fin', '-COMP:V', 'COMP:T/prt', 'SPEC:A', 'COMP:R', 'COMP:C', 'LANG:FI'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'LF:run', 'SPEC:P', '-SPEC:T/fin', '-COMP:N', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', 'PF:juokse-', '-COMP:v', '-COMP:V', 'SPEC:ADV', 'LANG:FI'}
kaksi           {'PHI:NUM:SG', 'COMP:n', '-VAL', 'ARG', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'NUM', 'SPEC:*', 'TAIL:ARG,VAL,FIN', 'COMP:N', 'LF:two', 'PF:kaksi', 'LANG:FI'}
kaksi           {'COMP:n', 'TAIL:ARG,ASP:BOUNDED', 'NUM', 'TAIL:*POL:NEG', 'SPEC:*', 'COMP:N', 'LF:two', 'LANG:EN', 'PF:kaksi'}
kaksi_1         {'PHI:NUM:SG', 'COMP:n', '-VAL', 'ARG', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:PER:_', 'NUM', 'SPEC:*', 'TAIL:ARG,VAL,FIN', 'COMP:N', 'LF:two', 'PF:kaksi', 'LANG:FI'}
kaksi_2         {'COMP:n', 'TAIL:ARG,ASP:BOUNDED', 'NUM', 'TAIL:*POL:NEG', 'SPEC:*', 'COMP:N', 'LF:two', 'LANG:EN', 'PF:kaksi'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'NUM', 'SPEC:*', 'COMP:n', 'COMP:N', 'LF:two', 'PF:kaksi', 'LANG:FI'}
kaupunkia       ['LANG:EN']
kaupunki        {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', '-COMP:P', 'LF:city', 'PF:kaupunki', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:A', '-SPEC:C/fin', '-COMP:V', 'COMP:T/prt', 'SPEC:A', 'COMP:R', 'COMP:C', 'LANG:FI'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', 'LF:order', '-COMP:N', '-SPEC:FORCE', 'SEM:external', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', 'PF:kaske', '-COMP:V', 'SPEC:ADV', '!COMP:A/inf', 'LANG:FI'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'LF:watch', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', 'PF:kello', '-COMP:v', '-SPEC:V', '-COMP:A', '-SPEC:C/fin', '-COMP:V', 'COMP:T/prt', 'SPEC:A', 'COMP:R', 'COMP:C', 'LANG:FI'}
kello0-         {'0', 'LF:watch', '2SPEC', 'SPEC:D', 'PF:kello', 'LANG:FI'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', 'PF:key', '-COMP:v', 'LANG:EN', '-COMP:A', '-SPEC:V', '-COMP:V', 'COMP:T/prt', 'LF:key', 'SPEC:A', 'COMP:R', 'COMP:C', '-SPEC:C/fin'}
kirja           ['LANG:FI']
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PF:kirja', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', 'LF:book', '-COMP:v', '-SEM:directional', '-COMP:A', '-SPEC:V', '-SPEC:C/fin', '-COMP:V', 'COMP:T/prt', 'SPEC:A', 'COMP:R', 'COMP:C', 'LANG:FI'}
knows           ['LANG:EN']
know-           {'COMP:D', 'ARG', 'SPEC:TO/inf', 'COMP:P', '!COMP:*', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', 'LF:know', 'CLASS:TR', 'PHI:GEN:_', '-COMP:N', 'SPEC:ADV', '-COMP:P', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:V', 'LANG:EN', 'PF:know'}
kohti           {'COMP:D', '-SPEC:N', 'P', 'ARG', '!COMP:*', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:P', '-SPEC:T/fin', 'adjoinable', '-COMP:N', '-SPEC:FORCE', 'LF:towards', 'LANG:FI', '-COMP:T', '-COMP:T/fin', '-SPEC:INF', '-VAL', 'PHI:DET:_', '-SPEC:iR', '-COMP:uWH', 'PHI:PER:_', '-SPEC:v', '-SPEC:Neg/fin', 'SPEC:*', 'TAIL:V', '-COMP:A', '-SPEC:iWH', '-SPEC:V', '-SPEC:C', '-SPEC:C/fin', '-COMP:ADV', 'PF:kohti'}
koko            {'PF:koko', '!COMP:*', '-ARG', '-SPEC:P', '-SPEC:T/fin', 'OP', 'adjoinable', 'COMP:N', '-COMP:P', '-COMP:D', 'D', '-SPEC:MA/lla', '-COMP:T/fin', '-SPEC:INF', '-COMP:uR', '-SPEC:Neg/fin', 'TAIL:T', '-SPEC:V', '-SPEC:C', '!PROBE:N', 'LF:all', 'LANG:FI'}
kuka            ['LANG:FI']
kuka-           {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', 'LF:who', '-COMP:N', 'PF:kuka', '-COMP:WH', '-SPEC:FORCE', 'PHI', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:A', '-SPEC:C/fin', '-COMP:V', 'COMP:T/prt', 'SPEC:A', 'COMP:R', 'COMP:C', 'LANG:FI'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:P', 'LF:snore', '-SPEC:T/fin', '-COMP:N', '-COMP:D', '-COMP:WH', '-SPEC:FORCE', '-COMP:T/fin', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', 'PF:kuorsaa', '-COMP:V', 'SPEC:ADV', 'LANG:FI'}
lahella         {'-SPEC:N', '!COMP:*', 'ARG', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:P', '-SPEC:T/fin', '-COMP:N', 'COMP:v', '-SPEC:FORCE', '-COMP:T', 'SPEC:*', '-COMP:A', '-SPEC:iWH', 'LF:near', '!SPEC:D', 'COMP:D', 'P', 'INF', '-COMP:C/fin', '!SPEC:*', '-COMP:FORCE', 'adjoinable', '-COMP:T/fin', '-SPEC:INF', 'COMP:V', 'PHI:DET:_', 'PF:lahella', '-SPEC:iR', '-COMP:uWH', 'VAL', '-SPEC:v', 'PHI:PER:_', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:C', '-SPEC:C/fin', '-COMP:ADV', 'LANG:FI'}
lahella         {'COMP:D', '-SPEC:N', 'P', '!COMP:*', '!COMP:D', 'ARG', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:P', '-SPEC:T/fin', 'adjoinable', '-COMP:N', '-SPEC:FORCE', '-COMP:T', '-COMP:T/fin', '-SPEC:INF', '-VAL', 'PHI:DET:_', 'PF:lahella', '-SPEC:iR', '-COMP:uWH', '-SPEC:v', 'PHI:PER:_', '-SPEC:Neg/fin', 'SPEC:*', '-COMP:A', '-SPEC:iWH', '-SPEC:V', '-SPEC:C', '-SPEC:C/fin', 'LF:near', '-COMP:ADV', 'LANG:FI'}
lahella_1       {'COMP:D', '-SPEC:N', 'P', '!COMP:*', '!COMP:D', 'ARG', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:P', '-SPEC:T/fin', 'adjoinable', '-COMP:N', '-SPEC:FORCE', '-COMP:T', '-COMP:T/fin', '-SPEC:INF', '-VAL', 'PHI:DET:_', 'PF:lahella', '-SPEC:iR', '-COMP:uWH', '-SPEC:v', 'PHI:PER:_', '-SPEC:Neg/fin', 'SPEC:*', '-COMP:A', '-SPEC:iWH', '-SPEC:V', '-SPEC:C', '-SPEC:C/fin', 'LF:near', '-COMP:ADV', 'LANG:FI'}
lahella_2       {'-SPEC:N', '!COMP:*', 'ARG', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:P', '-SPEC:T/fin', '-COMP:N', 'COMP:v', '-SPEC:FORCE', '-COMP:T', 'SPEC:*', '-COMP:A', '-SPEC:iWH', 'LF:near', '!SPEC:D', 'COMP:D', 'P', 'INF', '-COMP:C/fin', '!SPEC:*', '-COMP:FORCE', 'adjoinable', '-COMP:T/fin', '-SPEC:INF', 'COMP:V', 'PHI:DET:_', 'PF:lahella', '-SPEC:iR', '-COMP:uWH', 'VAL', '-SPEC:v', 'PHI:PER:_', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:C', '-SPEC:C/fin', '-COMP:ADV', 'LANG:FI'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'-COMP:MA/inf', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'LF:leave', '-COMP:N', 'CLASS:INTR', 'COMP:PP', '-COMP:D', 'PF:lahtea', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:V', 'SPEC:ADV', 'LANG:FI'}
lavano          ['LANG:IT']
lava-           {'PF:lava', 'COMP:D', '!COMP:*', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', 'LANG:IT', '-COMP:v', '-COMP:V', 'SPEC:ADV', 'LF:wash'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'!COMP:*', 'LF:D', '-ARG', '-SPEC:P', '-SPEC:T/fin', 'OP', 'COMP:N', 'adjoinable', '-COMP:P', '-COMP:D', 'D', 'PF:le', '-SPEC:MA/lla', '-COMP:T/fin', '-SPEC:INF', '-COMP:uR', 'LANG:IT', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:C', '!PROBE:N'}
leaves          ['LANG:EN']
leave           {'ARG', 'PF:leave', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', 'LF:leave', 'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', '-COMP:T/fin', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', 'LANG:EN', '-COMP:V', '!SPEC:D', 'SPEC:ADV'}
leave-          {'ARG', 'PF:leave', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', 'LF:leave', 'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', '-COMP:T/fin', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', 'LANG:EN', '-COMP:V', '!SPEC:D', 'SPEC:ADV'}
like-           {'ARG', '!COMP:D', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:N', 'PF:like', 'LF:like', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', 'LANG:EN', '-COMP:V', 'SPEC:ADV'}
likes           ['LANG:EN']
like            {'ARG', '!COMP:D', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:N', 'PF:like', 'LF:like', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', 'LANG:EN', '-COMP:V', 'SPEC:ADV'}
little          ['LANG:EN']
little-         {'0', '2SPEC', 'LF:little', 'LANG:EN', 'SPEC:D', 'PF:little-'}
lle             {'COMP:D', '-SPEC:N', 'P', 'ARG', '!COMP:*', '-SPEC:ADV', 'PHI:NUM:_', 'TAIL:V,+SEM:directional', '-SPEC:P', '-SPEC:T/fin', 'adjoinable', '-COMP:N', 'PF:P(lle)', '-SPEC:FORCE', '-COMP:T', '-COMP:T/fin', '-SPEC:INF', '-VAL', '-SPEC:*', 'LF:for', 'PHI:DET:_', '-SPEC:iR', '-COMP:uWH', 'PHI:PER:_', '-SPEC:v', '-SPEC:Neg/fin', '-SPEC:V', '-COMP:A', '-SPEC:iWH', '-SPEC:C', '-SPEC:C/fin', '+SEM:directional', '-COMP:ADV', 'LANG:FI'}
lla             {'COMP:D', '-SPEC:N', 'P', 'ARG', '!COMP:*', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:P', '-SPEC:T/fin', 'adjoinable', '-COMP:N', '-SPEC:FORCE', '-COMP:T', '-COMP:T/fin', 'LF:by', '-SPEC:INF', '-VAL', 'PF:P(lla)', 'PHI:DET:_', '-SPEC:iR', '-COMP:uWH', 'PHI:PER:_', '-SPEC:v', 'TAIL:*V', '-SPEC:Neg/fin', 'TAIL:T', 'SPEC:*', '-COMP:A', '-SPEC:iWH', '-SPEC:V', '-SPEC:C', '-SPEC:C/fin', '-COMP:ADV', 'LANG:FI'}
Luisa           ['LANG:IT']
Luisa-          {'-COMP:VA/inf', '-SPEC:N', 'LF:Luisa', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PF:Luisa', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', 'LANG:IT', '-SEM:directional', '-COMP:A', '-COMP:v', '-SPEC:V', '-COMP:V', 'COMP:T/prt', 'SPEC:A', 'COMP:R', 'COMP:C', '-SPEC:C/fin'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'COMP:D', 'ARG', 'SPEC:TO/inf', 'COMP:P', '!COMP:*', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', 'CLASS:TR', '-COMP:N', '-COMP:P', 'LF:read', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', 'PF:luke', '-COMP:v', '-COMP:V', 'SPEC:ADV', 'LANG:FI'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'COMP:D', 'ARG', '!COMP:D', 'SPEC:TO/inf', 'COMP:P', '!COMP:*', 'SPEC:P', 'PHI:NUM:_', '-SPEC:T/fin', 'CLASS:TR', '-COMP:N', 'SPEC:ADV', '-COMP:P', '-SPEC:FORCE', '-VAL', 'V', 'ASP:BOUNDED', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', 'PF:loyta-', '-COMP:V', 'LF:find', 'LANG:FI'}
Mary            ['LANG:EN']
Mary-           {'-SPEC:N', 'PF:Mary', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'COMP:uR', 'LF:Mary', '-adjoinable', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SEM:directional', '-SPEC:V', 'LANG:EN', 'SPEC:A', 'COMP:R', '-SPEC:C/fin'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'COMP:uR', '-adjoinable', 'PF:Merja', '-SPEC:INF', 'LF:Merja', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SEM:directional', '-SPEC:V', '-SPEC:C/fin', 'SPEC:A', 'COMP:R', 'LANG:FI'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'LF:by', '-SPEC:N', 'MA/inf', 'ADV', '-SPEC:T/fin', 'PF:malla', 'TAIL:T', '-SPEC:Neg/fin', 'SPEC:*', 'adjoinable', 'COMP:v', '-SPEC:FORCE', 'LANG:FI'}
meren           ['LANG:FI']
mere-           {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', 'SPEC:A', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:A', '-SPEC:C/fin', 'PF:meri', '-COMP:V', 'COMP:T/prt', 'LF:ocean', 'COMP:R', 'COMP:C', 'LANG:FI'}
mies            {'PF:mies', '-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', 'LF:man', '-COMP:v', '-SPEC:V', '-COMP:A', '-SPEC:C/fin', '-COMP:V', 'COMP:T/prt', 'SPEC:A', 'COMP:R', 'COMP:C', 'LANG:FI'}
mistake         {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', 'PF:mistake', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', 'LF:mistake', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'LANG:EN', 'SPEC:A', 'COMP:R', 'COMP:C', '-SPEC:C/fin'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', 'SPEC:A', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', 'PF:mika-', '-COMP:v', '-SPEC:V', '-COMP:A', '-SPEC:C/fin', '-COMP:V', 'COMP:T/prt', 'LF:what', 'COMP:R', 'COMP:C', 'LANG:FI'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'COMP:D', 'ARG', 'SPEC:TO/inf', 'COMP:P', '!COMP:*', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', 'PHI:GEN:_', 'CLASS:TR', '-COMP:N', 'SPEC:ADV', '-COMP:P', '-SPEC:FORCE', 'PF:move', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', 'LANGN:EN', '-COMP:V', 'LF:move', '+SEM:directional'}
mukavasti       ['LANG:EN']
mukava-         {'0', 'LF:comfortably', 'PF:mukavasti', '2SPEC', 'SPEC:D', 'LANG:FI'}
must            {'-SPEC:N', 'ARG', '!COMP:*', 'SPEC:TO/inf', '-SPEC:TO/inf', '!SPEC:*', 'SPEC:D', 'T', 'PHI:NUM:_', '-SPEC:T/fin', 'T/fin', 'PHI:GEN:_', 'COMP:v', 'MODAL', 'PF:must', '-COMP:T/fin', 'COMP:V', '!PROBE:V', 'SPEC:FORCE', 'COMP:Neg', 'FIN', '-SPEC:Neg', 'PHI:DET:_', 'PHI:PER:_', 'LF:must', 'VAL', '-COMP:INF', '-SPEC:v', 'SPEC:C/fin', '-SPEC:V', '-SPEC:C', 'SPEC:*', 'COMP:T/prt', 'LANG:EN'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'LF:sell', 'COMP:D', 'PF:myy', 'ARG', 'SPEC:TO/inf', 'COMP:P', '!COMP:*', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', 'CLASS:TR', '-COMP:N', '-COMP:P', '-SPEC:FORCE', '-COMP:T/fin', '-VAL', 'ASP:BOUNDED', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:V', 'SPEC:ADV', 'LANG:FI'}
naki            ['LANG:FI']
nakee           ['LANG:FI']
nake-           {'COMP:D', '-COMP:ESSA/inf', 'ARG', 'SPEC:TO/inf', 'COMP:P', '!COMP:*', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', 'CLASS:TR', '-COMP:N', '-COMP:P', '-SPEC:FORCE', 'PF:nake', '-VAL', 'ASP:BOUNDED', 'V', 'PHI:DET:_', 'LF:see', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:MA/ssa', '-COMP:V', '-COMP:MA/tta', 'SPEC:ADV', 'LANG:FI'}
nayttaa         ['LANG:FI']
naytta-         {'LF:seem', 'SPEC:TO/inf', 'COMP:P', '-ARG', 'SPEC:P', '-SPEC:T/fin', '-COMP:N', 'PF:naytta', 'SPEC:ADV', '-SPEC:FORCE', 'SEM:internal', 'V', 'ASP', 'VAL', '-COMP:v', '-COMP:V', '!SPEC:D', '!COMP:VA/inf', 'LANG:FI'}
ndo             {'-COMP:T/fin', 'COMP:V', 'PF:PRG', '-COMP:C/fin', 'INF', '!COMP:*', '?ARG', 'VAL', '-COMP:FORCE', '-SPEC:T/fin', '-SPEC:V', 'COMP:v', 'LF:ing', 'LANG:EN', 'PRG'}
ne              {'!COMP:*', '-ARG', 'PHI:NUM:PL', '-SPEC:P', '-SPEC:T/fin', 'OP', 'COMP:N', 'adjoinable', 'LF:those', '!PROBE:N', '-COMP:P', '-COMP:D', 'D', '-SPEC:MA/lla', '-COMP:T/fin', '-SPEC:INF', '-COMP:uR', 'PF:ne', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:C', 'PHI:PER:3', 'LANG:FI'}
niiden          ['LANG:EN']
nen             {'-SPEC:D', 'PF:a', 'COMP:0', 'A', '-SPEC:A', 'SPEC:*', 'TAIL:D', 'LF:ing', 'LANG:FI'}
not             {'-VAL', 'ARG', '-COMP:FIN', '!COMP:*', 'PHI:NUM:_', 'LF:not', 'POL:NEG', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:T/fin', 'SPEC:*', 'LANG:EN', 'Neg', 'PHI:GEN:_', 'PF:not', '-COMP:D', '-COMP:C'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-COMP:MA/inf', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', '-COMP:N', 'CLASS:INTR', '-COMP:D', 'PF:nukku', '-SPEC:FORCE', '-COMP:T', '-COMP:T/fin', '-COMP:Neg/fin', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', 'LF:sleep', '-COMP:v', '-COMP:V', 'SPEC:ADV', 'LANG:FI'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'LF:possessions', 'COMP:P', 'COMP:R/D', '-SPEC:P', 'PF:omaisuuden', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:A', '-SPEC:C/fin', '-COMP:V', 'COMP:T/prt', 'SPEC:A', 'COMP:R', 'COMP:C', 'LANG:FI'}
operatoria      ['LANG:IT']
operatoria-     {'0', 'LANG:IT', '2SPEC', 'PF:operatoria', 'SPEC:D', 'LF:operation'}
ostaa           ['LANG:FI']
osta-           {'COMP:D', 'ARG', 'SPEC:TO/inf', 'COMP:P', '!COMP:*', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', 'PF:osta', 'CLASS:TR', '-COMP:N', 'LF:buy', '-COMP:P', '-SPEC:FORCE', '-VAL', 'ASP:BOUNDED', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:V', 'SPEC:ADV', 'LANG:FI'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', 'LF:day', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', 'PF:paiva', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', 'SEM:nonreferential', '-COMP:v', '-COMP:A', '-SPEC:V', '-SPEC:C/fin', '-COMP:V', 'COMP:T/prt', 'SPEC:A', 'COMP:R', 'COMP:C', 'LANG:FI'}
past            {'COMP:D', '-SPEC:N', 'P', 'LF:past', 'ARG', '!COMP:*', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:P', '-SPEC:T/fin', 'PHI:GEN:_', 'adjoinable', '-COMP:N', '-float', '-SPEC:FORCE', '-COMP:T', '-COMP:T/fin', '-SPEC:INF', '-VAL', '-SPEC:*', 'PHI:DET:_', '-SPEC:iR', '-COMP:uWH', 'PHI:PER:_', '-SPEC:v', '-SPEC:Neg/fin', '-SPEC:V', 'PF:past', '-COMP:A', '-SPEC:iWH', '-SPEC:C', 'LANG:EN', '-COMP:ADV', '-SPEC:C/fin'}
Pariisia        ['LANG:FI']
Pariisi-        {'LF:Paris', '-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PF:Pariisi', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:A', '-SPEC:C/fin', '-COMP:V', 'COMP:T/prt', 'SPEC:A', 'COMP:R', 'COMP:C', 'LANG:FI'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'PF:Pekka', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'LF:Pekka', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SEM:directional', '-COMP:A', '-SPEC:V', '-SPEC:C/fin', '-COMP:V', 'COMP:T/prt', 'SPEC:A', 'COMP:R', 'COMP:C', 'LANG:FI'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'COMP:D', 'ARG', 'SPEC:TO/inf', 'COMP:P', '!COMP:*', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', 'CLASS:TR', '-COMP:N', '-COMP:P', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', 'PF:pelkaa', '-COMP:v', '-COMP:V', 'SPEC:ADV', 'LF:fear', 'LANG:FI'}
persuades       ['LANG:EN']
persuade-       {'!COMP:*', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:N', 'SPEC:ADV', '-SPEC:FORCE', 'SEM:external', 'PF:persuade', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', 'LF:persuade', '-COMP:v', 'COMP:TO/inf', '-COMP:V', 'LANG:EN'}
peruuntui       ['LANG:FI']
peruuntu-       {'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', '-COMP:N', '-SPEC:FORCE', 'LANG:FI', '-VAL', 'V', 'PF:peruuntui', 'ASP', 'PHI:PER:_', 'PHI:DET:_', '-COMP:v', '-COMP:V', 'SPEC:ADV', 'LF:cancelled'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'COMP:D', 'ARG', 'SPEC:TO/inf', 'COMP:P', '!COMP:*', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', 'CLASS:TR', '-COMP:N', '-COMP:P', '-SPEC:FORCE', '-VAL', 'ASP:BOUNDED', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', 'PF:pese_asp', '-COMP:V', 'SPEC:ADV', 'LF:wash', 'LANG:FI'}
pese-           {'COMP:D', 'PF:pese', 'ARG', 'SPEC:TO/inf', 'COMP:P', '!COMP:*', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', 'CLASS:TR', '-COMP:N', '-COMP:P', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:V', 'SPEC:ADV', 'LF:wash', 'LANG:FI'}
petardi         {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', 'LF:firecrackers', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', 'PF:petardi', 'LANG:IT', '-COMP:v', '-COMP:A', '-SPEC:V', '-COMP:V', 'COMP:T/prt', 'SPEC:A', 'COMP:R', 'COMP:C', '-SPEC:C/fin'}
pieni           ['LANG:FI']
pieni-          {'0', '2SPEC', 'PF:pieni-', 'LF:small', 'SPEC:D', 'LANG:FI'}
poikien         ['LANG:FI']
poika-          {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', 'PF:poika', '-COMP:WH', '-SPEC:FORCE', 'LF:boy', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:A', '-SPEC:C/fin', '-COMP:V', 'COMP:T/prt', 'SPEC:A', 'COMP:R', 'COMP:C', 'LANG:FI'}
puhelinta       ['LANG:FI']
puhelin-        {'0', '2SPEC', 'SPEC:D', 'PF:puhelin', 'LF:phone', 'LANG:FI'}
punainen        ['LANG:FI']
puna-           {'0', 'LF:red', '2SPEC', 'PF:puna-', 'SPEC:D', 'LANG:FI'}
presupposto     {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'LF:presupposition', 'COMP:uR', '-COMP:N', 'PF:presupposto', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', 'LANG:IT', '-COMP:v', '-COMP:A', '-SPEC:V', '-COMP:V', 'COMP:T/prt', 'SPEC:A', 'COMP:R', 'COMP:C', '-SPEC:C/fin'}
primary         {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', 'LF:nurse', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', 'COMP:R', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', 'LANG:IT', '-COMP:v', '-COMP:A', '-SPEC:V', '-COMP:V', 'COMP:T/prt', 'SPEC:A', 'PF:primary', 'COMP:C', '-SPEC:C/fin'}
promises        ['LANG:EN']
promise-        {'COMP:D', 'LF:promise', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:D', 'SPEC:P', 'PF:promise', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:N', 'SPEC:ADV', '-SPEC:FORCE', 'SEM:internal', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:V', 'LANG:EN'}
problem         {'PF:problem', '-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'LF:problem', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'LANG:EN', 'SPEC:A', 'COMP:R', 'COMP:C', '-SPEC:C/fin'}
pyytaa          ['LANG:FI']
pyyta-          {'COMP:D', '-COMP:V', 'ARG', 'SPEC:TO/inf', 'COMP:P', '!COMP:*', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', 'CLASS:TR', '-COMP:N', 'LF:ask', '-COMP:P', '-SPEC:FORCE', 'SEM:external', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', 'PF:pyyda', 'SPEC:ADV', 'LANG:FI'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'-COMP:MA/inf', 'LAMG:EN', 'ARG', 'COMP:P', 'SPEC:TO/inf', 'SPEC:D', 'SPEC:P', 'PHI:NUM:_', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:race', '-COMP:N', 'CLASS:INTR', 'SPEC:ADV', '-COMP:D', '-SPEC:FORCE', '-COMP:T/fin', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:V', 'LANG:EN', 'PF:race'}
raukesi         ['LANG:FI']
raukea-         {'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', 'PF:raukea', '-COMP:N', 'LF:terminate', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:V', 'SPEC:ADV', 'LANG:FI'}
red             ['LANG:EN']
red-            {'0', 'LANG:EN', 'LF:red', '2SPEC', 'PF:red', 'SPEC:D'}
saavuttaa       ['LANG:FI']
saavutta-       {'COMP:D', 'LF:reach', 'ARG', '!COMP:D', 'SPEC:TO/inf', 'COMP:P', '!COMP:*', 'SPEC:P', 'PHI:NUM:_', '-SPEC:T/fin', 'CLASS:TR', '-COMP:N', '-COMP:P', '-SPEC:FORCE', '-VAL', 'ASP:BOUNDED', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:V', 'PF:saavutta-', 'SPEC:ADV', 'LANG:FI'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'COMP:D', 'LF:say', 'ARG', 'SPEC:TO/inf', 'COMP:P', '!COMP:*', 'SPEC:D', 'SPEC:P', 'PHI:NUM:_', '-SPEC:T/fin', 'CLASS:TR', '-COMP:N', '-COMP:P', '-SPEC:FORCE', '-VAL', 'V', 'PF:sano-', 'PHI:DET:_', 'ASP', 'PHI:PER:_', 'COMP:FORCE', '-COMP:v', '-COMP:V', 'SPEC:ADV', 'COMP:VA/inf', 'LANG:FI'}
said            ['LANG:EN']
say'            {'LF:say', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', 'PF:say', '!COMP:FORCE', '-COMP:v', 'LANG:EN', '-COMP:V', 'SPEC:ADV'}
say-            {'LF:say', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', 'PF:say', '!COMP:FORCE', '-COMP:v', 'LANG:EN', '-COMP:V', 'SPEC:ADV'}
sala            ['LANG:IT']
sala-           {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'LF:room', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', 'COMP:C', '-SPEC:R', '-SPEC:uWH', 'N', 'LANG:IT', '-COMP:v', '-COMP:A', '-SPEC:V', '-COMP:V', 'COMP:T/prt', 'SPEC:A', 'COMP:R', 'PF:sala', '-SPEC:C/fin'}
scoppiati       ['LANG:IT']
scoppia-        {'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:P', 'PF:scoppia', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', 'LANG:IT', '-COMP:v', '-COMP:V', 'SPEC:ADV', 'LF:explode'}
sentenza        {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', 'PF:sentenza', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', '-COMP:WH', 'LF:sentence', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', 'LANG:IT', '-COMP:v', '-COMP:A', '-SPEC:V', '-COMP:V', 'COMP:T/prt', 'SPEC:A', 'COMP:R', 'COMP:C', '-SPEC:C/fin'}
Seine           ['LANG:EN']
Seine-          {'PF:Seine', '-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'LF:Seine', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'LANG:EN', 'SPEC:A', 'COMP:R', 'COMP:C', '-SPEC:C/fin'}
sembrano        ['LANG:IT']
sembra-         {'-ASP', 'LF:seem', 'SPEC:TO/inf', 'COMP:P', '-ARG', 'SPEC:P', 'SPEC:D', '-SPEC:T/fin', '-COMP:N', 'SPEC:ADV', '-COMP:D', '-SPEC:FORCE', '!COMP:ARE/inf', '-VAL', 'V', 'PF:sembra', '-COMP:v', '-COMP:V', 'LANG:EN'}
sleeps          ['LANG:EN']
sleep           {'-COMP:MA/inf', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'PF:sleep', 'PHI:GEN:_', '-COMP:N', 'CLASS:INTR', 'SPEC:ADV', '-COMP:D', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', 'LF:sleep', '-COMP:v', '-COMP:V', 'LANG:EN'}
sleep-          {'-COMP:MA/inf', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'PF:sleep', 'PHI:GEN:_', '-COMP:N', 'CLASS:INTR', 'SPEC:ADV', '-COMP:D', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', 'LF:sleep', '-COMP:v', '-COMP:V', 'LANG:EN'}
solution        {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', 'PF:solution', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', 'LF:solution', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'LANG:EN', 'SPEC:A', 'COMP:R', 'COMP:C', '-SPEC:C/fin'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', 'LF:agreement', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', 'PF:sopimus', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:A', '-SPEC:C/fin', '-COMP:V', 'COMP:T/prt', 'SPEC:A', '!COMP:A/inf', 'COMP:R', 'COMP:C', 'LANG:FI'}
spinge          ['LANG:IT']
spinge-         {'ARG', 'PF:spinge', '!COMP:D', 'SPEC:TO/inf', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:N', '-COMP:P', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', 'LANG:IT', '-COMP:v', 'LF:push', '-COMP:V', 'SPEC:ADV'}
ssa             {'COMP:D', '-SPEC:N', 'P', 'ARG', '!COMP:*', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:P', '-SPEC:T/fin', 'COMP:n/MA', 'LF:in', 'adjoinable', '-COMP:N', '-SPEC:FORCE', '-COMP:T', '-COMP:T/fin', '-SPEC:INF', '-VAL', 'PHI:DET:_', '-SPEC:iR', 'PF:ssa', '-COMP:uWH', '-SPEC:v', 'PHI:PER:_', '-SPEC:Neg/fin', 'SPEC:*', 'TAIL:V', '-COMP:A', '-SPEC:iWH', '-SPEC:V', '-SPEC:C', '-SPEC:C/fin', '-COMP:ADV', 'LANG:FI'}
stanno          ['LANG:IT']
sta-            {'-ASP', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:N', 'SPEC:ADV', 'COMP:PRG', '-SPEC:FORCE', 'SEM:internal', '-VAL', 'V', 'PF:sta', 'PHI:DET:_', 'PHI:PER:_', '-COMP:v', 'LF:stay', '-COMP:V', 'LANG:EN'}
sti             {'LF:by', 'PF:sti', '-SPEC:N', '!COMP:*', 'ADV', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', 'TAIL:T', 'SPEC:*', 'adjoinable', '-SPEC:FORCE', 'LANG:FI'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'PF:sukka-', '-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:T/prt', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:A', '-SPEC:C/fin', '-COMP:V', 'LF:socks', 'SPEC:A', 'COMP:R', 'COMP:C', 'LANG:FI'}
surprised       ['LANG:EN']
surprise-       {'COMP:D', 'ARG', 'SPEC:TO/inf', 'COMP:P', '!COMP:*', 'PF:surprise', 'SPEC:P', 'PHI:NUM:_', '-SPEC:T/fin', 'PHI:GEN:_', 'CLASS:TR', '-COMP:N', 'SPEC:ADV', '-COMP:P', '-SPEC:FORCE', '-COMP:T/fin', '-VAL', 'V', 'LF:surprise', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:V', 'LANG:EN'}
talo            {'-COMP:VA/inf', '-SPEC:N', 'PF:talo', '-COMP:V', '-COMP:C/fin', 'COMP:D/rel', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:A', '-SPEC:C/fin', 'LF:house', 'COMP:T/prt', 'SPEC:A', 'COMP:R', 'COMP:C', 'LANG:FI'}
tama            ['LANG:EN']
tama-           {'PF:tama', '-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', 'LF:this', '-COMP:WH', '-SPEC:FORCE', 'PHI', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:A', '-SPEC:C/fin', '-COMP:V', 'COMP:T/prt', 'SPEC:A', 'COMP:R', 'COMP:C', 'LANG:FI'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'-ASP', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', '-COMP:N', 'MODAL', '-SPEC:FORCE', '-VAL', 'V', 'FIN', 'PF:taytyy', 'PHI:DET:_', 'PHI:PER:_', 'LF:must', '-COMP:v', 'SPEC:*', '-COMP:V', 'SPEC:ADV', '!COMP:A/inf', 'LANG:FI'}
teki            ['LANG:FI']
teke-           {'COMP:D', '-COMP:V', 'ARG', '!COMP:D', 'SPEC:TO/inf', 'COMP:P', '!COMP:*', 'SPEC:P', 'PHI:NUM:_', 'LF:make', '-SPEC:T/fin', 'CLASS:TR', '-COMP:N', '-COMP:P', '-SPEC:FORCE', '-VAL', 'ASP:BOUNDED', 'V', 'PF:teke', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:A/inf', 'SPEC:ADV', 'LANG:FI'}
that            {'!PROBE:FIN', '-VAL', 'FIN', '!COMP:*', '-SPEC:*', 'COMP:T/fin', '-ARG', 'FORCE', 'LF:that', 'PF:that', 'COMP:C/fin', 'LANG:EN'}
the             {'PHI:DEF:DEF', '!COMP:*', 'PF:the', '-ARG', '-SPEC:P', '-SPEC:T/fin', 'OP', 'COMP:N', 'adjoinable', '!PROBE:N', '-COMP:P', '-COMP:D', 'D', '-SPEC:MA/lla', '-COMP:T/fin', '-SPEC:INF', '-COMP:uR', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:C', 'LANG:EN', 'LF:the'}
to              {'-SPEC:N', 'ARG', '!COMP:*', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:P', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', '-COMP:T', '-SPEC:*', '-COMP:A', '-SPEC:iWH', '+SEM:directional', 'COMP:D', 'P', 'adjoinable', '-float', '-COMP:T/fin', 'LF:to', '-SPEC:INF', '-VAL', 'PHI:DET:_', '-SPEC:iR', '-COMP:uWH', 'PHI:PER:_', '-SPEC:v', '-SPEC:Neg/fin', '-SPEC:V', 'TAIL:V', '-SPEC:C', 'PF:to', 'LANG:EN', '-COMP:ADV', '-SPEC:C/fin'}
to_inf          {'-COMP:C/fin', 'INF', '!COMP:*', '?ARG', '-COMP:FORCE', '-SPEC:T/fin', 'adjoinable', 'COMP:v', '-COMP:T/fin', 'COMP:V', 'PF:TO/inf', '-VAL', 'LF:TO/inf', '-SPEC:v', '-SPEC:V', 'LANG:EN', 'TO/inf'}
towards         {'COMP:D', '-SPEC:N', 'P', 'ARG', '!COMP:*', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:P', '-SPEC:T/fin', 'PHI:GEN:_', 'adjoinable', '-COMP:N', '-float', '-SPEC:FORCE', 'LF:towards', '-COMP:T', '-COMP:T/fin', '-SPEC:INF', '-VAL', '-SPEC:*', 'PHI:DET:_', '-SPEC:iR', '-COMP:uWH', 'PHI:PER:_', '-SPEC:v', '-SPEC:Neg/fin', '-SPEC:V', 'TAIL:V', '-COMP:A', '-SPEC:iWH', '-SPEC:C', 'LANG:EN', '-COMP:ADV', 'PF:towards', '-SPEC:C/fin'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'COMP:D', 'PF:tonaise', 'ARG', 'SPEC:TO/inf', 'COMP:P', '!COMP:*', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', 'CLASS:TR', '-COMP:N', '-COMP:P', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:V', 'LF:nudge', 'SPEC:ADV', 'LANG:FI'}
tta             {'COMP:D', '-SPEC:N', 'P', 'ARG', '!COMP:*', 'ADV', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:P', '-SPEC:T/fin', 'COMP:n/MA', 'PF:tta', 'adjoinable', '-COMP:N', '-SPEC:FORCE', '-COMP:T', '-COMP:T/fin', '-SPEC:INF', '-VAL', 'PHI:DET:_', '-SPEC:iR', '-COMP:uWH', 'LF:without', '-SPEC:v', 'PHI:PER:_', '-SPEC:Neg/fin', 'SPEC:*', '-COMP:A', '-SPEC:iWH', '-SPEC:V', '-SPEC:C', '-SPEC:C/fin', '-COMP:ADV', 'LANG:FI'}
tries           ['LANG:EN']
try-            {'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:N', 'SPEC:ADV', '!COMP:-ARG', '-SPEC:FORCE', 'SEM:internal', '-VAL', 'V', 'PF:try', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '!COMP:TO/inf', '-COMP:v', '-COMP:V', 'LANG:EN', 'LF:try'}
verifiche       {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', 'PF:verifiche', 'LF:verification', 'LANG:IT', '-COMP:v', '-COMP:A', '-SPEC:V', '-COMP:V', 'COMP:T/prt', 'SPEC:A', 'COMP:R', 'COMP:C', '-SPEC:C/fin'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'-COMP:MA/inf', '-COMP:V', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', 'LF:flow', '-COMP:N', 'CLASS:INTR', '-COMP:D', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', 'PF:virtaa', '!COMP:P', 'SPEC:ADV', 'LANG:FI'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'!COMP:*', 'ARG', 'PF:volu', 'SPEC:TO/inf', 'COMP:P', 'SPEC:P', 'PHI:NUM:_', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:N', 'SPEC:ADV', '-SPEC:FORCE', 'SEM:internal', 'LF:want', '-VAL', 'V', '-SPEC:*', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:V', 'LANG:EN'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'COMP:D', 'ARG', 'SPEC:TO/inf', 'SEM:achievement', 'COMP:P', '!COMP:*', 'SPEC:P', 'PHI:NUM:_', '-SPEC:T/fin', 'PHI:GEN:_', 'CLASS:TR', '-COMP:N', 'SPEC:ADV', '-COMP:P', 'PF:voitta', '-SPEC:FORCE', '-VAL', 'ASP:BOUNDED', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:V', 'LANG:EN', 'LF:win'}
wants           ['LANG:EN']
want-           {'COMP:D', 'PF:want', 'ARG', '!COMP:*', '-SPEC:TO/inf', 'COMP:P', 'PHI:NUM:_', 'SPEC:P', '-SPEC:T/fin', 'PHI:GEN:_', 'CLASS:TR', '-COMP:N', 'SPEC:ADV', '-COMP:P', '-SPEC:FORCE', 'LF:want', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', 'COMP:TO/inf', '-COMP:V', 'LANG:EN'}
what            ['LANG:EN']
what-           {'-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', '-COMP:N', 'SPEC:A', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', 'PF:what', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'COMP:uR', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:*', 'LANG:EN', 'LF:what', 'COMP:R', '-SPEC:C/fin'}
which           {'!COMP:*', 'OP:WH', '-ARG', '-SPEC:P', '-SPEC:T/fin', 'OP', 'PF:which', 'LF:which', 'COMP:N', 'adjoinable', '!PROBE:N', '-COMP:P', '-COMP:D', 'D', '-SPEC:MA/lla', '-COMP:T/fin', '-SPEC:INF', '-COMP:uR', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:C', 'LANG:EN'}
who             ['LANG:EN']
who-            {'-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', 'LF:who', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'COMP:uR', 'PF:who', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:*', 'LANG:EN', 'SPEC:A', 'COMP:R', '-SPEC:C/fin'}
whether         {'Q', 'LF:whether', '!COMP:*', 'OP:WH', '-ARG', 'OP', 'COMP:C/fin', '!PROBE:FIN', '-VAL', 'FIN', '-SPEC:*', 'COMP:T/fin', 'PF:whether', 'FORCE', 'OP:Q', 'LANG:EN'}
yrittaa         ['LANG:FI']
yritta-         {'PF:yritta', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'SPEC:D', 'SPEC:P', 'PHI:NUM:_', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:N', 'SPEC:ADV', '!COMP:-ARG', '-SPEC:FORCE', 'SEM:internal', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', '-COMP:V', 'LANG:EN', '!COMP:A/inf', 'LF:try'}
mina            ['LANG:EN']
mina-           {'-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'LF:I', 'COMP:uR', '-SPEC:INF', 'PF:mina', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-SPEC:C/fin', '-COMP:*', 'SPEC:A', 'COMP:R', 'LANG:FI'}
sina            ['LANG:EN']
sina-           {'-SPEC:N', '-SPEC:ADV', '-SPEC:P', 'LF:you', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'COMP:uR', 'PF:sina', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-SPEC:C/fin', '-COMP:*', 'SPEC:A', 'COMP:R', 'LANG:FI'}
han             ['LANG:EN']
han-            {'-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', 'PF:han', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'LF:s/he', 'COMP:uR', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-SPEC:C/fin', '-COMP:*', 'SPEC:A', 'COMP:R', 'LANG:FI'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', '-COMP:A', 'PF:me', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'LF:we', 'COMP:uR', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-SPEC:C/fin', '-COMP:*', 'SPEC:A', 'COMP:R', 'LANG:FI'}
te              ['LANG:EN']
te-             {'-SPEC:N', '-SPEC:ADV', 'PF:te', '-SPEC:P', 'LF:you', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'COMP:uR', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-SPEC:C/fin', '-COMP:*', 'SPEC:A', 'COMP:R', 'LANG:FI'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', 'PF:he', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'COMP:uR', 'LF:they', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-SPEC:C/fin', '-COMP:*', 'SPEC:A', 'COMP:R', 'LANG:FI'}
se              {'!COMP:*', '-ARG', '-SPEC:P', '-SPEC:T/fin', 'OP', 'LF:the/that', 'COMP:N', 'adjoinable', '-COMP:P', '-COMP:D', 'D', '-SPEC:MA/lla', '-COMP:T/fin', '-SPEC:INF', '-COMP:uR', 'PF:se', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:C', '!PROBE:N', 'LANG:FI'}
sen             {'TAIL:ASP', '!COMP:*', '-ARG', '-SPEC:P', '-SPEC:T/fin', 'OP', 'LF:the/that', 'COMP:N', 'adjoinable', '-COMP:P', '-COMP:D', 'D', '-SPEC:MA/lla', '-COMP:T/fin', '-SPEC:INF', '-COMP:uR', 'TAIL:*POL:NEG', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:C', 'PF:sen', 'TAIL:PHI', '!PROBE:N', 'LANG:FI'}
I               ['LANG:EN']
I-              {'-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'LF:I', 'COMP:uR', 'PF:I', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:*', 'LANG:EN', 'SPEC:A', 'COMP:R', '-SPEC:C/fin'}
you             ['LANG:EN']
you-            {'-SPEC:N', '-SPEC:ADV', 'PF:you', '-SPEC:P', 'LF:you', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'COMP:uR', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:*', 'LANG:EN', 'SPEC:A', 'COMP:R', '-SPEC:C/fin'}
he              ['LANG:EN']
he-             {'-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', 'PF:he', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'COMP:uR', 'LF:he', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:*', 'LANG:EN', 'SPEC:A', 'COMP:R', '-SPEC:C/fin'}
she             ['LANG:EN']
she-            {'-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', 'LF:she', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'PF:she', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'COMP:uR', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:*', 'LANG:EN', 'SPEC:A', 'COMP:R', '-SPEC:C/fin'}
we              ['LANG:EN']
we-             {'-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', '-COMP:A', 'PF:we', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'LF:we', 'COMP:uR', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:*', 'LANG:EN', 'SPEC:A', 'COMP:R', '-SPEC:C/fin'}
you_pl          ['LANG:EN']
you_pl-         {'-COMP:VA/inf', '-SPEC:N', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PF:you_pl', 'PHI', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', 'LF:you_pl', '-COMP:v', '-SPEC:V', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'LANG:EN', 'SPEC:A', 'COMP:R', 'COMP:C', '-SPEC:C/fin'}
they            ['LANG:EN']
they-           {'-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', 'PF:they', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'COMP:uR', 'LF:they', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:*', 'LANG:EN', 'SPEC:A', 'COMP:R', '-SPEC:C/fin'}
it              ['LANG:EN']
it-             {'!COMP:*', '-ARG', '-SPEC:P', '-SPEC:T/fin', 'OP', 'COMP:N', 'adjoinable', '!PROBE:N', '-COMP:P', '-COMP:D', 'D', '-SPEC:MA/lla', '-COMP:T/fin', '-SPEC:INF', '-COMP:uR', 'LF:it/that', '-SPEC:Neg/fin', '-SPEC:V', 'PF:it', '-SPEC:C', 'LANG:EN'}
io              ['LANG:EN']
io-             {'-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PF:io', 'PHI_N', 'LANG:IT', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'LF:I', 'COMP:uR', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:*', 'SPEC:A', 'COMP:R', '-SPEC:C/fin'}
tu              ['LANG:EN']
tu-             {'-SPEC:N', 'PF:tu', '-SPEC:ADV', '-SPEC:P', 'LF:you', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', 'LANG:IT', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'COMP:uR', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:*', 'SPEC:A', 'COMP:R', '-SPEC:C/fin'}
lui             ['LANG:EN']
lui-            {'-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', 'LANG:IT', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'COMP:uR', 'LF:he', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', 'PF:lui', '-COMP:v', '-SPEC:V', '-COMP:*', 'SPEC:A', 'COMP:R', '-SPEC:C/fin'}
lei             ['LANG:EN']
lei-            {'-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', 'LF:she', 'LANG:IT', '-COMP:A', '-COMP:V', 'PF:lei', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'COMP:uR', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:*', 'SPEC:A', 'COMP:R', '-SPEC:C/fin'}
noi             ['LANG:EN']
noi-            {'-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', 'PF:noi', 'LANG:IT', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'LF:we', 'COMP:uR', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:*', 'SPEC:A', 'COMP:R', '-SPEC:C/fin'}
voi             ['LANG:EN']
voi-            {'-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', '-COMP:N', 'PF:voi', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', 'LANG:IT', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'COMP:uR', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', 'LF:you_pl', '-COMP:v', '-SPEC:V', '-COMP:*', 'SPEC:A', 'COMP:R', '-SPEC:C/fin'}
loro            ['LANG:EN']
loro-           {'-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', 'LANG:IT', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'PF:loro', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'COMP:uR', 'LF:they', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:*', 'SPEC:A', 'COMP:R', '-SPEC:C/fin'}
mi              ['LANG:EN']
mi-             {'-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', 'LANG:IT', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', 'LF:me', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'PF:mi(cl)', 'COMP:uR', 'CL', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:*', 'SPEC:A', 'COMP:R', '-SPEC:C/fin'}
la              ['LANG:EN']
la-             {'-SPEC:N', '-SPEC:ADV', 'PF:la(cl)', '-SPEC:P', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', 'LANG:IT', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'COMP:uR', 'CL', 'LF:her', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:*', 'SPEC:A', 'COMP:R', '-SPEC:C/fin'}
lo              ['LANG:EN']
lo-             {'-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', 'PF:lo(cl)', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', 'LANG:IT', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'COMP:uR', 'CL', '-COMP:*', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', 'LF:him', 'SPEC:A', 'COMP:R', '-SPEC:C/fin'}
si              ['LANG:EN']
si-             {'-SPEC:N', '-SPEC:ADV', 'LF:3sg', '-SPEC:P', '-SPEC:T/fin', '-COMP:N', 'CAL:CL', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', 'LANG:IT', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', 'PF:si(cl)', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'COMP:uR', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:*', 'SPEC:A', 'COMP:R', '-SPEC:C/fin'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-SPEC:N', '-SPEC:ADV', '-SPEC:P', '-SPEC:T/fin', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI_N', 'LANG:IT', '-COMP:A', '-COMP:V', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:P', 'COMP:R/D', 'LF:there', 'COMP:uR', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', 'PF:ci', '-COMP:v', '-SPEC:V', '-COMP:*', 'SPEC:A', 'COMP:R', '-SPEC:C/fin'}
[-n]            {'PHI:DET:DEF', 'PHI', 'PHI:NUM:SG', 'PHI:PER:1', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI'}
[-t]            {'PHI:DET:DEF', 'PHI', 'PHI:NUM:SG', 'PHI:PER:2', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI'}
[-V]            {'PHI:PER:3', 'PHI', 'PHI:NUM:SG', 'inflectional', 'LANG:FI'}
[-mme]          {'PHI:DET:DEF', 'PHI', 'PHI:PER:1', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'LANG:FI'}
[-mme]          {'PHI:DET:DEF', 'PHI:PER:1', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'LANG:FI'}
[-tte]          {'PHI:DET:DEF', 'PHI', 'PHI:PER:2', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'LANG:FI'}
[-vat]          {'PHI:PER:3', 'PHI', 'inflectional', 'PHI:NUM:PL', 'LANG:FI'}
[-ni]           {'PHI:DET:DEF', 'PHI', 'PHI:NUM:SG', 'PHI:PER:1', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI'}
[-si]           {'PHI:DET:DEF', 'PHI', 'PHI:NUM:SG', 'PHI:PER:2', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI'}
[-nsa]          {'PHI:PER:3', 'PHI', 'PHI:NUM:SG', 'inflectional', 'LANG:FI'}
[-an]           {'PHI:PER:3', 'PHI:DET:DET', 'PHI', 'PHI:NUM:SG', 'inflectional', 'LANG:FI'}
[-nne]          {'PHI:DET:DEF', 'PHI:PER:2', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'LANG:FI'}
[-s]            {'PHI:PER:3', 'PHI', 'PHI:NUM:SG', 'PHI:GEN:F', 'PHI:GEN:M', 'inflectional', 'LANG:EN'}
[-0]            {'PHI:DET:DEF', 'PHI', 'PHI:NUM:SG', 'PHI:PER:2', 'PHI:NUM:PL', 'PHI:PER:3', 'LANG:EN', 'PHI:PER:1', 'PHI:GEN:N', 'inflectional'}
[-o]            {'PHI:DET:DEF', 'LANG:IT', 'PHI', 'PHI:NUM:SG', 'PHI:PER:1', 'inflectional', 'PHI:HUM:HUM'}
[-i]            {'PHI:DET:DEF', 'LANG:IT', 'PHI', 'PHI:NUM:SG', 'PHI:PER:2', 'inflectional', 'PHI:HUM:HUM'}
[-a]            {'PHI:DET:DEF', 'LANG:IT', 'PHI:PER:3', 'PHI', 'PHI:NUM:SG', 'inflectional'}
[-e]            {'PHI:DET:DEF', 'LANG:IT', 'PHI:PER:3', 'PHI', 'PHI:NUM:SG', 'inflectional'}
[-iamo]         {'PHI:DET:DEF', 'LANG:IT', 'PHI', 'PHI:PER:1', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:PL'}
[-te]           {'PHI:DET:DEF', 'LANG:IT', 'PHI', 'PHI:PER:2', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:PL'}
[-no]           {'PHI:DET:DEF', 'LANG:IT', 'PHI:PER:3', 'PHI', 'inflectional', 'PHI:NUM:PL'}
[-nom]          {'NOM', 'inflectional', 'adjoinable', 'LANG:EN', 'TAIL:FIN,ARG,VAL'}
[-par]          {'adjoinable', 'TAIL:ARG,-VAL', 'PAR', 'inflectional', 'LANG:FI'}
[-gen]          {'inflectional', 'GEN', '-float', 'LANG:EN', 'TAIL:INF,ARG'}
gen             {'inflectional', 'GEN', '-float', 'LANG:EN', 'TAIL:INF,ARG'}
[-n_acc]        {'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'n-ACC', 'adjoinable', 'TAIL:PHI', 'inflectional', 'LANG:FI'}
[-t_acc]        {'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 't-ACC', 'adjoinable', 'inflectional', 'LANG:FI'}
[-0_acc]        {'TAIL:*POL:NEG', '0_ACC', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable', 'inflectional', 'TAIL:*PHI', 'LANG:FI'}
asp             {'LANG:EN', 'ASP:BOUNDED', 'inflectional'}
a'              {'LF:A', 'PF:a', 'a', 'LANG:X'}
b'              {'LF:B', 'LANG:X', 'b', 'PF:b'}
b''             {'-COMP:c', 'LANG:EN', 'b', 'PF:b', 'LF:B'}
c''             {'SPEC:a', 'PF:c', 'LANG:EN', 'LF:C', 'c'}
c'              {'LANG:X', 'LF:C', 'PF:c', 'c'}
d'              {'d', 'PF:d', 'LF:D', 'LANG:'}
a''             ['LANG:EN']
x'              {'x', 'PF:x', 'LANG:X', 'LF:X'}
y'              {'y', 'PF:y', 'LANG:X', 'LF:Y'}
z'              {'z', 'PF:x', 'LANG:X', 'LF:Z'}
John'           {'LF:John', 'PF:John', "N'", 'LANG:X'}
admires'        {'PF:admires', 'LF:admires', 'LANG:X', "V'"}
admires''       {'LF:admires', 'PF:admires', 'ARG', 'SPEC:TO/inf', 'COMP:P', 'SPEC:D', 'SPEC:P', 'PHI:NUM:_', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', '-VAL', 'V', 'PHI:DET:_', 'ASP', 'PHI:PER:_', '-COMP:v', 'LANG:EN', '-COMP:V', 'SPEC:ADV'}
Mary'           {'PF:Mary', "N'", 'LF:mary', 'LANG:X'}
T/fin           {'PF:T', '-SPEC:N', 'ARG', '!COMP:*', 'SPEC:TO/inf', '-SPEC:TO/inf', '!SPEC:*', 'SPEC:D', 'T', 'PHI:NUM:_', '-SPEC:T/fin', 'T/fin', 'PHI:GEN:_', 'COMP:v', 'LF:T', '-COMP:T/fin', 'COMP:V', '!PROBE:V', 'SPEC:FORCE', 'FIN', '-SPEC:Neg', 'PHI:DET:_', 'PHI:PER:_', 'VAL', '-COMP:INF', '-SPEC:v', 'SPEC:C/fin', '-SPEC:V', '-SPEC:C', 'SPEC:*', 'COMP:T/prt', 'LANG:EN'}
v               {'COMP:V', 'PF:v', '-SPEC:N', '-VAL', '!PROBE:V', 'ARG', '!COMP:*', 'ASP', 'SPEC:D', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:DET:_', 'v', 'LF:v', 'PHI:GEN:_', 'LANG:EN'}
C/fin           {'-COMP:T/prt', '-COMP:C/fin', '-SPEC:N', '!COMP:*', '-ARG', '-SPEC:T/fin', 'COMP:Neg/fin', 'PF:C', '!PROBE:FIN', 'FIN', 'COMP:T/fin', 'C/fin', 'VAL', 'SPEC:*', '-SPEC:C/fin', 'LANG:EN', 'C', 'LF:C/fin'}
T               {'PF:T', '-SPEC:N', 'ARG', '!COMP:*', 'PHI:NUM:_', 'SPEC:D', 'T', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:v', 'LF:T', '-SPEC:FORCE', 'COMP:V', '!PROBE:V', 'FIN', 'PHI:DET:_', '-COMP:NEG', 'PHI:PER:_', 'VAL', '-SPEC:V', 'SPEC:*', 'COMP:T/prt', 'LANG:EN'}
T/prt           {'COMP:D', '-SPEC:N', 'ARG', '!COMP:*', 'PHI:NUM:_', 'SPEC:D', 'T', '-SPEC:T/fin', 'PF:T/prt', 'PHI:GEN:_', 'COMP:v', '-SPEC:FORCE', 'COMP:V', '!PROBE:V', 'FIN', 'PHI:DET:_', '-COMP:NEG', 'PHI:PER:_', 'VAL', 'T/prt', 'SPEC:*', '-SPEC:V', '-SPEC:C/fin', 'COMP:T/prt', 'LANG:EN', 'LF:T/prt'}
a0              {'-SPEC:D', 'COMP:0', 'A', '-SPEC:A', 'LF:A', 'PF:A', 'TAIL:D', 'LANG:EN', '-adjoinable'}
n               {'-SPEC:N', 'ARG', '!COMP:*', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:P', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:N', 'COMP:v', 'PF:n', '-SPEC:FORCE', '-COMP:WH', 'n', 'SPEC:*', '-COMP:A', '-COMP:V', '!SPEC:D', 'COMP:T/prt', 'COMP:C', '-COMP:AUX', '-COMP:VA/inf', '-COMP:C/fin', 'COMP:D/rel', 'COMP:0', 'INF', 'COMP:P', 'COMP:R/D', '!SPEC:*', 'COMP:uR', '-SPEC:INF', 'COMP:V', '-SPEC:R', 'PHI:DET:_', '-SPEC:uWH', 'N', 'PHI:PER:_', 'VAL', '-COMP:v', '-SPEC:V', 'LF:n', 'LANG:EN', 'SPEC:A', 'COMP:R', '-SPEC:C/fin'}
impass          {'COMP:V', '-SPEC:N', '-VAL', '!PROBE:V', 'ARG', '!COMP:*', 'ASP', 'PHI:NUM:_', 'SPEC:D', 'PHI:PER:_', 'PHI:DET:_', 'LF:impass', 'v', 'PHI:GEN:_', 'PF:impass', 'LANG:EN'}
cau             {'COMP:V', '-SPEC:N', '-VAL', '!PROBE:V', 'ARG', '!COMP:*', 'ASP', 'PHI:NUM:_', 'SPEC:D', 'PHI:PER:_', 'PHI:DET:_', 'LANG:EN', 'v', 'PHI:GEN:_', 'PF:Cau', 'LF:v/Cause'}
INF             {'-COMP:T/fin', 'PF:INF', 'COMP:V', '-COMP:C/fin', 'INF', '!COMP:*', '-COMP:FORCE', '-SPEC:T/fin', 'LF:INF', '-SPEC:V', 'COMP:v', 'LANG:EN'}
prtcpl          {'COMP:D', '-SPEC:N', '-COMP:C/fin', 'INF', 'ARG', '!COMP:*', 'PHI:NUM:_', 'SPEC:D', 'T', '-COMP:FORCE', '-SPEC:T/fin', 'PF:T/prt', 'PHI:GEN:_', 'COMP:v', '-SPEC:FORCE', '-COMP:T/fin', 'COMP:V', '!PROBE:V', 'FIN', 'PHI:DET:_', '-COMP:NEG', 'PHI:PER:_', 'VAL', 'T/prt', 'SPEC:*', '-SPEC:V', '-SPEC:C/fin', 'COMP:T/prt', 'LANG:EN', 'LF:T/prt'}
TO/inf          {'-COMP:C/fin', 'INF', '!COMP:*', '?ARG', '-COMP:FORCE', '-SPEC:T/fin', 'adjoinable', 'COMP:v', '!COMP:V', '-COMP:T/fin', 'COMP:V', 'PF:TO/inf', '-VAL', 'LF:TO/inf', '-SPEC:v', '-SPEC:V', 'LANG:EN', 'TO/inf'}
A/inf           {'A/inf', '-COMP:C/fin', 'INF', '!COMP:*', '?ARG', '-COMP:FORCE', 'LF:A/inf', '-SPEC:T/fin', '?VAL', 'COMP:v', '-COMP:T/fin', 'PF:A/inf', 'COMP:V', '-SPEC:Neg/fin', 'SPEC:*', '-SPEC:V', 'LANG:EN'}
ARE/inf         {'-COMP:C/fin', 'INF', '!COMP:*', '?ARG', '-COMP:FORCE', 'LF:ARE/inf', 'PF:are', '-SPEC:T/fin', 'ARE/inf', 'COMP:v', '-adjoinable', '-COMP:T/fin', 'COMP:V', 'VAL', 'SPEC:*', '-SPEC:V', 'LANG:EN'}
ESSA/inf        {'ESSA/inf', '-SPEC:N', 'INF', '-COMP:C/fin', '?ARG', 'ADV', '!COMP:*', '-COMP:FORCE', '-SPEC:T/fin', '?VAL', 'adjoinable', 'COMP:v', '-SPEC:FORCE', '-COMP:T/fin', 'COMP:V', 'LF:while', 'SPEC:*', 'TAIL:T', '-SPEC:Neg/fin', '-SPEC:V', 'PF:essa', 'LANG:EN'}
TUA/inf         {'-SPEC:N', '-COMP:C/fin', 'INF', 'ARG', '!SPEC:*', 'TUA/inf', 'ADV', '!COMP:*', '-COMP:FORCE', 'PHI:NUM:_', '-SPEC:T/fin', 'PHI:GEN:_', 'adjoinable', 'COMP:v', 'LF:after', 'PF:tua', '-SPEC:FORCE', '-COMP:T/fin', 'COMP:V', 'PHI:DET:_', 'PHI:PER:_', 'VAL', '-SPEC:Neg/fin', 'TAIL:T', '-SPEC:V', 'SPEC:*', 'LANG:EN'}
VA/inf          {'-SPEC:N', '-COMP:C/fin', 'INF', 'ARG', '!SPEC:*', '!COMP:*', 'PF:vAn', 'PHI:NUM:_', '-COMP:FORCE', 'LF:VA', 'VA/inf', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:v', '-COMP:T/fin', 'COMP:V', 'PHI:DET:_', 'PHI:PER:_', 'VAL', '-SPEC:V', 'SPEC:*', 'LANG:EN'}
MA/ssa          {'-SPEC:N', 'MA/inf', 'ARG', 'ADV', 'PHI:NUM:_', '-SPEC:T/fin', 'PF:massa', 'PHI:GEN:_', 'adjoinable', 'COMP:v', '-SPEC:FORCE', 'LF:in_doing', 'COMP:V', 'MA/ssa', '-VAL', '-SPEC:*', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:Neg/fin', 'TAIL:V', 'LANG:EN'}
MA/tta          {'-VAL', '-SPEC:N', 'PF:matta', 'MA/inf', 'ARG', 'ADV', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:T/fin', '-SPEC:Neg/fin', 'TAIL:T', 'PHI:GEN:_', 'adjoinable', 'LANG:EN', 'LF:without_doing', '-SPEC:FORCE'}
MA/lla          {'-SPEC:N', 'ARG', 'PHI:NUM:_', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:v', '-SPEC:FORCE', 'MA/inf', 'ADV', 'adjoinable', 'COMP:V', '-VAL', 'PHI:DET:_', 'LF:by_doing', 'PHI:PER:_', 'PF:malla', 'TAIL:T', '-SPEC:Neg/fin', 'LANG:EN'}
MA/inf          {'-SPEC:N', 'ARG', 'PHI:NUM:_', '-SPEC:T/fin', 'PHI:GEN:_', 'COMP:v', '-SPEC:FORCE', 'LF:to_do', 'MA/inf', 'ADV', 'adjoinable', 'COMP:V', '-VAL', 'PHI:DET:_', 'PHI:PER:_', '-SPEC:Neg/fin', 'TAIL:V', 'LANG:EN', 'PF:maan'}
E/inf           {'PF:en', 'LF:by', '-VAL', '-SPEC:N', 'ADV', '-ARG', '-SPEC:T/fin', '-SPEC:Neg/fin', 'TAIL:T', 'SPEC:*', 'adjoinable', '-SPEC:FORCE', 'LANG:FI'}
BE-             {'!COMP:*', 'SPEC:TO/inf', 'COMP:P', '-ARG', 'PF:BE', 'LF:BE', 'SPEC:D', 'SPEC:P', '-SPEC:T/fin', '-COMP:N', 'COPULA', 'SPEC:ADV', '-SPEC:FORCE', '-COMP:T/fin', '-VAL', 'V', 'ASP', '-COMP:v', '-COMP:V', 'COMP:T/prt', 'LANG:EN'}
D               {'!COMP:*', 'LF:D', '-ARG', '-SPEC:P', 'PF:D', '-SPEC:T/fin', 'OP', 'COMP:N', 'adjoinable', '!PROBE:N', '-COMP:P', '-COMP:D', 'D', '-SPEC:MA/lla', '-COMP:T/fin', '-SPEC:INF', '-COMP:uR', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:C', 'LANG:EN'}
D/rel           {'-COMP:C/fin', '!COMP:*', 'OP:_', '-ARG', '-SPEC:P', '-SPEC:T/fin', 'OP', 'adjoinable', 'COMP:N', '!PROBE:N', 'PF:D/rel', '-COMP:D', 'D', '-SPEC:MA/lla', '-COMP:T/fin', '-COMP:uR', '-SPEC:INF', 'LF:D/rel', 'OP:REL', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:C', 'inflectional', 'D/rel', 'LANG:EN'}
P               {'COMP:D', '-SPEC:N', 'P', 'ARG', '!COMP:*', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:P', '-SPEC:T/fin', 'PHI:GEN:_', 'adjoinable', '-COMP:N', '-float', '-SPEC:FORCE', '-COMP:T', '-COMP:T/fin', '-SPEC:INF', '-VAL', '-SPEC:*', 'PHI:DET:_', '-SPEC:iR', 'PF:P', '-COMP:uWH', '-SPEC:v', 'PHI:PER:_', 'LF:P', '-SPEC:Neg/fin', '-SPEC:V', '-COMP:A', '-SPEC:iWH', '-SPEC:C', 'LANG:EN', '-COMP:ADV', '-SPEC:C/fin'}
pro             ['LANG:EN']
pro-            {'-COMP:VA/inf', '-SPEC:N', '-COMP:V', '-COMP:C/fin', 'COMP:D/rel', '-COMP:AUX', '-SPEC:ADV', 'COMP:P', 'COMP:R/D', 'PF:(pro)', '-SPEC:P', '-SPEC:T/fin', 'COMP:uR', '-COMP:N', '-COMP:WH', '-SPEC:FORCE', 'PHI', '-SPEC:INF', '-SPEC:R', '-SPEC:uWH', 'N', '-COMP:v', '-SPEC:V', '-COMP:A', 'LF:pro', 'COMP:T/prt', 'LANG:EN', 'SPEC:A', 'COMP:R', 'COMP:C', '-SPEC:C/fin'}
cl              {'RIGHT:PRG', 'RIGHT:ARE/inf', 'inflectional', 'CL', 'LANG:EN', 'LEFT:T/fin', 'LEFT:D,CL'}
inc             {'inflectional', 'LANG:EN', 'INCORPORATED'}
sg              {'inflectional', 'PHI:NUM:SG', 'LANG:EN'}
pl              {'inflectional', 'LANG:EN', 'PHI:NUM:PL'}
1p              {'inflectional', 'PHI:PER:1', 'LANG:EN'}
2p              {'PHI:PER:2', 'inflectional', 'LANG:EN'}
3p              {'PHI:PER:3', 'inflectional', 'LANG:EN'}
def             {'PHI:DET:DEF', 'inflectional', 'LANG:EN'}
indef           {'inflectional', 'PHI:DET:INDEF', 'LANG:EN'}
hum             {'inflectional', 'PHI:HUM:HUM', 'LANG:EN'}
nonhum          {'inflectional', 'PHI:HUM:NONHUM', 'LANG:EN'}
m               {'inflectional', 'LANG:EN', 'PHI:GEN:M'}
f               {'inflectional', 'PHI:GEN:F', 'LANG:EN'}
nom             {'inflectional', 'NOM', 'LANG:EN', 'TAIL:FIN,!COMP:*,VAL'}
acc             {'ACC', 'inflectional', 'TAIL:v', 'LANG:EN'}
dat             {'inflectional', 'DAT', 'TAIL:v', 'LANG:EN'}
uC/op           {'inflectional', 'uC/op', 'LANG:EN'}
wh              {'OP:WH', 'inflectional', 'OP:_', 'LANG:EN'}
wh_             {'OP', 'inflectional', 'FORCE:OP:WH', 'LANG:EN', 'OP:_'}
top             {'inflectional', 'OP:TOP', 'LANG:EN'}
foc             {'OP:FOC', 'inflectional', 'LANG:EN'}
C/op            {'inflectional', 'OP:C/OP', 'LANG:EN'}
Q               {'OP:Q', 'OP', 'LANG:EN', 'inflectional', 'OP:WH'}
