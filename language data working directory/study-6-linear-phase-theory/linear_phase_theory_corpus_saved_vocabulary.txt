ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'LANG:IT', '-SPEC:FORCE', '-COMP:uWH', '-SPEC:iWH', 'COMP:ARE/inf', '-SPEC:P', '!COMP:*', '-SPEC:Neg/fin', 'PF:a', '-COMP:ADV', 'LF:to', 'P', '-COMP:N', 'adjoinable', '-SPEC:iR', '-SPEC:C', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:*', '-ARG', '-SPEC:N', '-VAL', '-SPEC:v', '-SPEC:V', 'COMP:D'}
a_D             {'-COMP:uR', '-SPEC:Neg/fin', '-SPEC:P', '!COMP:*', 'LANG:EN', '-SPEC:D', 'PF:D', 'adjoinable', '-SPEC:C', '-COMP:T/fin', '-SPEC:MA/lla', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', '-ARG', '-SPEC:N', '-SPEC:V', '!PROBE:N', 'OP', 'D', 'COMP:N', 'LF:D'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-COMP:v', '-COMP:Neg', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LF:admire', 'V', '-SPEC:Neg', '!COMP:*', 'LANG:EN', '-COMP:V', 'PHI:PER:_', 'PF:admire', 'COMP:P', '-COMP:N', 'CLASS:TR', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', '-COMP:P', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'PHI:GEN:_', 'COMP:D'}
admire*         ['LANG:EN']
T/fin*          {'CAT:T/fin', '-VAL', "PF:T/fin'", 'LANG:EN', 'NO_DET', 'NO_NUMBER', 'LF:T', '!SPEC:*'}
v*              {'NO_NUMBER', 'LANG:EN', 'NO_DET', 'LF:v', 'CAT:v', 'PF:v', '-VAL'}
admire**        ['LANG:EN']
T/fin**         {'NO_PERSON', 'PHI:PER:3', 'CAT:T/fin', '-VAL', "PF:T/fin''", 'LANG:EN', 'NO_DET', 'NO_NUMBER', 'LF:T', '!SPEC:*'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'-COMP:v', 'ASP', 'LANG:IT', '-SPEC:FORCE', 'PHI:NUM:_', 'LF:admire', 'V', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'PF:adora', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'PHI:GEN:_', 'COMP:D'}
antaa           ['LANG:FI']
anta-           {'ASP:BOUNDED', '-COMP:v', 'ASP', '-SPEC:FORCE', '+SEM:directional', 'PHI:NUM:_', 'LANG:FI', 'V', '!COMP:*', '-COMP:V', 'PF:antaa', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'CLASS:DITR', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'SPEC:D', 'LF:give', 'COMP:D', '-COMP:FIN'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'-COMP:v', 'LF:ask', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'V', 'LANG:EN', '-COMP:V', 'PHI:PER:_', 'PF:ask', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'SPEC:D', 'SEM:internal', 'PHI:GEN:_', 'COMP:D'}
ask-            {'-COMP:v', 'LF:ask', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'V', 'LANG:EN', '-COMP:V', 'PHI:PER:_', 'PF:ask', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'SPEC:D', 'SEM:internal', 'PHI:GEN:_', 'COMP:D'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', 'PF:avain', 'LANG:FI', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SEM:directional', '-SPEC:V', 'LF:key', '-COMP:WH', '-SPEC:R', 'COMP:R'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', 'LANG:FI', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', 'PF:auto', '-SEM:directional', 'LF:car', '-SPEC:V', '-COMP:WH', '-SPEC:R', 'COMP:R'}
city            {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:P', 'LF:city', 'LANG:EN', '-COMP:A', '-COMP:C/fin', '-COMP:V', '-COMP:AUX', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'PF:city', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SPEC:V', '-COMP:WH', '-SPEC:R', 'COMP:R'}
che             ['LANG:IT']
che-            {'-COMP:v', 'COMP:R/D', 'LANG:IT', '-SPEC:FORCE', '-COMP:*', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', 'PF:che', '-SPEC:ADV', 'LF:who', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SPEC:V', 'PHI_N', '-COMP:WH', '-SPEC:R', 'COMP:R'}
chiamato        ['LANG:IT']
chiamata-       {'-COMP:v', 'ASP', 'LANG:IT', 'PF:chiamato', '-SPEC:FORCE', 'PHI:NUM:_', 'V', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'SPEC:P', 'LF:called', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'PHI:GEN:_'}
danno           {'-COMP:v', 'COMP:R/D', 'LANG:IT', '-SPEC:FORCE', 'LF:damage', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', 'PF:danno', '-SPEC:V', '-COMP:WH', '-SPEC:R', 'COMP:R'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'-COMP:v', 'ASP', 'LANG:IT', '-SPEC:FORCE', 'PHI:NUM:_', 'V', 'COMP:ARE/inf', 'PF:detest', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:detest', '-VAL', 'SEM:internal', 'PHI:GEN:_', 'COMP:D'}
devono          ['LANG:EN']
deva-           {'PF:deva', '-COMP:v', 'LANG:IT', '-SPEC:FORCE', 'PHI:NUM:_', 'V', 'COMP:ARE/inf', '-COMP:V', 'PHI:PER:_', '-ASP', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'SPEC:D', 'SEM:internal', 'PHI:GEN:_', 'LF:must'}
di              {'-SPEC:FORCE', 'PHI:NUM:_', '-COMP:uWH', 'LANG:FI', '-SPEC:iWH', '-SPEC:Neg/fin', '-SPEC:P', '!COMP:*', 'PF:di', '-COMP:ADV', 'PHI:PER:_', 'P', '-COMP:N', '-SPEC:iR', '-SPEC:C', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:C/fin', 'LF:of', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:N', 'ARG', 'SPEC:*', '-adjoinable', 'PHI:DET:_', '-VAL', '-SPEC:v', '-SPEC:V', 'COMP:D'}
does            {'COMP:V', 'LF:does', 'PHI:PER:3', '-SPEC:FORCE', 'PHI:NUM:_', 'COMP:v', 'PHI:NUM:SG', '!COMP:*', 'PHI:GEN:F', 'PF:does', 'LANG:EN', '-SPEC:TO/inf', 'PHI:GEN:M', 'FIN', 'PHI:PER:_', 'COMP:T/prt', '-COMP:T/fin', '!PROBE:V', '-SPEC:C/fin', '!SPEC:*', '-SPEC:T/fin', '-SPEC:N', 'ARG', 'SPEC:*', 'SPEC:TO/inf', 'PHI:DET:_', '-SPEC:v', '-SPEC:V', 'COMP:Neg', 'SPEC:D', 'T', 'T/fin', '-COMP:INF', 'VAL', 'PHI:GEN:_', 'COMP:D'}
does_C          ['LANG:EN']
does-           {'COMP:V', 'LF:does', 'PHI:PER:3', '-SPEC:FORCE', 'PHI:NUM:_', 'COMP:v', 'PHI:NUM:SG', '!COMP:*', 'PHI:GEN:F', 'PF:does', 'LANG:EN', '-SPEC:TO/inf', 'PHI:GEN:M', 'FIN', 'PHI:PER:_', 'COMP:T/prt', '-COMP:T/fin', '!PROBE:V', '-SPEC:C/fin', '!SPEC:*', '-SPEC:T/fin', '-SPEC:N', 'ARG', 'SPEC:*', 'SPEC:TO/inf', 'PHI:DET:_', '-SPEC:v', '-SPEC:V', 'COMP:Neg', 'SPEC:D', 'T', 'T/fin', '-COMP:INF', 'VAL', 'PHI:GEN:_', 'COMP:D'}
dorme           ['LANG:IT']
dorme-          {'-COMP:v', 'ASP', '-SPEC:FORCE', '!SPEC:D', 'PHI:NUM:_', 'V', 'LANG:EN', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'LF:sleep', 'PHI:GEN:_', 'PF:dorme'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'PHI:NUM:_', 'LANG:FI', '!COMP:*', 'POL:NEG', 'Neg/fin', 'FIN', 'PHI:PER:_', 'LF:neg', 'COMP:T/prt', '!SPEC:*', '-SPEC:T/fin', 'ARG', 'SPEC:*', 'PHI:DET:_', 'PF:ei', '%SPEC:INF', 'VAL', 'SEM:internal', '!COMP:T', 'NEG', '-SPEC:T'}
e-              {'PHI:NUM:_', 'LANG:FI', '!COMP:*', 'POL:NEG', 'Neg/fin', 'FIN', 'PHI:PER:_', 'LF:neg', 'COMP:T/prt', '!SPEC:*', '-SPEC:T/fin', 'ARG', 'SPEC:*', 'PHI:DET:_', 'PF:ei', '%SPEC:INF', 'VAL', 'SEM:internal', '!COMP:T', 'NEG', '-SPEC:T'}
elaa            ['LANG:FI']
ela-            {'-COMP:v', 'CLASS:INTR', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:D', 'PF:elaa', 'SPEC:ADV', 'ARG', 'LF:live', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'SPEC:D'}
etsii           ['LANG:FI']
etsi-           {'-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '!COMP:D', '-COMP:V', 'LF:search', 'PHI:PER:_', 'PF:etsi', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'COMP:D'}
etta            {'COMP:T/fin', '-ARG', '-SPEC:*', 'LANG:FI', '!COMP:*', '-VAL', 'FIN', 'FORCE', '!PROBE:T/fin', 'LF:that', 'COMP:C/fin', 'PF:etta'}
flow'           {'-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'V', 'PF:flow', 'LANG:EN', '-COMP:V', 'PHI:PER:_', 'LF:flow', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'SPEC:D', 'PHI:GEN:_'}
from            {'-SPEC:FORCE', 'PHI:NUM:_', '-COMP:uWH', '-SPEC:iWH', '-SPEC:Neg/fin', '-SPEC:P', '!COMP:*', 'LANG:EN', '-COMP:ADV', 'PHI:PER:_', 'P', '-float', '-COMP:N', 'LF:from', 'adjoinable', '-SPEC:iR', '-SPEC:ADV', '-COMP:T/fin', 'PF:from', '-SPEC:C', 'TAIL:V,+SEM:directional', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:N', '-SPEC:*', '-SPEC:INF', 'ARG', 'PHI:DET:_', '-VAL', '-SPEC:v', '-SPEC:V', 'PHI:GEN:_', 'COMP:D'}
gave            ['LANG:EN']
give-           {'PF:give', '-COMP:v', 'ASP', '-SPEC:FORCE', '+SEM:directional', 'PHI:NUM:_', 'V', '!COMP:*', 'LANG:EN', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'CLASS:DITR', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'SPEC:D', 'LF:give', 'PHI:GEN:_', 'COMP:D', '-COMP:FIN'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-COMP:v', 'COMP:R/D', 'LANG:IT', '-SPEC:FORCE', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', 'LF:Giuseppe', '-SPEC:INF', 'N', 'PF:Giuseppe', '-SPEC:N', 'COMP:uR', '-COMP:D', '-SEM:directional', '-SPEC:V', '-COMP:WH', '-SPEC:R', 'COMP:R'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'ASP:BOUNDED', '-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '!COMP:*', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'CLASS:TR', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'LF:want', '-SPEC:*', 'SPEC:ADV', 'ARG', '-COMP:P', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'PF:haluaa', 'COMP:A/inf', 'SEM:internal', 'COMP:D'}
hairitsee       ['LANG:FI']
hairitse-       {'-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'PF:hairitsee', 'LANG:FI', 'V', '!COMP:D', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'LF:disturb', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'SPEC:D', '-COMP:FIN'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'-COMP:v', 'LF:have', 'LANG:IT', '-SPEC:FORCE', 'PHI:NUM:_', 'V', '-COMP:V', 'PHI:PER:_', '-ASP', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:*', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'SPEC:D', 'SEM:internal', 'PHI:GEN:_', 'PF:ha', 'COMP:T'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'-COMP:v', 'CLASS:INTR', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '-COMP:V', 'PHI:PER:_', 'LF:disappear', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:D', 'SPEC:ADV', 'ARG', 'PF:havia', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'SPEC:D'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LF:admire', 'V', 'LANG:FI', '!COMP:D', '!COMP:*', '-COMP:V', 'PHI:PER:_', 'PF:ihaile-', 'COMP:P', '-COMP:N', 'CLASS:TR', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', '-COMP:P', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'COMP:D', '-COMP:FIN'}
il              {'LANG:IT', '-COMP:uR', '-SPEC:Neg/fin', '-SPEC:P', '!COMP:*', '-SPEC:D', 'LF:the', 'PF:il', 'adjoinable', '-SPEC:C', '-COMP:T/fin', '-SPEC:MA/lla', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', '-ARG', '-SPEC:N', '-SPEC:V', '!PROBE:N', 'OP', 'COMP:N', 'D'}
i               {'LANG:IT', '-COMP:uR', '-SPEC:Neg/fin', '-SPEC:P', '!COMP:*', '-SPEC:D', 'LF:the', 'PF:il', 'adjoinable', '-SPEC:C', '-COMP:T/fin', '-SPEC:MA/lla', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', '-ARG', '-SPEC:N', '-SPEC:V', '!PROBE:N', 'OP', 'COMP:N', 'D'}
in              {'LANG:IT', '-SPEC:FORCE', '-COMP:uWH', 'PHI:NUM:_', '-SPEC:iWH', '-SPEC:Neg/fin', '-SPEC:P', '!COMP:*', '-COMP:ADV', 'PHI:PER:_', 'P', '-COMP:N', 'adjoinable', '-SPEC:iR', '-SPEC:C', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:C/fin', 'LF:in', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:N', 'ARG', 'PHI:DET:_', '-VAL', '-SPEC:v', '-SPEC:V', 'PF:in', 'PHI:GEN:_', 'COMP:D'}
infermieri      {'-COMP:v', 'COMP:R/D', 'LANG:IT', '-SPEC:FORCE', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', 'PF:infermieri', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', 'LF:nurses', '-SPEC:V', '-COMP:WH', '-SPEC:R', 'COMP:R'}
is              ['LANG:EN']
be-             {'-COMP:v', 'PF:be', 'ASP', '-SPEC:FORCE', 'V', 'LF:be', '!COMP:*', 'LANG:EN', '-COMP:V', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', '-ARG', 'COPULA', 'SPEC:ADV', 'SPEC:TO/inf', '-VAL', 'SPEC:D', '-COMP:TO/inf'}
istuuko         ['LANG:FI']
istuu-          {'-COMP:v', 'CLASS:INTR', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', 'PF:istuu', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:D', 'SPEC:ADV', 'LF:sit', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'SPEC:D'}
John            ['LANG:EN']
John-           {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:P', '-COMP:A', 'LF:John', 'LANG:EN', '-COMP:C/fin', '-COMP:V', 'PF:John', '-COMP:AUX', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-adjoinable', '-SEM:directional', '-SPEC:V', '-COMP:WH', '-SPEC:R', 'COMP:R'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', 'LANG:FI', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', 'PF:Jukka', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', 'COMP:R', '-SEM:directional', '-SPEC:V', '-COMP:WH', '-SPEC:R', 'LF:Jukka'}
juosten         ['LANG:FI']
juokse-         {'-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'SPEC:P', 'PF:juokse-', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'LF:run'}
istuu           ['LANG:FI']
istu-           {'-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', 'PF:istuu', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'LF:sit', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL'}
kaksi           {'NUM', 'PHI:NUM:_', 'ARG', 'LANG:FI', 'PHI:NUM:SG', 'SPEC:*', 'PHI:DET:_', '-VAL', 'PHI:PER:_', 'TAIL:ARG,VAL,FIN', 'COMP:N', 'PF:kaksi', 'LF:two', 'COMP:n'}
kaksi           {'NUM', 'SPEC:*', 'LANG:EN', 'PF:kaksi', 'TAIL:ARG,ASP:BOUNDED', 'COMP:N', 'TAIL:*POL:NEG', 'LF:two', 'COMP:n'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'NUM', 'LANG:FI', 'SPEC:*', 'COMP:N', 'PF:kaksi', 'LF:two', 'COMP:n'}
kaupunkia       ['LANG:EN']
kaupunki        {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', 'LANG:FI', '-SPEC:P', 'LF:city', '-COMP:A', '-COMP:V', '-COMP:C/fin', '-COMP:AUX', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', 'PF:kaupunki', '-SPEC:INF', 'N', '-SPEC:N', 'COMP:uR', '-COMP:D', '-COMP:P', '-SPEC:V', '-COMP:WH', '-SPEC:R', 'COMP:R'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'-COMP:v', '!COMP:A/inf', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'PF:kaske', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'LF:order', 'SEM:external'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-COMP:v', 'COMP:R/D', 'LF:watch', '-SPEC:FORCE', 'LANG:FI', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SPEC:V', 'PF:kello', '-COMP:WH', '-SPEC:R', 'COMP:R'}
kello0-         {'SPEC:D', 'LF:watch', 'LANG:FI', '2SPEC', 'PF:kello', '0'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', 'PF:key', '-SPEC:P', '-COMP:A', 'LANG:EN', '-COMP:V', '-COMP:C/fin', '-COMP:AUX', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SPEC:V', 'LF:key', '-COMP:WH', '-SPEC:R', 'COMP:R'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', 'LANG:FI', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', 'LF:book', '-SEM:directional', '-SPEC:V', 'PF:kirja', '-COMP:WH', '-SPEC:R', 'COMP:R'}
kohti           {'-SPEC:FORCE', 'PHI:NUM:_', 'TAIL:V', 'LANG:FI', 'LF:towards', '-SPEC:iWH', '-SPEC:P', '!COMP:*', '-COMP:uWH', '-SPEC:Neg/fin', '-COMP:ADV', 'PHI:PER:_', 'P', '-COMP:N', 'adjoinable', '-SPEC:iR', '-SPEC:C', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:N', 'ARG', 'SPEC:*', 'PHI:DET:_', '-VAL', '-SPEC:v', '-SPEC:V', 'PF:kohti', 'COMP:D'}
koko            {'-COMP:uR', 'LANG:FI', '-SPEC:Neg/fin', '-SPEC:P', '!COMP:*', '-SPEC:D', 'TAIL:T', 'adjoinable', '-SPEC:C', '-COMP:T/fin', 'LF:all', '-SPEC:MA/lla', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', '-ARG', '-SPEC:N', 'PF:koko', '-SPEC:V', '!PROBE:N', 'OP', 'COMP:N', 'D'}
kuka            ['LANG:FI']
kuka-           {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', 'LANG:FI', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', 'LF:who', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'PHI', 'COMP:uR', '-SPEC:V', 'PF:kuka', '-COMP:WH', '-SPEC:R', 'COMP:R'}
kuorsaa-        {'-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '-COMP:V', 'PHI:PER:_', 'PF:kuorsaa', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', 'LF:snore', '-SPEC:T/fin', '-COMP:D', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', '-COMP:WH'}
kuorsaamalla    ['LANG:FI']
lahella         {'COMP:V', 'LANG:FI', 'COMP:v', '-SPEC:iWH', '-SPEC:P', '!COMP:*', 'INF', '-COMP:C/fin', 'P', 'adjoinable', '-SPEC:iR', '!SPEC:*', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:N', '-SPEC:v', '-COMP:FORCE', 'COMP:D', 'PF:lahella', '-SPEC:FORCE', '!SPEC:D', '-COMP:uWH', 'PHI:NUM:_', '-SPEC:Neg/fin', 'LF:near', '-COMP:ADV', 'PHI:PER:_', '-COMP:N', '-SPEC:C', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', 'ARG', 'SPEC:*', 'PHI:DET:_', '-SPEC:V', 'VAL'}
lahella         {'PF:lahella', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:uWH', 'LANG:FI', '-SPEC:iWH', '-SPEC:Neg/fin', 'LF:near', '!COMP:*', '!COMP:D', '-SPEC:P', '-COMP:ADV', 'PHI:PER:_', 'P', '-COMP:N', 'adjoinable', '-SPEC:iR', '-SPEC:C', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:N', 'ARG', 'SPEC:*', 'PHI:DET:_', '-VAL', '-SPEC:v', '-SPEC:V', 'COMP:D'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'-COMP:v', 'CLASS:INTR', 'ASP', 'LF:leave', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '-COMP:V', 'PF:lahtea', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:D', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'SPEC:D', 'COMP:PP'}
lavano          ['LANG:IT']
lava-           {'-COMP:v', 'ASP', 'LANG:IT', '-SPEC:FORCE', 'PHI:NUM:_', 'V', '!COMP:*', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', 'LF:wash', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'PHI:GEN:_', 'PF:lava', 'COMP:D'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'LANG:IT', '-COMP:uR', '-SPEC:Neg/fin', '-SPEC:P', '!COMP:*', '-SPEC:D', 'PF:le', 'adjoinable', '-SPEC:C', '-COMP:T/fin', '-SPEC:MA/lla', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', '-ARG', '-SPEC:N', '-SPEC:V', '!PROBE:N', 'OP', 'LF:D', 'COMP:N', 'D'}
leaves          ['LANG:EN']
leave           {'-COMP:v', 'ASP', 'LF:leave', '!SPEC:D', '-SPEC:FORCE', 'PHI:NUM:_', 'V', 'LANG:EN', '-COMP:V', 'PHI:PER:_', 'PF:leave', '-COMP:N', 'COMP:P', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'PHI:GEN:_'}
leave-          {'-COMP:v', 'ASP', 'LF:leave', '!SPEC:D', '-SPEC:FORCE', 'PHI:NUM:_', 'V', 'LANG:EN', '-COMP:V', 'PHI:PER:_', 'PF:leave', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'PHI:GEN:_'}
like-           {'-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'V', '!COMP:D', 'LANG:EN', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'SPEC:P', 'LF:like', '-COMP:T/fin', 'PF:like', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'PHI:GEN:_'}
likes           ['LANG:EN']
like            {'-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'V', '!COMP:D', 'LANG:EN', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'SPEC:P', 'LF:like', '-COMP:T/fin', 'PF:like', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'PHI:GEN:_'}
little          ['LANG:EN']
little-         {'SPEC:D', 'PF:little-', '0', '2SPEC', 'LF:little', 'LANG:EN'}
lle             {'LF:for', '-SPEC:FORCE', '+SEM:directional', '-COMP:uWH', 'LANG:FI', '-SPEC:iWH', '-SPEC:Neg/fin', '-SPEC:P', '!COMP:*', 'PHI:NUM:_', '-COMP:ADV', 'PHI:PER:_', 'P', 'PF:P(lle)', '-COMP:N', 'adjoinable', '-SPEC:iR', '-SPEC:C', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:C/fin', 'TAIL:V,+SEM:directional', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:*', '-SPEC:N', 'ARG', 'PHI:DET:_', '-VAL', '-SPEC:v', '-SPEC:V', 'COMP:D'}
lla             {'-SPEC:FORCE', 'PHI:NUM:_', '-COMP:uWH', 'LANG:FI', '-SPEC:iWH', '-SPEC:Neg/fin', '-SPEC:P', '!COMP:*', '-COMP:ADV', 'TAIL:*V', 'PF:P(lla)', 'PHI:PER:_', 'P', 'TAIL:T', 'LF:by', '-COMP:N', 'adjoinable', '-SPEC:iR', '-SPEC:C', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:N', 'ARG', 'SPEC:*', 'PHI:DET:_', '-VAL', '-SPEC:v', '-SPEC:V', 'COMP:D'}
Luisa           ['LANG:IT']
Luisa-          {'-COMP:v', 'COMP:R/D', 'LF:Luisa', 'LANG:IT', '-SPEC:FORCE', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SEM:directional', 'PF:Luisa', '-SPEC:V', '-COMP:WH', '-SPEC:R', 'COMP:R'}
lukemalla       ['LANG:FI']
luke-           {'-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '!COMP:*', '-COMP:V', 'PHI:PER:_', 'LF:read', 'COMP:P', '-COMP:N', 'CLASS:TR', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', '-COMP:P', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'PF:luke', 'COMP:D'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'ASP:BOUNDED', '-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '!COMP:D', '!COMP:*', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'LF:find', 'CLASS:TR', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'PF:loyta-', 'ARG', '-COMP:P', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'COMP:D'}
Mary            ['LANG:EN']
Mary-           {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:P', '-COMP:A', 'LANG:EN', '-COMP:V', '-COMP:C/fin', '-COMP:AUX', 'LF:Mary', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', 'PF:Mary', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-adjoinable', '-SEM:directional', '-SPEC:V', '-COMP:WH', '-SPEC:R', 'COMP:R'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', 'LANG:FI', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', 'LF:Merja', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-adjoinable', '-SEM:directional', '-SPEC:V', 'PF:Merja', '-COMP:WH', '-SPEC:R', 'COMP:R'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', 'COMP:v', 'LANG:FI', 'SPEC:*', '-SPEC:Neg/fin', 'PF:malla', 'ADV', 'MA/inf', 'TAIL:T', 'LF:by', 'adjoinable'}
meren           ['LANG:FI']
mere-           {'-COMP:v', 'PF:meri', 'COMP:R/D', '-SPEC:FORCE', 'LANG:FI', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'LF:ocean', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SPEC:V', '-COMP:WH', '-SPEC:R', 'COMP:R'}
mistake         {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', 'LF:mistake', '-SPEC:P', '-COMP:A', 'LANG:EN', '-COMP:V', '-COMP:C/fin', '-COMP:AUX', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', 'PF:mistake', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SPEC:V', '-COMP:WH', '-SPEC:R', 'COMP:R'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', 'LANG:FI', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', 'LF:what', 'PF:mika-', '-SPEC:V', '-COMP:WH', '-SPEC:R', 'COMP:R'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'-COMP:v', 'ASP', '-SPEC:FORCE', '+SEM:directional', 'PHI:NUM:_', 'V', '!COMP:*', '-COMP:V', 'PF:move', 'PHI:PER:_', 'LF:move', 'LANGN:EN', 'COMP:P', '-COMP:N', 'CLASS:TR', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', '-COMP:P', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'PHI:GEN:_', 'COMP:D'}
mukavasti       ['LANG:EN']
mukava-         {'SPEC:D', 'LF:comfortably', 'PF:mukavasti', 'LANG:FI', '2SPEC', '0'}
must            {'COMP:V', 'PF:must', '-SPEC:FORCE', 'PHI:NUM:_', 'COMP:v', '!COMP:*', 'LANG:EN', '-SPEC:TO/inf', 'FIN', 'PHI:PER:_', 'COMP:T/prt', '-COMP:T/fin', 'MODAL', '!PROBE:V', '-SPEC:C/fin', '-SPEC:T/fin', '!SPEC:*', '-SPEC:N', 'COMP:D', 'ARG', 'SPEC:*', 'SPEC:TO/inf', 'PHI:DET:_', '-SPEC:v', '-SPEC:V', 'COMP:Neg', 'SPEC:D', 'T', 'T/fin', '-COMP:INF', 'VAL', 'PHI:GEN:_', 'LF:must'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'ASP:BOUNDED', '-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '!COMP:*', '-COMP:V', 'PHI:PER:_', 'PF:myy', 'COMP:P', '-COMP:N', 'CLASS:TR', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', '-COMP:P', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'LF:sell', 'COMP:D'}
naki            ['LANG:FI']
nake-           {'ASP:BOUNDED', '-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LF:see', 'LANG:FI', 'V', '!COMP:*', '-COMP:V', '-COMP:MA/inf', 'PHI:PER:_', 'PF:nake', 'COMP:P', '-COMP:N', 'CLASS:TR', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', '-COMP:P', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', '-COMP:ESSA/inf', 'COMP:D'}
nayttaa         ['LANG:FI']
naytta-         {'-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', 'LF:seem', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'SPEC:D', '!COMP:VA/inf', 'SEM:internal', 'PF:naytta'}
ndo             {'COMP:V', 'LF:ing', 'PF:PRG', '?ARG', '-SPEC:T/fin', 'COMP:v', '!COMP:*', 'INF', 'LANG:EN', '-SPEC:V', '-COMP:C/fin', 'PRG', '-COMP:FORCE', 'VAL', '-COMP:T/fin'}
ne              {'PHI:PER:3', '-COMP:uR', 'LANG:FI', '-SPEC:Neg/fin', '-SPEC:P', '!COMP:*', '-SPEC:D', 'adjoinable', '-SPEC:C', '-COMP:T/fin', '-SPEC:MA/lla', 'PF:ne', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', '-ARG', '-SPEC:N', '-SPEC:V', '!PROBE:N', 'PHI:NUM:PL', 'OP', 'COMP:N', 'D', 'LF:those'}
niiden          ['LANG:EN']
nen             {'LF:ing', 'COMP:0', 'LANG:FI', 'SPEC:*', 'PF:a', 'A', '-SPEC:A', '-SPEC:D', 'TAIL:D', 'adjoinable'}
not             {'-SPEC:T/fin', '-COMP:D', 'PHI:NUM:_', 'LF:not', 'ARG', 'SPEC:*', '!COMP:*', 'PHI:DET:_', '-VAL', 'POL:NEG', 'LANG:EN', 'PHI:PER:_', '-COMP:C', 'PHI:GEN:_', 'Neg', 'PF:not', '-COMP:FIN'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-COMP:v', 'CLASS:INTR', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '-COMP:V', '-COMP:Neg/fin', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:D', 'SPEC:ADV', 'ARG', '-COMP:T', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'LF:sleep', 'SPEC:D', 'PF:nukku'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', 'LANG:FI', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'PF:omaisuuden', 'COMP:uR', 'LF:possessions', '-SPEC:V', '-COMP:WH', '-SPEC:R', 'COMP:R'}
operatoria      ['LANG:IT']
operatoria-     {'PF:operatoria', 'LF:operation', 'SPEC:D', 'LANG:IT', '2SPEC', '0'}
ostaa           ['LANG:FI']
osta-           {'ASP:BOUNDED', '-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '!COMP:*', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'CLASS:TR', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'LF:buy', '-COMP:P', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'PF:osta', 'COMP:D'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', 'LANG:FI', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', 'SEM:nonreferential', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SPEC:V', 'LF:day', 'PF:paiva', '-COMP:WH', '-SPEC:R', 'COMP:R'}
Pariisia        ['LANG:FI']
Pariisi-        {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', 'LANG:FI', 'LF:Paris', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', 'PF:Pariisi', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SPEC:V', '-COMP:WH', '-SPEC:R', 'COMP:R'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', 'LANG:FI', '-SPEC:P', '-COMP:A', '-COMP:V', 'LF:Pekka', '-COMP:C/fin', '-COMP:AUX', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SEM:directional', '-SPEC:V', 'PF:Pekka', '-COMP:WH', '-SPEC:R', 'COMP:R'}
pelottaa        ['LANG:FI']
pelkaa-         {'-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '!COMP:*', '-COMP:V', 'PHI:PER:_', 'PF:pelkaa', 'COMP:P', '-COMP:N', 'CLASS:TR', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', '-COMP:P', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'LF:fear', 'COMP:D'}
persuades       ['LANG:EN']
persuade-       {'-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'V', '!COMP:*', 'LANG:EN', '-COMP:V', 'PHI:PER:_', 'LF:persuade', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', 'COMP:TO/inf', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'PF:persuade', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'PHI:GEN:_', 'SEM:external'}
peruuntui       ['LANG:FI']
peruuntu-       {'-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'SPEC:D', 'PF:peruuntui', 'LF:cancelled'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'ASP:BOUNDED', '-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '!COMP:*', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'CLASS:TR', 'SPEC:P', '-COMP:T/fin', 'LF:wash', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'PF:pese', '-COMP:P', 'SPEC:TO/inf', '-VAL', 'PHI:DET:_', 'COMP:D'}
pese-           {'-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '!COMP:*', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'CLASS:TR', 'SPEC:P', '-COMP:T/fin', 'LF:wash', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'PF:pese', '-COMP:P', 'SPEC:TO/inf', '-VAL', 'PHI:DET:_', 'COMP:D'}
petardi         {'-COMP:v', 'COMP:R/D', 'LANG:IT', '-SPEC:FORCE', 'LF:firecrackers', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', 'PF:petardi', '-SPEC:N', 'COMP:uR', '-SPEC:V', '-COMP:WH', '-SPEC:R', 'COMP:R'}
pieni           ['LANG:FI']
pieni-          {'PF:pieni-', 'SPEC:D', 'LF:small', 'LANG:FI', '2SPEC', '0'}
poikien         ['LANG:FI']
poika-          {'PF:poika', '-COMP:v', 'COMP:R/D', '-SPEC:FORCE', 'LANG:FI', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', 'LF:boy', '-SPEC:V', '-COMP:WH', '-SPEC:R', 'COMP:R'}
puhelinta       ['LANG:FI']
puhelin-        {'LF:phone', 'SPEC:D', 'LANG:FI', '2SPEC', 'PF:puhelin', '0'}
punainen        ['LANG:FI']
puna-           {'SPEC:D', 'LANG:FI', '2SPEC', 'PF:puna-', '0', 'LF:red'}
presupposto     {'-COMP:v', 'COMP:R/D', 'LANG:IT', '-SPEC:FORCE', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'LF:presupposition', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', 'PF:presupposto', '-SPEC:V', '-COMP:WH', '-SPEC:R', 'COMP:R'}
primary         {'-COMP:v', 'COMP:R/D', 'LANG:IT', '-SPEC:FORCE', 'PF:primary', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SPEC:V', 'LF:nurse', '-COMP:WH', '-SPEC:R', 'COMP:R'}
promises        ['LANG:EN']
promise-        {'-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'V', 'LANG:EN', '-COMP:V', 'PHI:PER:_', 'LF:promise', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'PF:promise', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'SPEC:D', 'SEM:internal', 'PHI:GEN:_', 'COMP:D'}
pyytaa          ['LANG:FI']
pyyta-          {'-COMP:v', 'LF:ask', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '-COMP:V', 'PF:pyyda', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'SEM:external'}
raukesi         ['LANG:FI']
raukea-         {'-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '-COMP:V', 'PF:raukea', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'LF:terminate', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL'}
red             ['LANG:EN']
red-            {'SPEC:D', '0', 'PF:red', '2SPEC', 'LANG:EN', 'LF:red'}
saavuttaa       ['LANG:FI']
saavutta-       {'ASP:BOUNDED', '-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '!COMP:D', '!COMP:*', '-COMP:V', 'PHI:PER:_', 'LF:reach', 'COMP:P', '-COMP:N', 'CLASS:TR', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', '-COMP:P', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'PF:saavutta-', 'COMP:D'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'-COMP:v', 'ASP', 'LF:say', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '-COMP:V', 'PHI:PER:_', 'COMP:VA/inf', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'PF:sano-', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'SPEC:D', 'COMP:FORCE'}
said            ['LANG:EN']
say'            {'-COMP:v', 'ASP', 'LF:say', '-SPEC:FORCE', 'PHI:NUM:_', 'PF:say', 'V', 'LANG:EN', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'SPEC:D', 'PHI:GEN:_', '!COMP:FORCE'}
say-            {'-COMP:v', 'ASP', 'LF:say', '-SPEC:FORCE', 'PHI:NUM:_', 'PF:say', 'V', 'LANG:EN', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'SPEC:D', 'PHI:GEN:_', '!COMP:FORCE'}
sala            ['LANG:IT']
sala-           {'-COMP:v', 'COMP:R/D', 'LANG:IT', 'LF:room', '-SPEC:FORCE', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SPEC:V', 'PF:sala', '-COMP:WH', '-SPEC:R', 'COMP:R'}
scoppiati       ['LANG:IT']
scoppia-        {'-COMP:v', 'ASP', 'PF:scoppia', 'LANG:IT', '-SPEC:FORCE', 'PHI:NUM:_', 'V', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'LF:explode', 'PHI:GEN:_'}
sen             {'-COMP:uR', 'LANG:FI', '-SPEC:Neg/fin', '-SPEC:P', '!COMP:*', 'PF:sen', '-SPEC:D', 'TAIL:ASP', 'adjoinable', 'TAIL:*POL:NEG', '-SPEC:C', '-COMP:T/fin', '-SPEC:MA/lla', '-SPEC:T/fin', '-SPEC:INF', 'TAIL:PHI', '-COMP:D', '-ARG', '-SPEC:N', 'LF:the/that', '-SPEC:V', '!PROBE:N', 'OP', 'COMP:N', 'D'}
se'             {'-COMP:uR', 'LANG:FI', '-SPEC:Neg/fin', '-SPEC:P', '!COMP:*', '-SPEC:D', 'adjoinable', '-SPEC:C', 'PF:se', '-COMP:T/fin', '-SPEC:MA/lla', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', '-ARG', '-SPEC:N', 'LF:the/that', '-SPEC:V', '!PROBE:N', 'OP', 'COMP:N', 'D'}
sentenza        {'-COMP:v', 'COMP:R/D', 'LANG:IT', '-SPEC:FORCE', 'LF:sentence', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'PF:sentenza', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SPEC:V', '-COMP:WH', '-SPEC:R', 'COMP:R'}
Seine           ['LANG:EN']
Seine-          {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', 'LF:Seine', '-SPEC:P', '-COMP:A', 'LANG:EN', '-COMP:V', '-COMP:C/fin', '-COMP:AUX', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', 'COMP:R', '-SPEC:V', '-COMP:WH', '-SPEC:R', 'PF:Seine'}
sembrano        ['LANG:IT']
sembra-         {'-COMP:v', '-SPEC:FORCE', 'V', 'LF:seem', 'LANG:EN', '-COMP:V', 'PF:sembra', '-ASP', '!COMP:ARE/inf', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:D', '-ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-VAL', 'SPEC:D'}
sleeps          ['LANG:EN']
sleep           {'-COMP:v', 'CLASS:INTR', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'V', 'LANG:EN', '-COMP:V', 'PHI:PER:_', 'PF:sleep', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:D', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'LF:sleep', 'SPEC:D', 'PHI:GEN:_'}
sleep-          {'-COMP:v', 'CLASS:INTR', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'V', 'LANG:EN', '-COMP:V', 'PHI:PER:_', 'PF:sleep', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:D', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'LF:sleep', 'SPEC:D', 'PHI:GEN:_'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-COMP:v', 'COMP:R/D', '!COMP:A/inf', '-SPEC:FORCE', 'LANG:FI', 'LF:agreement', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SPEC:V', 'PF:sopimus', '-COMP:WH', '-SPEC:R', 'COMP:R'}
spinge          ['LANG:IT']
spinge-         {'-COMP:v', 'PF:spinge', 'ASP', 'LANG:IT', '-SPEC:FORCE', 'PHI:NUM:_', 'V', '!COMP:D', '-COMP:V', 'PHI:PER:_', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', '-COMP:P', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'PHI:GEN:_', 'LF:push'}
ssa             {'-SPEC:FORCE', 'PHI:NUM:_', 'TAIL:V', 'LANG:FI', 'COMP:n/MA', '-SPEC:iWH', '-SPEC:P', '!COMP:*', '-COMP:uWH', '-SPEC:Neg/fin', '-COMP:ADV', 'PHI:PER:_', 'P', '-COMP:N', 'adjoinable', '-SPEC:iR', '-SPEC:C', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:C/fin', 'LF:in', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:N', 'ARG', 'SPEC:*', 'PHI:DET:_', '-VAL', '-SPEC:v', '-SPEC:V', 'COMP:D', 'PF:ssa'}
stanno          ['LANG:IT']
sta-            {'-COMP:v', '-SPEC:FORCE', 'PHI:NUM:_', 'V', 'LANG:EN', '-COMP:V', 'PHI:PER:_', '-ASP', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'LF:stay', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'SPEC:D', 'PF:sta', 'SEM:internal', 'PHI:GEN:_', 'COMP:PRG'}
sti             {'-SPEC:T/fin', '-SPEC:FORCE', '-ARG', '-SPEC:N', 'LANG:FI', 'SPEC:*', 'PF:sti', '-SPEC:Neg/fin', '!COMP:*', 'ADV', 'TAIL:T', 'LF:by', 'adjoinable'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', 'LANG:FI', '-SPEC:P', 'PF:sukka-', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', 'COMP:R', '-SPEC:V', '-COMP:WH', '-SPEC:R', 'LF:socks'}
talo            {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', 'LANG:FI', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SPEC:V', 'PF:talo', 'LF:house', '-COMP:WH', '-SPEC:R', 'COMP:R'}
tama            ['LANG:EN']
tama-           {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', 'LANG:FI', '-SPEC:P', '-COMP:A', 'PF:tama', '-COMP:V', '-COMP:C/fin', '-COMP:AUX', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', 'LF:this', '-SPEC:T/fin', '-SPEC:INF', 'N', '-SPEC:N', 'PHI', 'COMP:uR', '-COMP:D', '-SPEC:V', '-COMP:WH', '-SPEC:R', 'COMP:R'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'-COMP:v', 'PF:taytyy', '!COMP:A/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '-COMP:V', 'FIN', 'PHI:PER:_', '-ASP', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', 'MODAL', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:*', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'LF:must'}
teki            ['LANG:FI']
teke-           {'ASP:BOUNDED', '-COMP:v', 'PF:teke', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '!COMP:D', '!COMP:*', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'CLASS:TR', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'LF:make', '-COMP:P', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'COMP:D', '-COMP:A/inf'}
that            {'COMP:T/fin', '-ARG', '-SPEC:*', 'PF:that', '!COMP:*', 'LANG:EN', '-VAL', 'FIN', 'FORCE', '!PROBE:T/fin', 'LF:that', 'COMP:C/fin'}
the             {'-COMP:uR', '-SPEC:Neg/fin', '-SPEC:P', '!COMP:*', 'LANG:EN', '-SPEC:D', 'LF:the', 'adjoinable', '-SPEC:C', '-COMP:T/fin', '-SPEC:MA/lla', 'PHI:DEF:DEF', '-SPEC:T/fin', '-SPEC:INF', 'PF:the', '-COMP:D', '-ARG', '-SPEC:N', '-SPEC:V', '!PROBE:N', 'OP', 'COMP:N', 'D'}
to              {'-SPEC:FORCE', '+SEM:directional', '-COMP:uWH', 'PHI:NUM:_', '-SPEC:iWH', '-SPEC:Neg/fin', '-SPEC:P', '!COMP:*', 'LANG:EN', '-COMP:ADV', 'LF:to', 'PHI:PER:_', 'P', '-float', '-COMP:N', 'adjoinable', '-SPEC:iR', '-SPEC:C', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', 'TAIL:V,+SEM:directional', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:*', '-SPEC:N', 'ARG', 'PHI:DET:_', '-VAL', '-SPEC:v', '-SPEC:V', 'PHI:GEN:_', 'COMP:D', 'PF:to'}
to_inf          {'COMP:V', 'COMP:v', '!COMP:*', 'INF', 'LANG:EN', '-COMP:C/fin', 'adjoinable', '-COMP:T/fin', '-SPEC:T/fin', '?ARG', 'PF:TO/inf', '-SPEC:v', '-VAL', '-SPEC:V', '-COMP:FORCE', 'LF:TO/inf', 'TO/inf'}
towards         {'-SPEC:FORCE', 'PHI:NUM:_', 'TAIL:V', 'LF:towards', '-SPEC:iWH', '-COMP:uWH', '-SPEC:P', '!COMP:*', '-SPEC:Neg/fin', 'LANG:EN', '-COMP:ADV', 'PHI:PER:_', 'P', '-float', '-COMP:N', 'adjoinable', '-SPEC:iR', '-SPEC:C', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:N', '-SPEC:*', 'ARG', 'PHI:DET:_', '-VAL', '-SPEC:v', '-SPEC:V', 'PHI:GEN:_', 'PF:towards', 'COMP:D'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '!COMP:*', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'CLASS:TR', 'SPEC:P', 'PF:tonaise', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', '-COMP:P', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'LF:nudge', 'COMP:D'}
tta             {'PF:tta', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:uWH', 'LANG:FI', 'COMP:n/MA', '-SPEC:iWH', '-SPEC:P', '!COMP:*', '-SPEC:Neg/fin', '-COMP:ADV', 'PHI:PER:_', 'P', 'ADV', '-COMP:N', 'adjoinable', '-SPEC:iR', '-SPEC:C', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:N', 'LF:without', 'ARG', 'SPEC:*', 'PHI:DET:_', '-VAL', '-SPEC:v', '-SPEC:V', 'COMP:D'}
tries           ['LANG:EN']
try-            {'-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'V', 'LANG:EN', '!COMP:TO/inf', '-COMP:V', 'PHI:PER:_', 'LF:try', '!COMP:-ARG', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', 'PF:try', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'SPEC:D', 'SEM:internal', 'PHI:GEN:_'}
verifiche       {'LF:verification', '-COMP:v', 'COMP:R/D', 'LANG:IT', '-SPEC:FORCE', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SPEC:V', 'PF:verifiche', '-COMP:WH', '-SPEC:R', 'COMP:R'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:FI', 'V', '-COMP:V', 'PHI:PER:_', 'LF:flow', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:D', 'PF:virtaa', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', '!COMP:P', 'SPEC:D'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'-COMP:v', 'PF:volu', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'V', '!COMP:*', 'LANG:EN', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'LF:want', '-SPEC:*', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'SEM:internal', 'PHI:GEN:_'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'ASP:BOUNDED', 'SEM:achievement', '-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'V', '!COMP:*', 'LANG:EN', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'CLASS:TR', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'LF:win', 'SPEC:ADV', 'ARG', 'PF:voitta', '-COMP:P', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'PHI:GEN:_', 'COMP:D'}
wants           ['LANG:EN']
want-           {'-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'V', '!COMP:*', '-COMP:V', 'LANG:EN', '-SPEC:TO/inf', 'PHI:PER:_', 'COMP:P', 'PF:want', '-COMP:N', 'CLASS:TR', 'SPEC:P', '-COMP:T/fin', 'COMP:TO/inf', '-SPEC:T/fin', 'LF:want', 'SPEC:ADV', 'ARG', '-COMP:P', 'PHI:DET:_', '-VAL', 'PHI:GEN:_', 'COMP:D'}
what            ['LANG:EN']
what-           {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', '-COMP:*', '-SPEC:P', '-COMP:A', 'LANG:EN', 'PF:what', '-COMP:C/fin', '-COMP:V', '-COMP:AUX', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', 'LF:what', '-SPEC:V', 'PHI_N', '-COMP:WH', '-SPEC:R', 'COMP:R'}
which           {'LF:which', '-COMP:uR', 'OP:WH', '-SPEC:Neg/fin', '-SPEC:P', '!COMP:*', 'LANG:EN', '-SPEC:D', 'adjoinable', '-SPEC:C', '-COMP:T/fin', '-SPEC:MA/lla', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', '-ARG', '-SPEC:N', '-SPEC:V', '!PROBE:N', 'OP', 'PF:which', 'COMP:N', 'D'}
who             ['LANG:EN']
who-            {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', '-COMP:*', '-SPEC:P', 'PF:who', 'LANG:EN', '-COMP:A', '-COMP:C/fin', '-COMP:V', '-COMP:AUX', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', 'LF:who', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SPEC:V', 'PHI_N', '-COMP:WH', '-SPEC:R', 'COMP:R'}
whether         {'OP:WH', '!COMP:*', 'LANG:EN', 'FIN', 'PF:whether', 'FORCE', 'LF:whether', 'COMP:C/fin', '-ARG', '-SPEC:*', 'Q', '!PROBE:T/fin', '-VAL', 'OP', 'COMP:T/fin', 'OP:Q'}
yrittaa         ['LANG:FI']
yritta-         {'-COMP:v', '!COMP:A/inf', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'V', 'LANG:EN', '-COMP:V', 'PHI:PER:_', 'LF:try', '!COMP:-ARG', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'SPEC:ADV', 'ARG', 'PF:yritta', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'SPEC:D', 'SEM:internal', 'PHI:GEN:_'}
mina            ['LANG:EN']
mina-           {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', 'LANG:FI', '-COMP:*', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', 'LF:I', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', 'PF:mina', '-SPEC:N', 'COMP:uR', '-SPEC:V', 'PHI_N', '-COMP:WH', '-SPEC:R', 'COMP:R'}
sina            ['LANG:EN']
sina-           {'-COMP:v', 'LF:you', 'COMP:R/D', '-SPEC:FORCE', 'LANG:FI', '-COMP:*', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', 'PF:sina', '-SPEC:V', 'PHI_N', '-COMP:WH', '-SPEC:R', 'COMP:R'}
han             ['LANG:EN']
han-            {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', 'LANG:FI', '-COMP:*', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', 'PF:han', 'LF:s/he', '-SPEC:V', 'PHI_N', '-COMP:WH', '-SPEC:R', 'COMP:R'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'LF:we', '-COMP:v', 'COMP:R/D', '-SPEC:FORCE', 'LANG:FI', '-COMP:*', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', 'PF:me', '-SPEC:V', 'PHI_N', '-COMP:WH', '-SPEC:R', 'COMP:R'}
te              ['LANG:EN']
te-             {'-COMP:v', 'LF:you', 'PF:te', 'COMP:R/D', '-SPEC:FORCE', 'LANG:FI', '-COMP:*', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SPEC:V', 'PHI_N', '-COMP:WH', '-SPEC:R', 'COMP:R'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he-             {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', 'LANG:FI', '-COMP:*', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'LF:they', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SPEC:V', 'PF:he', 'PHI_N', '-COMP:WH', '-SPEC:R', 'COMP:R'}
he-             {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', '-COMP:*', '-SPEC:P', '-COMP:A', 'LANG:EN', '-COMP:V', '-COMP:C/fin', '-COMP:AUX', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', 'LF:he', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SPEC:V', 'PF:he', 'PHI_N', '-COMP:WH', '-SPEC:R', 'COMP:R'}
se              ['LANG:FI']
se-             {'-COMP:uR', 'LANG:FI', '-SPEC:Neg/fin', '-SPEC:P', '!COMP:*', '-SPEC:D', 'adjoinable', '-SPEC:C', 'PF:se', '-COMP:T/fin', '-SPEC:MA/lla', 'LF:it/that', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', '-ARG', '-SPEC:N', '-SPEC:V', '!PROBE:N', 'OP', 'COMP:N', 'D'}
I               ['LANG:EN']
I-              {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', '-COMP:*', '-SPEC:P', '-COMP:A', 'LANG:EN', '-COMP:V', '-COMP:C/fin', '-COMP:AUX', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', 'PF:I', '-SPEC:ADV', 'LF:I', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', 'N', '-SPEC:N', 'COMP:uR', '-COMP:D', '-SPEC:V', 'PHI_N', '-COMP:WH', '-SPEC:R', 'COMP:R'}
you             ['LANG:EN']
you-            {'-COMP:v', 'LF:you', 'COMP:R/D', '-SPEC:FORCE', '-COMP:*', '-SPEC:P', '-COMP:A', 'LANG:EN', '-COMP:V', '-COMP:C/fin', '-COMP:AUX', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', 'PF:you', '-SPEC:V', 'PHI_N', '-COMP:WH', '-SPEC:R', 'COMP:R'}
he              ['LANG:EN']
she             ['LANG:EN']
she-            {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', '-COMP:*', '-SPEC:P', '-COMP:A', 'LANG:EN', '-COMP:V', '-COMP:C/fin', '-COMP:AUX', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', 'PF:she', '-SPEC:V', 'PHI_N', '-COMP:WH', '-SPEC:R', 'LF:she', 'COMP:R'}
we              ['LANG:EN']
we-             {'LF:we', '-COMP:v', 'COMP:R/D', '-SPEC:FORCE', '-COMP:*', '-SPEC:P', '-COMP:A', 'LANG:EN', '-COMP:V', '-COMP:C/fin', '-COMP:AUX', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'PF:we', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SPEC:V', 'PHI_N', '-COMP:WH', '-SPEC:R', 'COMP:R'}
you_pl          ['LANG:EN']
you_pl-         {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:P', '-COMP:A', 'LANG:EN', '-COMP:V', '-COMP:C/fin', 'PF:you_pl', '-COMP:AUX', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'PHI', 'COMP:uR', '-SPEC:V', 'LF:you_pl', '-COMP:WH', '-SPEC:R', 'COMP:R'}
they            ['LANG:EN']
they-           {'-COMP:v', 'COMP:R/D', '-SPEC:FORCE', '-COMP:*', '-SPEC:P', '-COMP:A', 'LANG:EN', '-COMP:V', '-COMP:C/fin', '-COMP:AUX', '-SPEC:uWH', 'LF:they', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', 'PF:they', '-SPEC:N', 'COMP:uR', '-SPEC:V', 'PHI_N', '-COMP:WH', '-SPEC:R', 'COMP:R'}
it              ['LANG:EN']
it-             {'-COMP:uR', '-SPEC:Neg/fin', '-SPEC:P', '!COMP:*', 'LANG:EN', '-SPEC:D', 'adjoinable', '-SPEC:C', '-COMP:T/fin', '-SPEC:MA/lla', 'LF:it/that', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', '-ARG', '-SPEC:N', '-SPEC:V', '!PROBE:N', 'OP', 'PF:it', 'COMP:N', 'D'}
io              ['LANG:EN']
io-             {'-COMP:v', 'COMP:R/D', 'LANG:IT', 'PF:io', '-SPEC:FORCE', '-COMP:*', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', 'LF:I', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SPEC:V', 'PHI_N', '-COMP:WH', '-SPEC:R', 'COMP:R'}
tu              ['LANG:EN']
tu-             {'-COMP:v', 'LF:you', 'COMP:R/D', 'LANG:IT', '-SPEC:FORCE', '-COMP:*', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SPEC:V', 'PHI_N', 'PF:tu', '-COMP:WH', '-SPEC:R', 'COMP:R'}
lui             ['LANG:EN']
lui-            {'-COMP:v', 'COMP:R/D', 'LANG:IT', '-SPEC:FORCE', '-COMP:*', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', 'PF:lui', 'LF:he', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', 'N', '-SPEC:N', 'COMP:uR', '-COMP:D', '-SPEC:V', 'PHI_N', '-COMP:WH', '-SPEC:R', 'COMP:R'}
lei             ['LANG:EN']
lei-            {'-COMP:v', 'COMP:R/D', 'LANG:IT', '-SPEC:FORCE', '-COMP:*', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SPEC:V', 'PHI_N', 'PF:lei', '-COMP:WH', '-SPEC:R', 'LF:she', 'COMP:R'}
noi             ['LANG:EN']
noi-            {'LF:we', '-COMP:v', 'COMP:R/D', 'LANG:IT', '-SPEC:FORCE', '-COMP:*', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SPEC:V', 'PHI_N', 'PF:noi', '-COMP:WH', '-SPEC:R', 'COMP:R'}
voi             ['LANG:EN']
voi-            {'-COMP:v', 'COMP:R/D', 'LANG:IT', '-SPEC:FORCE', '-COMP:*', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', 'PF:voi', '-SPEC:V', 'LF:you_pl', 'PHI_N', '-COMP:WH', '-SPEC:R', 'COMP:R'}
loro            ['LANG:EN']
loro-           {'-COMP:v', 'COMP:R/D', 'LANG:IT', '-SPEC:FORCE', '-COMP:*', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'LF:they', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', '-SPEC:V', 'PF:loro', 'PHI_N', '-COMP:WH', '-SPEC:R', 'COMP:R'}
mi              ['LANG:EN']
mi-             {'-COMP:v', 'LANG:IT', '-COMP:*', '-SPEC:P', '-COMP:C/fin', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:N', 'COMP:uR', 'PHI_N', 'LF:me', '-SPEC:R', 'COMP:R', 'COMP:R/D', '-SPEC:FORCE', '-COMP:A', '-COMP:V', 'CL', '-COMP:AUX', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', 'PF:mi(cl)', 'N', '-COMP:D', '-SPEC:V', '-COMP:WH'}
la              ['LANG:EN']
la-             {'-COMP:v', 'LANG:IT', '-COMP:*', '-SPEC:P', '-COMP:C/fin', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:N', 'COMP:uR', 'PHI_N', '-SPEC:R', 'COMP:R', 'COMP:R/D', '-SPEC:FORCE', '-COMP:A', '-COMP:V', 'CL', '-COMP:AUX', 'LF:her', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', 'PF:la(cl)', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:V', '-COMP:WH'}
lo              ['LANG:EN']
lo-             {'-COMP:v', 'LANG:IT', '-COMP:*', '-SPEC:P', '-COMP:C/fin', '-SPEC:ADV', '-COMP:T/fin', 'PF:lo(cl)', '-SPEC:N', 'COMP:uR', 'LF:him', 'PHI_N', '-SPEC:R', 'COMP:R', 'COMP:R/D', '-SPEC:FORCE', '-COMP:A', '-COMP:V', 'CL', '-COMP:AUX', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:V', '-COMP:WH'}
si              ['LANG:EN']
si-             {'-COMP:v', 'PF:si(cl)', 'LANG:IT', '-COMP:*', '-SPEC:P', '-COMP:C/fin', 'CAL:CL', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:N', 'COMP:uR', 'PHI_N', '-SPEC:R', 'COMP:R', 'COMP:R/D', '-SPEC:FORCE', 'LF:3sg', '-COMP:A', '-COMP:V', '-COMP:AUX', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:V', '-COMP:WH'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-COMP:v', 'COMP:R/D', 'LANG:IT', '-SPEC:FORCE', '-COMP:*', '-SPEC:P', '-COMP:A', '-COMP:V', '-COMP:AUX', '-COMP:C/fin', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'COMP:uR', 'COMP:R', '-SPEC:V', 'PHI_N', 'LF:there', '-COMP:WH', '-SPEC:R', 'PF:ci'}
[-n]            {'LANG:FI', 'inflectional', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:1'}
[-t]            {'LANG:FI', 'inflectional', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:2'}
[-V]            {'inflectional', 'PHI', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG'}
[-mme]          {'LANG:FI', 'inflectional', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'PHI:PER:1'}
[-mme]          {'LANG:FI', 'inflectional', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:1'}
[-tte]          {'LANG:FI', 'inflectional', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'PHI:PER:2'}
[-vat]          {'inflectional', 'PHI:NUM:PL', 'PHI', 'PHI:PER:3', 'LANG:FI'}
[-ni]           {'LANG:FI', 'inflectional', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:1'}
[-si]           {'LANG:FI', 'inflectional', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:2'}
[-nsa]          {'inflectional', 'PHI:PER:3', 'LANG:FI', 'PHI'}
[-an]           {'inflectional', 'PHI:PER:3', 'LANG:FI', 'PHI'}
[-nne]          {'LANG:FI', 'inflectional', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:PER:2'}
[-s]            {'inflectional', 'PHI:GEN:M', 'PHI:PER:3', 'PHI', 'PHI:NUM:SG', 'PHI:GEN:F', 'LANG:EN'}
[-0]            {'PHI:PER:3', 'PHI:GEN:N', 'PHI', 'PHI:NUM:SG', 'LANG:EN', 'PHI:PER:2', 'inflectional', 'PHI:NUM:PL', 'PHI:DET:DEF', 'PHI:PER:1'}
[-o]            {'inflectional', 'LANG:IT', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:1'}
[-i]            {'inflectional', 'LANG:IT', 'PHI:HUM:HUM', 'PHI', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:2'}
[-a]            {'inflectional', 'PHI:PER:3', 'LANG:IT', 'PHI', 'PHI:NUM:SG', 'PHI:DET:DEF'}
[-e]            {'inflectional', 'PHI:PER:3', 'LANG:IT', 'PHI', 'PHI:NUM:SG', 'PHI:DET:DEF'}
[-iamo]         {'inflectional', 'PHI:NUM:PL', 'LANG:IT', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'PHI:PER:1'}
[-te]           {'inflectional', 'PHI:NUM:PL', 'LANG:IT', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'PHI:PER:2'}
[-no]           {'inflectional', 'PHI:NUM:PL', 'PHI:PER:3', 'LANG:IT', 'PHI', 'PHI:DET:DEF'}
[-nom]          {'inflectional', 'TAIL:FIN,ARG,VAL', 'NOM', 'adjoinable', 'LANG:EN'}
[-par]          {'inflectional', 'PAR', 'LANG:FI', 'TAIL:ARG,-VAL', 'adjoinable'}
[-gen]          {'inflectional', 'TAIL:INF,ARG', '-float', 'GEN', 'LANG:EN'}
gen             {'inflectional', 'TAIL:INF,ARG', '-float', 'GEN', 'LANG:EN'}
[-n_acc]        {'inflectional', 'n-ACC', 'TAIL:PHI', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'adjoinable', 'TAIL:*POL:NEG'}
[-t_acc]        {'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'TAIL:*POL:NEG', 'adjoinable', 't-ACC'}
[-0_acc]        {'LANG:FI', 'inflectional', 'TAIL:ARG,ASP:BOUNDED', '0_ACC', 'TAIL:*PHI', 'adjoinable', 'TAIL:*POL:NEG'}
asp             {'inflectional', 'ASP:BOUNDED', 'LANG:EN'}
a'              {'LANG:X', 'a', 'PF:a', 'LF:A'}
b'              {'b', 'PF:b', 'LF:B', 'LANG:X'}
b''             {'b', 'PF:b', 'LF:B', '-COMP:c', 'LANG:EN'}
c''             {'LF:C', 'SPEC:a', 'PF:c', 'c', 'LANG:EN'}
c'              {'PF:c', 'LF:C', 'c', 'LANG:X'}
d'              {'d', 'PF:d', 'LF:D', 'LANG:'}
a''             ['LANG:EN']
x'              {'x', 'PF:x', 'LANG:X', 'LF:X'}
y'              {'PF:y', 'y', 'LF:Y', 'LANG:X'}
z'              {'LANG:X', 'z', 'PF:x', 'LF:Z'}
John'           {'LANG:X', 'PF:John', 'LF:John', "N'"}
admires'        {'LANG:X', "V'", 'LF:admires', 'PF:admires'}
admires''       {'-COMP:v', 'ASP', '-SPEC:FORCE', 'PHI:NUM:_', 'V', 'LANG:EN', '-COMP:V', 'PHI:PER:_', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'LF:admires', 'PF:admires', 'SPEC:ADV', 'ARG', 'SPEC:TO/inf', 'PHI:DET:_', '-VAL', 'SPEC:D', 'PHI:GEN:_'}
Mary'           {'LANG:X', 'PF:Mary', 'LF:mary', "N'"}
T/fin           {'COMP:V', '-SPEC:FORCE', 'PHI:NUM:_', 'COMP:v', '!COMP:*', 'LANG:EN', '-SPEC:TO/inf', 'FIN', 'PHI:PER:_', 'PF:T', 'COMP:T/prt', 'LF:T', '-COMP:T/fin', '!PROBE:V', '-SPEC:C/fin', '!SPEC:*', '-SPEC:T/fin', '-SPEC:N', 'ARG', 'SPEC:*', 'SPEC:TO/inf', 'PHI:DET:_', '-SPEC:v', '-SPEC:V', 'SPEC:D', 'T', 'T/fin', '-COMP:INF', 'VAL', 'PHI:GEN:_', 'COMP:D'}
v               {'COMP:V', 'ASP', 'LF:v', '-SPEC:N', 'PHI:NUM:_', 'PF:v', 'ARG', '!COMP:*', 'PHI:DET:_', 'LANG:EN', '-VAL', 'SPEC:D', 'PHI:PER:_', 'PHI:GEN:_', 'v', '!PROBE:V'}
C/fin           {'C', '-COMP:T/prt', '!COMP:*', 'LANG:EN', '-COMP:C/fin', 'FIN', 'LF:C/fin', '-SPEC:C/fin', '-SPEC:T/fin', 'COMP:T/fin', '-ARG', '!PROBE:FIN', '-SPEC:N', 'SPEC:*', 'VAL', 'C/fin', 'PF:C', 'COMP:Neg/fin'}
T               {'COMP:V', '-SPEC:FORCE', 'PHI:NUM:_', 'COMP:v', '!COMP:*', 'LANG:EN', 'FIN', 'PHI:PER:_', 'PF:T', 'COMP:T/prt', 'LF:T', '!PROBE:V', '!SPEC:*', '-SPEC:T/fin', '-COMP:NEG', '-SPEC:N', 'ARG', 'SPEC:*', 'PHI:DET:_', '-SPEC:V', 'T', 'SPEC:D', 'VAL', 'PHI:GEN:_', 'COMP:D'}
T/prt           {'COMP:V', '-SPEC:FORCE', 'PHI:NUM:_', 'COMP:v', '!COMP:*', 'LANG:EN', 'FIN', 'PHI:PER:_', 'COMP:T/prt', 'T/prt', '!PROBE:V', '!SPEC:*', '-SPEC:T/fin', '-COMP:NEG', '-SPEC:N', 'ARG', 'SPEC:*', 'PHI:DET:_', '-SPEC:V', 'T', 'SPEC:D', 'VAL', 'PHI:GEN:_', 'COMP:D', 'PF:T/prt', 'LF:T/prt'}
a0              {'COMP:0', '-adjoinable', 'LANG:EN', 'A', '-SPEC:A', '-SPEC:D', 'TAIL:D', 'adjoinable', 'PF:A', 'LF:A'}
n               {'-COMP:v', 'COMP:V', 'COMP:v', '-SPEC:P', '!COMP:*', 'LANG:EN', 'INF', '-COMP:C/fin', 'n', '-COMP:T/fin', '-SPEC:ADV', '!SPEC:*', '-SPEC:N', 'COMP:uR', '-SPEC:R', 'COMP:R', 'COMP:R/D', 'COMP:0', '-SPEC:FORCE', '!SPEC:D', 'PHI:NUM:_', '-COMP:A', '-COMP:V', '-COMP:AUX', '-SPEC:uWH', '-COMP:ADV', 'PHI:PER:_', 'SPEC:A', 'COMP:P', '-COMP:N', '-SPEC:C/fin', '-SPEC:T/fin', 'LF:n', '-SPEC:INF', 'N', '-COMP:D', 'ARG', 'SPEC:*', 'PHI:DET:_', '-SPEC:V', 'PF:n', 'VAL', 'PHI:GEN:_', '-COMP:WH'}
impass          {'COMP:V', 'ASP', 'PHI:NUM:_', '-SPEC:N', 'LF:impass', 'ARG', '!COMP:*', 'PHI:DET:_', 'LANG:EN', 'PF:impass', '-VAL', 'SPEC:D', 'PHI:PER:_', 'PHI:GEN:_', 'v', '!PROBE:V'}
cau             {'COMP:V', 'ASP', 'PHI:NUM:_', '-SPEC:N', 'ARG', 'PF:Cau', '!COMP:*', 'LF:v/Cause', 'LANG:EN', '-VAL', 'PHI:DET:_', 'SPEC:D', 'PHI:PER:_', 'PHI:GEN:_', 'v', '!PROBE:V'}
INF             {'COMP:V', '-SPEC:T/fin', 'COMP:v', '!COMP:*', 'LANG:EN', 'INF', '-SPEC:V', '-COMP:C/fin', '-COMP:FORCE', 'PF:INF', 'LF:INF', '-COMP:T/fin'}
prtcpl          {'COMP:V', '-SPEC:FORCE', 'PHI:NUM:_', 'COMP:v', '!COMP:*', 'INF', 'LANG:EN', '-COMP:C/fin', 'FIN', 'PHI:PER:_', 'COMP:T/prt', 'T/prt', '-COMP:T/fin', '!PROBE:V', '!SPEC:*', '-SPEC:T/fin', '-COMP:NEG', '-SPEC:N', 'ARG', 'SPEC:*', 'PHI:DET:_', '-SPEC:V', 'T', 'SPEC:D', '-COMP:FORCE', 'VAL', 'PHI:GEN:_', 'COMP:D', 'PF:T/prt', 'LF:T/prt'}
TO/inf          {'COMP:V', 'COMP:v', '!COMP:*', 'INF', 'LANG:EN', '-COMP:C/fin', 'adjoinable', '-COMP:T/fin', '-SPEC:T/fin', '?ARG', 'PF:TO/inf', '!COMP:V', '-SPEC:v', '-VAL', '-SPEC:V', '-COMP:FORCE', 'LF:TO/inf', 'TO/inf'}
A/inf           {'COMP:V', 'COMP:v', '-SPEC:Neg/fin', '!COMP:*', 'INF', 'LANG:EN', '-COMP:C/fin', 'A/inf', '-COMP:T/fin', '-SPEC:T/fin', 'LF:A/inf', '?ARG', '?VAL', 'SPEC:*', '-SPEC:V', 'PF:A/inf', '-COMP:FORCE'}
ARE/inf         {'COMP:V', 'PF:are', 'COMP:v', '!COMP:*', 'INF', 'LANG:EN', '-COMP:C/fin', 'ARE/inf', '-COMP:T/fin', '-SPEC:T/fin', '?ARG', 'LF:ARE/inf', 'SPEC:*', '-adjoinable', '-SPEC:V', '-COMP:FORCE', 'VAL'}
ESSA/inf        {'COMP:V', '-SPEC:FORCE', 'COMP:v', '-SPEC:Neg/fin', '!COMP:*', 'INF', 'LANG:EN', '-COMP:C/fin', 'ADV', 'TAIL:T', 'adjoinable', '-COMP:T/fin', '-SPEC:T/fin', '?ARG', 'ESSA/inf', '-SPEC:N', '?VAL', 'SPEC:*', 'PF:essa', '-SPEC:V', '-COMP:FORCE', 'LF:while'}
TUA/inf         {'COMP:V', '-SPEC:FORCE', 'PHI:NUM:_', 'COMP:v', '-SPEC:Neg/fin', 'LF:after', '!COMP:*', 'INF', 'LANG:EN', '-COMP:C/fin', 'PHI:PER:_', 'ADV', 'TAIL:T', 'adjoinable', '!SPEC:*', '-COMP:T/fin', '-SPEC:T/fin', 'TUA/inf', '-SPEC:N', 'ARG', 'PHI:DET:_', '-SPEC:V', '-COMP:FORCE', 'PHI:GEN:_', 'PF:tua', 'CAL'}
VA/inf          {'COMP:V', 'PF:vAn', 'PHI:NUM:_', 'COMP:v', 'VA/inf', '!COMP:*', 'INF', 'LANG:EN', '-COMP:C/fin', 'PHI:PER:_', '-COMP:T/fin', 'LF:VA', '!SPEC:*', '-SPEC:T/fin', '-SPEC:N', 'ARG', 'SPEC:*', 'PHI:DET:_', '-SPEC:V', '-COMP:FORCE', 'VAL', 'PHI:GEN:_'}
MA/ssa          {'COMP:V', 'LF:in_doing', '-SPEC:FORCE', 'PF:massa', 'TAIL:V', 'COMP:v', '-SPEC:Neg/fin', 'PHI:NUM:_', 'LANG:EN', 'PHI:PER:_', 'ADV', 'adjoinable', '-SPEC:T/fin', '-SPEC:*', '-SPEC:N', 'ARG', 'PHI:DET:_', '-VAL', 'MA/inf', 'PHI:GEN:_'}
MA/tta          {'LF:without_doing', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', 'PHI:NUM:_', 'ARG', '-SPEC:Neg/fin', 'PHI:DET:_', '-VAL', 'LANG:EN', 'PHI:PER:_', 'PF:matta', 'ADV', 'MA/inf', 'TAIL:T', 'PHI:GEN:_', 'adjoinable'}
MA/lla          {'COMP:V', 'COMP:v', 'LANG:EN', 'ADV', 'adjoinable', '-SPEC:N', '-VAL', '-SPEC:FORCE', 'PHI:NUM:_', '-SPEC:Neg/fin', 'PF:malla', 'PHI:PER:_', 'TAIL:T', 'LF:by_doing', '-SPEC:T/fin', 'ARG', 'PHI:DET:_', 'MA/inf', 'PHI:GEN:_'}
MA/inf          {'COMP:V', 'COMP:v', 'LANG:EN', 'ADV', 'adjoinable', '-SPEC:N', '-VAL', '-SPEC:FORCE', 'PHI:NUM:_', 'TAIL:V', '-SPEC:Neg/fin', 'PHI:PER:_', 'PF:maan', '-SPEC:T/fin', 'ARG', 'PHI:DET:_', 'LF:to_do', 'MA/inf', 'PHI:GEN:_'}
E/inf           {'-SPEC:T/fin', 'PF:en', '-ARG', '-SPEC:FORCE', 'LANG:FI', '-SPEC:N', 'SPEC:*', '-SPEC:Neg/fin', '-VAL', 'ADV', 'LF:by', 'adjoinable'}
BE-             {'-COMP:v', 'ASP', '-SPEC:FORCE', 'V', '!COMP:*', 'LANG:EN', '-COMP:V', 'LF:BE', 'COMP:T/prt', 'COMP:P', '-COMP:N', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', '-ARG', 'COPULA', 'SPEC:ADV', 'SPEC:TO/inf', '-VAL', 'PF:BE', 'SPEC:D'}
D               {'-COMP:uR', '-SPEC:Neg/fin', '-SPEC:P', '!COMP:*', 'LANG:EN', '-SPEC:D', 'PF:D', 'adjoinable', '-SPEC:C', '-COMP:T/fin', '-SPEC:MA/lla', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', '-ARG', '-SPEC:N', '-SPEC:V', '!PROBE:N', 'OP', 'D', 'COMP:N', 'LF:D'}
P               {'-SPEC:FORCE', 'PHI:NUM:_', '-COMP:uWH', '-SPEC:iWH', '-SPEC:Neg/fin', '-SPEC:P', '!COMP:*', 'LANG:EN', '-COMP:ADV', 'LF:P', 'PHI:PER:_', 'P', '-float', '-COMP:N', 'adjoinable', '-SPEC:iR', '-SPEC:C', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-SPEC:N', '-SPEC:*', 'COMP:D', 'ARG', 'PHI:DET:_', '-VAL', '-SPEC:v', '-SPEC:V', 'PHI:GEN:_', 'PF:P'}
pro             ['LANG:EN']
pro-            {'-COMP:v', 'PF:(pro)', 'COMP:R/D', '-SPEC:FORCE', '-SPEC:P', '-COMP:A', 'LANG:EN', '-COMP:V', '-COMP:C/fin', '-COMP:AUX', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'COMP:P', 'LF:pro', '-COMP:N', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:T/fin', '-SPEC:INF', '-COMP:D', 'N', '-SPEC:N', 'PHI', 'COMP:uR', '-SPEC:V', '-COMP:WH', '-SPEC:R', 'COMP:R'}
cl              {'inflectional', 'RIGHT:ARE/inf', 'RIGHT:PRG', 'LEFT:T/fin', 'LEFT:D,CL', 'LANG:EN', 'CL'}
inc             {'inflectional', 'INCORPORATED', 'LANG:EN'}
sg              {'inflectional', 'PHI:NUM:SG', 'LANG:EN'}
pl              {'inflectional', 'PHI:NUM:PL', 'LANG:EN'}
1p              {'inflectional', 'PHI:PER:1', 'LANG:EN'}
2p              {'inflectional', 'LANG:EN', 'PHI:PER:2'}
3p              {'inflectional', 'PHI:PER:3', 'LANG:EN'}
def             {'inflectional', 'PHI:DET:DEF', 'LANG:EN'}
indef           {'inflectional', 'PHI:DET:INDEF', 'LANG:EN'}
hum             {'inflectional', 'LANG:EN', 'PHI:HUM:HUM'}
nonhum          {'inflectional', 'PHI:HUM:NONHUM', 'LANG:EN'}
m               {'inflectional', 'PHI:GEN:M', 'LANG:EN'}
f               {'inflectional', 'PHI:GEN:F', 'LANG:EN'}
nom             {'inflectional', 'TAIL:FIN,!COMP:*,VAL', 'LANG:EN'}
acc             {'inflectional', 'LANG:EN', 'TAIL:v'}
dat             {'inflectional', 'LANG:EN', 'TAIL:v'}
uC/op           {'inflectional', 'uC/op', 'LANG:EN'}
wh              {'inflectional', 'LANG:EN', 'OP:_', 'OP:WH'}
wh_             {'inflectional', 'OP', 'FORCE:OP:WH', 'LANG:EN', 'OP:_'}
top             {'inflectional', 'LANG:EN', 'OP:TOP'}
foc             {'inflectional', 'LANG:EN', 'OP:FOC'}
C/op            {'inflectional', 'OP:C/OP', 'LANG:EN'}
rel             {'inflectional', 'OP:REL', 'adjoinable', 'LANG:EN', '-COMP:C/fin'}
Q               {'inflectional', 'OP', 'OP:WH', 'LANG:EN', 'OP:Q'}
