ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'!COMP:*', '-COMP:uWH', '-SPEC:ADV', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', '-COMP:ADV', '-SPEC:C/fin', 'PF:a', '-COMP:N', '-SPEC:iR', '-SPEC:V', 'P', 'COMP:D', '-SPEC:P', '-SPEC:*', 'LF:to', '-VAL', '-SPEC:v', 'COMP:ARE/inf', '-SPEC:iWH', '-SPEC:N', 'adjoinable', 'LANG:IT', '-ARG', '-SPEC:C', '-SPEC:FORCE'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'!COMP:*', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'LF:admire', '-COMP:V', 'PHI:DET:_', 'PF:admire', '-COMP:N', '-COMP:Neg', 'CLASS:TR', 'COMP:D', 'LANG:EN', '-VAL', '-COMP:P', '-SPEC:Neg', 'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', '-SPEC:FORCE'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'LF:admire', '-COMP:V', 'PHI:DET:_', '-COMP:N', 'COMP:D', '-VAL', 'PHI:PER:_', 'PHI:GEN:_', 'PF:adora', 'LANG:IT', 'PHI:NUM:_', '-SPEC:FORCE'}
anta-           {'!COMP:*', 'ASP:BOUNDED', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'CLASS:DITR', 'LF:give', 'V', '-COMP:V', 'PHI:DET:_', '-COMP:N', 'SPEC:D', 'COMP:D', '-VAL', '-COMP:P', '-COMP:FIN', 'PHI:PER:_', '+SEM:directional', 'PF:antaa', 'LANG:FI', 'PHI:NUM:_', '-SPEC:FORCE'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'SPEC:P', 'ASP', 'PF:ask', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', 'SEM:internal', '-COMP:N', 'COMP:D', 'LANG:EN', '-VAL', 'PHI:PER:_', 'PHI:GEN:_', 'LF:ask', 'SPEC:D', 'PHI:NUM:_', '-SPEC:FORCE'}
ask-            {'SPEC:P', 'ASP', 'PF:ask', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', 'SEM:internal', '-COMP:N', 'COMP:D', 'LANG:EN', '-VAL', 'PHI:PER:_', 'PHI:GEN:_', 'LF:ask', 'SPEC:D', 'PHI:NUM:_', '-SPEC:FORCE'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-COMP:D', 'COMP:R/D', 'N', '-SEM:directional', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', 'PF:avain', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LF:key', 'LANG:FI', '-SPEC:uWH', '-SPEC:FORCE'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-COMP:D', 'COMP:R/D', 'N', '-SEM:directional', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', 'LF:car', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LANG:FI', 'PF:auto', '-SPEC:uWH', '-SPEC:FORCE'}
city            {'-COMP:D', 'COMP:R/D', 'N', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', 'PF:city', '-SPEC:T/fin', 'COMP:uR', '-SPEC:INF', 'SPEC:A', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', 'LANG:EN', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LF:city', '-SPEC:uWH', '-SPEC:FORCE'}
che             ['LANG:IT']
che-            {'-COMP:D', 'PHI_N', 'N', 'COMP:R/D', 'LF:who', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:*', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'PF:che', 'COMP:R', '-SPEC:N', 'LANG:IT', '-SPEC:uWH', '-SPEC:FORCE'}
chiamato        ['LANG:IT']
chiamata-       {'SPEC:P', 'PF:chiamato', 'ASP', '-COMP:v', 'ARG', 'PHI:NUM:_', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', '-VAL', 'PHI:PER:_', 'PHI:GEN:_', 'LANG:IT', 'LF:called', '-SPEC:FORCE'}
danno           {'-COMP:D', 'COMP:R/D', 'N', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', 'PF:danno', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'LF:damage', 'COMP:R', '-SPEC:N', 'LANG:IT', '-SPEC:uWH', '-SPEC:FORCE'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'PF:detest', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', 'COMP:D', 'SEM:external', '-VAL', 'COMP:ARE/inf', 'PHI:PER:_', 'PHI:GEN:_', 'LANG:IT', 'LF:detest', 'PHI:NUM:_', '-SPEC:FORCE'}
devono          ['LANG:EN']
deva-           {'SPEC:P', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'LF:must', '-COMP:V', 'SEM:internal', 'PHI:DET:_', '-COMP:N', 'PF:deva', '-ASP', '-VAL', 'COMP:ARE/inf', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:D', 'LANG:IT', 'PHI:NUM:_', '-SPEC:FORCE'}
di              {'!COMP:*', '-COMP:uWH', '-SPEC:ADV', 'ARG', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:INF', 'LF:of', '-COMP:T/fin', 'SPEC:*', '-COMP:ADV', '-SPEC:C/fin', 'PHI:DET:_', '-COMP:N', '-SPEC:iR', '-SPEC:V', 'P', 'COMP:D', '-adjoinable', '-SPEC:P', '-VAL', 'PF:di', '-SPEC:v', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:N', 'LANG:FI', '-SPEC:C', '-SPEC:FORCE'}
does            {'T/fin', '!COMP:*', 'VAL', '!PROBE:V', 'ARG', 'LF:does', 'COMP:T/prt', 'COMP:V', '-SPEC:T/fin', 'SPEC:TO/inf', 'COMP:v', '-COMP:T/fin', 'PHI:DET:_', 'SPEC:*', '-SPEC:C/fin', '!SPEC:D', '!SPEC:*', 'FIN', 'PHI:GEN:F', 'T', 'COMP:Neg', '-SPEC:V', 'COMP:D', 'LANG:EN', 'PHI:NUM:SG', '-COMP:INF', '-SPEC:v', 'PF:does', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:N', 'PHI:GEN:M', 'SPEC:D', 'PHI:PER:3', 'PHI:NUM:_', '-SPEC:FORCE'}
does_C          ['LANG:EN']
does-           {'T/fin', '!COMP:*', 'VAL', '!PROBE:V', 'ARG', 'LF:does', 'COMP:T/prt', 'COMP:V', '-SPEC:T/fin', 'SPEC:TO/inf', 'COMP:v', '-COMP:T/fin', 'PHI:DET:_', 'SPEC:*', '-SPEC:C/fin', '!SPEC:D', '!SPEC:*', 'FIN', 'PHI:GEN:F', 'T', 'COMP:Neg', '-SPEC:V', 'COMP:D', 'LANG:EN', 'PHI:NUM:SG', '-COMP:INF', '-SPEC:v', 'PF:does', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:N', 'PHI:GEN:M', 'SPEC:D', 'PHI:PER:3', 'PHI:NUM:_', '-SPEC:FORCE'}
dorme           ['LANG:IT']
dorme-          {'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'PF:dorme', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', '!SPEC:D', '-COMP:N', 'LF:sleep', 'LANG:EN', '-VAL', 'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', '-SPEC:FORCE'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'!COMP:*', '%SPEC:INF', 'VAL', 'ARG', 'COMP:T/prt', '-SPEC:T', '-SPEC:T/fin', '!COMP:T', 'POL:NEG', 'NEG', 'PHI:DET:_', 'SPEC:*', 'SEM:internal', '!SPEC:*', 'PF:ei', 'FIN', 'PHI:PER:_', 'Neg/fin', 'LANG:FI', 'LF:neg', 'PHI:NUM:_'}
e-              {'!COMP:*', '%SPEC:INF', 'VAL', 'ARG', 'COMP:T/prt', '-SPEC:T', '-SPEC:T/fin', '!COMP:T', 'POL:NEG', 'NEG', 'PHI:DET:_', 'SPEC:*', 'SEM:internal', '!SPEC:*', 'PF:ei', 'FIN', 'PHI:PER:_', 'Neg/fin', 'LANG:FI', 'LF:neg', 'PHI:NUM:_'}
etsii           ['LANG:FI']
etsi-           {'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'PF:etsi', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', 'LF:search', '-COMP:N', 'COMP:D', '-VAL', 'PHI:PER:_', 'LANG:FI', '!COMP:D', 'PHI:NUM:_', '-SPEC:FORCE'}
etta            {'!COMP:*', '!PROBE:T/fin', 'FIN', 'LF:that', 'COMP:T/fin', '-SPEC:*', '-VAL', 'PF:ettÃ¤', 'LANG:FI', '-ARG', 'COMP:C/fin', 'FORCE'}
flow'           {'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'PF:flow', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', 'LF:flow', '-COMP:N', 'LANG:EN', '-VAL', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:D', 'PHI:NUM:_', '-SPEC:FORCE'}
from            {'!COMP:*', 'TAIL:V,+SEM:directional', '-COMP:uWH', '-SPEC:ADV', 'ARG', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:INF', 'PF:from', '-COMP:T/fin', 'PHI:DET:_', '-COMP:ADV', '-SPEC:C/fin', '-COMP:N', '-SPEC:iR', '-SPEC:V', 'P', 'COMP:D', 'LANG:EN', '-SPEC:P', '-SPEC:*', '-VAL', '-SPEC:v', 'PHI:PER:_', '-SPEC:iWH', 'PHI:GEN:_', '-SPEC:N', 'adjoinable', 'LF:from', '-SPEC:C', '-SPEC:FORCE'}
gave            ['LANG:EN']
give-           {'!COMP:*', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'CLASS:DITR', 'LF:give', 'V', '-COMP:V', 'PHI:DET:_', '-COMP:N', 'PF:give', 'COMP:D', 'LANG:EN', '-VAL', '-COMP:P', '-COMP:FIN', 'PHI:PER:_', 'PHI:GEN:_', '+SEM:directional', 'SPEC:D', 'PHI:NUM:_', '-SPEC:FORCE'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-COMP:D', 'COMP:R/D', 'N', '-SEM:directional', 'PF:Giuseppe', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'LF:Giuseppe', 'COMP:R', '-SPEC:N', 'LANG:IT', '-SPEC:uWH', '-SPEC:FORCE'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'!COMP:*', 'ASP:BOUNDED', 'SPEC:P', 'ASP', 'PF:haluaa', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', 'SEM:internal', '-COMP:N', 'CLASS:TR', 'COMP:D', '-SPEC:*', 'LF:want', '-VAL', '-COMP:P', 'COMP:A/inf', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-SPEC:FORCE'}
hairitsee       ['LANG:FI']
hairitse-       {'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'LF:disturb', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', 'PF:hairitsee', '-VAL', '-COMP:FIN', 'PHI:PER:_', 'SPEC:D', 'LANG:FI', '!COMP:D', 'PHI:NUM:_', '-SPEC:FORCE'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'SPEC:P', 'LF:have', '-COMP:v', 'ARG', 'COMP:T', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'SPEC:*', 'V', 'PHI:DET:_', '-COMP:V', 'SEM:internal', '-COMP:N', '-ASP', '-VAL', 'PF:ha', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:D', 'LANG:IT', 'PHI:NUM:_', '-SPEC:FORCE'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'-COMP:D', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', 'CLASS:INTR', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', 'LF:disappear', '-COMP:N', '-VAL', 'PHI:PER:_', 'SPEC:D', 'PF:havia', 'LANG:FI', 'PHI:NUM:_', '-SPEC:FORCE'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'!COMP:*', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'LF:admire', '-COMP:V', 'PHI:DET:_', '-COMP:N', 'PF:ihaile-', 'CLASS:TR', 'COMP:D', '-VAL', '-COMP:P', '-COMP:FIN', 'PHI:PER:_', 'LANG:FI', '!COMP:D', 'PHI:NUM:_', '-SPEC:FORCE'}
il              {'!COMP:*', '-COMP:D', '-COMP:uR', 'COMP:N', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', '-ARG', 'PF:il', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:P', '-SPEC:D', 'OP', '-SPEC:N', '!PROBE:N', 'LANG:IT', 'adjoinable', 'D', '-SPEC:C', 'LF:the'}
i               {'!COMP:*', '-COMP:D', '-COMP:uR', 'COMP:N', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', '-ARG', 'PF:il', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:P', '-SPEC:D', 'OP', '-SPEC:N', '!PROBE:N', 'LANG:IT', 'adjoinable', 'D', '-SPEC:C', 'LF:the'}
in              {'!COMP:*', '-COMP:uWH', '-SPEC:ADV', 'ARG', 'PHI:NUM:_', 'LF:in', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', 'PHI:DET:_', '-COMP:ADV', '-SPEC:C/fin', '-COMP:N', '-SPEC:iR', '-SPEC:V', 'P', 'PF:in', 'COMP:D', '-SPEC:P', '-VAL', '-SPEC:v', 'PHI:PER:_', '-SPEC:iWH', 'PHI:GEN:_', '-SPEC:N', 'LANG:IT', 'adjoinable', '-SPEC:C', '-SPEC:FORCE'}
infermieri      {'-COMP:D', 'COMP:R/D', 'N', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', 'LF:nurses', '-SPEC:T/fin', 'COMP:uR', '-SPEC:INF', 'SPEC:A', '-COMP:A', 'PF:infermieri', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LANG:IT', '-SPEC:uWH', '-SPEC:FORCE'}
is              ['LANG:EN']
be-             {'!COMP:*', 'LF:be', 'SPEC:P', 'ASP', '-COMP:v', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'COPULA', 'SPEC:TO/inf', 'V', 'PF:be', '-COMP:V', '-COMP:N', 'LANG:EN', '-COMP:TO/inf', '-VAL', 'SPEC:D', '-ARG', '-SPEC:FORCE'}
istuuko         ['LANG:FI']
istuu-          {'-COMP:D', 'SPEC:P', 'PF:istuu', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', 'CLASS:INTR', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', 'LF:sit', '-VAL', 'PHI:PER:_', 'SPEC:D', 'LANG:FI', 'PHI:NUM:_', '-SPEC:FORCE'}
John            ['LANG:EN']
John-           {'-COMP:D', 'COMP:R/D', 'N', '-SEM:directional', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', 'LF:John', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', 'PF:John', 'LANG:EN', '-adjoinable', '-SPEC:P', 'COMP:R', '-SPEC:N', '-SPEC:uWH', '-SPEC:FORCE'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-COMP:D', 'COMP:R/D', 'N', '-SEM:directional', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', 'PF:Jukka', '-SPEC:R', 'LF:Jukka', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LANG:FI', '-SPEC:uWH', '-SPEC:FORCE'}
juosten         ['LANG:FI']
juokse-         {'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', 'LF:run', 'PF:juokse-', '-VAL', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-SPEC:FORCE'}
istuu           ['LANG:FI']
istu-           {'SPEC:P', 'PF:istuu', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', 'LF:sit', '-VAL', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-SPEC:FORCE'}
kaksi           {'SPEC:*', 'ARG', 'PF:kaksi', 'COMP:N', '-VAL', 'PHI:NUM:SG', 'TAIL:ARG,VAL,FIN', 'PHI:PER:_', 'COMP:n', 'LF:two', 'LANG:FI', 'PHI:DET:_', 'NUM', 'PHI:NUM:_'}
kaksi           {'SPEC:*', 'LANG:EN', 'PF:kaksi', 'COMP:N', 'COMP:n', 'LF:two', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'NUM'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'COMP:N', 'COMP:n', 'LF:two', 'LANG:FI', 'PF:kaksi', 'NUM', 'SPEC:*'}
kaupunkia       ['LANG:EN']
kaupunki        {'-COMP:D', 'COMP:R/D', 'N', 'PF:kaupunki', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', '-COMP:P', 'COMP:R', '-SPEC:N', 'LF:city', 'LANG:FI', '-SPEC:uWH', '-SPEC:FORCE'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'SPEC:P', 'ASP', '-COMP:v', '!COMP:A/inf', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', 'LF:order', '-COMP:N', 'SEM:external', '-VAL', 'PHI:PER:_', 'PF:kaske', 'LANG:FI', 'PHI:NUM:_', '-SPEC:FORCE'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-COMP:D', 'COMP:R/D', 'N', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', 'PF:kello', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', 'LF:watch', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LANG:FI', '-SPEC:uWH', '-SPEC:FORCE'}
kello0-         {'2SPEC', 'PF:kello', 'LF:watch', '0', 'SPEC:D', 'LANG:FI'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-COMP:D', 'COMP:R/D', 'N', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', 'PF:key', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', 'LANG:EN', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LF:key', '-SPEC:uWH', '-SPEC:FORCE'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-COMP:D', 'COMP:R/D', 'N', '-SEM:directional', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', 'PF:kirja', '-COMP:A', '-COMP:T/fin', 'LF:book', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LANG:FI', '-SPEC:uWH', '-SPEC:FORCE'}
kohti           {'!COMP:*', 'PF:kohti', 'LF:towards', '-COMP:uWH', '-SPEC:ADV', 'ARG', 'PHI:NUM:_', 'TAIL:V', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', 'SPEC:*', 'PHI:DET:_', '-COMP:ADV', '-SPEC:C/fin', '-COMP:N', '-SPEC:iR', '-SPEC:V', 'P', 'COMP:D', '-SPEC:P', '-VAL', '-SPEC:v', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:N', 'adjoinable', 'LANG:FI', '-SPEC:C', '-SPEC:FORCE'}
koko            {'!COMP:*', '-COMP:D', '-COMP:uR', 'COMP:N', 'TAIL:T', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', '-ARG', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:P', 'LF:all', 'PF:koko', '-SPEC:D', 'OP', 'LANG:FI', '-SPEC:N', '!PROBE:N', 'adjoinable', 'D', '-SPEC:C'}
kuka            ['LANG:FI']
kuka-           {'-COMP:D', 'COMP:R/D', 'N', 'LF:who', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', 'PF:kuka', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'PHI', 'COMP:R', '-SPEC:N', 'LANG:FI', '-SPEC:uWH', '-SPEC:FORCE'}
kuorsaa-        {'-COMP:D', 'SPEC:P', 'ASP', 'PF:kuorsaa', '-COMP:v', 'ARG', 'COMP:P', '-COMP:WH', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', '-COMP:T/fin', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', '-VAL', 'LF:snore', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-SPEC:FORCE'}
kuorsaamalla    ['LANG:FI']
lahella         {'VAL', '-SPEC:ADV', 'ARG', 'COMP:V', '-SPEC:INF', '-COMP:ADV', '!SPEC:*', '-SPEC:P', '-SPEC:v', 'PHI:PER:_', 'PF:lahella', '-SPEC:iWH', '-SPEC:N', 'adjoinable', 'PHI:NUM:_', '-SPEC:FORCE', '!COMP:*', '-COMP:uWH', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LF:near', 'COMP:v', '-COMP:T/fin', 'SPEC:*', 'INF', 'PHI:DET:_', '-SPEC:C/fin', '!SPEC:D', '-COMP:N', '-SPEC:iR', '-COMP:C/fin', '-SPEC:V', 'P', 'COMP:D', 'LANG:FI', '-COMP:FORCE', '-SPEC:C'}
lahella         {'!COMP:*', '-COMP:uWH', '-SPEC:ADV', 'ARG', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LF:near', '-SPEC:INF', '-COMP:T/fin', 'SPEC:*', 'PHI:DET:_', '-COMP:ADV', '-SPEC:C/fin', '-COMP:N', '-SPEC:iR', '-SPEC:V', 'P', 'COMP:D', '-SPEC:P', '-VAL', '-SPEC:v', 'PHI:PER:_', 'PF:lahella', '-SPEC:iWH', '-SPEC:N', 'adjoinable', 'LANG:FI', '!COMP:D', '-SPEC:C', '-SPEC:FORCE'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'-COMP:D', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', 'CLASS:INTR', 'LF:leave', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', 'PF:lahtea', '-VAL', 'PHI:PER:_', 'COMP:PP', 'SPEC:D', 'LANG:FI', 'PHI:NUM:_', '-SPEC:FORCE'}
lavano          ['LANG:IT']
lava-           {'!COMP:*', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'LF:wash', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', 'COMP:D', 'PF:lava', '-VAL', 'PHI:PER:_', 'PHI:GEN:_', 'LANG:IT', 'PHI:NUM:_', '-SPEC:FORCE'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'!COMP:*', '-COMP:D', '-COMP:uR', 'COMP:N', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LF:D', '-SPEC:INF', '-COMP:T/fin', '-ARG', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:P', '-SPEC:D', 'PF:le', 'OP', '-SPEC:N', '!PROBE:N', 'LANG:IT', 'adjoinable', 'D', '-SPEC:C'}
leaves          ['LANG:EN']
leave           {'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'LF:leave', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', '!SPEC:D', '-COMP:N', 'LANG:EN', '-VAL', 'PHI:PER:_', 'PHI:GEN:_', 'PF:leave', 'PHI:NUM:_', '-SPEC:FORCE'}
leave-          {'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'LF:leave', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', '!SPEC:D', '-COMP:N', 'LANG:EN', '-VAL', 'PHI:PER:_', 'PHI:GEN:_', 'PF:leave', 'PHI:NUM:_', '-SPEC:FORCE'}
like-           {'PF:like', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'LF:like', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', 'LANG:EN', '-VAL', 'PHI:PER:_', 'PHI:GEN:_', '!COMP:D', 'PHI:NUM:_', '-SPEC:FORCE'}
likes           ['LANG:EN']
like            {'PF:like', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'LF:like', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', 'LANG:EN', '-VAL', 'PHI:PER:_', 'PHI:GEN:_', '!COMP:D', 'PHI:NUM:_', '-SPEC:FORCE'}
little          ['LANG:EN']
little-         {'2SPEC', 'LF:little', '0', 'SPEC:D', 'LANG:EN', 'PF:little-'}
lle             {'!COMP:*', 'TAIL:V,+SEM:directional', '-COMP:uWH', '-SPEC:ADV', 'ARG', 'PHI:NUM:_', 'LF:for', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', 'PHI:DET:_', '-COMP:ADV', '-SPEC:C/fin', '-COMP:N', '-SPEC:iR', '-SPEC:V', 'P', 'COMP:D', 'PF:P(lle)', '-SPEC:P', '-SPEC:*', '-VAL', '-SPEC:v', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:N', '+SEM:directional', 'adjoinable', 'LANG:FI', '-SPEC:C', '-SPEC:FORCE'}
lla             {'!COMP:*', 'PF:P(lla)', '-COMP:uWH', '-SPEC:ADV', 'ARG', 'TAIL:T', 'PHI:NUM:_', 'LF:by', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', 'SPEC:*', 'PHI:DET:_', '-COMP:ADV', '-SPEC:C/fin', '-COMP:N', '-SPEC:iR', '-SPEC:V', 'P', 'COMP:D', '-SPEC:P', '-VAL', 'TAIL:*V', '-SPEC:v', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:N', 'adjoinable', 'LANG:FI', '-SPEC:C', '-SPEC:FORCE'}
Luisa           ['LANG:IT']
Luisa-          {'-COMP:D', 'COMP:R/D', 'N', '-SEM:directional', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'COMP:R', '-SPEC:N', 'PF:Luisa', 'LANG:IT', 'LF:Luisa', '-SPEC:uWH', '-SPEC:FORCE'}
lukemalla       ['LANG:FI']
luke-           {'!COMP:*', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', 'LF:read', '-SPEC:T/fin', 'SPEC:TO/inf', 'PF:luke', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', 'CLASS:TR', 'COMP:D', '-VAL', '-COMP:P', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-SPEC:FORCE'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'!COMP:*', 'ASP:BOUNDED', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', 'CLASS:TR', 'LF:find', 'COMP:D', '-VAL', '-COMP:P', 'PHI:PER:_', 'LANG:FI', '!COMP:D', 'PF:loyta-', 'PHI:NUM:_', '-SPEC:FORCE'}
Mary            ['LANG:EN']
Mary-           {'-COMP:D', 'COMP:R/D', 'N', '-SEM:directional', '-COMP:v', 'LF:Mary', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', 'LANG:EN', '-adjoinable', '-SPEC:P', 'COMP:R', '-SPEC:N', 'PF:Mary', '-SPEC:uWH', '-SPEC:FORCE'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-COMP:D', 'COMP:R/D', 'N', '-SEM:directional', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', 'PF:Merja', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-adjoinable', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LANG:FI', 'LF:Merja', '-SPEC:uWH', '-SPEC:FORCE'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'ADV', 'MA/inf', 'TAIL:T', 'LF:by', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:N', 'COMP:v', 'adjoinable', 'LANG:FI', 'PF:malla', 'SPEC:*', '-SPEC:FORCE'}
meren           ['LANG:FI']
mere-           {'-COMP:D', 'COMP:R/D', 'N', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', 'LF:ocean', '-SPEC:V', '-SPEC:P', 'COMP:R', 'PF:meri', '-SPEC:N', 'LANG:FI', '-SPEC:uWH', '-SPEC:FORCE'}
mistake         {'-COMP:D', 'LF:mistake', 'N', 'COMP:R/D', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', 'LANG:EN', '-SPEC:P', 'PF:mistake', 'COMP:R', '-SPEC:N', '-SPEC:uWH', '-SPEC:FORCE'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-COMP:D', 'COMP:R/D', 'N', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'COMP:R', 'LANG:FI', '-SPEC:N', 'LF:what', 'PF:mika-', '-SPEC:FORCE'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'!COMP:*', 'LANGN:EN', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'PF:move', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', 'CLASS:TR', 'LF:move', 'COMP:D', '-VAL', '-COMP:P', 'PHI:PER:_', 'PHI:GEN:_', '+SEM:directional', 'PHI:NUM:_', '-SPEC:FORCE'}
mukavasti       ['LANG:EN']
mukava-         {'A', 'TAIL:D', 'COMP:0', 'PF:mukavasti', '-SPEC:D', 'LF:comfortably', '-SPEC:A', 'adjoinable', 'LANG:FI', 'SPEC:*'}
must            {'T/fin', '!COMP:*', 'VAL', 'PF:must', '!PROBE:V', 'ARG', 'COMP:T/prt', 'COMP:V', '-SPEC:T/fin', 'SPEC:TO/inf', 'COMP:v', 'MODAL', '-COMP:T/fin', 'PHI:DET:_', 'LF:must', 'SPEC:*', '-SPEC:C/fin', '!SPEC:D', '!SPEC:*', 'FIN', 'T', '-SPEC:V', 'COMP:Neg', 'COMP:D', 'LANG:EN', '-COMP:INF', '-SPEC:v', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:N', 'SPEC:D', 'PHI:NUM:_', '-SPEC:FORCE'}
naki            ['LANG:FI']
nake-           {'!COMP:*', 'ASP:BOUNDED', 'SPEC:P', 'ASP', 'LF:see', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-COMP:ESSA/inf', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PF:nake', '-COMP:V', '-COMP:MA/inf', 'PHI:DET:_', '-COMP:N', 'CLASS:TR', 'COMP:D', '-VAL', '-COMP:P', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-SPEC:FORCE'}
nayttaa         ['LANG:FI']
naytta-         {'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', 'SEM:internal', '!COMP:VA/inf', '-COMP:N', 'LF:seem', '-VAL', 'PHI:PER:_', 'SPEC:D', 'LANG:FI', 'PF:naytta', 'PHI:NUM:_', '-SPEC:FORCE'}
ndo             {'!COMP:*', '-COMP:C/fin', 'VAL', '-SPEC:V', 'LANG:EN', '?ARG', 'PF:PRG', 'COMP:V', '-SPEC:T/fin', 'COMP:v', 'INF', 'LF:ing', '-COMP:FORCE', 'PRG'}
ne              {'!COMP:*', '-COMP:D', '-COMP:uR', 'COMP:N', '-SPEC:T/fin', '-SPEC:Neg/fin', 'PHI:NUM:PL', '-SPEC:INF', '-COMP:T/fin', '-ARG', '-SPEC:V', 'LF:those', '-SPEC:MA/lla', '-SPEC:P', '-SPEC:D', 'OP', 'PF:ne', '-SPEC:N', 'adjoinable', 'PHI:PER:3', 'LANG:FI', '!PROBE:N', 'D', '-SPEC:C'}
niiden          ['LANG:EN']
nen             {'PF:a', 'A', 'TAIL:D', 'SPEC:*', 'COMP:0', '-SPEC:D', '-SPEC:A', 'adjoinable', 'LANG:FI', 'LF:ing'}
not             {'-COMP:D', '!COMP:*', 'Neg', 'LF:not', 'ARG', 'LANG:EN', '-VAL', '-COMP:C', '-COMP:FIN', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:GEN:_', 'POL:NEG', 'SPEC:*', 'PHI:DET:_', 'PF:not', 'PHI:NUM:_'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-COMP:D', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'PHI:NUM:_', 'COMP:P', 'SPEC:ADV', 'CLASS:INTR', '-SPEC:T/fin', 'SPEC:TO/inf', '-COMP:Neg/fin', '-COMP:T/fin', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', 'LF:sleep', '-VAL', '-COMP:T', 'PHI:PER:_', 'SPEC:D', 'LANG:FI', 'PF:nukku', '-SPEC:FORCE'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
operatoria      ['LANG:IT']
operatoria-     {'2SPEC', '0', 'LANG:IT', 'SPEC:D', 'PF:operatoria', 'LF:operation'}
ostaa           ['LANG:FI']
osta-           {'!COMP:*', 'ASP:BOUNDED', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'PF:osta', 'SPEC:TO/inf', 'V', 'LF:buy', '-COMP:V', 'PHI:DET:_', '-COMP:N', 'CLASS:TR', 'COMP:D', '-VAL', '-COMP:P', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-SPEC:FORCE'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-COMP:D', 'COMP:R/D', 'N', '-COMP:v', 'PF:paiva', '-SPEC:ADV', 'SEM:nonreferential', '-COMP:AUX', 'COMP:P', '-COMP:WH', 'LF:day', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LANG:FI', '-SPEC:uWH', '-SPEC:FORCE'}
Pariisia        ['LANG:FI']
Pariisi-        {'-COMP:D', 'COMP:R/D', 'N', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'PF:Pariisi', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'LF:Paris', 'COMP:R', '-SPEC:N', 'LANG:FI', '-SPEC:uWH', '-SPEC:FORCE'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-COMP:D', 'COMP:R/D', 'N', '-SEM:directional', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', 'LF:Pekka', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'COMP:R', 'PF:Pekka', '-SPEC:N', 'LANG:FI', '-SPEC:uWH', '-SPEC:FORCE'}
pelottaa        ['LANG:FI']
pelkaa-         {'!COMP:*', 'PF:pelkaa', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'LF:fear', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', 'CLASS:TR', 'COMP:D', '-VAL', '-COMP:P', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-SPEC:FORCE'}
persuades       ['LANG:EN']
persuade-       {'SPEC:P', 'ASP', 'PF:persuade', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', 'COMP:TO/inf', '-COMP:N', 'SEM:external', 'LANG:EN', '-VAL', 'PHI:PER:_', 'PHI:GEN:_', 'LF:persuade', 'PHI:NUM:_', '-SPEC:FORCE'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'!COMP:*', 'ASP:BOUNDED', 'SPEC:P', 'ASP', '-COMP:v', 'PF:pese', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'LF:wash', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', 'CLASS:TR', 'COMP:D', '-VAL', '-COMP:P', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-SPEC:FORCE'}
pese-           {'!COMP:*', 'SPEC:P', 'ASP', '-COMP:v', 'PF:pese', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'LF:wash', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', 'CLASS:TR', 'COMP:D', '-VAL', '-COMP:P', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-SPEC:FORCE'}
petardi         {'-COMP:D', 'COMP:R/D', 'N', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', 'PF:petardi', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LANG:IT', 'LF:firecrackers', '-SPEC:uWH', '-SPEC:FORCE'}
pieni           ['LANG:FI']
pieni-          {'2SPEC', 'PF:pieni-', 'SPEC:D', '0', 'LF:small', 'LANG:FI'}
poikien         ['LANG:FI']
poika-          {'-COMP:D', 'PF:poika', 'COMP:R/D', 'N', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'LF:boy', 'COMP:R', '-SPEC:N', 'LANG:FI', '-SPEC:uWH', '-SPEC:FORCE'}
puhelinta       ['LANG:FI']
puhelin-        {'2SPEC', 'SPEC:D', '0', 'LF:phone', 'LANG:FI', 'PF:puhelin'}
punainen        ['LANG:FI']
puna-           {'PF:puna-', '2SPEC', '0', 'LF:red', 'SPEC:D', 'LANG:FI'}
presupposto     {'-COMP:D', 'COMP:R/D', 'N', '-COMP:v', '-SPEC:ADV', 'LF:presupposition', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', 'PF:presupposto', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LANG:IT', '-SPEC:uWH', '-SPEC:FORCE'}
primary         {'-COMP:D', 'COMP:R/D', 'N', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'LF:nurse', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'PF:primary', 'COMP:R', '-SPEC:N', 'LANG:IT', '-SPEC:uWH', '-SPEC:FORCE'}
promises        ['LANG:EN']
promise-        {'SPEC:P', 'ASP', '-COMP:v', 'PF:promise', 'ARG', 'LF:promise', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', 'SEM:internal', '-COMP:N', 'COMP:D', 'LANG:EN', '-VAL', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:D', 'PHI:NUM:_', '-SPEC:FORCE'}
pyytaa          ['LANG:FI']
pyyta-          {'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', 'PF:pyyda', '-VAL', 'PHI:PER:_', 'LF:ask', 'LANG:FI', 'PHI:NUM:_', '-SPEC:FORCE'}
raukesi         ['LANG:FI']
raukea-         {'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'PF:raukea', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', '-VAL', 'PHI:PER:_', 'LF:terminate', 'LANG:FI', 'PHI:NUM:_', '-SPEC:FORCE'}
red             ['LANG:EN']
red-            {'2SPEC', 'SPEC:D', '0', 'PF:red', 'LF:red', 'LANG:EN'}
saavuttaa       ['LANG:FI']
saavutta-       {'!COMP:*', 'ASP:BOUNDED', 'SPEC:P', 'ASP', 'LF:reach', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', '!COMP:D', '-COMP:N', 'CLASS:TR', 'COMP:D', '-VAL', '-COMP:P', 'PHI:PER:_', 'LANG:FI', 'PF:saavutta-', 'PHI:NUM:_', '-SPEC:FORCE'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'SPEC:P', 'ASP', 'COMP:VA/inf', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', 'LF:say', 'PF:sano-', '-COMP:N', '-VAL', 'PHI:PER:_', 'COMP:FORCE', 'SPEC:D', 'LANG:FI', 'PHI:NUM:_', '-SPEC:FORCE'}
said            ['LANG:EN']
say'            {'SPEC:P', 'ASP', '!COMP:FORCE', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', 'LF:say', '-COMP:N', 'LANG:EN', '-VAL', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:D', 'PF:say', 'PHI:NUM:_', '-SPEC:FORCE'}
say-            {'SPEC:P', 'ASP', '!COMP:FORCE', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', 'LF:say', '-COMP:N', 'LANG:EN', '-VAL', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:D', 'PF:say', 'PHI:NUM:_', '-SPEC:FORCE'}
sala            ['LANG:IT']
sala-           {'-COMP:D', 'COMP:R/D', 'N', '-COMP:v', '-SPEC:ADV', 'LF:room', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', 'PF:sala', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LANG:IT', '-SPEC:uWH', '-SPEC:FORCE'}
scoppiati       ['LANG:IT']
scoppia-        {'SPEC:P', 'ASP', 'LF:explode', '-COMP:v', 'PF:scoppia', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', '-VAL', 'PHI:PER:_', 'PHI:GEN:_', 'LANG:IT', 'PHI:NUM:_', '-SPEC:FORCE'}
sen             {'!COMP:*', '-COMP:D', 'LF:the/that', '-COMP:uR', 'COMP:N', 'TAIL:ASP', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', 'TAIL:*POL:NEG', '-ARG', '-SPEC:V', '-SPEC:MA/lla', 'TAIL:PHI', '-SPEC:P', '-SPEC:D', 'PF:sen', 'OP', '-SPEC:N', '!PROBE:N', 'adjoinable', 'LANG:FI', 'D', '-SPEC:C'}
se'             {'!COMP:*', '-COMP:D', 'LF:the/that', '-COMP:uR', 'COMP:N', 'PF:se', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', '-ARG', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:P', '-SPEC:D', 'OP', '-SPEC:N', '!PROBE:N', 'adjoinable', 'LANG:FI', 'D', '-SPEC:C'}
sentenza        {'-COMP:D', 'COMP:R/D', 'N', '-COMP:v', '-SPEC:ADV', 'LF:sentence', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-SPEC:uWH', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LANG:IT', 'PF:sentenza', '-SPEC:FORCE'}
Seine           ['LANG:EN']
Seine-          {'-COMP:D', 'COMP:R/D', 'N', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', 'LF:Seine', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', 'PF:Seine', 'LANG:EN', '-SPEC:P', 'COMP:R', '-SPEC:N', '-SPEC:uWH', '-SPEC:FORCE'}
sembrano        ['LANG:IT']
sembra-         {'-COMP:D', '!COMP:ARE/inf', 'SPEC:P', '-COMP:v', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', '-COMP:V', '-COMP:N', '-ASP', 'LF:seem', 'LANG:EN', 'PF:sembra', '-VAL', 'SPEC:D', '-ARG', '-SPEC:FORCE'}
sleeps          ['LANG:EN']
sleep           {'-COMP:D', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', 'CLASS:INTR', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', 'LF:sleep', 'PF:sleep', 'LANG:EN', '-VAL', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:D', 'PHI:NUM:_', '-SPEC:FORCE'}
sleep-          {'-COMP:D', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', 'CLASS:INTR', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', 'LF:sleep', 'PF:sleep', 'LANG:EN', '-VAL', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:D', 'PHI:NUM:_', '-SPEC:FORCE'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-COMP:D', 'COMP:R/D', 'N', '-COMP:v', '-SPEC:ADV', '!COMP:A/inf', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', 'LF:agreement', 'PF:sopimus', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LANG:FI', '-SPEC:uWH', '-SPEC:FORCE'}
spinge          ['LANG:IT']
spinge-         {'LF:push', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', '-VAL', 'PF:spinge', '-COMP:P', 'PHI:PER:_', 'PHI:GEN:_', 'LANG:IT', '!COMP:D', 'PHI:NUM:_', '-SPEC:FORCE'}
ssa             {'!COMP:*', '-COMP:uWH', '-SPEC:ADV', 'ARG', 'PHI:NUM:_', 'TAIL:V', 'LF:in', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', 'SPEC:*', 'PHI:DET:_', '-COMP:ADV', '-SPEC:C/fin', '-COMP:N', '-SPEC:iR', 'COMP:n/MA', '-SPEC:V', 'P', 'COMP:D', '-SPEC:P', '-VAL', '-SPEC:v', 'PHI:PER:_', 'PF:ssa', '-SPEC:iWH', '-SPEC:N', 'adjoinable', 'LANG:FI', '-SPEC:C', '-SPEC:FORCE'}
stanno          ['LANG:IT']
sta-            {'SPEC:P', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', 'LF:stay', 'COMP:PRG', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', 'SEM:internal', '-COMP:N', '-ASP', 'LANG:EN', 'PF:sta', '-VAL', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:D', 'PHI:NUM:_', '-SPEC:FORCE'}
sti             {'ADV', 'adjoinable', 'PF:sti', 'LF:by', '-SPEC:Neg/fin', '!COMP:A', 'LANG:FI', '-SPEC:T/fin', '-SPEC:N', '-ARG', 'SPEC:*', '-SPEC:FORCE'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-COMP:D', 'COMP:R/D', 'N', '-COMP:v', '-SPEC:ADV', 'LF:socks', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', 'PF:sukka-', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LANG:FI', '-SPEC:uWH', '-SPEC:FORCE'}
talo            {'-COMP:D', 'COMP:R/D', 'N', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:FORCE', '-SPEC:V', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LANG:FI', 'PF:talo', '-SPEC:uWH', 'LF:house'}
tama            ['LANG:EN']
tama-           {'-COMP:D', 'COMP:R/D', 'N', '-COMP:v', '-SPEC:ADV', 'PF:tama', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', 'LF:this', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'PHI', 'COMP:R', '-SPEC:N', 'LANG:FI', '-SPEC:uWH', '-SPEC:FORCE'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'SPEC:P', '-COMP:v', '!COMP:A/inf', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'MODAL', 'SPEC:*', 'V', 'LF:must', '-COMP:V', 'PF:taytyy', 'PHI:DET:_', '-COMP:N', 'FIN', '-ASP', '-VAL', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-SPEC:FORCE'}
teki            ['LANG:FI']
teke-           {'!COMP:*', 'ASP:BOUNDED', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'PF:teke', 'COMP:P', 'SPEC:ADV', 'LF:make', '-SPEC:T/fin', 'SPEC:TO/inf', '-COMP:A/inf', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', 'CLASS:TR', 'COMP:D', '-VAL', '-COMP:P', 'PHI:PER:_', 'LANG:FI', '!COMP:D', 'PHI:NUM:_', '-SPEC:FORCE'}
that            {'!COMP:*', '!PROBE:T/fin', 'FIN', 'LF:that', 'LANG:EN', 'COMP:T/fin', '-SPEC:*', '-VAL', '-ARG', 'COMP:C/fin', 'FORCE', 'PF:that'}
the             {'!COMP:*', '-COMP:D', '-COMP:uR', 'COMP:N', 'PHI:DEF:DEF', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', '-ARG', '-SPEC:V', 'LANG:EN', '-SPEC:MA/lla', '-SPEC:P', 'PF:the', '-SPEC:D', 'OP', '-SPEC:N', '!PROBE:N', 'adjoinable', 'D', '-SPEC:C', 'LF:the'}
to              {'!COMP:*', 'TAIL:V,+SEM:directional', '-COMP:uWH', '-SPEC:ADV', 'ARG', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', 'PHI:DET:_', '-COMP:ADV', '-SPEC:C/fin', '-COMP:N', '-SPEC:iR', '-SPEC:V', 'P', 'COMP:D', 'LANG:EN', '-SPEC:P', '-SPEC:*', 'LF:to', '-VAL', '-SPEC:v', 'PF:to', 'PHI:PER:_', '-SPEC:iWH', 'PHI:GEN:_', '-SPEC:N', '+SEM:directional', 'adjoinable', '-SPEC:C', '-SPEC:FORCE'}
to_inf          {'!COMP:*', '?ARG', 'TO/inf', 'COMP:V', '-SPEC:T/fin', 'LF:TO/inf', 'COMP:v', 'INF', 'PF:TO/inf', '-COMP:C/fin', '-SPEC:V', 'LANG:EN', '-VAL', '-SPEC:v', 'adjoinable', '-COMP:FORCE'}
towards         {'!COMP:*', 'LF:towards', '-COMP:uWH', '-SPEC:ADV', 'ARG', 'PHI:NUM:_', 'TAIL:V', '-SPEC:T/fin', 'PF:towards', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', 'PHI:DET:_', '-COMP:ADV', '-SPEC:C/fin', '-COMP:N', '-SPEC:iR', '-SPEC:V', 'P', 'COMP:D', 'LANG:EN', '-SPEC:P', '-SPEC:*', '-VAL', '-SPEC:v', 'PHI:PER:_', '-SPEC:iWH', 'PHI:GEN:_', '-SPEC:N', 'adjoinable', '-SPEC:C', '-SPEC:FORCE'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'!COMP:*', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', 'CLASS:TR', 'COMP:D', '-VAL', '-COMP:P', 'PHI:PER:_', 'PF:tonaise', 'LF:nudge', 'LANG:FI', 'PHI:NUM:_', '-SPEC:FORCE'}
tta             {'!COMP:*', '-COMP:uWH', '-SPEC:ADV', 'ARG', 'PHI:NUM:_', 'LF:without', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', 'SPEC:*', 'PHI:DET:_', '-COMP:ADV', '-SPEC:C/fin', '-COMP:N', '-SPEC:iR', 'ADV', 'COMP:n/MA', '-SPEC:V', 'P', 'COMP:D', '-SPEC:P', '-VAL', '-SPEC:v', 'PF:tta', '-SPEC:iWH', 'PHI:PER:_', '-SPEC:N', 'adjoinable', 'LANG:FI', '-SPEC:C', '-SPEC:FORCE'}
tries           ['LANG:EN']
try-            {'SPEC:P', 'ASP', 'LF:try', '-COMP:v', '!COMP:-ARG', '!COMP:TO/inf', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', 'SEM:internal', '-COMP:N', 'LANG:EN', 'PF:try', '-VAL', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:D', 'PHI:NUM:_', '-SPEC:FORCE'}
verifiche       {'-COMP:D', 'COMP:R/D', 'N', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'PF:verifiche', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'COMP:R', 'LF:verification', '-SPEC:N', 'LANG:IT', '-SPEC:uWH', '-SPEC:FORCE'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'-COMP:D', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'PHI:NUM:_', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', 'LF:flow', '-COMP:N', '-VAL', 'PHI:PER:_', '!COMP:P', 'SPEC:D', 'LANG:FI', 'PF:virtaa', '-SPEC:FORCE'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'!COMP:*', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'PF:volu', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', 'SEM:internal', '-COMP:N', 'LANG:EN', '-SPEC:*', 'LF:want', '-VAL', 'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', '-SPEC:FORCE'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'!COMP:*', 'ASP:BOUNDED', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'LF:win', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PF:voitta', 'SEM:achievement', '-COMP:V', 'PHI:DET:_', '-COMP:N', 'CLASS:TR', 'COMP:D', 'LANG:EN', '-VAL', '-COMP:P', 'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', '-SPEC:FORCE'}
wants           ['LANG:EN']
want-           {'!COMP:*', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', 'COMP:TO/inf', '-COMP:N', 'CLASS:TR', 'COMP:D', 'LANG:EN', 'LF:want', '-VAL', '-COMP:P', 'PF:want', 'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', '-SPEC:FORCE'}
what            ['LANG:EN']
what-           {'-COMP:D', 'PHI_N', 'N', 'COMP:R/D', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:*', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', 'PF:what', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', 'LANG:EN', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LF:what', '-SPEC:uWH', '-SPEC:FORCE'}
which           {'!COMP:*', '-COMP:D', '-COMP:uR', 'COMP:N', '-SPEC:T/fin', '-SPEC:Neg/fin', 'OP:WH', '-SPEC:INF', 'D', '-COMP:T/fin', '-ARG', '-SPEC:V', 'LANG:EN', '-SPEC:MA/lla', '-SPEC:P', '-SPEC:D', 'PF:which', 'OP', '-SPEC:N', '!PROBE:N', 'adjoinable', 'LF:which', '-SPEC:C'}
who             ['LANG:EN']
who-            {'-COMP:D', 'PHI_N', 'N', 'COMP:R/D', 'LF:who', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:*', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', 'LANG:EN', '-SPEC:P', 'PF:who', 'COMP:R', '-SPEC:N', '-SPEC:uWH', '-SPEC:FORCE'}
whether         {'!COMP:*', '!PROBE:T/fin', 'OP:WH', 'LF:whether', 'OP:Q', 'COMP:C/fin', 'FORCE', 'FIN', 'LANG:EN', 'COMP:T/fin', '-SPEC:*', '-VAL', 'Q', 'OP', 'PF:whether', '-ARG'}
yrittaa         ['LANG:FI']
yritta-         {'SPEC:P', 'ASP', 'LF:try', '-COMP:v', '!COMP:-ARG', '!COMP:A/inf', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', 'SEM:internal', '-COMP:N', 'LANG:EN', '-VAL', 'PF:yritta', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:D', 'PHI:NUM:_', '-SPEC:FORCE'}
mina            ['LANG:EN']
mina-           {'-COMP:D', 'PHI_N', 'N', 'COMP:R/D', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'LF:I', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:*', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', 'PF:mina', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LANG:FI', '-SPEC:uWH', '-SPEC:FORCE'}
sina            ['LANG:EN']
sina-           {'-COMP:D', 'PHI_N', 'N', 'COMP:R/D', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', 'PF:sina', '-SPEC:INF', '-COMP:A', '-COMP:*', '-COMP:T/fin', '-COMP:ADV', 'LF:you', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LANG:FI', '-SPEC:uWH', '-SPEC:FORCE'}
han             ['LANG:EN']
han-            {'-COMP:D', 'PHI_N', 'N', 'COMP:R/D', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:*', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:FORCE', '-SPEC:V', '-SPEC:P', 'COMP:R', 'LF:s/he', '-SPEC:N', 'LANG:FI', '-SPEC:uWH', 'PF:han'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-COMP:D', 'PHI_N', 'N', 'COMP:R/D', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:*', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', 'PF:me', '-COMP:N', 'LF:we', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LANG:FI', '-SPEC:uWH', '-SPEC:FORCE'}
te              ['LANG:EN']
te-             {'-COMP:D', 'PHI_N', 'N', 'COMP:R/D', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:*', '-COMP:T/fin', '-COMP:ADV', 'LF:you', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'COMP:R', 'PF:te', '-SPEC:N', 'LANG:FI', '-SPEC:uWH', '-SPEC:FORCE'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he-             {'-COMP:D', 'PHI_N', 'N', 'COMP:R/D', '-COMP:v', 'PF:he', '-SPEC:ADV', '-COMP:AUX', 'LF:they', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:*', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LANG:FI', '-SPEC:uWH', '-SPEC:FORCE'}
he-             {'-COMP:D', 'PHI_N', 'N', 'COMP:R/D', '-COMP:v', 'PF:he', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:*', '-COMP:T/fin', 'LF:he', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', 'LANG:EN', '-SPEC:P', 'COMP:R', '-SPEC:N', '-SPEC:uWH', '-SPEC:FORCE'}
se              ['LANG:FI']
se-             {'!COMP:*', '-COMP:D', '-COMP:uR', 'COMP:N', 'PF:se', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', '-SPEC:C', '-ARG', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:P', '-SPEC:D', 'OP', '-SPEC:N', '!PROBE:N', 'adjoinable', 'LANG:FI', 'D', 'LF:it/that'}
I               ['LANG:EN']
I-              {'-COMP:D', 'PHI_N', 'N', 'COMP:R/D', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'LF:I', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:*', '-COMP:T/fin', 'PF:I', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', 'LANG:EN', '-SPEC:P', 'COMP:R', '-SPEC:N', '-SPEC:uWH', '-SPEC:FORCE'}
you             ['LANG:EN']
you-            {'-COMP:D', 'PHI_N', 'N', 'COMP:R/D', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:*', '-COMP:T/fin', '-COMP:ADV', 'LF:you', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', 'PF:you', 'LANG:EN', '-SPEC:P', 'COMP:R', '-SPEC:N', '-SPEC:uWH', '-SPEC:FORCE'}
he              ['LANG:EN']
she             ['LANG:EN']
she-            {'-COMP:D', 'PHI_N', 'N', 'COMP:R/D', '-COMP:v', '-SPEC:ADV', 'LF:she', '-COMP:AUX', 'COMP:P', '-COMP:WH', 'PF:she', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:*', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', 'LANG:EN', '-SPEC:P', 'COMP:R', '-SPEC:N', '-SPEC:uWH', '-SPEC:FORCE'}
we              ['LANG:EN']
we-             {'-COMP:D', 'PHI_N', 'N', 'COMP:R/D', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:*', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', 'LF:we', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', 'LANG:EN', '-SPEC:P', 'COMP:R', '-SPEC:N', 'PF:we', '-SPEC:uWH', '-SPEC:FORCE'}
you_pl          ['LANG:EN']
you_pl-         {'-COMP:D', 'COMP:R/D', 'N', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', 'LF:you_pl', '-COMP:C/fin', '-SPEC:V', 'LANG:EN', '-SPEC:P', 'PHI', 'COMP:R', 'PF:you_pl', '-SPEC:N', '-SPEC:uWH', '-SPEC:FORCE'}
they            ['LANG:EN']
they-           {'-COMP:D', 'PHI_N', 'N', 'COMP:R/D', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'LF:they', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:*', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', 'PF:they', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', 'LANG:EN', '-SPEC:P', 'COMP:R', '-SPEC:N', '-SPEC:uWH', '-SPEC:FORCE'}
it              ['LANG:EN']
it-             {'!COMP:*', '-COMP:D', '-COMP:uR', 'COMP:N', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', '-SPEC:C', '-ARG', '-SPEC:V', 'PF:it', 'LANG:EN', '-SPEC:MA/lla', '-SPEC:P', '-SPEC:D', 'OP', '-SPEC:N', '!PROBE:N', 'adjoinable', 'D', 'LF:it/that'}
io              ['LANG:EN']
io-             {'-COMP:D', 'PHI_N', 'N', 'COMP:R/D', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'LF:I', 'COMP:P', '-COMP:WH', 'PF:io', '-SPEC:T/fin', 'COMP:uR', '-SPEC:INF', 'SPEC:A', '-COMP:A', '-COMP:*', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LANG:IT', '-SPEC:uWH', '-SPEC:FORCE'}
tu              ['LANG:EN']
tu-             {'-COMP:D', 'PHI_N', 'N', 'COMP:R/D', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:*', '-COMP:T/fin', '-COMP:ADV', 'LF:you', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', 'PF:tu', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LANG:IT', '-SPEC:uWH', '-SPEC:FORCE'}
lui             ['LANG:EN']
lui-            {'-COMP:D', 'PHI_N', 'N', 'COMP:R/D', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', 'PF:lui', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:*', '-COMP:T/fin', 'LF:he', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LANG:IT', '-SPEC:uWH', '-SPEC:FORCE'}
lei             ['LANG:EN']
lei-            {'-COMP:D', 'PHI_N', 'N', 'COMP:R/D', '-COMP:v', '-SPEC:ADV', 'LF:she', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:*', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', 'PF:lei', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LANG:IT', '-SPEC:uWH', '-SPEC:FORCE'}
noi             ['LANG:EN']
noi-            {'-COMP:D', 'PHI_N', 'N', 'COMP:R/D', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:*', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', 'LF:we', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', 'PF:noi', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LANG:IT', '-SPEC:uWH', '-SPEC:FORCE'}
voi             ['LANG:EN']
voi-            {'-COMP:D', 'PHI_N', 'N', 'COMP:R/D', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', 'PF:voi', '-COMP:A', '-COMP:*', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', 'LF:you_pl', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'COMP:R', '-SPEC:N', 'LANG:IT', '-SPEC:uWH', '-SPEC:FORCE'}
loro            ['LANG:EN']
loro-           {'-COMP:D', 'PHI_N', 'N', 'COMP:R/D', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'LF:they', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:*', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'PF:loro', 'COMP:R', '-SPEC:N', 'LANG:IT', '-SPEC:uWH', '-SPEC:FORCE'}
mi              ['LANG:EN']
mi-             {'-COMP:D', 'PHI_N', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', 'COMP:uR', '-SPEC:INF', '-COMP:ADV', '-SPEC:R', '-SPEC:P', '-SPEC:N', 'LANG:IT', '-SPEC:FORCE', 'COMP:R/D', 'N', 'LF:me', 'CL', '-COMP:WH', 'PF:mi(cl)', '-SPEC:T/fin', 'SPEC:A', '-COMP:A', '-COMP:*', '-COMP:T/fin', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-COMP:C/fin', '-SPEC:V', 'COMP:R', '-SPEC:uWH'}
la              ['LANG:EN']
la-             {'-COMP:D', 'PHI_N', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', 'COMP:uR', '-SPEC:INF', '-COMP:ADV', '-SPEC:R', '-SPEC:P', '-SPEC:N', 'LANG:IT', '-SPEC:FORCE', 'COMP:R/D', 'N', 'CL', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:A', '-COMP:*', '-COMP:T/fin', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-COMP:C/fin', '-SPEC:V', 'COMP:R', 'PF:la(cl)', '-SPEC:uWH', 'LF:her'}
lo              ['LANG:EN']
lo-             {'-COMP:D', 'PHI_N', 'LF:him', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', 'COMP:uR', '-SPEC:INF', '-COMP:ADV', '-SPEC:R', '-SPEC:P', '-SPEC:N', 'LANG:IT', '-SPEC:FORCE', 'COMP:R/D', 'N', 'CL', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:A', '-COMP:*', '-COMP:T/fin', '-COMP:V', '-SPEC:C/fin', '-COMP:N', 'PF:lo(cl)', '-COMP:C/fin', '-SPEC:V', 'COMP:R', '-SPEC:uWH'}
si              ['LANG:EN']
si-             {'-COMP:D', 'PHI_N', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', 'COMP:uR', '-SPEC:INF', 'LF:3sg', '-COMP:ADV', '-SPEC:R', '-SPEC:P', '-SPEC:N', 'LANG:IT', '-SPEC:FORCE', 'COMP:R/D', 'N', 'CAL:CL', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', '-COMP:A', '-COMP:*', '-COMP:T/fin', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-COMP:C/fin', '-SPEC:V', 'COMP:R', 'PF:si(cl)', '-SPEC:uWH'}
gli             ['LANG:EN']
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-COMP:D', 'PHI_N', 'N', 'COMP:R/D', '-COMP:v', '-SPEC:ADV', 'LF:there', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:*', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', '-SPEC:P', 'COMP:R', 'PF:ci', '-SPEC:N', 'LANG:IT', '-SPEC:uWH', '-SPEC:FORCE'}
[-n]            {'inflectional', 'PHI:PER:1', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI'}
[-t]            {'PHI:PER:2', 'inflectional', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI'}
[-V]            {'inflectional', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'PHI'}
[-mme]          {'inflectional', 'PHI:NUM:PL', 'PHI:PER:1', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI'}
[-mme]          {'inflectional', 'PHI:NUM:PL', 'PHI:PER:1', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-tte]          {'PHI:PER:2', 'inflectional', 'PHI:NUM:PL', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI'}
[-vat]          {'inflectional', 'PHI:NUM:PL', 'PHI:PER:3', 'LANG:FI', 'PHI'}
[-ni]           {'inflectional', 'PHI:PER:1', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI'}
[-si]           {'PHI:PER:2', 'inflectional', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI'}
[-nsa]          {'PHI:PER:3', 'LANG:FI', 'inflectional', 'PHI'}
[-an]           {'PHI:PER:3', 'LANG:FI', 'inflectional', 'PHI'}
[-nne]          {'PHI:PER:2', 'inflectional', 'PHI:NUM:PL', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-s]            {'inflectional', 'PHI:GEN:F', 'PHI:GEN:M', 'PHI:PER:3', 'LANG:EN', 'PHI:NUM:SG', 'PHI'}
[-0]            {'PHI:PER:2', 'inflectional', 'PHI:GEN:N', 'PHI:PER:1', 'LANG:EN', 'PHI:NUM:SG', 'PHI', 'PHI:NUM:PL', 'PHI:PER:3', 'PHI:DET:DEF'}
[-o]            {'inflectional', 'PHI:PER:1', 'LANG:IT', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI'}
[-i]            {'PHI:PER:2', 'inflectional', 'LANG:IT', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI'}
[-a]            {'inflectional', 'PHI:PER:3', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI'}
[-e]            {'inflectional', 'PHI:PER:3', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI'}
[-iamo]         {'inflectional', 'PHI:NUM:PL', 'PHI:PER:1', 'LANG:IT', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI'}
[-te]           {'PHI:PER:2', 'inflectional', 'PHI:NUM:PL', 'LANG:IT', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI'}
[-no]           {'inflectional', 'PHI:NUM:PL', 'PHI:PER:3', 'LANG:IT', 'PHI:DET:DEF', 'PHI'}
[-nom]          {'inflectional', 'TAIL:FIN,ARG,VAL', 'NOM', 'adjoinable', 'LANG:EN'}
[-par]          {'PAR', 'inflectional', 'LANG:FI', 'adjoinable', 'TAIL:ARG,-VAL'}
[-gen]          {'inflectional', 'GEN', 'LANG:EN', '-adjoinable', 'TAIL:INF,ARG'}
[-n_acc]        {'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'inflectional', 'adjoinable', 'LANG:FI', 'n-ACC', 'TAIL:PHI'}
[-t_acc]        {'t-ACC', 'TAIL:ARG,ASP:BOUNDED', 'inflectional', 'adjoinable', 'LANG:FI', 'TAIL:*POL:NEG'}
[-0_acc]        {'TAIL:ARG,ASP:BOUNDED', 'inflectional', 'TAIL:*PHI', 'adjoinable', 'LANG:FI', 'TAIL:*POL:NEG', '0_ACC'}
asp             {'ASP:BOUNDED', 'LANG:EN', 'inflectional'}
a'              {'PF:a', 'a', 'LF:A', 'LANG:X'}
b'              {'LF:B', 'LANG:X', 'b', 'PF:b'}
b''             {'b', '-COMP:c', 'LF:B', 'LANG:EN', 'PF:b'}
c''             {'SPEC:a', 'c', 'PF:c', 'LF:C', 'LANG:EN'}
c'              {'c', 'LF:C', 'PF:c', 'LANG:X'}
d'              {'LANG:', 'd', 'PF:d', 'LF:D'}
a''             ['LANG:EN']
x'              {'x', 'PF:x', 'LANG:X', 'LF:X'}
y'              {'y', 'PF:y', 'LF:Y', 'LANG:X'}
z'              {'PF:x', 'LF:Z', 'z', 'LANG:X'}
John'           {'PF:John', 'LF:John', 'LANG:X', "N'"}
admires'        {"V'", 'PF:admires', 'LF:admires', 'LANG:X'}
admires''       {'PF:admires', 'SPEC:P', 'ASP', '-COMP:v', 'ARG', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', 'PHI:DET:_', '-COMP:V', '-COMP:N', 'LANG:EN', 'LF:admires', '-VAL', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:D', 'PHI:NUM:_', '-SPEC:FORCE'}
Mary'           {'PF:Mary', 'LF:mary', 'LANG:X', "N'"}
T/fin           {'T/fin', '!COMP:*', 'VAL', '!PROBE:V', 'ARG', 'COMP:T/prt', 'COMP:V', '-SPEC:T/fin', 'PF:T', 'SPEC:TO/inf', 'COMP:v', '-COMP:T/fin', 'LF:T', 'PHI:DET:_', 'SPEC:*', '-SPEC:C/fin', '!SPEC:D', '!SPEC:*', 'FIN', 'T', '-SPEC:V', 'COMP:D', 'LANG:EN', '-COMP:INF', '-SPEC:v', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:N', 'SPEC:D', 'PHI:NUM:_', '-SPEC:FORCE'}
v               {'!COMP:*', 'ASP', 'LF:v', '!PROBE:V', 'LANG:EN', 'ARG', '-VAL', 'PHI:PER:_', 'PF:v', 'COMP:V', '-SPEC:N', 'PHI:GEN:_', 'SPEC:D', 'PHI:DET:_', 'PHI:NUM:_', 'v'}
v*              {'!COMP:*', 'ASP', 'v*', '!PROBE:V', 'SEM:external', 'LANG:EN', 'LF:v*', 'ARG', '-VAL', 'PHI:PER:_', 'COMP:V', 'PHI:GEN:_', '-SPEC:N', 'SPEC:D', 'PHI:DET:_', 'PF:v*', 'PHI:NUM:_', 'v'}
C/fin           {'!COMP:*', 'PF:C', 'VAL', '-SPEC:T/fin', 'SPEC:*', 'C/fin', '-SPEC:C/fin', '-COMP:T/prt', '!PROBE:FIN', 'FIN', '-COMP:C/fin', 'LANG:EN', 'COMP:T/fin', 'C', '-SPEC:N', 'LF:C/fin', '-ARG', 'COMP:Neg/fin'}
T               {'!COMP:*', '-COMP:NEG', 'VAL', '!PROBE:V', 'ARG', 'COMP:T/prt', 'COMP:V', '-SPEC:T/fin', 'PF:T', 'COMP:v', 'SPEC:*', 'LF:T', 'PHI:DET:_', '!SPEC:*', 'FIN', 'T', '-SPEC:V', 'COMP:D', 'LANG:EN', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:N', 'SPEC:D', 'PHI:NUM:_', '-SPEC:FORCE'}
T/prt           {'!COMP:*', '-COMP:NEG', 'VAL', 'LF:T/prt', '!PROBE:V', 'ARG', 'COMP:T/prt', 'T/prt', 'COMP:V', '-SPEC:T/fin', 'COMP:v', 'SPEC:*', 'PHI:DET:_', '!SPEC:*', 'T', 'FIN', '-SPEC:V', 'COMP:D', 'LANG:EN', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:N', 'SPEC:D', 'PF:T/prt', 'PHI:NUM:_', '-SPEC:FORCE'}
a0              {'A', 'TAIL:D', 'LANG:EN', '-adjoinable', 'COMP:0', 'PF:A', '-SPEC:D', '-SPEC:A', 'LF:A', 'adjoinable'}
n               {'-COMP:D', 'VAL', 'PF:n', '-COMP:v', '-SPEC:ADV', 'ARG', 'COMP:0', '-COMP:AUX', 'COMP:P', 'COMP:V', 'COMP:uR', '-SPEC:INF', '-COMP:ADV', '!SPEC:*', '-SPEC:R', 'LANG:EN', '-SPEC:P', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:N', 'n', '-SPEC:FORCE', '!COMP:*', 'PHI:NUM:_', 'COMP:R/D', 'N', 'LF:n', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'COMP:v', '-COMP:A', '-COMP:T/fin', 'PHI:DET:_', 'INF', '-COMP:V', '-SPEC:C/fin', 'SPEC:*', '!SPEC:D', '-COMP:N', '-COMP:C/fin', '-SPEC:V', 'COMP:R', '-SPEC:uWH'}
impass          {'!COMP:*', 'ASP', 'SPEC:D', 'PHI:DET:_', '!PROBE:V', 'LANG:EN', 'ARG', '-VAL', 'PHI:PER:_', 'COMP:V', 'PHI:GEN:_', '-SPEC:N', 'PF:impass', 'LF:impass', 'PHI:NUM:_', 'v'}
cau             {'!COMP:*', 'ASP', '!PROBE:V', 'LANG:EN', 'LF:v/Cause', 'ARG', '-VAL', 'PF:Cau', 'PHI:PER:_', 'COMP:V', 'PHI:GEN:_', '-SPEC:N', 'SPEC:D', 'PHI:DET:_', 'PHI:NUM:_', 'v'}
INF             {'!COMP:*', '-COMP:C/fin', '-SPEC:V', 'LF:INF', 'LANG:EN', 'PF:INF', 'COMP:V', '-SPEC:T/fin', 'COMP:v', 'INF', '-COMP:FORCE'}
prtcpl          {'-COMP:NEG', '!COMP:*', 'VAL', 'LF:T/prt', '!PROBE:V', 'ARG', 'COMP:T/prt', 'T/prt', 'COMP:V', '-SPEC:T/fin', 'COMP:v', 'SPEC:*', 'PHI:DET:_', 'INF', '!SPEC:*', 'T', 'FIN', '-COMP:C/fin', '-SPEC:V', 'COMP:D', 'LANG:EN', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:N', 'SPEC:D', 'PF:T/prt', '-COMP:FORCE', 'PHI:NUM:_', '-SPEC:FORCE'}
TO/inf          {'!COMP:*', '?ARG', 'TO/inf', 'COMP:V', '-SPEC:T/fin', 'LF:TO/inf', 'COMP:v', 'INF', 'PF:TO/inf', '-COMP:C/fin', '-SPEC:V', 'LANG:EN', '-VAL', '-SPEC:v', 'adjoinable', '-COMP:FORCE'}
A/inf           {'!COMP:*', '?VAL', '?ARG', 'A/inf', '-SPEC:Neg/fin', 'COMP:V', '-SPEC:T/fin', 'COMP:v', 'SPEC:*', 'INF', 'PF:A/inf', '-COMP:C/fin', '-SPEC:V', 'LANG:EN', 'LF:A/inf', '-COMP:FORCE'}
ARE/inf         {'!COMP:*', 'VAL', 'ARE/inf', '?ARG', 'COMP:V', '-SPEC:T/fin', 'COMP:v', 'SPEC:*', 'INF', 'LF:ARE/inf', '-COMP:C/fin', '-SPEC:V', 'LANG:EN', '-adjoinable', 'PF:are', '-COMP:FORCE'}
ESSA/inf        {'!COMP:*', '?VAL', '?ARG', 'TAIL:T', 'ESSA/inf', '-SPEC:Neg/fin', '-SPEC:T/fin', 'COMP:V', 'COMP:v', 'LF:while', 'SPEC:*', 'INF', 'ADV', '-COMP:C/fin', '-SPEC:V', 'LANG:EN', '-SPEC:N', 'PF:essa', 'adjoinable', '-COMP:FORCE', '-SPEC:FORCE'}
TUA/inf         {'!COMP:*', 'ARG', 'TAIL:T', 'TUA/inf', '-SPEC:Neg/fin', '-SPEC:T/fin', 'COMP:V', 'COMP:v', 'PHI:DET:_', 'INF', 'PF:tua', '!SPEC:*', 'ADV', '-COMP:C/fin', '-SPEC:V', 'LANG:EN', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:N', 'LF:after', 'adjoinable', 'CAL', '-COMP:FORCE', 'PHI:NUM:_', '-SPEC:FORCE'}
VA/inf          {'!COMP:*', 'VAL', '?ARG', 'COMP:V', '-SPEC:T/fin', 'COMP:v', 'SPEC:*', 'INF', '-COMP:C/fin', '-SPEC:V', 'LANG:EN', 'PF:vAn', 'LF:VA', '-SPEC:N', 'VA/inf', '-COMP:FORCE'}
MA/ssa          {'MA/inf', 'ARG', 'TAIL:V', 'COMP:V', '-SPEC:Neg/fin', '-SPEC:T/fin', 'COMP:v', 'PF:massa', 'PHI:DET:_', 'LF:in_doing', 'ADV', 'LANG:EN', '-SPEC:*', '-VAL', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:N', 'adjoinable', 'PHI:NUM:_', '-SPEC:FORCE'}
MA/tta          {'ADV', 'adjoinable', 'MA/inf', 'ARG', 'LANG:EN', 'TAIL:T', '-VAL', 'PHI:PER:_', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:N', 'PHI:GEN:_', 'LF:without_doing', 'PF:matta', 'PHI:DET:_', 'PHI:NUM:_', '-SPEC:FORCE'}
MA/lla          {'MA/inf', 'ARG', 'TAIL:T', 'COMP:V', 'ADV', 'LANG:EN', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:N', 'adjoinable', 'PF:malla', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:Neg/fin', '-SPEC:T/fin', 'COMP:v', 'PHI:DET:_', '-VAL', 'LF:by_doing'}
E/inf           {'ADV', 'LF:by', '-SPEC:Neg/fin', '-SPEC:T/fin', 'LANG:FI', '-SPEC:N', 'adjoinable', '-ARG', 'PF:en', 'SPEC:*', '-SPEC:FORCE'}
BE-             {'!COMP:*', 'SPEC:P', 'ASP', '-COMP:v', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'COPULA', 'SPEC:TO/inf', '-COMP:T/fin', 'V', '-COMP:V', '-COMP:N', 'PF:BE', 'LANG:EN', '-VAL', 'LF:BE', 'SPEC:D', '-ARG', '-SPEC:FORCE'}
D               {'!COMP:*', '-COMP:D', '-COMP:uR', 'COMP:N', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LF:D', '-SPEC:INF', '-COMP:T/fin', '-ARG', '-SPEC:V', 'LANG:EN', '-SPEC:MA/lla', '-SPEC:P', '-SPEC:D', 'OP', '-SPEC:N', '!PROBE:N', 'adjoinable', 'PF:D', 'D', '-SPEC:C'}
P               {'!COMP:*', '-COMP:uWH', '-SPEC:ADV', 'ARG', 'PHI:NUM:_', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:INF', 'PF:P', '-COMP:T/fin', 'PHI:DET:_', '-COMP:ADV', '-SPEC:C/fin', '-COMP:N', '-SPEC:iR', '-SPEC:V', 'P', 'COMP:D', 'LANG:EN', '-SPEC:P', '-SPEC:*', '-VAL', '-SPEC:v', 'PHI:PER:_', '-SPEC:iWH', 'PHI:GEN:_', '-SPEC:N', 'LF:P', 'adjoinable', '-SPEC:C', '-SPEC:FORCE'}
pro             ['LANG:EN']
pro-            {'-COMP:D', 'COMP:R/D', 'N', '-COMP:v', '-SPEC:ADV', '-COMP:AUX', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'SPEC:A', 'PF:(pro)', 'COMP:uR', '-SPEC:INF', '-COMP:A', '-COMP:T/fin', '-COMP:ADV', '-COMP:V', 'LF:pro', '-SPEC:C/fin', '-COMP:N', '-SPEC:R', '-COMP:C/fin', '-SPEC:V', 'LANG:EN', '-SPEC:P', 'PHI', 'COMP:R', '-SPEC:N', '-SPEC:uWH', '-SPEC:FORCE'}
cl              {'RIGHT:ARE/inf', 'inflectional', 'LEFT:D,CL', 'LEFT:T/fin', 'CL', 'LANG:EN', 'RIGHT:PRG'}
inc             {'LANG:EN', 'inflectional', 'INCORPORATED'}
sg              {'LANG:EN', 'inflectional', 'PHI:NUM:SG'}
pl              {'LANG:EN', 'inflectional', 'PHI:NUM:PL'}
1p              {'LANG:EN', 'inflectional', 'PHI:PER:1'}
2p              {'PHI:PER:2', 'LANG:EN', 'inflectional'}
3p              {'PHI:PER:3', 'LANG:EN', 'inflectional'}
def             {'LANG:EN', 'inflectional', 'PHI:DET:DEF'}
indef           {'LANG:EN', 'inflectional', 'PHI:DET:INDEF'}
hum             {'LANG:EN', 'PHI:HUM:HUM', 'inflectional'}
nonhum          {'LANG:EN', 'inflectional', 'PHI:HUM:NONHUM'}
m               {'LANG:EN', 'inflectional', 'PHI:GEN:M'}
f               {'LANG:EN', 'inflectional', 'PHI:GEN:F'}
nom             {'LANG:EN', 'inflectional', 'TAIL:FIN,!COMP:*,VAL'}
acc             {'TAIL:v', 'LANG:EN', 'inflectional'}
dat             {'LANG:EN', 'inflectional', 'TAIL:!COMP:*,v'}
uC/op           {'LANG:EN', 'inflectional', 'uC/op'}
wh              {'LANG:EN', 'inflectional', 'OP:WH', 'OP:_'}
wh_             {'FORCE:OP:WH', 'inflectional', 'OP', 'OP:_', 'LANG:EN'}
top             {'LANG:EN', 'OP:TOP', 'inflectional'}
foc             {'OP:FOC', 'LANG:EN', 'inflectional'}
C/op            {'LANG:EN', 'inflectional', 'OP:C/OP'}
rel             {'inflectional', 'OP:REL', '-COMP:C/fin', 'adjoinable', 'LANG:EN'}
Q               {'inflectional', 'OP', 'OP:WH', 'LANG:EN', 'OP:Q'}
