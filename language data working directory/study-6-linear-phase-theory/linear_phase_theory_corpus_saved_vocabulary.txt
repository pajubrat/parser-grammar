ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'-SPEC:iWH', 'LF:to', '-SPEC:ADV', '-SPEC:FORCE', 'COMP:D', '-SPEC:*', 'COMP:ARE/inf', '-SPEC:C/fin', '-SPEC:V', '-SPEC:INF', '-ARG', '-COMP:T/fin', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:N', 'P', '-SPEC:v', '-SPEC:C', 'PF:a', '-SPEC:T/fin', '-SPEC:P', '!COMP:*', '-SPEC:iR', '-COMP:N', 'LANG:IT', '-VAL', '-COMP:uWH', '-COMP:ADV'}
a_D             {'D', '-SPEC:D', 'LANG:EN', '-SPEC:V', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', '-COMP:T/fin', '!PROBE:N', 'COMP:N', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:N', '-COMP:D', '-SPEC:C', '-COMP:uR', '-SPEC:T/fin', '!COMP:*', '-SPEC:P', 'LF:D', 'PF:D', 'OP'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-COMP:v', 'SPEC:P', 'PHI:DET:_', 'CLASS:TR', '-SPEC:FORCE', '-SPEC:Neg', 'COMP:D', '-COMP:Neg', 'LANG:EN', 'PF:admire', 'LF:admire', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:V', 'COMP:P', '!COMP:*', 'V', '-COMP:N', '-COMP:P', '-VAL', 'SPEC:TO/inf'}
admire*         ['LANG:EN']
T/fin*          {'!SPEC:*', 'NO_DET', 'CAT:T/fin', "PF:T/fin'", 'LF:T', 'NO_NUMBER', 'LANG:EN', '-VAL'}
v*              {'NO_DET', 'NO_NUMBER', 'CAT:v', 'LANG:EN', '-VAL', 'LF:v', 'PF:v'}
admire**        ['LANG:EN']
T/fin**         {'!SPEC:*', 'NO_DET', "PF:T/fin''", 'CAT:T/fin', 'PHI:PER:3', 'LF:T', 'NO_NUMBER', 'NO_PERSON', 'LANG:EN', '-VAL'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'COMP:D', 'PHI:NUM:_', 'LF:admire', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', 'PF:adora', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', '-COMP:N', 'LANG:IT', '-VAL', 'SPEC:TO/inf'}
antaa           ['LANG:FI']
anta-           {'-COMP:v', 'LF:give', 'CLASS:DITR', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'COMP:D', 'LANG:FI', 'ASP:BOUNDED', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', '+SEM:directional', 'ARG', 'ASP', '-COMP:FIN', 'PF:antaa', '-SPEC:T/fin', '-COMP:V', 'COMP:P', '!COMP:*', 'V', 'SPEC:D', '-COMP:N', '-VAL', 'SPEC:TO/inf'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'COMP:D', 'PF:ask', 'LANG:EN', 'PHI:NUM:_', 'SEM:internal', 'SPEC:ADV', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'ASP', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', 'SPEC:D', '-COMP:N', 'LF:ask', '-VAL', 'SPEC:TO/inf'}
ask-            {'-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'COMP:D', 'PF:ask', 'LANG:EN', 'PHI:NUM:_', 'SEM:internal', 'SPEC:ADV', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'ASP', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', 'SPEC:D', '-COMP:N', 'LF:ask', '-VAL', 'SPEC:TO/inf'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'PF:avain', 'LANG:FI', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-SEM:directional', '-COMP:D', 'LF:key', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'LF:car', 'LANG:FI', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', 'PF:auto', '-SEM:directional', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
city            {'COMP:uR', '-SPEC:R', '-COMP:v', 'PF:city', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'LANG:EN', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', 'LF:city', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
che             ['LANG:IT']
che-            {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'LF:who', 'PHI_N', '-COMP:*', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', 'PF:che', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:N', '-COMP:A', 'COMP:R', '-COMP:ADV'}
chiamato        ['LANG:IT']
chiamata-       {'-COMP:v', 'SPEC:P', 'LF:called', 'PHI:DET:_', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', 'PF:chiamato', '-COMP:N', 'LANG:IT', '-VAL', 'SPEC:TO/inf'}
danno           {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'LF:damage', 'SPEC:A', '-SPEC:FORCE', 'PF:danno', 'COMP:R/D', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'PF:detest', '-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'COMP:D', 'COMP:ARE/inf', 'PHI:NUM:_', 'SEM:internal', 'SPEC:ADV', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'ASP', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', '-COMP:N', 'LANG:IT', 'LF:detest', '-VAL', 'SPEC:TO/inf'}
devono          ['LANG:EN']
deva-           {'-COMP:v', 'LF:must', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'COMP:ARE/inf', 'PHI:NUM:_', 'SEM:internal', 'SPEC:ADV', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', '-ASP', 'SPEC:D', '-COMP:N', 'LANG:IT', '-VAL', 'SPEC:TO/inf', 'PF:deva'}
di              {'-SPEC:iWH', '-SPEC:ADV', 'PHI:DET:_', 'SPEC:*', 'PF:di', 'LF:of', '-SPEC:FORCE', 'COMP:D', 'LANG:FI', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:V', '-SPEC:INF', '-COMP:T/fin', '-SPEC:Neg/fin', 'PHI:PER:_', 'ARG', '-SPEC:N', 'P', '-adjoinable', '-SPEC:v', '-SPEC:C', '-SPEC:T/fin', '-SPEC:P', '!COMP:*', '-SPEC:iR', '-COMP:N', '-VAL', '-COMP:uWH', '-COMP:ADV'}
does            {'COMP:Neg', '-SPEC:FORCE', 'PHI:DET:_', 'SPEC:*', 'PHI:PER:3', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:V', '-SPEC:TO/inf', 'PHI:PER:_', 'ARG', '-COMP:INF', '-SPEC:N', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:GEN:M', 'SPEC:TO/inf', 'VAL', 'T', 'T/fin', 'COMP:D', 'FIN', '-SPEC:Neg', 'LANG:EN', 'PHI:GEN:F', 'PF:does', '-COMP:T/fin', '-SPEC:v', 'COMP:T/prt', '!COMP:*', 'LF:does', 'COMP:v', 'PHI:NUM:SG', 'SPEC:D', '!SPEC:D', 'COMP:V', '!PROBE:V'}
does_C          ['LANG:EN']
does-           {'COMP:Neg', '-SPEC:FORCE', 'PHI:DET:_', 'SPEC:*', 'PHI:PER:3', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:V', '-SPEC:TO/inf', 'PHI:PER:_', 'ARG', '-COMP:INF', '-SPEC:N', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:GEN:M', 'SPEC:TO/inf', 'VAL', 'T', 'T/fin', 'COMP:D', 'FIN', '-SPEC:Neg', 'LANG:EN', 'PHI:GEN:F', 'PF:does', '-COMP:T/fin', '-SPEC:v', 'COMP:T/prt', '!COMP:*', 'LF:does', 'COMP:v', 'PHI:NUM:SG', 'SPEC:D', '!SPEC:D', 'COMP:V', '!PROBE:V'}
dorme           ['LANG:IT']
dorme-          {'-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'LANG:EN', 'PHI:NUM:_', 'LF:sleep', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:V', 'PF:dorme', 'COMP:P', 'V', '!SPEC:D', '-COMP:N', '-VAL', 'SPEC:TO/inf'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'VAL', '%SPEC:INF', 'PHI:DET:_', 'SPEC:*', 'FIN', '!COMP:T', 'LANG:FI', 'PHI:NUM:_', 'NEG', 'SEM:internal', '!SPEC:*', 'PHI:PER:_', 'ARG', '-SPEC:T', 'COMP:T/prt', '!COMP:*', 'LF:neg', '-SPEC:T/fin', 'Neg/fin', 'PF:ei', 'POL:NEG'}
e-              {'VAL', '%SPEC:INF', 'PHI:DET:_', 'SPEC:*', 'FIN', '!COMP:T', 'LANG:FI', 'PHI:NUM:_', 'NEG', 'SEM:internal', '!SPEC:*', 'PHI:PER:_', 'ARG', '-SPEC:T', 'COMP:T/prt', '!COMP:*', 'LF:neg', '-SPEC:T/fin', 'Neg/fin', 'PF:ei', 'POL:NEG'}
elaa            ['LANG:FI']
ela-            {'-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'CLASS:INTR', 'LANG:FI', 'PHI:NUM:_', '-COMP:T/fin', 'PF:elaa', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', '-COMP:D', 'LF:live', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', 'SPEC:D', '-COMP:N', '-VAL', 'SPEC:TO/inf'}
etsii           ['LANG:FI']
etsi-           {'-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'COMP:D', '!COMP:D', 'LANG:FI', 'PHI:NUM:_', 'LF:search', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'PF:etsi', 'ARG', 'ASP', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', '-COMP:N', '-VAL', 'SPEC:TO/inf'}
etta            {'PF:etta', 'LF:that', '!COMP:*', 'FIN', '-SPEC:*', 'COMP:C/fin', 'LANG:FI', 'FORCE', '-VAL', '-ARG', '!PROBE:T/fin', 'COMP:T/fin'}
flow'           {'-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', 'PHI:GEN:_', '-VAL', '-SPEC:T/fin', 'COMP:P', '-COMP:V', 'V', 'SPEC:D', '-COMP:N', 'PF:flow', 'SPEC:TO/inf', 'LF:flow'}
from            {'-SPEC:iWH', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:FORCE', 'COMP:D', '-SPEC:*', 'LANG:EN', 'PHI:NUM:_', '-SPEC:C/fin', 'TAIL:V,+SEM:directional', '-SPEC:V', '-SPEC:INF', '-float', 'LF:from', '-COMP:T/fin', 'adjoinable', '-SPEC:Neg/fin', 'PHI:PER:_', 'ARG', '-SPEC:N', 'P', '-SPEC:v', '-VAL', '-SPEC:C', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:P', '!COMP:*', '-SPEC:iR', '-COMP:N', 'PF:from', '-COMP:uWH', '-COMP:ADV'}
gave            ['LANG:EN']
give-           {'-COMP:v', 'LF:give', 'CLASS:DITR', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'COMP:D', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', '+SEM:directional', 'ARG', 'ASP', 'PHI:GEN:_', '-COMP:FIN', '-SPEC:T/fin', '-COMP:V', 'COMP:P', '!COMP:*', 'V', 'SPEC:D', '-COMP:N', '-VAL', 'SPEC:TO/inf', 'PF:give'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'PF:Giuseppe', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-SEM:directional', '-COMP:D', 'LF:Giuseppe', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'-COMP:v', 'SPEC:P', 'PHI:DET:_', 'CLASS:TR', '-SPEC:FORCE', 'COMP:D', '-SPEC:*', 'COMP:A/inf', 'LANG:FI', 'ASP:BOUNDED', 'PHI:NUM:_', 'SEM:internal', 'SPEC:ADV', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'ASP', 'LF:want', '-SPEC:T/fin', '-COMP:V', 'PF:haluaa', 'COMP:P', 'V', '!COMP:*', '-COMP:N', '-COMP:P', '-VAL', 'SPEC:TO/inf'}
hairitsee       ['LANG:FI']
hairitse-       {'-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', '!COMP:D', 'LANG:FI', 'LF:disturb', 'PHI:NUM:_', 'PF:hairitsee', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', '-COMP:FIN', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', 'SPEC:D', '-COMP:N', '-VAL', 'SPEC:TO/inf'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'PF:ha', '-COMP:v', 'SPEC:P', 'PHI:DET:_', 'SPEC:*', '-SPEC:FORCE', 'PHI:NUM:_', 'LF:have', 'SEM:internal', 'SPEC:ADV', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:V', 'COMP:T', 'COMP:P', 'V', '-ASP', 'SPEC:D', '-COMP:N', 'LANG:IT', '-VAL', 'SPEC:TO/inf'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'CLASS:INTR', 'LANG:FI', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'SPEC:TO/inf', 'PHI:PER:_', 'ARG', 'ASP', '-COMP:D', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', 'LF:disappear', 'SPEC:D', '-COMP:N', '-VAL', 'PF:havia'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'-COMP:v', 'SPEC:P', 'PHI:DET:_', 'CLASS:TR', '-SPEC:FORCE', 'COMP:D', '!COMP:D', 'LANG:FI', 'PHI:NUM:_', 'LF:admire', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', '-COMP:FIN', '-SPEC:T/fin', '-COMP:V', 'COMP:P', '!COMP:*', 'V', 'PF:ihaile-', '-COMP:N', '-COMP:P', '-VAL', 'SPEC:TO/inf'}
il              {'D', '-SPEC:D', '-SPEC:V', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', '-COMP:T/fin', '!PROBE:N', 'COMP:N', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:N', '-COMP:D', '-SPEC:C', '-COMP:uR', '-SPEC:T/fin', '!COMP:*', '-SPEC:P', 'LANG:IT', 'PF:il', 'LF:the', 'OP'}
i               {'D', '-SPEC:D', '-SPEC:V', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', '-COMP:T/fin', '!PROBE:N', 'COMP:N', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:N', '-COMP:D', '-SPEC:C', '-COMP:uR', '-SPEC:T/fin', '!COMP:*', '-SPEC:P', 'LANG:IT', 'PF:il', 'LF:the', 'OP'}
in              {'-SPEC:iWH', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:FORCE', 'COMP:D', 'LF:in', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:V', '-SPEC:INF', '-COMP:T/fin', 'adjoinable', '-SPEC:Neg/fin', 'PHI:PER:_', 'ARG', '-SPEC:N', 'P', '-SPEC:v', 'PHI:GEN:_', '-SPEC:C', '-SPEC:T/fin', '-SPEC:P', '!COMP:*', '-SPEC:iR', '-COMP:N', 'LANG:IT', '-VAL', '-COMP:uWH', 'PF:in', '-COMP:ADV'}
infermieri      {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'PF:infermieri', '-SPEC:C/fin', '-SPEC:V', '-SPEC:INF', '-COMP:WH', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:ADV', '-COMP:A', 'COMP:R', 'LF:nurses'}
is              ['LANG:EN']
be-             {'-COMP:v', 'LF:be', 'SPEC:P', '-SPEC:FORCE', 'LANG:EN', '-COMP:TO/inf', 'COPULA', '-ARG', '-COMP:T/fin', 'SPEC:ADV', 'ASP', 'PF:be', '-SPEC:T/fin', '!COMP:*', '-COMP:V', 'COMP:P', 'V', 'SPEC:D', '-COMP:N', '-VAL', 'SPEC:TO/inf'}
istuuko         ['LANG:FI']
istuu-          {'-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'CLASS:INTR', 'LANG:FI', 'PHI:NUM:_', '-COMP:T/fin', 'LF:sit', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', '-COMP:D', 'PF:istuu', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', 'SPEC:D', '-COMP:N', '-VAL', 'SPEC:TO/inf'}
John            ['LANG:EN']
John-           {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'LANG:EN', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-SEM:directional', '-adjoinable', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', 'LF:John', '-COMP:A', 'COMP:R', '-COMP:ADV', 'PF:John'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'LANG:FI', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', 'PF:Jukka', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-SEM:directional', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:ADV', '-COMP:AUX', '-COMP:A', 'COMP:R', 'LF:Jukka'}
juosten         ['LANG:FI']
juokse-         {'-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'LANG:FI', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'LF:run', 'ARG', 'ASP', '-VAL', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', '-COMP:N', 'PF:juokse-', 'SPEC:TO/inf'}
istuu           ['LANG:FI']
istu-           {'-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'LANG:FI', 'PHI:NUM:_', '-COMP:T/fin', 'LF:sit', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', 'PF:istuu', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', '-COMP:N', '-VAL', 'SPEC:TO/inf'}
kaksi           {'COMP:N', 'PF:kaksi', 'ARG', 'LF:two', 'PHI:DET:_', 'SPEC:*', 'COMP:n', 'PHI:NUM:SG', 'LANG:FI', 'TAIL:ARG,VAL,FIN', 'PHI:NUM:_', '-VAL', 'NUM', 'PHI:PER:_'}
kaksi           {'COMP:N', 'PF:kaksi', 'TAIL:*POL:NEG', 'LF:two', 'SPEC:*', 'COMP:n', 'LANG:EN', 'TAIL:ARG,ASP:BOUNDED', 'NUM'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'COMP:N', 'PF:kaksi', 'LANG:FI', 'LF:two', 'SPEC:*', 'COMP:n', 'NUM'}
kaupunkia       ['LANG:EN']
kaupunki        {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'LANG:FI', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', 'LF:city', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:P', '-COMP:A', 'COMP:R', '-COMP:ADV', 'PF:kaupunki'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'-COMP:v', 'SPEC:P', 'PHI:DET:_', 'PF:kaske', '-SPEC:FORCE', 'LANG:FI', 'PHI:NUM:_', 'SEM:external', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', '!COMP:A/inf', 'ARG', 'ASP', 'LF:order', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', '-COMP:N', '-VAL', 'SPEC:TO/inf'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'LANG:FI', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', 'PF:kello', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', 'LF:watch', '-COMP:ADV'}
kello0-         {'2SPEC', 'SPEC:D', 'LANG:FI', 'PF:kello', '0', 'LF:watch'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'LANG:EN', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', 'PF:key', 'LF:key', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'PF:kirja', 'LANG:FI', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', 'LF:book', '-SPEC:uWH', '-SPEC:N', '-SEM:directional', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
kohti           {'-SPEC:iWH', 'PF:kohti', '-SPEC:ADV', 'PHI:DET:_', 'SPEC:*', '-SPEC:FORCE', 'COMP:D', 'LANG:FI', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:V', '-SPEC:INF', 'TAIL:V', '-COMP:T/fin', 'adjoinable', '-SPEC:Neg/fin', 'PHI:PER:_', 'ARG', '-SPEC:N', 'P', '-SPEC:v', '-VAL', '-SPEC:C', '-SPEC:T/fin', '-SPEC:P', '!COMP:*', '-SPEC:iR', '-COMP:N', 'LF:towards', '-COMP:uWH', '-COMP:ADV'}
koko            {'PF:koko', 'D', '-SPEC:D', 'LANG:FI', '-SPEC:V', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', 'LF:all', '-COMP:T/fin', 'adjoinable', '!PROBE:N', 'COMP:N', '-SPEC:Neg/fin', '-SPEC:N', '-COMP:D', '-SPEC:C', '-COMP:uR', '-SPEC:T/fin', '!COMP:*', '-SPEC:P', 'TAIL:T', 'OP'}
kuka            ['LANG:FI']
kuka-           {'COMP:uR', '-SPEC:R', 'PF:kuka', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'LF:who', 'LANG:FI', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:ADV', '-COMP:AUX', '-COMP:A', 'COMP:R', 'PHI'}
kuorsaa-        {'-COMP:v', 'SPEC:P', 'LF:snore', 'PHI:DET:_', '-SPEC:FORCE', 'LANG:FI', 'PF:kuorsaa', 'PHI:NUM:_', '-COMP:WH', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', '-COMP:D', '-SPEC:T/fin', 'COMP:P', '-COMP:V', 'V', '-COMP:N', '-VAL', 'SPEC:TO/inf'}
kuorsaamalla    ['LANG:FI']
lahella         {'-COMP:FORCE', '-SPEC:ADV', 'PHI:DET:_', 'SPEC:*', '-SPEC:FORCE', 'LANG:FI', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:V', '-SPEC:INF', 'PHI:PER:_', 'ARG', '-SPEC:N', '-SPEC:C', '-SPEC:T/fin', '-SPEC:P', 'LF:near', '-COMP:C/fin', 'VAL', '-SPEC:iWH', 'COMP:D', 'INF', '-COMP:T/fin', 'adjoinable', '!SPEC:*', '-SPEC:Neg/fin', 'P', '-SPEC:v', 'COMP:v', '!COMP:*', 'PF:lahella', '!SPEC:D', '-SPEC:iR', '-COMP:N', 'COMP:V', '-COMP:uWH', '-COMP:ADV'}
lahella         {'-SPEC:iWH', '-SPEC:ADV', 'PHI:DET:_', 'SPEC:*', '-SPEC:FORCE', 'COMP:D', '!COMP:D', 'LANG:FI', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:V', '-SPEC:INF', '-COMP:T/fin', 'adjoinable', '-SPEC:Neg/fin', 'PHI:PER:_', 'ARG', '-SPEC:N', 'P', '-SPEC:v', '-SPEC:C', '-SPEC:T/fin', '!COMP:*', '-SPEC:P', 'PF:lahella', '-SPEC:iR', '-COMP:N', 'LF:near', '-VAL', '-COMP:uWH', '-COMP:ADV'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'-COMP:v', 'SPEC:P', 'PHI:DET:_', 'LF:leave', '-SPEC:FORCE', 'CLASS:INTR', 'PF:lahtea', 'LANG:FI', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', '-COMP:D', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', 'SPEC:D', '-COMP:N', '-VAL', 'SPEC:TO/inf', 'COMP:PP'}
lavano          ['LANG:IT']
lava-           {'-COMP:v', 'SPEC:P', 'PF:lava', 'PHI:DET:_', '-SPEC:FORCE', 'COMP:D', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', 'PHI:GEN:_', '-SPEC:T/fin', '!COMP:*', 'LF:wash', '-COMP:V', 'V', 'COMP:P', '-COMP:N', 'LANG:IT', '-VAL', 'SPEC:TO/inf'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'D', '-SPEC:D', '-SPEC:V', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', '-COMP:T/fin', '!PROBE:N', 'COMP:N', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:N', '-COMP:D', '-SPEC:C', '-COMP:uR', '-SPEC:T/fin', '!COMP:*', '-SPEC:P', 'LANG:IT', 'LF:D', 'PF:le', 'OP'}
leaves          ['LANG:EN']
leave           {'-COMP:v', 'SPEC:P', 'PHI:DET:_', 'LF:leave', '-SPEC:FORCE', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PF:leave', 'PHI:PER:_', 'ARG', 'ASP', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', '!SPEC:D', '-COMP:N', '-VAL', 'SPEC:TO/inf'}
leave-          {'-COMP:v', 'SPEC:P', 'PHI:DET:_', 'LF:leave', '-SPEC:FORCE', 'LANG:EN', 'PHI:NUM:_', 'PF:leave', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', '!SPEC:D', '-COMP:N', '-VAL', 'SPEC:TO/inf'}
like-           {'-COMP:v', 'SPEC:P', 'PHI:DET:_', 'LF:like', '-SPEC:FORCE', '!COMP:D', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', '-COMP:N', 'PF:like', '-VAL', 'SPEC:TO/inf'}
likes           ['LANG:EN']
like            {'-COMP:v', 'SPEC:P', 'PHI:DET:_', 'LF:like', '-SPEC:FORCE', '!COMP:D', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', '-COMP:N', 'PF:like', '-VAL', 'SPEC:TO/inf'}
little          ['LANG:EN']
little-         {'2SPEC', 'SPEC:D', 'PF:little-', 'LANG:EN', '0', 'LF:little'}
lle             {'-SPEC:iWH', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:FORCE', 'COMP:D', '-SPEC:*', 'LF:for', 'LANG:FI', 'PHI:NUM:_', '-SPEC:C/fin', 'TAIL:V,+SEM:directional', '-SPEC:V', 'PF:P(lle)', '-SPEC:INF', '-COMP:T/fin', 'adjoinable', '-SPEC:Neg/fin', 'PHI:PER:_', '+SEM:directional', 'ARG', 'P', '-SPEC:N', '-SPEC:v', '-SPEC:C', '-SPEC:T/fin', '-SPEC:P', '!COMP:*', '-SPEC:iR', '-COMP:N', '-VAL', '-COMP:uWH', '-COMP:ADV'}
lla             {'-SPEC:iWH', 'LF:by', '-SPEC:ADV', 'TAIL:*V', 'SPEC:*', '-SPEC:FORCE', 'COMP:D', 'PHI:DET:_', 'LANG:FI', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:V', '-SPEC:INF', '-COMP:T/fin', 'adjoinable', '-SPEC:Neg/fin', 'PHI:PER:_', 'ARG', '-SPEC:N', 'P', '-SPEC:v', '-SPEC:C', '-SPEC:T/fin', '-SPEC:P', '!COMP:*', 'TAIL:T', '-SPEC:iR', 'PF:P(lla)', '-COMP:N', '-VAL', '-COMP:uWH', '-COMP:ADV'}
Luisa           ['LANG:IT']
Luisa-          {'COMP:uR', '-SPEC:R', '-COMP:v', 'PF:Luisa', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', 'LF:Luisa', '-SPEC:uWH', '-SPEC:N', '-SEM:directional', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
lukemalla       ['LANG:FI']
luke-           {'-COMP:v', 'SPEC:P', 'PHI:DET:_', 'CLASS:TR', '-SPEC:FORCE', 'COMP:D', 'LANG:FI', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', '-VAL', 'LF:read', '-SPEC:T/fin', '-COMP:V', 'COMP:P', '!COMP:*', 'V', '-COMP:N', '-COMP:P', 'PF:luke', 'SPEC:TO/inf'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'-COMP:v', 'SPEC:P', 'LF:find', 'CLASS:TR', '-SPEC:FORCE', 'COMP:D', '!COMP:D', 'PHI:DET:_', 'LANG:FI', 'ASP:BOUNDED', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', '-SPEC:T/fin', '-COMP:V', 'COMP:P', '!COMP:*', 'V', '-COMP:N', '-COMP:P', '-VAL', 'SPEC:TO/inf', 'PF:loyta-'}
Mary            ['LANG:EN']
Mary-           {'COMP:uR', '-SPEC:R', 'PF:Mary', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'LANG:EN', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-SEM:directional', '-adjoinable', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', 'LF:Mary', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'LANG:FI', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', 'LF:Merja', '-SEM:directional', '-adjoinable', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', 'PF:Merja', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'adjoinable', 'ADV', '-SPEC:N', 'LF:by', 'PF:malla', '-SPEC:Neg/fin', 'COMP:v', '-SPEC:T/fin', 'SPEC:*', '-SPEC:FORCE', 'TAIL:T', 'LANG:FI', 'MA/inf'}
meren           ['LANG:FI']
mere-           {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'LANG:FI', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', 'LF:ocean', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', 'PF:meri', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
mistake         {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'LF:mistake', 'LANG:EN', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', 'PF:mistake', '-COMP:C/fin', '-COMP:N', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'LANG:FI', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', 'LF:what', '-SPEC:P', '-COMP:V', 'COMP:P', 'PF:mika-', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'-COMP:v', 'SPEC:P', 'PHI:DET:_', 'CLASS:TR', '-SPEC:FORCE', 'COMP:D', 'LF:move', 'LANGN:EN', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', '+SEM:directional', 'ARG', 'ASP', 'PF:move', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:V', 'COMP:P', '!COMP:*', 'V', '-COMP:N', '-COMP:P', '-VAL', 'SPEC:TO/inf'}
mukavasti       ['LANG:EN']
mukava-         {'2SPEC', 'LF:comfortably', 'SPEC:D', 'LANG:FI', '0', 'PF:mukavasti'}
must            {'VAL', 'LF:must', 'T', 'T/fin', 'COMP:Neg', '-SPEC:FORCE', 'PHI:DET:_', 'COMP:D', 'FIN', '-SPEC:Neg', 'SPEC:*', 'LANG:EN', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:V', '-SPEC:TO/inf', 'MODAL', '-COMP:T/fin', 'PHI:PER:_', 'ARG', '-COMP:INF', '-SPEC:N', '-SPEC:v', 'PHI:GEN:_', '-SPEC:T/fin', 'COMP:T/prt', 'PF:must', '!COMP:*', 'COMP:v', 'SPEC:D', '!SPEC:D', 'COMP:V', 'SPEC:TO/inf', '!PROBE:V'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'-COMP:v', 'SPEC:P', 'PHI:DET:_', 'CLASS:TR', '-SPEC:FORCE', 'COMP:D', 'LANG:FI', 'ASP:BOUNDED', 'PHI:NUM:_', '-COMP:T/fin', 'PF:myy', 'SPEC:ADV', 'SPEC:TO/inf', 'ARG', 'ASP', 'PHI:PER:_', '-SPEC:T/fin', '-COMP:V', 'COMP:P', '!COMP:*', 'V', '-COMP:N', '-COMP:P', '-VAL', 'LF:sell'}
naki            ['LANG:FI']
nake-           {'-COMP:v', '-COMP:ESSA/inf', 'SPEC:P', 'PHI:DET:_', 'LF:see', 'CLASS:TR', '-SPEC:FORCE', 'COMP:D', '-COMP:MA/inf', 'LANG:FI', 'ASP:BOUNDED', '-COMP:P', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', '-SPEC:T/fin', '-COMP:V', 'COMP:P', '!COMP:*', 'V', '-COMP:N', 'PF:nake', '-VAL', 'SPEC:TO/inf'}
nayttaa         ['LANG:FI']
naytta-         {'VAL', '-COMP:v', 'SPEC:P', '-SPEC:FORCE', '!COMP:VA/inf', 'LANG:FI', 'LF:seem', 'PF:naytta', '-ARG', 'SEM:internal', 'SPEC:ADV', '-COMP:T/fin', 'ASP', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', '!SPEC:D', '-COMP:N', 'SPEC:TO/inf'}
ndo             {'PRG', 'VAL', '?ARG', 'PF:PRG', '-COMP:FORCE', '-SPEC:T/fin', '!COMP:*', 'COMP:v', 'LF:ing', 'COMP:V', 'LANG:EN', 'INF', '-SPEC:V', '-COMP:C/fin', '-COMP:T/fin'}
ne              {'LF:those', 'D', '-SPEC:D', 'PHI:PER:3', 'LANG:FI', '-SPEC:V', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', '-COMP:T/fin', '!PROBE:N', 'COMP:N', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:N', '-COMP:D', 'PHI:NUM:PL', '-SPEC:C', '-COMP:uR', '-SPEC:T/fin', '!COMP:*', '-SPEC:P', 'PF:ne', 'OP'}
niiden          ['LANG:EN']
nen             {'adjoinable', '-SPEC:A', 'A', 'PF:a', 'SPEC:*', '-SPEC:D', 'LF:ing', 'LANG:FI', 'COMP:0', 'TAIL:D'}
not             {'ARG', 'PHI:GEN:_', '-COMP:D', '-COMP:FIN', 'PHI:DET:_', '-SPEC:T/fin', 'SPEC:*', '!COMP:*', 'LF:not', 'PF:not', 'Neg', 'LANG:EN', 'PHI:NUM:_', '-COMP:C', '-VAL', 'POL:NEG', 'PHI:PER:_'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'PF:nukku', '-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'CLASS:INTR', 'LANG:FI', 'PHI:NUM:_', 'LF:sleep', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', '-COMP:D', '-SPEC:T/fin', '-COMP:V', '-COMP:Neg/fin', 'COMP:P', 'V', '-COMP:T', 'SPEC:D', '-COMP:N', '-VAL', 'SPEC:TO/inf'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'LF:possessions', '-SPEC:R', 'COMP:uR', '-COMP:v', 'PF:omaisuuden', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'LANG:FI', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
operatoria      ['LANG:IT']
operatoria-     {'2SPEC', 'SPEC:D', 'LANG:IT', 'PF:operatoria', '0', 'LF:operation'}
ostaa           ['LANG:FI']
osta-           {'-COMP:v', 'SPEC:P', 'PHI:DET:_', 'CLASS:TR', '-SPEC:FORCE', 'COMP:D', 'LANG:FI', 'ASP:BOUNDED', 'PHI:NUM:_', 'LF:buy', 'PF:osta', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', '-SPEC:T/fin', '-COMP:V', 'COMP:P', '!COMP:*', 'V', '-COMP:N', '-COMP:P', '-VAL', 'SPEC:TO/inf'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', 'PF:paiva', '-SPEC:FORCE', 'COMP:R/D', 'LANG:FI', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', 'LF:day', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'SEM:nonreferential', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
Pariisia        ['LANG:FI']
Pariisi-        {'COMP:uR', 'PF:Pariisi', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'LANG:FI', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', 'LF:Paris', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'COMP:uR', '-SPEC:R', '-COMP:v', 'LF:Pekka', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'LANG:FI', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', 'PF:Pekka', '-SPEC:uWH', '-SPEC:N', '-SEM:directional', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
pelottaa        ['LANG:FI']
pelkaa-         {'-COMP:v', 'SPEC:P', 'PHI:DET:_', 'CLASS:TR', '-SPEC:FORCE', 'COMP:D', 'LANG:FI', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'PF:pelkaa', 'ASP', '-SPEC:T/fin', '-COMP:V', 'COMP:P', '!COMP:*', 'V', '-COMP:N', 'LF:fear', '-COMP:P', '-VAL', 'SPEC:TO/inf'}
persuades       ['LANG:EN']
persuade-       {'PF:persuade', 'LF:persuade', '-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'LANG:EN', 'PHI:NUM:_', 'SEM:external', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', 'PHI:GEN:_', '-SPEC:T/fin', '!COMP:*', '-COMP:V', 'COMP:P', 'V', 'COMP:TO/inf', '-COMP:N', '-VAL', 'SPEC:TO/inf'}
peruuntui       ['LANG:FI']
peruuntu-       {'-COMP:v', 'SPEC:P', 'PHI:DET:_', 'LF:cancelled', '-SPEC:FORCE', 'LANG:FI', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', 'SPEC:D', '-COMP:N', 'PF:peruuntui', '-VAL', 'SPEC:TO/inf'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'-COMP:v', 'SPEC:P', 'PHI:DET:_', 'CLASS:TR', '-SPEC:FORCE', 'COMP:D', 'LANG:FI', 'ASP:BOUNDED', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', 'PF:pese', '-SPEC:T/fin', 'LF:wash', '-COMP:V', 'COMP:P', 'V', '!COMP:*', '-COMP:N', '-COMP:P', '-VAL', 'SPEC:TO/inf'}
pese-           {'-COMP:v', 'SPEC:P', 'PHI:DET:_', 'CLASS:TR', '-SPEC:FORCE', 'COMP:D', 'LANG:FI', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', 'PF:pese', '-SPEC:T/fin', 'LF:wash', '-COMP:V', 'COMP:P', 'V', '!COMP:*', '-COMP:N', '-COMP:P', '-VAL', 'SPEC:TO/inf'}
petardi         {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', 'PF:petardi', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', 'LF:firecrackers', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
pieni           ['LANG:FI']
pieni-          {'2SPEC', 'SPEC:D', 'LANG:FI', '0', 'PF:pieni-', 'LF:small'}
poikien         ['LANG:FI']
poika-          {'COMP:uR', '-SPEC:R', 'LF:boy', '-COMP:v', 'PF:poika', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'LANG:FI', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
puhelinta       ['LANG:FI']
puhelin-        {'2SPEC', 'SPEC:D', 'PF:puhelin', 'LANG:FI', '0', 'LF:phone'}
punainen        ['LANG:FI']
puna-           {'2SPEC', 'SPEC:D', 'LANG:FI', 'PF:puna-', '0', 'LF:red'}
presupposto     {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'PF:presupposto', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'LF:presupposition', 'COMP:P', 'N', '-COMP:N', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
primary         {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', 'LF:nurse', '-SPEC:N', '-COMP:D', 'PF:primary', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
promises        ['LANG:EN']
promise-        {'-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'COMP:D', 'LANG:EN', 'PHI:NUM:_', 'SEM:internal', 'SPEC:ADV', '-COMP:T/fin', 'PHI:PER:_', 'PF:promise', 'ARG', 'ASP', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', 'SPEC:D', '-COMP:N', 'LF:promise', '-VAL', 'SPEC:TO/inf'}
pyytaa          ['LANG:FI']
pyyta-          {'-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'LANG:FI', 'PHI:NUM:_', 'SEM:external', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'PF:pyyda', 'V', '-COMP:N', 'LF:ask', '-VAL', 'SPEC:TO/inf'}
raukesi         ['LANG:FI']
raukea-         {'-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'PF:raukea', 'LF:terminate', 'LANG:FI', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', '-COMP:N', '-VAL', 'SPEC:TO/inf'}
red             ['LANG:EN']
red-            {'2SPEC', 'SPEC:D', 'LANG:EN', 'PF:red', '0', 'LF:red'}
saavuttaa       ['LANG:FI']
saavutta-       {'-COMP:v', 'SPEC:P', 'PHI:DET:_', 'CLASS:TR', '-SPEC:FORCE', 'COMP:D', '!COMP:D', 'LF:reach', 'LANG:FI', 'ASP:BOUNDED', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', '-VAL', '-SPEC:T/fin', '-COMP:V', 'COMP:P', '!COMP:*', 'V', '-COMP:N', '-COMP:P', 'PF:saavutta-', 'SPEC:TO/inf'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'COMP:VA/inf', '-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'LANG:FI', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'SPEC:TO/inf', 'PHI:PER:_', 'ARG', 'ASP', 'COMP:FORCE', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', 'SPEC:D', '-COMP:N', 'PF:sano-', '-VAL', 'LF:say'}
said            ['LANG:EN']
say'            {'-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'LANG:EN', '!COMP:FORCE', 'PHI:NUM:_', 'PF:say', '-COMP:T/fin', 'SPEC:ADV', 'SPEC:TO/inf', 'PHI:PER:_', 'ARG', 'ASP', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', 'SPEC:D', '-COMP:N', '-VAL', 'LF:say'}
say-            {'-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'LANG:EN', '!COMP:FORCE', 'PHI:NUM:_', 'PF:say', '-COMP:T/fin', 'SPEC:ADV', 'SPEC:TO/inf', 'PHI:PER:_', 'ARG', 'ASP', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', 'SPEC:D', '-COMP:N', '-VAL', 'LF:say'}
sala            ['LANG:IT']
sala-           {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:C/fin', '-SPEC:V', 'PF:sala', '-SPEC:INF', '-COMP:WH', '-COMP:T/fin', 'LF:room', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
scoppiati       ['LANG:IT']
scoppia-        {'LF:explode', '-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', 'PHI:GEN:_', 'PF:scoppia', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', '-COMP:N', 'LANG:IT', '-VAL', 'SPEC:TO/inf'}
sen             {'D', '-SPEC:D', 'TAIL:PHI', 'PF:sen', 'LANG:FI', '-SPEC:V', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', '-COMP:T/fin', '!PROBE:N', 'COMP:N', 'TAIL:ASP', 'TAIL:*POL:NEG', 'adjoinable', '-SPEC:N', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:C', '-COMP:uR', '-SPEC:T/fin', 'LF:the/that', '!COMP:*', '-SPEC:P', 'OP'}
se'             {'D', '-SPEC:D', 'LANG:FI', '-SPEC:V', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', '-COMP:T/fin', '!PROBE:N', 'COMP:N', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:N', '-COMP:D', '-SPEC:C', '-COMP:uR', '-SPEC:T/fin', 'LF:the/that', '!COMP:*', '-SPEC:P', 'PF:se', 'OP'}
sentenza        {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'PF:sentenza', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'LF:sentence', 'COMP:P', 'N', '-COMP:N', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
Seine           ['LANG:EN']
Seine-          {'COMP:uR', '-SPEC:R', '-COMP:v', 'LF:Seine', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'LANG:EN', 'PF:Seine', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
sembrano        ['LANG:IT']
sembra-         {'-COMP:v', 'SPEC:P', '-SPEC:FORCE', 'LANG:EN', 'LF:seem', '-ARG', '-COMP:T/fin', 'SPEC:ADV', '!COMP:ARE/inf', '-COMP:D', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', '-ASP', 'SPEC:D', '-COMP:N', 'PF:sembra', '-VAL', 'SPEC:TO/inf'}
sleeps          ['LANG:EN']
sleep           {'-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'CLASS:INTR', 'LANG:EN', 'PHI:NUM:_', 'LF:sleep', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'PF:sleep', 'ASP', '-COMP:D', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', 'SPEC:D', '-COMP:N', '-VAL', 'SPEC:TO/inf'}
sleep-          {'-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'CLASS:INTR', 'LANG:EN', 'PHI:NUM:_', 'LF:sleep', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'PF:sleep', 'ASP', '-COMP:D', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', 'SPEC:D', '-COMP:N', '-VAL', 'SPEC:TO/inf'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'LANG:FI', 'PF:sopimus', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '!COMP:A/inf', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', 'LF:agreement', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
spinge          ['LANG:IT']
spinge-         {'-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', '!COMP:D', 'PHI:NUM:_', 'PF:spinge', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', 'PHI:GEN:_', 'LF:push', '-SPEC:T/fin', '-COMP:V', 'V', '-COMP:N', 'LANG:IT', '-COMP:P', '-VAL', 'SPEC:TO/inf'}
ssa             {'-SPEC:iWH', '-SPEC:ADV', 'PHI:DET:_', 'SPEC:*', '-SPEC:FORCE', 'COMP:D', 'LF:in', 'LANG:FI', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:V', '-SPEC:INF', 'TAIL:V', '-COMP:T/fin', 'adjoinable', '-SPEC:Neg/fin', 'PHI:PER:_', 'ARG', '-SPEC:N', 'P', '-SPEC:v', '-SPEC:C', '-SPEC:T/fin', '-SPEC:P', '!COMP:*', '-SPEC:iR', 'PF:ssa', '-COMP:N', '-VAL', 'COMP:n/MA', '-COMP:uWH', '-COMP:ADV'}
stanno          ['LANG:IT']
sta-            {'COMP:PRG', '-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'LANG:EN', 'PHI:NUM:_', 'SEM:internal', 'PF:sta', 'SPEC:ADV', '-COMP:T/fin', 'ARG', 'PHI:PER:_', 'PHI:GEN:_', 'LF:stay', '-SPEC:T/fin', '-COMP:V', 'COMP:P', '-ASP', 'V', 'SPEC:D', '-COMP:N', '-VAL', 'SPEC:TO/inf'}
sti             {'adjoinable', 'ADV', '-SPEC:N', 'LF:by', '-SPEC:T/fin', '!COMP:*', 'SPEC:*', '-SPEC:FORCE', 'TAIL:T', 'LANG:FI', 'PF:sti', '-ARG', '-SPEC:Neg/fin'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'COMP:uR', 'PF:sukka-', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'LF:socks', 'LANG:FI', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
talo            {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', 'PF:talo', '-SPEC:FORCE', 'COMP:R/D', 'LANG:FI', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV', 'LF:house'}
tama            ['LANG:EN']
tama-           {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', 'COMP:R', '-SPEC:FORCE', 'COMP:R/D', 'LANG:FI', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', 'PF:tama', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:ADV', '-COMP:AUX', '-COMP:A', 'LF:this', 'PHI'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'-COMP:v', 'LF:must', 'SPEC:P', 'PHI:DET:_', 'SPEC:*', '-SPEC:FORCE', 'FIN', 'LANG:FI', 'PHI:NUM:_', '-COMP:T/fin', 'MODAL', 'SPEC:ADV', '!COMP:A/inf', 'ARG', 'PHI:PER:_', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'PF:taytyy', 'V', '-ASP', '-COMP:N', '-VAL', 'SPEC:TO/inf'}
teki            ['LANG:FI']
teke-           {'-COMP:v', 'SPEC:P', 'PHI:DET:_', 'CLASS:TR', '-COMP:A/inf', '-SPEC:FORCE', '!COMP:D', 'COMP:D', 'PF:teke', 'LANG:FI', 'ASP:BOUNDED', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'LF:make', 'ASP', '-SPEC:T/fin', '-COMP:V', 'COMP:P', '!COMP:*', 'V', '-COMP:N', '-COMP:P', '-VAL', 'SPEC:TO/inf'}
that            {'LF:that', 'PF:that', '!COMP:*', 'FIN', '-SPEC:*', 'COMP:C/fin', 'LANG:EN', 'FORCE', '-VAL', '-ARG', '!PROBE:T/fin', 'COMP:T/fin'}
the             {'PHI:DEF:DEF', 'PF:the', 'D', '-SPEC:D', 'LANG:EN', '-SPEC:V', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', '-COMP:T/fin', '!PROBE:N', 'COMP:N', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:N', '-COMP:D', '-SPEC:C', '-COMP:uR', '-SPEC:T/fin', '!COMP:*', '-SPEC:P', 'LF:the', 'OP'}
to              {'-SPEC:iWH', 'LF:to', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:FORCE', 'COMP:D', '-SPEC:*', 'LANG:EN', 'PHI:NUM:_', '-SPEC:C/fin', 'TAIL:V,+SEM:directional', '-SPEC:V', '-SPEC:INF', '-float', '-COMP:T/fin', 'adjoinable', '-SPEC:Neg/fin', 'PHI:PER:_', '+SEM:directional', 'ARG', 'P', '-SPEC:N', '-SPEC:v', '-SPEC:C', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:P', 'PF:to', '!COMP:*', '-SPEC:iR', '-COMP:N', '-VAL', '-COMP:uWH', '-COMP:ADV'}
to_inf          {'-COMP:FORCE', 'TO/inf', 'PF:TO/inf', 'LANG:EN', 'INF', '-SPEC:V', '-COMP:T/fin', 'adjoinable', '?ARG', 'LF:TO/inf', '-SPEC:v', '-VAL', '-SPEC:T/fin', '!COMP:*', 'COMP:v', 'COMP:V', '-COMP:C/fin'}
towards         {'PF:towards', '-SPEC:iWH', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:FORCE', 'COMP:D', '-SPEC:*', 'LANG:EN', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:V', '-SPEC:INF', 'TAIL:V', '-float', '-COMP:T/fin', 'adjoinable', '-SPEC:Neg/fin', 'PHI:PER:_', 'ARG', '-SPEC:N', 'P', '-SPEC:v', '-VAL', '-SPEC:C', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:P', '!COMP:*', '-SPEC:iR', '-COMP:N', 'LF:towards', '-COMP:uWH', '-COMP:ADV'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'-COMP:v', 'SPEC:P', 'PHI:DET:_', 'CLASS:TR', '-SPEC:FORCE', 'COMP:D', 'LANG:FI', 'PF:tonaise', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', '-SPEC:T/fin', '-COMP:V', 'COMP:P', '!COMP:*', 'V', '-COMP:N', '-COMP:P', '-VAL', 'SPEC:TO/inf', 'LF:nudge'}
tta             {'-SPEC:iWH', 'PF:tta', '-SPEC:ADV', 'PHI:DET:_', 'SPEC:*', '-SPEC:FORCE', 'COMP:D', 'LANG:FI', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:V', '-SPEC:INF', '-COMP:T/fin', 'adjoinable', '-SPEC:Neg/fin', 'PHI:PER:_', 'ADV', 'ARG', 'P', '-SPEC:N', '-SPEC:v', '-SPEC:C', 'LF:without', '-SPEC:T/fin', '-SPEC:P', '!COMP:*', '-SPEC:iR', '-COMP:N', '-VAL', 'COMP:n/MA', '-COMP:uWH', '-COMP:ADV'}
tries           ['LANG:EN']
try-            {'!COMP:TO/inf', '!COMP:-ARG', '-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'LF:try', 'LANG:EN', 'PHI:NUM:_', 'SEM:internal', 'SPEC:ADV', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'ASP', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', 'SPEC:D', '-COMP:N', 'PF:try', '-VAL', 'SPEC:TO/inf'}
verifiche       {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', 'PF:verifiche', '-SPEC:FORCE', 'COMP:R/D', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV', 'LF:verification'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'PF:virtaa', '-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'LANG:FI', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', '-COMP:D', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', 'SPEC:D', '-COMP:N', '-VAL', 'SPEC:TO/inf', '!COMP:P', 'LF:flow'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', '-SPEC:*', 'LANG:EN', 'PHI:NUM:_', 'SEM:internal', 'SPEC:ADV', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'ASP', 'PF:volu', 'LF:want', 'PHI:GEN:_', '-SPEC:T/fin', '!COMP:*', '-COMP:V', 'COMP:P', 'V', '-COMP:N', '-VAL', 'SPEC:TO/inf'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'PF:voitta', '-COMP:v', 'SPEC:P', 'PHI:DET:_', 'CLASS:TR', '-SPEC:FORCE', 'COMP:D', 'LANG:EN', 'ASP:BOUNDED', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', 'PHI:GEN:_', '-SPEC:T/fin', 'LF:win', '-COMP:V', 'SEM:achievement', 'V', 'COMP:P', '!COMP:*', '-COMP:N', '-COMP:P', '-VAL', 'SPEC:TO/inf'}
wants           ['LANG:EN']
want-           {'-COMP:v', 'SPEC:P', 'PHI:DET:_', 'CLASS:TR', '-SPEC:FORCE', 'COMP:D', 'LANG:EN', 'PHI:NUM:_', 'PF:want', '-SPEC:TO/inf', 'SPEC:ADV', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'ASP', 'PHI:GEN:_', 'LF:want', '-COMP:V', '-SPEC:T/fin', 'COMP:P', '!COMP:*', 'V', 'COMP:TO/inf', '-COMP:N', '-COMP:P', '-VAL'}
what            ['LANG:EN']
what-           {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'PF:what', 'PHI_N', '-COMP:*', 'LANG:EN', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', 'LF:what', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
which           {'LF:which', 'D', '-SPEC:D', 'LANG:EN', '-SPEC:V', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', '-COMP:T/fin', '!PROBE:N', 'COMP:N', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:N', 'OP:WH', '-COMP:D', '-SPEC:C', '-COMP:uR', 'PF:which', '-SPEC:T/fin', '!COMP:*', '-SPEC:P', 'OP'}
who             ['LANG:EN']
who-            {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'LF:who', 'PHI_N', '-COMP:*', 'LANG:EN', 'PF:who', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
whether         {'OP:Q', 'PF:whether', 'Q', 'FIN', '-SPEC:*', 'COMP:C/fin', 'LANG:EN', 'FORCE', '-ARG', 'OP:WH', '!COMP:*', '-VAL', '!PROBE:T/fin', 'LF:whether', 'COMP:T/fin', 'OP'}
yrittaa         ['LANG:FI']
yritta-         {'!COMP:-ARG', '-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'LF:try', 'LANG:EN', 'PHI:NUM:_', 'PF:yritta', 'SEM:internal', 'SPEC:ADV', '-COMP:T/fin', '!COMP:A/inf', 'ARG', 'ASP', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', 'SPEC:D', '-COMP:N', '-VAL', 'SPEC:TO/inf'}
mina            ['LANG:EN']
mina-           {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'PHI_N', '-COMP:*', 'LANG:FI', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', 'LF:I', '-SPEC:P', '-COMP:V', 'COMP:P', 'PF:mina', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
sina            ['LANG:EN']
sina-           {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', 'PF:sina', '-SPEC:FORCE', 'COMP:R/D', 'PHI_N', '-COMP:*', 'LANG:FI', 'LF:you', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
han             ['LANG:EN']
han-            {'COMP:uR', '-SPEC:R', '-COMP:v', 'PF:han', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'PHI_N', '-COMP:*', 'LANG:FI', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', 'LF:s/he', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'COMP:uR', '-SPEC:R', 'PF:me', '-COMP:v', '-SPEC:ADV', 'SPEC:A', 'LF:we', '-SPEC:FORCE', 'COMP:R/D', 'PHI_N', '-COMP:*', 'LANG:FI', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
te              ['LANG:EN']
te-             {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'PHI_N', '-COMP:*', 'LANG:FI', 'LF:you', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', 'PF:te', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he-             {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', 'COMP:R', '-SPEC:FORCE', 'COMP:R/D', 'PHI_N', '-COMP:*', 'LANG:FI', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', 'PF:he', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'LF:they', '-COMP:ADV'}
he-             {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'PHI_N', '-COMP:*', 'LANG:EN', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', 'LF:he', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', 'PF:he', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
se              ['LANG:FI']
se-             {'D', '-SPEC:D', 'LANG:FI', '-SPEC:V', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', '-COMP:T/fin', '!PROBE:N', 'COMP:N', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:N', '-COMP:D', '-SPEC:C', '-COMP:uR', '-SPEC:T/fin', '!COMP:*', '-SPEC:P', 'LF:it/that', 'PF:se', 'OP'}
I               ['LANG:EN']
I-              {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'PHI_N', '-COMP:*', 'LANG:EN', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', 'PF:I', '-SPEC:T/fin', 'LF:I', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
you             ['LANG:EN']
you-            {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'PHI_N', '-COMP:*', 'LANG:EN', 'LF:you', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', 'PF:you', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
he              ['LANG:EN']
she             ['LANG:EN']
she-            {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'PHI_N', '-COMP:*', 'LANG:EN', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', 'LF:she', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'PF:she', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
we              ['LANG:EN']
we-             {'COMP:uR', '-SPEC:R', 'PF:we', '-COMP:v', '-SPEC:ADV', 'SPEC:A', 'LF:we', '-SPEC:FORCE', 'COMP:R/D', 'PHI_N', '-COMP:*', 'LANG:EN', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
you_pl          ['LANG:EN']
you_pl-         {'COMP:uR', '-SPEC:R', '-COMP:v', 'LF:you_pl', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'LANG:EN', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', 'PHI', '-COMP:C/fin', '-COMP:N', '-COMP:AUX', '-COMP:ADV', '-COMP:A', 'COMP:R', 'PF:you_pl'}
they            ['LANG:EN']
they-           {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', 'COMP:R', '-SPEC:FORCE', 'COMP:R/D', 'PHI_N', '-COMP:*', 'LANG:EN', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'LF:they', '-COMP:ADV', 'PF:they'}
it              ['LANG:EN']
it-             {'D', '-SPEC:D', 'LANG:EN', '-SPEC:V', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', '-COMP:T/fin', '!PROBE:N', 'COMP:N', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:N', '-COMP:D', 'PF:it', '-SPEC:C', '-COMP:uR', '-SPEC:T/fin', '!COMP:*', '-SPEC:P', 'LF:it/that', 'OP'}
io              ['LANG:EN']
io-             {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'PHI_N', '-COMP:*', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', 'PF:io', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', 'LF:I', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
tu              ['LANG:EN']
tu-             {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'PF:tu', 'COMP:R/D', 'PHI_N', '-COMP:*', 'LF:you', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
lui             ['LANG:EN']
lui-            {'COMP:uR', '-SPEC:R', 'PF:lui', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'PHI_N', '-COMP:*', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', 'LF:he', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
lei             ['LANG:EN']
lei-            {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'PHI_N', '-COMP:*', '-COMP:A', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', 'LF:she', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', 'PF:lei', 'COMP:R', '-COMP:ADV'}
noi             ['LANG:EN']
noi-            {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', 'LF:we', '-SPEC:FORCE', 'COMP:R/D', 'PHI_N', '-COMP:*', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'PF:noi', 'COMP:P', 'N', '-COMP:N', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
voi             ['LANG:EN']
voi-            {'COMP:uR', '-SPEC:R', '-COMP:v', 'LF:you_pl', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'PHI_N', '-COMP:*', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', 'PF:voi', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
loro            ['LANG:EN']
loro-           {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', 'COMP:R', '-SPEC:FORCE', 'COMP:R/D', 'PF:loro', 'PHI_N', '-COMP:*', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'LF:they', '-COMP:ADV'}
mi              ['LANG:EN']
mi-             {'-SPEC:R', '-COMP:v', '-SPEC:ADV', '-SPEC:FORCE', 'PHI_N', '-COMP:*', '-SPEC:C/fin', '-SPEC:V', '-SPEC:INF', 'PF:mi(cl)', '-SPEC:uWH', '-SPEC:N', '-SPEC:T/fin', '-SPEC:P', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', 'COMP:uR', 'SPEC:A', 'COMP:R/D', 'CL', '-COMP:WH', '-COMP:T/fin', '-COMP:D', 'LF:me', '-COMP:V', 'COMP:P', 'N', '-COMP:N', 'LANG:IT', 'COMP:R', '-COMP:ADV'}
la              ['LANG:EN']
la-             {'-SPEC:R', '-COMP:v', 'LF:her', '-SPEC:ADV', '-SPEC:FORCE', 'PHI_N', '-COMP:*', '-SPEC:C/fin', '-SPEC:V', '-SPEC:INF', 'PF:la(cl)', '-SPEC:uWH', '-SPEC:N', '-SPEC:T/fin', '-SPEC:P', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', 'COMP:uR', 'SPEC:A', 'COMP:R/D', 'CL', '-COMP:WH', '-COMP:T/fin', '-COMP:D', '-COMP:V', 'COMP:P', 'N', '-COMP:N', 'LANG:IT', 'COMP:R', '-COMP:ADV'}
lo              ['LANG:EN']
lo-             {'-SPEC:R', '-COMP:v', '-SPEC:ADV', '-SPEC:FORCE', 'PHI_N', '-COMP:*', '-SPEC:C/fin', '-SPEC:V', '-SPEC:INF', '-SPEC:uWH', '-SPEC:N', '-SPEC:T/fin', '-SPEC:P', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', 'COMP:uR', 'SPEC:A', 'LF:him', 'COMP:R/D', 'PF:lo(cl)', 'CL', '-COMP:WH', '-COMP:T/fin', '-COMP:D', '-COMP:V', 'COMP:P', 'N', '-COMP:N', 'LANG:IT', 'COMP:R', '-COMP:ADV'}
si              ['LANG:EN']
si-             {'-SPEC:R', 'PF:si(cl)', '-COMP:v', '-SPEC:ADV', '-SPEC:FORCE', 'PHI_N', '-COMP:*', '-SPEC:C/fin', '-SPEC:V', '-SPEC:INF', '-SPEC:uWH', '-SPEC:N', '-SPEC:T/fin', '-SPEC:P', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', 'COMP:uR', 'CAL:CL', 'LF:3sg', 'SPEC:A', 'COMP:R/D', '-COMP:WH', '-COMP:T/fin', '-COMP:D', '-COMP:V', 'COMP:P', 'N', '-COMP:N', 'LANG:IT', 'COMP:R', '-COMP:ADV'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'COMP:uR', '-SPEC:R', '-COMP:v', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'PHI_N', '-COMP:*', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', 'PF:ci', '-COMP:T/fin', 'LF:there', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', 'LANG:IT', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', 'COMP:R', '-COMP:ADV'}
[-n]            {'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:FI', 'PHI:PER:1', 'PHI', 'inflectional'}
[-t]            {'PHI:NUM:SG', 'PHI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:FI', 'PHI:PER:2', 'inflectional'}
[-V]            {'PHI:PER:3', 'PHI:NUM:SG', 'LANG:FI', 'PHI', 'inflectional'}
[-mme]          {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:FI', 'PHI:PER:1', 'PHI:NUM:PL', 'PHI', 'inflectional'}
[-mme]          {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:1', 'inflectional'}
[-tte]          {'PHI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:2', 'inflectional'}
[-vat]          {'PHI:PER:3', 'LANG:FI', 'PHI:NUM:PL', 'PHI', 'inflectional'}
[-ni]           {'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:FI', 'PHI:PER:1', 'PHI', 'inflectional'}
[-si]           {'PHI:NUM:SG', 'PHI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:FI', 'PHI:PER:2', 'inflectional'}
[-nsa]          {'PHI:PER:3', 'PHI:NUM:SG', 'LANG:FI', 'PHI', 'inflectional'}
[-an]           {'PHI:PER:3', 'LANG:FI', 'PHI', 'inflectional'}
[-nne]          {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:2', 'inflectional'}
[-s]            {'PHI:PER:3', 'PHI:NUM:SG', 'PHI:GEN:M', 'LANG:EN', 'PHI:GEN:F', 'PHI', 'inflectional'}
[-0]            {'PHI:NUM:PL', 'PHI:PER:2', 'inflectional', 'PHI:PER:3', 'PHI:NUM:SG', 'PHI', 'PHI:DET:DEF', 'PHI:GEN:N', 'LANG:EN', 'PHI:PER:1'}
[-o]            {'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:PER:1', 'PHI', 'inflectional'}
[-i]            {'PHI:NUM:SG', 'PHI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:PER:2', 'inflectional'}
[-a]            {'PHI:PER:3', 'PHI:NUM:SG', 'PHI:DET:DEF', 'LANG:IT', 'PHI', 'inflectional'}
[-e]            {'PHI:PER:3', 'PHI:NUM:SG', 'PHI:DET:DEF', 'LANG:IT', 'PHI', 'inflectional'}
[-iamo]         {'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:PER:1', 'PHI:NUM:PL', 'PHI', 'inflectional'}
[-te]           {'PHI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:PL', 'PHI:PER:2', 'inflectional'}
[-no]           {'PHI:PER:3', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:PL', 'PHI', 'inflectional'}
[-nom]          {'adjoinable', 'LANG:EN', 'TAIL:FIN,ARG,VAL', 'NOM', 'inflectional'}
[-par]          {'adjoinable', 'TAIL:ARG,-VAL', 'LANG:FI', 'PAR', 'inflectional'}
[-gen]          {'LANG:EN', 'TAIL:INF,ARG', '-float', 'GEN', 'inflectional'}
gen             {'LANG:EN', 'TAIL:INF,ARG', '-float', 'GEN', 'inflectional'}
[-n_acc]        {'adjoinable', 'TAIL:PHI', 'TAIL:*POL:NEG', 'LANG:FI', 'TAIL:ARG,ASP:BOUNDED', 'n-ACC', 'inflectional'}
[-t_acc]        {'adjoinable', 'TAIL:*POL:NEG', 'LANG:FI', 'TAIL:ARG,ASP:BOUNDED', 't-ACC', 'inflectional'}
[-0_acc]        {'adjoinable', 'TAIL:*POL:NEG', 'LANG:FI', '0_ACC', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*PHI', 'inflectional'}
asp             {'LANG:EN', 'ASP:BOUNDED', 'inflectional'}
a'              {'PF:a', 'LANG:X', 'a', 'LF:A'}
b'              {'PF:b', 'b', 'LANG:X', 'LF:B'}
b''             {'PF:b', 'LANG:EN', '-COMP:c', 'b', 'LF:B'}
c''             {'PF:c', 'LANG:EN', 'LF:C', 'SPEC:a', 'c'}
c'              {'LANG:X', 'PF:c', 'LF:C', 'c'}
d'              {'PF:d', 'd', 'LANG:', 'LF:D'}
a''             ['LANG:EN']
x'              {'x', 'LANG:X', 'LF:X', 'PF:x'}
y'              {'LF:Y', 'PF:y', 'y', 'LANG:X'}
z'              {'z', 'LF:Z', 'LANG:X', 'PF:x'}
John'           {'LF:John', "N'", 'LANG:X', 'PF:John'}
admires'        {"V'", 'LF:admires', 'LANG:X', 'PF:admires'}
admires''       {'-COMP:v', 'SPEC:P', 'PHI:DET:_', '-SPEC:FORCE', 'LANG:EN', 'PHI:NUM:_', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'ARG', 'ASP', 'PHI:GEN:_', '-SPEC:T/fin', '-COMP:V', 'COMP:P', 'V', 'SPEC:D', 'LF:admires', '-COMP:N', 'PF:admires', '-VAL', 'SPEC:TO/inf'}
Mary'           {'LF:mary', 'PF:Mary', "N'", 'LANG:X'}
T/fin           {'VAL', 'T', 'T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'SPEC:*', 'COMP:D', 'FIN', '-SPEC:Neg', 'LANG:EN', 'PHI:NUM:_', '-SPEC:C/fin', 'PF:T', '-SPEC:V', '-SPEC:TO/inf', '-COMP:T/fin', 'PHI:PER:_', 'ARG', '-COMP:INF', '-SPEC:N', '-SPEC:v', 'PHI:GEN:_', '-SPEC:T/fin', 'COMP:T/prt', '!COMP:*', 'COMP:v', 'LF:T', 'SPEC:D', '!SPEC:D', 'COMP:V', 'SPEC:TO/inf', '!PROBE:V'}
v               {'PHI:PER:_', 'ARG', '-SPEC:N', 'ASP', 'PHI:GEN:_', 'PHI:DET:_', '!COMP:*', 'SPEC:D', 'LANG:EN', 'v', 'COMP:V', 'PHI:NUM:_', '-VAL', 'LF:v', '!PROBE:V', 'PF:v'}
C/fin           {'VAL', 'COMP:Neg/fin', '!PROBE:FIN', 'SPEC:*', 'FIN', 'LANG:EN', '-SPEC:C/fin', '-ARG', '-SPEC:N', '-SPEC:T/fin', '!COMP:*', 'PF:C', '-COMP:T/prt', 'C/fin', '-COMP:C/fin', 'LF:C/fin', 'C', 'COMP:T/fin'}
T               {'VAL', 'T', 'PHI:DET:_', '-SPEC:FORCE', 'SPEC:*', 'FIN', 'COMP:D', 'LANG:EN', 'PHI:NUM:_', 'PF:T', '-SPEC:V', 'PHI:PER:_', 'ARG', '-SPEC:N', 'PHI:GEN:_', '-COMP:NEG', 'COMP:v', '!COMP:*', 'COMP:T/prt', '-SPEC:T/fin', 'LF:T', 'SPEC:D', 'COMP:V', '!PROBE:V'}
T/prt           {'VAL', 'T', 'PHI:DET:_', '-SPEC:FORCE', 'SPEC:*', 'FIN', 'COMP:D', 'LANG:EN', 'PHI:NUM:_', '-SPEC:V', 'PF:T/prt', 'PHI:PER:_', 'LF:T/prt', 'ARG', '-SPEC:N', 'PHI:GEN:_', '-COMP:NEG', 'COMP:v', 'T/prt', '!COMP:*', 'COMP:T/prt', '-SPEC:T/fin', 'SPEC:D', 'COMP:V', '!PROBE:V'}
a0              {'adjoinable', '-SPEC:A', 'A', '-adjoinable', '-SPEC:D', 'LANG:EN', 'PF:A', 'COMP:0', 'LF:A', 'TAIL:D'}
n               {'-SPEC:R', '-COMP:v', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:FORCE', 'SPEC:*', 'COMP:0', 'PF:n', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:V', '-SPEC:INF', 'PHI:PER:_', '-SPEC:uWH', '-SPEC:N', 'ARG', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:P', '-COMP:AUX', '-COMP:A', '-COMP:C/fin', 'COMP:uR', 'VAL', 'SPEC:A', 'COMP:R/D', 'n', 'LANG:EN', 'INF', '-COMP:WH', 'LF:n', '-COMP:T/fin', '!SPEC:*', '-COMP:D', '-COMP:V', 'COMP:P', 'COMP:v', '!COMP:*', 'N', '-COMP:N', '!SPEC:D', 'COMP:V', 'COMP:R', '-COMP:ADV'}
impass          {'ARG', 'LF:impass', '-SPEC:N', 'ASP', 'PHI:GEN:_', 'PHI:DET:_', 'PF:impass', '!COMP:*', 'SPEC:D', 'LANG:EN', 'v', 'COMP:V', 'PHI:NUM:_', '-VAL', '!PROBE:V', 'PHI:PER:_'}
cau             {'ARG', '-SPEC:N', 'ASP', 'PHI:GEN:_', 'LF:v/Cause', 'PHI:DET:_', '!COMP:*', 'PF:Cau', 'SPEC:D', 'LANG:EN', 'v', 'COMP:V', 'PHI:NUM:_', '-VAL', '!PROBE:V', 'PHI:PER:_'}
INF             {'LF:INF', '-COMP:FORCE', '-SPEC:T/fin', '!COMP:*', 'COMP:v', 'COMP:V', 'LANG:EN', 'INF', '-SPEC:V', '-COMP:C/fin', 'PF:INF', '-COMP:T/fin'}
prtcpl          {'VAL', '-COMP:FORCE', 'T', 'PHI:DET:_', 'SPEC:*', '-SPEC:FORCE', 'FIN', 'COMP:D', 'LANG:EN', 'PHI:NUM:_', 'INF', '-SPEC:V', 'PF:T/prt', '-COMP:T/fin', 'LF:T/prt', 'PHI:PER:_', 'ARG', '-SPEC:N', 'PHI:GEN:_', '-COMP:NEG', '-SPEC:T/fin', 'T/prt', 'COMP:v', '!COMP:*', 'COMP:T/prt', 'SPEC:D', 'COMP:V', '-COMP:C/fin', '!PROBE:V'}
TO/inf          {'-COMP:FORCE', '!COMP:V', 'TO/inf', 'PF:TO/inf', 'LANG:EN', 'INF', '-SPEC:V', '-COMP:T/fin', 'adjoinable', '?ARG', 'LF:TO/inf', '-SPEC:v', '-SPEC:T/fin', '!COMP:*', 'COMP:v', '-COMP:C/fin', 'COMP:V', '-VAL'}
A/inf           {'-COMP:FORCE', 'A/inf', 'PF:A/inf', 'SPEC:*', '?VAL', 'LANG:EN', 'INF', '-SPEC:V', '-SPEC:Neg/fin', '-COMP:T/fin', '?ARG', '-SPEC:T/fin', '!COMP:*', 'COMP:v', 'COMP:V', '-COMP:C/fin', 'LF:A/inf'}
ARE/inf         {'VAL', '-COMP:FORCE', 'LF:ARE/inf', 'ARE/inf', 'SPEC:*', 'LANG:EN', 'INF', '-SPEC:V', '-COMP:T/fin', '?ARG', 'PF:are', '-adjoinable', '-SPEC:T/fin', '!COMP:*', 'COMP:v', 'COMP:V', '-COMP:C/fin'}
ESSA/inf        {'LF:while', '-COMP:FORCE', 'ESSA/inf', '?VAL', 'SPEC:*', '-SPEC:FORCE', 'LANG:EN', 'PF:essa', 'INF', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', '-COMP:T/fin', '?ARG', 'ADV', '-SPEC:N', '-SPEC:T/fin', 'COMP:v', '!COMP:*', 'TAIL:T', 'COMP:V', '-COMP:C/fin'}
TUA/inf         {'-COMP:FORCE', 'PHI:DET:_', '-SPEC:FORCE', 'LANG:EN', 'PF:tua', 'PHI:NUM:_', 'INF', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', '!SPEC:*', 'CAL', 'ADV', 'ARG', '-SPEC:N', '-COMP:T/fin', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', 'COMP:v', '!COMP:*', 'TAIL:T', 'TUA/inf', 'COMP:V', '-COMP:C/fin', 'LF:after'}
VA/inf          {'VAL', '-COMP:FORCE', 'PHI:DET:_', 'SPEC:*', 'LANG:EN', 'PHI:NUM:_', 'INF', '-SPEC:V', 'PF:vAn', '-COMP:T/fin', 'PHI:PER:_', '!SPEC:*', 'ARG', '-SPEC:N', 'PHI:GEN:_', 'LF:VA', '-SPEC:T/fin', '!COMP:*', 'COMP:v', 'COMP:V', '-COMP:C/fin', 'VA/inf'}
MA/ssa          {'PF:massa', 'PHI:DET:_', '-SPEC:FORCE', '-SPEC:*', 'LF:in_doing', 'LANG:EN', 'PHI:NUM:_', 'TAIL:V', '-SPEC:Neg/fin', 'adjoinable', 'MA/inf', 'PHI:PER:_', 'ADV', 'ARG', '-SPEC:N', 'PHI:GEN:_', 'COMP:v', '-SPEC:T/fin', 'COMP:V', '-VAL'}
MA/tta          {'adjoinable', 'PF:matta', 'PHI:PER:_', 'ADV', 'ARG', '-SPEC:N', 'LF:without_doing', '-SPEC:Neg/fin', 'PHI:GEN:_', 'PHI:DET:_', '-SPEC:FORCE', '-SPEC:T/fin', 'TAIL:T', 'LANG:EN', 'PHI:NUM:_', '-VAL', 'MA/inf'}
MA/lla          {'PHI:DET:_', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:PER:_', 'MA/inf', 'ARG', '-SPEC:N', 'PHI:GEN:_', 'PF:malla', 'LF:by_doing', '-SPEC:T/fin', 'TAIL:T', 'LANG:EN', '-SPEC:Neg/fin', 'adjoinable', 'ADV', 'COMP:v', 'COMP:V', '-VAL'}
MA/inf          {'PHI:DET:_', '-SPEC:FORCE', 'PF:maan', 'PHI:NUM:_', 'TAIL:V', 'PHI:PER:_', 'MA/inf', 'ARG', '-SPEC:N', 'PHI:GEN:_', '-SPEC:T/fin', 'LF:to_do', 'LANG:EN', '-SPEC:Neg/fin', 'adjoinable', 'ADV', 'COMP:v', 'COMP:V', '-VAL'}
E/inf           {'adjoinable', 'ADV', '-SPEC:N', '-VAL', 'LF:by', '-SPEC:T/fin', 'SPEC:*', '-SPEC:FORCE', 'LANG:FI', 'PF:en', '-ARG', '-SPEC:Neg/fin'}
BE-             {'-COMP:v', 'SPEC:P', '-SPEC:FORCE', 'LANG:EN', 'COPULA', 'LF:BE', '-ARG', '-COMP:T/fin', 'SPEC:ADV', 'ASP', 'PF:BE', 'COMP:T/prt', '!COMP:*', '-SPEC:T/fin', '-COMP:V', 'V', 'COMP:P', 'SPEC:D', '-COMP:N', '-VAL', 'SPEC:TO/inf'}
D               {'D', '-SPEC:D', 'LANG:EN', '-SPEC:V', '-SPEC:INF', '-ARG', '-SPEC:MA/lla', '-COMP:T/fin', '!PROBE:N', 'COMP:N', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:N', '-COMP:D', '-SPEC:C', '-COMP:uR', '-SPEC:T/fin', '!COMP:*', '-SPEC:P', 'LF:D', 'PF:D', 'OP'}
P               {'-SPEC:iWH', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:FORCE', 'COMP:D', '-SPEC:*', 'PF:P', 'LANG:EN', 'PHI:NUM:_', '-SPEC:C/fin', '-SPEC:V', 'LF:P', '-SPEC:INF', '-float', '-COMP:T/fin', 'adjoinable', '-SPEC:Neg/fin', 'PHI:PER:_', 'ARG', '-SPEC:N', 'P', '-SPEC:v', 'PHI:GEN:_', '-SPEC:C', '-SPEC:T/fin', '-SPEC:P', '!COMP:*', '-SPEC:iR', '-COMP:N', '-VAL', '-COMP:uWH', '-COMP:ADV'}
pro             ['LANG:EN']
pro-            {'COMP:uR', '-SPEC:R', '-COMP:v', 'PF:(pro)', '-SPEC:ADV', 'SPEC:A', '-SPEC:FORCE', 'COMP:R/D', 'LANG:EN', '-SPEC:C/fin', '-SPEC:V', '-COMP:WH', '-SPEC:INF', '-COMP:T/fin', 'LF:pro', '-SPEC:uWH', '-SPEC:N', '-COMP:D', '-SPEC:T/fin', '-SPEC:P', '-COMP:V', 'COMP:P', 'N', '-COMP:N', '-COMP:C/fin', '-COMP:ADV', '-COMP:AUX', '-COMP:A', 'COMP:R', 'PHI'}
cl              {'CL', 'LANG:EN', 'LEFT:D,CL', 'RIGHT:PRG', 'LEFT:T/fin', 'RIGHT:ARE/inf', 'inflectional'}
inc             {'LANG:EN', 'INCORPORATED', 'inflectional'}
sg              {'PHI:NUM:SG', 'LANG:EN', 'inflectional'}
pl              {'PHI:NUM:PL', 'LANG:EN', 'inflectional'}
1p              {'LANG:EN', 'PHI:PER:1', 'inflectional'}
2p              {'LANG:EN', 'PHI:PER:2', 'inflectional'}
3p              {'PHI:PER:3', 'LANG:EN', 'inflectional'}
def             {'PHI:DET:DEF', 'LANG:EN', 'inflectional'}
indef           {'LANG:EN', 'PHI:DET:INDEF', 'inflectional'}
hum             {'PHI:HUM:HUM', 'LANG:EN', 'inflectional'}
nonhum          {'PHI:HUM:NONHUM', 'LANG:EN', 'inflectional'}
m               {'PHI:GEN:M', 'LANG:EN', 'inflectional'}
f               {'LANG:EN', 'PHI:GEN:F', 'inflectional'}
nom             {'LANG:EN', 'NOM', 'TAIL:FIN,!COMP:*,VAL', 'inflectional'}
acc             {'TAIL:v', 'LANG:EN', 'ACC', 'inflectional'}
dat             {'DAT', 'TAIL:v', 'LANG:EN', 'inflectional'}
uC/op           {'uC/op', 'LANG:EN', 'inflectional'}
wh              {'OP:_', 'LANG:EN', 'OP:WH', 'inflectional'}
wh_             {'OP', 'LANG:EN', 'FORCE:OP:WH', 'OP:_', 'inflectional'}
top             {'OP:TOP', 'LANG:EN', 'inflectional'}
foc             {'OP:FOC', 'LANG:EN', 'inflectional'}
C/op            {'OP:C/OP', 'LANG:EN', 'inflectional'}
rel             {'adjoinable', 'LANG:EN', 'OP:REL', '-COMP:C/fin', 'inflectional'}
Q               {'OP:Q', 'OP', 'LANG:EN', 'OP:WH', 'inflectional'}
