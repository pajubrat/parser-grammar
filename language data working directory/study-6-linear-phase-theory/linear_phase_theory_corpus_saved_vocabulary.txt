ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'-COMP:T/fin', 'LF:to', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', 'COMP:ARE/inf', '-SPEC:v', '-SPEC:C', '-COMP:N', '-SPEC:*', 'TAIL:V', '-SPEC:T/fin', '-COMP:ADV', '!COMP:*', '-SPEC:INF', '-ARG', '-SPEC:iWH', 'LANG:IT', 'P', '-COMP:A', 'adjoinable', '-COMP:T', 'COMP:D', 'PF:a', '-SPEC:iR', '-VAL', '-COMP:uWH', '-SPEC:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:P'}
a_D             {'PF:D', '-COMP:T/fin', 'OP', '-SPEC:V', '-COMP:P', '-SPEC:C', '-COMP:uR', '-SPEC:T/fin', 'D', '!COMP:*', '-ARG', 'LF:D', 'adjoinable', 'LANG:EN', '!PROBE:N', '-SPEC:MA/lla', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:INF', '-SPEC:P', 'COMP:N'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'SPEC:P', '-COMP:P', 'PF:admire', 'LF:admire', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', '!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'LANG:EN', '-SPEC:Neg', 'V', 'ASP', '-VAL', 'PHI:GEN:_', '-SPEC:FORCE', '-COMP:Neg'}
admire*         ['LANG:EN']
T/fin*          {'NO_DET', '!SPEC:*', 'NO_NUMBER', 'CAT:T/fin', 'LANG:EN', '-VAL', "PF:T/fin'", 'LF:T'}
v*              {'NO_DET', 'LANG:EN', 'LF:v', '-VAL', 'CAT:v', 'PF:v', 'NO_NUMBER'}
admire**        ['LANG:EN']
T/fin**         {'NO_DET', 'PHI:PER:3', '!SPEC:*', 'NO_NUMBER', 'CAT:T/fin', 'LANG:EN', '-VAL', 'NO_PERSON', "PF:T/fin''", 'LF:T'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'SPEC:P', 'LF:admire', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'PF:adora', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', 'LANG:IT', 'PHI:DET:_', 'COMP:D', 'PHI:GEN:_', 'ASP', 'V', '-VAL', '-SPEC:FORCE'}
antaa           ['LANG:FI']
anta-           {'SPEC:P', '+SEM:directional', 'LANG:FI', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ASP:BOUNDED', 'ARG', 'SPEC:ADV', '-COMP:FIN', 'SPEC:D', 'SPEC:TO/inf', '-SPEC:T/fin', '-COMP:v', '!COMP:*', 'PHI:NUM:_', 'PF:antaa', 'PHI:DET:_', 'LF:give', 'COMP:D', 'ASP', 'V', '-VAL', 'CLASS:DITR', '-SPEC:FORCE'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'SPEC:P', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'LF:ask', 'ARG', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SEM:internal', 'SPEC:TO/inf', '-COMP:v', 'PHI:NUM:_', 'PF:ask', 'PHI:DET:_', 'COMP:D', 'LANG:EN', 'ASP', 'V', '-VAL', 'PHI:GEN:_', '-SPEC:FORCE'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'N', 'LANG:FI', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', '-SEM:directional', 'COMP:R', '-COMP:A', 'LF:key', '-SPEC:ADV', 'PF:avain', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'LANG:FI', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', '-SEM:directional', 'LF:car', 'COMP:R', '-COMP:A', '-SPEC:ADV', 'PF:auto', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
bank            {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'LF:bank_inst', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'COMP:R', 'FREQ:1', '-COMP:A', 'LANG:EN', 'PF:bank1', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
bank            {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', '-COMP:WH', 'COMP:C', '-COMP:v', 'PF:bank2', '-SPEC:INF', '-COMP:C/fin', 'COMP:R', '-COMP:A', 'LF:bank_river', 'LANG:EN', '-SPEC:ADV', 'FREQ:2', '-SPEC:FORCE', '-SPEC:P', '-COMP:VA/inf'}
barn            {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', 'PF:barn', 'SPEC:A', '-SPEC:R', '-COMP:V', 'COMP:P', '-COMP:AUX', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'COMP:R', '-COMP:A', 'LANG:EN', 'LF:barn', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
city            {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'PF:city', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'COMP:R', '-COMP:A', 'LANG:EN', 'LF:city', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
che             ['LANG:IT']
che-            {'PF:che', '-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'LF:who', 'PHI_N', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-COMP:v', '-COMP:C/fin', 'LANG:IT', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
chiamato        ['LANG:IT']
chiamata-       {'LF:called', 'SPEC:P', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', 'LANG:IT', 'PHI:DET:_', 'PHI:GEN:_', 'ASP', 'V', '-VAL', 'PF:chiamato', '-SPEC:FORCE'}
claims          ['LANG:EN']
claim-          {'SPEC:P', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', 'COMP:T/fin', 'LF:claim', 'PHI:DET:_', 'LANG:EN', 'ASP', 'V', '-VAL', 'PHI:GEN:_', 'PF:claim', '-COMP:D', '-SPEC:FORCE'}
danno           {'-SPEC:C/fin', 'LF:damage', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', 'PF:danno', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'LANG:IT', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'SPEC:P', 'PF:detest', 'COMP:ARE/inf', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'LF:detest', 'SEM:internal', 'SPEC:TO/inf', '-COMP:v', 'PHI:NUM:_', 'LANG:IT', 'PHI:DET:_', 'COMP:D', 'PHI:GEN:_', 'ASP', 'V', '-VAL', '-SPEC:FORCE'}
devono          ['LANG:EN']
deva-           {'SPEC:P', 'LF:must', 'COMP:ARE/inf', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SEM:internal', 'SPEC:TO/inf', '-COMP:v', 'PHI:NUM:_', 'LANG:IT', 'PHI:DET:_', 'PF:deva', 'PHI:GEN:_', 'V', '-ASP', '-VAL', '-SPEC:FORCE'}
di              {'-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', 'LANG:FI', '-SPEC:v', '-SPEC:C', 'LF:of', '-COMP:N', 'PHI:PER:_', 'ARG', 'PF:di', '-SPEC:T/fin', '-COMP:ADV', '-adjoinable', '!COMP:*', 'PHI:NUM:_', '-SPEC:INF', '-SPEC:iWH', 'PHI:DET:_', 'P', '-COMP:A', '-COMP:T', 'COMP:D', '-SPEC:iR', '-VAL', '-COMP:uWH', '-SPEC:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:P', 'SPEC:*'}
does            {'SPEC:C/fin', 'T', 'COMP:T/prt', '-SPEC:N', 'PHI:PER:3', '-SPEC:v', '-SPEC:TO/inf', '-SPEC:C', 'PHI:PER:_', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'COMP:v', '-COMP:INF', 'PHI:DET:_', 'FIN', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'COMP:Neg', 'PF:does', 'SPEC:FORCE', '-COMP:T/fin', 'T/fin', '-SPEC:V', 'COMP:V', 'PHI:GEN:M', 'ARG', 'PHI:NUM:_', '!COMP:*', 'VAL', '!SPEC:*', 'LANG:EN', '-SPEC:Neg', '!PROBE:V', 'LF:does', 'SPEC:*'}
does_C          ['LANG:EN']
does-           {'SPEC:C/fin', 'T', 'COMP:T/prt', '-SPEC:N', 'PHI:PER:3', '-SPEC:v', '-SPEC:TO/inf', '-SPEC:C', 'PHI:PER:_', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'COMP:v', '-COMP:INF', 'PHI:DET:_', 'FIN', 'PHI:GEN:F', 'PHI:GEN:_', 'PHI:NUM:SG', 'COMP:Neg', 'PF:does', 'SPEC:FORCE', '-COMP:T/fin', 'T/fin', '-SPEC:V', 'COMP:V', 'PHI:GEN:M', 'ARG', 'PHI:NUM:_', '!COMP:*', 'VAL', '!SPEC:*', 'LANG:EN', '-SPEC:Neg', '!PROBE:V', 'LF:does', 'SPEC:*'}
dorme           ['LANG:IT']
dorme-          {'LF:sleep', 'SPEC:P', '-COMP:MA/inf', '-COMP:V', 'COMP:P', '-COMP:N', '!SPEC:D', 'PF:dorme', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', 'CLASS:INTR', '-COMP:v', 'PHI:DET:_', 'LANG:EN', 'ASP', 'V', '-VAL', 'PHI:GEN:_', '-COMP:D', '-SPEC:FORCE'}
disappeared     ['LANG:EN']
disappear-      {'PF:disappear', 'SPEC:P', '-COMP:MA/inf', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'LF:disappear', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', 'CLASS:INTR', '-COMP:v', 'PHI:DET:_', 'LANG:EN', 'ASP', 'V', '-VAL', 'PHI:GEN:_', '-COMP:D', '-SPEC:FORCE'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'LANG:EN', '0', '2SPEC', 'LF:easy', 'SPEC:D', 'PF:easy'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'COMP:T/prt', 'LANG:FI', 'PF:ei', 'NEG', 'PHI:PER:_', '!COMP:T', 'ARG', '-SPEC:T/fin', 'SEM:internal', 'PHI:NUM:_', '!COMP:*', 'VAL', 'Neg/fin', 'PHI:DET:_', 'FIN', '!SPEC:*', '-SPEC:T', '%SPEC:INF', 'LF:neg', 'POL:NEG', 'SPEC:*'}
e-              {'COMP:T/prt', 'LANG:FI', 'PF:ei', 'NEG', 'PHI:PER:_', '!COMP:T', 'ARG', '-SPEC:T/fin', 'SEM:internal', 'PHI:NUM:_', '!COMP:*', 'VAL', 'Neg/fin', 'PHI:DET:_', 'FIN', '!SPEC:*', '-SPEC:T', '%SPEC:INF', 'LF:neg', 'POL:NEG', 'SPEC:*'}
elaa            ['LANG:FI']
ela-            {'SPEC:P', 'LANG:FI', '-COMP:MA/inf', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'PF:elaa', 'ARG', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', 'CLASS:INTR', '-COMP:v', 'PHI:DET:_', 'ASP', 'V', 'LF:live', '-VAL', '-COMP:D', '-SPEC:FORCE'}
etsii           ['LANG:FI']
etsi-           {'SPEC:P', 'LANG:FI', '-COMP:P', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', '!COMP:D', 'PF:etsi', 'LF:search', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', '!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'ASP', 'V', '-VAL', '-SPEC:FORCE'}
etta            {'-ARG', 'COMP:T/fin', 'COMP:C/fin', '!PROBE:FIN', '-SPEC:*', 'LANG:FI', 'FIN', 'LF:that', '-VAL', 'FORCE', '-SPEC:D', '!COMP:*', 'PF:etta'}
fell            ['LANG:EN']
fell-           {'SPEC:P', '-COMP:MA/inf', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', '-SPEC:FORCE', 'CLASS:INTR', '-COMP:v', 'PHI:NUM:_', 'PF:fell', 'PHI:DET:_', 'LANG:EN', 'ASP', 'V', '-VAL', 'PHI:GEN:_', '-COMP:D', 'LF:fell'}
flow'           {'PF:flow', 'SPEC:P', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', 'PHI:DET:_', 'LF:flow', 'LANG:EN', 'ASP', 'V', '-VAL', 'PHI:GEN:_', '-SPEC:FORCE'}
from            {'TAIL:V,+SEM:directional', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', 'PF:from', '-SPEC:V', '-float', '-SPEC:v', '-SPEC:C', '-COMP:N', 'PHI:PER:_', 'ARG', '-SPEC:*', '-SPEC:T/fin', 'LF:from', '-COMP:ADV', '!COMP:*', 'PHI:NUM:_', '-SPEC:INF', '-SPEC:iWH', 'PHI:DET:_', 'P', '-COMP:A', 'adjoinable', '-COMP:T', 'COMP:D', '-SPEC:iR', 'LANG:EN', 'PHI:GEN:_', '-VAL', '-COMP:uWH', '-SPEC:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:P'}
gave            ['LANG:EN']
give-           {'SPEC:P', '+SEM:directional', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', '-COMP:FIN', 'SPEC:D', 'SPEC:TO/inf', '-SPEC:T/fin', '-COMP:v', '!COMP:*', 'PHI:NUM:_', 'PF:give', 'PHI:DET:_', 'LF:give', 'COMP:D', 'LANG:EN', 'ASP', 'V', '-VAL', 'PHI:GEN:_', 'CLASS:DITR', '-SPEC:FORCE'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'LF:Giuseppe', 'LANG:IT', '-SEM:directional', 'PF:Giuseppe', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'SPEC:P', 'LANG:FI', '-COMP:P', 'LF:want', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ASP:BOUNDED', 'ARG', 'SPEC:ADV', '-SPEC:*', '-SPEC:T/fin', 'SEM:internal', '-SPEC:FORCE', '-COMP:v', 'SPEC:TO/inf', '!COMP:*', 'PHI:NUM:_', 'PHI:DET:_', 'PF:haluaa', 'CLASS:TR', 'COMP:D', 'ASP', 'V', '-VAL', 'COMP:A/inf'}
hairitsee       ['LANG:FI']
hairitse-       {'SPEC:P', 'PF:hairitsee', 'LANG:FI', '-COMP:P', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'LF:disturb', '!COMP:D', 'ARG', 'SPEC:ADV', '-COMP:FIN', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', '-COMP:v', '!COMP:*', 'PHI:NUM:_', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'ASP', 'V', '-VAL', '-SPEC:FORCE'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'SPEC:P', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SEM:internal', 'SPEC:TO/inf', '-COMP:v', 'PHI:NUM:_', 'LANG:IT', 'LF:have', 'PHI:DET:_', 'PF:ha', 'PHI:GEN:_', 'V', '-ASP', '-VAL', 'COMP:T', '-SPEC:FORCE', 'SPEC:*'}
horse           {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'LF:horse', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'COMP:R', '-COMP:A', 'PF:horse', 'LANG:EN', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'SPEC:P', 'LANG:FI', '-COMP:MA/inf', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'LF:disappear', 'PF:havia', 'SPEC:ADV', 'SPEC:D', 'SPEC:TO/inf', '-SPEC:T/fin', 'CLASS:INTR', '-COMP:v', 'PHI:NUM:_', 'PHI:DET:_', 'ASP', 'V', '-VAL', '-COMP:D', '-SPEC:FORCE'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'SPEC:P', 'LANG:FI', 'PF:ihaile-', '-COMP:P', 'LF:admire', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', '!COMP:D', 'ARG', 'SPEC:ADV', '-COMP:FIN', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', '!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'ASP', 'V', '-VAL', '-SPEC:FORCE'}
il              {'-COMP:T/fin', 'OP', '-SPEC:V', '-COMP:P', '-SPEC:C', '-COMP:uR', 'LF:the', '-SPEC:T/fin', 'D', '!COMP:*', 'PF:il', '-ARG', 'LANG:IT', 'adjoinable', '!PROBE:N', '-SPEC:MA/lla', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:INF', '-SPEC:P', 'COMP:N'}
i               {'-COMP:T/fin', 'OP', '-SPEC:V', '-COMP:P', '-SPEC:C', '-COMP:uR', 'LF:the', '-SPEC:T/fin', 'D', '!COMP:*', 'PF:il', '-ARG', 'LANG:IT', 'adjoinable', '!PROBE:N', '-SPEC:MA/lla', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:INF', '-SPEC:P', 'COMP:N'}
in              {'-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-SPEC:v', '-SPEC:C', 'PF:in', '-COMP:N', 'PHI:PER:_', 'ARG', '-SPEC:T/fin', '-COMP:ADV', 'PHI:NUM:_', '!COMP:*', '-SPEC:INF', '-SPEC:iWH', 'LANG:IT', 'PHI:DET:_', 'P', '-COMP:A', 'LF:in', 'adjoinable', '-COMP:T', 'COMP:D', '-SPEC:iR', 'PHI:GEN:_', '-VAL', '-COMP:uWH', '-SPEC:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:P'}
infermieri      {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', 'LF:nurses', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'LANG:IT', 'COMP:R', '-COMP:A', 'PF:infermieri', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
is              ['LANG:EN']
be-             {'-COMP:TO/inf', 'SPEC:P', 'COPULA', '-COMP:V', 'COMP:P', '-COMP:N', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', '!COMP:*', '-COMP:v', '-ARG', 'LANG:EN', 'ASP', 'V', 'LF:be', '-VAL', '-SPEC:FORCE', 'PF:be'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'PF:istuu', 'SPEC:P', 'LANG:FI', '-COMP:MA/inf', 'LF:sit', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', 'CLASS:INTR', '-COMP:v', 'PHI:DET:_', 'ASP', 'V', '-VAL', '-COMP:D', '-SPEC:FORCE'}
John            ['LANG:EN']
John-           {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', '-SEM:directional', 'COMP:R', '-COMP:A', 'LF:John', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', 'PF:John', '-COMP:N', 'COMP:uR', '-adjoinable', '-COMP:v', '-COMP:C/fin', 'LANG:EN', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'LANG:FI', 'LF:who', 'PHI_N', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', 'PF:joka', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-COMP:v', '-COMP:C/fin', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'PF:Jukka', '-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'LANG:FI', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', '-SEM:directional', 'COMP:R', '-COMP:A', 'LF:Jukka', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'SPEC:P', 'PF:juokse-', 'LANG:FI', 'LF:run', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', 'PHI:DET:_', 'ASP', 'V', '-VAL', '-SPEC:FORCE'}
kaksi           {'SPEC:*', 'PHI:DET:_', 'PF:kaksi', 'NUM', 'LANG:FI', 'TAIL:ARG,VAL,FIN', 'LF:two', 'PHI:NUM:SG', '-VAL', 'PHI:PER:_', 'ARG', 'PHI:NUM:_', 'COMP:n', 'COMP:N'}
kaksi           {'SPEC:*', 'TAIL:ARG,ASP:BOUNDED', 'PF:kaksi', 'NUM', 'TAIL:*POL:NEG', 'LANG:EN', 'LF:two', 'COMP:n', 'COMP:N'}
kaksi_1         {'SPEC:*', 'PHI:DET:_', 'PF:kaksi', 'NUM', 'LANG:FI', 'TAIL:ARG,VAL,FIN', 'LF:two', 'PHI:NUM:SG', '-VAL', 'PHI:PER:_', 'ARG', 'PHI:NUM:_', 'COMP:n', 'COMP:N'}
kaksi_2         {'SPEC:*', 'TAIL:ARG,ASP:BOUNDED', 'PF:kaksi', 'NUM', 'TAIL:*POL:NEG', 'LANG:EN', 'LF:two', 'COMP:n', 'COMP:N'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'LF:two', 'SPEC:*', 'NUM', 'PF:kaksi', 'LANG:FI', 'COMP:n', 'COMP:N'}
kaupunkia       ['LANG:EN']
kaupunki        {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'LANG:FI', '-COMP:P', 'N', 'COMP:R/D', 'SPEC:A', '-SPEC:R', '-COMP:V', 'COMP:D/rel', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'COMP:R', 'PF:kaupunki', '-COMP:A', 'LF:city', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'SPEC:P', 'LANG:FI', 'SEM:external', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', 'LF:order', '!COMP:A/inf', 'PHI:DET:_', 'PF:kaske', 'ASP', 'V', '-VAL', '-SPEC:FORCE'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'LANG:FI', 'N', 'COMP:R/D', '-SPEC:R', 'PF:kello', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'COMP:R', '-COMP:A', 'LF:watch', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
kello0-         {'0', '2SPEC', 'SPEC:D', 'LF:watch', 'LANG:FI', 'PF:kello'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', 'PF:key', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'COMP:R', '-COMP:A', 'LF:key', 'LANG:EN', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'LANG:FI', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', 'PF:kirja', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', '-SEM:directional', 'COMP:R', '-COMP:A', 'LF:book', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
knows           ['LANG:EN']
know-           {'SPEC:P', '-COMP:P', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'PF:know', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', '!COMP:*', 'LF:know', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'LANG:EN', 'ASP', 'V', '-VAL', 'PHI:GEN:_', '-SPEC:FORCE'}
kohti           {'-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', 'LANG:FI', '-SPEC:v', '-SPEC:C', '-COMP:N', 'PHI:PER:_', 'ARG', 'PF:kohti', 'TAIL:V', '-SPEC:T/fin', '-COMP:ADV', 'PHI:NUM:_', '!COMP:*', '-SPEC:INF', '-SPEC:iWH', 'PHI:DET:_', 'P', '-COMP:A', 'LF:towards', 'adjoinable', '-COMP:T', 'COMP:D', '-SPEC:iR', '-VAL', '-COMP:uWH', '-SPEC:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:P', 'SPEC:*'}
koko            {'-COMP:T/fin', 'OP', '-SPEC:V', 'PF:koko', 'LANG:FI', '-COMP:P', '-SPEC:C', '-COMP:uR', 'TAIL:T', '-SPEC:T/fin', 'D', 'LF:all', '!COMP:*', '-ARG', 'adjoinable', '!PROBE:N', '-SPEC:MA/lla', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:INF', '-SPEC:P', 'COMP:N'}
kuka            ['LANG:FI']
kuka-           {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'LANG:FI', 'N', 'LF:who', 'COMP:R/D', 'SPEC:A', '-SPEC:R', '-COMP:V', 'COMP:P', '-COMP:AUX', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', '-COMP:WH', 'COMP:C', 'PF:kuka', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', 'PHI'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'-COMP:T/fin', 'SPEC:P', 'LANG:FI', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'PF:kuorsaa', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', 'LF:snore', 'PHI:DET:_', 'ASP', 'V', '-VAL', '-COMP:D', '-SPEC:FORCE', '-COMP:WH'}
lahella         {'LF:near', '-SPEC:C/fin', '-SPEC:N', 'LANG:FI', '-SPEC:v', '-SPEC:C', 'PHI:PER:_', '-SPEC:T/fin', 'COMP:v', '-SPEC:iWH', 'PHI:DET:_', '-COMP:A', 'adjoinable', '-COMP:T', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:V', '-COMP:N', '!SPEC:D', 'COMP:V', 'ARG', '-COMP:FORCE', '-COMP:ADV', 'PHI:NUM:_', 'VAL', '!COMP:*', '-COMP:C/fin', 'P', '!SPEC:*', 'INF', 'COMP:D', '-SPEC:iR', 'PF:lahella', '-SPEC:Neg/fin', '-SPEC:INF', '-SPEC:P', 'SPEC:*'}
lahella         {'-COMP:T/fin', 'LF:near', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', 'LANG:FI', '-SPEC:v', '-SPEC:C', '-COMP:N', 'PHI:PER:_', '!COMP:D', 'ARG', '-SPEC:T/fin', '-COMP:ADV', 'PHI:NUM:_', '!COMP:*', '-SPEC:INF', '-SPEC:iWH', 'PHI:DET:_', 'P', '-COMP:A', 'adjoinable', '-COMP:T', 'COMP:D', '-SPEC:iR', '-VAL', 'PF:lahella', '-COMP:uWH', '-SPEC:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:P', 'SPEC:*'}
lahella_1       {'-COMP:T/fin', 'LF:near', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', 'LANG:FI', '-SPEC:v', '-SPEC:C', '-COMP:N', 'PHI:PER:_', '!COMP:D', 'ARG', '-SPEC:T/fin', '-COMP:ADV', 'PHI:NUM:_', '!COMP:*', '-SPEC:INF', '-SPEC:iWH', 'PHI:DET:_', 'P', '-COMP:A', 'adjoinable', '-COMP:T', 'COMP:D', '-SPEC:iR', '-VAL', 'PF:lahella', '-COMP:uWH', '-SPEC:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:P', 'SPEC:*'}
lahella_2       {'LF:near', '-SPEC:C/fin', '-SPEC:N', 'LANG:FI', '-SPEC:v', '-SPEC:C', 'PHI:PER:_', '-SPEC:T/fin', 'COMP:v', '-SPEC:iWH', 'PHI:DET:_', '-COMP:A', 'adjoinable', '-COMP:T', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-COMP:T/fin', '-SPEC:V', '-COMP:N', '!SPEC:D', 'COMP:V', 'ARG', '-COMP:FORCE', '-COMP:ADV', 'PHI:NUM:_', 'VAL', '!COMP:*', '-COMP:C/fin', 'P', '!SPEC:*', 'INF', 'COMP:D', '-SPEC:iR', 'PF:lahella', '-SPEC:Neg/fin', '-SPEC:INF', '-SPEC:P', 'SPEC:*'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'SPEC:P', 'LANG:FI', '-COMP:MA/inf', 'COMP:PP', '-COMP:V', 'COMP:P', 'LF:leave', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', 'CLASS:INTR', '-COMP:v', 'PF:lahtea', 'PHI:DET:_', 'ASP', 'V', '-VAL', '-COMP:D', '-SPEC:FORCE'}
lavano          ['LANG:IT']
lava-           {'LF:wash', 'SPEC:P', '-COMP:V', 'COMP:P', '-COMP:N', 'PF:lava', 'PHI:PER:_', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '!COMP:*', '-COMP:v', 'LANG:IT', 'PHI:DET:_', 'COMP:D', 'PHI:GEN:_', 'ASP', 'V', '-VAL', '-SPEC:FORCE'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-COMP:T/fin', 'OP', '-SPEC:V', '-COMP:P', '-SPEC:C', '-COMP:uR', '-SPEC:T/fin', 'D', '!COMP:*', '-ARG', 'LANG:IT', 'LF:D', 'adjoinable', '!PROBE:N', '-SPEC:MA/lla', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:INF', '-SPEC:P', 'PF:le', 'COMP:N'}
leaves          ['LANG:EN']
leave           {'SPEC:P', '-COMP:V', 'COMP:P', 'LF:leave', '!SPEC:D', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', 'PHI:DET:_', 'LANG:EN', 'ASP', 'V', 'PF:leave', '-VAL', 'PHI:GEN:_', '-SPEC:FORCE'}
leave-          {'-COMP:T/fin', 'SPEC:P', '-COMP:V', 'COMP:P', 'LF:leave', '!SPEC:D', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', 'PHI:DET:_', 'LANG:EN', 'ASP', 'V', 'PF:leave', '-VAL', 'PHI:GEN:_', '-SPEC:FORCE'}
like-           {'SPEC:P', 'PF:like', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', '!COMP:D', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', 'PHI:DET:_', 'LF:like', 'LANG:EN', 'ASP', 'V', '-VAL', 'PHI:GEN:_', '-SPEC:FORCE'}
likes           ['LANG:EN']
like            {'SPEC:P', 'PF:like', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', '!COMP:D', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', 'PHI:DET:_', 'LF:like', 'LANG:EN', 'ASP', 'V', '-VAL', 'PHI:GEN:_', '-SPEC:FORCE'}
little          ['LANG:EN']
little-         {'LANG:EN', '0', '2SPEC', 'PF:little-', 'LF:little', 'SPEC:D'}
lle             {'TAIL:V,+SEM:directional', '-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '+SEM:directional', '-SPEC:V', 'LANG:FI', '-SPEC:v', '-SPEC:C', '-COMP:N', 'PHI:PER:_', 'ARG', '-SPEC:*', '-SPEC:T/fin', '-COMP:ADV', 'PHI:NUM:_', '!COMP:*', '-SPEC:INF', '-SPEC:iWH', 'PHI:DET:_', 'P', '-COMP:A', 'adjoinable', '-COMP:T', 'COMP:D', 'PF:P(lle)', '-SPEC:iR', '-VAL', 'LF:for', '-COMP:uWH', '-SPEC:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:P'}
lla             {'-COMP:T/fin', '-SPEC:C/fin', 'TAIL:*V', '-SPEC:N', '-SPEC:V', 'LANG:FI', '-SPEC:v', '-SPEC:C', 'LF:by', '-COMP:N', 'PHI:PER:_', 'TAIL:T', 'ARG', '-SPEC:T/fin', '-COMP:ADV', 'PHI:NUM:_', '!COMP:*', '-SPEC:INF', '-SPEC:iWH', 'PHI:DET:_', 'P', '-COMP:A', 'adjoinable', '-COMP:T', 'COMP:D', '-SPEC:iR', '-VAL', '-COMP:uWH', '-SPEC:ADV', 'PF:P(lla)', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:P', 'SPEC:*'}
Luisa           ['LANG:IT']
Luisa-          {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-COMP:v', 'LF:Luisa', '-SPEC:INF', '-COMP:C/fin', '-SEM:directional', 'LANG:IT', 'COMP:R', '-COMP:A', 'PF:Luisa', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'LF:read', 'SPEC:P', 'LANG:FI', '-COMP:P', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', '!COMP:*', 'PF:luke', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'ASP', 'V', '-VAL', '-SPEC:FORCE'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'PF:loyta-', 'SPEC:P', 'LANG:FI', '-COMP:P', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', '!COMP:D', 'ASP:BOUNDED', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', '!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'LF:find', 'V', 'ASP', '-VAL', '-SPEC:FORCE'}
Mary            ['LANG:EN']
Mary-           {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', '-SEM:directional', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:V', 'LF:Mary', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-adjoinable', '-COMP:v', '-COMP:C/fin', 'LANG:EN', 'PF:Mary', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', 'LANG:FI', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', 'LF:Merja', '-SPEC:T/fin', 'COMP:C', '-SEM:directional', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-adjoinable', '-COMP:v', '-COMP:C/fin', 'PF:Merja', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'SPEC:*', '-SPEC:N', 'ADV', 'LANG:FI', 'adjoinable', 'LF:by', 'TAIL:T', '-SPEC:Neg/fin', 'MA/inf', '-SPEC:T/fin', 'PF:malla', '-SPEC:FORCE', 'COMP:v'}
meren           ['LANG:FI']
mere-           {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'LANG:FI', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'COMP:R', 'PF:meri', '-COMP:A', 'LF:ocean', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
mies            {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'LANG:FI', 'LF:man', 'N', 'COMP:R/D', 'SPEC:A', '-SPEC:R', '-COMP:V', 'COMP:P', '-COMP:AUX', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'COMP:R', '-COMP:A', 'PF:mies', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
mistake         {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'COMP:R', '-COMP:A', 'LANG:EN', 'PF:mistake', '-SPEC:ADV', '-COMP:VA/inf', 'LF:mistake', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', 'PF:mika-', '-SPEC:uWH', 'LANG:FI', 'N', 'LF:what', 'COMP:R/D', 'SPEC:A', '-SPEC:R', '-COMP:V', 'COMP:P', '-COMP:AUX', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'SPEC:P', '+SEM:directional', 'LF:move', '-COMP:P', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'PF:move', 'SPEC:TO/inf', '-COMP:v', '!COMP:*', 'PHI:NUM:_', 'LANGN:EN', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'PHI:GEN:_', 'ASP', 'V', '-VAL', '-SPEC:FORCE'}
mukavasti       ['LANG:EN']
mukava-         {'LF:comfortably', '0', '2SPEC', 'SPEC:D', 'LANG:FI', 'PF:mukavasti'}
must            {'SPEC:FORCE', '-COMP:T/fin', 'T/fin', 'SPEC:C/fin', 'T', 'COMP:T/prt', '-SPEC:N', 'LF:must', '-SPEC:V', 'MODAL', '-SPEC:v', '-SPEC:TO/inf', '-SPEC:C', 'COMP:V', 'PHI:PER:_', 'ARG', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '!COMP:*', 'COMP:v', 'VAL', '-COMP:INF', 'PHI:DET:_', 'FIN', '!SPEC:*', 'PF:must', 'LANG:EN', '-SPEC:Neg', 'PHI:GEN:_', '!PROBE:V', 'COMP:Neg', 'SPEC:*'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'LF:sell', 'SPEC:P', 'LANG:FI', '-COMP:P', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ASP:BOUNDED', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', '!COMP:*', 'PF:myy', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'ASP', 'V', '-VAL', '-SPEC:FORCE'}
naki            ['LANG:FI']
nake-           {'PF:nake', 'SPEC:P', 'LANG:FI', '-COMP:P', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ASP:BOUNDED', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'LF:see', '-COMP:v', '!COMP:*', 'PHI:NUM:_', 'PHI:DET:_', 'CLASS:TR', '-COMP:ESSA/inf', 'COMP:D', 'ASP', 'V', '-VAL', '-COMP:MA/tta', '-SPEC:FORCE', '-COMP:MA/ssa'}
nayttaa         ['LANG:FI']
naytta-         {'!COMP:VA/inf', 'SPEC:P', 'LANG:FI', 'PF:naytta', '-COMP:V', '-COMP:N', '!SPEC:D', 'COMP:P', 'SPEC:ADV', '-SPEC:T/fin', 'SEM:internal', 'SPEC:TO/inf', 'VAL', '-COMP:v', '-ARG', 'ASP', 'V', 'LF:seem', '-SPEC:FORCE'}
ndo             {'LF:ing', 'PF:PRG', '-COMP:C/fin', 'PRG', '?ARG', '-COMP:T/fin', '-SPEC:V', '!COMP:*', 'INF', 'LANG:EN', 'COMP:V', '-SPEC:T/fin', '-COMP:FORCE', 'VAL', 'COMP:v'}
ne              {'-COMP:T/fin', 'LF:those', '-SPEC:V', 'PHI:NUM:PL', 'OP', 'PHI:PER:3', 'LANG:FI', '-COMP:P', '-SPEC:C', '-COMP:uR', '-SPEC:T/fin', 'D', '!COMP:*', '-ARG', 'PF:ne', 'adjoinable', '!PROBE:N', '-SPEC:MA/lla', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:INF', '-SPEC:P', 'COMP:N'}
niiden          ['LANG:EN']
nen             {'LF:ing', '-SPEC:D', 'COMP:0', 'LANG:FI', 'TAIL:D', 'PF:a', 'A', '-SPEC:A', 'SPEC:*'}
not             {'LF:not', '!COMP:*', 'PHI:DET:_', 'Neg', '-COMP:C', '-COMP:FIN', 'LANG:EN', 'PHI:GEN:_', '-VAL', 'PHI:PER:_', 'ARG', '-COMP:D', 'POL:NEG', '-SPEC:T/fin', 'PHI:NUM:_', 'PF:not', 'SPEC:*'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-COMP:T/fin', 'LF:sleep', 'SPEC:P', '-COMP:MA/inf', 'LANG:FI', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', '-COMP:Neg/fin', 'ARG', 'SPEC:ADV', 'SPEC:D', 'PF:nukku', 'SPEC:TO/inf', '-SPEC:T/fin', 'CLASS:INTR', '-COMP:v', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:T', 'ASP', 'V', '-VAL', '-COMP:D', '-SPEC:FORCE'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'LANG:FI', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'PF:omaisuuden', 'LF:possessions', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
operatoria      ['LANG:IT']
operatoria-     {'0', 'PF:operatoria', 'LANG:IT', '2SPEC', 'SPEC:D', 'LF:operation'}
ostaa           ['LANG:FI']
osta-           {'SPEC:P', 'LANG:FI', 'PF:osta', '-COMP:P', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ASP:BOUNDED', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', '!COMP:*', 'LF:buy', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'ASP', 'V', '-VAL', '-SPEC:FORCE'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', 'SEM:nonreferential', '-SPEC:uWH', 'LANG:FI', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', 'PF:paiva', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'LF:day', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
past            {'-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-float', '-SPEC:v', 'PF:past', '-SPEC:C', '-COMP:N', 'PHI:PER:_', 'ARG', '-SPEC:*', '-SPEC:T/fin', '-COMP:ADV', 'PHI:NUM:_', '!COMP:*', '-SPEC:INF', '-SPEC:iWH', 'PHI:DET:_', 'LF:past', 'P', '-COMP:A', 'adjoinable', '-COMP:T', 'COMP:D', '-SPEC:iR', 'LANG:EN', 'PHI:GEN:_', '-VAL', '-COMP:uWH', '-SPEC:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:P'}
Pariisia        ['LANG:FI']
Pariisi-        {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'LANG:FI', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', 'LF:Paris', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', 'PF:Pariisi', '-COMP:C/fin', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-SPEC:C/fin', 'PF:Pekka', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'LANG:FI', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-SPEC:FORCE', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', '-SEM:directional', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-COMP:VA/inf', 'LF:Pekka', '-SPEC:P', '-COMP:WH'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'SPEC:P', 'LANG:FI', '-COMP:P', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', '!COMP:*', 'PF:pelkaa', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'ASP', 'V', 'LF:fear', '-VAL', '-SPEC:FORCE'}
persuades       ['LANG:EN']
persuade-       {'SPEC:P', 'SEM:external', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '!COMP:*', 'LF:persuade', '-COMP:v', 'COMP:TO/inf', 'PF:persuade', 'PHI:DET:_', 'LANG:EN', 'ASP', 'V', '-VAL', 'PHI:GEN:_', '-SPEC:FORCE'}
peruuntui       ['LANG:FI']
peruuntu-       {'PF:peruuntui', 'SPEC:P', 'LANG:FI', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', 'PHI:DET:_', 'LF:cancelled', 'ASP', 'V', '-VAL', '-SPEC:FORCE'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'LF:wash', 'SPEC:P', 'LANG:FI', 'PF:pese_asp', '-COMP:P', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ASP:BOUNDED', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', '!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'ASP', 'V', '-VAL', '-SPEC:FORCE'}
pese-           {'LF:wash', 'SPEC:P', 'LANG:FI', '-COMP:P', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', '!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'ASP', 'V', '-VAL', 'PF:pese', '-SPEC:FORCE'}
petardi         {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'LANG:IT', 'COMP:R', '-COMP:A', 'LF:firecrackers', 'PF:petardi', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
pieni           ['LANG:FI']
pieni-          {'PF:pieni-', '0', '2SPEC', 'LF:small', 'SPEC:D', 'LANG:FI'}
poikien         ['LANG:FI']
poika-          {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'LANG:FI', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', 'PF:poika', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'COMP:R', '-COMP:A', 'LF:boy', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
puhelinta       ['LANG:FI']
puhelin-        {'0', '2SPEC', 'PF:puhelin', 'SPEC:D', 'LF:phone', 'LANG:FI'}
punainen        ['LANG:FI']
puna-           {'0', '2SPEC', 'PF:puna-', 'SPEC:D', 'LANG:FI', 'LF:red'}
presupposto     {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', 'LF:presupposition', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'LANG:IT', 'COMP:R', '-COMP:A', 'PF:presupposto', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
primary         {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-COMP:v', 'LF:nurse', '-SPEC:INF', '-COMP:C/fin', 'LANG:IT', 'COMP:R', '-COMP:A', '-SPEC:ADV', 'PF:primary', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
promises        ['LANG:EN']
promise-        {'SPEC:P', 'PF:promise', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SEM:internal', 'SPEC:TO/inf', '-COMP:v', 'PHI:NUM:_', 'PHI:DET:_', 'COMP:D', 'LANG:EN', 'ASP', 'V', 'LF:promise', '-VAL', 'PHI:GEN:_', '-SPEC:FORCE'}
problem         {'-SPEC:C/fin', '-SPEC:N', 'LF:problem', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'COMP:R', '-COMP:A', 'LANG:EN', '-SPEC:ADV', 'PF:problem', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
pyytaa          ['LANG:FI']
pyyta-          {'SPEC:P', 'LANG:FI', '-COMP:P', 'SEM:external', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'LF:ask', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', '!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'ASP', 'V', '-VAL', '-SPEC:FORCE', 'PF:pyyda'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'-COMP:T/fin', 'SPEC:P', '-COMP:MA/inf', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', 'CLASS:INTR', '-COMP:v', 'PHI:DET:_', 'LAMG:EN', 'LF:race', 'LANG:EN', 'ASP', 'V', '-VAL', 'PHI:GEN:_', '-COMP:D', '-SPEC:FORCE', 'PF:race'}
raukesi         ['LANG:FI']
raukea-         {'SPEC:P', 'LANG:FI', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'LF:terminate', '-COMP:v', 'PHI:NUM:_', 'PHI:DET:_', 'PF:raukea', 'ASP', 'V', '-VAL', '-SPEC:FORCE'}
red             ['LANG:EN']
red-            {'LANG:EN', '0', '2SPEC', 'SPEC:D', 'PF:red', 'LF:red'}
saavuttaa       ['LANG:FI']
saavutta-       {'LF:reach', 'SPEC:P', 'LANG:FI', '-COMP:P', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', '!COMP:D', 'ASP:BOUNDED', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', '!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'ASP', 'V', '-VAL', 'PF:saavutta-', '-SPEC:FORCE'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'PF:sano-', 'COMP:FORCE', 'COMP:VA/inf', 'SPEC:P', 'LANG:FI', '-COMP:P', 'LF:say', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', '!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'ASP', 'V', '-VAL', '-SPEC:FORCE'}
said            ['LANG:EN']
say'            {'!COMP:FORCE', 'SPEC:P', 'LF:say', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'PF:say', 'ARG', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', 'PHI:DET:_', 'LANG:EN', 'ASP', 'V', '-VAL', 'PHI:GEN:_', '-SPEC:FORCE'}
say-            {'!COMP:FORCE', 'SPEC:P', 'LF:say', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'PF:say', 'ARG', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', 'PHI:DET:_', 'LANG:EN', 'ASP', 'V', '-VAL', 'PHI:GEN:_', '-SPEC:FORCE'}
sala            ['LANG:IT']
sala-           {'-SPEC:C/fin', 'LF:room', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', '-COMP:WH', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'LANG:IT', 'COMP:R', '-COMP:A', '-SPEC:ADV', 'PF:sala', '-SPEC:FORCE', '-SPEC:P', '-COMP:VA/inf'}
scoppiati       ['LANG:IT']
scoppia-        {'SPEC:P', 'PF:scoppia', 'LF:explode', '-COMP:V', '-COMP:N', 'COMP:P', 'PHI:PER:_', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', 'LANG:IT', 'PHI:DET:_', 'PHI:GEN:_', 'ASP', 'V', '-VAL', '-SPEC:FORCE'}
sentenza        {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', 'PF:sentenza', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'LANG:IT', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', 'LF:sentence', '-SPEC:P', '-COMP:WH'}
Seine           ['LANG:EN']
Seine-          {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-SPEC:FORCE', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'COMP:R', '-COMP:A', 'LANG:EN', 'PF:Seine', '-SPEC:ADV', '-COMP:VA/inf', 'LF:Seine', '-SPEC:P', '-COMP:WH'}
sembrano        ['LANG:IT']
sembra-         {'SPEC:P', '-COMP:V', 'COMP:P', '-COMP:N', 'SPEC:ADV', 'SPEC:D', 'PF:sembra', '-SPEC:T/fin', 'SPEC:TO/inf', '-COMP:v', '-ARG', '!COMP:ARE/inf', 'LANG:EN', 'V', '-ASP', '-VAL', '-COMP:D', 'LF:seem', '-SPEC:FORCE'}
sleeps          ['LANG:EN']
sleep           {'LF:sleep', 'SPEC:P', '-COMP:MA/inf', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PF:sleep', 'CLASS:INTR', '-COMP:v', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:EN', 'ASP', 'V', '-VAL', 'PHI:GEN:_', '-COMP:D', '-SPEC:FORCE'}
sleep-          {'LF:sleep', 'SPEC:P', '-COMP:MA/inf', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PF:sleep', 'CLASS:INTR', '-COMP:v', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:EN', 'ASP', 'V', '-VAL', 'PHI:GEN:_', '-COMP:D', '-SPEC:FORCE'}
solution        {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', 'PF:solution', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', 'LF:solution', '-COMP:C/fin', 'COMP:R', '-COMP:A', 'LANG:EN', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'LANG:FI', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', 'PF:sopimus', '-SPEC:FORCE', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', '!COMP:A/inf', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-COMP:VA/inf', 'LF:agreement', '-SPEC:P', '-COMP:WH'}
spinge          ['LANG:IT']
spinge-         {'SPEC:P', '-COMP:P', '-COMP:V', '-COMP:N', 'PHI:PER:_', '!COMP:D', 'ARG', 'LF:push', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', 'LANG:IT', 'PHI:DET:_', 'PF:spinge', 'PHI:GEN:_', 'ASP', 'V', '-VAL', '-SPEC:FORCE'}
ssa             {'-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', 'LANG:FI', '-SPEC:v', '-SPEC:C', 'PF:ssa', '-COMP:N', 'PHI:PER:_', 'ARG', 'TAIL:V', '-SPEC:T/fin', '-COMP:ADV', 'PHI:NUM:_', 'COMP:n/MA', '!COMP:*', '-SPEC:INF', '-SPEC:iWH', 'PHI:DET:_', 'P', '-COMP:A', 'LF:in', 'adjoinable', '-COMP:T', 'COMP:D', '-SPEC:iR', '-VAL', '-COMP:uWH', '-SPEC:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:P', 'SPEC:*'}
stanno          ['LANG:IT']
sta-            {'SPEC:P', 'PF:sta', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SEM:internal', 'SPEC:TO/inf', '-COMP:v', 'PHI:NUM:_', 'PHI:DET:_', 'COMP:PRG', 'LANG:EN', 'LF:stay', 'V', '-ASP', '-VAL', 'PHI:GEN:_', '-SPEC:FORCE'}
sti             {'-ARG', '-SPEC:N', 'PF:sti', 'ADV', 'LANG:FI', 'adjoinable', 'LF:by', 'TAIL:T', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:FORCE', '!COMP:*', 'SPEC:*'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'PF:sukka-', 'LANG:FI', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', '-COMP:WH', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', 'LF:socks'}
surprised       ['LANG:EN']
surprise-       {'-COMP:T/fin', 'SPEC:P', 'PF:surprise', '-COMP:P', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'LF:surprise', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', '!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'LANG:EN', 'ASP', 'V', '-VAL', 'PHI:GEN:_', '-SPEC:FORCE'}
talo            {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'LANG:FI', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', 'LF:house', '-SPEC:T/fin', 'COMP:C', 'PF:talo', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
tama            ['LANG:EN']
tama-           {'PF:tama', '-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'LANG:FI', 'N', 'LF:this', 'COMP:R/D', 'SPEC:A', '-SPEC:R', '-COMP:V', 'COMP:P', '-COMP:AUX', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', '-COMP:WH', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', 'PHI'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'SPEC:P', 'LF:must', 'LANG:FI', 'MODAL', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', '!COMP:A/inf', 'PHI:DET:_', 'FIN', 'PF:taytyy', 'V', '-ASP', '-VAL', '-SPEC:FORCE', 'SPEC:*'}
teki            ['LANG:FI']
teke-           {'SPEC:P', '-COMP:A/inf', 'LF:make', 'LANG:FI', '-COMP:P', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', '!COMP:D', 'ASP:BOUNDED', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', '!COMP:*', 'PF:teke', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'ASP', 'V', '-VAL', '-SPEC:FORCE'}
that            {'-ARG', 'COMP:T/fin', 'COMP:C/fin', '!PROBE:FIN', 'FIN', 'LF:that', 'LANG:EN', '-VAL', 'PF:that', '-SPEC:*', '!COMP:*', 'FORCE'}
the             {'-COMP:T/fin', 'OP', '-SPEC:V', '-COMP:P', '-SPEC:C', '-COMP:uR', 'LF:the', 'PHI:DEF:DEF', '-SPEC:T/fin', 'D', '!COMP:*', '-ARG', 'PF:the', 'adjoinable', 'LANG:EN', '!PROBE:N', '-SPEC:MA/lla', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:INF', '-SPEC:P', 'COMP:N'}
to              {'-SPEC:C/fin', '-SPEC:N', '-float', 'PF:to', '-SPEC:v', '-SPEC:C', 'PHI:PER:_', '-SPEC:*', '-SPEC:T/fin', '-SPEC:iWH', 'PHI:DET:_', '-COMP:A', 'adjoinable', '-COMP:T', 'PHI:GEN:_', '-VAL', '-COMP:uWH', '-SPEC:ADV', '-SPEC:FORCE', '-COMP:T/fin', 'LF:to', '+SEM:directional', '-SPEC:V', '-COMP:N', 'ARG', 'TAIL:V', '-COMP:ADV', 'PHI:NUM:_', '!COMP:*', 'P', 'COMP:D', '-SPEC:iR', 'LANG:EN', '-SPEC:Neg/fin', '-SPEC:INF', '-SPEC:P'}
to_inf          {'-COMP:T/fin', '?ARG', '-SPEC:V', '-SPEC:v', 'COMP:V', '-SPEC:T/fin', '-COMP:FORCE', 'TO/inf', 'LF:TO/inf', '!COMP:*', 'COMP:v', '-COMP:C/fin', 'PF:TO/inf', 'adjoinable', 'INF', 'LANG:EN', '-VAL'}
towards         {'-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-float', '-SPEC:v', '-SPEC:C', '-COMP:N', 'PHI:PER:_', 'ARG', 'TAIL:V', '-SPEC:*', '-SPEC:T/fin', '-COMP:ADV', '!COMP:*', 'PHI:NUM:_', '-SPEC:INF', '-SPEC:iWH', 'PHI:DET:_', 'P', '-COMP:A', 'LF:towards', 'adjoinable', '-COMP:T', 'COMP:D', '-SPEC:iR', 'LANG:EN', 'PHI:GEN:_', '-VAL', '-COMP:uWH', '-SPEC:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', 'PF:towards', '-SPEC:P'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'SPEC:P', 'LANG:FI', '-COMP:P', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', '!COMP:*', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'ASP', 'V', 'LF:nudge', '-VAL', 'PF:tonaise', '-SPEC:FORCE'}
tta             {'-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', 'LANG:FI', '-SPEC:v', '-SPEC:C', '-COMP:N', 'PHI:PER:_', 'PF:tta', 'ARG', '-SPEC:T/fin', '-COMP:ADV', 'PHI:NUM:_', 'COMP:n/MA', '!COMP:*', '-SPEC:INF', '-SPEC:iWH', 'PHI:DET:_', 'P', 'ADV', '-COMP:A', 'adjoinable', '-COMP:T', 'COMP:D', '-SPEC:iR', '-VAL', '-COMP:uWH', '-SPEC:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:P', 'LF:without', 'SPEC:*'}
tries           ['LANG:EN']
try-            {'SPEC:P', '!COMP:-ARG', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SEM:internal', '!COMP:TO/inf', 'SPEC:TO/inf', '-COMP:v', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:EN', 'ASP', 'V', '-VAL', 'PHI:GEN:_', 'PF:try', '-SPEC:FORCE', 'LF:try'}
verifiche       {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', 'COMP:C', '-COMP:v', '-SPEC:INF', 'PF:verifiche', '-COMP:C/fin', 'LANG:IT', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-COMP:VA/inf', 'LF:verification', '-SPEC:FORCE', '-SPEC:P', '-COMP:WH'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'SPEC:P', 'LANG:FI', '-COMP:MA/inf', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', 'CLASS:INTR', '!COMP:P', '-COMP:v', 'PF:virtaa', 'PHI:DET:_', 'LF:flow', 'ASP', 'V', '-VAL', '-COMP:D', '-SPEC:FORCE'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'SPEC:P', 'LF:want', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', '-SPEC:*', '-SPEC:T/fin', 'SEM:internal', 'SPEC:TO/inf', '!COMP:*', '-COMP:v', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:EN', 'ASP', 'V', '-VAL', 'PHI:GEN:_', 'PF:volu', '-SPEC:FORCE'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'SPEC:P', 'PF:voitta', 'SEM:achievement', '-COMP:P', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ASP:BOUNDED', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'SPEC:TO/inf', '-SPEC:FORCE', '-COMP:v', '!COMP:*', 'PHI:NUM:_', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'LANG:EN', 'ASP', 'V', '-VAL', 'PHI:GEN:_', 'LF:win'}
wants           ['LANG:EN']
want-           {'SPEC:P', '-COMP:P', 'LF:want', '-SPEC:TO/inf', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', '-SPEC:T/fin', 'PHI:NUM:_', '-COMP:v', '!COMP:*', 'COMP:TO/inf', 'PF:want', 'PHI:DET:_', 'CLASS:TR', 'COMP:D', 'LANG:EN', 'ASP', 'V', '-VAL', 'PHI:GEN:_', '-SPEC:FORCE'}
what            ['LANG:EN']
what-           {'PF:what', '-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'PHI_N', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'LF:what', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-COMP:v', '-COMP:C/fin', 'LANG:EN', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
which           {'-COMP:T/fin', 'OP', '-SPEC:V', '-COMP:P', '-SPEC:C', '-COMP:uR', '-SPEC:T/fin', 'D', '!COMP:*', '-ARG', 'LF:which', 'OP:WH', 'adjoinable', 'LANG:EN', '!PROBE:N', 'PF:which', '-SPEC:MA/lla', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:INF', '-SPEC:P', 'COMP:N'}
who             ['LANG:EN']
who-            {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'LF:who', 'PHI_N', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-SPEC:FORCE', 'PF:who', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-COMP:v', '-COMP:C/fin', 'LANG:EN', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
whether         {'!PROBE:FIN', 'LF:whether', '-SPEC:*', 'PF:whether', '!COMP:*', 'OP:Q', '-ARG', 'COMP:T/fin', 'COMP:C/fin', 'OP:WH', 'Q', 'FIN', 'LANG:EN', '-VAL', 'FORCE', 'OP'}
yrittaa         ['LANG:FI']
yritta-         {'PF:yritta', 'SPEC:P', '!COMP:-ARG', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SEM:internal', 'SPEC:TO/inf', '-COMP:v', 'PHI:NUM:_', '!COMP:A/inf', 'PHI:DET:_', 'LANG:EN', 'ASP', 'V', '-VAL', 'PHI:GEN:_', '-SPEC:FORCE', 'LF:try'}
mina            ['LANG:EN']
mina-           {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'LANG:FI', 'PHI_N', 'SPEC:A', 'PF:mina', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-COMP:v', '-COMP:C/fin', 'LF:I', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
sina            ['LANG:EN']
sina-           {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'LANG:FI', 'PHI_N', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', '-SPEC:ADV', 'LF:you', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-COMP:v', '-COMP:C/fin', 'PF:sina', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
han             ['LANG:EN']
han-            {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'LANG:FI', 'PHI_N', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', 'PF:han', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', 'LF:s/he', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-COMP:v', '-COMP:C/fin', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'LANG:FI', 'PHI_N', 'SPEC:A', 'LF:we', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'PF:me', 'COMP:C', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-COMP:v', '-COMP:C/fin', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
te              ['LANG:EN']
te-             {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'LANG:FI', 'PHI_N', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', '-SPEC:ADV', 'LF:you', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-COMP:v', '-COMP:C/fin', 'PF:te', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', 'PF:he', '-COMP:*', 'LANG:FI', 'PHI_N', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-COMP:v', '-COMP:C/fin', 'LF:they', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
se              {'-COMP:T/fin', 'OP', '-SPEC:V', 'LANG:FI', '-COMP:P', '-SPEC:C', '-COMP:uR', '-SPEC:T/fin', 'D', '!COMP:*', '-ARG', 'adjoinable', '!PROBE:N', 'LF:the/that', 'PF:se', '-SPEC:MA/lla', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:INF', '-SPEC:P', 'COMP:N'}
sen             {'-COMP:T/fin', 'OP', '-SPEC:V', 'LANG:FI', '-COMP:P', '-SPEC:C', '-COMP:uR', '-SPEC:T/fin', 'D', '!COMP:*', '-ARG', 'TAIL:PHI', 'TAIL:ASP', 'adjoinable', 'TAIL:*POL:NEG', '!PROBE:N', 'LF:the/that', 'PF:sen', '-SPEC:MA/lla', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:INF', '-SPEC:P', 'COMP:N'}
I               ['LANG:EN']
I-              {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'PF:I', 'PHI_N', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-COMP:v', '-COMP:C/fin', 'LANG:EN', 'LF:I', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
you             ['LANG:EN']
you-            {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'PHI_N', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', '-SPEC:ADV', 'LF:you', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-COMP:v', 'PF:you', '-COMP:C/fin', 'LANG:EN', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
he              ['LANG:EN']
he-             {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', 'PF:he', '-COMP:*', 'PHI_N', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', '-SPEC:ADV', 'LF:he', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-COMP:v', '-COMP:C/fin', 'LANG:EN', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
she             ['LANG:EN']
she-            {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'LF:she', 'PHI_N', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', 'PF:she', '-COMP:v', '-COMP:C/fin', 'LANG:EN', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
we              ['LANG:EN']
we-             {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'PHI_N', 'SPEC:A', 'LF:we', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-COMP:v', '-COMP:C/fin', 'PF:we', 'LANG:EN', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
you_pl          ['LANG:EN']
you_pl-         {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', 'PF:you_pl', '-SPEC:R', 'SPEC:A', 'COMP:D/rel', '-COMP:V', 'COMP:P', '-COMP:AUX', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', '-COMP:WH', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'COMP:R', '-COMP:A', 'LF:you_pl', 'LANG:EN', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', 'PHI'}
they            ['LANG:EN']
they-           {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'PHI_N', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-COMP:v', '-COMP:C/fin', 'LF:they', 'PF:they', 'LANG:EN', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
it              ['LANG:EN']
it-             {'-COMP:T/fin', 'OP', '-SPEC:V', '-COMP:P', '-SPEC:C', '-COMP:uR', '-SPEC:T/fin', 'D', '!COMP:*', 'PF:it', '-ARG', 'LF:it/that', 'adjoinable', 'LANG:EN', '!PROBE:N', '-SPEC:MA/lla', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:INF', '-SPEC:P', 'COMP:N'}
io              ['LANG:EN']
io-             {'PF:io', '-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'PHI_N', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-COMP:v', '-COMP:C/fin', 'LANG:IT', 'LF:I', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
tu              ['LANG:EN']
tu-             {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'PHI_N', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', '-SPEC:ADV', 'LF:you', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-COMP:v', '-COMP:C/fin', 'LANG:IT', 'PF:tu', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
lui             ['LANG:EN']
lui-            {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'PHI_N', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', 'PF:lui', '-SPEC:ADV', 'LF:he', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-COMP:v', '-COMP:C/fin', 'LANG:IT', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
lei             ['LANG:EN']
lei-            {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'LF:she', 'PHI_N', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-COMP:v', '-COMP:C/fin', 'LANG:IT', 'PF:lei', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
noi             ['LANG:EN']
noi-            {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'PHI_N', 'SPEC:A', 'LF:we', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-COMP:v', '-COMP:C/fin', 'LANG:IT', 'PF:noi', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
voi             ['LANG:EN']
voi-            {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'PHI_N', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', 'LF:you_pl', '-SPEC:ADV', 'PF:voi', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-COMP:v', '-COMP:C/fin', 'LANG:IT', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
loro            ['LANG:EN']
loro-           {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'PHI_N', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-SPEC:FORCE', 'PF:loro', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-COMP:v', '-COMP:C/fin', 'LANG:IT', 'LF:they', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
mi              ['LANG:EN']
mi-             {'PF:mi(cl)', '-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'PHI_N', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', 'LF:me', '-COMP:N', 'COMP:uR', 'CL', '-COMP:v', '-COMP:C/fin', 'LANG:IT', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
la              ['LANG:EN']
la-             {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'PHI_N', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'PF:la(cl)', 'COMP:C', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', 'CL', '-COMP:v', '-COMP:C/fin', 'LANG:IT', 'LF:her', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
lo              ['LANG:EN']
lo-             {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'PHI_N', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', 'PF:lo(cl)', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', 'CL', '-COMP:v', '-COMP:C/fin', 'LANG:IT', 'LF:him', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
si              ['LANG:EN']
si-             {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'PHI_N', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', 'PF:si(cl)', '-SPEC:T/fin', 'COMP:C', 'COMP:R', '-COMP:A', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:V', 'CAL:CL', '-SPEC:uWH', 'LF:3sg', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-COMP:v', '-COMP:C/fin', 'LANG:IT', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', '-COMP:WH'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-COMP:*', 'PHI_N', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', '-SPEC:T/fin', 'COMP:C', '-SPEC:P', 'COMP:R', '-COMP:A', 'PF:ci', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-COMP:v', '-COMP:C/fin', 'LANG:IT', '-COMP:VA/inf', '-SPEC:INF', 'LF:there', '-COMP:WH'}
[-n]            {'inflectional', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:1', 'LANG:FI', 'PHI', 'PHI:HUM:HUM'}
[-t]            {'inflectional', 'PHI:NUM:SG', 'PHI:DET:DEF', 'LANG:FI', 'PHI:PER:2', 'PHI', 'PHI:HUM:HUM'}
[-V]            {'inflectional', 'PHI:NUM:SG', 'PHI:PER:3', 'LANG:FI', 'PHI'}
[-mme]          {'inflectional', 'PHI:NUM:PL', 'PHI', 'PHI:PER:1', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM'}
[-mme]          {'inflectional', 'PHI:NUM:PL', 'PHI:PER:1', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM'}
[-tte]          {'inflectional', 'PHI:NUM:PL', 'PHI', 'LANG:FI', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:HUM:HUM'}
[-vat]          {'inflectional', 'PHI:NUM:PL', 'PHI:PER:3', 'LANG:FI', 'PHI'}
[-ni]           {'inflectional', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:1', 'LANG:FI', 'PHI', 'PHI:HUM:HUM'}
[-si]           {'inflectional', 'PHI:NUM:SG', 'PHI:DET:DEF', 'LANG:FI', 'PHI:PER:2', 'PHI', 'PHI:HUM:HUM'}
[-nsa]          {'inflectional', 'PHI:NUM:SG', 'PHI:PER:3', 'LANG:FI', 'PHI'}
[-an]           {'inflectional', 'PHI:NUM:SG', 'PHI:DET:DET', 'PHI:PER:3', 'LANG:FI', 'PHI'}
[-nne]          {'inflectional', 'PHI:NUM:PL', 'LANG:FI', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:HUM:HUM'}
[-s]            {'LANG:EN', 'inflectional', 'PHI:NUM:SG', 'PHI:GEN:M', 'PHI', 'PHI:PER:3', 'PHI:GEN:F'}
[-0]            {'inflectional', 'PHI:NUM:PL', 'PHI:PER:1', 'PHI:PER:3', 'PHI:GEN:N', 'LANG:EN', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:2', 'PHI'}
[-o]            {'inflectional', 'LANG:IT', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:1', 'PHI', 'PHI:HUM:HUM'}
[-i]            {'inflectional', 'LANG:IT', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:2', 'PHI', 'PHI:HUM:HUM'}
[-a]            {'inflectional', 'LANG:IT', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:3', 'PHI'}
[-e]            {'inflectional', 'LANG:IT', 'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI:PER:3', 'PHI'}
[-iamo]         {'inflectional', 'LANG:IT', 'PHI:NUM:PL', 'PHI', 'PHI:PER:1', 'PHI:DET:DEF', 'PHI:HUM:HUM'}
[-te]           {'inflectional', 'LANG:IT', 'PHI:NUM:PL', 'PHI', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:HUM:HUM'}
[-no]           {'inflectional', 'LANG:IT', 'PHI:NUM:PL', 'PHI', 'PHI:PER:3', 'PHI:DET:DEF'}
[-nom]          {'LANG:EN', 'TAIL:FIN,ARG,VAL', 'inflectional', 'adjoinable', 'NOM'}
[-par]          {'inflectional', 'TAIL:ARG,-VAL', 'LANG:FI', 'PAR', 'adjoinable'}
[-gen]          {'TAIL:INF,ARG', 'LANG:EN', 'inflectional', 'GEN', '-float'}
gen             {'TAIL:INF,ARG', 'LANG:EN', 'inflectional', 'GEN', '-float'}
[-n_acc]        {'TAIL:*POL:NEG', 'TAIL:PHI', 'inflectional', 'LANG:FI', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable', 'n-ACC'}
[-t_acc]        {'t-ACC', 'TAIL:*POL:NEG', 'inflectional', 'LANG:FI', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable'}
[-0_acc]        {'TAIL:*PHI', 'TAIL:*POL:NEG', 'inflectional', 'LANG:FI', 'TAIL:ARG,ASP:BOUNDED', '0_ACC', 'adjoinable'}
asp             {'LANG:EN', 'inflectional', 'ASP:BOUNDED'}
a'              {'PF:a', 'LF:A', 'a', 'LANG:X'}
b'              {'PF:b', 'LANG:X', 'b', 'LF:B'}
b''             {'LANG:EN', 'b', 'LF:B', '-COMP:c', 'PF:b'}
c''             {'LANG:EN', 'c', 'LF:C', 'SPEC:a', 'PF:c'}
c'              {'c', 'LF:C', 'LANG:X', 'PF:c'}
d'              {'LF:D', 'LANG:', 'd', 'PF:d'}
a''             ['LANG:EN']
x'              {'PF:x', 'LANG:X', 'LF:X', 'x'}
y'              {'y', 'LF:Y', 'LANG:X', 'PF:y'}
z'              {'PF:x', 'z', 'LANG:X', 'LF:Z'}
John'           {'PF:John', "N'", 'LANG:X', 'LF:John'}
admires'        {'LANG:X', 'LF:admires', "V'", 'PF:admires'}
admires''       {'SPEC:P', 'PF:admires', '-COMP:V', 'COMP:P', '-COMP:N', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', '-COMP:v', 'PHI:DET:_', 'LANG:EN', 'ASP', 'V', 'LF:admires', '-VAL', 'PHI:GEN:_', '-SPEC:FORCE'}
Mary'           {'LF:mary', "N'", 'LANG:X', 'PF:Mary'}
T/fin           {'SPEC:FORCE', '-COMP:T/fin', 'T/fin', 'SPEC:C/fin', 'T', 'COMP:T/prt', '-SPEC:N', '-SPEC:V', '-SPEC:v', '-SPEC:TO/inf', '-SPEC:C', 'COMP:V', 'PHI:PER:_', 'ARG', 'PF:T', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', '!COMP:*', 'LF:T', 'COMP:v', 'VAL', 'PHI:NUM:_', '-COMP:INF', 'PHI:DET:_', 'FIN', '!SPEC:*', 'LANG:EN', '-SPEC:Neg', 'PHI:GEN:_', '!PROBE:V', 'SPEC:*'}
v               {'LF:v', '-SPEC:N', 'PHI:DET:_', 'PHI:NUM:_', 'LANG:EN', 'ASP', '-VAL', 'COMP:V', '!PROBE:V', 'PHI:PER:_', 'ARG', 'PHI:GEN:_', 'SPEC:D', 'v', 'PF:v', '!COMP:*'}
C/fin           {'-SPEC:C/fin', '-SPEC:N', '!PROBE:FIN', 'COMP:Neg/fin', 'PF:C', '-SPEC:T/fin', 'VAL', '!COMP:*', '-ARG', '-COMP:C/fin', 'COMP:T/fin', 'LF:C/fin', 'C/fin', 'FIN', '-COMP:T/prt', 'LANG:EN', 'C', 'SPEC:*'}
T               {'-COMP:NEG', '-SPEC:N', 'T', 'COMP:T/prt', '-SPEC:V', 'COMP:V', 'PHI:PER:_', 'ARG', 'PF:T', 'SPEC:D', '-SPEC:T/fin', 'PHI:NUM:_', '!COMP:*', 'LF:T', 'VAL', 'COMP:v', 'PHI:DET:_', 'FIN', 'LANG:EN', 'PHI:GEN:_', '!PROBE:V', '-SPEC:FORCE', 'SPEC:*'}
T/prt           {'-COMP:NEG', '-SPEC:N', 'COMP:T/prt', 'T/prt', 'T', '-SPEC:V', 'PF:T/prt', 'COMP:V', 'PHI:PER:_', 'ARG', 'SPEC:D', 'LF:T/prt', '-SPEC:T/fin', 'PHI:NUM:_', '!COMP:*', 'VAL', 'COMP:v', 'PHI:DET:_', 'FIN', 'COMP:D', 'LANG:EN', 'PHI:GEN:_', '!PROBE:V', '-SPEC:FORCE', 'SPEC:*'}
a0              {'PF:A', 'LF:A', '-SPEC:D', 'COMP:0', 'TAIL:D', 'A', 'LANG:EN', '-SPEC:A', '-adjoinable'}
n               {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', 'SPEC:A', '-COMP:V', 'COMP:P', '-COMP:AUX', 'PHI:PER:_', '-SPEC:T/fin', '-COMP:WH', 'COMP:C', 'COMP:v', 'COMP:R', 'PHI:DET:_', '-COMP:A', 'PHI:GEN:_', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:V', 'PF:n', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'COMP:D/rel', 'n', '-COMP:N', 'COMP:uR', 'COMP:V', '!SPEC:D', 'ARG', 'PHI:NUM:_', '-COMP:v', 'VAL', '!COMP:*', '-COMP:C/fin', 'COMP:0', '!SPEC:*', 'INF', 'LANG:EN', '-COMP:VA/inf', '-SPEC:INF', '-SPEC:P', 'LF:n', 'SPEC:*'}
impass          {'PF:impass', '-SPEC:N', 'PHI:DET:_', 'LF:impass', 'LANG:EN', 'ASP', '-VAL', 'COMP:V', '!PROBE:V', 'PHI:PER:_', 'ARG', 'PHI:GEN:_', 'SPEC:D', 'v', 'PHI:NUM:_', '!COMP:*'}
cau             {'-SPEC:N', 'PHI:DET:_', 'LANG:EN', 'ASP', '-VAL', 'COMP:V', '!PROBE:V', 'PHI:PER:_', 'ARG', 'PHI:GEN:_', 'PF:Cau', 'SPEC:D', 'v', 'LF:v/Cause', 'PHI:NUM:_', '!COMP:*'}
INF             {'-COMP:C/fin', '-COMP:T/fin', '!COMP:*', '-SPEC:V', 'PF:INF', 'INF', 'LANG:EN', 'COMP:V', '-SPEC:T/fin', '-COMP:FORCE', 'LF:INF', 'COMP:v'}
prtcpl          {'-COMP:NEG', '-COMP:T/fin', '-SPEC:N', 'T', 'T/prt', 'COMP:T/prt', '-SPEC:V', 'PF:T/prt', 'COMP:V', 'PHI:PER:_', 'ARG', 'SPEC:D', 'LF:T/prt', '-SPEC:T/fin', '-COMP:FORCE', '!COMP:*', 'COMP:v', 'VAL', 'PHI:NUM:_', '-COMP:C/fin', 'PHI:DET:_', 'FIN', 'INF', 'COMP:D', 'LANG:EN', 'PHI:GEN:_', '!PROBE:V', '-SPEC:FORCE', 'SPEC:*'}
TO/inf          {'-COMP:T/fin', '?ARG', '-SPEC:V', '-SPEC:v', 'COMP:V', 'TO/inf', '-COMP:FORCE', '-SPEC:T/fin', 'LF:TO/inf', '!COMP:*', 'COMP:v', '-COMP:C/fin', 'PF:TO/inf', 'adjoinable', 'INF', 'LANG:EN', '-VAL', '!COMP:V'}
A/inf           {'PF:A/inf', '-COMP:T/fin', '?ARG', '?VAL', '-SPEC:V', 'COMP:V', '-SPEC:T/fin', '-COMP:FORCE', '!COMP:*', 'COMP:v', '-COMP:C/fin', 'LF:A/inf', 'INF', 'LANG:EN', '-SPEC:Neg/fin', 'A/inf', 'SPEC:*'}
ARE/inf         {'ARE/inf', '-COMP:T/fin', '?ARG', '-SPEC:V', 'LF:ARE/inf', 'COMP:V', '-SPEC:T/fin', '-COMP:FORCE', '-adjoinable', '!COMP:*', 'COMP:v', 'PF:are', 'VAL', '-COMP:C/fin', 'INF', 'LANG:EN', 'SPEC:*'}
ESSA/inf        {'-COMP:T/fin', '?ARG', 'ESSA/inf', '?VAL', '-SPEC:N', '-SPEC:V', 'COMP:V', 'TAIL:T', '-COMP:FORCE', '-SPEC:T/fin', 'LF:while', '!COMP:*', 'COMP:v', '-COMP:C/fin', 'ADV', 'adjoinable', 'PF:essa', 'INF', 'LANG:EN', '-SPEC:Neg/fin', '-SPEC:FORCE', 'SPEC:*'}
TUA/inf         {'PF:tua', '-COMP:T/fin', '-SPEC:N', '-SPEC:V', 'TUA/inf', 'COMP:V', 'PHI:PER:_', 'TAIL:T', 'ARG', 'LF:after', '-COMP:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', 'VAL', '!COMP:*', 'COMP:v', '-COMP:C/fin', 'PHI:DET:_', 'ADV', 'adjoinable', '!SPEC:*', 'INF', 'LANG:EN', 'PHI:GEN:_', '-SPEC:Neg/fin', '-SPEC:FORCE', 'SPEC:*'}
VA/inf          {'-COMP:T/fin', '-SPEC:N', '-SPEC:V', 'PF:vAn', 'VA/inf', 'COMP:V', 'PHI:PER:_', 'ARG', '-COMP:FORCE', '-SPEC:T/fin', 'PHI:NUM:_', '!COMP:*', 'VAL', 'COMP:v', 'LF:VA', '-COMP:C/fin', 'PHI:DET:_', '!SPEC:*', 'INF', 'LANG:EN', 'PHI:GEN:_', 'SPEC:*'}
MA/ssa          {'-SPEC:N', 'PF:massa', 'COMP:V', 'PHI:PER:_', 'ARG', 'TAIL:V', '-SPEC:*', '-SPEC:T/fin', '-SPEC:FORCE', 'LF:in_doing', 'COMP:v', 'PHI:NUM:_', 'PHI:DET:_', 'ADV', 'adjoinable', 'LANG:EN', 'PHI:GEN:_', '-VAL', '-SPEC:Neg/fin', 'MA/ssa', 'MA/inf'}
MA/tta          {'-SPEC:N', 'PHI:DET:_', 'ADV', 'adjoinable', 'LF:without_doing', 'LANG:EN', 'PHI:GEN:_', '-VAL', 'PHI:PER:_', 'TAIL:T', 'ARG', '-SPEC:Neg/fin', 'PF:matta', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'MA/inf'}
MA/lla          {'-SPEC:N', 'PHI:PER:_', 'TAIL:T', '-SPEC:T/fin', 'PF:malla', 'COMP:v', 'PHI:DET:_', 'ADV', 'LF:by_doing', 'adjoinable', 'PHI:GEN:_', '-VAL', '-SPEC:FORCE', 'MA/inf', 'COMP:V', 'ARG', 'PHI:NUM:_', 'LANG:EN', '-SPEC:Neg/fin'}
MA/inf          {'-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin', 'COMP:v', 'PHI:DET:_', 'ADV', 'adjoinable', 'LF:to_do', 'PHI:GEN:_', '-VAL', '-SPEC:FORCE', 'MA/inf', 'COMP:V', 'ARG', 'TAIL:V', 'PHI:NUM:_', 'LANG:EN', '-SPEC:Neg/fin', 'PF:maan'}
E/inf           {'-ARG', '-SPEC:N', 'ADV', 'LANG:FI', 'adjoinable', 'LF:by', 'PF:en', '-VAL', 'TAIL:T', '-SPEC:Neg/fin', '-SPEC:T/fin', '-SPEC:FORCE', 'SPEC:*'}
BE-             {'-COMP:T/fin', 'SPEC:P', 'COMP:T/prt', 'COPULA', 'LF:BE', '-COMP:V', 'COMP:P', '-COMP:N', 'SPEC:ADV', 'SPEC:D', '-SPEC:T/fin', 'SPEC:TO/inf', '!COMP:*', '-COMP:v', '-ARG', 'PF:BE', 'LANG:EN', 'ASP', 'V', '-VAL', '-SPEC:FORCE'}
D               {'PF:D', '-COMP:T/fin', 'OP', '-SPEC:V', '-COMP:P', '-SPEC:C', '-COMP:uR', '-SPEC:T/fin', 'D', '!COMP:*', '-ARG', 'LF:D', 'adjoinable', 'LANG:EN', '!PROBE:N', '-SPEC:MA/lla', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:INF', '-SPEC:P', 'COMP:N'}
D/rel           {'-COMP:T/fin', 'inflectional', '-SPEC:V', '-SPEC:C', '-COMP:uR', '-SPEC:T/fin', 'OP:_', 'D', '!COMP:*', 'LF:D/rel', '-ARG', '-COMP:C/fin', 'D/rel', 'adjoinable', 'PF:D/rel', 'COMP:N', 'LANG:EN', '!PROBE:N', 'OP:REL', '-SPEC:MA/lla', '-COMP:D', '-SPEC:Neg/fin', '-SPEC:INF', '-SPEC:P', 'OP'}
P               {'-COMP:T/fin', '-SPEC:C/fin', '-SPEC:N', '-SPEC:V', '-float', '-SPEC:v', '-SPEC:C', '-COMP:N', 'PHI:PER:_', 'LF:P', 'ARG', '-SPEC:*', '-SPEC:T/fin', '-COMP:ADV', 'PHI:NUM:_', '!COMP:*', '-SPEC:INF', '-SPEC:iWH', 'PF:P', 'PHI:DET:_', 'P', '-COMP:A', 'adjoinable', '-COMP:T', 'COMP:D', '-SPEC:iR', 'LANG:EN', 'PHI:GEN:_', '-VAL', '-COMP:uWH', '-SPEC:ADV', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:P'}
pro             ['LANG:EN']
pro-            {'-SPEC:C/fin', '-SPEC:N', 'COMP:T/prt', '-SPEC:V', '-SPEC:uWH', 'N', 'COMP:R/D', '-SPEC:R', 'SPEC:A', 'LF:pro', '-COMP:V', 'COMP:P', '-COMP:AUX', 'COMP:D/rel', '-COMP:N', 'COMP:uR', '-SPEC:T/fin', '-COMP:WH', 'COMP:C', '-COMP:v', '-SPEC:INF', '-COMP:C/fin', 'PF:(pro)', 'COMP:R', '-COMP:A', 'LANG:EN', '-SPEC:ADV', '-COMP:VA/inf', '-SPEC:FORCE', '-SPEC:P', 'PHI'}
cl              {'LEFT:D,CL', 'LANG:EN', 'inflectional', 'CL', 'LEFT:T/fin', 'RIGHT:ARE/inf', 'RIGHT:PRG'}
inc             {'LANG:EN', 'inflectional', 'INCORPORATED'}
sg              {'LANG:EN', 'inflectional', 'PHI:NUM:SG'}
pl              {'LANG:EN', 'inflectional', 'PHI:NUM:PL'}
1p              {'LANG:EN', 'PHI:PER:1', 'inflectional'}
2p              {'LANG:EN', 'inflectional', 'PHI:PER:2'}
3p              {'LANG:EN', 'PHI:PER:3', 'inflectional'}
def             {'LANG:EN', 'inflectional', 'PHI:DET:DEF'}
indef           {'LANG:EN', 'inflectional', 'PHI:DET:INDEF'}
hum             {'LANG:EN', 'inflectional', 'PHI:HUM:HUM'}
nonhum          {'LANG:EN', 'inflectional', 'PHI:HUM:NONHUM'}
m               {'LANG:EN', 'PHI:GEN:M', 'inflectional'}
f               {'LANG:EN', 'inflectional', 'PHI:GEN:F'}
nom             {'LANG:EN', 'TAIL:FIN,!COMP:*,VAL', 'inflectional', 'NOM'}
acc             {'LANG:EN', 'TAIL:v', 'inflectional', 'ACC'}
dat             {'LANG:EN', 'DAT', 'TAIL:v', 'inflectional'}
uC/op           {'LANG:EN', 'inflectional', 'uC/op'}
wh              {'LANG:EN', 'OP:_', 'inflectional', 'OP:WH'}
wh_             {'LANG:EN', 'inflectional', 'OP', 'OP:_', 'FORCE:OP:WH'}
top             {'LANG:EN', 'OP:TOP', 'inflectional'}
foc             {'LANG:EN', 'inflectional', 'OP:FOC'}
C/op            {'LANG:EN', 'OP:C/OP', 'inflectional'}
Q               {'LANG:EN', 'OP:Q', 'inflectional', 'OP:WH', 'OP'}
