ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'-SPEC:T/fin', '-ARG', 'adjoinable', '-SPEC:C/fin', '-COMP:uWH', '-COMP:T/fin', 'LANG:IT', '-SPEC:iWH', '!COMP:*', '-COMP:ADV', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:ADV', '-SPEC:P', 'COMP:D', '-VAL', 'P', '-SPEC:*', 'PF:a', 'LF:to', '-SPEC:v', '-SPEC:INF', '-SPEC:V', '-SPEC:iR', '-SPEC:N', 'COMP:ARE/inf', '-COMP:N', '-SPEC:FORCE'}
a_D             {'-SPEC:T/fin', '-SPEC:D', 'LANG:EN', 'OP', 'PF:D', '-ARG', '-COMP:T/fin', '-COMP:uR', '!COMP:*', 'LF:D', 'COMP:N', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:P', '-COMP:D', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:V', 'adjoinable', 'D', '-SPEC:N'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:EN', 'PF:admire', 'SPEC:P', '-SPEC:Neg', '-COMP:V', 'PHI:DET:_', 'LF:admire', 'PHI:NUM:_', 'PHI:GEN:_', '!COMP:*', 'COMP:P', 'COMP:D', '-VAL', '-COMP:v', '-COMP:P', 'ARG', 'SPEC:ADV', 'V', '-COMP:Neg', 'CLASS:TR', '-COMP:N', '-SPEC:FORCE'}
admire*         ['LANG:EN']
T/fin*          {'CAT:T/fin', '!SPEC:*', 'LF:T', '-VAL', 'LANG:EN', "PF:T/fin'", 'NO_DET', 'NO_NUMBER'}
v*              {'LF:v', 'NO_DET', 'NO_NUMBER', 'PF:v', 'CAT:v', '-VAL', 'LANG:EN'}
admire**        ['LANG:EN']
T/fin**         {'!SPEC:*', 'CAT:T/fin', 'LF:T', '-VAL', 'LANG:EN', 'PHI:PER:3', 'NO_PERSON', 'NO_DET', "PF:T/fin''", 'NO_NUMBER'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'LF:admire', 'LANG:IT', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:P', 'PF:adora', 'COMP:D', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', '-COMP:N', '-SPEC:FORCE'}
antaa           ['LANG:FI']
anta-           {'-SPEC:T/fin', 'ASP:BOUNDED', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'PF:antaa', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'CLASS:DITR', 'SPEC:D', 'PHI:NUM:_', '!COMP:*', 'COMP:P', '+SEM:directional', '-COMP:FIN', '-SPEC:FORCE', 'COMP:D', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', 'LANG:FI', '-COMP:N', 'LF:give'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'-SPEC:T/fin', 'PF:ask', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:EN', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'LF:ask', 'SPEC:D', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:P', 'COMP:D', 'SEM:internal', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', '-COMP:N', '-SPEC:FORCE'}
ask-            {'-SPEC:T/fin', 'PF:ask', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:EN', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'LF:ask', 'SPEC:D', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:P', 'COMP:D', 'SEM:internal', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', '-COMP:N', '-SPEC:FORCE'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-SEM:directional', '-SPEC:T/fin', '-COMP:A', '-COMP:V', '-SPEC:C/fin', 'PF:avain', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', 'LF:key', '-SPEC:V', '-SPEC:N', 'LANG:FI', 'SPEC:A', 'N', '-COMP:WH'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-SEM:directional', '-SPEC:T/fin', '-COMP:A', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', 'PF:auto', '-COMP:D', '-COMP:v', '-COMP:WH', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'LANG:FI', 'SPEC:A', 'N', 'LF:car'}
city            {'-SPEC:T/fin', '-COMP:A', 'LANG:EN', 'PF:city', '-SPEC:N', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', 'LF:city', 'SPEC:A', 'N', '-COMP:WH'}
che             ['LANG:IT']
che-            {'-SPEC:T/fin', '-COMP:A', 'LF:who', 'PF:che', '-COMP:V', '-SPEC:C/fin', 'COMP:R', 'LANG:IT', '-COMP:T/fin', 'PHI_N', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-COMP:*', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
chiamato        ['LANG:IT']
chiamata-       {'-SPEC:T/fin', 'PF:chiamato', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'LF:called', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'LANG:IT', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:P', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', '-COMP:N', '-SPEC:FORCE'}
danno           {'-SPEC:T/fin', '-COMP:A', 'LF:damage', 'PF:danno', '-COMP:V', '-SPEC:C/fin', 'COMP:R', 'LANG:IT', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'PF:detest', '-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'LF:detest', 'LANG:IT', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:P', 'SEM:internal', 'COMP:D', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', 'COMP:ARE/inf', '-COMP:N', '-SPEC:FORCE'}
devono          ['LANG:EN']
deva-           {'-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'PF:deva', 'SPEC:D', 'LANG:IT', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:P', 'SEM:internal', 'LF:must', '-VAL', '-COMP:v', '-ASP', 'ARG', 'SPEC:ADV', 'V', 'COMP:ARE/inf', '-COMP:N', '-SPEC:FORCE'}
di              {'-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:C/fin', '-COMP:uWH', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:iWH', 'LF:of', '!COMP:*', '-COMP:ADV', 'PF:di', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:ADV', '-SPEC:P', 'COMP:D', '-VAL', 'P', 'SPEC:*', 'ARG', '-adjoinable', '-SPEC:v', '-SPEC:INF', '-SPEC:V', '-SPEC:iR', '-SPEC:N', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
does            {'-SPEC:T/fin', 'T/fin', '-COMP:INF', 'COMP:V', '!SPEC:*', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:EN', 'T', 'LF:does', 'PHI:DET:_', '-SPEC:C/fin', 'PHI:NUM:SG', 'FIN', 'COMP:v', 'SPEC:INF', '-COMP:T/fin', 'SPEC:D', 'PHI:NUM:_', 'COMP:Neg', 'PHI:PER:3', '!COMP:*', '!PROBE:V', 'PHI:GEN:F', 'VAL', 'COMP:D', 'SPEC:*', 'PHI:GEN:M', 'ARG', '-SPEC:v', '-SPEC:V', 'COMP:T/prt', '-SPEC:N', 'PF:does', 'PHI:GEN:_', '-SPEC:FORCE'}
does_C          ['LANG:EN']
does-           {'-SPEC:T/fin', 'T/fin', '-COMP:INF', 'COMP:V', '!SPEC:*', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:EN', 'T', 'LF:does', 'PHI:DET:_', '-SPEC:C/fin', 'PHI:NUM:SG', 'FIN', 'COMP:v', 'SPEC:INF', '-COMP:T/fin', 'SPEC:D', 'PHI:NUM:_', 'COMP:Neg', 'PHI:PER:3', '!COMP:*', '!PROBE:V', 'PHI:GEN:F', 'VAL', 'COMP:D', 'SPEC:*', 'PHI:GEN:M', 'ARG', '-SPEC:v', '-SPEC:V', 'COMP:T/prt', '-SPEC:N', 'PF:does', 'PHI:GEN:_', '-SPEC:FORCE'}
dorme           ['LANG:IT']
dorme-          {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:EN', 'SPEC:P', 'PHI:DET:_', 'LF:sleep', '-COMP:V', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:P', '!SPEC:D', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'PF:dorme', 'V', '-COMP:N', '-SPEC:FORCE'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'-SPEC:T/fin', '%SPEC:INF', '!SPEC:*', 'Neg/fin', 'PHI:PER:_', 'NEG', 'PHI:DET:_', 'FIN', 'PHI:NUM:_', '!COMP:*', 'VAL', '!COMP:T', 'SEM:internal', 'LF:neg', '-SPEC:T', 'SPEC:*', 'ARG', 'POL:NEG', 'PF:ei', 'COMP:T/prt', 'LANG:FI'}
e-              {'-SPEC:T/fin', '%SPEC:INF', '!SPEC:*', 'Neg/fin', 'PHI:PER:_', 'NEG', 'PHI:DET:_', 'FIN', 'PHI:NUM:_', '!COMP:*', 'VAL', '!COMP:T', 'SEM:internal', 'LF:neg', '-SPEC:T', 'SPEC:*', 'ARG', 'POL:NEG', 'PF:ei', 'COMP:T/prt', 'LANG:FI'}
elaa            ['LANG:FI']
ela-            {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'CLASS:INTR', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'SPEC:D', 'PHI:NUM:_', 'COMP:P', 'PF:elaa', '-VAL', 'LF:live', '-COMP:v', '-COMP:D', 'ARG', 'SPEC:ADV', 'V', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
etsii           ['LANG:FI']
etsi-           {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'PF:etsi', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'PHI:NUM:_', 'COMP:P', 'LF:search', '!COMP:D', 'COMP:D', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
etta            {'COMP:T/fin', 'COMP:C/fin', '-VAL', '!PROBE:T/fin', '-SPEC:*', 'FORCE', '-ARG', 'FIN', 'LF:that', 'PF:ettÃ¤', '!COMP:*', 'LANG:FI'}
flow'           {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:EN', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'SPEC:D', 'PHI:NUM:_', 'PHI:GEN:_', 'PF:flow', 'COMP:P', 'LF:flow', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', '-COMP:N', '-SPEC:FORCE'}
from            {'-SPEC:T/fin', 'LF:from', 'PHI:PER:_', 'LANG:EN', 'PHI:DET:_', '-float', '-SPEC:C/fin', '-COMP:uWH', 'adjoinable', '-COMP:T/fin', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:iWH', '!COMP:*', '-COMP:ADV', '-SPEC:C', 'PF:from', '-SPEC:ADV', 'TAIL:V,+SEM:directional', '-SPEC:Neg/fin', '-VAL', 'P', '-SPEC:P', '-SPEC:*', 'COMP:D', 'ARG', '-SPEC:v', '-SPEC:INF', '-SPEC:V', '-SPEC:iR', '-SPEC:N', '-COMP:N', '-SPEC:FORCE'}
gave            ['LANG:EN']
give-           {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:EN', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'CLASS:DITR', 'SPEC:D', 'PHI:NUM:_', 'PHI:GEN:_', 'LF:give', '!COMP:*', '+SEM:directional', 'COMP:P', '-COMP:FIN', '-SPEC:FORCE', 'COMP:D', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', '-COMP:N', 'PF:give'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SEM:directional', '-SPEC:T/fin', '-COMP:A', '-COMP:V', '-SPEC:C/fin', 'COMP:R', 'LANG:IT', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', 'LF:Giuseppe', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', 'PF:Giuseppe', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'-SPEC:T/fin', 'ASP:BOUNDED', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'PF:haluaa', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'PHI:NUM:_', '!COMP:*', 'COMP:P', 'COMP:D', 'SEM:internal', '-VAL', '-SPEC:*', '-COMP:v', '-COMP:P', 'ARG', 'SPEC:ADV', '-COMP:N', 'V', 'CLASS:TR', 'LANG:FI', 'LF:want', '-SPEC:FORCE', 'COMP:A/inf'}
hairitsee       ['LANG:FI']
hairitse-       {'-SPEC:T/fin', 'ASP', 'LF:disturb', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'SPEC:D', 'PHI:NUM:_', 'COMP:P', '-COMP:FIN', '!COMP:D', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'PF:hairitsee', 'V', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'SPEC:D', 'LANG:IT', 'PF:ha', 'PHI:NUM:_', 'LF:have', 'PHI:GEN:_', 'COMP:P', 'SEM:internal', '-VAL', 'SPEC:*', 'COMP:T', '-COMP:v', '-ASP', 'ARG', 'SPEC:ADV', 'V', '-COMP:N', '-SPEC:FORCE'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'CLASS:INTR', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'SPEC:D', 'PHI:NUM:_', 'LF:disappear', 'COMP:P', 'PF:havia', '-VAL', '-COMP:v', '-COMP:D', 'ARG', 'SPEC:ADV', 'V', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'LF:admire', 'PHI:NUM:_', 'PF:ihaile-', '!COMP:*', 'COMP:P', '-COMP:FIN', '!COMP:D', 'COMP:D', '-VAL', '-COMP:v', '-COMP:P', 'ARG', 'SPEC:ADV', 'V', 'CLASS:TR', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
il              {'-SPEC:T/fin', '-SPEC:D', 'OP', '-ARG', '-COMP:T/fin', 'LANG:IT', '-COMP:uR', '!COMP:*', 'COMP:N', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:P', 'LF:the', '-COMP:D', '!PROBE:N', 'PF:il', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:V', 'adjoinable', 'D', '-SPEC:N'}
i               {'-SPEC:T/fin', '-SPEC:D', 'OP', '-ARG', '-COMP:T/fin', 'LANG:IT', '-COMP:uR', '!COMP:*', 'COMP:N', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:P', 'LF:the', '-COMP:D', '!PROBE:N', 'PF:il', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:V', 'adjoinable', 'D', '-SPEC:N'}
in              {'-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'adjoinable', '-SPEC:C/fin', 'PF:in', '-COMP:uWH', '-COMP:T/fin', 'LANG:IT', 'PHI:NUM:_', 'LF:in', '-SPEC:iWH', '!COMP:*', 'PHI:GEN:_', '-COMP:ADV', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:ADV', '-SPEC:P', 'COMP:D', '-VAL', 'P', 'ARG', '-SPEC:v', '-SPEC:INF', '-SPEC:V', '-SPEC:iR', '-SPEC:N', '-COMP:N', '-SPEC:FORCE'}
infermieri      {'-SPEC:T/fin', '-COMP:A', 'LF:nurses', '-SPEC:C/fin', '-COMP:V', 'COMP:R', 'LANG:IT', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', 'PF:infermieri', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
is              ['LANG:EN']
be-             {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', '-COMP:TO/inf', 'LANG:EN', 'SPEC:P', 'COPULA', '-ARG', '-COMP:V', 'SPEC:D', '!COMP:*', 'COMP:P', '-VAL', '-COMP:v', 'SPEC:ADV', 'V', 'PF:be', '-COMP:N', '-SPEC:FORCE', 'LF:be'}
istuuko         ['LANG:FI']
istuu-          {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'CLASS:INTR', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'SPEC:D', 'PHI:NUM:_', 'COMP:P', 'PF:istuu', 'LF:sit', '-VAL', '-COMP:v', '-COMP:D', 'ARG', 'SPEC:ADV', 'V', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
John            ['LANG:EN']
John-           {'-SEM:directional', '-SPEC:T/fin', '-COMP:A', 'PF:John', 'LANG:EN', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-adjoinable', '-SPEC:INF', 'LF:John', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-SEM:directional', '-SPEC:T/fin', 'PF:Jukka', '-COMP:A', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', 'LF:Jukka', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'LANG:FI', 'SPEC:A', 'N', '-COMP:WH'}
juosten         ['LANG:FI']
juokse-         {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'PF:juokse-', 'PHI:NUM:_', 'COMP:P', 'LF:run', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
istuu           ['LANG:FI']
istu-           {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'PHI:NUM:_', 'COMP:P', 'PF:istuu', 'LF:sit', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
kaksi           {'COMP:N', 'COMP:n', 'PHI:PER:_', '-VAL', 'SPEC:*', 'NUM', 'PHI:DET:_', 'PHI:NUM:SG', 'ARG', 'PF:kaksi', 'PHI:NUM:_', 'TAIL:ARG,VAL,FIN', 'LF:two', 'LANG:FI'}
kaksi           {'COMP:N', 'COMP:n', 'LANG:EN', 'SPEC:*', 'NUM', 'TAIL:ARG,ASP:BOUNDED', 'PF:kaksi', 'LF:two', 'TAIL:*POL:NEG'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'COMP:N', 'PF:kaksi', 'SPEC:*', 'COMP:n', 'LF:two', 'LANG:FI', 'NUM'}
kaupunkia       ['LANG:EN']
kaupunki        {'-SPEC:T/fin', '-COMP:A', '-SPEC:N', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', 'PF:kaupunki', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-COMP:P', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', 'LF:city', 'LANG:FI', 'SPEC:A', 'N', '-COMP:WH'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'PF:kaske', '-SPEC:T/fin', 'LF:order', 'SEM:external', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'PHI:NUM:_', 'COMP:P', '-VAL', '!COMP:A/inf', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-SPEC:T/fin', '-COMP:A', 'PF:kello', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', 'LF:watch', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'LANG:FI', 'SPEC:A', 'N', '-COMP:WH'}
kello0-         {'LF:watch', '0', 'PF:kello', 'SPEC:D', '2SPEC', 'LANG:FI'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-SPEC:T/fin', '-COMP:A', 'LANG:EN', 'PF:key', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', 'LF:key', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-SEM:directional', '-SPEC:T/fin', '-COMP:A', 'LF:book', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-COMP:WH', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'LANG:FI', 'SPEC:A', 'N', 'PF:kirja'}
kohti           {'-SPEC:T/fin', 'LF:towards', 'PHI:PER:_', 'PHI:DET:_', 'adjoinable', '-SPEC:C/fin', '-COMP:uWH', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:iWH', '!COMP:*', '-COMP:ADV', 'TAIL:V', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:ADV', '-SPEC:P', 'COMP:D', '-VAL', 'P', 'SPEC:*', 'PF:kohti', 'ARG', '-SPEC:v', '-SPEC:INF', '-SPEC:V', '-SPEC:iR', '-SPEC:N', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
koko            {'-SPEC:T/fin', '-SPEC:D', 'OP', '-ARG', '-COMP:T/fin', '-COMP:uR', '!COMP:*', 'TAIL:T', 'COMP:N', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:P', '-COMP:D', 'PF:koko', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:V', 'adjoinable', 'D', '-SPEC:N', 'LANG:FI', 'LF:all'}
kuka            ['LANG:FI']
kuka-           {'-SPEC:T/fin', '-COMP:A', 'LF:who', '-COMP:V', '-SPEC:C/fin', 'PHI', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', 'PF:kuka', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'LANG:FI', 'SPEC:A', 'N', '-COMP:WH'}
kuorsaa-        {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'PF:kuorsaa', 'SPEC:P', '-COMP:V', 'PHI:DET:_', 'LF:snore', '-COMP:T/fin', 'PHI:NUM:_', 'COMP:P', '-SPEC:FORCE', '-VAL', '-COMP:D', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', 'LANG:FI', '-COMP:N', '-COMP:WH'}
kuorsaamalla    ['LANG:FI']
lahella         {'-COMP:FORCE', '-SPEC:C/fin', 'COMP:v', 'PHI:NUM:_', '!COMP:*', '-SPEC:iWH', '-COMP:ADV', '-SPEC:C', '-SPEC:ADV', 'SPEC:*', 'ARG', '-SPEC:v', '-SPEC:INF', '-SPEC:V', '-COMP:N', '-SPEC:T/fin', '!SPEC:*', 'COMP:V', 'PF:lahella', 'PHI:PER:_', 'PHI:DET:_', '-COMP:uWH', '-COMP:T/fin', '!PROBE:V', '!SPEC:D', 'VAL', '-SPEC:FORCE', '-SPEC:Neg/fin', '-SPEC:P', 'COMP:D', 'P', '-SPEC:iR', 'adjoinable', 'LF:near', '-SPEC:N', 'LANG:FI', '-COMP:C/fin', 'INF'}
lahella         {'-SPEC:T/fin', 'PF:lahella', 'PHI:PER:_', 'PHI:DET:_', 'adjoinable', '-SPEC:C/fin', '-COMP:uWH', '-COMP:T/fin', 'PHI:NUM:_', '!COMP:*', '-SPEC:iWH', '-COMP:ADV', '-SPEC:C', '!COMP:D', '-SPEC:Neg/fin', '-SPEC:ADV', '-SPEC:P', 'COMP:D', '-VAL', 'P', 'SPEC:*', 'ARG', '-SPEC:v', '-SPEC:INF', '-SPEC:V', '-SPEC:iR', 'LF:near', '-SPEC:N', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'-SPEC:T/fin', 'ASP', 'COMP:PP', 'SPEC:TO/inf', 'PHI:PER:_', 'CLASS:INTR', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'LF:leave', 'SPEC:D', 'PHI:NUM:_', 'COMP:P', '-VAL', '-COMP:v', '-COMP:D', 'ARG', 'SPEC:ADV', 'PF:lahtea', 'V', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
lavano          ['LANG:IT']
lava-           {'LF:wash', '-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'PF:lava', 'LANG:IT', 'PHI:NUM:_', 'PHI:GEN:_', '!COMP:*', 'COMP:P', 'COMP:D', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', '-COMP:N', '-SPEC:FORCE'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-SPEC:T/fin', '-SPEC:D', 'OP', '-ARG', '-COMP:T/fin', 'LANG:IT', '-COMP:uR', '!COMP:*', 'LF:D', 'COMP:N', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:P', '-COMP:D', 'PF:le', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:V', 'adjoinable', 'D', '-SPEC:N'}
leaves          ['LANG:EN']
leave           {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:EN', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'LF:leave', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:P', '!SPEC:D', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', 'PF:leave', '-COMP:N', '-SPEC:FORCE'}
leave-          {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:EN', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'LF:leave', '-COMP:T/fin', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:P', '!SPEC:D', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', 'PF:leave', '-COMP:N', '-SPEC:FORCE'}
like-           {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:EN', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'LF:like', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:P', 'PF:like', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', '!COMP:D', '-COMP:N', '-SPEC:FORCE'}
likes           ['LANG:EN']
like            {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:EN', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'LF:like', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:P', 'PF:like', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', '!COMP:D', '-COMP:N', '-SPEC:FORCE'}
little          ['LANG:EN']
little-         {'0', 'SPEC:D', 'PF:little-', '2SPEC', 'LF:little', 'LANG:EN'}
lle             {'-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'adjoinable', '-SPEC:C/fin', '-COMP:uWH', '-COMP:T/fin', 'PHI:NUM:_', 'PF:P(lle)', '-SPEC:iWH', '!COMP:*', '+SEM:directional', '-COMP:ADV', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:ADV', 'TAIL:V,+SEM:directional', '-SPEC:P', '-VAL', 'P', 'COMP:D', '-SPEC:*', 'ARG', '-SPEC:v', '-SPEC:INF', '-SPEC:V', '-SPEC:iR', 'LF:for', '-SPEC:N', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
lla             {'-SPEC:T/fin', 'PHI:PER:_', 'TAIL:*V', 'PHI:DET:_', 'adjoinable', '-SPEC:C/fin', '-COMP:uWH', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:iWH', '!COMP:*', '-COMP:ADV', 'TAIL:T', 'PF:P(lla)', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:ADV', '-SPEC:P', 'COMP:D', '-VAL', 'P', 'SPEC:*', 'LF:by', 'ARG', '-SPEC:v', '-SPEC:INF', '-SPEC:V', '-SPEC:iR', '-SPEC:N', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
Luisa           ['LANG:IT']
Luisa-          {'-SEM:directional', '-SPEC:T/fin', '-COMP:A', '-COMP:V', '-SPEC:C/fin', 'COMP:R', 'LANG:IT', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', 'LF:Luisa', 'PF:Luisa', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
lukemalla       ['LANG:FI']
luke-           {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'PHI:NUM:_', 'PF:luke', '!COMP:*', 'COMP:P', 'LF:read', 'COMP:D', '-VAL', '-COMP:v', '-COMP:P', 'ARG', 'SPEC:ADV', 'V', 'CLASS:TR', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'-SPEC:T/fin', 'ASP:BOUNDED', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'PHI:NUM:_', '!COMP:*', 'COMP:P', 'PF:loyta-', '!COMP:D', 'COMP:D', '-VAL', '-COMP:v', '-COMP:P', 'ARG', 'SPEC:ADV', 'V', 'CLASS:TR', 'LANG:FI', '-COMP:N', '-SPEC:FORCE', 'LF:find'}
Mary            ['LANG:EN']
Mary-           {'-SEM:directional', '-SPEC:T/fin', '-COMP:A', 'LANG:EN', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'LF:Mary', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'PF:Mary', 'COMP:R/D', '-COMP:D', '-COMP:v', '-adjoinable', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-SEM:directional', '-SPEC:T/fin', '-COMP:A', 'LF:Merja', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'PF:Merja', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-adjoinable', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'LANG:FI', 'SPEC:A', 'N', '-COMP:WH'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:Neg/fin', 'MA/inf', 'LANG:FI', 'ADV', 'SPEC:*', 'LF:by', 'COMP:v', 'adjoinable', '-SPEC:N', 'PF:malla', 'TAIL:T'}
meren           ['LANG:FI']
mere-           {'-SPEC:T/fin', '-COMP:A', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', 'LANG:FI', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', 'N', '-SPEC:V', '-SPEC:N', 'PF:meri', 'SPEC:A', 'LF:ocean', '-COMP:WH'}
mistake         {'-SPEC:T/fin', '-COMP:A', 'LANG:EN', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', 'PF:mistake', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-SPEC:INF', 'LF:mistake', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-SPEC:T/fin', '-COMP:A', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'PF:mika-', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', 'LF:what', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'LANG:FI', 'SPEC:A', 'N', '-COMP:WH'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'PHI:NUM:_', 'PHI:GEN:_', '!COMP:*', 'COMP:P', '+SEM:directional', 'LF:move', 'COMP:D', 'PF:move', '-VAL', '-COMP:v', 'LANGN:EN', '-COMP:P', 'ARG', 'SPEC:ADV', 'V', 'CLASS:TR', '-COMP:N', '-SPEC:FORCE'}
mukavasti       ['LANG:EN']
mukava-         {'LF:comfortably', '0', 'SPEC:D', '2SPEC', 'PF:mukavasti', 'LANG:FI'}
must            {'-SPEC:T/fin', 'T/fin', '-COMP:INF', 'COMP:V', '!SPEC:*', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:EN', 'T', 'PHI:DET:_', '-SPEC:C/fin', 'FIN', 'COMP:v', 'SPEC:INF', '-COMP:T/fin', 'SPEC:D', 'PHI:NUM:_', 'COMP:Neg', '!PROBE:V', '!COMP:*', 'MODAL', 'VAL', 'COMP:D', 'LF:must', 'SPEC:*', 'ARG', 'PF:must', '-SPEC:v', '-SPEC:V', 'COMP:T/prt', '-SPEC:N', 'PHI:GEN:_', '-SPEC:FORCE'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'-SPEC:T/fin', 'ASP:BOUNDED', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'PF:myy', 'PHI:NUM:_', '!COMP:*', 'COMP:P', 'COMP:D', 'LF:sell', '-VAL', '-COMP:v', '-COMP:P', 'ARG', 'SPEC:ADV', 'V', 'CLASS:TR', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
naki            ['LANG:FI']
nake-           {'-SPEC:T/fin', 'ASP:BOUNDED', 'ASP', 'SPEC:TO/inf', '-COMP:ESSA/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'PHI:NUM:_', '!COMP:*', 'COMP:P', 'COMP:D', '-VAL', '-COMP:v', '-COMP:P', 'ARG', 'SPEC:ADV', 'LF:see', 'V', 'PF:nake', 'CLASS:TR', 'LANG:FI', '-COMP:MA/inf', '-COMP:N', '-SPEC:FORCE'}
nayttaa         ['LANG:FI']
naytta-         {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PF:naytta', 'PHI:PER:_', '!COMP:VA/inf', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'LF:seem', 'SPEC:D', 'PHI:NUM:_', 'COMP:P', 'SEM:internal', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
ndo             {'?ARG', '-SPEC:T/fin', '-COMP:FORCE', 'COMP:V', 'LANG:EN', 'COMP:v', 'PRG', '-COMP:T/fin', 'PF:PRG', '!PROBE:V', '!COMP:*', 'VAL', '-SPEC:V', 'LF:ing', '-COMP:C/fin', 'INF'}
ne              {'-SPEC:T/fin', '-SPEC:D', 'PF:ne', 'OP', 'PHI:NUM:PL', '-ARG', '-COMP:T/fin', 'PHI:PER:3', 'LF:those', '-COMP:uR', '!COMP:*', 'COMP:N', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:P', '-COMP:D', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:V', 'adjoinable', 'D', '-SPEC:N', 'LANG:FI'}
niiden          ['LANG:EN']
nen             {'-SPEC:A', 'TAIL:D', '-SPEC:D', 'SPEC:*', 'PF:a', 'adjoinable', 'LF:ing', 'A', 'LANG:FI', 'COMP:0'}
not             {'-SPEC:T/fin', '-COMP:FIN', 'LF:not', 'PF:not', 'Neg', '-VAL', 'SPEC:*', 'LANG:EN', '-COMP:D', 'PHI:PER:_', 'PHI:DET:_', 'ARG', 'POL:NEG', '-COMP:C', 'PHI:NUM:_', '!COMP:*', 'PHI:GEN:_'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-SPEC:T/fin', '-COMP:T', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'CLASS:INTR', 'SPEC:P', 'PHI:DET:_', 'LF:sleep', '-COMP:V', 'SPEC:D', '-COMP:T/fin', 'PHI:NUM:_', 'COMP:P', '-COMP:Neg/fin', '-VAL', '-COMP:v', '-COMP:D', 'ARG', 'SPEC:ADV', '-COMP:N', 'V', 'LANG:FI', 'PF:nukku', '-SPEC:FORCE'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-SPEC:T/fin', '-COMP:A', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'LF:possessions', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', 'PF:omaisuuden', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'LANG:FI', 'SPEC:A', 'N', '-COMP:WH'}
operatoria      ['LANG:IT']
operatoria-     {'0', 'SPEC:D', 'LANG:IT', '2SPEC', 'PF:operatoria', 'LF:operation'}
ostaa           ['LANG:FI']
osta-           {'-SPEC:T/fin', 'ASP:BOUNDED', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'PHI:NUM:_', '!COMP:*', 'COMP:P', 'COMP:D', 'LF:buy', '-VAL', '-COMP:v', 'PF:osta', '-COMP:P', 'ARG', 'SPEC:ADV', 'V', 'CLASS:TR', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-SPEC:T/fin', '-COMP:A', '-COMP:V', '-SPEC:C/fin', 'COMP:R', 'SEM:nonreferential', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'LF:day', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', 'PF:paiva', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'LANG:FI', 'SPEC:A', 'N', '-COMP:WH'}
Pariisia        ['LANG:FI']
Pariisi-        {'-SPEC:T/fin', '-COMP:A', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', 'LF:Paris', '-SPEC:INF', '-SPEC:uWH', 'PF:Pariisi', '-SPEC:V', '-SPEC:N', 'LANG:FI', 'SPEC:A', 'N', '-COMP:WH'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-SEM:directional', '-SPEC:T/fin', '-COMP:A', '-COMP:V', '-SPEC:C/fin', 'PF:Pekka', 'LF:Pekka', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'LANG:FI', 'SPEC:A', 'N', '-COMP:WH'}
pelottaa        ['LANG:FI']
pelkaa-         {'-SPEC:T/fin', 'LF:fear', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'PF:pelkaa', 'PHI:NUM:_', '!COMP:*', 'COMP:P', 'COMP:D', '-VAL', '-COMP:v', '-COMP:P', 'ARG', 'SPEC:ADV', 'V', 'CLASS:TR', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
persuades       ['LANG:EN']
persuade-       {'-SPEC:T/fin', 'SEM:external', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:EN', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'LF:persuade', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:P', '-VAL', 'COMP:TO/inf', '-COMP:v', 'PF:persuade', 'ARG', 'SPEC:ADV', 'V', '-COMP:N', '-SPEC:FORCE'}
peruuntui       ['LANG:FI']
peruuntu-       {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'SPEC:D', 'PHI:NUM:_', 'COMP:P', '-VAL', '-COMP:v', 'LF:cancelled', 'ARG', 'SPEC:ADV', 'PF:peruuntui', 'V', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'LF:wash', '-SPEC:T/fin', 'ASP:BOUNDED', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'PHI:NUM:_', '!COMP:*', 'COMP:P', 'COMP:D', '-VAL', '-COMP:v', '-COMP:P', 'ARG', 'SPEC:ADV', 'PF:pese', 'V', 'CLASS:TR', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
pese-           {'LF:wash', '-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'PHI:NUM:_', '!COMP:*', 'COMP:P', 'COMP:D', '-VAL', '-COMP:v', '-COMP:P', 'ARG', 'SPEC:ADV', 'PF:pese', 'V', 'CLASS:TR', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
petardi         {'-SPEC:T/fin', '-COMP:A', '-COMP:V', '-SPEC:C/fin', 'COMP:R', 'LANG:IT', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'LF:firecrackers', 'COMP:R/D', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'PF:petardi', 'SPEC:A', 'N', '-COMP:WH'}
pieni           ['LANG:FI']
pieni-          {'LF:small', '0', 'SPEC:D', '2SPEC', 'LANG:FI', 'PF:pieni-'}
poikien         ['LANG:FI']
poika-          {'-SPEC:T/fin', '-COMP:A', 'LF:boy', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', 'PF:poika', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'LANG:FI', 'SPEC:A', 'N', '-COMP:WH'}
puhelinta       ['LANG:FI']
puhelin-        {'0', 'SPEC:D', '2SPEC', 'PF:puhelin', 'LF:phone', 'LANG:FI'}
punainen        ['LANG:FI']
puna-           {'0', 'PF:puna-', 'LF:red', 'SPEC:D', '2SPEC', 'LANG:FI'}
presupposto     {'-SPEC:T/fin', '-COMP:A', 'LF:presupposition', 'PF:presupposto', '-COMP:V', '-SPEC:C/fin', 'COMP:R', 'LANG:IT', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
primary         {'-SPEC:T/fin', '-COMP:A', 'LF:nurse', '-COMP:V', '-SPEC:C/fin', 'COMP:R', 'LANG:IT', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', 'PF:primary', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
promises        ['LANG:EN']
promise-        {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:EN', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'SPEC:D', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:P', 'COMP:D', 'SEM:internal', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'LF:promise', 'V', 'PF:promise', '-COMP:N', '-SPEC:FORCE'}
pyytaa          ['LANG:FI']
pyyta-          {'-SPEC:T/fin', 'SEM:external', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'LF:ask', 'PHI:NUM:_', 'COMP:P', 'PF:pyyda', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
raukesi         ['LANG:FI']
raukea-         {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'PHI:NUM:_', 'COMP:P', '-SPEC:FORCE', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', 'LF:terminate', 'LANG:FI', '-COMP:N', 'PF:raukea'}
red             ['LANG:EN']
red-            {'0', 'LF:red', 'SPEC:D', '2SPEC', 'PF:red', 'LANG:EN'}
saavuttaa       ['LANG:FI']
saavutta-       {'-SPEC:T/fin', 'ASP:BOUNDED', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'LF:reach', 'PHI:NUM:_', '!COMP:*', 'COMP:P', '!COMP:D', 'COMP:D', '-VAL', '-COMP:v', '-COMP:P', 'ARG', 'SPEC:ADV', 'PF:saavutta-', 'V', 'CLASS:TR', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'-SPEC:T/fin', 'COMP:FORCE', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'SPEC:D', 'PHI:NUM:_', 'COMP:P', '-SPEC:FORCE', 'PF:sano-', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', 'COMP:VA/inf', 'LANG:FI', '-COMP:N', 'LF:say'}
said            ['LANG:EN']
say'            {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:EN', 'PF:say', 'SPEC:P', '!COMP:FORCE', '-COMP:V', 'PHI:DET:_', 'SPEC:D', 'LF:say', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:P', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', '-COMP:N', '-SPEC:FORCE'}
say-            {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:EN', 'PF:say', 'SPEC:P', '!COMP:FORCE', '-COMP:V', 'PHI:DET:_', 'SPEC:D', 'LF:say', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:P', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', '-COMP:N', '-SPEC:FORCE'}
sala            ['LANG:IT']
sala-           {'-SPEC:T/fin', '-COMP:A', '-COMP:V', '-SPEC:C/fin', 'COMP:R', 'LANG:IT', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', 'PF:sala', 'LF:room', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
scoppiati       ['LANG:IT']
scoppia-        {'-SPEC:T/fin', 'ASP', 'PF:scoppia', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'LANG:IT', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:P', '-VAL', '-COMP:v', 'ARG', 'LF:explode', 'SPEC:ADV', 'V', '-COMP:N', '-SPEC:FORCE'}
sen             {'-SPEC:T/fin', '-SPEC:D', 'TAIL:ASP', 'OP', '-ARG', '-COMP:T/fin', 'TAIL:PHI', '-COMP:uR', '!COMP:*', 'TAIL:*POL:NEG', 'PF:sen', 'COMP:N', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:P', '-COMP:D', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:INF', 'LF:the/that', 'adjoinable', 'D', '-SPEC:V', '-SPEC:N', 'LANG:FI'}
se'             {'-SPEC:T/fin', '-SPEC:D', 'OP', '-ARG', '-COMP:T/fin', 'PF:se', '-COMP:uR', '!COMP:*', 'COMP:N', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:P', '-COMP:D', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:INF', 'LF:the/that', 'adjoinable', 'D', '-SPEC:V', '-SPEC:N', 'LANG:FI'}
sentenza        {'-SPEC:T/fin', '-COMP:A', 'LF:sentence', '-COMP:V', '-SPEC:C/fin', 'COMP:R', 'LANG:IT', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-SPEC:INF', 'PF:sentenza', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
Seine           ['LANG:EN']
Seine-          {'-SPEC:T/fin', '-COMP:A', 'LANG:EN', 'SPEC:A', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', 'LF:Seine', '-SPEC:V', '-SPEC:N', 'PF:Seine', 'N', '-COMP:WH'}
sembrano        ['LANG:IT']
sembra-         {'-SPEC:T/fin', 'SPEC:TO/inf', 'LANG:EN', 'SPEC:P', '-ARG', '-COMP:V', 'LF:seem', 'SPEC:D', '!COMP:ARE/inf', 'COMP:P', 'PF:sembra', '-VAL', '-COMP:D', '-ASP', '-COMP:v', 'SPEC:ADV', 'V', '-COMP:N', '-SPEC:FORCE'}
sleeps          ['LANG:EN']
sleep           {'PF:sleep', '-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'CLASS:INTR', 'LANG:EN', 'SPEC:P', 'PHI:DET:_', 'LF:sleep', '-COMP:V', 'SPEC:D', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:P', '-VAL', '-COMP:v', '-COMP:D', 'ARG', 'SPEC:ADV', 'V', '-COMP:N', '-SPEC:FORCE'}
sleep-          {'PF:sleep', '-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'CLASS:INTR', 'LANG:EN', 'SPEC:P', 'PHI:DET:_', 'LF:sleep', '-COMP:V', 'SPEC:D', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:P', '-VAL', '-COMP:v', '-COMP:D', 'ARG', 'SPEC:ADV', 'V', '-COMP:N', '-SPEC:FORCE'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-SPEC:T/fin', '-COMP:A', 'PF:sopimus', '-COMP:V', '-SPEC:C/fin', 'COMP:R', 'LF:agreement', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', '!COMP:A/inf', 'COMP:R/D', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'LANG:FI', 'SPEC:A', 'N', '-COMP:WH'}
spinge          ['LANG:IT']
spinge-         {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'LANG:IT', 'PHI:NUM:_', 'PHI:GEN:_', '-VAL', '-COMP:v', '-COMP:P', 'ARG', 'SPEC:ADV', 'PF:spinge', 'LF:push', 'V', '!COMP:D', '-COMP:N', '-SPEC:FORCE'}
ssa             {'-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'adjoinable', '-SPEC:C/fin', '-COMP:uWH', '-COMP:T/fin', 'PHI:NUM:_', 'LF:in', '-SPEC:iWH', '!COMP:*', '-COMP:ADV', 'TAIL:V', 'PF:ssa', 'COMP:n/MA', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:ADV', '-SPEC:P', 'COMP:D', '-VAL', 'P', 'SPEC:*', 'ARG', '-SPEC:v', '-SPEC:INF', '-SPEC:V', '-SPEC:iR', '-SPEC:N', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
stanno          ['LANG:IT']
sta-            {'COMP:PRG', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:EN', 'SPEC:P', 'LF:stay', '-COMP:V', 'PHI:DET:_', 'PF:sta', 'SPEC:D', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:P', 'SEM:internal', '-VAL', '-COMP:v', '-ASP', 'ARG', 'SPEC:ADV', 'V', '-COMP:N', '-SPEC:FORCE'}
sti             {'-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:Neg/fin', 'ADV', 'PF:sti', 'SPEC:*', '-ARG', '-SPEC:N', 'LF:by', 'adjoinable', '!COMP:*', 'LANG:FI', 'TAIL:T'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-SPEC:T/fin', '-COMP:A', 'PF:sukka-', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', 'LF:socks', '-SPEC:N', 'LANG:FI', 'SPEC:A', 'N', '-COMP:WH'}
talo            {'-SPEC:T/fin', '-COMP:A', 'SPEC:A', 'PF:talo', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'LANG:FI', 'LF:house', 'N', '-COMP:WH'}
tama            ['LANG:EN']
tama-           {'-SPEC:T/fin', '-COMP:A', 'PF:tama', 'SPEC:A', '-COMP:V', '-SPEC:C/fin', 'PHI', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'LANG:FI', 'LF:this', 'N', '-COMP:WH'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'FIN', 'PHI:NUM:_', 'COMP:P', 'MODAL', 'LF:must', 'SPEC:*', '!COMP:A/inf', '-VAL', '-ASP', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', 'LANG:FI', 'PF:taytyy', '-COMP:N', '-SPEC:FORCE'}
teki            ['LANG:FI']
teke-           {'-SPEC:T/fin', 'ASP:BOUNDED', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'PHI:NUM:_', '!COMP:*', 'COMP:P', 'PF:teke', 'LF:make', '!COMP:D', 'COMP:D', '-VAL', '-COMP:v', '-COMP:P', 'ARG', 'SPEC:ADV', '-COMP:A/inf', 'V', 'CLASS:TR', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
that            {'COMP:T/fin', 'LANG:EN', 'COMP:C/fin', '-VAL', 'PF:that', '!PROBE:T/fin', 'FORCE', '-SPEC:*', '-ARG', 'FIN', 'LF:that', '!COMP:*'}
the             {'-SPEC:T/fin', '-SPEC:D', 'LANG:EN', 'OP', '-ARG', 'adjoinable', '-COMP:T/fin', '-COMP:uR', '!COMP:*', 'COMP:N', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:P', 'LF:the', '-COMP:D', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:INF', 'PF:the', 'PHI:DEF:DEF', 'D', '-SPEC:V', '-SPEC:N'}
to              {'-SPEC:T/fin', 'PF:to', 'PHI:PER:_', 'LANG:EN', 'PHI:DET:_', '-float', '-SPEC:C/fin', '-COMP:uWH', 'adjoinable', '-COMP:T/fin', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:iWH', '!COMP:*', '+SEM:directional', '-COMP:ADV', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:ADV', 'TAIL:V,+SEM:directional', '-SPEC:P', '-VAL', 'P', 'COMP:D', '-SPEC:*', 'LF:to', 'ARG', '-SPEC:v', '-SPEC:INF', '-SPEC:V', '-SPEC:iR', '-SPEC:N', '-COMP:N', '-SPEC:FORCE'}
to_inf          {'?ARG', '-SPEC:T/fin', '-COMP:FORCE', 'COMP:V', 'LANG:EN', 'LF:TO/inf', 'COMP:v', '-COMP:T/fin', '!PROBE:V', '!COMP:*', 'PF:TO/inf', '-VAL', '-SPEC:v', '-SPEC:V', 'adjoinable', '-COMP:C/fin', 'INF', 'TO/inf'}
towards         {'-SPEC:T/fin', 'LF:towards', 'PHI:PER:_', 'LANG:EN', 'PHI:DET:_', '-float', '-SPEC:C/fin', '-COMP:uWH', 'adjoinable', '-COMP:T/fin', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:iWH', '!COMP:*', '-COMP:ADV', 'TAIL:V', 'PF:towards', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:ADV', '-SPEC:P', 'COMP:D', '-VAL', 'P', '-SPEC:*', 'ARG', '-SPEC:v', '-SPEC:INF', '-SPEC:V', '-SPEC:iR', '-SPEC:N', '-COMP:N', '-SPEC:FORCE'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'-SPEC:T/fin', 'PF:tonaise', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'PHI:NUM:_', '!COMP:*', 'COMP:P', 'COMP:D', '-VAL', '-COMP:v', '-COMP:P', 'ARG', 'SPEC:ADV', 'LF:nudge', 'V', 'CLASS:TR', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
tta             {'-SPEC:T/fin', 'LF:without', 'PF:tta', 'ADV', 'PHI:PER:_', 'PHI:DET:_', 'adjoinable', '-SPEC:C/fin', '-COMP:uWH', '-COMP:T/fin', 'PHI:NUM:_', '-SPEC:iWH', '!COMP:*', '-COMP:ADV', 'COMP:n/MA', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:ADV', '-SPEC:P', 'COMP:D', '-VAL', 'P', 'SPEC:*', 'ARG', '-SPEC:v', '-SPEC:INF', '-SPEC:V', '-SPEC:iR', '-SPEC:N', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
tries           ['LANG:EN']
try-            {'-SPEC:T/fin', 'ASP', '!COMP:-ARG', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:EN', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'SPEC:D', 'PHI:NUM:_', '!COMP:TO/inf', 'PHI:GEN:_', 'COMP:P', 'LF:try', 'SEM:internal', '-VAL', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', 'PF:try', '-COMP:N', '-SPEC:FORCE'}
verifiche       {'-SPEC:T/fin', '-COMP:A', 'LF:verification', '-COMP:V', '-SPEC:C/fin', 'PF:verifiche', 'COMP:R', 'LANG:IT', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', '!COMP:P', 'PF:virtaa', 'SPEC:D', 'PHI:NUM:_', 'COMP:P', 'LF:flow', '-VAL', '-COMP:D', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', 'LANG:FI', '-COMP:N', '-SPEC:FORCE'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:EN', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'PHI:NUM:_', 'PF:volu', 'PHI:GEN:_', '!COMP:*', 'COMP:P', 'SEM:internal', '-VAL', '-SPEC:*', '-COMP:v', 'ARG', 'SPEC:ADV', '-COMP:N', 'V', 'LF:want', '-SPEC:FORCE'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'-SPEC:T/fin', 'ASP:BOUNDED', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:EN', 'SPEC:P', 'LF:win', '-COMP:V', 'PHI:DET:_', 'PHI:NUM:_', 'PHI:GEN:_', '!COMP:*', 'COMP:P', 'PF:voitta', 'COMP:D', '-VAL', '-COMP:v', '-COMP:P', 'ARG', 'SEM:achievement', 'SPEC:ADV', 'V', 'CLASS:TR', '-COMP:N', '-SPEC:FORCE'}
wants           ['LANG:EN']
want-           {'-SPEC:T/fin', 'ASP', 'PHI:PER:_', 'LANG:EN', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'PHI:NUM:_', 'PHI:GEN:_', '!COMP:*', 'COMP:P', 'PF:want', '-SPEC:FORCE', 'COMP:D', '-VAL', 'COMP:TO/inf', '-COMP:v', '-COMP:P', 'ARG', 'SPEC:ADV', '-COMP:N', 'V', '-SPEC:TO/inf', 'LF:want', 'CLASS:TR'}
what            ['LANG:EN']
what-           {'-SPEC:T/fin', '-COMP:A', 'LANG:EN', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'PHI_N', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'PF:what', 'COMP:R/D', '-COMP:D', '-COMP:v', '-COMP:*', 'LF:what', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
which           {'-SPEC:T/fin', '-SPEC:D', 'PF:which', 'LANG:EN', 'OP', '-ARG', '-COMP:T/fin', '-COMP:uR', '!COMP:*', 'LF:which', 'COMP:N', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:P', '-COMP:D', 'OP:WH', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:V', 'adjoinable', 'D', '-SPEC:N'}
who             ['LANG:EN']
who-            {'-SPEC:T/fin', '-COMP:A', 'LF:who', 'LANG:EN', '-COMP:V', '-SPEC:C/fin', 'PF:who', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'PHI_N', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-COMP:*', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
whether         {'PF:whether', 'COMP:T/fin', 'LANG:EN', 'COMP:C/fin', 'OP', 'FORCE', '-ARG', 'FIN', '!COMP:*', 'OP:Q', '-VAL', '!PROBE:T/fin', '-SPEC:*', 'OP:WH', 'Q', 'LF:whether'}
yrittaa         ['LANG:FI']
yritta-         {'-SPEC:T/fin', 'PF:yritta', '!COMP:-ARG', 'ASP', 'SPEC:TO/inf', 'LANG:EN', 'PHI:PER:_', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'SPEC:D', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:P', 'LF:try', 'SEM:internal', '-VAL', '!COMP:A/inf', '-COMP:v', 'ARG', 'SPEC:ADV', 'V', '-COMP:N', '-SPEC:FORCE'}
mina            ['LANG:EN']
mina-           {'-SPEC:T/fin', '-COMP:A', 'LF:I', '-COMP:V', '-SPEC:C/fin', 'PF:mina', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'PHI_N', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-COMP:*', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'LANG:FI', 'SPEC:A', 'N', '-COMP:WH'}
sina            ['LANG:EN']
sina-           {'-SPEC:T/fin', '-COMP:A', 'LF:you', 'PF:sina', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'PHI_N', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-COMP:*', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'LANG:FI', 'SPEC:A', 'N', '-COMP:WH'}
han             ['LANG:EN']
han-            {'-SPEC:T/fin', '-COMP:A', 'PF:han', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'PHI_N', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-COMP:*', '-SPEC:INF', 'LF:s/he', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'LANG:FI', 'SPEC:A', 'N', '-COMP:WH'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-SPEC:T/fin', '-COMP:A', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'PHI_N', 'PF:me', 'LF:we', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-COMP:*', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'LANG:FI', 'SPEC:A', 'N', '-COMP:WH'}
te              ['LANG:EN']
te-             {'-SPEC:T/fin', '-COMP:A', 'LF:you', 'SPEC:A', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'PHI_N', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-COMP:*', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'LANG:FI', 'PF:te', 'N', '-COMP:WH'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he-             {'-SPEC:T/fin', '-COMP:A', 'PF:he', 'LF:they', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'PHI_N', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-COMP:*', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'LANG:FI', 'SPEC:A', 'N', '-COMP:WH'}
he-             {'-SPEC:T/fin', '-COMP:A', 'LF:he', 'PF:he', 'LANG:EN', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'PHI_N', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-COMP:*', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
se              ['LANG:FI']
se-             {'-SPEC:T/fin', '-SPEC:D', 'OP', '-ARG', '-COMP:T/fin', 'PF:se', '-COMP:uR', '!COMP:*', 'COMP:N', '-SPEC:C', 'LF:it/that', '-SPEC:Neg/fin', '-SPEC:P', '-COMP:D', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:V', 'adjoinable', 'D', '-SPEC:N', 'LANG:FI'}
I               ['LANG:EN']
I-              {'-SPEC:T/fin', '-COMP:A', 'LF:I', 'LANG:EN', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'PHI_N', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', 'PF:I', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-COMP:*', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
you             ['LANG:EN']
you-            {'-SPEC:T/fin', '-COMP:A', 'LF:you', 'LANG:EN', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'PHI_N', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', 'PF:you', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-COMP:*', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
he              ['LANG:EN']
she             ['LANG:EN']
she-            {'-SPEC:T/fin', 'PF:she', '-COMP:A', 'LANG:EN', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'PHI_N', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', 'LF:she', '-COMP:*', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
we              ['LANG:EN']
we-             {'-SPEC:T/fin', '-COMP:A', 'LANG:EN', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'PHI_N', 'COMP:uR', 'LF:we', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', 'PF:we', '-COMP:D', '-COMP:v', '-COMP:*', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
you_pl          ['LANG:EN']
you_pl-         {'-SPEC:T/fin', '-COMP:A', 'PF:you_pl', 'LANG:EN', '-SPEC:N', '-COMP:V', '-SPEC:C/fin', 'PHI', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', 'LF:you_pl', 'SPEC:A', 'N', '-COMP:WH'}
they            ['LANG:EN']
they-           {'-SPEC:T/fin', '-COMP:A', 'LANG:EN', 'LF:they', '-COMP:V', '-SPEC:C/fin', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'PHI_N', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', 'PF:they', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-COMP:*', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
it              ['LANG:EN']
it-             {'-SPEC:T/fin', 'PF:it', '-SPEC:D', 'LANG:EN', 'OP', '-ARG', '-COMP:T/fin', '-COMP:uR', '!COMP:*', 'COMP:N', '-SPEC:C', 'LF:it/that', '-SPEC:Neg/fin', '-SPEC:P', '-COMP:D', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:V', 'adjoinable', 'D', '-SPEC:N'}
io              ['LANG:EN']
io-             {'-SPEC:T/fin', '-COMP:A', 'LF:I', '-COMP:V', '-SPEC:C/fin', 'COMP:R', 'LANG:IT', '-COMP:T/fin', 'PHI_N', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', 'PF:io', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-COMP:*', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
tu              ['LANG:EN']
tu-             {'-SPEC:T/fin', '-COMP:A', 'LF:you', '-COMP:V', '-SPEC:C/fin', 'COMP:R', 'LANG:IT', '-COMP:T/fin', 'PHI_N', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', 'PF:tu', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-COMP:*', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
lui             ['LANG:EN']
lui-            {'-SPEC:T/fin', '-COMP:A', 'LF:he', '-COMP:V', '-SPEC:C/fin', 'COMP:R', 'LANG:IT', '-COMP:T/fin', 'PHI_N', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', 'PF:lui', '-COMP:D', '-COMP:v', '-COMP:*', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
lei             ['LANG:EN']
lei-            {'-SPEC:T/fin', '-COMP:A', '-COMP:V', '-SPEC:C/fin', 'COMP:R', 'LANG:IT', '-COMP:T/fin', 'PHI_N', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', 'PF:lei', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', 'LF:she', '-COMP:*', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
noi             ['LANG:EN']
noi-            {'-SPEC:T/fin', '-COMP:A', '-COMP:V', '-SPEC:C/fin', 'COMP:R', 'LANG:IT', '-COMP:T/fin', 'PHI_N', '-COMP:C/fin', 'COMP:uR', 'LF:we', 'COMP:P', '-COMP:AUX', '-COMP:ADV', 'PF:noi', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-COMP:*', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
voi             ['LANG:EN']
voi-            {'-SPEC:T/fin', '-COMP:A', '-SPEC:N', '-COMP:V', '-SPEC:C/fin', 'COMP:R', 'LANG:IT', '-COMP:T/fin', 'PHI_N', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', 'PF:voi', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-COMP:*', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', 'LF:you_pl', 'SPEC:A', 'N', '-COMP:WH'}
loro            ['LANG:EN']
loro-           {'-SPEC:T/fin', '-COMP:A', 'PF:loro', 'LF:they', '-COMP:V', '-SPEC:C/fin', 'COMP:R', 'LANG:IT', '-COMP:T/fin', 'PHI_N', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-COMP:*', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
mi              ['LANG:EN']
mi-             {'-SPEC:C/fin', 'COMP:R', 'PHI_N', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:ADV', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', 'SPEC:A', 'N', '-COMP:N', '-SPEC:T/fin', '-COMP:A', '-COMP:V', '-COMP:T/fin', 'LANG:IT', 'CL', '-SPEC:R', '-SPEC:FORCE', 'LF:me', '-SPEC:P', 'PF:mi(cl)', 'COMP:R/D', '-COMP:*', '-SPEC:N', '-COMP:C/fin', '-COMP:WH'}
la              ['LANG:EN']
la-             {'-SPEC:C/fin', 'COMP:R', '-COMP:C/fin', 'PHI_N', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:ADV', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', 'SPEC:A', 'N', '-COMP:N', '-SPEC:T/fin', '-COMP:A', '-COMP:V', '-COMP:T/fin', 'LANG:IT', 'CL', '-SPEC:R', '-SPEC:FORCE', 'PF:la(cl)', '-SPEC:P', 'COMP:R/D', '-COMP:*', '-SPEC:N', 'LF:her', '-COMP:WH'}
lo              ['LANG:EN']
lo-             {'-SPEC:C/fin', 'COMP:R', '-COMP:C/fin', 'PHI_N', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:ADV', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', 'SPEC:A', 'N', '-COMP:N', '-SPEC:T/fin', '-COMP:A', '-COMP:V', '-COMP:T/fin', 'LANG:IT', 'CL', '-SPEC:R', '-SPEC:FORCE', '-SPEC:P', 'COMP:R/D', '-COMP:*', 'LF:him', '-SPEC:N', 'PF:lo(cl)', '-COMP:WH'}
si              ['LANG:EN']
si-             {'PF:si(cl)', '-SPEC:C/fin', 'COMP:R', 'PHI_N', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:ADV', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', 'SPEC:A', 'N', 'CAL:CL', '-COMP:N', '-SPEC:T/fin', '-COMP:A', '-COMP:V', '-COMP:T/fin', 'LANG:IT', '-SPEC:R', '-SPEC:FORCE', '-SPEC:P', 'COMP:R/D', 'LF:3sg', '-COMP:*', '-SPEC:N', '-COMP:C/fin', '-COMP:WH'}
gli             ['LANG:EN']
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-SPEC:T/fin', '-COMP:A', '-COMP:V', 'PF:ci', '-SPEC:C/fin', 'COMP:R', 'LANG:IT', '-COMP:T/fin', 'PHI_N', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-COMP:*', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH', 'LF:there'}
[-n]            {'PHI:NUM:SG', 'PHI', 'LANG:FI', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF', 'PHI:PER:1'}
[-t]            {'PHI:NUM:SG', 'PHI', 'LANG:FI', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF', 'PHI:PER:2'}
[-V]            {'PHI:NUM:SG', 'PHI', 'LANG:FI', 'PHI:PER:3', 'inflectional'}
[-mme]          {'PHI', 'LANG:FI', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:1'}
[-mme]          {'LANG:FI', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:1'}
[-tte]          {'PHI', 'LANG:FI', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:2'}
[-vat]          {'PHI', 'LANG:FI', 'PHI:PER:3', 'inflectional', 'PHI:NUM:PL'}
[-ni]           {'PHI:NUM:SG', 'PHI', 'LANG:FI', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF', 'PHI:PER:1'}
[-si]           {'PHI:NUM:SG', 'PHI', 'LANG:FI', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF', 'PHI:PER:2'}
[-nsa]          {'PHI', 'inflectional', 'PHI:PER:3', 'LANG:FI'}
[-an]           {'PHI', 'inflectional', 'PHI:PER:3', 'LANG:FI'}
[-nne]          {'LANG:FI', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:2'}
[-s]            {'PHI:GEN:M', 'PHI:NUM:SG', 'PHI', 'LANG:EN', 'inflectional', 'PHI:GEN:F', 'PHI:PER:3'}
[-0]            {'LANG:EN', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI', 'PHI:GEN:N', 'PHI:PER:3', 'PHI:PER:1', 'PHI:PER:2'}
[-o]            {'PHI:NUM:SG', 'PHI', 'LANG:IT', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF', 'PHI:PER:1'}
[-i]            {'PHI:NUM:SG', 'PHI', 'LANG:IT', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF', 'PHI:PER:2'}
[-a]            {'PHI:NUM:SG', 'PHI', 'LANG:IT', 'PHI:PER:3', 'inflectional', 'PHI:DET:DEF'}
[-e]            {'PHI:NUM:SG', 'PHI', 'LANG:IT', 'PHI:PER:3', 'inflectional', 'PHI:DET:DEF'}
[-iamo]         {'PHI', 'LANG:IT', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:1'}
[-te]           {'PHI', 'LANG:IT', 'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:2'}
[-no]           {'PHI', 'LANG:IT', 'PHI:PER:3', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:PL'}
[-nom]          {'TAIL:FIN,ARG,VAL', 'NOM', 'adjoinable', 'LANG:EN', 'inflectional'}
[-par]          {'TAIL:ARG,-VAL', 'PAR', 'LANG:FI', 'adjoinable', 'inflectional'}
[-gen]          {'TAIL:INF,ARG', 'LANG:EN', 'inflectional', 'GEN'}
gen             {'TAIL:INF,ARG', 'LANG:EN', 'inflectional', 'GEN'}
[-n_acc]        {'n-ACC', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'adjoinable', 'TAIL:PHI', 'inflectional', 'TAIL:*POL:NEG'}
[-t_acc]        {'t-ACC', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'adjoinable', 'inflectional', 'TAIL:*POL:NEG'}
[-0_acc]        {'TAIL:ARG,ASP:BOUNDED', '0_ACC', 'TAIL:*PHI', 'adjoinable', 'LANG:FI', 'inflectional', 'TAIL:*POL:NEG'}
asp             {'ASP:BOUNDED', 'LANG:EN', 'inflectional'}
a'              {'LANG:X', 'a', 'LF:A', 'PF:a'}
b'              {'LANG:X', 'b', 'LF:B', 'PF:b'}
b''             {'LF:B', '-COMP:c', 'PF:b', 'LANG:EN', 'b'}
c''             {'PF:c', 'LF:C', 'LANG:EN', 'SPEC:a', 'c'}
c'              {'LANG:X', 'PF:c', 'LF:C', 'c'}
d'              {'d', 'LANG:', 'PF:d', 'LF:D'}
a''             ['LANG:EN']
x'              {'LANG:X', 'PF:x', 'LF:X', 'x'}
y'              {'LANG:X', 'y', 'PF:y', 'LF:Y'}
z'              {'LANG:X', 'z', 'PF:x', 'LF:Z'}
John'           {'LF:John', 'LANG:X', "N'", 'PF:John'}
admires'        {'LANG:X', 'LF:admires', 'PF:admires', "V'"}
admires''       {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:EN', 'SPEC:P', 'PHI:DET:_', '-COMP:V', 'PF:admires', 'SPEC:D', 'PHI:NUM:_', 'PHI:GEN:_', 'COMP:P', '-VAL', '-COMP:v', 'ARG', 'LF:admires', 'SPEC:ADV', 'V', '-COMP:N', '-SPEC:FORCE'}
Mary'           {'LF:mary', 'LANG:X', 'PF:Mary', "N'"}
T/fin           {'-SPEC:T/fin', 'T/fin', '-COMP:INF', 'COMP:V', '!SPEC:*', 'SPEC:TO/inf', 'PHI:PER:_', 'LANG:EN', 'LF:T', 'T', 'PHI:DET:_', '-SPEC:C/fin', 'FIN', 'COMP:v', 'SPEC:INF', '-COMP:T/fin', 'SPEC:D', 'PHI:NUM:_', '!PROBE:V', '!COMP:*', 'VAL', 'COMP:D', 'SPEC:*', 'ARG', '-SPEC:v', '-SPEC:V', 'COMP:T/prt', '-SPEC:N', 'PF:T', 'PHI:GEN:_', '-SPEC:FORCE'}
v               {'LF:v', 'v', 'COMP:V', 'ASP', 'PHI:PER:_', 'LANG:EN', '-VAL', 'PHI:DET:_', 'ARG', 'SPEC:D', 'PHI:NUM:_', 'PF:v', '!PROBE:V', '-SPEC:N', 'PHI:GEN:_', '!COMP:*'}
C/fin           {'-SPEC:T/fin', 'COMP:T/fin', 'C/fin', 'LANG:EN', 'COMP:Neg/fin', '-ARG', '-SPEC:C/fin', 'FIN', 'C', '!COMP:*', 'PF:C', 'LF:C/fin', 'VAL', '!PROBE:FIN', '-COMP:T/prt', 'SPEC:*', '-SPEC:N', '-COMP:C/fin'}
T               {'-SPEC:T/fin', '!SPEC:*', 'COMP:V', 'PHI:PER:_', 'LF:T', 'T', 'LANG:EN', 'PHI:DET:_', 'FIN', 'COMP:v', 'SPEC:D', 'PHI:NUM:_', '-COMP:NEG', '!PROBE:V', '!COMP:*', 'VAL', 'COMP:D', 'SPEC:*', 'ARG', 'COMP:T/prt', '-SPEC:V', '-SPEC:N', 'PF:T', 'PHI:GEN:_', '-SPEC:FORCE'}
T/prt           {'-SPEC:T/fin', '!SPEC:*', 'COMP:V', 'PHI:PER:_', 'LANG:EN', 'T', 'LF:T/prt', 'PHI:DET:_', 'FIN', 'COMP:v', 'T/prt', 'SPEC:D', 'PHI:NUM:_', '-COMP:NEG', '!PROBE:V', '!COMP:*', 'VAL', 'COMP:D', 'SPEC:*', 'ARG', 'PF:T/prt', 'COMP:T/prt', '-SPEC:V', '-SPEC:N', 'PHI:GEN:_', '-SPEC:FORCE'}
a0              {'-SPEC:A', 'LF:A', 'TAIL:D', '-SPEC:D', 'LANG:EN', 'PF:A', '-adjoinable', 'adjoinable', 'A', 'COMP:0'}
n               {'-SPEC:C/fin', 'COMP:v', 'COMP:R', 'PHI:NUM:_', 'COMP:uR', '!COMP:*', 'COMP:P', '-COMP:AUX', '-COMP:ADV', 'LF:n', '-SPEC:ADV', 'SPEC:*', '-COMP:D', '-COMP:v', 'ARG', '-SPEC:INF', '-SPEC:uWH', '-SPEC:V', 'SPEC:A', 'N', '-COMP:N', '-SPEC:T/fin', '-COMP:A', '!SPEC:*', 'COMP:V', 'PHI:PER:_', 'LANG:EN', 'INF', '-COMP:V', 'PHI:DET:_', '-COMP:T/fin', '!SPEC:D', 'VAL', '-SPEC:R', '-SPEC:P', 'PF:n', 'n', 'COMP:R/D', '-COMP:WH', '-SPEC:N', '-COMP:C/fin', 'PHI:GEN:_', '-SPEC:FORCE', 'COMP:0'}
impass          {'v', 'COMP:V', 'ASP', 'PHI:PER:_', 'LANG:EN', '-VAL', 'PHI:DET:_', 'ARG', 'SPEC:D', 'PHI:NUM:_', 'PF:impass', '!PROBE:V', '-SPEC:N', 'PHI:GEN:_', 'LF:impass', '!COMP:*'}
cau             {'v', 'COMP:V', 'ASP', 'PHI:PER:_', 'LANG:EN', '-VAL', 'PF:Cau', 'PHI:DET:_', 'ARG', 'SPEC:D', 'PHI:NUM:_', 'LF:v/Cause', '!PROBE:V', '-SPEC:N', 'PHI:GEN:_', '!COMP:*'}
INF             {'-SPEC:T/fin', '-COMP:FORCE', 'COMP:V', 'LANG:EN', '!PROBE:V', 'COMP:v', 'PF:INF', '-COMP:T/fin', '-SPEC:V', 'LF:INF', '!COMP:*', '-COMP:C/fin', 'INF'}
prtcpl          {'-SPEC:T/fin', '-COMP:FORCE', '!SPEC:*', 'COMP:V', 'PHI:PER:_', 'LANG:EN', 'T', 'LF:T/prt', 'PHI:DET:_', 'FIN', 'COMP:v', 'T/prt', 'SPEC:D', '-COMP:T/fin', 'PHI:NUM:_', '-COMP:NEG', '!COMP:*', '!PROBE:V', 'VAL', '-SPEC:FORCE', 'COMP:D', 'SPEC:*', 'ARG', 'PF:T/prt', '-SPEC:V', 'COMP:T/prt', '-SPEC:N', '-COMP:C/fin', 'PHI:GEN:_', 'INF'}
TO/inf          {'?ARG', '-SPEC:T/fin', '-COMP:FORCE', 'COMP:V', 'LANG:EN', 'LF:TO/inf', 'COMP:v', '!COMP:V', '-COMP:T/fin', '!PROBE:V', '!COMP:*', 'PF:TO/inf', '-VAL', '-SPEC:v', '-SPEC:V', 'adjoinable', '-COMP:C/fin', 'INF', 'TO/inf'}
A/inf           {'?ARG', '-SPEC:T/fin', '-COMP:FORCE', 'COMP:V', 'LANG:EN', '?VAL', 'COMP:v', '-COMP:T/fin', '!PROBE:V', '!COMP:*', 'PF:A/inf', 'LF:A/inf', '-SPEC:Neg/fin', 'SPEC:*', 'A/inf', '-SPEC:V', '-COMP:C/fin', 'INF'}
ARE/inf         {'?ARG', '-SPEC:T/fin', '-COMP:FORCE', 'COMP:V', 'ARE/inf', 'LANG:EN', 'COMP:v', '-COMP:T/fin', '!PROBE:V', '!COMP:*', 'PF:are', 'VAL', 'LF:ARE/inf', 'SPEC:*', '-adjoinable', '-SPEC:V', '-COMP:C/fin', 'INF'}
ESSA/inf        {'?ARG', '-SPEC:T/fin', '-COMP:FORCE', 'COMP:V', 'ESSA/inf', 'LF:while', 'LANG:EN', 'ADV', '?VAL', 'COMP:v', '-COMP:T/fin', '!PROBE:V', '!COMP:*', 'TAIL:T', '-SPEC:FORCE', '-SPEC:Neg/fin', 'SPEC:*', 'PF:essa', '-SPEC:V', 'adjoinable', '-SPEC:N', '-COMP:C/fin', 'INF'}
TUA/inf         {'-SPEC:T/fin', '-COMP:FORCE', '!SPEC:*', 'COMP:V', 'PHI:PER:_', 'LANG:EN', 'ADV', 'PHI:DET:_', 'CAL', 'TUA/inf', 'COMP:v', '-COMP:T/fin', 'PHI:NUM:_', '!PROBE:V', '!COMP:*', 'TAIL:T', '-SPEC:FORCE', '-SPEC:Neg/fin', 'ARG', 'PF:tua', 'LF:after', '-SPEC:V', 'adjoinable', '-SPEC:N', '-COMP:C/fin', 'PHI:GEN:_', 'INF'}
VA/inf          {'-SPEC:T/fin', '-COMP:FORCE', '!SPEC:*', 'COMP:V', 'PHI:PER:_', 'LANG:EN', 'PHI:DET:_', 'COMP:v', 'LF:VA', '-COMP:T/fin', 'PHI:NUM:_', '!PROBE:V', 'VA/inf', '!COMP:*', 'VAL', 'SPEC:*', 'ARG', 'PF:vAn', '-SPEC:V', '-SPEC:N', '-COMP:C/fin', 'PHI:GEN:_', 'INF'}
MA/ssa          {'-SPEC:T/fin', 'COMP:V', 'PHI:PER:_', 'LANG:EN', 'ADV', 'PHI:DET:_', 'COMP:v', 'PF:massa', 'LF:in_doing', 'PHI:NUM:_', 'TAIL:V', '-SPEC:Neg/fin', 'MA/inf', '-VAL', '-SPEC:*', 'ARG', 'adjoinable', '-SPEC:N', 'PHI:GEN:_', '-SPEC:FORCE'}
MA/tta          {'-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:Neg/fin', 'MA/inf', 'PHI:PER:_', 'LANG:EN', '-VAL', 'ADV', 'PF:matta', 'PHI:DET:_', 'ARG', 'LF:without_doing', 'PHI:NUM:_', 'adjoinable', '-SPEC:N', 'PHI:GEN:_', 'TAIL:T'}
MA/lla          {'COMP:v', 'PHI:NUM:_', 'LF:by_doing', '-VAL', 'ARG', 'PF:malla', '-SPEC:T/fin', 'COMP:V', 'PHI:PER:_', 'LANG:EN', 'ADV', 'PHI:DET:_', 'TAIL:T', '-SPEC:Neg/fin', 'MA/inf', 'adjoinable', '-SPEC:N', 'PHI:GEN:_', '-SPEC:FORCE'}
MA/inf          {'COMP:v', 'PHI:NUM:_', 'PF:maan', '-VAL', 'ARG', '-SPEC:T/fin', 'COMP:V', 'PHI:PER:_', 'LANG:EN', 'ADV', 'PHI:DET:_', 'TAIL:V', '-SPEC:Neg/fin', 'MA/inf', 'adjoinable', '-SPEC:N', 'LF:to_do', 'PHI:GEN:_', '-SPEC:FORCE'}
E/inf           {'-SPEC:T/fin', '-SPEC:Neg/fin', '-VAL', 'ADV', 'SPEC:*', '-ARG', 'LF:by', 'adjoinable', '-SPEC:N', 'LANG:FI', 'PF:en', '-SPEC:FORCE'}
BE-             {'-SPEC:T/fin', 'ASP', 'SPEC:TO/inf', 'LANG:EN', 'SPEC:P', 'COPULA', '-ARG', '-COMP:V', 'SPEC:D', '-COMP:T/fin', '!COMP:*', 'COMP:P', 'LF:BE', 'PF:BE', '-VAL', '-COMP:v', 'SPEC:ADV', 'COMP:T/prt', 'V', '-COMP:N', '-SPEC:FORCE'}
D               {'-SPEC:T/fin', '-SPEC:D', 'LANG:EN', 'OP', 'PF:D', '-ARG', '-COMP:T/fin', '-COMP:uR', '!COMP:*', 'LF:D', 'COMP:N', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:P', '-COMP:D', '!PROBE:N', '-SPEC:MA/lla', '-SPEC:INF', '-SPEC:V', 'adjoinable', 'D', '-SPEC:N'}
P               {'-SPEC:T/fin', 'PF:P', 'PHI:PER:_', 'LANG:EN', 'PHI:DET:_', '-float', '-SPEC:C/fin', '-COMP:uWH', 'adjoinable', '-COMP:T/fin', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:iWH', '!COMP:*', '-COMP:ADV', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:ADV', '-SPEC:P', 'COMP:D', '-VAL', 'P', '-SPEC:*', 'LF:P', 'ARG', '-SPEC:v', '-SPEC:INF', '-SPEC:V', '-SPEC:iR', '-SPEC:N', '-COMP:N', '-SPEC:FORCE'}
pro             ['LANG:EN']
pro-            {'-SPEC:T/fin', '-COMP:A', 'PF:(pro)', 'LANG:EN', '-COMP:V', '-SPEC:C/fin', 'PHI', 'COMP:R', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:AUX', '-COMP:ADV', '-SPEC:R', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:N', '-SPEC:P', 'COMP:R/D', '-COMP:D', '-COMP:v', '-SPEC:INF', '-SPEC:uWH', 'LF:pro', '-SPEC:V', '-SPEC:N', 'SPEC:A', 'N', '-COMP:WH'}
cl              {'LEFT:D,CL', 'CL', 'RIGHT:PRG', 'LEFT:T/fin', 'LANG:EN', 'RIGHT:ARE/inf', 'inflectional'}
inc             {'LANG:EN', 'inflectional', 'INCORPORATED'}
sg              {'PHI:NUM:SG', 'inflectional', 'LANG:EN'}
pl              {'LANG:EN', 'inflectional', 'PHI:NUM:PL'}
1p              {'LANG:EN', 'inflectional', 'PHI:PER:1'}
2p              {'LANG:EN', 'inflectional', 'PHI:PER:2'}
3p              {'PHI:PER:3', 'inflectional', 'LANG:EN'}
def             {'LANG:EN', 'inflectional', 'PHI:DET:DEF'}
indef           {'LANG:EN', 'inflectional', 'PHI:DET:INDEF'}
hum             {'LANG:EN', 'inflectional', 'PHI:HUM:HUM'}
nonhum          {'PHI:HUM:NONHUM', 'LANG:EN', 'inflectional'}
m               {'PHI:GEN:M', 'LANG:EN', 'inflectional'}
f               {'LANG:EN', 'inflectional', 'PHI:GEN:F'}
nom             {'TAIL:FIN,!COMP:*,VAL', 'inflectional', 'LANG:EN'}
acc             {'LANG:EN', 'inflectional', 'TAIL:v'}
dat             {'LANG:EN', 'inflectional', 'TAIL:!COMP:*,v'}
uC/op           {'LANG:EN', 'inflectional', 'uC/op'}
wh              {'LANG:EN', 'OP:_', 'inflectional', 'OP:WH'}
wh_             {'inflectional', 'FORCE:OP:WH', 'LANG:EN', 'OP:_', 'OP'}
top             {'OP:TOP', 'inflectional', 'LANG:EN'}
foc             {'OP:FOC', 'inflectional', 'LANG:EN'}
C/op            {'LANG:EN', 'inflectional', 'OP:C/OP'}
rel             {'OP:REL', 'adjoinable', 'LANG:EN', 'inflectional', '-COMP:C/fin'}
Q               {'OP:Q', 'LANG:EN', 'OP', 'inflectional', 'OP:WH'}
