ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'-COMP:uWH', '-SPEC:N', 'LF:to', '-SPEC:FORCE', '!COMP:*', '-SPEC:V', '-COMP:N', 'COMP:D', '-SPEC:P', '-COMP:ADV', '-SPEC:*', '-SPEC:Neg/fin', 'LANG:IT', '-SPEC:INF', '-COMP:T/fin', 'P', '-SPEC:T/fin', '-ARG', '-SPEC:iR', 'COMP:ARE/inf', '-VAL', 'TAIL:V', 'adjoinable', '-SPEC:v', '-SPEC:C/fin', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:C', 'PF:a'}
a_D             {'!COMP:*', '-COMP:P', '-SPEC:V', 'LANG:EN', '-SPEC:P', 'LF:D', '-SPEC:Neg/fin', '-SPEC:INF', '!PROBE:N', '-COMP:T/fin', '-SPEC:T/fin', '-ARG', '-SPEC:MA/lla', 'OP', '-COMP:uR', 'COMP:N', 'D', 'adjoinable', 'PF:D', '-SPEC:C', '-COMP:D'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '!COMP:*', '-COMP:P', 'LANG:EN', 'COMP:D', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', '-SPEC:Neg', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'LF:admire', '-COMP:Neg', '-VAL', 'V', 'PF:admire', 'ASP', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'CLASS:TR', 'PHI:NUM:_'}
admire*         ['LANG:EN']
T/fin*          {'LF:T', '-VAL', '!SPEC:*', 'NO_NUMBER', 'LANG:EN', 'CAT:T/fin', "PF:T/fin'", 'NO_DET'}
v*              {'PF:v', 'NO_DET', '-VAL', 'CAT:v', 'NO_NUMBER', 'LANG:EN', 'LF:v'}
admire**        ['LANG:EN']
T/fin**         {'NO_PERSON', 'LF:T', '-VAL', "PF:T/fin''", '!SPEC:*', 'NO_NUMBER', 'LANG:EN', 'CAT:T/fin', 'NO_DET', 'PHI:PER:3'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '-COMP:N', 'COMP:D', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'LANG:IT', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'LF:admire', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'PF:adora', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_'}
antaa           ['LANG:FI']
anta-           {'LF:give', '-COMP:v', '-COMP:V', '-SPEC:FORCE', '!COMP:*', '-COMP:N', 'COMP:D', 'PHI:DET:_', 'CLASS:DITR', 'SPEC:ADV', 'SPEC:P', '-COMP:FIN', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', 'V', 'PF:antaa', 'ASP', 'SPEC:D', 'PHI:PER:_', 'ASP:BOUNDED', 'ARG', '+SEM:directional', 'PHI:NUM:_'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'-COMP:v', '-COMP:V', '-SPEC:FORCE', 'LF:ask', 'LANG:EN', 'COMP:D', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', '-VAL', 'V', 'ASP', 'SPEC:D', 'PF:ask', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'SEM:internal', 'PHI:NUM:_'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'PF:avain', 'LF:key', 'LANG:FI', 'COMP:C', '-COMP:C/fin', '-SEM:directional', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'LF:car', 'LANG:FI', 'COMP:C', '-COMP:C/fin', '-SEM:directional', '-SPEC:C/fin', 'PF:auto', '-COMP:WH', '-SPEC:ADV'}
city            {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', 'LANG:EN', 'N', '-COMP:N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', 'LF:city', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'PF:city', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
che             ['LANG:IT']
che-            {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:uWH', 'PF:che', '-SPEC:R', 'LANG:IT', 'COMP:R/D', 'LF:who', '-SPEC:INF', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', '-COMP:WH', '-SPEC:ADV'}
chiamato        ['LANG:IT']
chiamata-       {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '-COMP:N', 'PF:chiamato', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'LANG:IT', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', '-VAL', 'V', 'ASP', 'PHI:NUM:_', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'LF:called'}
danno           {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', 'LF:damage', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'PF:danno', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-SPEC:INF', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '-COMP:N', 'COMP:D', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'LF:detest', 'LANG:IT', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'COMP:ARE/inf', '-VAL', 'V', 'ASP', 'PF:detest', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'SEM:internal', 'PHI:NUM:_'}
devono          ['LANG:EN']
deva-           {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '-ASP', '-COMP:N', 'PHI:DET:_', 'LF:must', 'SPEC:ADV', 'SPEC:P', 'LANG:IT', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'PF:deva', 'COMP:P', 'COMP:ARE/inf', '-VAL', 'V', 'SPEC:D', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'SEM:internal', 'PHI:NUM:_'}
di              {'-COMP:uWH', '-SPEC:N', '-SPEC:FORCE', '!COMP:*', '-adjoinable', '-SPEC:V', '-COMP:N', 'COMP:D', '-SPEC:P', '-COMP:ADV', 'PHI:DET:_', 'PF:di', '-SPEC:Neg/fin', '-SPEC:iWH', '-SPEC:INF', '-COMP:T/fin', 'P', '-SPEC:T/fin', '-SPEC:iR', 'LANG:FI', '-VAL', 'LF:of', 'PHI:PER:_', '-SPEC:v', '-SPEC:C/fin', 'ARG', '-SPEC:ADV', '-SPEC:C', 'SPEC:*', 'PHI:NUM:_'}
does            {'COMP:T/prt', '!SPEC:D', 'LANG:EN', 'PHI:DET:_', 'PHI:GEN:M', 'COMP:V', 'T/fin', 'LF:does', '-COMP:INF', 'COMP:v', 'PHI:PER:3', 'PHI:GEN:_', 'ARG', 'T', 'SPEC:*', '-SPEC:N', '-SPEC:FORCE', '!COMP:*', 'VAL', '-SPEC:V', 'PF:does', '!PROBE:V', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:Neg', 'FIN', '-SPEC:T/fin', 'PHI:GEN:F', 'SPEC:D', '-SPEC:v', 'PHI:NUM:_', '-SPEC:C/fin', 'PHI:PER:_', '-SPEC:C', '-SPEC:TO/inf', 'COMP:Neg', 'PHI:NUM:SG'}
does_C          ['LANG:EN']
does-           {'COMP:T/prt', '!SPEC:D', 'LANG:EN', 'PHI:DET:_', 'PHI:GEN:M', 'COMP:V', 'T/fin', 'LF:does', '-COMP:INF', 'COMP:v', 'PHI:PER:3', 'PHI:GEN:_', 'ARG', 'T', 'SPEC:*', '-SPEC:N', '-SPEC:FORCE', '!COMP:*', 'VAL', '-SPEC:V', 'PF:does', '!PROBE:V', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:Neg', 'FIN', '-SPEC:T/fin', 'PHI:GEN:F', 'SPEC:D', '-SPEC:v', 'PHI:NUM:_', '-SPEC:C/fin', 'PHI:PER:_', '-SPEC:C', '-SPEC:TO/inf', 'COMP:Neg', 'PHI:NUM:SG'}
dorme           ['LANG:IT']
dorme-          {'-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PF:dorme', '!SPEC:D', 'LANG:EN', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'LF:sleep', 'COMP:P', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'POL:NEG', '!COMP:*', 'COMP:T/prt', 'VAL', '!SPEC:*', 'PHI:DET:_', 'NEG', '-SPEC:T/fin', 'FIN', 'Neg/fin', '-SPEC:T', 'LANG:FI', 'LF:neg', 'PHI:NUM:_', 'PHI:PER:_', 'PF:ei', 'ARG', 'SEM:internal', '%SPEC:INF', 'SPEC:*', '!COMP:T'}
e-              {'POL:NEG', '!COMP:*', 'COMP:T/prt', 'VAL', '!SPEC:*', 'PHI:DET:_', 'NEG', '-SPEC:T/fin', 'FIN', 'Neg/fin', '-SPEC:T', 'LANG:FI', 'LF:neg', 'PHI:NUM:_', 'PHI:PER:_', 'PF:ei', 'ARG', 'SEM:internal', '%SPEC:INF', 'SPEC:*', '!COMP:T'}
elaa            ['LANG:FI']
ela-            {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '-COMP:N', 'PHI:DET:_', 'LF:live', 'SPEC:ADV', 'SPEC:P', 'CLASS:INTR', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'PF:elaa', 'COMP:P', 'LANG:FI', '-VAL', '-COMP:MA/inf', 'V', 'ASP', 'SPEC:D', 'PHI:PER:_', 'ARG', '-COMP:D', 'PHI:NUM:_'}
etsii           ['LANG:FI']
etsi-           {'-COMP:v', '-COMP:V', '-SPEC:FORCE', 'LF:search', '-COMP:N', 'COMP:D', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', 'PF:etsi', 'V', 'ASP', 'PHI:PER:_', 'ARG', '!COMP:D', 'PHI:NUM:_'}
etta            {'FIN', '-ARG', '-SPEC:*', '!COMP:*', 'LANG:FI', '-VAL', 'PF:etta', 'COMP:T/fin', '!PROBE:T/fin', 'COMP:C/fin', 'LF:that', 'FORCE'}
flow'           {'LF:flow', '-COMP:v', '-COMP:V', '-SPEC:FORCE', 'LANG:EN', '-COMP:N', 'PHI:DET:_', 'PF:flow', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', '-VAL', 'V', 'ASP', 'SPEC:D', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_'}
from            {'-COMP:uWH', '-SPEC:N', 'LF:from', '-SPEC:FORCE', '!COMP:*', '-SPEC:V', 'LANG:EN', '-COMP:N', 'COMP:D', 'TAIL:V,+SEM:directional', '-SPEC:P', '-COMP:ADV', 'ARG', '-SPEC:ADV', 'PHI:DET:_', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', 'P', '-SPEC:T/fin', '-SPEC:iR', '-VAL', 'adjoinable', '-float', '-SPEC:v', '-SPEC:C/fin', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:iWH', 'PF:from', '-SPEC:C', 'PHI:NUM:_'}
gave            ['LANG:EN']
give-           {'LF:give', '-COMP:v', '-COMP:V', '-SPEC:FORCE', '!COMP:*', 'LANG:EN', '-COMP:N', 'COMP:D', 'PHI:DET:_', 'CLASS:DITR', 'SPEC:ADV', 'SPEC:P', '-COMP:FIN', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'PF:give', '-VAL', 'V', 'ASP', 'SPEC:D', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', '+SEM:directional', 'PHI:NUM:_'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-SPEC:INF', '-COMP:A', '-SPEC:T/fin', 'PF:Giuseppe', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SEM:directional', '-SPEC:C/fin', '-COMP:WH', 'LF:Giuseppe', '-SPEC:ADV'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '!COMP:*', '-COMP:P', '-COMP:N', 'LF:want', 'COMP:D', 'PHI:DET:_', 'SPEC:ADV', 'COMP:A/inf', 'SPEC:P', '-SPEC:*', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'PF:haluaa', 'COMP:P', 'LANG:FI', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'ASP:BOUNDED', 'SEM:internal', 'ARG', 'CLASS:TR', 'PHI:NUM:_'}
hairitsee       ['LANG:FI']
hairitse-       {'-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PF:hairitsee', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', '-COMP:FIN', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'LF:disturb', 'COMP:P', 'LANG:FI', '-VAL', 'V', 'ASP', 'SPEC:D', 'PHI:PER:_', 'ARG', '!COMP:D', 'PHI:NUM:_'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '-ASP', '-COMP:N', 'PHI:DET:_', 'COMP:T', 'SPEC:ADV', 'SPEC:P', 'LANG:IT', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', '-VAL', 'PF:ha', 'V', 'SPEC:D', 'PHI:PER:_', 'LF:have', 'PHI:GEN:_', 'ARG', 'SEM:internal', 'SPEC:*', 'PHI:NUM:_'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'CLASS:INTR', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', '-COMP:MA/inf', 'V', 'ASP', 'SPEC:D', 'PHI:PER:_', 'LF:disappear', 'ARG', '-COMP:D', 'PF:havia', 'PHI:NUM:_'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '!COMP:*', '-COMP:P', '-COMP:N', 'COMP:D', 'PHI:DET:_', 'PF:ihaile-', 'SPEC:ADV', 'SPEC:P', '-COMP:FIN', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'LF:admire', 'LANG:FI', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'ARG', 'CLASS:TR', '!COMP:D', 'PHI:NUM:_'}
il              {'!COMP:*', '-COMP:P', '-SPEC:V', '-SPEC:P', 'LF:the', '-SPEC:Neg/fin', 'PF:il', 'LANG:IT', '-SPEC:INF', '!PROBE:N', '-COMP:T/fin', '-SPEC:T/fin', '-ARG', '-SPEC:MA/lla', 'OP', '-COMP:uR', 'COMP:N', 'D', 'adjoinable', '-SPEC:C', '-COMP:D'}
i               {'!COMP:*', '-COMP:P', '-SPEC:V', '-SPEC:P', 'LF:the', '-SPEC:Neg/fin', 'PF:il', 'LANG:IT', '-SPEC:INF', '!PROBE:N', '-COMP:T/fin', '-SPEC:T/fin', '-ARG', '-SPEC:MA/lla', 'OP', '-COMP:uR', 'COMP:N', 'D', 'adjoinable', '-SPEC:C', '-COMP:D'}
in              {'-COMP:uWH', '-SPEC:N', '-SPEC:FORCE', '!COMP:*', '-SPEC:V', '-COMP:N', 'COMP:D', '-SPEC:P', '-COMP:ADV', 'PHI:DET:_', 'ARG', '-SPEC:Neg/fin', 'LANG:IT', '-SPEC:INF', '-COMP:T/fin', 'P', '-SPEC:T/fin', '-SPEC:iR', '-VAL', 'PF:in', 'adjoinable', '-SPEC:v', 'LF:in', '-SPEC:C/fin', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:C', 'PHI:NUM:_'}
infermieri      {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', 'PF:infermieri', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-SPEC:INF', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV', 'LF:nurses'}
is              ['LANG:EN']
be-             {'-COMP:v', '-COMP:V', '!COMP:*', '-SPEC:FORCE', '-COMP:TO/inf', 'LANG:EN', '-COMP:N', 'SPEC:ADV', 'SPEC:P', 'PF:be', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', '-ARG', 'COMP:P', 'COPULA', '-VAL', 'V', 'ASP', 'SPEC:D', 'LF:be'}
istuuko         ['LANG:FI']
istuu-          {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'LF:sit', 'CLASS:INTR', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', '-COMP:MA/inf', 'V', 'ASP', 'SPEC:D', 'PHI:PER:_', 'ARG', 'PF:istuu', '-COMP:D', 'PHI:NUM:_'}
John            ['LANG:EN']
John-           {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-adjoinable', '-SPEC:V', 'LANG:EN', 'N', '-COMP:N', '-COMP:AUX', 'COMP:R', 'LF:John', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SEM:directional', '-SPEC:C/fin', 'PF:John', '-COMP:WH', '-SPEC:ADV'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', 'LF:who', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', 'PF:joka', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', '-COMP:WH', '-SPEC:ADV'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', 'PF:Jukka', 'N', '-COMP:N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', 'COMP:C', '-COMP:C/fin', '-SEM:directional', '-SPEC:C/fin', 'LF:Jukka', '-COMP:WH', '-SPEC:ADV'}
juosten         ['LANG:FI']
juokse-         {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '-COMP:N', 'PHI:DET:_', 'PF:juokse-', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', 'V', 'ASP', 'PHI:NUM:_', 'PHI:PER:_', 'ARG', 'LF:run'}
istuu           ['LANG:FI']
istu-           {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'LF:sit', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'ARG', 'PF:istuu', 'PHI:NUM:_'}
kaksi           {'TAIL:ARG,VAL,FIN', '-VAL', 'LANG:FI', 'PF:kaksi', 'LF:two', 'PHI:DET:_', 'COMP:N', 'PHI:NUM:_', 'PHI:PER:_', 'ARG', 'NUM', 'COMP:n', 'SPEC:*', 'PHI:NUM:SG'}
kaksi           {'TAIL:ARG,ASP:BOUNDED', 'PF:kaksi', 'LF:two', 'TAIL:*POL:NEG', 'LANG:EN', 'COMP:N', 'COMP:n', 'NUM', 'SPEC:*'}
kaksi_1         {'TAIL:ARG,VAL,FIN', '-VAL', 'LANG:FI', 'PF:kaksi', 'LF:two', 'PHI:DET:_', 'COMP:N', 'PHI:NUM:_', 'PHI:PER:_', 'ARG', 'NUM', 'COMP:n', 'SPEC:*', 'PHI:NUM:SG'}
kaksi_2         {'TAIL:ARG,ASP:BOUNDED', 'PF:kaksi', 'LF:two', 'TAIL:*POL:NEG', 'LANG:EN', 'COMP:N', 'COMP:n', 'NUM', 'SPEC:*'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'SPEC:*', 'LANG:FI', 'NUM', 'PF:kaksi', 'LF:two', 'COMP:n', 'COMP:N'}
kaupunkia       ['LANG:EN']
kaupunki        {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-COMP:P', 'PF:kaupunki', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', 'LF:city', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'LANG:FI', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'PF:kaske', 'LF:order', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', 'V', '!COMP:A/inf', 'ASP', 'PHI:PER:_', 'ARG', 'SEM:external', 'PHI:NUM:_'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', 'PF:kello', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'LF:watch', 'LANG:FI', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
kello0-         {'SPEC:D', 'LF:watch', 'LANG:FI', '2SPEC', 'PF:kello', '0'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', 'LANG:EN', 'N', '-COMP:N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'LF:key', 'PF:key', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', 'COMP:C', '-COMP:C/fin', '-SEM:directional', '-SPEC:C/fin', 'LF:book', 'PF:kirja', '-COMP:WH', '-SPEC:ADV'}
kohti           {'-COMP:uWH', '-SPEC:N', '-SPEC:FORCE', '!COMP:*', '-SPEC:V', '-COMP:N', 'COMP:D', '-SPEC:P', '-COMP:ADV', 'PHI:DET:_', 'ARG', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', 'P', '-SPEC:T/fin', '-SPEC:iR', 'LANG:FI', 'LF:towards', 'TAIL:V', '-VAL', 'adjoinable', '-SPEC:v', 'PHI:PER:_', 'PF:kohti', '-SPEC:C/fin', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:C', 'SPEC:*', 'PHI:NUM:_'}
koko            {'PF:koko', '!COMP:*', '-COMP:P', '-SPEC:V', '-SPEC:P', '-SPEC:Neg/fin', '-SPEC:INF', '!PROBE:N', 'LF:all', '-COMP:T/fin', '-SPEC:T/fin', '-ARG', '-SPEC:MA/lla', 'OP', 'LANG:FI', '-COMP:uR', 'adjoinable', 'D', 'COMP:N', 'TAIL:T', '-SPEC:C', '-COMP:D'}
kuka            ['LANG:FI']
kuka-           {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', 'PF:kuka', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:V', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', 'LF:who', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', 'PHI', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
kuorsaa-        {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'PF:kuorsaa', 'LANG:FI', '-VAL', 'V', 'ASP', 'PHI:PER:_', '-COMP:WH', 'ARG', '-COMP:D', 'LF:snore', 'PHI:NUM:_'}
kuorsaamalla    ['LANG:FI']
lahella         {'!SPEC:D', '!SPEC:*', '-COMP:N', 'COMP:D', '-SPEC:P', '-COMP:ADV', 'PHI:DET:_', 'COMP:V', '-SPEC:Neg/fin', 'INF', 'P', 'COMP:v', '-SPEC:iR', 'LANG:FI', '-SPEC:iWH', 'ARG', 'SPEC:*', '-COMP:uWH', '-SPEC:N', '!COMP:*', '-SPEC:FORCE', '-COMP:FORCE', 'VAL', '-SPEC:V', '-SPEC:INF', '-COMP:T/fin', '-SPEC:T/fin', 'PF:lahella', 'adjoinable', '-SPEC:v', '-COMP:C/fin', '-SPEC:C/fin', 'PHI:PER:_', 'LF:near', '-SPEC:ADV', '-SPEC:C', 'PHI:NUM:_'}
lahella         {'-COMP:uWH', '-SPEC:N', '!COMP:*', '-SPEC:FORCE', '-SPEC:V', '-COMP:N', 'COMP:D', '-SPEC:P', '-COMP:ADV', 'PHI:DET:_', 'ARG', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', 'P', '-SPEC:T/fin', '-SPEC:iR', 'PF:lahella', 'LANG:FI', '-VAL', 'adjoinable', '-SPEC:v', 'PHI:PER:_', '-SPEC:C/fin', 'LF:near', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:C', '!COMP:D', 'SPEC:*', 'PHI:NUM:_'}
lahella_1       {'-COMP:uWH', '-SPEC:N', '!COMP:*', '-SPEC:FORCE', '-SPEC:V', '-COMP:N', 'COMP:D', '-SPEC:P', '-COMP:ADV', 'PHI:DET:_', 'ARG', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', 'P', '-SPEC:T/fin', '-SPEC:iR', 'PF:lahella', 'LANG:FI', '-VAL', 'adjoinable', '-SPEC:v', 'PHI:PER:_', '-SPEC:C/fin', 'LF:near', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:C', '!COMP:D', 'SPEC:*', 'PHI:NUM:_'}
lahella_2       {'!SPEC:D', '!SPEC:*', '-COMP:N', 'COMP:D', '-SPEC:P', '-COMP:ADV', 'PHI:DET:_', 'COMP:V', '-SPEC:Neg/fin', 'INF', 'P', 'COMP:v', '-SPEC:iR', 'LANG:FI', '-SPEC:iWH', 'ARG', 'SPEC:*', '-COMP:uWH', '-SPEC:N', '!COMP:*', '-SPEC:FORCE', '-COMP:FORCE', 'VAL', '-SPEC:V', '-SPEC:INF', '-COMP:T/fin', '-SPEC:T/fin', 'PF:lahella', 'adjoinable', '-SPEC:v', '-COMP:C/fin', '-SPEC:C/fin', 'PHI:PER:_', 'LF:near', '-SPEC:ADV', '-SPEC:C', 'PHI:NUM:_'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '-COMP:N', 'PHI:DET:_', 'PF:lahtea', 'SPEC:ADV', 'SPEC:P', 'LF:leave', 'CLASS:INTR', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', '-COMP:MA/inf', 'V', 'COMP:PP', 'SPEC:D', 'ASP', 'PHI:PER:_', 'ARG', '-COMP:D', 'PHI:NUM:_'}
lavano          ['LANG:IT']
lava-           {'-COMP:v', '-COMP:V', '!COMP:*', '-SPEC:FORCE', '-COMP:N', 'COMP:D', 'PHI:DET:_', 'SPEC:P', 'SPEC:ADV', 'LF:wash', 'LANG:IT', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'PF:lava', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'!COMP:*', '-COMP:P', 'PF:le', '-SPEC:V', '-SPEC:P', 'LF:D', '-SPEC:Neg/fin', 'LANG:IT', '-SPEC:INF', '!PROBE:N', '-COMP:T/fin', '-SPEC:T/fin', '-ARG', '-SPEC:MA/lla', 'OP', '-COMP:uR', 'COMP:N', 'D', 'adjoinable', '-SPEC:C', '-COMP:D'}
leaves          ['LANG:EN']
leave           {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '!SPEC:D', 'LANG:EN', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'LF:leave', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'PF:leave', 'PHI:NUM:_'}
leave-          {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '!SPEC:D', 'LANG:EN', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'LF:leave', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'PF:leave', 'PHI:NUM:_'}
like-           {'-COMP:v', '-COMP:V', '-SPEC:FORCE', 'LANG:EN', '-COMP:N', 'PHI:DET:_', 'PF:like', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'LF:like', 'PHI:GEN:_', 'ARG', '!COMP:D', 'PHI:NUM:_'}
likes           ['LANG:EN']
like            {'-COMP:v', '-COMP:V', '-SPEC:FORCE', 'LANG:EN', '-COMP:N', 'PHI:DET:_', 'PF:like', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'LF:like', 'PHI:GEN:_', 'ARG', '!COMP:D', 'PHI:NUM:_'}
little          ['LANG:EN']
little-         {'SPEC:D', 'LF:little', 'PF:little-', '2SPEC', 'LANG:EN', '0'}
lle             {'-COMP:uWH', '-SPEC:N', '-SPEC:FORCE', '!COMP:*', '-SPEC:V', '-COMP:N', 'COMP:D', '-SPEC:P', 'TAIL:V,+SEM:directional', '-COMP:ADV', 'ARG', 'PHI:DET:_', 'LF:for', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', 'P', '-SPEC:T/fin', '-SPEC:iR', 'LANG:FI', '-VAL', 'adjoinable', 'PF:P(lle)', '-SPEC:v', '-SPEC:C/fin', 'PHI:PER:_', '-SPEC:iWH', '+SEM:directional', '-SPEC:ADV', '-SPEC:C', 'PHI:NUM:_'}
lla             {'-COMP:uWH', '-SPEC:N', '-SPEC:FORCE', '!COMP:*', '-SPEC:V', '-COMP:N', 'COMP:D', '-SPEC:P', '-COMP:ADV', 'PHI:DET:_', 'ARG', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', 'P', '-SPEC:T/fin', 'PF:P(lla)', '-SPEC:iR', 'LF:by', 'LANG:FI', '-VAL', 'adjoinable', '-SPEC:v', 'PHI:PER:_', '-SPEC:C/fin', 'TAIL:*V', '-SPEC:iWH', 'TAIL:T', '-SPEC:ADV', '-SPEC:C', 'SPEC:*', 'PHI:NUM:_'}
Luisa           ['LANG:IT']
Luisa-          {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'LF:Luisa', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-SPEC:INF', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'PF:Luisa', 'COMP:C', '-COMP:C/fin', '-SEM:directional', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
lukemalla       ['LANG:FI']
luke-           {'-COMP:v', 'LF:read', '-COMP:V', '-SPEC:FORCE', '!COMP:*', '-COMP:P', '-COMP:N', 'COMP:D', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', 'PF:luke', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'ARG', 'CLASS:TR', 'PHI:NUM:_'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'LF:find', '-COMP:v', '-COMP:V', '-SPEC:FORCE', '!COMP:*', '-COMP:P', '-COMP:N', 'COMP:D', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'PF:loyta-', 'LANG:FI', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'ASP:BOUNDED', 'ARG', 'CLASS:TR', '!COMP:D', 'PHI:NUM:_'}
Mary            ['LANG:EN']
Mary-           {'-SPEC:N', 'LF:Mary', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-adjoinable', '-SPEC:V', 'LANG:EN', 'N', '-COMP:N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', 'PF:Mary', '-SPEC:T/fin', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SEM:directional', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-adjoinable', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', 'PF:Merja', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', 'LF:Merja', 'COMP:C', '-COMP:C/fin', '-SEM:directional', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'-SPEC:N', 'COMP:v', '-SPEC:FORCE', 'LF:by', 'LANG:FI', 'adjoinable', 'ADV', '-SPEC:Neg/fin', 'TAIL:T', 'PF:malla', 'MA/inf', 'SPEC:*', '-SPEC:T/fin'}
meren           ['LANG:FI']
mere-           {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'LF:ocean', 'PF:meri', 'COMP:P', 'LANG:FI', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
mies            {'LF:man', '-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', 'PF:mies', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
mistake         {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', 'LANG:EN', 'N', '-COMP:N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'LF:mistake', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV', 'PF:mistake'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-SPEC:N', '-COMP:V', '-COMP:v', 'PF:mika-', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', 'LF:what', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'LF:move', '-COMP:v', '-COMP:V', 'LANGN:EN', '-SPEC:FORCE', '!COMP:*', '-COMP:P', '-COMP:N', 'COMP:D', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', '-VAL', 'PF:move', 'V', 'ASP', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', '+SEM:directional', 'CLASS:TR', 'PHI:NUM:_'}
mukavasti       ['LANG:EN']
mukava-         {'SPEC:D', 'LANG:FI', 'PF:mukavasti', '2SPEC', 'LF:comfortably', '0'}
must            {'-SPEC:N', 'MODAL', 'COMP:T/prt', '-SPEC:FORCE', '!COMP:*', 'VAL', 'SPEC:*', '!SPEC:D', '-SPEC:V', 'LANG:EN', 'PHI:DET:_', 'LF:must', '!PROBE:V', 'COMP:V', 'T/fin', 'SPEC:TO/inf', '-COMP:INF', '-COMP:T/fin', '-SPEC:Neg', 'FIN', 'COMP:v', '-SPEC:T/fin', 'T', 'SPEC:D', '-SPEC:v', 'PF:must', '-SPEC:C/fin', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', '-SPEC:C', '-SPEC:TO/inf', 'COMP:Neg', 'PHI:NUM:_'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '!COMP:*', '-COMP:P', 'PF:myy', 'COMP:D', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', 'LF:sell', 'V', 'ASP', 'PHI:PER:_', 'ASP:BOUNDED', 'ARG', 'CLASS:TR', 'PHI:NUM:_'}
naki            ['LANG:FI']
nake-           {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '!COMP:*', '-COMP:P', '-COMP:ESSA/inf', '-COMP:N', 'COMP:D', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'LF:see', 'COMP:P', 'LANG:FI', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'ASP:BOUNDED', '-COMP:MA/tta', 'ARG', '-COMP:MA/ssa', 'CLASS:TR', 'PF:nake', 'PHI:NUM:_'}
nayttaa         ['LANG:FI']
naytta-         {'-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PF:naytta', 'VAL', '!SPEC:D', '-COMP:N', 'LF:seem', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', '-ARG', 'COMP:P', 'LANG:FI', '!COMP:VA/inf', 'ASP', 'V', 'SEM:internal'}
ndo             {'COMP:v', '-COMP:FORCE', '!COMP:*', 'VAL', '-COMP:T/fin', 'PRG', '-SPEC:V', 'LANG:EN', 'LF:ing', '-COMP:C/fin', '?ARG', 'COMP:V', 'PF:PRG', 'INF', '-SPEC:T/fin'}
ne              {'!COMP:*', '-COMP:P', '-SPEC:V', '-SPEC:P', 'LF:those', '-SPEC:Neg/fin', '-SPEC:INF', '!PROBE:N', '-COMP:T/fin', 'PHI:NUM:PL', '-SPEC:T/fin', '-ARG', '-SPEC:MA/lla', 'OP', 'LANG:FI', '-COMP:uR', 'COMP:N', 'D', 'PF:ne', 'adjoinable', 'PHI:PER:3', '-SPEC:C', '-COMP:D'}
niiden          ['LANG:EN']
nen             {'A', '-SPEC:A', 'LANG:FI', 'COMP:0', 'LF:ing', '-SPEC:D', 'TAIL:D', 'SPEC:*', 'PF:a'}
not             {'POL:NEG', 'PF:not', '!COMP:*', '-VAL', 'LANG:EN', 'PHI:DET:_', 'PHI:NUM:_', '-COMP:C', 'PHI:PER:_', 'Neg', 'LF:not', 'PHI:GEN:_', '-COMP:FIN', 'ARG', '-COMP:D', 'SPEC:*', '-SPEC:T/fin'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-COMP:v', 'PF:nukku', '-COMP:T', '-COMP:V', '-SPEC:FORCE', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'CLASS:INTR', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'LF:sleep', '-COMP:Neg/fin', 'COMP:P', '-COMP:MA/inf', 'LANG:FI', '-VAL', 'V', 'ASP', 'SPEC:D', 'PHI:PER:_', 'ARG', '-COMP:D', 'PHI:NUM:_'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'PF:omaisuuden', '-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', 'LF:possessions', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
operatoria      ['LANG:IT']
operatoria-     {'PF:operatoria', 'SPEC:D', '2SPEC', 'LF:operation', 'LANG:IT', '0'}
ostaa           ['LANG:FI']
osta-           {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '!COMP:*', '-COMP:P', '-COMP:N', 'COMP:D', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'ASP:BOUNDED', 'ARG', 'CLASS:TR', 'LF:buy', 'PF:osta', 'PHI:NUM:_'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-SPEC:N', 'PF:paiva', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'SEM:nonreferential', '-COMP:WH', 'LF:day', '-SPEC:ADV'}
Pariisia        ['LANG:FI']
Pariisi-        {'-SPEC:N', 'LF:Paris', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', 'PF:Pariisi', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', 'LF:Pekka', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:V', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'PF:Pekka', 'COMP:P', 'LANG:FI', 'COMP:C', '-COMP:C/fin', '-SEM:directional', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
pelottaa        ['LANG:FI']
pelkaa-         {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '!COMP:*', '-COMP:P', '-COMP:N', 'COMP:D', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'LF:fear', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'PF:pelkaa', 'COMP:P', 'LANG:FI', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'ARG', 'CLASS:TR', 'PHI:NUM:_'}
persuades       ['LANG:EN']
persuade-       {'-COMP:v', '-COMP:V', '!COMP:*', '-SPEC:FORCE', 'LANG:EN', '-COMP:N', 'COMP:TO/inf', 'PHI:DET:_', 'SPEC:ADV', 'LF:persuade', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'PF:persuade', 'SEM:external', 'PHI:NUM:_'}
peruuntui       ['LANG:FI']
peruuntu-       {'-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PF:peruuntui', 'LF:cancelled', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', 'V', 'ASP', 'SPEC:D', 'PHI:PER:_', 'ARG', 'PHI:NUM:_'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '!COMP:*', '-COMP:P', '-COMP:N', 'COMP:D', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'LF:wash', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'PF:pese', 'ASP:BOUNDED', 'ARG', 'CLASS:TR', 'PHI:NUM:_'}
pese-           {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '!COMP:*', '-COMP:P', '-COMP:N', 'COMP:D', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'LF:wash', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'PF:pese', 'ARG', 'CLASS:TR', 'PHI:NUM:_'}
petardi         {'LF:firecrackers', '-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', 'PF:petardi', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:V', '-SPEC:uWH', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-SPEC:INF', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
pieni           ['LANG:FI']
pieni-          {'SPEC:D', 'LANG:FI', 'PF:pieni-', 'LF:small', '2SPEC', '0'}
poikien         ['LANG:FI']
poika-          {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', 'PF:poika', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'LF:boy', 'COMP:P', 'LANG:FI', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
puhelinta       ['LANG:FI']
puhelin-        {'LF:phone', 'SPEC:D', 'LANG:FI', 'PF:puhelin', '2SPEC', '0'}
punainen        ['LANG:FI']
puna-           {'SPEC:D', 'PF:puna-', 'LANG:FI', 'LF:red', '2SPEC', '0'}
presupposto     {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', 'LF:presupposition', 'LANG:IT', 'COMP:R/D', '-SPEC:INF', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'PF:presupposto', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
primary         {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', 'PF:primary', 'LANG:IT', 'COMP:R/D', '-SPEC:INF', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', 'LF:nurse', '-SPEC:ADV'}
promises        ['LANG:EN']
promise-        {'-COMP:v', '-COMP:V', '-SPEC:FORCE', 'LANG:EN', 'COMP:D', 'LF:promise', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', '-VAL', 'V', 'ASP', 'SPEC:D', 'PF:promise', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'SEM:internal', 'PHI:NUM:_'}
pyytaa          ['LANG:FI']
pyyta-          {'-COMP:v', '-COMP:V', '-SPEC:FORCE', 'LF:ask', 'PF:pyyda', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'ARG', 'SEM:external', 'PHI:NUM:_'}
raukesi         ['LANG:FI']
raukea-         {'PF:raukea', '-COMP:v', '-COMP:V', '-SPEC:FORCE', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'ARG', 'LF:terminate', 'PHI:NUM:_'}
red             ['LANG:EN']
red-            {'PF:red', 'SPEC:D', 'LF:red', '2SPEC', 'LANG:EN', '0'}
saavuttaa       ['LANG:FI']
saavutta-       {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '!COMP:*', '-COMP:P', '-COMP:N', 'COMP:D', 'PHI:DET:_', 'LF:reach', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', 'PF:saavutta-', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'ASP:BOUNDED', 'ARG', 'CLASS:TR', '!COMP:D', 'PHI:NUM:_'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'-COMP:v', '-COMP:V', '-SPEC:FORCE', 'COMP:VA/inf', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'LF:say', 'COMP:P', 'LANG:FI', '-VAL', 'V', 'ASP', 'SPEC:D', 'PHI:PER:_', 'COMP:FORCE', 'ARG', 'PF:sano-', 'PHI:NUM:_'}
said            ['LANG:EN']
say'            {'-COMP:v', '-COMP:V', '-SPEC:FORCE', 'LANG:EN', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'PF:say', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'LF:say', 'COMP:P', '-VAL', 'V', 'ASP', 'SPEC:D', 'PHI:PER:_', '!COMP:FORCE', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_'}
say-            {'-COMP:v', '-COMP:V', '-SPEC:FORCE', 'LANG:EN', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'PF:say', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'LF:say', 'COMP:P', '-VAL', 'V', 'ASP', 'SPEC:D', 'PHI:PER:_', '!COMP:FORCE', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_'}
sala            ['LANG:IT']
sala-           {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', 'PF:sala', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-SPEC:INF', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV', 'LF:room'}
scoppiati       ['LANG:IT']
scoppia-        {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'LF:explode', 'LANG:IT', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'PF:scoppia', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_'}
sen             {'TAIL:ASP', '!COMP:*', '-COMP:P', '-SPEC:V', '-SPEC:P', 'TAIL:*POL:NEG', '-SPEC:Neg/fin', '-SPEC:INF', '!PROBE:N', '-COMP:T/fin', '-SPEC:T/fin', '-ARG', '-SPEC:MA/lla', 'OP', 'LANG:FI', '-COMP:uR', 'COMP:N', 'D', 'adjoinable', 'TAIL:PHI', 'PF:sen', '-SPEC:C', '-COMP:D', 'LF:the/that'}
se'             {'PF:se', '!COMP:*', '-COMP:P', '-SPEC:V', '-SPEC:P', '-SPEC:Neg/fin', '-SPEC:INF', '!PROBE:N', '-COMP:T/fin', '-SPEC:T/fin', '-ARG', '-SPEC:MA/lla', 'OP', 'LANG:FI', '-COMP:uR', 'COMP:N', 'D', 'adjoinable', '-SPEC:C', '-COMP:D', 'LF:the/that'}
se              {'PF:se', '!COMP:*', '-COMP:P', '-SPEC:V', '-SPEC:P', '-SPEC:Neg/fin', '-SPEC:INF', '!PROBE:N', '-COMP:T/fin', '-SPEC:T/fin', '-ARG', '-SPEC:MA/lla', 'OP', 'LANG:FI', '-COMP:uR', 'COMP:N', 'D', 'adjoinable', '-SPEC:C', '-COMP:D', 'LF:the/that'}
se              ['LANG:FI']
sentenza        {'-SPEC:N', '-COMP:V', 'LF:sentence', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', 'PF:sentenza', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-SPEC:INF', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
Seine           ['LANG:EN']
Seine-          {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', 'LANG:EN', 'N', '-COMP:N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'PF:Seine', 'COMP:P', 'LF:Seine', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
sembrano        ['LANG:IT']
sembra-         {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '-ASP', 'LANG:EN', '-COMP:N', 'LF:seem', '!COMP:ARE/inf', 'SPEC:P', 'SPEC:ADV', 'PF:sembra', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', '-ARG', 'COMP:P', '-VAL', 'V', 'SPEC:D', '-COMP:D'}
sleeps          ['LANG:EN']
sleep           {'-COMP:v', '-COMP:V', '-SPEC:FORCE', 'LANG:EN', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'CLASS:INTR', 'PF:sleep', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'LF:sleep', 'COMP:P', '-VAL', '-COMP:MA/inf', 'V', 'ASP', 'SPEC:D', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', '-COMP:D', 'PHI:NUM:_'}
sleep-          {'-COMP:v', '-COMP:V', '-SPEC:FORCE', 'LANG:EN', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'CLASS:INTR', 'PF:sleep', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'LF:sleep', 'COMP:P', '-VAL', '-COMP:MA/inf', 'V', 'ASP', 'SPEC:D', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', '-COMP:D', 'PHI:NUM:_'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'PF:sopimus', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '!COMP:A/inf', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'LF:agreement', '-COMP:WH', '-SPEC:ADV'}
spinge          ['LANG:IT']
spinge-         {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '-COMP:P', '-COMP:N', 'PHI:DET:_', 'LF:push', 'SPEC:ADV', 'SPEC:P', 'LANG:IT', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'PF:spinge', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', '!COMP:D', 'PHI:NUM:_'}
ssa             {'-COMP:uWH', '-SPEC:N', '-SPEC:FORCE', '!COMP:*', 'PF:ssa', '-SPEC:V', '-COMP:N', 'COMP:D', '-SPEC:P', '-COMP:ADV', 'PHI:DET:_', 'ARG', '-SPEC:Neg/fin', '-SPEC:INF', 'COMP:n/MA', 'P', '-COMP:T/fin', '-SPEC:T/fin', '-SPEC:iR', 'LANG:FI', '-VAL', 'TAIL:V', 'adjoinable', '-SPEC:v', 'PHI:PER:_', 'LF:in', '-SPEC:C/fin', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:C', 'SPEC:*', 'PHI:NUM:_'}
stanno          ['LANG:IT']
sta-            {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '-ASP', 'LANG:EN', '-COMP:N', 'PHI:DET:_', 'PF:sta', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', 'LF:stay', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', '-VAL', 'V', 'COMP:PRG', 'SPEC:D', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'SEM:internal', 'PHI:NUM:_'}
sti             {'-SPEC:N', 'PF:sti', '-ARG', '!COMP:*', '-SPEC:FORCE', 'LF:by', 'LANG:FI', 'adjoinable', 'ADV', '-SPEC:Neg/fin', 'TAIL:T', 'SPEC:*', '-SPEC:T/fin'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', 'PF:sukka-', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', 'LF:socks', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
talo            {'-SPEC:N', '-COMP:V', '-COMP:v', 'PF:talo', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'LF:house', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
tama            ['LANG:EN']
tama-           {'-SPEC:N', '-COMP:V', 'LF:this', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', 'PF:tama', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', 'PHI', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'-COMP:v', 'MODAL', '-COMP:V', 'PF:taytyy', '-SPEC:FORCE', '-ASP', '-COMP:N', 'PHI:DET:_', 'LF:must', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'FIN', 'COMP:P', 'LANG:FI', '-VAL', 'V', '!COMP:A/inf', 'PHI:PER:_', 'ARG', 'SPEC:*', 'PHI:NUM:_'}
teki            ['LANG:FI']
teke-           {'PF:teke', '-COMP:v', '-COMP:V', '-SPEC:FORCE', '!COMP:*', '-COMP:P', '-COMP:N', 'COMP:D', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', 'V', 'ASP', '-COMP:A/inf', 'PHI:PER:_', 'ASP:BOUNDED', 'LF:make', 'ARG', 'CLASS:TR', '!COMP:D', 'PHI:NUM:_'}
that            {'FIN', '-ARG', 'PF:that', '-SPEC:*', '!COMP:*', '-VAL', 'LANG:EN', 'COMP:T/fin', '!PROBE:T/fin', 'COMP:C/fin', 'LF:that', 'FORCE'}
the             {'!COMP:*', '-COMP:P', 'PF:the', '-SPEC:V', 'LANG:EN', '-SPEC:P', 'LF:the', '-SPEC:Neg/fin', '-SPEC:INF', '!PROBE:N', 'PHI:DEF:DEF', '-COMP:T/fin', '-SPEC:T/fin', '-ARG', '-SPEC:MA/lla', 'OP', '-COMP:uR', 'COMP:N', 'D', 'adjoinable', '-SPEC:C', '-COMP:D'}
to              {'-COMP:uWH', '-SPEC:N', 'LF:to', '-SPEC:FORCE', '!COMP:*', '-SPEC:V', 'LANG:EN', '-COMP:N', 'COMP:D', 'TAIL:V,+SEM:directional', '-SPEC:P', '-COMP:ADV', 'ARG', 'PHI:DET:_', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', 'P', 'PF:to', '-SPEC:T/fin', '-SPEC:iR', '-VAL', 'adjoinable', '-float', '-SPEC:v', '-SPEC:C/fin', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:iWH', '+SEM:directional', '-SPEC:ADV', '-SPEC:C', 'PHI:NUM:_'}
to_inf          {'-COMP:FORCE', '!COMP:*', 'LF:TO/inf', '-SPEC:V', 'LANG:EN', '?ARG', 'COMP:V', '-COMP:T/fin', 'INF', '-SPEC:T/fin', 'COMP:v', '-VAL', 'adjoinable', 'TO/inf', '-SPEC:v', '-COMP:C/fin', 'PF:TO/inf'}
towards         {'-COMP:uWH', '-SPEC:N', '-SPEC:FORCE', '!COMP:*', '-SPEC:V', 'LANG:EN', '-COMP:N', 'COMP:D', '-SPEC:P', '-COMP:ADV', 'ARG', 'PHI:DET:_', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', 'PF:towards', 'P', '-SPEC:T/fin', '-SPEC:iR', '-VAL', 'LF:towards', 'TAIL:V', 'adjoinable', '-float', '-SPEC:v', '-SPEC:C/fin', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:C', 'PHI:NUM:_'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'PF:tonaise', '-COMP:v', '-COMP:V', '-SPEC:FORCE', '!COMP:*', '-COMP:P', '-COMP:N', 'COMP:D', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'ARG', 'LF:nudge', 'CLASS:TR', 'PHI:NUM:_'}
tta             {'-COMP:uWH', '-SPEC:N', '-SPEC:FORCE', 'LF:without', '!COMP:*', '-SPEC:V', '-COMP:N', 'COMP:D', '-SPEC:P', 'ADV', '-COMP:ADV', 'ARG', 'PHI:DET:_', '-SPEC:Neg/fin', '-SPEC:INF', 'COMP:n/MA', 'P', '-COMP:T/fin', '-SPEC:T/fin', '-SPEC:iR', 'LANG:FI', '-VAL', 'PF:tta', 'adjoinable', '-SPEC:v', '-SPEC:C/fin', 'PHI:PER:_', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:C', 'SPEC:*', 'PHI:NUM:_'}
tries           ['LANG:EN']
try-            {'-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PF:try', 'LANG:EN', '-COMP:N', 'PHI:DET:_', '!COMP:-ARG', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', '-VAL', 'V', 'LF:try', 'SPEC:D', 'ASP', 'PHI:PER:_', '!COMP:TO/inf', 'PHI:GEN:_', 'ARG', 'SEM:internal', 'PHI:NUM:_'}
verifiche       {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', 'LF:verification', '-SPEC:R', 'PF:verifiche', 'LANG:IT', 'COMP:R/D', '-SPEC:INF', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'LF:flow', '-COMP:v', '-COMP:V', '-SPEC:FORCE', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', '-VAL', 'PF:virtaa', 'V', 'ASP', 'SPEC:D', 'PHI:PER:_', 'ARG', '!COMP:P', '-COMP:D', 'PHI:NUM:_'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'-COMP:v', '-COMP:V', '!COMP:*', '-SPEC:FORCE', 'LANG:EN', 'LF:want', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', '-SPEC:*', 'PF:volu', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', '-VAL', 'V', 'ASP', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'SEM:internal', 'PHI:NUM:_'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'-COMP:v', '-COMP:V', '-SPEC:FORCE', '!COMP:*', '-COMP:P', 'LANG:EN', '-COMP:N', 'COMP:D', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'SEM:achievement', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', 'PF:voitta', '-VAL', 'LF:win', 'V', 'ASP', 'PHI:PER:_', 'ASP:BOUNDED', 'PHI:GEN:_', 'ARG', 'CLASS:TR', 'PHI:NUM:_'}
wants           ['LANG:EN']
want-           {'-COMP:V', '-COMP:v', '-SPEC:FORCE', '!COMP:*', '-COMP:P', 'LANG:EN', 'LF:want', 'COMP:TO/inf', '-COMP:N', 'COMP:D', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', '-VAL', 'PF:want', 'V', 'ASP', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'CLASS:TR', '-SPEC:TO/inf', 'PHI:NUM:_'}
what            ['LANG:EN']
what-           {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', 'LANG:EN', 'N', '-COMP:N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:uWH', '-SPEC:R', 'LF:what', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'PF:what', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', '-COMP:WH', '-SPEC:ADV'}
which           {'!COMP:*', '-COMP:P', '-SPEC:V', 'LANG:EN', '-SPEC:P', 'LF:which', '-SPEC:Neg/fin', '-SPEC:INF', '!PROBE:N', '-COMP:T/fin', 'OP:WH', '-SPEC:T/fin', '-ARG', '-SPEC:MA/lla', 'OP', '-COMP:uR', 'COMP:N', 'D', 'adjoinable', '-SPEC:C', 'PF:which', '-COMP:D'}
who             ['LANG:EN']
who-            {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', 'LANG:EN', 'N', '-COMP:N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', 'LF:who', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'PF:who', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', '-COMP:WH', '-SPEC:ADV'}
whether         {'LF:whether', '!COMP:*', 'LANG:EN', 'COMP:T/fin', 'COMP:C/fin', '!PROBE:T/fin', '-SPEC:*', 'PF:whether', 'OP:WH', 'FIN', '-ARG', 'OP', '-VAL', 'FORCE', 'Q', 'OP:Q'}
yrittaa         ['LANG:FI']
yritta-         {'-COMP:v', '-COMP:V', '-SPEC:FORCE', 'PF:yritta', 'LANG:EN', '-COMP:N', 'PHI:DET:_', '!COMP:-ARG', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:P', '-VAL', 'V', '!COMP:A/inf', 'SPEC:D', 'LF:try', 'ASP', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'SEM:internal', 'PHI:NUM:_'}
mina            ['LANG:EN']
mina-           {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', 'LF:I', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:V', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', 'PF:mina', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', '-COMP:WH', '-SPEC:ADV'}
sina            ['LANG:EN']
sina-           {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'PF:sina', 'LF:you', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', '-COMP:WH', '-SPEC:ADV'}
han             ['LANG:EN']
han-            {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:uWH', 'LF:s/he', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', 'PF:han', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', '-COMP:WH', '-SPEC:ADV'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'LF:we', 'COMP:P', 'LANG:FI', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', 'PF:me', '-COMP:WH', '-SPEC:ADV'}
te              ['LANG:EN']
te-             {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', 'LF:you', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'PF:te', 'LANG:FI', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', '-COMP:WH', '-SPEC:ADV'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', 'LF:they', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'LANG:FI', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', '-COMP:WH', '-SPEC:ADV', 'PF:he'}
se-             {'PF:se', '!COMP:*', '-COMP:P', 'LF:it/that', '-SPEC:V', '-SPEC:P', '-SPEC:Neg/fin', '-SPEC:INF', '!PROBE:N', '-COMP:T/fin', '-SPEC:T/fin', '-ARG', '-SPEC:MA/lla', 'OP', 'LANG:FI', '-COMP:uR', 'COMP:N', 'D', 'adjoinable', '-SPEC:C', '-COMP:D'}
I               ['LANG:EN']
I-              {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', 'LF:I', 'LANG:EN', 'N', '-COMP:N', '-COMP:AUX', 'COMP:R', 'PF:I', '-SPEC:P', '-COMP:*', '-SPEC:V', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', '-COMP:WH', '-SPEC:ADV'}
you             ['LANG:EN']
you-            {'PF:you', '-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', 'LANG:EN', 'N', '-COMP:N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', 'LF:you', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', '-COMP:WH', '-SPEC:ADV'}
he              ['LANG:EN']
he-             {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', 'LF:he', '-SPEC:V', 'LANG:EN', 'N', '-COMP:N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', '-COMP:WH', '-SPEC:ADV', 'PF:he'}
she             ['LANG:EN']
she-            {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', 'LANG:EN', 'N', '-COMP:N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:uWH', 'PF:she', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'LF:she', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', '-COMP:WH', '-SPEC:ADV'}
we              ['LANG:EN']
we-             {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', 'LANG:EN', 'N', '-COMP:N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'LF:we', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', 'PF:we', '-COMP:WH', '-SPEC:ADV'}
you_pl          ['LANG:EN']
you_pl-         {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', 'LANG:EN', 'N', '-COMP:N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', 'LF:you_pl', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', 'PF:you_pl', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'PHI', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
they            ['LANG:EN']
they-           {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'PF:they', 'COMP:uR', 'LF:they', '-SPEC:V', 'LANG:EN', 'N', '-COMP:N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', '-COMP:WH', '-SPEC:ADV'}
it              ['LANG:EN']
it-             {'!COMP:*', '-COMP:P', '-COMP:D', 'LF:it/that', 'LANG:EN', '-SPEC:V', '-SPEC:P', '-SPEC:Neg/fin', '-SPEC:INF', '!PROBE:N', '-COMP:T/fin', '-SPEC:T/fin', '-ARG', '-SPEC:MA/lla', 'OP', '-COMP:uR', 'COMP:N', 'D', 'adjoinable', '-SPEC:C', 'PF:it'}
io              ['LANG:EN']
io-             {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', 'LF:I', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:V', '-SPEC:uWH', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-SPEC:INF', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'PF:io', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', '-COMP:WH', '-SPEC:ADV'}
tu              ['LANG:EN']
tu-             {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:uWH', 'PF:tu', '-SPEC:R', 'LANG:IT', 'COMP:R/D', 'LF:you', '-SPEC:INF', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', '-COMP:WH', '-SPEC:ADV'}
lui             ['LANG:EN']
lui-            {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', 'LF:he', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:uWH', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-SPEC:INF', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'COMP:C', 'PF:lui', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', '-COMP:WH', '-SPEC:ADV'}
lei             ['LANG:EN']
lei-            {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:uWH', '-SPEC:R', 'LANG:IT', 'PF:lei', 'COMP:R/D', '-SPEC:INF', 'LF:she', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', '-COMP:WH', '-SPEC:ADV'}
noi             ['LANG:EN']
noi-            {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:uWH', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-SPEC:INF', '-COMP:A', '-SPEC:T/fin', 'LF:we', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', '-COMP:WH', '-SPEC:ADV', 'PF:noi'}
voi             ['LANG:EN']
voi-            {'-SPEC:N', '-COMP:V', 'PF:voi', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:uWH', 'LF:you_pl', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-SPEC:INF', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', '-COMP:WH', '-SPEC:ADV'}
loro            ['LANG:EN']
loro-           {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', 'LF:they', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:uWH', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-SPEC:INF', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'COMP:C', 'PF:loro', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', '-COMP:WH', '-SPEC:ADV'}
mi              ['LANG:EN']
mi-             {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:uWH', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-SPEC:INF', '-COMP:A', 'CL', '-SPEC:T/fin', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'LF:me', 'PHI_N', 'PF:mi(cl)', '-COMP:WH', '-SPEC:ADV'}
la              ['LANG:EN']
la-             {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', 'PF:la(cl)', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', 'LF:her', '-SPEC:uWH', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-SPEC:INF', '-COMP:A', 'CL', '-SPEC:T/fin', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', '-COMP:WH', '-SPEC:ADV'}
lo              ['LANG:EN']
lo-             {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', 'LF:him', 'N', '-COMP:N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:uWH', 'PF:lo(cl)', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-SPEC:INF', '-COMP:A', 'CL', '-SPEC:T/fin', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', '-COMP:WH', '-SPEC:ADV'}
si              ['LANG:EN']
si-             {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', '-COMP:N', 'N', 'CAL:CL', '-COMP:AUX', 'COMP:R', 'PF:si(cl)', '-SPEC:P', '-COMP:*', '-SPEC:uWH', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-SPEC:INF', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'LF:3sg', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', '-COMP:WH', '-SPEC:ADV'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', 'LF:there', '-SPEC:V', '-COMP:N', 'N', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-COMP:*', '-SPEC:uWH', '-SPEC:R', 'LANG:IT', 'COMP:R/D', '-SPEC:INF', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', 'PHI_N', 'PF:ci', '-COMP:WH', '-SPEC:ADV'}
[-n]            {'PHI:NUM:SG', 'inflectional', 'PHI:PER:1', 'LANG:FI', 'PHI', 'PHI:DET:DEF', 'PHI:HUM:HUM'}
[-t]            {'PHI:NUM:SG', 'inflectional', 'LANG:FI', 'PHI', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:HUM:HUM'}
[-V]            {'inflectional', 'PHI:PER:3', 'LANG:FI', 'PHI', 'PHI:NUM:SG'}
[-mme]          {'PHI:NUM:PL', 'inflectional', 'PHI:PER:1', 'LANG:FI', 'PHI', 'PHI:DET:DEF', 'PHI:HUM:HUM'}
[-mme]          {'PHI:NUM:PL', 'inflectional', 'PHI:PER:1', 'LANG:FI', 'PHI:DET:DEF', 'PHI:HUM:HUM'}
[-tte]          {'PHI:NUM:PL', 'inflectional', 'LANG:FI', 'PHI', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:HUM:HUM'}
[-vat]          {'inflectional', 'PHI:PER:3', 'LANG:FI', 'PHI', 'PHI:NUM:PL'}
[-ni]           {'PHI:NUM:SG', 'inflectional', 'PHI:PER:1', 'LANG:FI', 'PHI', 'PHI:DET:DEF', 'PHI:HUM:HUM'}
[-si]           {'PHI:NUM:SG', 'inflectional', 'LANG:FI', 'PHI', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:HUM:HUM'}
[-nsa]          {'inflectional', 'PHI:PER:3', 'LANG:FI', 'PHI', 'PHI:NUM:SG'}
[-an]           {'inflectional', 'PHI:PER:3', 'LANG:FI', 'PHI:DET:DET', 'PHI', 'PHI:NUM:SG'}
[-nne]          {'PHI:NUM:PL', 'inflectional', 'LANG:FI', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:HUM:HUM'}
[-s]            {'PHI:GEN:F', 'inflectional', 'PHI:PER:3', 'PHI:GEN:M', 'PHI', 'LANG:EN', 'PHI:NUM:SG'}
[-0]            {'inflectional', 'PHI:PER:1', 'PHI', 'PHI:PER:2', 'LANG:EN', 'PHI:NUM:PL', 'PHI:GEN:N', 'PHI:PER:3', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-o]            {'PHI:NUM:SG', 'inflectional', 'PHI:PER:1', 'PHI', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM'}
[-i]            {'PHI:NUM:SG', 'inflectional', 'LANG:IT', 'PHI', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:HUM:HUM'}
[-a]            {'inflectional', 'PHI:PER:3', 'PHI', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-e]            {'inflectional', 'PHI:PER:3', 'PHI', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-iamo]         {'PHI:NUM:PL', 'inflectional', 'PHI:PER:1', 'PHI', 'LANG:IT', 'PHI:DET:DEF', 'PHI:HUM:HUM'}
[-te]           {'PHI:NUM:PL', 'inflectional', 'LANG:IT', 'PHI', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI:HUM:HUM'}
[-no]           {'inflectional', 'PHI:PER:3', 'PHI', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:PL'}
[-nom]          {'NOM', 'inflectional', 'LANG:EN', 'TAIL:FIN,ARG,VAL', 'adjoinable'}
[-par]          {'PAR', 'inflectional', 'TAIL:ARG,-VAL', 'LANG:FI', 'adjoinable'}
[-gen]          {'-float', 'GEN', 'inflectional', 'LANG:EN', 'TAIL:INF,ARG'}
gen             {'-float', 'GEN', 'inflectional', 'LANG:EN', 'TAIL:INF,ARG'}
[-n_acc]        {'n-ACC', 'TAIL:ARG,ASP:BOUNDED', 'inflectional', 'TAIL:PHI', 'LANG:FI', 'TAIL:*POL:NEG', 'adjoinable'}
[-t_acc]        {'TAIL:ARG,ASP:BOUNDED', 't-ACC', 'inflectional', 'LANG:FI', 'TAIL:*POL:NEG', 'adjoinable'}
[-0_acc]        {'TAIL:*PHI', '0_ACC', 'TAIL:ARG,ASP:BOUNDED', 'inflectional', 'LANG:FI', 'TAIL:*POL:NEG', 'adjoinable'}
asp             {'ASP:BOUNDED', 'inflectional', 'LANG:EN'}
a'              {'LF:A', 'a', 'LANG:X', 'PF:a'}
b'              {'LF:B', 'PF:b', 'LANG:X', 'b'}
b''             {'-COMP:c', 'PF:b', 'b', 'LF:B', 'LANG:EN'}
c''             {'LF:C', 'SPEC:a', 'c', 'PF:c', 'LANG:EN'}
c'              {'LF:C', 'PF:c', 'c', 'LANG:X'}
d'              {'LF:D', 'd', 'PF:d', 'LANG:'}
a''             ['LANG:EN']
x'              {'PF:x', 'LF:X', 'x', 'LANG:X'}
y'              {'y', 'LF:Y', 'PF:y', 'LANG:X'}
z'              {'LF:Z', 'z', 'PF:x', 'LANG:X'}
John'           {"N'", 'LF:John', 'PF:John', 'LANG:X'}
admires'        {'PF:admires', 'LF:admires', 'LANG:X', "V'"}
admires''       {'-COMP:v', '-COMP:V', '-SPEC:FORCE', 'LANG:EN', '-COMP:N', 'PHI:DET:_', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', 'PF:admires', 'LF:admires', 'COMP:P', '-VAL', 'V', 'ASP', 'SPEC:D', 'PHI:PER:_', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_'}
Mary'           {"N'", 'LF:mary', 'LANG:X', 'PF:Mary'}
T/fin           {'-SPEC:N', 'COMP:T/prt', '-SPEC:FORCE', '!COMP:*', 'VAL', '!SPEC:D', '-SPEC:V', 'LANG:EN', 'PHI:DET:_', '!PROBE:V', 'COMP:V', 'T/fin', 'SPEC:TO/inf', '-COMP:INF', '-COMP:T/fin', 'PF:T', '-SPEC:Neg', 'COMP:v', 'FIN', '-SPEC:T/fin', 'LF:T', 'T', 'SPEC:D', '-SPEC:v', 'PHI:PER:_', '-SPEC:C/fin', 'PHI:GEN:_', 'ARG', '-SPEC:C', '-SPEC:TO/inf', 'SPEC:*', 'PHI:NUM:_'}
v               {'-SPEC:N', 'v', '!COMP:*', 'COMP:V', '-VAL', 'LANG:EN', 'ASP', 'SPEC:D', 'PF:v', 'PHI:PER:_', 'PHI:DET:_', '!PROBE:V', 'PHI:GEN:_', 'ARG', 'LF:v', 'PHI:NUM:_'}
C/fin           {'-SPEC:N', '!COMP:*', 'VAL', 'C/fin', 'LANG:EN', 'COMP:T/fin', 'COMP:Neg/fin', '!PROBE:FIN', 'LF:C/fin', '-SPEC:T/fin', 'FIN', '-ARG', '-COMP:T/prt', '-COMP:C/fin', '-SPEC:C/fin', 'C', 'PF:C', 'SPEC:*'}
T               {'-SPEC:N', '!COMP:*', 'COMP:T/prt', '-SPEC:FORCE', 'VAL', '-SPEC:V', 'LANG:EN', 'PHI:DET:_', 'ARG', '!PROBE:V', 'COMP:V', '-SPEC:T/fin', 'PF:T', 'FIN', 'COMP:v', '-COMP:NEG', 'LF:T', 'SPEC:D', 'PHI:PER:_', 'PHI:GEN:_', 'T', 'SPEC:*', 'PHI:NUM:_'}
T/prt           {'-SPEC:N', '-SPEC:FORCE', '!COMP:*', 'COMP:T/prt', 'VAL', '-SPEC:V', 'LANG:EN', 'COMP:D', 'PHI:DET:_', 'ARG', 'T/prt', '!PROBE:V', 'COMP:V', 'LF:T/prt', 'FIN', '-SPEC:T/fin', 'COMP:v', '-COMP:NEG', 'PF:T/prt', 'SPEC:D', 'PHI:PER:_', 'PHI:GEN:_', 'T', 'SPEC:*', 'PHI:NUM:_'}
a0              {'A', '-SPEC:A', 'LF:A', '-adjoinable', 'LANG:EN', 'COMP:0', '-SPEC:D', 'PF:A', 'TAIL:D'}
n               {'!SPEC:D', '!SPEC:*', 'LANG:EN', '-COMP:N', '-COMP:AUX', 'COMP:R', '-SPEC:P', 'PHI:DET:_', 'COMP:V', 'COMP:R/D', 'INF', 'COMP:v', 'COMP:P', 'LF:n', '-COMP:WH', 'PHI:GEN:_', 'ARG', 'SPEC:*', '-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', '!COMP:*', 'VAL', 'COMP:uR', 'n', '-SPEC:V', 'N', '-SPEC:uWH', '-SPEC:R', 'PF:n', '-SPEC:INF', '-COMP:A', '-SPEC:T/fin', 'COMP:C', 'COMP:0', '-COMP:C/fin', '-SPEC:C/fin', 'PHI:PER:_', '-SPEC:ADV', 'PHI:NUM:_'}
impass          {'LF:impass', '-SPEC:N', 'v', '!COMP:*', 'COMP:V', '-VAL', 'PF:impass', 'LANG:EN', 'ASP', 'SPEC:D', 'PHI:PER:_', 'PHI:DET:_', '!PROBE:V', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_'}
cau             {'-SPEC:N', 'PF:Cau', 'v', '!COMP:*', 'COMP:V', '-VAL', 'LANG:EN', 'ASP', 'SPEC:D', 'PHI:PER:_', 'PHI:DET:_', 'LF:v/Cause', '!PROBE:V', 'PHI:GEN:_', 'ARG', 'PHI:NUM:_'}
INF             {'COMP:v', 'LF:INF', '-COMP:FORCE', '!COMP:*', '-COMP:T/fin', '-SPEC:V', 'LANG:EN', 'PF:INF', '-COMP:C/fin', 'COMP:V', 'INF', '-SPEC:T/fin'}
prtcpl          {'-SPEC:N', 'COMP:T/prt', '-SPEC:FORCE', '!COMP:*', '-COMP:FORCE', 'VAL', '-SPEC:V', 'LANG:EN', 'COMP:D', 'PHI:DET:_', 'ARG', 'T/prt', '!PROBE:V', 'COMP:V', 'INF', 'LF:T/prt', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:v', '-COMP:NEG', 'FIN', 'PF:T/prt', 'SPEC:D', 'PHI:PER:_', '-COMP:C/fin', 'PHI:GEN:_', 'T', 'SPEC:*', 'PHI:NUM:_'}
TO/inf          {'-COMP:FORCE', '!COMP:*', 'LF:TO/inf', '-SPEC:V', 'LANG:EN', '?ARG', 'COMP:V', '-COMP:T/fin', 'INF', '!COMP:V', '-SPEC:T/fin', 'COMP:v', '-VAL', 'adjoinable', 'TO/inf', '-SPEC:v', '-COMP:C/fin', 'PF:TO/inf'}
A/inf           {'-COMP:FORCE', '!COMP:*', '-SPEC:V', '?VAL', 'LF:A/inf', 'LANG:EN', '?ARG', 'COMP:V', '-SPEC:Neg/fin', 'PF:A/inf', 'INF', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:v', '-COMP:C/fin', 'A/inf', 'SPEC:*'}
ARE/inf         {'LF:ARE/inf', '-COMP:FORCE', '!COMP:*', 'VAL', '-adjoinable', '-SPEC:V', 'LANG:EN', '?ARG', 'COMP:V', '-COMP:T/fin', 'INF', '-SPEC:T/fin', 'PF:are', 'COMP:v', 'ARE/inf', '-COMP:C/fin', 'SPEC:*'}
ESSA/inf        {'-SPEC:N', '-COMP:FORCE', '-SPEC:FORCE', '!COMP:*', '-SPEC:V', '?VAL', 'LANG:EN', 'ESSA/inf', 'ADV', '?ARG', 'COMP:V', '-SPEC:Neg/fin', 'INF', 'PF:essa', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:v', 'LF:while', 'adjoinable', '-COMP:C/fin', 'TAIL:T', 'SPEC:*'}
TUA/inf         {'-SPEC:N', '-COMP:FORCE', '-SPEC:FORCE', '!COMP:*', 'VAL', '!SPEC:*', '-SPEC:V', 'LANG:EN', 'PHI:DET:_', 'TUA/inf', 'ADV', 'COMP:V', '-SPEC:Neg/fin', 'INF', '-COMP:T/fin', '-SPEC:T/fin', 'COMP:v', 'LF:after', 'PF:tua', 'adjoinable', 'PHI:PER:_', '-COMP:C/fin', 'PHI:GEN:_', 'ARG', 'TAIL:T', 'SPEC:*', 'PHI:NUM:_'}
VA/inf          {'-SPEC:N', '-COMP:FORCE', '!COMP:*', 'SPEC:*', 'VAL', '!SPEC:*', '-SPEC:V', 'LANG:EN', 'PHI:DET:_', 'COMP:V', '-COMP:T/fin', 'INF', '-SPEC:T/fin', 'COMP:v', 'PHI:PER:_', '-COMP:C/fin', 'PF:vAn', 'VA/inf', 'PHI:GEN:_', 'ARG', 'LF:VA', 'PHI:NUM:_'}
MA/ssa          {'-SPEC:N', '-SPEC:FORCE', 'LANG:EN', 'PHI:DET:_', 'ADV', 'COMP:V', '-SPEC:*', '-SPEC:Neg/fin', 'MA/inf', 'MA/ssa', '-SPEC:T/fin', 'COMP:v', '-VAL', 'TAIL:V', 'adjoinable', 'PHI:PER:_', 'LF:in_doing', 'PHI:GEN:_', 'ARG', 'PF:massa', 'PHI:NUM:_'}
MA/tta          {'-SPEC:N', 'LF:without_doing', '-SPEC:FORCE', '-VAL', 'LANG:EN', 'PHI:DET:_', 'adjoinable', 'ADV', 'PHI:NUM:_', '-SPEC:Neg/fin', 'PHI:PER:_', 'TAIL:T', 'PHI:GEN:_', 'ARG', 'MA/inf', 'PF:matta', '-SPEC:T/fin'}
MA/lla          {'LANG:EN', 'PHI:DET:_', 'ADV', 'COMP:V', '-SPEC:Neg/fin', 'COMP:v', '-VAL', 'PF:malla', 'PHI:GEN:_', 'ARG', '-SPEC:N', '-SPEC:FORCE', 'MA/inf', '-SPEC:T/fin', 'adjoinable', 'PHI:PER:_', 'LF:by_doing', 'TAIL:T', 'PHI:NUM:_'}
MA/inf          {'LANG:EN', 'PHI:DET:_', 'ADV', 'COMP:V', '-SPEC:Neg/fin', 'COMP:v', 'PF:maan', '-VAL', 'TAIL:V', 'PHI:GEN:_', 'ARG', '-SPEC:N', '-SPEC:FORCE', 'LF:to_do', 'MA/inf', '-SPEC:T/fin', 'adjoinable', 'PHI:PER:_', 'PHI:NUM:_'}
E/inf           {'-SPEC:N', '-ARG', '-SPEC:FORCE', 'LF:by', '-VAL', 'LANG:FI', 'PF:en', 'adjoinable', 'ADV', '-SPEC:Neg/fin', 'TAIL:T', 'SPEC:*', '-SPEC:T/fin'}
BE-             {'-COMP:v', '-COMP:V', '!COMP:*', 'COMP:T/prt', '-SPEC:FORCE', 'LF:BE', 'LANG:EN', '-COMP:N', 'SPEC:ADV', 'SPEC:P', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:T/fin', '-ARG', 'PF:BE', 'COMP:P', 'COPULA', '-VAL', 'V', 'ASP', 'SPEC:D'}
D               {'!COMP:*', '-COMP:P', '-SPEC:V', 'LANG:EN', '-SPEC:P', 'LF:D', '-SPEC:Neg/fin', '-SPEC:INF', '!PROBE:N', '-COMP:T/fin', '-SPEC:T/fin', '-ARG', '-SPEC:MA/lla', 'OP', '-COMP:uR', 'COMP:N', 'D', 'adjoinable', 'PF:D', '-SPEC:C', '-COMP:D'}
D/rel           {'!COMP:*', 'OP:_', 'D/rel', 'OP:REL', 'LANG:EN', '-SPEC:P', '-SPEC:V', '-SPEC:Neg/fin', 'LF:D/rel', '!PROBE:N', '-SPEC:INF', 'PF:D/rel', '-COMP:T/fin', '-SPEC:T/fin', '-ARG', '-SPEC:MA/lla', 'OP', '-COMP:uR', 'COMP:N', 'D', '-COMP:C/fin', 'adjoinable', '-SPEC:C', '-COMP:D'}
P               {'-COMP:uWH', '-SPEC:N', 'PF:P', '-SPEC:FORCE', '!COMP:*', '-SPEC:V', 'LANG:EN', '-COMP:N', 'COMP:D', '-SPEC:P', '-COMP:ADV', 'ARG', 'PHI:DET:_', '-SPEC:*', '-SPEC:Neg/fin', '-SPEC:INF', '-COMP:T/fin', 'P', '-SPEC:T/fin', 'LF:P', '-SPEC:iR', '-VAL', 'adjoinable', '-float', '-SPEC:v', '-SPEC:C/fin', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:C', 'PHI:NUM:_'}
pro             ['LANG:EN']
pro-            {'-SPEC:N', '-COMP:V', '-COMP:v', 'SPEC:A', '-SPEC:FORCE', 'COMP:uR', '-SPEC:V', 'LANG:EN', 'N', '-COMP:N', 'PF:(pro)', 'LF:pro', '-COMP:AUX', 'COMP:R', '-SPEC:P', '-SPEC:uWH', '-SPEC:R', '-SPEC:INF', 'COMP:R/D', '-COMP:A', '-SPEC:T/fin', 'COMP:P', 'PHI', 'COMP:C', '-COMP:C/fin', '-SPEC:C/fin', '-COMP:WH', '-SPEC:ADV'}
cl              {'CL', 'RIGHT:PRG', 'RIGHT:ARE/inf', 'LEFT:T/fin', 'inflectional', 'LEFT:D,CL', 'LANG:EN'}
inc             {'INCORPORATED', 'LANG:EN', 'inflectional'}
sg              {'LANG:EN', 'inflectional', 'PHI:NUM:SG'}
pl              {'LANG:EN', 'inflectional', 'PHI:NUM:PL'}
1p              {'LANG:EN', 'inflectional', 'PHI:PER:1'}
2p              {'PHI:PER:2', 'LANG:EN', 'inflectional'}
3p              {'PHI:PER:3', 'LANG:EN', 'inflectional'}
def             {'PHI:DET:DEF', 'LANG:EN', 'inflectional'}
indef           {'PHI:DET:INDEF', 'LANG:EN', 'inflectional'}
hum             {'LANG:EN', 'inflectional', 'PHI:HUM:HUM'}
nonhum          {'PHI:HUM:NONHUM', 'LANG:EN', 'inflectional'}
m               {'PHI:GEN:M', 'LANG:EN', 'inflectional'}
f               {'PHI:GEN:F', 'LANG:EN', 'inflectional'}
nom             {'NOM', 'LANG:EN', 'inflectional', 'TAIL:FIN,!COMP:*,VAL'}
acc             {'TAIL:v', 'LANG:EN', 'inflectional', 'ACC'}
dat             {'DAT', 'LANG:EN', 'inflectional', 'TAIL:v'}
uC/op           {'uC/op', 'LANG:EN', 'inflectional'}
wh              {'OP:_', 'LANG:EN', 'inflectional', 'OP:WH'}
wh_             {'FORCE:OP:WH', 'OP', 'inflectional', 'OP:_', 'LANG:EN'}
top             {'OP:TOP', 'LANG:EN', 'inflectional'}
foc             {'LANG:EN', 'inflectional', 'OP:FOC'}
C/op            {'OP:C/OP', 'LANG:EN', 'inflectional'}
rel             {'-COMP:C/fin', 'inflectional', 'OP:_', 'adjoinable', 'OP:REL', 'LANG:EN', 'SPEC:D'}
Q               {'OP', 'inflectional', 'OP:Q', 'LANG:EN', 'OP:WH'}
