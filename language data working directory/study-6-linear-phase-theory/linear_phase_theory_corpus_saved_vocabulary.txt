ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'-SPEC:T/fin', '-SPEC:Neg/fin', 'adjoinable', '-VAL', '!COMP:*', 'COMP:D', '-SPEC:V', '-SPEC:FORCE', '-COMP:N', '-SPEC:C', '-SPEC:v', '-COMP:ADV', '-COMP:uWH', 'PF:a', '-SPEC:ADV', '-COMP:T/fin', 'P', '-SPEC:iWH', 'LF:to', '-SPEC:INF', '-SPEC:*', '-SPEC:C/fin', 'COMP:ARE/inf', 'LANG:IT', '-SPEC:P', '-SPEC:N', '-ARG', '-SPEC:iR'}
a_D             {'OP', '-SPEC:T/fin', '!PROBE:N', '-SPEC:Neg/fin', 'adjoinable', '!COMP:*', '-SPEC:V', 'PF:D', '-SPEC:MA/lla', '-SPEC:C', 'LF:D', 'LANG:EN', '-COMP:uR', '-SPEC:D', '-COMP:T/fin', 'COMP:N', '-COMP:D', 'D', '-SPEC:INF', '-SPEC:P', '-SPEC:N', '-ARG'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-SPEC:T/fin', 'PF:admire', '!COMP:*', '-VAL', 'COMP:D', '-SPEC:FORCE', '-COMP:N', 'LANG:EN', '-COMP:P', 'PHI:PER:_', 'LF:admire', 'SPEC:P', 'SPEC:TO/inf', 'ARG', '-COMP:Neg', 'SPEC:ADV', 'V', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:Neg', 'CLASS:TR', '-COMP:v', 'ASP', 'PHI:GEN:_', '-COMP:V'}
admire*         ['LANG:EN']
T/fin*          {'NO_DET', 'LF:T', "PF:T/fin'", '-VAL', 'CAT:T/fin', 'LANG:EN', '!SPEC:*', 'NO_NUMBER'}
v*              {'NO_DET', 'PF:v', 'LANG:EN', 'CAT:v', 'LF:v', '-VAL', 'NO_NUMBER'}
admire**        ['LANG:EN']
T/fin**         {'NO_DET', 'LF:T', 'PHI:PER:3', 'NO_PERSON', '-VAL', 'CAT:T/fin', "PF:T/fin''", 'LANG:EN', '!SPEC:*', 'NO_NUMBER'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'-SPEC:T/fin', '-VAL', 'COMP:D', '-SPEC:FORCE', '-COMP:N', 'PF:adora', 'PHI:PER:_', 'LF:admire', 'SPEC:P', 'SPEC:TO/inf', 'COMP:P', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:IT', 'ARG', '-COMP:v', 'ASP', 'PHI:GEN:_', '-COMP:V'}
antaa           ['LANG:FI']
anta-           {'SPEC:D', '-SPEC:T/fin', '+SEM:directional', '!COMP:*', '-VAL', 'COMP:D', '-SPEC:FORCE', '-COMP:N', '-COMP:FIN', 'CLASS:DITR', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'PF:antaa', 'ASP:BOUNDED', 'LANG:FI', 'ASP', 'ARG', '-COMP:v', 'LF:give', '-COMP:V'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'SPEC:D', '-SPEC:T/fin', '-VAL', 'COMP:D', '-SPEC:FORCE', '-COMP:N', 'LANG:EN', 'PHI:PER:_', 'SPEC:P', 'LF:ask', 'SPEC:TO/inf', 'PF:ask', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'ARG', '-COMP:v', 'ASP', 'SEM:internal', 'PHI:GEN:_', '-COMP:V'}
ask-            {'SPEC:D', '-SPEC:T/fin', '-VAL', 'COMP:D', '-SPEC:FORCE', '-COMP:N', 'LANG:EN', 'PHI:PER:_', 'SPEC:P', 'LF:ask', 'SPEC:TO/inf', 'PF:ask', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'ARG', '-COMP:v', 'ASP', 'SEM:internal', 'PHI:GEN:_', '-COMP:V'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SEM:directional', '-SPEC:uWH', 'LF:key', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'PF:avain', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'SPEC:A', 'LANG:FI', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SEM:directional', '-SPEC:uWH', 'LF:car', 'PF:auto', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'SPEC:A', 'LANG:FI', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
city            {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', 'LANG:EN', '-COMP:ADV', 'PF:city', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'COMP:R', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'LF:city', '-COMP:A', '-COMP:V'}
che             ['LANG:IT']
che-            {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PHI_N', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-COMP:V', '-SPEC:P', 'LANG:IT', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', 'LF:who', '-COMP:*', 'PF:che'}
chiamato        ['LANG:IT']
chiamata-       {'-SPEC:T/fin', '-VAL', 'LF:called', '-SPEC:FORCE', '-COMP:N', 'PF:chiamato', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:IT', 'ARG', '-COMP:v', 'ASP', 'PHI:GEN:_', '-COMP:V'}
danno           {'LF:damage', '-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PF:danno', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', 'LANG:IT', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'-SPEC:T/fin', '-VAL', 'COMP:D', '-SPEC:FORCE', '-COMP:N', 'LF:detest', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'PF:detest', 'COMP:ARE/inf', 'LANG:IT', 'ARG', '-COMP:v', 'ASP', 'SEM:internal', 'PHI:GEN:_', '-COMP:V'}
devono          ['LANG:EN']
deva-           {'SPEC:D', '-SPEC:T/fin', 'LF:must', '-VAL', '-SPEC:FORCE', '-COMP:N', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'PF:deva', '-ASP', 'COMP:ARE/inf', 'LANG:IT', 'ARG', '-COMP:v', 'SEM:internal', 'PHI:GEN:_', '-COMP:V'}
di              {'-SPEC:T/fin', '-SPEC:Neg/fin', '-VAL', '!COMP:*', 'COMP:D', '-SPEC:V', '-SPEC:FORCE', '-COMP:N', '-SPEC:C', '-SPEC:v', 'SPEC:*', '-COMP:ADV', 'PHI:PER:_', '-COMP:uWH', '-SPEC:ADV', 'PF:di', '-COMP:T/fin', 'PHI:NUM:_', 'P', '-SPEC:iWH', 'PHI:DET:_', '-adjoinable', 'LANG:FI', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:P', 'LF:of', 'ARG', '-SPEC:N', '-SPEC:iR'}
does            {'SPEC:D', 'PHI:PER:3', 'VAL', 'T', '-SPEC:T/fin', 'COMP:v', '!COMP:*', '!PROBE:V', 'COMP:V', '-SPEC:FORCE', 'COMP:D', '-SPEC:V', '-SPEC:N', '-SPEC:v', 'SPEC:*', 'LANG:EN', 'PF:does', '!SPEC:*', 'PHI:PER:_', 'PHI:GEN:F', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:NUM:_', 'PHI:DET:_', 'COMP:T/prt', 'LF:does', '-COMP:INF', 'PHI:NUM:SG', '-SPEC:C/fin', 'PHI:GEN:M', 'COMP:Neg', 'ARG', 'T/fin', 'FIN', 'SPEC:INF', 'PHI:GEN:_'}
does_C          ['LANG:EN']
does-           {'SPEC:D', 'PHI:PER:3', 'VAL', 'T', '-SPEC:T/fin', 'COMP:v', '!COMP:*', '!PROBE:V', 'COMP:V', '-SPEC:FORCE', 'COMP:D', '-SPEC:V', '-SPEC:N', '-SPEC:v', 'SPEC:*', 'LANG:EN', 'PF:does', '!SPEC:*', 'PHI:PER:_', 'PHI:GEN:F', 'SPEC:TO/inf', '-COMP:T/fin', 'PHI:NUM:_', 'PHI:DET:_', 'COMP:T/prt', 'LF:does', '-COMP:INF', 'PHI:NUM:SG', '-SPEC:C/fin', 'PHI:GEN:M', 'COMP:Neg', 'ARG', 'T/fin', 'FIN', 'SPEC:INF', 'PHI:GEN:_'}
dorme           ['LANG:IT']
dorme-          {'!SPEC:D', 'PF:dorme', '-SPEC:T/fin', '-VAL', '-SPEC:FORCE', '-COMP:N', 'LANG:EN', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'LF:sleep', 'COMP:P', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'ARG', '-COMP:v', 'ASP', 'PHI:GEN:_', '-COMP:V'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'NEG', 'VAL', '-SPEC:T/fin', '!COMP:*', 'SPEC:*', '-SPEC:T', 'LF:neg', '!SPEC:*', 'PHI:PER:_', 'Neg/fin', 'PHI:NUM:_', 'PHI:DET:_', 'COMP:T/prt', 'SEM:internal', '%SPEC:INF', 'LANG:FI', 'POL:NEG', 'ARG', 'FIN', 'PF:ei', '!COMP:T'}
e-              {'NEG', 'VAL', '-SPEC:T/fin', '!COMP:*', 'SPEC:*', '-SPEC:T', 'LF:neg', '!SPEC:*', 'PHI:PER:_', 'Neg/fin', 'PHI:NUM:_', 'PHI:DET:_', 'COMP:T/prt', 'SEM:internal', '%SPEC:INF', 'LANG:FI', 'POL:NEG', 'ARG', 'FIN', 'PF:ei', '!COMP:T'}
elaa            ['LANG:FI']
ela-            {'SPEC:D', '-SPEC:T/fin', 'CLASS:INTR', '-VAL', '-SPEC:FORCE', '-COMP:N', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', '-COMP:D', 'PHI:NUM:_', 'PHI:DET:_', 'LF:live', 'PF:elaa', 'LANG:FI', 'ARG', '-COMP:v', 'ASP', '-COMP:V'}
etsii           ['LANG:FI']
etsi-           {'-SPEC:T/fin', '-VAL', 'COMP:D', '!COMP:D', '-SPEC:FORCE', '-COMP:N', 'LF:search', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', 'PF:etsi', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:FI', 'ARG', '-COMP:v', 'ASP', '-COMP:V'}
etta            {'-VAL', '!COMP:*', '-ARG', 'COMP:C/fin', '!PROBE:T/fin', 'LANG:FI', '-SPEC:*', 'LF:that', 'COMP:T/fin', 'FORCE', 'PF:ettÃ¤', 'FIN'}
flow'           {'SPEC:D', 'LF:flow', '-SPEC:T/fin', '-VAL', '-SPEC:FORCE', '-COMP:N', 'LANG:EN', 'PF:flow', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'ARG', '-COMP:v', 'ASP', 'PHI:GEN:_', '-COMP:V'}
from            {'TAIL:V,+SEM:directional', '-SPEC:T/fin', '-SPEC:Neg/fin', 'adjoinable', '-VAL', '!COMP:*', 'COMP:D', '-SPEC:V', '-SPEC:FORCE', '-COMP:N', '-SPEC:C', '-SPEC:v', '-float', 'LANG:EN', '-COMP:ADV', 'PHI:PER:_', '-COMP:uWH', '-SPEC:ADV', '-COMP:T/fin', 'PHI:NUM:_', 'P', '-SPEC:iWH', 'LF:from', 'PHI:DET:_', '-SPEC:INF', '-SPEC:*', '-SPEC:C/fin', '-SPEC:P', 'ARG', '-SPEC:N', 'PF:from', 'PHI:GEN:_', '-SPEC:iR'}
gave            ['LANG:EN']
give-           {'SPEC:D', '-SPEC:T/fin', '+SEM:directional', '!COMP:*', '-VAL', 'COMP:D', '-SPEC:FORCE', '-COMP:N', '-COMP:FIN', 'CLASS:DITR', 'LANG:EN', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PF:give', 'PHI:DET:_', 'ASP', 'ARG', '-COMP:v', 'LF:give', 'PHI:GEN:_', '-COMP:V'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SEM:directional', '-SPEC:uWH', '-COMP:ADV', 'LF:Giuseppe', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PF:Giuseppe', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', 'LANG:IT', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'PF:haluaa', '-SPEC:T/fin', '!COMP:*', '-VAL', 'COMP:D', '-SPEC:FORCE', '-COMP:N', 'COMP:A/inf', '-COMP:P', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'ARG', 'SPEC:ADV', 'LF:want', 'V', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', 'ASP:BOUNDED', 'LANG:FI', '-SPEC:*', 'CLASS:TR', '-COMP:v', 'ASP', 'SEM:internal', '-COMP:V'}
hairitsee       ['LANG:FI']
hairitse-       {'SPEC:D', '-SPEC:T/fin', '-VAL', '!COMP:D', '-SPEC:FORCE', '-COMP:FIN', '-COMP:N', 'PHI:PER:_', 'SPEC:P', 'LF:disturb', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PF:hairitsee', 'PHI:DET:_', 'LANG:FI', 'ARG', '-COMP:v', 'ASP', '-COMP:V'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'SPEC:D', 'LF:have', '-SPEC:T/fin', '-VAL', '-SPEC:FORCE', '-COMP:N', 'SPEC:*', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'COMP:T', '-ASP', 'LANG:IT', 'PF:ha', 'ARG', '-COMP:v', 'SEM:internal', 'PHI:GEN:_', '-COMP:V'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'SPEC:D', '-SPEC:T/fin', 'CLASS:INTR', '-VAL', 'LF:disappear', '-SPEC:FORCE', '-COMP:N', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', '-COMP:D', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:FI', 'PF:havia', 'ARG', '-COMP:v', 'ASP', '-COMP:V'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'-SPEC:T/fin', '!COMP:*', '-VAL', 'COMP:D', '!COMP:D', '-SPEC:FORCE', '-COMP:FIN', '-COMP:N', '-COMP:P', 'PF:ihaile-', 'LF:admire', 'SPEC:P', 'PHI:PER:_', 'SPEC:TO/inf', 'ARG', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:FI', 'CLASS:TR', '-COMP:v', 'ASP', '-COMP:V'}
il              {'OP', '-SPEC:T/fin', '!PROBE:N', 'PF:il', '-SPEC:Neg/fin', 'adjoinable', '!COMP:*', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:C', 'LF:the', '-COMP:uR', '-SPEC:D', '-COMP:T/fin', 'COMP:N', '-COMP:D', 'D', '-SPEC:INF', '-SPEC:P', 'LANG:IT', '-SPEC:N', '-ARG'}
i               {'OP', '-SPEC:T/fin', '!PROBE:N', 'PF:il', '-SPEC:Neg/fin', 'adjoinable', '!COMP:*', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:C', 'LF:the', '-COMP:uR', '-SPEC:D', '-COMP:T/fin', 'COMP:N', '-COMP:D', 'D', '-SPEC:INF', '-SPEC:P', 'LANG:IT', '-SPEC:N', '-ARG'}
in              {'LF:in', '-SPEC:T/fin', '-SPEC:Neg/fin', 'adjoinable', '-VAL', '!COMP:*', 'COMP:D', '-SPEC:V', '-SPEC:FORCE', '-COMP:N', '-SPEC:C', '-SPEC:v', '-COMP:ADV', 'PHI:PER:_', '-COMP:uWH', '-SPEC:ADV', '-COMP:T/fin', 'PHI:NUM:_', 'P', '-SPEC:iWH', 'PHI:DET:_', 'PF:in', '-SPEC:INF', '-SPEC:C/fin', 'LANG:IT', '-SPEC:P', 'ARG', '-SPEC:N', 'PHI:GEN:_', '-SPEC:iR'}
infermieri      {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PF:infermieri', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-COMP:V', '-SPEC:P', 'LANG:IT', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', 'LF:nurses'}
is              ['LANG:EN']
be-             {'SPEC:D', '-SPEC:T/fin', '!COMP:*', '-VAL', '-SPEC:FORCE', '-COMP:N', 'LANG:EN', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', 'PF:be', '-COMP:TO/inf', 'LF:be', '-COMP:v', 'ASP', '-ARG', 'COPULA', '-COMP:V'}
istuuko         ['LANG:FI']
istuu-          {'SPEC:D', '-SPEC:T/fin', 'CLASS:INTR', '-VAL', '-COMP:v', '-SPEC:FORCE', '-COMP:N', 'LF:sit', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', '-COMP:D', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:FI', 'ARG', 'PF:istuu', 'ASP', '-COMP:V'}
John            ['LANG:EN']
John-           {'PF:John', '-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SEM:directional', 'LF:John', '-SPEC:uWH', 'LANG:EN', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'SPEC:A', '-adjoinable', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'LF:Jukka', '-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SEM:directional', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'SPEC:A', 'LANG:FI', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', 'PF:Jukka', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
juosten         ['LANG:FI']
juokse-         {'-SPEC:T/fin', 'PF:juokse-', '-VAL', '-SPEC:FORCE', '-COMP:N', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LF:run', 'LANG:FI', 'ARG', '-COMP:v', 'ASP', '-COMP:V'}
istuu           ['LANG:FI']
istu-           {'-SPEC:T/fin', '-VAL', '-COMP:v', '-SPEC:FORCE', '-COMP:N', 'LF:sit', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:FI', 'ARG', 'PF:istuu', 'ASP', '-COMP:V'}
kaksi           {'PF:kaksi', 'PHI:DET:_', 'COMP:n', 'LF:two', '-VAL', 'LANG:FI', 'PHI:NUM:SG', 'SPEC:*', 'PHI:PER:_', 'ARG', 'NUM', 'TAIL:ARG,VAL,FIN', 'COMP:N', 'PHI:NUM:_'}
kaksi           {'PF:kaksi', 'COMP:n', 'LF:two', 'SPEC:*', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'LANG:EN', 'NUM', 'COMP:N'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'PF:kaksi', 'SPEC:*', 'COMP:n', 'LF:two', 'NUM', 'LANG:FI', 'COMP:N'}
kaupunkia       ['LANG:EN']
kaupunki        {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:P', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', 'PF:kaupunki', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', '-COMP:D', 'COMP:R/D', 'COMP:R', 'SPEC:A', 'LANG:FI', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'LF:city', '-COMP:A', '-COMP:V'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'-SPEC:T/fin', 'LF:order', '-VAL', '-SPEC:FORCE', '-COMP:N', 'PF:kaske', 'SEM:external', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'COMP:P', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:FI', 'ARG', '-COMP:v', 'ASP', '!COMP:A/inf', '-COMP:V'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'PF:kello', '-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'SPEC:A', 'LANG:FI', '-SPEC:INF', '-COMP:WH', 'LF:watch', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
kello0-         {'SPEC:D', 'PF:kello', '2SPEC', 'LANG:FI', '0', 'LF:watch'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', 'PF:key', '-SPEC:N', '-SPEC:uWH', 'LF:key', 'LANG:EN', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SEM:directional', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'LF:book', 'SPEC:A', 'LANG:FI', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', 'PF:kirja', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
kohti           {'TAIL:V', '-SPEC:T/fin', '-SPEC:Neg/fin', 'adjoinable', '-VAL', '!COMP:*', 'COMP:D', '-SPEC:V', '-SPEC:FORCE', '-COMP:N', '-SPEC:C', '-SPEC:v', 'SPEC:*', 'PF:kohti', '-COMP:ADV', 'PHI:PER:_', '-COMP:uWH', '-SPEC:ADV', '-COMP:T/fin', 'PHI:NUM:_', 'P', '-SPEC:iWH', 'PHI:DET:_', 'LANG:FI', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:P', 'ARG', '-SPEC:N', '-SPEC:iR', 'LF:towards'}
koko            {'TAIL:T', 'OP', '-SPEC:T/fin', '!PROBE:N', 'adjoinable', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:C', 'PF:koko', '-COMP:uR', '-SPEC:D', '-COMP:T/fin', 'COMP:N', '-COMP:D', 'D', 'LANG:FI', '-SPEC:INF', '-SPEC:P', '-SPEC:N', '-ARG', 'LF:all'}
kuka            ['LANG:FI']
kuka-           {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', 'PHI', '-COMP:D', 'COMP:R/D', 'SPEC:A', 'LANG:FI', '-SPEC:INF', '-COMP:WH', '-SPEC:R', 'PF:kuka', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', 'LF:who', '-COMP:V'}
kuorsaa-        {'-SPEC:T/fin', '-VAL', '-SPEC:FORCE', '-COMP:N', 'LF:snore', 'PHI:PER:_', 'SPEC:P', '-COMP:T/fin', 'SPEC:TO/inf', '-COMP:D', 'COMP:P', 'V', 'SPEC:ADV', 'PF:kuorsaa', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:FI', '-COMP:WH', 'ARG', '-COMP:v', 'ASP', '-COMP:V'}
kuorsaamalla    ['LANG:FI']
lahella         {'!SPEC:D', 'VAL', '!PROBE:V', '-SPEC:FORCE', '-SPEC:C', '-SPEC:v', 'SPEC:*', '!SPEC:*', 'PHI:NUM:_', 'P', 'PHI:DET:_', 'PF:lahella', 'LANG:FI', '-SPEC:INF', 'LF:near', 'COMP:v', '-SPEC:T/fin', '-SPEC:Neg/fin', 'adjoinable', '!COMP:*', 'COMP:D', '-SPEC:V', 'COMP:V', '-COMP:N', '-COMP:FORCE', '-COMP:ADV', 'PHI:PER:_', 'INF', '-COMP:uWH', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', '-SPEC:iWH', '-SPEC:C/fin', '-SPEC:P', 'ARG', '-SPEC:N', '-SPEC:iR'}
lahella         {'-SPEC:T/fin', '-SPEC:Neg/fin', 'adjoinable', '!COMP:*', '-VAL', 'COMP:D', '-SPEC:V', '!COMP:D', '-SPEC:FORCE', '-COMP:N', '-SPEC:C', '-SPEC:v', 'SPEC:*', '-COMP:ADV', 'PHI:PER:_', '-COMP:uWH', '-SPEC:ADV', '-COMP:T/fin', 'PHI:NUM:_', 'P', '-SPEC:iWH', 'PHI:DET:_', 'PF:lahella', 'LANG:FI', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:P', 'LF:near', 'ARG', '-SPEC:N', '-SPEC:iR'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'SPEC:D', '-SPEC:T/fin', 'CLASS:INTR', '-VAL', '-SPEC:FORCE', '-COMP:N', 'PF:lahtea', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', '-COMP:D', 'COMP:PP', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:FI', 'LF:leave', 'ARG', '-COMP:v', 'ASP', '-COMP:V'}
lavano          ['LANG:IT']
lava-           {'-SPEC:T/fin', '!COMP:*', '-VAL', 'COMP:D', '-SPEC:FORCE', '-COMP:N', 'PHI:PER:_', 'SPEC:P', 'PF:lava', 'LF:wash', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:IT', 'ARG', '-COMP:v', 'ASP', 'PHI:GEN:_', '-COMP:V'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'OP', '-SPEC:T/fin', '!PROBE:N', '-SPEC:Neg/fin', 'adjoinable', '!COMP:*', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:C', 'LF:D', '-COMP:uR', '-SPEC:D', '-COMP:T/fin', 'COMP:N', '-COMP:D', 'D', '-SPEC:INF', 'PF:le', '-SPEC:P', 'LANG:IT', '-SPEC:N', '-ARG'}
leaves          ['LANG:EN']
leave           {'!SPEC:D', '-SPEC:T/fin', '-VAL', 'PF:leave', '-SPEC:FORCE', '-COMP:N', 'LANG:EN', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'COMP:P', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LF:leave', 'ARG', '-COMP:v', 'ASP', 'PHI:GEN:_', '-COMP:V'}
leave-          {'!SPEC:D', '-SPEC:T/fin', '-VAL', 'PF:leave', '-SPEC:FORCE', '-COMP:N', 'LANG:EN', 'PHI:PER:_', 'SPEC:P', '-COMP:T/fin', 'SPEC:TO/inf', 'COMP:P', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LF:leave', 'ARG', '-COMP:v', 'ASP', 'PHI:GEN:_', '-COMP:V'}
like-           {'-SPEC:T/fin', '-VAL', '!COMP:D', '-SPEC:FORCE', '-COMP:N', 'PF:like', 'LANG:EN', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'COMP:P', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LF:like', 'ARG', '-COMP:v', 'ASP', 'PHI:GEN:_', '-COMP:V'}
likes           ['LANG:EN']
like            {'-SPEC:T/fin', '-VAL', '!COMP:D', '-SPEC:FORCE', '-COMP:N', 'PF:like', 'LANG:EN', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'COMP:P', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LF:like', 'ARG', '-COMP:v', 'ASP', 'PHI:GEN:_', '-COMP:V'}
little          ['LANG:EN']
little-         {'SPEC:D', 'LANG:EN', 'LF:little', '2SPEC', 'PF:little-', '0'}
lle             {'TAIL:V,+SEM:directional', '-SPEC:T/fin', 'LF:for', '-SPEC:Neg/fin', '+SEM:directional', '-VAL', 'adjoinable', '!COMP:*', 'COMP:D', '-SPEC:FORCE', '-SPEC:V', '-COMP:N', '-SPEC:C', '-SPEC:v', '-COMP:ADV', 'PHI:PER:_', '-COMP:uWH', '-SPEC:ADV', '-COMP:T/fin', 'PHI:NUM:_', 'P', '-SPEC:iWH', 'PHI:DET:_', 'PF:P(lle)', 'LANG:FI', '-SPEC:INF', '-SPEC:*', '-SPEC:C/fin', '-SPEC:P', 'ARG', '-SPEC:N', '-SPEC:iR'}
lla             {'TAIL:T', '-SPEC:T/fin', '-SPEC:Neg/fin', 'adjoinable', '-VAL', '!COMP:*', 'COMP:D', '-SPEC:V', '-SPEC:FORCE', '-COMP:N', '-SPEC:C', '-SPEC:v', 'TAIL:*V', 'SPEC:*', '-COMP:ADV', 'PHI:PER:_', 'LF:by', '-COMP:uWH', '-SPEC:ADV', '-COMP:T/fin', 'PHI:NUM:_', 'P', '-SPEC:iWH', 'PHI:DET:_', 'PF:P(lla)', 'LANG:FI', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:P', 'ARG', '-SPEC:N', '-SPEC:iR'}
Luisa           ['LANG:IT']
Luisa-          {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', 'LF:Luisa', '-COMP:N', '-SPEC:N', '-SEM:directional', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', 'LANG:IT', '-SPEC:C/fin', 'PF:Luisa', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
lukemalla       ['LANG:FI']
luke-           {'-SPEC:T/fin', '!COMP:*', '-VAL', 'PF:luke', 'COMP:D', '-SPEC:FORCE', '-COMP:N', '-COMP:P', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'ARG', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:FI', 'LF:read', 'CLASS:TR', '-COMP:v', 'ASP', '-COMP:V'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'-SPEC:T/fin', '!COMP:*', '-VAL', 'COMP:D', '!COMP:D', '-SPEC:FORCE', 'PF:loyta-', '-COMP:N', '-COMP:P', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'ARG', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LF:find', 'ASP:BOUNDED', 'LANG:FI', 'CLASS:TR', '-COMP:v', 'ASP', '-COMP:V'}
Mary            ['LANG:EN']
Mary-           {'-SPEC:T/fin', 'LF:Mary', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SEM:directional', 'PF:Mary', '-SPEC:uWH', 'LANG:EN', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'SPEC:A', '-adjoinable', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SEM:directional', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'PF:Merja', 'COMP:P', '-COMP:D', 'COMP:R/D', 'SPEC:A', '-adjoinable', 'LANG:FI', 'LF:Merja', '-SPEC:INF', '-SPEC:R', '-COMP:WH', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'TAIL:T', 'PF:malla', '-SPEC:T/fin', '-SPEC:Neg/fin', 'adjoinable', '-SPEC:FORCE', 'LANG:FI', 'SPEC:*', 'ADV', 'LF:by', '-SPEC:N', 'MA/inf', 'COMP:v'}
meren           ['LANG:FI']
mere-           {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', 'LF:ocean', '-COMP:D', 'COMP:R/D', 'SPEC:A', 'LANG:FI', '-SPEC:INF', '-COMP:WH', '-SPEC:R', 'PF:meri', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
mistake         {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', 'LANG:EN', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', 'PF:mistake', '-SPEC:P', '-SPEC:C/fin', 'LF:mistake', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', 'PF:mika-', '-COMP:ADV', 'LF:what', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'SPEC:A', 'LANG:FI', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'-SPEC:T/fin', '+SEM:directional', '!COMP:*', '-VAL', 'COMP:D', '-SPEC:FORCE', 'PF:move', '-COMP:N', 'LANGN:EN', '-COMP:P', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'ARG', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LF:move', 'CLASS:TR', '-COMP:v', 'ASP', 'PHI:GEN:_', '-COMP:V'}
mukavasti       ['LANG:EN']
mukava-         {'SPEC:D', '2SPEC', 'PF:mukavasti', 'LF:comfortably', 'LANG:FI', '0'}
must            {'SPEC:D', 'VAL', 'T', '-SPEC:T/fin', 'LF:must', 'COMP:v', '!COMP:*', '!PROBE:V', 'COMP:V', '-SPEC:FORCE', 'COMP:D', 'PF:must', '-SPEC:V', '-SPEC:N', '-SPEC:v', 'SPEC:*', 'LANG:EN', '!SPEC:*', 'PHI:PER:_', '-COMP:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', 'PHI:DET:_', 'COMP:T/prt', '-COMP:INF', '-SPEC:C/fin', 'COMP:Neg', 'MODAL', 'ARG', 'T/fin', 'FIN', 'SPEC:INF', 'PHI:GEN:_'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'-SPEC:T/fin', '!COMP:*', '-VAL', 'COMP:D', '-SPEC:FORCE', '-COMP:N', '-COMP:P', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'ARG', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'PF:myy', 'ASP:BOUNDED', 'LANG:FI', 'LF:sell', 'CLASS:TR', '-COMP:v', 'ASP', '-COMP:V'}
naki            ['LANG:FI']
nake-           {'-COMP:MA/inf', '-SPEC:T/fin', '!COMP:*', '-VAL', 'COMP:D', '-SPEC:FORCE', '-COMP:N', '-COMP:P', 'PHI:PER:_', 'SPEC:P', 'PF:nake', '-COMP:ESSA/inf', 'SPEC:TO/inf', 'ARG', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'ASP:BOUNDED', 'LANG:FI', 'LF:see', 'CLASS:TR', '-COMP:v', 'ASP', '-COMP:V'}
nayttaa         ['LANG:FI']
naytta-         {'SPEC:D', '-SPEC:T/fin', '!COMP:VA/inf', '-VAL', '-SPEC:FORCE', '-COMP:N', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'PF:naytta', 'LANG:FI', 'LF:seem', 'ARG', '-COMP:v', 'ASP', 'SEM:internal', '-COMP:V'}
ndo             {'PF:PRG', 'VAL', '-SPEC:T/fin', 'LF:ing', '!COMP:*', 'COMP:V', '-COMP:FORCE', '!PROBE:V', '-SPEC:V', 'LANG:EN', 'INF', '-COMP:T/fin', '-COMP:C/fin', '?ARG', 'PRG', 'COMP:v'}
ne              {'PHI:PER:3', 'OP', '-SPEC:T/fin', '!PROBE:N', '-SPEC:Neg/fin', 'adjoinable', '!COMP:*', '-SPEC:V', 'LF:those', '-SPEC:MA/lla', '-SPEC:C', '-COMP:uR', '-SPEC:D', '-COMP:T/fin', 'COMP:N', '-COMP:D', 'D', 'LANG:FI', '-SPEC:INF', 'PHI:NUM:PL', 'PF:ne', '-SPEC:P', '-SPEC:N', '-ARG'}
niiden          ['LANG:EN']
nen             {'adjoinable', 'LF:ing', 'COMP:0', 'LANG:FI', 'A', '-SPEC:A', 'SPEC:*', 'TAIL:D', 'PF:a', '-SPEC:D'}
not             {'PHI:DET:_', '-SPEC:T/fin', '-VAL', '!COMP:*', 'PHI:NUM:_', 'LF:not', '-COMP:C', '-COMP:FIN', 'SPEC:*', 'Neg', 'PF:not', 'POL:NEG', 'LANG:EN', 'PHI:PER:_', 'ARG', 'PHI:GEN:_', '-COMP:D'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'SPEC:D', '-SPEC:T/fin', 'CLASS:INTR', '-VAL', '-SPEC:FORCE', '-COMP:N', '-COMP:T', 'PHI:PER:_', 'SPEC:P', '-COMP:Neg/fin', '-COMP:T/fin', 'SPEC:TO/inf', 'LF:sleep', 'SPEC:ADV', 'COMP:P', 'V', '-COMP:D', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:FI', 'PF:nukku', 'ARG', '-COMP:v', 'ASP', '-COMP:V'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'LF:possessions', 'COMP:R/D', 'SPEC:A', 'PF:omaisuuden', 'LANG:FI', '-SPEC:INF', '-SPEC:R', '-COMP:WH', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
operatoria      ['LANG:IT']
operatoria-     {'SPEC:D', 'PF:operatoria', 'LF:operation', 'LANG:IT', '2SPEC', '0'}
ostaa           ['LANG:FI']
osta-           {'-SPEC:T/fin', '!COMP:*', '-VAL', 'LF:buy', 'COMP:D', '-SPEC:FORCE', '-COMP:N', '-COMP:P', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'ARG', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'ASP:BOUNDED', 'PF:osta', 'LANG:FI', 'CLASS:TR', '-COMP:v', 'ASP', '-COMP:V'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', 'LF:day', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'SEM:nonreferential', 'SPEC:A', 'LANG:FI', 'PF:paiva', '-SPEC:INF', '-SPEC:R', '-COMP:WH', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
Pariisia        ['LANG:FI']
Pariisi-        {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'SPEC:A', 'LANG:FI', '-SPEC:INF', '-COMP:WH', '-SPEC:R', 'LF:Paris', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', 'PF:Pariisi', '-COMP:V'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-SPEC:T/fin', 'PF:Pekka', '-SPEC:V', 'LF:Pekka', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SEM:directional', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'SPEC:A', 'LANG:FI', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
pelottaa        ['LANG:FI']
pelkaa-         {'-SPEC:T/fin', '!COMP:*', '-VAL', 'COMP:D', 'PF:pelkaa', '-SPEC:FORCE', '-COMP:N', '-COMP:P', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'ARG', 'SPEC:ADV', 'COMP:P', 'V', 'LF:fear', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:FI', 'CLASS:TR', '-COMP:v', 'ASP', '-COMP:V'}
persuades       ['LANG:EN']
persuade-       {'PF:persuade', '-SPEC:T/fin', '-VAL', '-SPEC:FORCE', '-COMP:N', 'COMP:TO/inf', 'LANG:EN', 'SEM:external', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'COMP:P', 'SPEC:ADV', 'V', 'LF:persuade', 'PHI:NUM:_', 'PHI:DET:_', 'ARG', '-COMP:v', 'ASP', 'PHI:GEN:_', '-COMP:V'}
peruuntui       ['LANG:FI']
peruuntu-       {'SPEC:D', '-SPEC:T/fin', '-VAL', '-SPEC:FORCE', '-COMP:N', 'LF:cancelled', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'COMP:P', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:FI', 'PF:peruuntui', 'ARG', '-COMP:v', 'ASP', '-COMP:V'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'-SPEC:T/fin', '!COMP:*', '-VAL', 'COMP:D', '-SPEC:FORCE', '-COMP:N', '-COMP:P', 'PHI:PER:_', 'SPEC:P', 'LF:wash', 'SPEC:TO/inf', 'ARG', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'PF:pese', 'ASP:BOUNDED', 'LANG:FI', 'CLASS:TR', '-COMP:v', 'ASP', '-COMP:V'}
pese-           {'-SPEC:T/fin', '!COMP:*', '-VAL', 'COMP:D', '-SPEC:FORCE', '-COMP:N', '-COMP:P', 'PHI:PER:_', 'SPEC:P', 'LF:wash', 'SPEC:TO/inf', 'ARG', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'PF:pese', 'LANG:FI', 'CLASS:TR', '-COMP:v', 'ASP', '-COMP:V'}
petardi         {'PF:petardi', '-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'LF:firecrackers', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', 'LANG:IT', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
pieni           ['LANG:FI']
pieni-          {'SPEC:D', 'PF:pieni-', '2SPEC', 'LF:small', 'LANG:FI', '0'}
poikien         ['LANG:FI']
poika-          {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', 'LF:boy', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PF:poika', 'SPEC:A', 'LANG:FI', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
puhelinta       ['LANG:FI']
puhelin-        {'SPEC:D', '2SPEC', 'LF:phone', 'LANG:FI', '0', 'PF:puhelin'}
punainen        ['LANG:FI']
puna-           {'LF:red', 'SPEC:D', 'PF:puna-', '2SPEC', 'LANG:FI', '0'}
presupposto     {'-SPEC:T/fin', 'LF:presupposition', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', 'PF:presupposto', '-SPEC:P', 'LANG:IT', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
primary         {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', 'PF:primary', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'LF:nurse', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', 'LANG:IT', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
promises        ['LANG:EN']
promise-        {'SPEC:D', '-SPEC:T/fin', '-VAL', 'COMP:D', '-SPEC:FORCE', '-COMP:N', 'LANG:EN', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:ADV', 'PF:promise', 'V', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', 'LF:promise', 'ARG', '-COMP:v', 'ASP', 'SEM:internal', 'PHI:GEN:_', '-COMP:V'}
pyytaa          ['LANG:FI']
pyyta-          {'-SPEC:T/fin', '-VAL', '-SPEC:FORCE', '-COMP:N', 'SEM:external', 'PHI:PER:_', 'SPEC:P', 'LF:ask', 'SPEC:TO/inf', 'COMP:P', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'PF:pyyda', 'LANG:FI', 'ARG', '-COMP:v', 'ASP', '-COMP:V'}
raukesi         ['LANG:FI']
raukea-         {'LF:terminate', '-SPEC:T/fin', '-VAL', '-SPEC:FORCE', '-COMP:N', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'PF:raukea', 'LANG:FI', 'ARG', '-COMP:v', 'ASP', '-COMP:V'}
red             ['LANG:EN']
red-            {'LF:red', 'SPEC:D', 'LANG:EN', '2SPEC', 'PF:red', '0'}
saavuttaa       ['LANG:FI']
saavutta-       {'-SPEC:T/fin', '!COMP:*', '-VAL', 'COMP:D', '!COMP:D', '-SPEC:FORCE', '-COMP:N', '-COMP:P', 'PHI:PER:_', 'SPEC:P', 'LF:reach', 'SPEC:TO/inf', 'ARG', 'PF:saavutta-', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'ASP:BOUNDED', 'LANG:FI', 'CLASS:TR', '-COMP:v', 'ASP', '-COMP:V'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'SPEC:D', '-SPEC:T/fin', '-VAL', '-SPEC:FORCE', '-COMP:N', 'COMP:FORCE', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'COMP:VA/inf', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LF:say', 'LANG:FI', 'PF:sano-', 'ARG', '-COMP:v', 'ASP', '-COMP:V'}
said            ['LANG:EN']
say'            {'SPEC:D', '-SPEC:T/fin', '-VAL', '!COMP:FORCE', 'PF:say', '-SPEC:FORCE', '-COMP:N', 'LANG:EN', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'COMP:P', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LF:say', 'ARG', '-COMP:v', 'ASP', 'PHI:GEN:_', '-COMP:V'}
say-            {'SPEC:D', '-SPEC:T/fin', '-VAL', '!COMP:FORCE', 'PF:say', '-SPEC:FORCE', '-COMP:N', 'LANG:EN', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'COMP:P', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LF:say', 'ARG', '-COMP:v', 'ASP', 'PHI:GEN:_', '-COMP:V'}
sala            ['LANG:IT']
sala-           {'-SPEC:T/fin', 'LF:room', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'SPEC:A', '-SPEC:INF', 'PF:sala', '-SPEC:R', '-COMP:WH', '-SPEC:P', 'LANG:IT', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
scoppiati       ['LANG:IT']
scoppia-        {'-SPEC:T/fin', '-VAL', '-SPEC:FORCE', '-COMP:N', 'PF:scoppia', 'PHI:PER:_', 'SPEC:P', 'LF:explode', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:IT', 'ARG', '-COMP:v', 'ASP', 'PHI:GEN:_', '-COMP:V'}
sen             {'OP', '-SPEC:T/fin', '!PROBE:N', '-SPEC:Neg/fin', 'adjoinable', '!COMP:*', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:C', 'PF:sen', 'TAIL:ASP', '-COMP:uR', '-SPEC:D', '-COMP:T/fin', 'LF:the/that', 'COMP:N', '-COMP:D', 'D', 'LANG:FI', '-SPEC:INF', '-SPEC:P', 'TAIL:*POL:NEG', '-SPEC:N', '-ARG', 'TAIL:PHI'}
se'             {'OP', '-SPEC:T/fin', '!PROBE:N', '-SPEC:Neg/fin', 'adjoinable', '!COMP:*', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:C', '-COMP:uR', '-SPEC:D', '-COMP:T/fin', 'LF:the/that', 'COMP:N', '-COMP:D', 'PF:se', 'D', 'LANG:FI', '-SPEC:INF', '-SPEC:P', '-SPEC:N', '-ARG'}
sentenza        {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PF:sentenza', 'SPEC:A', '-SPEC:INF', '-COMP:WH', 'LF:sentence', '-SPEC:R', '-SPEC:P', 'LANG:IT', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
Seine           ['LANG:EN']
Seine-          {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', 'LANG:EN', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', 'LF:Seine', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PF:Seine', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
sembrano        ['LANG:IT']
sembra-         {'SPEC:D', '-SPEC:T/fin', '-VAL', '-SPEC:FORCE', '-COMP:N', 'LANG:EN', 'SPEC:P', 'PF:sembra', 'SPEC:TO/inf', '-COMP:D', 'SPEC:ADV', 'V', 'COMP:P', '-ASP', 'LF:seem', '-COMP:v', '-ARG', '!COMP:ARE/inf', '-COMP:V'}
sleeps          ['LANG:EN']
sleep           {'SPEC:D', '-SPEC:T/fin', 'CLASS:INTR', '-VAL', '-SPEC:FORCE', '-COMP:N', 'LANG:EN', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'LF:sleep', 'PF:sleep', 'SPEC:ADV', 'V', 'COMP:P', '-COMP:D', 'PHI:NUM:_', 'PHI:DET:_', 'ARG', '-COMP:v', 'ASP', 'PHI:GEN:_', '-COMP:V'}
sleep-          {'SPEC:D', '-SPEC:T/fin', 'CLASS:INTR', '-VAL', '-SPEC:FORCE', '-COMP:N', 'LANG:EN', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'LF:sleep', 'PF:sleep', 'SPEC:ADV', 'V', 'COMP:P', '-COMP:D', 'PHI:NUM:_', 'PHI:DET:_', 'ARG', '-COMP:v', 'ASP', 'PHI:GEN:_', '-COMP:V'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', 'LF:agreement', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'SPEC:A', 'LANG:FI', 'PF:sopimus', '-SPEC:INF', '-SPEC:R', '-COMP:WH', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '!COMP:A/inf', '-COMP:A', '-COMP:V'}
spinge          ['LANG:IT']
spinge-         {'-SPEC:T/fin', 'PF:spinge', '-VAL', '!COMP:D', '-SPEC:FORCE', '-COMP:N', '-COMP:P', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:ADV', 'PHI:NUM:_', 'V', 'PHI:DET:_', 'LF:push', 'LANG:IT', 'ARG', '-COMP:v', 'ASP', 'PHI:GEN:_', '-COMP:V'}
ssa             {'TAIL:V', 'LF:in', '-SPEC:T/fin', '-SPEC:Neg/fin', 'adjoinable', '-VAL', '!COMP:*', 'COMP:D', '-SPEC:V', '-SPEC:FORCE', '-COMP:N', 'COMP:n/MA', '-SPEC:C', '-SPEC:v', 'SPEC:*', '-COMP:ADV', 'PHI:PER:_', '-COMP:uWH', '-SPEC:ADV', '-COMP:T/fin', 'PHI:NUM:_', 'P', '-SPEC:iWH', 'PHI:DET:_', 'PF:ssa', 'LANG:FI', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:P', 'ARG', '-SPEC:N', '-SPEC:iR'}
stanno          ['LANG:IT']
sta-            {'SPEC:D', '-SPEC:T/fin', '-VAL', '-SPEC:FORCE', '-COMP:N', 'LANG:EN', 'PF:sta', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', 'LF:stay', 'PHI:NUM:_', 'PHI:DET:_', 'COMP:PRG', '-ASP', 'ARG', '-COMP:v', 'SEM:internal', 'PHI:GEN:_', '-COMP:V'}
sti             {'PF:sti', 'TAIL:T', '-SPEC:T/fin', '-SPEC:Neg/fin', 'adjoinable', '!COMP:*', '-SPEC:FORCE', 'LANG:FI', 'SPEC:*', 'ADV', 'LF:by', '-SPEC:N', '-ARG'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-SPEC:T/fin', '-COMP:A', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PF:sukka-', 'SPEC:A', 'LANG:FI', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', 'LF:socks', '-COMP:V'}
talo            {'PF:talo', '-SPEC:T/fin', 'LF:house', 'N', '-SPEC:FORCE', '-SPEC:V', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'SPEC:A', 'LANG:FI', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
tama            ['LANG:EN']
tama-           {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', 'LF:this', '-COMP:ADV', '-COMP:AUX', 'PF:tama', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', 'PHI', '-COMP:D', 'COMP:R/D', 'SPEC:A', 'LANG:FI', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'-SPEC:T/fin', 'LF:must', '-VAL', '-SPEC:FORCE', '-COMP:N', 'SPEC:*', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PF:taytyy', 'PHI:DET:_', '-ASP', 'LANG:FI', '-COMP:V', 'MODAL', 'ARG', '-COMP:v', 'FIN', '!COMP:A/inf'}
teki            ['LANG:FI']
teke-           {'LF:make', '-SPEC:T/fin', '-COMP:A/inf', '!COMP:*', '-VAL', 'COMP:D', '!COMP:D', '-SPEC:FORCE', '-COMP:N', '-COMP:P', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'ARG', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'ASP:BOUNDED', 'LANG:FI', 'PF:teke', 'CLASS:TR', '-COMP:v', 'ASP', '-COMP:V'}
that            {'-VAL', '!COMP:*', '-ARG', 'COMP:C/fin', '!PROBE:T/fin', '-SPEC:*', 'LF:that', 'LANG:EN', 'PF:that', 'COMP:T/fin', 'FORCE', 'FIN'}
the             {'OP', '-SPEC:T/fin', '!PROBE:N', '-SPEC:Neg/fin', 'adjoinable', '!COMP:*', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:C', 'LANG:EN', 'PHI:DEF:DEF', 'LF:the', '-COMP:uR', '-SPEC:D', '-COMP:T/fin', 'COMP:N', '-COMP:D', 'PF:the', 'D', '-SPEC:INF', '-SPEC:P', '-SPEC:N', '-ARG'}
to              {'TAIL:V,+SEM:directional', '-SPEC:T/fin', '-SPEC:Neg/fin', '+SEM:directional', '-VAL', 'adjoinable', '!COMP:*', 'COMP:D', '-SPEC:FORCE', '-SPEC:V', '-COMP:N', '-SPEC:C', '-SPEC:v', '-float', 'LANG:EN', '-COMP:ADV', 'PHI:PER:_', '-COMP:uWH', '-SPEC:ADV', '-COMP:T/fin', 'ARG', 'PHI:NUM:_', 'P', '-SPEC:iWH', 'PHI:DET:_', 'LF:to', '-SPEC:INF', '-SPEC:*', '-SPEC:C/fin', '-SPEC:P', 'PF:to', '-SPEC:N', 'PHI:GEN:_', '-SPEC:iR'}
to_inf          {'-SPEC:T/fin', 'adjoinable', '-VAL', '!COMP:*', 'COMP:V', '-COMP:FORCE', '!PROBE:V', '-SPEC:V', 'PF:TO/inf', '-SPEC:v', 'LANG:EN', 'TO/inf', 'INF', '-COMP:T/fin', '-COMP:C/fin', 'LF:TO/inf', '?ARG', 'COMP:v'}
towards         {'TAIL:V', '-SPEC:T/fin', '-SPEC:Neg/fin', 'adjoinable', '-VAL', '!COMP:*', 'COMP:D', '-SPEC:V', '-SPEC:FORCE', '-COMP:N', '-SPEC:C', '-SPEC:v', '-float', 'LANG:EN', '-COMP:ADV', 'PHI:PER:_', '-COMP:uWH', '-SPEC:ADV', 'PF:towards', '-COMP:T/fin', 'PHI:NUM:_', 'P', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:INF', '-SPEC:*', '-SPEC:C/fin', '-SPEC:P', 'ARG', '-SPEC:N', '-SPEC:iR', 'PHI:GEN:_', 'LF:towards'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'-SPEC:T/fin', '!COMP:*', '-VAL', 'COMP:D', '-SPEC:FORCE', '-COMP:N', 'PF:tonaise', '-COMP:P', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'ARG', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:FI', 'LF:nudge', 'CLASS:TR', '-COMP:v', 'ASP', '-COMP:V'}
tta             {'-SPEC:T/fin', '-SPEC:Neg/fin', 'adjoinable', '-VAL', '!COMP:*', 'COMP:D', '-SPEC:V', '-SPEC:FORCE', '-COMP:N', 'COMP:n/MA', '-SPEC:C', 'PF:tta', '-SPEC:v', 'SPEC:*', '-COMP:ADV', 'PHI:PER:_', '-COMP:uWH', '-SPEC:ADV', 'LF:without', '-COMP:T/fin', 'PHI:NUM:_', 'P', '-SPEC:iWH', 'PHI:DET:_', 'LANG:FI', '-SPEC:INF', 'ADV', '-SPEC:C/fin', '-SPEC:P', 'ARG', '-SPEC:N', '-SPEC:iR'}
tries           ['LANG:EN']
try-            {'SPEC:D', '-SPEC:T/fin', '-VAL', '!COMP:-ARG', 'PF:try', '-SPEC:FORCE', '-COMP:N', '!COMP:TO/inf', 'LANG:EN', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LF:try', 'ARG', '-COMP:v', 'ASP', 'SEM:internal', 'PHI:GEN:_', '-COMP:V'}
verifiche       {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'LF:verification', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PF:verifiche', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', 'LANG:IT', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'SPEC:D', 'LF:flow', '-SPEC:T/fin', 'PF:virtaa', '-VAL', '-SPEC:FORCE', '-COMP:N', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', '-COMP:D', 'SPEC:ADV', 'V', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:FI', '!COMP:P', 'ARG', '-COMP:v', 'ASP', '-COMP:V'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'-SPEC:T/fin', '!COMP:*', '-VAL', '-SPEC:FORCE', '-COMP:N', 'LANG:EN', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:ADV', 'LF:want', 'V', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:*', 'PF:volu', 'ARG', '-COMP:v', 'ASP', 'SEM:internal', 'PHI:GEN:_', '-COMP:V'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'LF:win', '-SPEC:T/fin', '!COMP:*', '-VAL', 'COMP:D', '-SPEC:FORCE', '-COMP:N', 'SEM:achievement', 'LANG:EN', '-COMP:P', 'PHI:PER:_', 'SPEC:P', 'PF:voitta', 'SPEC:TO/inf', 'ARG', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'ASP:BOUNDED', 'CLASS:TR', '-COMP:v', 'ASP', 'PHI:GEN:_', '-COMP:V'}
wants           ['LANG:EN']
want-           {'-SPEC:T/fin', '!COMP:*', '-VAL', 'COMP:D', '-SPEC:FORCE', '-COMP:N', '-SPEC:TO/inf', 'COMP:TO/inf', 'LANG:EN', '-COMP:P', 'PHI:PER:_', 'SPEC:P', 'ARG', 'SPEC:ADV', 'LF:want', 'V', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', 'PF:want', 'CLASS:TR', '-COMP:v', 'ASP', 'PHI:GEN:_', '-COMP:V'}
what            ['LANG:EN']
what-           {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', 'LANG:EN', '-COMP:ADV', 'PF:what', 'LF:what', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PHI_N', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:*', '-COMP:V'}
which           {'OP', '-SPEC:T/fin', '!PROBE:N', '-SPEC:Neg/fin', 'adjoinable', '!COMP:*', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:C', 'PF:which', 'LANG:EN', '-COMP:uR', '-SPEC:D', '-COMP:T/fin', 'COMP:N', '-COMP:D', 'LF:which', 'D', '-SPEC:INF', '-SPEC:P', '-SPEC:N', '-ARG', 'OP:WH'}
who             ['LANG:EN']
who-            {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', 'LANG:EN', '-COMP:ADV', '-COMP:AUX', 'PF:who', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PHI_N', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', 'LF:who', '-COMP:*', '-COMP:V'}
whether         {'PF:whether', 'OP', '-VAL', '!COMP:*', 'COMP:C/fin', 'Q', 'LF:whether', 'LANG:EN', 'FORCE', 'OP:Q', '!PROBE:T/fin', '-SPEC:*', 'FIN', 'COMP:T/fin', '-ARG', 'OP:WH'}
yrittaa         ['LANG:FI']
yritta-         {'SPEC:D', '-SPEC:T/fin', '-VAL', '!COMP:-ARG', '-SPEC:FORCE', '-COMP:N', 'PF:yritta', 'LANG:EN', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LF:try', '-COMP:V', 'ARG', '-COMP:v', 'ASP', 'SEM:internal', 'PHI:GEN:_', '!COMP:A/inf'}
mina            ['LANG:EN']
mina-           {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', 'PF:mina', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PHI_N', 'LANG:FI', 'SPEC:A', '-SPEC:INF', '-SPEC:R', '-COMP:WH', '-SPEC:P', '-SPEC:C/fin', 'LF:I', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:*', '-COMP:V'}
sina            ['LANG:EN']
sina-           {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', 'PF:sina', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PHI_N', 'LANG:FI', 'LF:you', 'SPEC:A', '-SPEC:INF', '-SPEC:R', '-COMP:WH', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:*', '-COMP:V'}
han             ['LANG:EN']
han-            {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', 'PF:han', '-COMP:D', 'COMP:R/D', 'LF:s/he', 'PHI_N', 'LANG:FI', 'SPEC:A', '-SPEC:INF', '-SPEC:R', '-COMP:WH', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:*', '-COMP:V'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'LF:we', 'COMP:R/D', 'PHI_N', 'LANG:FI', 'SPEC:A', '-SPEC:INF', '-SPEC:R', '-COMP:WH', 'PF:me', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:*', '-COMP:V'}
te              ['LANG:EN']
te-             {'-SPEC:T/fin', 'PF:te', 'N', '-SPEC:FORCE', '-SPEC:V', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PHI_N', 'LANG:FI', 'LF:you', 'SPEC:A', '-SPEC:INF', '-SPEC:R', '-COMP:WH', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:*', '-COMP:V'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he-             {'-SPEC:T/fin', 'LF:they', 'PF:he', 'N', '-SPEC:FORCE', '-SPEC:V', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PHI_N', 'LANG:FI', 'SPEC:A', '-SPEC:INF', '-SPEC:R', '-COMP:WH', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:*', '-COMP:V'}
he-             {'LF:he', '-SPEC:T/fin', 'PF:he', 'N', '-SPEC:FORCE', '-SPEC:V', '-COMP:N', '-SPEC:N', '-SPEC:uWH', 'LANG:EN', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PHI_N', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:*', '-COMP:V'}
se              ['LANG:FI']
se-             {'OP', '-SPEC:T/fin', '!PROBE:N', '-SPEC:Neg/fin', 'adjoinable', '!COMP:*', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:C', 'LF:it/that', '-COMP:uR', '-SPEC:D', '-COMP:T/fin', 'COMP:N', '-COMP:D', 'PF:se', 'D', 'LANG:FI', '-SPEC:INF', '-SPEC:P', '-SPEC:N', '-ARG'}
I               ['LANG:EN']
I-              {'-SPEC:T/fin', '-SPEC:V', 'N', 'PF:I', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', 'LANG:EN', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PHI_N', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', 'LF:I', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:*', '-COMP:V'}
you             ['LANG:EN']
you-            {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', 'LANG:EN', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PHI_N', 'SPEC:A', 'LF:you', 'PF:you', '-SPEC:INF', '-SPEC:R', '-COMP:WH', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:*', '-COMP:V'}
he              ['LANG:EN']
she             ['LANG:EN']
she-            {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', 'LANG:EN', '-COMP:ADV', 'PF:she', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PHI_N', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', 'LF:she', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:*', '-COMP:V'}
we              ['LANG:EN']
we-             {'-SPEC:T/fin', 'PF:we', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', 'LANG:EN', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'LF:we', 'COMP:R/D', 'PHI_N', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:*', '-COMP:V'}
you_pl          ['LANG:EN']
you_pl-         {'LF:you_pl', '-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', 'LANG:EN', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', 'PHI', '-COMP:D', 'COMP:R/D', 'SPEC:A', 'PF:you_pl', '-SPEC:INF', '-SPEC:R', '-COMP:WH', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
they            ['LANG:EN']
they-           {'-SPEC:T/fin', 'LF:they', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', 'PF:they', '-SPEC:uWH', 'LANG:EN', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PHI_N', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:*', '-COMP:V'}
it              ['LANG:EN']
it-             {'OP', '-SPEC:T/fin', '!PROBE:N', '-SPEC:Neg/fin', 'adjoinable', '!COMP:*', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:C', 'LANG:EN', 'LF:it/that', '-COMP:uR', '-SPEC:D', '-COMP:T/fin', 'COMP:N', '-COMP:D', 'D', '-SPEC:INF', 'PF:it', '-SPEC:P', '-SPEC:N', '-ARG'}
io              ['LANG:EN']
io-             {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PF:io', 'PHI_N', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', 'LANG:IT', '-SPEC:C/fin', 'LF:I', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:*', '-COMP:V'}
tu              ['LANG:EN']
tu-             {'PF:tu', '-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PHI_N', 'SPEC:A', 'LF:you', '-SPEC:INF', '-SPEC:R', '-COMP:WH', '-SPEC:P', 'LANG:IT', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:*', '-COMP:V'}
lui             ['LANG:EN']
lui-            {'LF:he', '-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PHI_N', 'PF:lui', 'SPEC:A', '-SPEC:INF', '-SPEC:R', '-COMP:WH', '-SPEC:P', 'LANG:IT', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:*', '-COMP:V'}
lei             ['LANG:EN']
lei-            {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', 'PF:lei', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PHI_N', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', 'LANG:IT', '-SPEC:C/fin', 'LF:she', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:*', '-COMP:V'}
noi             ['LANG:EN']
noi-            {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'LF:we', 'COMP:R/D', 'PHI_N', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', 'LANG:IT', '-SPEC:C/fin', 'PF:noi', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:*', '-COMP:V'}
voi             ['LANG:EN']
voi-            {'LF:you_pl', '-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PF:voi', 'PHI_N', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', 'LANG:IT', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:*', '-COMP:V'}
loro            ['LANG:EN']
loro-           {'-SPEC:T/fin', 'LF:they', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PHI_N', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-COMP:V', '-SPEC:P', 'LANG:IT', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:*', 'PF:loro'}
mi              ['LANG:EN']
mi-             {'N', '-SPEC:FORCE', 'CL', '-SPEC:uWH', 'COMP:uR', 'COMP:P', 'LF:me', 'PHI_N', 'SPEC:A', '-SPEC:INF', '-SPEC:R', '-COMP:v', 'COMP:R', '-SPEC:T/fin', '-SPEC:V', '-COMP:N', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'PF:mi(cl)', '-COMP:D', 'COMP:R/D', '-COMP:WH', '-SPEC:P', 'LANG:IT', '-SPEC:C/fin', '-SPEC:N', '-COMP:A', '-COMP:*', '-COMP:V'}
la              ['LANG:EN']
la-             {'N', '-SPEC:FORCE', 'CL', '-SPEC:uWH', 'COMP:uR', 'COMP:P', 'PF:la(cl)', 'PHI_N', 'SPEC:A', '-SPEC:INF', '-SPEC:R', '-COMP:v', 'COMP:R', '-SPEC:T/fin', '-SPEC:V', '-COMP:N', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', '-COMP:D', 'COMP:R/D', '-COMP:WH', 'LF:her', '-SPEC:P', 'LANG:IT', '-SPEC:C/fin', '-SPEC:N', '-COMP:A', '-COMP:*', '-COMP:V'}
lo              ['LANG:EN']
lo-             {'N', '-SPEC:FORCE', 'CL', '-SPEC:uWH', 'COMP:uR', 'COMP:P', 'PHI_N', 'SPEC:A', '-SPEC:INF', '-SPEC:R', '-COMP:v', 'PF:lo(cl)', 'COMP:R', '-SPEC:T/fin', '-SPEC:V', '-COMP:N', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', 'LF:him', '-COMP:T/fin', '-COMP:C/fin', '-COMP:D', 'COMP:R/D', '-COMP:WH', '-SPEC:P', 'LANG:IT', '-SPEC:C/fin', '-SPEC:N', '-COMP:A', '-COMP:*', '-COMP:V'}
si              ['LANG:EN']
si-             {'PF:si(cl)', 'N', '-SPEC:FORCE', '-SPEC:uWH', 'COMP:uR', 'COMP:P', 'PHI_N', 'CAL:CL', 'SPEC:A', '-SPEC:INF', '-SPEC:R', '-COMP:v', 'COMP:R', '-SPEC:T/fin', '-SPEC:V', '-COMP:N', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', '-COMP:D', 'COMP:R/D', 'LF:3sg', '-COMP:WH', '-SPEC:P', 'LANG:IT', '-SPEC:C/fin', '-SPEC:N', '-COMP:A', '-COMP:*', '-COMP:V'}
gli             ['LANG:EN']
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-SPEC:T/fin', 'PF:ci', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:uWH', 'LF:there', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', '-COMP:D', 'COMP:R/D', 'PHI_N', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', 'LANG:IT', '-SPEC:C/fin', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:*', '-COMP:V'}
[-n]            {'PHI', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:1'}
[-t]            {'PHI', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:NUM:SG', 'LANG:FI'}
[-V]            {'PHI', 'PHI:PER:3', 'inflectional', 'LANG:FI', 'PHI:NUM:SG'}
[-mme]          {'PHI', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:1', 'PHI:NUM:PL'}
[-mme]          {'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:PER:1', 'PHI:NUM:PL'}
[-tte]          {'PHI', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI:PER:2', 'LANG:FI', 'PHI:NUM:PL'}
[-vat]          {'PHI', 'PHI:PER:3', 'inflectional', 'LANG:FI', 'PHI:NUM:PL'}
[-ni]           {'PHI', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI', 'PHI:NUM:SG', 'PHI:PER:1'}
[-si]           {'PHI', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:NUM:SG', 'LANG:FI'}
[-nsa]          {'PHI', 'PHI:PER:3', 'LANG:FI', 'inflectional'}
[-an]           {'PHI', 'PHI:PER:3', 'LANG:FI', 'inflectional'}
[-nne]          {'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM', 'PHI:PER:2', 'LANG:FI', 'PHI:NUM:PL'}
[-s]            {'PHI', 'PHI:PER:3', 'LANG:EN', 'PHI:GEN:M', 'inflectional', 'PHI:GEN:F', 'PHI:NUM:SG'}
[-0]            {'PHI', 'PHI:PER:3', 'inflectional', 'PHI:PER:2', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI:NUM:PL', 'PHI:GEN:N', 'PHI:DET:DEF', 'LANG:EN'}
[-o]            {'PHI', 'PHI:DET:DEF', 'LANG:IT', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1'}
[-i]            {'PHI', 'PHI:DET:DEF', 'LANG:IT', 'inflectional', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:NUM:SG'}
[-a]            {'PHI', 'PHI:PER:3', 'PHI:DET:DEF', 'LANG:IT', 'inflectional', 'PHI:NUM:SG'}
[-e]            {'PHI', 'PHI:PER:3', 'PHI:DET:DEF', 'LANG:IT', 'inflectional', 'PHI:NUM:SG'}
[-iamo]         {'PHI', 'PHI:DET:DEF', 'LANG:IT', 'inflectional', 'PHI:HUM:HUM', 'PHI:PER:1', 'PHI:NUM:PL'}
[-te]           {'PHI', 'PHI:DET:DEF', 'LANG:IT', 'inflectional', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:NUM:PL'}
[-no]           {'PHI', 'PHI:PER:3', 'PHI:DET:DEF', 'LANG:IT', 'inflectional', 'PHI:NUM:PL'}
[-nom]          {'NOM', 'LANG:EN', 'TAIL:FIN,ARG,VAL', 'adjoinable', 'inflectional'}
[-par]          {'PAR', 'adjoinable', 'inflectional', 'TAIL:ARG,-VAL', 'LANG:FI'}
[-gen]          {'TAIL:INF,ARG', 'LANG:EN', 'GEN', 'inflectional'}
gen             {'TAIL:INF,ARG', 'LANG:EN', 'GEN', 'inflectional'}
[-n_acc]        {'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'inflectional', 'adjoinable', 'n-ACC', 'LANG:FI', 'TAIL:PHI'}
[-t_acc]        {'t-ACC', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'adjoinable', 'inflectional', 'LANG:FI'}
[-0_acc]        {'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'inflectional', 'adjoinable', 'LANG:FI', '0_ACC', 'TAIL:*PHI'}
asp             {'LANG:EN', 'inflectional', 'ASP:BOUNDED'}
a'              {'PF:a', 'LANG:X', 'a', 'LF:A'}
b'              {'PF:b', 'b', 'LANG:X', 'LF:B'}
b''             {'PF:b', 'LF:B', '-COMP:c', 'LANG:EN', 'b'}
c''             {'SPEC:a', 'LANG:EN', 'LF:C', 'c', 'PF:c'}
c'              {'LANG:X', 'PF:c', 'LF:C', 'c'}
d'              {'PF:d', 'LF:D', 'LANG:', 'd'}
a''             ['LANG:EN']
x'              {'x', 'LANG:X', 'LF:X', 'PF:x'}
y'              {'PF:y', 'y', 'LANG:X', 'LF:Y'}
z'              {'z', 'LANG:X', 'LF:Z', 'PF:x'}
John'           {"N'", 'PF:John', 'LANG:X', 'LF:John'}
admires'        {'PF:admires', "V'", 'LANG:X', 'LF:admires'}
admires''       {'SPEC:D', '-SPEC:T/fin', '-VAL', '-SPEC:FORCE', '-COMP:N', 'PF:admires', 'LANG:EN', 'PHI:PER:_', 'SPEC:P', 'SPEC:TO/inf', 'COMP:P', 'SPEC:ADV', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LF:admires', 'ARG', '-COMP:v', 'ASP', 'PHI:GEN:_', '-COMP:V'}
Mary'           {"N'", 'PF:Mary', 'LANG:X', 'LF:mary'}
T/fin           {'SPEC:D', 'LF:T', 'VAL', 'T', '-SPEC:T/fin', 'COMP:v', '!COMP:*', '!PROBE:V', 'COMP:V', '-SPEC:FORCE', 'COMP:D', '-SPEC:V', '-SPEC:N', '-SPEC:v', 'SPEC:*', 'LANG:EN', '!SPEC:*', 'PHI:PER:_', '-COMP:T/fin', 'SPEC:TO/inf', 'PHI:NUM:_', 'PHI:DET:_', 'COMP:T/prt', '-COMP:INF', '-SPEC:C/fin', 'ARG', 'PF:T', 'T/fin', 'FIN', 'SPEC:INF', 'PHI:GEN:_'}
v               {'SPEC:D', 'PHI:DET:_', 'LF:v', '-VAL', '!COMP:*', 'COMP:V', '!PROBE:V', '-SPEC:N', 'PF:v', 'LANG:EN', 'ASP', 'PHI:PER:_', 'ARG', 'v', 'PHI:GEN:_', 'PHI:NUM:_'}
C/fin           {'VAL', '-SPEC:T/fin', 'COMP:Neg/fin', '!COMP:*', 'LF:C/fin', 'SPEC:*', 'C', 'LANG:EN', '-COMP:C/fin', 'C/fin', 'FIN', '-COMP:T/prt', '-SPEC:C/fin', 'COMP:T/fin', '-SPEC:N', '-ARG', '!PROBE:FIN', 'PF:C'}
T               {'SPEC:D', 'T', 'LF:T', 'VAL', '-SPEC:T/fin', '!COMP:*', 'COMP:V', '!PROBE:V', '-SPEC:FORCE', '-SPEC:V', 'COMP:D', 'SPEC:*', 'LANG:EN', '!SPEC:*', '-COMP:NEG', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:DET:_', 'COMP:T/prt', 'ARG', 'PF:T', '-SPEC:N', 'FIN', 'COMP:v', 'PHI:GEN:_'}
T/prt           {'SPEC:D', 'VAL', '-SPEC:T/fin', 'T', '!COMP:*', 'COMP:V', '!PROBE:V', '-SPEC:FORCE', '-SPEC:V', 'COMP:D', 'SPEC:*', 'LANG:EN', '!SPEC:*', '-COMP:NEG', 'PHI:PER:_', 'LF:T/prt', 'PHI:NUM:_', 'PHI:DET:_', 'COMP:T/prt', 'PF:T/prt', 'T/prt', 'ARG', '-SPEC:N', 'FIN', 'COMP:v', 'PHI:GEN:_'}
a0              {'adjoinable', 'COMP:0', '-adjoinable', '-SPEC:A', 'LANG:EN', 'TAIL:D', 'LF:A', 'A', '-SPEC:D', 'PF:A'}
n               {'!SPEC:D', 'VAL', 'N', '-SPEC:FORCE', '-SPEC:uWH', 'SPEC:*', 'LANG:EN', '!SPEC:*', 'COMP:uR', 'COMP:P', 'PHI:NUM:_', 'PHI:DET:_', 'PF:n', 'SPEC:A', '-SPEC:INF', '-SPEC:R', '-COMP:v', 'COMP:R', 'COMP:v', 'LF:n', '-SPEC:T/fin', '!COMP:*', '-SPEC:V', 'COMP:V', '-COMP:N', '-COMP:ADV', 'PHI:PER:_', '-COMP:AUX', '-SPEC:ADV', 'INF', '-COMP:T/fin', '-COMP:C/fin', '-COMP:D', 'COMP:R/D', 'COMP:0', '-COMP:WH', '-SPEC:P', '-SPEC:C/fin', 'ARG', 'n', '-SPEC:N', '-COMP:A', 'PHI:GEN:_', '-COMP:V'}
impass          {'SPEC:D', 'PHI:DET:_', '-VAL', '!COMP:*', 'COMP:V', '!PROBE:V', 'LF:impass', '-SPEC:N', 'PF:impass', 'ASP', 'LANG:EN', 'PHI:PER:_', 'ARG', 'v', 'PHI:GEN:_', 'PHI:NUM:_'}
cau             {'SPEC:D', 'PHI:DET:_', '-VAL', '!COMP:*', 'COMP:V', '!PROBE:V', '-SPEC:N', 'ASP', 'LF:v/Cause', 'LANG:EN', 'PHI:PER:_', 'ARG', 'v', 'PF:Cau', 'PHI:GEN:_', 'PHI:NUM:_'}
INF             {'-SPEC:T/fin', '!COMP:*', 'COMP:V', '-COMP:FORCE', '!PROBE:V', 'PF:INF', 'LF:INF', '-SPEC:V', '-COMP:C/fin', 'LANG:EN', 'INF', '-COMP:T/fin', 'COMP:v'}
prtcpl          {'SPEC:D', 'T', 'VAL', '-SPEC:T/fin', '!COMP:*', '!PROBE:V', 'COMP:V', '-SPEC:FORCE', '-SPEC:V', 'COMP:D', '-COMP:FORCE', 'SPEC:*', 'LANG:EN', '!SPEC:*', '-COMP:NEG', 'PHI:PER:_', 'LF:T/prt', 'INF', '-COMP:T/fin', '-COMP:C/fin', 'PHI:NUM:_', 'PHI:DET:_', 'COMP:T/prt', 'PF:T/prt', 'T/prt', 'ARG', '-SPEC:N', 'FIN', 'COMP:v', 'PHI:GEN:_'}
TO/inf          {'-SPEC:T/fin', 'adjoinable', '-VAL', '!COMP:*', 'COMP:V', '-COMP:FORCE', '!PROBE:V', '-SPEC:V', 'PF:TO/inf', '-SPEC:v', 'LANG:EN', 'TO/inf', 'INF', '-COMP:T/fin', '-COMP:C/fin', 'LF:TO/inf', '?ARG', 'COMP:v', '!COMP:V'}
A/inf           {'-SPEC:T/fin', '-SPEC:Neg/fin', '!COMP:*', 'COMP:V', '-COMP:FORCE', '!PROBE:V', '-SPEC:V', 'SPEC:*', 'LANG:EN', 'INF', '-COMP:T/fin', '-COMP:C/fin', '?VAL', 'LF:A/inf', 'A/inf', '?ARG', 'COMP:v', 'PF:A/inf'}
ARE/inf         {'VAL', '-SPEC:T/fin', '!COMP:*', 'COMP:V', '-COMP:FORCE', '!PROBE:V', '-SPEC:V', 'SPEC:*', 'LANG:EN', 'INF', '-COMP:T/fin', '-COMP:C/fin', 'LF:ARE/inf', 'ARE/inf', 'PF:are', '-adjoinable', '?ARG', 'COMP:v'}
ESSA/inf        {'TAIL:T', '-SPEC:T/fin', '-SPEC:Neg/fin', 'adjoinable', '!COMP:*', 'COMP:V', '!PROBE:V', '-SPEC:FORCE', '-COMP:FORCE', '-SPEC:V', 'SPEC:*', 'LF:while', 'LANG:EN', 'INF', '-COMP:T/fin', '-COMP:C/fin', '?VAL', 'ADV', 'PF:essa', '?ARG', '-SPEC:N', 'COMP:v', 'ESSA/inf'}
TUA/inf         {'TAIL:T', '-SPEC:T/fin', '-SPEC:Neg/fin', 'adjoinable', '!COMP:*', 'LF:after', 'COMP:V', '!PROBE:V', '-SPEC:FORCE', '-COMP:FORCE', '-SPEC:V', 'LANG:EN', '!SPEC:*', 'PHI:PER:_', 'INF', '-COMP:T/fin', '-COMP:C/fin', 'PHI:NUM:_', 'PHI:DET:_', 'TUA/inf', 'ADV', 'PF:tua', 'CAL', 'ARG', '-SPEC:N', 'COMP:v', 'PHI:GEN:_'}
VA/inf          {'VAL', '-SPEC:T/fin', '!COMP:*', 'COMP:V', '-COMP:FORCE', '!PROBE:V', 'VA/inf', '-SPEC:V', 'SPEC:*', 'LANG:EN', '!SPEC:*', 'PHI:PER:_', 'LF:VA', 'INF', '-COMP:T/fin', '-COMP:C/fin', 'PHI:NUM:_', 'PHI:DET:_', 'PF:vAn', 'ARG', '-SPEC:N', 'COMP:v', 'PHI:GEN:_'}
MA/ssa          {'TAIL:V', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LF:in_doing', '-VAL', 'adjoinable', 'COMP:V', '-SPEC:FORCE', 'LANG:EN', 'PHI:PER:_', 'MA/inf', 'ARG', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:*', 'ADV', 'PF:massa', '-SPEC:N', 'COMP:v', 'PHI:GEN:_'}
MA/tta          {'PHI:DET:_', 'TAIL:T', '-SPEC:T/fin', '-SPEC:Neg/fin', 'adjoinable', '-VAL', 'PF:matta', '-SPEC:FORCE', 'ADV', 'LANG:EN', 'PHI:PER:_', 'LF:without_doing', '-SPEC:N', 'MA/inf', 'ARG', 'PHI:GEN:_', 'PHI:NUM:_'}
MA/lla          {'-VAL', '-SPEC:FORCE', 'LANG:EN', 'PHI:NUM:_', 'PHI:DET:_', 'LF:by_doing', 'COMP:v', 'TAIL:T', 'PF:malla', '-SPEC:T/fin', '-SPEC:Neg/fin', 'adjoinable', 'COMP:V', 'PHI:PER:_', 'MA/inf', 'ADV', 'ARG', '-SPEC:N', 'PHI:GEN:_'}
MA/inf          {'TAIL:V', '-VAL', '-SPEC:FORCE', 'LANG:EN', 'PHI:NUM:_', 'PHI:DET:_', 'PF:maan', 'COMP:v', '-SPEC:T/fin', '-SPEC:Neg/fin', 'adjoinable', 'COMP:V', 'PHI:PER:_', 'MA/inf', 'LF:to_do', 'ADV', 'ARG', '-SPEC:N', 'PHI:GEN:_'}
E/inf           {'-SPEC:T/fin', '-SPEC:Neg/fin', 'adjoinable', '-VAL', '-SPEC:FORCE', 'LANG:FI', 'SPEC:*', 'ADV', 'PF:en', 'LF:by', '-SPEC:N', '-ARG'}
BE-             {'SPEC:D', 'PF:BE', '-SPEC:T/fin', '!COMP:*', '-VAL', 'LF:BE', '-SPEC:FORCE', '-COMP:N', 'LANG:EN', 'SPEC:P', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:ADV', 'COMP:P', 'V', 'COMP:T/prt', '-COMP:v', 'ASP', '-ARG', 'COPULA', '-COMP:V'}
D               {'OP', '-SPEC:T/fin', '!PROBE:N', '-SPEC:Neg/fin', 'adjoinable', '!COMP:*', '-SPEC:V', 'PF:D', '-SPEC:MA/lla', '-SPEC:C', 'LF:D', 'LANG:EN', '-COMP:uR', '-SPEC:D', '-COMP:T/fin', 'COMP:N', '-COMP:D', 'D', '-SPEC:INF', '-SPEC:P', '-SPEC:N', '-ARG'}
P               {'-SPEC:T/fin', '-SPEC:Neg/fin', 'adjoinable', '-VAL', '!COMP:*', 'COMP:D', '-SPEC:V', '-SPEC:FORCE', '-COMP:N', '-SPEC:C', '-SPEC:v', '-float', 'LANG:EN', 'PF:P', '-COMP:ADV', 'PHI:PER:_', '-COMP:uWH', '-SPEC:ADV', 'LF:P', '-COMP:T/fin', 'PHI:NUM:_', 'P', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:INF', '-SPEC:*', '-SPEC:C/fin', '-SPEC:P', 'ARG', '-SPEC:N', 'PHI:GEN:_', '-SPEC:iR'}
pro             ['LANG:EN']
pro-            {'-SPEC:T/fin', '-SPEC:V', 'N', '-SPEC:FORCE', '-COMP:N', 'PF:(pro)', '-SPEC:N', '-SPEC:uWH', 'LANG:EN', '-COMP:ADV', '-COMP:AUX', '-SPEC:ADV', '-COMP:T/fin', '-COMP:C/fin', 'COMP:uR', 'COMP:P', 'PHI', '-COMP:D', 'COMP:R/D', 'SPEC:A', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:P', '-SPEC:C/fin', 'LF:pro', '-COMP:v', 'COMP:R', '-COMP:A', '-COMP:V'}
cl              {'CL', 'LANG:EN', 'RIGHT:ARE/inf', 'LEFT:D,CL', 'inflectional', 'LEFT:T/fin', 'RIGHT:PRG'}
inc             {'INCORPORATED', 'LANG:EN', 'inflectional'}
sg              {'LANG:EN', 'PHI:NUM:SG', 'inflectional'}
pl              {'LANG:EN', 'inflectional', 'PHI:NUM:PL'}
1p              {'LANG:EN', 'PHI:PER:1', 'inflectional'}
2p              {'LANG:EN', 'PHI:PER:2', 'inflectional'}
3p              {'PHI:PER:3', 'LANG:EN', 'inflectional'}
def             {'PHI:DET:DEF', 'LANG:EN', 'inflectional'}
indef           {'PHI:DET:INDEF', 'LANG:EN', 'inflectional'}
hum             {'PHI:HUM:HUM', 'LANG:EN', 'inflectional'}
nonhum          {'PHI:HUM:NONHUM', 'LANG:EN', 'inflectional'}
m               {'LANG:EN', 'PHI:GEN:M', 'inflectional'}
f               {'PHI:GEN:F', 'LANG:EN', 'inflectional'}
nom             {'TAIL:FIN,!COMP:*,VAL', 'LANG:EN', 'inflectional'}
acc             {'LANG:EN', 'inflectional', 'TAIL:v'}
dat             {'LANG:EN', 'inflectional', 'TAIL:!COMP:*,v'}
uC/op           {'uC/op', 'LANG:EN', 'inflectional'}
wh              {'LANG:EN', 'OP:_', 'OP:WH', 'inflectional'}
wh_             {'OP', 'LANG:EN', 'OP:_', 'inflectional', 'FORCE:OP:WH'}
top             {'OP:TOP', 'LANG:EN', 'inflectional'}
foc             {'OP:FOC', 'LANG:EN', 'inflectional'}
C/op            {'OP:C/OP', 'LANG:EN', 'inflectional'}
rel             {'LANG:EN', 'inflectional', 'OP:REL', 'adjoinable', '-COMP:C/fin'}
Q               {'OP:Q', 'OP', 'LANG:EN', 'inflectional', 'OP:WH'}
