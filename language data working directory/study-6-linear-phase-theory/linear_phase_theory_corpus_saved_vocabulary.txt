ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'adjoinable', '-SPEC:P', '-ARG', '-COMP:ADV', '-COMP:T', 'P', '-COMP:N', 'PF:a', 'COMP:D', '-SPEC:N', 'LF:to', 'TAIL:V', '-SPEC:*', '-SPEC:T/fin', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:uWH', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:Neg/fin', 'COMP:ARE/inf', '-SPEC:C', '-SPEC:iR', 'LANG:IT', '-VAL', '!COMP:*', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', '-SPEC:v', '-SPEC:V'}
a_D             {'adjoinable', '-SPEC:P', 'LANG:EN', '-ARG', 'COMP:N', '-COMP:D', 'LF:D', '-SPEC:MA/lla', '!COMP:*', '!PROBE:N', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:uR', '-COMP:P', 'PF:D', '-SPEC:Neg/fin', '-SPEC:C', 'OP', 'D', '-SPEC:INF', '-SPEC:V'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'ARG', '-SPEC:Neg', 'COMP:P', 'LANG:EN', 'SPEC:P', 'PF:admire', '-COMP:V', '-COMP:N', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:T/fin', 'LF:admire', 'SPEC:TO/inf', '-COMP:P', 'PHI:DET:_', 'V', '-COMP:Neg', '-COMP:v', 'ASP', '-VAL', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_'}
admire*         ['LANG:EN']
T/fin*          {'CAT:T/fin', 'LANG:EN', 'LF:T', 'NO_NUMBER', '-VAL', 'NO_DET', '!SPEC:*', "PF:T/fin'"}
v*              {'CAT:v', 'PF:v', '-VAL', 'NO_DET', 'LANG:EN', 'LF:v', 'NO_NUMBER'}
admire**        ['LANG:EN']
T/fin**         {'NO_PERSON', 'CAT:T/fin', 'LANG:EN', 'LF:T', 'NO_NUMBER', 'PHI:PER:3', '-VAL', 'NO_DET', '!SPEC:*', "PF:T/fin''"}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'ARG', 'COMP:P', '-COMP:V', '-COMP:N', 'COMP:D', 'PF:adora', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:admire', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:ADV', 'V', '-COMP:v', 'ASP', 'LANG:IT', '-VAL', 'SPEC:P', '-SPEC:FORCE', 'PHI:NUM:_'}
antaa           ['LANG:FI']
anta-           {'ARG', 'COMP:P', 'SPEC:D', 'ASP:BOUNDED', 'SPEC:P', '-COMP:V', '-COMP:N', 'COMP:D', 'LF:give', 'PHI:PER:_', 'LANG:FI', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', '+SEM:directional', 'V', 'CLASS:DITR', '-COMP:v', '-COMP:FIN', 'ASP', '-VAL', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', 'PF:antaa', 'PHI:NUM:_'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'SPEC:D', 'ARG', 'COMP:P', 'PF:ask', 'LANG:EN', 'SPEC:P', '-COMP:V', '-COMP:N', 'COMP:D', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:ask', 'V', '-COMP:v', 'ASP', '-VAL', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'SEM:internal'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'LF:key', '-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', '-SEM:directional', 'COMP:C', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', 'PF:avain', '-SPEC:ADV', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'LF:car', '-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', '-SEM:directional', 'COMP:C', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', 'PF:auto', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
bank            {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', 'LANG:EN', '-COMP:VA/inf', 'COMP:R/D', 'FREQ:1', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'PF:bank1', 'COMP:C', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', 'COMP:R', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'LF:bank_inst', '-SPEC:V'}
bank            {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', 'LANG:EN', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', 'LF:bank_river', 'PF:bank2', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', 'FREQ:2', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
barn            {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', 'LANG:EN', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', '-SPEC:N', 'PF:barn', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', 'LF:barn', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
city            {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', 'LANG:EN', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'LF:city', 'COMP:C', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', 'PF:city', '-SPEC:ADV', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
che             ['LANG:IT']
che-            {'-SPEC:R', '-SPEC:P', 'PF:che', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'COMP:C', 'LF:who', '-COMP:WH', 'PHI_N', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', 'LANG:IT', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
chiamato        ['LANG:IT']
chiamata-       {'ARG', 'COMP:P', 'SPEC:P', '-COMP:V', '-COMP:N', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:DET:_', 'V', 'PF:chiamato', '-COMP:v', 'ASP', 'LANG:IT', '-VAL', 'SPEC:ADV', 'LF:called', '-SPEC:FORCE', 'PHI:NUM:_'}
claims          ['LANG:EN']
claim-          {'SPEC:D', 'ARG', 'COMP:P', 'LANG:EN', 'LF:claim', 'SPEC:P', '-COMP:D', '-COMP:V', '-COMP:N', 'COMP:T/fin', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'PF:claim', 'SPEC:TO/inf', 'PHI:DET:_', 'V', '-COMP:v', 'ASP', '-VAL', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_'}
danno           {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', 'LF:damage', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:V', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', 'LANG:IT', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', 'PF:danno'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'ARG', 'COMP:P', 'SPEC:P', '-COMP:V', 'LF:detest', '-COMP:N', 'COMP:D', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'PF:detest', 'SPEC:TO/inf', 'PHI:DET:_', 'V', 'COMP:ARE/inf', '-COMP:v', 'ASP', 'LANG:IT', '-VAL', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'SEM:internal'}
devono          ['LANG:EN']
deva-           {'SPEC:D', 'ARG', 'COMP:P', 'SPEC:P', '-COMP:V', '-COMP:N', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:must', '-ASP', 'SPEC:TO/inf', 'PHI:DET:_', 'V', 'COMP:ARE/inf', 'PF:deva', '-COMP:v', 'LANG:IT', '-VAL', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'SEM:internal'}
di              {'ARG', '-SPEC:P', '-COMP:ADV', '-COMP:T', 'P', '-COMP:N', 'COMP:D', '-SPEC:N', 'PHI:PER:_', 'PF:di', 'LANG:FI', '-SPEC:T/fin', 'PHI:NUM:_', '-adjoinable', '-SPEC:C/fin', '-COMP:T/fin', 'PHI:DET:_', '-COMP:uWH', '-SPEC:iWH', '-SPEC:ADV', 'LF:of', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:iR', '-VAL', '!COMP:*', '-SPEC:FORCE', '-SPEC:INF', 'SPEC:*', '-COMP:A', '-SPEC:v', '-SPEC:V'}
does            {'ARG', '-SPEC:Neg', 'LF:does', 'LANG:EN', 'PHI:PER:3', '!SPEC:*', 'PHI:GEN:M', 'FIN', 'PHI:PER:_', 'SPEC:FORCE', 'SPEC:TO/inf', 'PHI:DET:_', 'T', 'PHI:NUM:SG', '-SPEC:C', '!COMP:*', 'COMP:v', '!PROBE:V', 'SPEC:*', 'PHI:NUM:_', '-COMP:INF', 'SPEC:D', 'SPEC:C/fin', 'COMP:V', 'T/fin', 'PHI:GEN:F', '-SPEC:N', 'VAL', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:T/fin', 'COMP:T/prt', 'PF:does', 'COMP:Neg', '-SPEC:TO/inf', '-SPEC:v', '-SPEC:V'}
does_C          ['LANG:EN']
does-           {'ARG', '-SPEC:Neg', 'LF:does', 'LANG:EN', 'PHI:PER:3', '!SPEC:*', 'PHI:GEN:M', 'FIN', 'PHI:PER:_', 'SPEC:FORCE', 'SPEC:TO/inf', 'PHI:DET:_', 'T', 'PHI:NUM:SG', '-SPEC:C', '!COMP:*', 'COMP:v', '!PROBE:V', 'SPEC:*', 'PHI:NUM:_', '-COMP:INF', 'SPEC:D', 'SPEC:C/fin', 'COMP:V', 'T/fin', 'PHI:GEN:F', '-SPEC:N', 'VAL', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:T/fin', 'COMP:T/prt', 'PF:does', 'COMP:Neg', '-SPEC:TO/inf', '-SPEC:v', '-SPEC:V'}
dorme           ['LANG:IT']
dorme-          {'ARG', 'COMP:P', '-COMP:MA/inf', 'SPEC:D', '!SPEC:D', 'LANG:EN', 'SPEC:P', '-COMP:D', '-COMP:V', '-COMP:N', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:TO/inf', 'PF:dorme', 'PHI:DET:_', 'LF:sleep', 'SPEC:ADV', 'V', '-COMP:v', 'ASP', '-VAL', 'CLASS:INTR', '-SPEC:FORCE', 'PHI:NUM:_'}
disappeared     ['LANG:EN']
disappear-      {'ARG', 'COMP:P', '-COMP:MA/inf', 'SPEC:D', 'LANG:EN', 'SPEC:P', '-COMP:D', '-COMP:V', '-COMP:N', 'PF:disappear', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:disappear', 'SPEC:ADV', 'V', '-COMP:v', 'ASP', '-VAL', 'CLASS:INTR', '-SPEC:FORCE', 'PHI:NUM:_'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'SPEC:D', '2SPEC', 'PF:easy', 'LANG:EN', '0', 'LF:easy'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'ARG', 'POL:NEG', 'SPEC:*', '!SPEC:*', 'FIN', 'NEG', 'PHI:PER:_', 'LF:neg', 'VAL', 'LANG:FI', '-SPEC:T/fin', '%SPEC:INF', 'PHI:DET:_', 'COMP:T/prt', '-SPEC:T', '!COMP:T', 'Neg/fin', '!COMP:*', 'PF:ei', 'PHI:NUM:_', 'SEM:internal'}
e-              {'ARG', 'POL:NEG', 'SPEC:*', '!SPEC:*', 'FIN', 'NEG', 'PHI:PER:_', 'LF:neg', 'VAL', 'LANG:FI', '-SPEC:T/fin', '%SPEC:INF', 'PHI:DET:_', 'COMP:T/prt', '-SPEC:T', '!COMP:T', 'Neg/fin', '!COMP:*', 'PF:ei', 'PHI:NUM:_', 'SEM:internal'}
elaa            ['LANG:FI']
ela-            {'SPEC:D', 'ARG', 'LF:live', 'COMP:P', '-COMP:MA/inf', 'SPEC:P', '-COMP:D', '-COMP:V', '-COMP:N', 'PHI:PER:_', 'PF:elaa', 'LANG:FI', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:ADV', 'V', '-COMP:v', 'ASP', '-VAL', 'CLASS:INTR', '-SPEC:FORCE', 'PHI:NUM:_'}
etsii           ['LANG:FI']
etsi-           {'ARG', 'COMP:P', 'SPEC:P', 'LF:search', '-COMP:V', '-COMP:N', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', 'LANG:FI', '!COMP:D', 'PF:etsi', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'V', '-COMP:v', 'ASP', '-VAL', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_'}
etta            {'LF:that', '-ARG', 'PF:etta', 'FORCE', 'COMP:C/fin', '-SPEC:D', '-VAL', '!COMP:*', 'COMP:T/fin', 'FIN', 'LANG:FI', '!PROBE:FIN', '-SPEC:*'}
fell            ['LANG:EN']
fell-           {'ARG', 'COMP:P', '-COMP:MA/inf', 'SPEC:D', 'LANG:EN', 'SPEC:P', '-COMP:D', '-COMP:V', '-COMP:N', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:fell', 'SPEC:ADV', 'V', 'PF:fell', '-COMP:v', 'ASP', '-VAL', 'CLASS:INTR', '-SPEC:FORCE', 'PHI:NUM:_'}
flow'           {'SPEC:D', 'COMP:P', 'ARG', 'PF:flow', 'LANG:EN', '-COMP:V', '-COMP:N', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:flow', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:ADV', 'V', '-COMP:v', 'ASP', '-VAL', 'SPEC:P', '-SPEC:FORCE', 'PHI:NUM:_'}
from            {'ARG', 'adjoinable', '-SPEC:P', 'LANG:EN', '-COMP:ADV', 'LF:from', '-COMP:T', 'P', '-COMP:N', 'COMP:D', '-SPEC:N', 'PHI:PER:_', 'TAIL:V,+SEM:directional', '-SPEC:T/fin', '-SPEC:*', 'PHI:NUM:_', 'PF:from', 'PHI:GEN:_', '-SPEC:C/fin', '-COMP:T/fin', 'PHI:DET:_', '-COMP:uWH', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:iR', '-VAL', '!COMP:*', '-SPEC:FORCE', '-SPEC:INF', '-float', '-COMP:A', '-SPEC:v', '-SPEC:V'}
gave            ['LANG:EN']
give-           {'ARG', 'COMP:P', 'SPEC:D', 'LANG:EN', 'SPEC:P', '-COMP:V', '-COMP:N', 'COMP:D', 'LF:give', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:DET:_', '+SEM:directional', 'V', 'CLASS:DITR', '-COMP:v', '-COMP:FIN', 'ASP', '-VAL', '-SPEC:FORCE', '!COMP:*', 'SPEC:ADV', 'PF:give', 'PHI:NUM:_'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:INF', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', '-SEM:directional', 'COMP:C', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', 'LF:Giuseppe', '-SPEC:ADV', '-COMP:v', 'LANG:IT', '-SPEC:FORCE', 'PF:Giuseppe', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'ARG', 'COMP:P', 'ASP:BOUNDED', 'COMP:A/inf', 'SPEC:P', '-COMP:V', '-COMP:N', 'PF:haluaa', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', 'LANG:FI', '-SPEC:T/fin', '-SPEC:*', 'LF:want', 'SPEC:TO/inf', '-COMP:P', 'PHI:DET:_', 'V', '-COMP:v', 'ASP', '-VAL', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'SEM:internal'}
hairitsee       ['LANG:FI']
hairitse-       {'SPEC:D', 'ARG', 'COMP:P', 'SPEC:P', '-COMP:V', '-COMP:N', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', 'LF:disturb', '!COMP:D', 'LANG:FI', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'PF:hairitsee', 'V', '-COMP:v', '-COMP:FIN', 'ASP', '-VAL', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'SPEC:D', 'ARG', 'COMP:P', 'LF:have', 'SPEC:P', '-COMP:V', '-COMP:N', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', '-ASP', 'SPEC:TO/inf', 'PF:ha', 'PHI:DET:_', 'V', 'COMP:T', '-COMP:v', 'LANG:IT', '-VAL', 'SPEC:ADV', '-SPEC:FORCE', 'SPEC:*', 'PHI:NUM:_', 'SEM:internal'}
horse           {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', 'LANG:EN', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', 'PF:horse', '-COMP:V', '-COMP:N', 'LF:horse', 'COMP:C', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'ARG', 'COMP:P', '-COMP:MA/inf', 'SPEC:D', 'SPEC:P', '-COMP:D', '-COMP:V', '-COMP:N', 'PHI:PER:_', 'LANG:FI', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:disappear', 'SPEC:ADV', 'V', '-COMP:v', 'ASP', '-VAL', 'CLASS:INTR', '-SPEC:FORCE', 'PF:havia', 'PHI:NUM:_'}
Helsingissa     ['LANG:FI']
Helsinki        ['LANG:FI']
Helsinki-       {'-SPEC:R', 'COMP:P', 'COMP:uR', 'PF:Helsinki', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', 'LF:Helsinki', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'ARG', 'COMP:P', 'PF:ihaile-', 'SPEC:P', '-COMP:V', '-COMP:N', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', 'LANG:FI', '!COMP:D', '-SPEC:T/fin', 'LF:admire', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'V', '-COMP:v', '-COMP:FIN', 'ASP', '-VAL', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_'}
il              {'adjoinable', '-SPEC:P', '-ARG', 'COMP:N', '-COMP:D', '-SPEC:MA/lla', 'LF:the', '!COMP:*', '!PROBE:N', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:uR', '-COMP:P', '-SPEC:Neg/fin', '-SPEC:C', 'OP', 'LANG:IT', 'D', '-SPEC:INF', 'PF:il', '-SPEC:V'}
i               {'adjoinable', '-SPEC:P', '-ARG', 'COMP:N', '-COMP:D', '-SPEC:MA/lla', 'LF:the', '!COMP:*', '!PROBE:N', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:uR', '-COMP:P', '-SPEC:Neg/fin', '-SPEC:C', 'OP', 'LANG:IT', 'D', '-SPEC:INF', 'PF:il', '-SPEC:V'}
in              {'ARG', 'adjoinable', '-SPEC:P', '-COMP:ADV', '-COMP:T', 'P', '-COMP:N', 'COMP:D', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:NUM:_', '-SPEC:C/fin', '-COMP:T/fin', 'PHI:DET:_', '-COMP:uWH', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:Neg/fin', 'PF:in', '-SPEC:C', 'LF:in', 'LANG:IT', '-SPEC:iR', '!COMP:*', '-SPEC:FORCE', '-VAL', '-SPEC:INF', '-COMP:A', '-SPEC:v', '-SPEC:V'}
infermieri      {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', 'PF:infermieri', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', 'LF:nurses', '-COMP:v', 'LANG:IT', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
is              ['LANG:EN']
be-             {'SPEC:D', 'COMP:P', '-ARG', 'LANG:EN', 'SPEC:P', '-COMP:TO/inf', '-COMP:V', '-COMP:N', 'PF:be', '-SPEC:T/fin', 'LF:be', 'COPULA', 'SPEC:TO/inf', 'V', '-COMP:v', 'ASP', '-VAL', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'ARG', 'COMP:P', '-COMP:MA/inf', 'SPEC:D', 'SPEC:P', '-COMP:D', 'PF:istuu', '-COMP:V', '-COMP:N', 'PHI:PER:_', 'LANG:FI', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:sit', 'V', 'SPEC:ADV', '-COMP:v', 'ASP', '-VAL', 'CLASS:INTR', '-SPEC:FORCE', 'PHI:NUM:_'}
John            ['LANG:EN']
John-           {'-SPEC:R', '-SPEC:P', 'LANG:EN', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'LF:John', 'COMP:C', '-COMP:WH', 'COMP:R', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-SEM:directional', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-adjoinable', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-SPEC:INF', '-COMP:A', 'PF:John', '-SPEC:V'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'-SPEC:R', 'PF:joka', '-SPEC:P', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'COMP:C', 'LF:who', '-COMP:WH', 'PHI_N', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:INF', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'PF:Jukka', '-SEM:directional', 'COMP:C', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', 'LF:Jukka', '-SPEC:FORCE', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'ARG', 'COMP:P', 'SPEC:P', '-COMP:V', 'LF:run', '-COMP:N', 'PHI:PER:_', 'PF:juokse-', 'LANG:FI', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'V', '-COMP:v', 'ASP', '-VAL', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_'}
kaksi           {'ARG', 'NUM', 'PHI:DET:_', 'LF:two', 'TAIL:ARG,VAL,FIN', 'COMP:N', 'PF:kaksi', 'PHI:NUM:SG', '-VAL', 'COMP:n', 'PHI:PER:_', 'SPEC:*', 'LANG:FI', 'PHI:NUM:_'}
kaksi           {'NUM', 'LF:two', 'LANG:EN', 'COMP:N', 'PF:kaksi', 'TAIL:*POL:NEG', 'COMP:n', 'SPEC:*', 'TAIL:ARG,ASP:BOUNDED'}
kaksi_1         {'ARG', 'NUM', 'PHI:DET:_', 'LF:two', 'TAIL:ARG,VAL,FIN', 'COMP:N', 'PF:kaksi', 'PHI:NUM:SG', '-VAL', 'COMP:n', 'PHI:PER:_', 'SPEC:*', 'LANG:FI', 'PHI:NUM:_'}
kaksi_2         {'NUM', 'LF:two', 'LANG:EN', 'COMP:N', 'PF:kaksi', 'TAIL:*POL:NEG', 'COMP:n', 'SPEC:*', 'TAIL:ARG,ASP:BOUNDED'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'COMP:N', 'SPEC:*', 'NUM', 'COMP:n', 'LF:two', 'PF:kaksi', 'LANG:FI'}
kaupunkia       ['LANG:EN']
kaupunki        {'-SPEC:R', 'COMP:uR', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'PF:kaupunki', 'LF:city', 'COMP:C', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', '-COMP:P', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'ARG', 'COMP:P', '-COMP:V', '!COMP:A/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'SEM:external', 'LF:order', 'SPEC:ADV', 'V', 'PF:kaske', '-COMP:v', 'ASP', '-VAL', 'SPEC:P', '-SPEC:FORCE', 'PHI:NUM:_'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', '-SPEC:N', 'LANG:FI', 'LF:watch', '-SPEC:T/fin', 'N', 'SPEC:A', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', 'PF:kello', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
kello0-         {'SPEC:D', '2SPEC', 'PF:kello', '0', 'LF:watch', 'LANG:FI'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'LF:key', '-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', 'LANG:EN', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'PF:key', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
kirja           ['LANG:FI']
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'PF:kirja', '-SEM:directional', 'COMP:C', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', 'LF:book', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
knows           ['LANG:EN']
know-           {'ARG', 'COMP:P', 'LF:know', 'LANG:EN', 'SPEC:P', '-COMP:V', '-COMP:N', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'V', 'PF:know', '-COMP:v', 'ASP', '-VAL', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_'}
kohti           {'ARG', 'adjoinable', '-SPEC:P', '-COMP:ADV', '-COMP:T', 'LF:towards', 'P', '-COMP:N', 'PF:kohti', 'COMP:D', '-SPEC:N', 'PHI:PER:_', 'LANG:FI', 'TAIL:V', '-SPEC:T/fin', 'PHI:NUM:_', '-SPEC:C/fin', '-COMP:T/fin', 'PHI:DET:_', '-COMP:uWH', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:iR', '-VAL', '!COMP:*', '-SPEC:FORCE', '-SPEC:INF', 'SPEC:*', '-COMP:A', '-SPEC:v', '-SPEC:V'}
koko            {'adjoinable', '-SPEC:P', '-ARG', 'COMP:N', '-COMP:D', '-SPEC:MA/lla', '!COMP:*', '!PROBE:N', 'LANG:FI', '-SPEC:T/fin', 'PF:koko', '-COMP:T/fin', '-COMP:uR', '-COMP:P', 'TAIL:T', 'LF:all', '-SPEC:Neg/fin', '-SPEC:C', 'OP', 'D', '-SPEC:INF', '-SPEC:V'}
kuka            ['LANG:FI']
kuka-           {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'SPEC:A', 'N', 'LF:who', 'PHI', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', 'PF:kuka', '-SPEC:ADV', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'COMP:P', 'ARG', 'SPEC:P', '-COMP:D', '-COMP:V', '-COMP:N', 'PHI:PER:_', 'LANG:FI', '-SPEC:T/fin', 'LF:snore', '-COMP:WH', '-COMP:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'PF:kuorsaa', 'V', '-COMP:v', 'ASP', '-VAL', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_'}
lahella         {'ARG', 'adjoinable', '!SPEC:D', '-SPEC:P', 'P', 'COMP:D', '!SPEC:*', 'PHI:PER:_', 'PHI:DET:_', 'PF:lahella', 'LF:near', '-SPEC:iWH', '-SPEC:Neg/fin', '-SPEC:C', '!COMP:*', 'COMP:v', '-SPEC:FORCE', 'SPEC:*', 'PHI:NUM:_', 'COMP:V', '-COMP:ADV', '-COMP:T', '-COMP:C/fin', '-COMP:N', '-SPEC:N', 'VAL', 'LANG:FI', '-SPEC:T/fin', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-COMP:FORCE', '-SPEC:iR', '-SPEC:INF', '-COMP:A', '-SPEC:v', 'INF', '-SPEC:V'}
lahella         {'ARG', 'adjoinable', '-SPEC:P', '-COMP:ADV', '-COMP:T', 'P', '-COMP:N', 'COMP:D', '-SPEC:N', 'PHI:PER:_', 'LANG:FI', '!COMP:D', '-SPEC:T/fin', 'PHI:NUM:_', '-SPEC:C/fin', '-COMP:T/fin', 'PHI:DET:_', 'PF:lahella', '-COMP:uWH', 'LF:near', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:iR', '-VAL', '!COMP:*', '-SPEC:FORCE', '-SPEC:INF', 'SPEC:*', '-COMP:A', '-SPEC:v', '-SPEC:V'}
lahella_1       {'ARG', 'adjoinable', '-SPEC:P', '-COMP:ADV', '-COMP:T', 'P', '-COMP:N', 'COMP:D', '-SPEC:N', 'PHI:PER:_', 'LANG:FI', '!COMP:D', '-SPEC:T/fin', 'PHI:NUM:_', '-SPEC:C/fin', '-COMP:T/fin', 'PHI:DET:_', 'PF:lahella', '-COMP:uWH', 'LF:near', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:iR', '-VAL', '!COMP:*', '-SPEC:FORCE', '-SPEC:INF', 'SPEC:*', '-COMP:A', '-SPEC:v', '-SPEC:V'}
lahella_2       {'ARG', 'adjoinable', '!SPEC:D', '-SPEC:P', 'P', 'COMP:D', '!SPEC:*', 'PHI:PER:_', 'PHI:DET:_', 'PF:lahella', 'LF:near', '-SPEC:iWH', '-SPEC:Neg/fin', '-SPEC:C', '!COMP:*', 'COMP:v', '-SPEC:FORCE', 'SPEC:*', 'PHI:NUM:_', 'COMP:V', '-COMP:ADV', '-COMP:T', '-COMP:C/fin', '-COMP:N', '-SPEC:N', 'VAL', 'LANG:FI', '-SPEC:T/fin', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-COMP:FORCE', '-SPEC:iR', '-SPEC:INF', '-COMP:A', '-SPEC:v', 'INF', '-SPEC:V'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'SPEC:D', 'ARG', 'COMP:P', '-COMP:MA/inf', 'LF:leave', 'SPEC:P', '-COMP:D', '-COMP:V', '-COMP:N', 'COMP:PP', 'PHI:PER:_', 'LANG:FI', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:ADV', 'V', 'PF:lahtea', '-COMP:v', 'ASP', '-VAL', 'CLASS:INTR', '-SPEC:FORCE', 'PHI:NUM:_'}
lavano          ['LANG:IT']
lava-           {'ARG', 'COMP:P', '-COMP:V', '-COMP:N', 'COMP:D', 'PHI:PER:_', '-SPEC:T/fin', 'LF:wash', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:ADV', 'V', '-COMP:v', '-SPEC:FORCE', 'ASP', 'LANG:IT', '-VAL', '!COMP:*', 'SPEC:P', 'PF:lava', 'PHI:NUM:_'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'adjoinable', '-SPEC:P', '-ARG', 'COMP:N', '-COMP:D', 'LF:D', '-SPEC:MA/lla', '!COMP:*', '!PROBE:N', 'PF:le', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:uR', '-COMP:P', '-SPEC:Neg/fin', '-SPEC:C', 'OP', 'LANG:IT', 'D', '-SPEC:INF', '-SPEC:V'}
leaves          ['LANG:EN']
leave           {'ARG', 'COMP:P', 'LF:leave', '!SPEC:D', 'LANG:EN', '-COMP:V', '-COMP:N', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'PF:leave', 'V', 'SPEC:ADV', '-COMP:v', 'ASP', '-VAL', 'SPEC:P', '-SPEC:FORCE', 'PHI:NUM:_'}
leave-          {'ARG', 'COMP:P', 'LF:leave', '!SPEC:D', 'LANG:EN', '-COMP:V', '-COMP:N', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'PF:leave', 'V', 'SPEC:ADV', '-COMP:v', 'ASP', '-VAL', 'SPEC:P', '-SPEC:FORCE', 'PHI:NUM:_'}
like-           {'ARG', 'COMP:P', 'LANG:EN', 'PF:like', '-COMP:V', '-COMP:N', 'PHI:PER:_', '-SPEC:T/fin', '!COMP:D', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:like', 'SPEC:ADV', 'V', '-COMP:v', 'ASP', '-VAL', 'SPEC:P', '-SPEC:FORCE', 'PHI:NUM:_'}
likes           ['LANG:EN']
like            {'ARG', 'COMP:P', 'LANG:EN', 'PF:like', '-COMP:V', '-COMP:N', 'PHI:PER:_', '-SPEC:T/fin', '!COMP:D', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:like', 'SPEC:ADV', 'V', '-COMP:v', 'ASP', '-VAL', 'SPEC:P', '-SPEC:FORCE', 'PHI:NUM:_'}
little          ['LANG:EN']
little-         {'SPEC:D', '2SPEC', 'LF:little', 'LANG:EN', 'PF:little-', '0'}
lle             {'ARG', 'adjoinable', '-SPEC:P', '-COMP:ADV', '-COMP:T', 'P', '-COMP:N', 'COMP:D', '-SPEC:N', 'PHI:PER:_', 'TAIL:V,+SEM:directional', 'LF:for', 'LANG:FI', '-SPEC:*', '-SPEC:T/fin', 'PHI:NUM:_', '-SPEC:C/fin', '-COMP:T/fin', 'PHI:DET:_', '-COMP:uWH', 'PF:P(lle)', '+SEM:directional', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:iR', '-VAL', '!COMP:*', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', '-SPEC:v', '-SPEC:V'}
lla             {'ARG', 'adjoinable', 'LF:by', '-SPEC:P', '-COMP:ADV', 'TAIL:*V', '-COMP:T', 'SPEC:*', 'P', '-COMP:N', 'COMP:D', '-SPEC:N', 'PHI:PER:_', 'LANG:FI', '-SPEC:T/fin', 'PHI:NUM:_', '-SPEC:C/fin', '-COMP:T/fin', 'PHI:DET:_', '-COMP:uWH', '-SPEC:iWH', 'TAIL:T', '-SPEC:ADV', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:iR', '-VAL', '!COMP:*', '-SPEC:FORCE', '-SPEC:INF', 'PF:P(lla)', '-COMP:A', '-SPEC:v', '-SPEC:V'}
Luisa           ['LANG:IT']
Luisa-          {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:INF', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', '-SEM:directional', 'COMP:C', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', 'PF:Luisa', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', 'LANG:IT', 'LF:Luisa', '-SPEC:FORCE', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'ARG', 'COMP:P', 'SPEC:P', 'PF:luke', '-COMP:V', '-COMP:N', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', 'LANG:FI', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'V', '-COMP:v', 'ASP', '-VAL', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', 'LF:read'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'ARG', 'COMP:P', 'ASP:BOUNDED', 'SPEC:P', '-COMP:V', '-COMP:N', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', 'LANG:FI', '!COMP:D', '-SPEC:T/fin', 'PF:loyta-', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'V', '-COMP:v', 'ASP', '-VAL', 'LF:find', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_'}
Mary            ['LANG:EN']
Mary-           {'-SPEC:R', '-SPEC:P', 'LANG:EN', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'COMP:C', 'LF:Mary', '-COMP:WH', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-SEM:directional', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-adjoinable', 'PF:Mary', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-SPEC:R', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'COMP:C', '-COMP:WH', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'PF:Merja', 'COMP:P', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-SEM:directional', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'SPEC:A', 'N', '-adjoinable', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-SPEC:INF', 'LF:Merja', '-COMP:A', 'COMP:R', '-SPEC:V'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'PF:malla', 'ADV', 'MA/inf', 'LF:by', 'adjoinable', 'TAIL:T', '-SPEC:Neg/fin', 'COMP:v', '-SPEC:FORCE', '-SPEC:N', 'SPEC:*', 'LANG:FI', '-SPEC:T/fin'}
meren           ['LANG:FI']
mere-           {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', '-COMP:VA/inf', 'PF:meri', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', '-SPEC:N', 'LANG:FI', 'LF:ocean', '-SPEC:T/fin', 'N', 'SPEC:A', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
mies            {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'LF:man', 'COMP:C', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', 'PF:mies', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
mistake         {'-SPEC:R', 'COMP:P', 'COMP:uR', 'LF:mistake', '-SPEC:P', 'LANG:EN', '-COMP:VA/inf', 'COMP:R/D', 'PF:mistake', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'SPEC:A', 'N', 'PF:mika-', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', '-SPEC:V', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', 'LF:what'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'ARG', 'COMP:P', 'SPEC:P', 'PF:move', '-COMP:V', '-COMP:N', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', '-SPEC:T/fin', 'LANGN:EN', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', '+SEM:directional', 'V', 'LF:move', '-COMP:v', 'ASP', '-VAL', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_'}
mukavasti       ['LANG:EN']
mukava-         {'PF:mukavasti', 'SPEC:D', '2SPEC', 'LF:comfortably', '0', 'LANG:FI'}
must            {'ARG', 'MODAL', '-SPEC:Neg', 'SPEC:D', 'SPEC:C/fin', 'LANG:EN', 'COMP:V', 'T/fin', '-SPEC:TO/inf', 'PF:must', '!SPEC:*', 'FIN', '-SPEC:N', 'PHI:PER:_', 'VAL', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:must', 'PHI:NUM:_', 'SPEC:FORCE', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:V', 'T', 'PHI:DET:_', 'COMP:T/prt', 'COMP:v', '-SPEC:C', 'COMP:Neg', '!COMP:*', '!PROBE:V', 'SPEC:*', '-SPEC:v', '-COMP:INF'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'ARG', 'COMP:P', 'ASP:BOUNDED', 'LF:sell', 'SPEC:P', 'PF:myy', '-COMP:V', '-COMP:N', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'V', '-COMP:v', 'ASP', '-VAL', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_'}
naki            ['LANG:FI']
nakee           ['LANG:FI']
nake-           {'ARG', 'COMP:P', 'ASP:BOUNDED', 'PF:nake', 'SPEC:P', '-COMP:MA/tta', '-COMP:V', '-COMP:N', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', 'LANG:FI', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'SPEC:ADV', 'V', '-COMP:v', 'ASP', '-VAL', '!COMP:*', '-COMP:ESSA/inf', '-COMP:MA/ssa', '-SPEC:FORCE', 'PHI:NUM:_', 'LF:see'}
nayttaa         ['LANG:FI']
naytta-         {'COMP:P', '!SPEC:D', '-ARG', 'SPEC:P', '-COMP:V', 'PF:naytta', '-COMP:N', 'LF:seem', 'VAL', 'LANG:FI', '-SPEC:T/fin', 'SPEC:TO/inf', 'V', '!COMP:VA/inf', '-COMP:v', 'ASP', 'SPEC:ADV', '-SPEC:FORCE', 'SEM:internal'}
ndo             {'-COMP:T/fin', '-SPEC:V', 'LANG:EN', 'COMP:V', 'LF:ing', '-SPEC:T/fin', '?ARG', '-COMP:C/fin', '-COMP:FORCE', '!COMP:*', 'COMP:v', 'PF:PRG', 'PRG', 'INF', 'VAL'}
ne              {'adjoinable', '-SPEC:P', '-ARG', 'COMP:N', 'PF:ne', '-COMP:D', '-SPEC:MA/lla', 'PHI:PER:3', '!COMP:*', '!PROBE:N', 'LANG:FI', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:uR', 'LF:those', '-COMP:P', 'PHI:NUM:PL', '-SPEC:Neg/fin', '-SPEC:C', 'OP', 'D', '-SPEC:INF', '-SPEC:V'}
niiden          ['LANG:EN']
nen             {'TAIL:D', 'LF:ing', 'A', '-SPEC:A', '-SPEC:D', 'PF:a', 'SPEC:*', 'LANG:FI', 'COMP:0'}
not             {'ARG', 'POL:NEG', 'PHI:DET:_', 'LANG:EN', 'PHI:GEN:_', '-COMP:C', 'LF:not', '-COMP:D', 'SPEC:*', 'PF:not', '-COMP:FIN', '-VAL', '!COMP:*', 'PHI:PER:_', 'Neg', '-SPEC:T/fin', 'PHI:NUM:_'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'SPEC:D', '-COMP:MA/inf', 'ARG', 'COMP:P', 'SPEC:P', '-COMP:T', '-COMP:D', '-COMP:V', '-COMP:N', 'PF:nukku', 'PHI:PER:_', 'LANG:FI', '-SPEC:T/fin', '-COMP:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:sleep', 'SPEC:ADV', 'V', '-COMP:v', 'ASP', '-VAL', '-COMP:Neg/fin', 'CLASS:INTR', '-SPEC:FORCE', 'PHI:NUM:_'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', 'LF:possessions', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'PF:omaisuuden', 'COMP:C', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
operatoria      ['LANG:IT']
operatoria-     {'SPEC:D', '2SPEC', 'LANG:IT', 'PF:operatoria', '0', 'LF:operation'}
ostaa           ['LANG:FI']
osta-           {'ARG', 'COMP:P', 'ASP:BOUNDED', 'SPEC:P', 'PF:osta', '-COMP:V', '-COMP:N', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', 'LANG:FI', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'V', '-COMP:v', 'ASP', '-VAL', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', 'LF:buy'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', 'SEM:nonreferential', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', '-COMP:A', '-COMP:AUX', '-SPEC:V', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', 'LF:day', 'COMP:D/rel', 'COMP:R', 'PF:paiva'}
past            {'ARG', 'adjoinable', '-SPEC:P', 'LANG:EN', '-COMP:ADV', 'PF:past', '-COMP:T', 'P', '-COMP:N', 'COMP:D', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:*', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:C/fin', '-COMP:T/fin', 'PHI:DET:_', '-COMP:uWH', '-SPEC:iWH', '-SPEC:ADV', 'LF:past', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:iR', '-VAL', '!COMP:*', '-SPEC:FORCE', '-SPEC:INF', '-float', '-COMP:A', '-SPEC:v', '-SPEC:V'}
Pariisia        ['LANG:FI']
Pariisi-        {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', 'LF:Paris', '-COMP:AUX', 'PF:Pariisi', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', 'PF:Pekka', '-COMP:N', '-SEM:directional', 'COMP:C', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', 'LF:Pekka', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'ARG', 'COMP:P', 'SPEC:P', '-COMP:V', '-COMP:N', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', 'LANG:FI', '-SPEC:T/fin', 'LF:fear', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'V', '-COMP:v', 'ASP', '-VAL', '!COMP:*', 'SPEC:ADV', 'PF:pelkaa', '-SPEC:FORCE', 'PHI:NUM:_'}
persuades       ['LANG:EN']
persuade-       {'ARG', 'COMP:P', 'LANG:EN', 'SPEC:P', '-COMP:V', '-COMP:N', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'PF:persuade', 'COMP:TO/inf', 'SPEC:TO/inf', 'PHI:DET:_', 'SEM:external', 'V', '-COMP:v', 'ASP', '-VAL', 'LF:persuade', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_'}
peruuntui       ['LANG:FI']
peruuntu-       {'SPEC:D', 'ARG', 'COMP:P', '-COMP:V', '-COMP:N', 'LF:cancelled', 'PHI:PER:_', 'LANG:FI', '-SPEC:T/fin', 'PF:peruuntui', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:ADV', 'V', '-COMP:v', 'ASP', '-VAL', 'SPEC:P', '-SPEC:FORCE', 'PHI:NUM:_'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'ARG', 'COMP:P', 'ASP:BOUNDED', 'PF:pese_asp', 'SPEC:P', '-COMP:V', '-COMP:N', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', 'LANG:FI', '-SPEC:T/fin', 'LF:wash', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'V', '-COMP:v', 'ASP', '-VAL', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_'}
pese-           {'ARG', 'COMP:P', 'SPEC:P', '-COMP:V', '-COMP:N', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', 'LANG:FI', '-SPEC:T/fin', 'LF:wash', 'SPEC:TO/inf', 'PF:pese', '-COMP:P', 'PHI:DET:_', 'V', '-COMP:v', 'ASP', '-VAL', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_'}
petardi         {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', '-SPEC:N', 'LF:firecrackers', '-SPEC:T/fin', 'N', 'SPEC:A', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', 'PF:petardi', '-COMP:v', 'LANG:IT', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
pieni           ['LANG:FI']
pieni-          {'SPEC:D', '2SPEC', 'LF:small', 'PF:pieni-', '0', 'LANG:FI'}
poikien         ['LANG:FI']
poika-          {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'LF:boy', 'N', 'SPEC:A', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', 'COMP:R', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'PF:poika', '-SPEC:V'}
puhelinta       ['LANG:FI']
puhelin-        {'SPEC:D', '2SPEC', 'PF:puhelin', '0', 'LF:phone', 'LANG:FI'}
punainen        ['LANG:FI']
puna-           {'SPEC:D', '2SPEC', 'LF:red', 'PF:puna-', '0', 'LANG:FI'}
presupposto     {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', '-COMP:A', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', 'LANG:IT', 'PF:presupposto', '-SPEC:FORCE', '-SPEC:INF', 'LF:presupposition', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
primary         {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', 'PF:primary', '-COMP:VA/inf', 'LF:nurse', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', 'LANG:IT', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
promises        ['LANG:EN']
promise-        {'SPEC:D', 'ARG', 'COMP:P', 'LANG:EN', 'SPEC:P', '-COMP:V', '-COMP:N', 'COMP:D', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:DET:_', 'LF:promise', 'V', 'PF:promise', '-COMP:v', 'ASP', '-VAL', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'SEM:internal'}
problem         {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', 'LANG:EN', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'PF:problem', 'COMP:C', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'LF:problem', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
pyytaa          ['LANG:FI']
pyyta-          {'ARG', 'COMP:P', 'SPEC:P', '-COMP:V', '-COMP:N', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', 'LANG:FI', '-SPEC:T/fin', 'PHI:NUM:_', 'SPEC:TO/inf', 'PHI:DET:_', 'SEM:external', 'LF:ask', '-COMP:P', 'V', '-COMP:v', 'ASP', '-VAL', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', 'PF:pyyda'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'COMP:P', 'ARG', '-COMP:MA/inf', 'SPEC:D', 'LANG:EN', 'LAMG:EN', 'SPEC:P', '-COMP:D', '-COMP:V', '-COMP:N', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:T/fin', 'LF:race', 'SPEC:TO/inf', 'PHI:DET:_', 'PF:race', 'V', 'SPEC:ADV', '-COMP:v', 'ASP', '-VAL', 'CLASS:INTR', '-SPEC:FORCE', 'PHI:NUM:_'}
raukesi         ['LANG:FI']
raukea-         {'ARG', 'COMP:P', 'PF:raukea', 'SPEC:P', '-COMP:V', '-COMP:N', 'PHI:PER:_', 'LANG:FI', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', 'V', 'LF:terminate', '-COMP:v', 'ASP', '-VAL', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_'}
red             ['LANG:EN']
red-            {'SPEC:D', 'PF:red', '2SPEC', 'LF:red', 'LANG:EN', '0'}
saavuttaa       ['LANG:FI']
saavutta-       {'ARG', 'COMP:P', 'ASP:BOUNDED', 'SPEC:P', '-COMP:V', '-COMP:N', 'PF:saavutta-', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', 'LANG:FI', '!COMP:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'V', 'LF:reach', '-COMP:v', 'ASP', '-VAL', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'SPEC:D', 'ARG', 'COMP:P', 'SPEC:P', '-COMP:V', 'LF:say', '-COMP:N', 'COMP:VA/inf', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', 'LANG:FI', '-SPEC:T/fin', 'PF:sano-', 'SPEC:TO/inf', 'COMP:FORCE', '-COMP:P', 'PHI:DET:_', 'V', '-COMP:v', 'ASP', '-VAL', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_'}
said            ['LANG:EN']
say'            {'SPEC:D', 'ARG', 'COMP:P', 'LANG:EN', 'PF:say', '-COMP:V', 'LF:say', '-COMP:N', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:ADV', 'V', '-COMP:v', '-SPEC:FORCE', 'ASP', '-VAL', 'SPEC:P', '!COMP:FORCE', 'PHI:NUM:_'}
say-            {'SPEC:D', 'ARG', 'COMP:P', 'LANG:EN', 'PF:say', '-COMP:V', 'LF:say', '-COMP:N', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:ADV', 'V', '-COMP:v', '-SPEC:FORCE', 'ASP', '-VAL', 'SPEC:P', '!COMP:FORCE', 'PHI:NUM:_'}
sala            ['LANG:IT']
sala-           {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', 'PF:sala', '-COMP:WH', '-SPEC:C/fin', 'LF:room', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', 'LANG:IT', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
scoppiati       ['LANG:IT']
scoppia-        {'ARG', 'COMP:P', 'LF:explode', 'SPEC:P', '-COMP:V', '-COMP:N', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:DET:_', 'V', 'PF:scoppia', '-COMP:v', 'ASP', 'LANG:IT', '-VAL', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_'}
sentenza        {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', '-SPEC:N', 'PF:sentenza', '-SPEC:T/fin', 'N', 'SPEC:A', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'LF:sentence', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', 'LANG:IT', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
Seine           ['LANG:EN']
Seine-          {'-SPEC:R', 'COMP:P', 'COMP:uR', 'PF:Seine', '-SPEC:P', 'LANG:EN', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', '-SPEC:FORCE', 'LF:Seine', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
sembrano        ['LANG:IT']
sembra-         {'SPEC:D', 'COMP:P', 'PF:sembra', '-ARG', 'LANG:EN', '-COMP:D', '!COMP:ARE/inf', '-COMP:V', '-COMP:N', 'LF:seem', '-SPEC:T/fin', '-ASP', 'SPEC:TO/inf', 'SPEC:ADV', 'V', '-COMP:v', '-VAL', 'SPEC:P', '-SPEC:FORCE'}
sleeps          ['LANG:EN']
sleep           {'ARG', 'COMP:P', '-COMP:MA/inf', 'SPEC:D', 'LANG:EN', 'SPEC:P', '-COMP:D', '-COMP:V', '-COMP:N', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:DET:_', 'PF:sleep', 'LF:sleep', 'SPEC:ADV', 'V', '-COMP:v', 'ASP', '-VAL', 'CLASS:INTR', '-SPEC:FORCE', 'PHI:NUM:_'}
sleep-          {'ARG', 'COMP:P', '-COMP:MA/inf', 'SPEC:D', 'LANG:EN', 'SPEC:P', '-COMP:D', '-COMP:V', '-COMP:N', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:DET:_', 'PF:sleep', 'LF:sleep', 'SPEC:ADV', 'V', '-COMP:v', 'ASP', '-VAL', 'CLASS:INTR', '-SPEC:FORCE', 'PHI:NUM:_'}
solution        {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', 'LANG:EN', 'PF:solution', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', 'LF:solution', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', 'PF:sopimus', '-COMP:VA/inf', 'COMP:R/D', 'LF:agreement', '-COMP:C/fin', '-COMP:V', '!COMP:A/inf', '-COMP:N', 'COMP:C', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
spinge          ['LANG:IT']
spinge-         {'ARG', '-COMP:V', 'PF:spinge', '-COMP:N', 'PHI:PER:_', '-SPEC:T/fin', '!COMP:D', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'SPEC:ADV', 'V', 'LF:push', '-COMP:v', 'ASP', 'LANG:IT', '-VAL', 'SPEC:P', '-SPEC:FORCE', 'PHI:NUM:_'}
ssa             {'ARG', 'adjoinable', '-SPEC:P', 'PF:ssa', '-COMP:ADV', '-COMP:T', 'P', '-COMP:N', 'COMP:D', '-SPEC:N', 'PHI:PER:_', 'LANG:FI', 'TAIL:V', '-SPEC:T/fin', 'PHI:NUM:_', '-SPEC:C/fin', '-COMP:T/fin', 'PHI:DET:_', 'COMP:n/MA', '-COMP:uWH', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:Neg/fin', '-SPEC:C', 'LF:in', '-SPEC:iR', '-VAL', '!COMP:*', '-SPEC:FORCE', '-SPEC:INF', 'SPEC:*', '-COMP:A', '-SPEC:v', '-SPEC:V'}
stanno          ['LANG:IT']
sta-            {'SPEC:D', 'COMP:PRG', 'ARG', 'COMP:P', 'LANG:EN', 'SPEC:P', 'PF:sta', '-COMP:V', '-COMP:N', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', '-ASP', 'SPEC:TO/inf', 'PHI:DET:_', 'V', '-COMP:v', 'LF:stay', '-VAL', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'SEM:internal'}
sti             {'ADV', 'PF:sti', 'LF:by', 'adjoinable', '-ARG', 'TAIL:T', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:FORCE', '-SPEC:N', 'SPEC:*', 'LANG:FI', '-SPEC:T/fin'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'PF:sukka-', 'N', 'SPEC:A', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'LF:socks', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
surprised       ['LANG:EN']
surprise-       {'ARG', 'COMP:P', 'LF:surprise', 'LANG:EN', 'PF:surprise', 'SPEC:P', '-COMP:V', '-COMP:N', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', '-COMP:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'V', '-COMP:v', 'ASP', '-VAL', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_'}
talo            {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', 'PF:talo', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', 'LF:house', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
tama            ['LANG:EN']
tama-           {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'LF:this', 'COMP:C', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'SPEC:A', 'N', 'PHI', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'PF:tama', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'ARG', 'MODAL', 'COMP:P', 'SPEC:P', '-COMP:V', '!COMP:A/inf', '-COMP:N', 'FIN', 'PF:taytyy', 'PHI:PER:_', 'LANG:FI', '-SPEC:T/fin', 'LF:must', '-ASP', 'SPEC:TO/inf', 'PHI:DET:_', 'V', '-COMP:v', '-VAL', 'SPEC:ADV', '-SPEC:FORCE', 'SPEC:*', 'PHI:NUM:_'}
teki            ['LANG:FI']
teke-           {'ARG', 'COMP:P', 'ASP:BOUNDED', '-COMP:A/inf', 'LF:make', 'SPEC:P', '-COMP:V', '-COMP:N', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', 'LANG:FI', '!COMP:D', '-SPEC:T/fin', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'PF:teke', 'V', '-COMP:v', 'ASP', '-VAL', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_'}
that            {'PF:that', 'LF:that', 'LANG:EN', '-ARG', 'FORCE', 'COMP:C/fin', '-VAL', '!COMP:*', 'COMP:T/fin', 'FIN', '!PROBE:FIN', '-SPEC:*'}
the             {'adjoinable', '-SPEC:P', 'LANG:EN', '-ARG', 'COMP:N', '-COMP:D', '-SPEC:MA/lla', 'LF:the', '!COMP:*', 'PHI:DEF:DEF', '!PROBE:N', '-SPEC:T/fin', '-COMP:T/fin', 'PF:the', '-COMP:uR', '-COMP:P', '-SPEC:Neg/fin', '-SPEC:C', 'OP', 'D', '-SPEC:INF', '-SPEC:V'}
to              {'ARG', 'adjoinable', '-SPEC:P', 'LANG:EN', 'P', 'COMP:D', 'PHI:PER:_', 'TAIL:V', 'PHI:DET:_', '+SEM:directional', '-SPEC:iWH', '-SPEC:Neg/fin', '-SPEC:C', '!COMP:*', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:ADV', '-COMP:T', 'PF:to', '-COMP:N', '-SPEC:N', 'LF:to', '-SPEC:*', '-SPEC:T/fin', 'PHI:GEN:_', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:uWH', '-SPEC:ADV', '-SPEC:iR', '-VAL', '-SPEC:INF', '-float', '-COMP:A', '-SPEC:v', '-SPEC:V'}
to_inf          {'adjoinable', 'LANG:EN', 'COMP:V', '?ARG', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:T/fin', 'COMP:v', 'TO/inf', '-COMP:FORCE', 'LF:TO/inf', '-VAL', '!COMP:*', 'PF:TO/inf', '-SPEC:v', 'INF', '-SPEC:V'}
towards         {'ARG', 'adjoinable', '-SPEC:P', 'LANG:EN', '-COMP:ADV', '-COMP:T', 'LF:towards', 'P', '-COMP:N', 'COMP:D', '-SPEC:N', 'PHI:PER:_', 'TAIL:V', '-SPEC:T/fin', '-SPEC:*', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:C/fin', '-COMP:T/fin', 'PHI:DET:_', '-COMP:uWH', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:Neg/fin', 'PF:towards', '-SPEC:C', '-SPEC:iR', '-VAL', '!COMP:*', '-SPEC:FORCE', '-SPEC:INF', '-float', '-COMP:A', '-SPEC:v', '-SPEC:V'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'ARG', 'COMP:P', 'SPEC:P', '-COMP:V', '-COMP:N', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', 'LANG:FI', '-SPEC:T/fin', 'PF:tonaise', 'SPEC:TO/inf', 'LF:nudge', '-COMP:P', 'PHI:DET:_', 'V', '-COMP:v', 'ASP', '-VAL', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_'}
tta             {'ARG', 'adjoinable', '-SPEC:P', 'PF:tta', '-COMP:ADV', '-COMP:T', 'P', '-COMP:N', 'COMP:D', '-SPEC:N', 'PHI:PER:_', 'LANG:FI', '-SPEC:T/fin', 'PHI:NUM:_', 'ADV', 'LF:without', '-SPEC:C/fin', '-COMP:T/fin', 'PHI:DET:_', 'COMP:n/MA', '-COMP:uWH', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:iR', '-VAL', '!COMP:*', '-SPEC:FORCE', '-SPEC:INF', 'SPEC:*', '-COMP:A', '-SPEC:v', '-SPEC:V'}
tries           ['LANG:EN']
try-            {'SPEC:D', 'ARG', 'COMP:P', 'LANG:EN', 'LF:try', 'SPEC:P', '-COMP:V', '-COMP:N', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'PF:try', 'SPEC:TO/inf', '!COMP:TO/inf', 'PHI:DET:_', 'V', '!COMP:-ARG', '-COMP:v', 'ASP', '-VAL', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'SEM:internal'}
verifiche       {'-SPEC:R', 'COMP:P', 'COMP:uR', 'LF:verification', '-SPEC:P', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', 'PF:verifiche', '-COMP:N', 'COMP:C', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', 'LANG:IT', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'SPEC:D', 'ARG', 'COMP:P', '-COMP:MA/inf', 'SPEC:P', '-COMP:D', '-COMP:V', '-COMP:N', 'PHI:PER:_', 'LANG:FI', '-SPEC:T/fin', 'LF:flow', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:ADV', 'V', '!COMP:P', '-COMP:v', 'ASP', '-VAL', 'CLASS:INTR', '-SPEC:FORCE', 'PHI:NUM:_', 'PF:virtaa'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'ARG', 'COMP:P', 'LANG:EN', 'SPEC:P', '-COMP:V', '-COMP:N', 'PHI:PER:_', 'PF:volu', '-SPEC:T/fin', '-SPEC:*', 'PHI:GEN:_', 'LF:want', 'SPEC:TO/inf', 'PHI:DET:_', 'V', '-COMP:v', 'ASP', '-VAL', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'SEM:internal'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'ARG', 'COMP:P', 'PF:voitta', 'ASP:BOUNDED', 'LANG:EN', 'SPEC:P', '-COMP:V', '-COMP:N', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:DET:_', '-COMP:P', 'LF:win', 'V', '-COMP:v', 'ASP', 'SEM:achievement', '-VAL', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_'}
wants           ['LANG:EN']
want-           {'ARG', 'COMP:P', 'LANG:EN', 'SPEC:P', '-COMP:V', '-COMP:N', 'COMP:D', 'CLASS:TR', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'PF:want', 'COMP:TO/inf', 'LF:want', 'PHI:DET:_', '-COMP:P', 'SPEC:ADV', 'V', '-COMP:v', 'ASP', '-VAL', '!COMP:*', '-SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_'}
what            ['LANG:EN']
what-           {'-SPEC:R', '-SPEC:P', 'LANG:EN', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'COMP:C', '-COMP:WH', 'PF:what', 'PHI_N', '-SPEC:V', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-SPEC:INF', '-COMP:A', 'COMP:R', 'LF:what'}
which           {'adjoinable', '-SPEC:P', 'LANG:EN', '-ARG', 'COMP:N', '-COMP:D', 'PF:which', '-SPEC:MA/lla', '!COMP:*', 'LF:which', '!PROBE:N', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:uR', '-COMP:P', '-SPEC:Neg/fin', 'OP:WH', '-SPEC:C', 'OP', 'D', '-SPEC:INF', '-SPEC:V'}
who             ['LANG:EN']
who-            {'-SPEC:R', '-SPEC:P', 'LANG:EN', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'COMP:C', 'LF:who', '-COMP:WH', 'PHI_N', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', 'PF:who', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
whether         {'OP:Q', 'LANG:EN', '-ARG', 'Q', 'COMP:T/fin', 'FIN', 'COMP:C/fin', '-SPEC:*', 'FORCE', 'LF:whether', 'OP:WH', 'OP', '-VAL', '!COMP:*', 'PF:whether', '!PROBE:FIN'}
yrittaa         ['LANG:FI']
yritta-         {'SPEC:D', 'ARG', 'COMP:P', 'LANG:EN', 'LF:try', 'SPEC:P', '-COMP:V', '!COMP:A/inf', '-COMP:N', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:DET:_', 'V', 'PF:yritta', '!COMP:-ARG', '-COMP:v', 'ASP', '-VAL', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'SEM:internal'}
mina            ['LANG:EN']
mina-           {'-SPEC:R', '-SPEC:P', 'PF:mina', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'COMP:C', '-COMP:WH', 'PHI_N', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', 'LF:I', '-COMP:N', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
sina            ['LANG:EN']
sina-           {'-SPEC:R', 'LF:you', '-SPEC:P', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'COMP:C', '-COMP:WH', 'PHI_N', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', '-COMP:N', 'PF:sina', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
han             ['LANG:EN']
han-            {'-SPEC:R', '-SPEC:P', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'LF:s/he', 'PF:han', 'COMP:C', '-COMP:WH', 'PHI_N', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-SPEC:R', '-SPEC:P', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'COMP:C', '-COMP:WH', 'PHI_N', 'PF:me', 'LF:we', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
te              ['LANG:EN']
te-             {'-SPEC:R', 'LF:you', '-SPEC:P', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'COMP:C', 'PF:te', '-COMP:WH', 'PHI_N', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'PF:he', '-SPEC:R', '-SPEC:P', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'LF:they', 'COMP:C', '-COMP:WH', 'PHI_N', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-SPEC:N', 'LANG:FI', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
se              {'adjoinable', '-SPEC:P', '-ARG', 'COMP:N', 'LF:the/that', '-COMP:D', '-SPEC:MA/lla', '!COMP:*', '!PROBE:N', 'LANG:FI', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:uR', '-COMP:P', '-SPEC:Neg/fin', '-SPEC:C', 'OP', 'D', '-SPEC:INF', 'PF:se', '-SPEC:V'}
sen             {'adjoinable', '-SPEC:P', '-ARG', 'COMP:N', 'LF:the/that', '-COMP:D', '-SPEC:MA/lla', '!COMP:*', 'TAIL:PHI', '!PROBE:N', 'LANG:FI', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:uR', '-COMP:P', 'PF:sen', '-SPEC:Neg/fin', '-SPEC:C', 'OP', 'TAIL:*POL:NEG', 'D', '-SPEC:INF', 'TAIL:ASP', '-SPEC:V'}
I               ['LANG:EN']
I-              {'-SPEC:R', '-SPEC:P', 'LANG:EN', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'COMP:C', '-COMP:WH', 'PHI_N', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', 'LF:I', '-COMP:N', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'PF:I', 'N', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
you             ['LANG:EN']
you-            {'-SPEC:R', 'LF:you', '-SPEC:P', 'LANG:EN', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'COMP:C', 'PF:you', '-COMP:WH', 'PHI_N', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
he              ['LANG:EN']
he-             {'PF:he', '-SPEC:R', '-SPEC:P', 'LANG:EN', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'COMP:C', '-COMP:WH', 'PHI_N', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-SPEC:N', 'LF:he', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
she             ['LANG:EN']
she-            {'-SPEC:R', '-SPEC:P', 'LANG:EN', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'COMP:C', '-COMP:WH', 'PHI_N', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-SPEC:N', 'PF:she', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-SPEC:INF', 'LF:she', '-COMP:A', 'COMP:R', '-SPEC:V'}
we              ['LANG:EN']
we-             {'-SPEC:R', '-SPEC:P', 'LANG:EN', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', 'PF:we', '-COMP:V', 'COMP:C', '-COMP:WH', 'PHI_N', 'LF:we', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
you_pl          ['LANG:EN']
you_pl-         {'-SPEC:R', 'COMP:P', 'COMP:uR', '-SPEC:P', 'LF:you_pl', 'LANG:EN', 'PF:you_pl', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', 'PHI', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
they            ['LANG:EN']
they-           {'-SPEC:R', '-SPEC:P', 'LANG:EN', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'LF:they', 'COMP:C', '-COMP:WH', 'PHI_N', 'PF:they', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
it              ['LANG:EN']
it-             {'adjoinable', '-SPEC:P', 'LANG:EN', '-ARG', 'COMP:N', 'PF:it', '-COMP:D', '-SPEC:MA/lla', '!COMP:*', 'LF:it/that', '!PROBE:N', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:uR', '-COMP:P', '-SPEC:Neg/fin', '-SPEC:C', 'OP', 'D', '-SPEC:INF', '-SPEC:V'}
io              ['LANG:EN']
io-             {'-SPEC:R', '-SPEC:P', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'PF:io', 'COMP:C', '-COMP:WH', 'PHI_N', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', 'LF:I', '-COMP:N', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', 'LANG:IT', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
tu              ['LANG:EN']
tu-             {'-SPEC:R', 'LF:you', '-SPEC:P', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'PF:tu', 'COMP:C', '-COMP:WH', 'PHI_N', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', 'LANG:IT', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
lui             ['LANG:EN']
lui-            {'-SPEC:R', '-SPEC:P', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'COMP:C', '-COMP:WH', 'PF:lui', 'PHI_N', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-SPEC:N', 'LF:he', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', 'LANG:IT', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
lei             ['LANG:EN']
lei-            {'-SPEC:R', '-SPEC:P', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'COMP:C', '-COMP:WH', 'PHI_N', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', '-COMP:N', 'PF:lei', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', 'LANG:IT', '-SPEC:INF', 'LF:she', '-COMP:A', 'COMP:R', '-SPEC:V'}
noi             ['LANG:EN']
noi-            {'-SPEC:R', '-SPEC:P', '-COMP:*', 'PF:noi', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'COMP:C', '-COMP:WH', 'PHI_N', 'LF:we', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', 'LANG:IT', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
voi             ['LANG:EN']
voi-            {'-SPEC:R', '-SPEC:P', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'COMP:C', '-COMP:WH', 'PHI_N', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', 'LF:you_pl', '-COMP:C/fin', '-COMP:N', '-SPEC:N', 'PF:voi', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', 'LANG:IT', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
loro            ['LANG:EN']
loro-           {'-SPEC:R', '-SPEC:P', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'LF:they', 'COMP:C', '-COMP:WH', 'PF:loro', 'PHI_N', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', 'LANG:IT', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
mi              ['LANG:EN']
mi-             {'-SPEC:R', '-SPEC:P', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', 'LF:me', '-COMP:V', 'COMP:C', '-COMP:WH', 'PHI_N', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', 'PF:mi(cl)', '-COMP:C/fin', '-COMP:N', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'CL', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', 'LANG:IT', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
la              ['LANG:EN']
la-             {'-SPEC:R', 'PF:la(cl)', '-SPEC:P', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'COMP:C', '-COMP:WH', 'PHI_N', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', 'LF:her', '-COMP:N', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'CL', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', 'LANG:IT', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
lo              ['LANG:EN']
lo-             {'-SPEC:R', '-SPEC:P', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'COMP:C', '-COMP:WH', 'PHI_N', 'LF:him', '-COMP:v', '-SPEC:FORCE', 'PF:lo(cl)', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'CL', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', 'LANG:IT', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
si              ['LANG:EN']
si-             {'-SPEC:R', '-SPEC:P', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'COMP:C', '-COMP:WH', 'PHI_N', 'CAL:CL', '-COMP:v', 'LF:3sg', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', '-COMP:C/fin', '-COMP:N', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', 'PF:si(cl)', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', 'LANG:IT', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-SPEC:R', '-SPEC:P', '-COMP:*', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'COMP:C', '-COMP:WH', 'PHI_N', '-COMP:v', '-SPEC:FORCE', 'COMP:D/rel', 'COMP:P', 'COMP:uR', 'PF:ci', 'LF:there', '-COMP:C/fin', '-COMP:N', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', 'LANG:IT', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
[-n]            {'PHI:HUM:HUM', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:PER:1', 'LANG:FI', 'PHI:NUM:SG'}
[-t]            {'PHI:HUM:HUM', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:PER:2', 'PHI:NUM:SG', 'LANG:FI'}
[-V]            {'PHI', 'inflectional', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG'}
[-mme]          {'PHI:HUM:HUM', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:PER:1', 'PHI:NUM:PL', 'LANG:FI'}
[-mme]          {'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF', 'PHI:PER:1', 'PHI:NUM:PL', 'LANG:FI'}
[-tte]          {'PHI:HUM:HUM', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:2', 'LANG:FI'}
[-vat]          {'PHI', 'inflectional', 'PHI:PER:3', 'PHI:NUM:PL', 'LANG:FI'}
[-ni]           {'PHI:HUM:HUM', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:PER:1', 'LANG:FI', 'PHI:NUM:SG'}
[-si]           {'PHI:HUM:HUM', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:PER:2', 'PHI:NUM:SG', 'LANG:FI'}
[-nsa]          {'PHI', 'inflectional', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG'}
[-an]           {'PHI', 'inflectional', 'PHI:DET:DET', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG'}
[-nne]          {'PHI:HUM:HUM', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:2', 'LANG:FI'}
[-s]            {'PHI:GEN:F', 'PHI', 'inflectional', 'PHI:PER:3', 'LANG:EN', 'PHI:GEN:M', 'PHI:NUM:SG'}
[-0]            {'PHI', 'PHI:DET:DEF', 'PHI:PER:1', 'LANG:EN', 'PHI:NUM:PL', 'PHI:PER:2', 'PHI:NUM:SG', 'PHI:GEN:N', 'inflectional', 'PHI:PER:3'}
[-o]            {'PHI:HUM:HUM', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:PER:1', 'LANG:IT', 'PHI:NUM:SG'}
[-i]            {'PHI:HUM:HUM', 'PHI', 'inflectional', 'PHI:DET:DEF', 'LANG:IT', 'PHI:PER:2', 'PHI:NUM:SG'}
[-a]            {'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:PER:3', 'LANG:IT', 'PHI:NUM:SG'}
[-e]            {'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:PER:3', 'LANG:IT', 'PHI:NUM:SG'}
[-iamo]         {'PHI:HUM:HUM', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:PER:1', 'LANG:IT', 'PHI:NUM:PL'}
[-te]           {'PHI:HUM:HUM', 'PHI', 'inflectional', 'PHI:DET:DEF', 'LANG:IT', 'PHI:NUM:PL', 'PHI:PER:2'}
[-no]           {'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:PER:3', 'LANG:IT', 'PHI:NUM:PL'}
[-nom]          {'adjoinable', 'inflectional', 'NOM', 'LANG:EN', 'TAIL:FIN,ARG,VAL'}
[-par]          {'adjoinable', 'PAR', 'inflectional', 'TAIL:ARG,-VAL', 'LANG:FI'}
[-gen]          {'inflectional', 'GEN', 'LANG:EN', '-float', 'TAIL:INF,ARG'}
gen             {'inflectional', 'GEN', 'LANG:EN', '-float', 'TAIL:INF,ARG'}
[-n_acc]        {'adjoinable', 'TAIL:ARG,ASP:BOUNDED', 'inflectional', 'TAIL:*POL:NEG', 'TAIL:PHI', 'n-ACC', 'LANG:FI'}
[-t_acc]        {'adjoinable', 'TAIL:ARG,ASP:BOUNDED', 'inflectional', 'TAIL:*POL:NEG', 't-ACC', 'LANG:FI'}
[-0_acc]        {'adjoinable', '0_ACC', 'inflectional', 'TAIL:*POL:NEG', 'TAIL:*PHI', 'LANG:FI', 'TAIL:ARG,ASP:BOUNDED'}
asp             {'inflectional', 'ASP:BOUNDED', 'LANG:EN'}
a'              {'a', 'LF:A', 'LANG:X', 'PF:a'}
b'              {'LF:B', 'LANG:X', 'PF:b', 'b'}
b''             {'LF:B', 'b', 'LANG:EN', '-COMP:c', 'PF:b'}
c''             {'PF:c', 'LF:C', 'LANG:EN', 'SPEC:a', 'c'}
c'              {'LF:C', 'PF:c', 'LANG:X', 'c'}
d'              {'LF:D', 'PF:d', 'd', 'LANG:'}
a''             ['LANG:EN']
x'              {'x', 'PF:x', 'LF:X', 'LANG:X'}
y'              {'LANG:X', 'y', 'PF:y', 'LF:Y'}
z'              {'LF:Z', 'PF:x', 'z', 'LANG:X'}
John'           {"N'", 'LF:John', 'LANG:X', 'PF:John'}
admires'        {'PF:admires', 'LANG:X', 'LF:admires', "V'"}
admires''       {'SPEC:D', 'ARG', 'COMP:P', 'LANG:EN', '-COMP:V', '-COMP:N', 'LF:admires', 'PF:admires', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:GEN:_', 'SPEC:TO/inf', 'PHI:DET:_', 'SPEC:ADV', 'V', '-COMP:v', 'ASP', '-VAL', 'SPEC:P', '-SPEC:FORCE', 'PHI:NUM:_'}
Mary'           {"N'", 'PF:Mary', 'LANG:X', 'LF:mary'}
T/fin           {'ARG', '-SPEC:Neg', 'SPEC:D', 'SPEC:C/fin', 'LANG:EN', 'COMP:V', 'T/fin', '-SPEC:TO/inf', '!SPEC:*', 'FIN', '-SPEC:N', 'PHI:PER:_', 'VAL', '-SPEC:T/fin', 'PHI:GEN:_', 'PF:T', 'PHI:NUM:_', 'SPEC:FORCE', 'SPEC:TO/inf', '-COMP:T/fin', '-SPEC:V', 'T', 'LF:T', 'COMP:T/prt', 'PHI:DET:_', 'COMP:v', '-SPEC:C', '!COMP:*', '!PROBE:V', 'SPEC:*', '-SPEC:v', '-COMP:INF'}
v               {'ARG', 'SPEC:D', 'PF:v', 'PHI:DET:_', 'LANG:EN', 'COMP:V', 'LF:v', 'PHI:GEN:_', 'v', 'ASP', '-VAL', '!COMP:*', '!PROBE:V', '-SPEC:N', 'PHI:PER:_', 'PHI:NUM:_'}
C/fin           {'LANG:EN', '-ARG', '-COMP:C/fin', 'COMP:Neg/fin', '-COMP:T/prt', 'PF:C', 'COMP:T/fin', 'FIN', '-SPEC:N', 'VAL', '-SPEC:T/fin', '-SPEC:C/fin', 'C/fin', 'C', '!COMP:*', 'LF:C/fin', 'SPEC:*', '!PROBE:FIN'}
T               {'ARG', 'SPEC:D', 'LANG:EN', 'COMP:V', '!COMP:*', 'FIN', '-SPEC:N', 'PHI:PER:_', 'VAL', '-SPEC:T/fin', 'PHI:GEN:_', 'PF:T', 'PHI:DET:_', 'T', 'LF:T', 'COMP:T/prt', '-COMP:NEG', 'COMP:v', '!PROBE:V', '-SPEC:FORCE', 'SPEC:*', 'PHI:NUM:_', '-SPEC:V'}
T/prt           {'ARG', 'SPEC:D', 'LANG:EN', 'COMP:V', 'PF:T/prt', '!COMP:*', 'COMP:D', 'FIN', '-SPEC:N', 'PHI:PER:_', 'VAL', '-SPEC:T/fin', 'PHI:GEN:_', 'T/prt', '-SPEC:C/fin', 'PHI:DET:_', 'T', 'COMP:T/prt', '-COMP:NEG', 'COMP:v', '!PROBE:V', 'LF:T/prt', '-SPEC:FORCE', 'SPEC:*', 'PHI:NUM:_', '-SPEC:V'}
a0              {'TAIL:D', '-adjoinable', 'LF:A', 'LANG:EN', 'PF:A', 'A', '-SPEC:A', '-SPEC:D', 'COMP:0'}
n               {'-SPEC:R', 'ARG', '-SPEC:P', '!SPEC:D', 'LANG:EN', 'PF:n', '-COMP:VA/inf', 'COMP:R/D', '-COMP:V', 'n', '!SPEC:*', 'COMP:C', 'INF', 'PHI:PER:_', '-COMP:WH', 'PHI:DET:_', '-COMP:v', '!COMP:*', 'COMP:v', '-SPEC:FORCE', 'SPEC:*', 'COMP:0', 'COMP:D/rel', 'PHI:NUM:_', 'COMP:P', 'COMP:uR', 'COMP:V', 'LF:n', '-COMP:C/fin', '-COMP:N', '-SPEC:N', 'VAL', '-SPEC:T/fin', 'SPEC:A', 'N', 'PHI:GEN:_', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', '-SPEC:uWH', '-SPEC:ADV', '-SPEC:INF', '-COMP:A', 'COMP:R', '-SPEC:V'}
impass          {'ARG', 'SPEC:D', 'PHI:DET:_', 'LF:impass', 'LANG:EN', 'COMP:V', 'PHI:GEN:_', 'v', 'PF:impass', 'ASP', '-VAL', '!COMP:*', '!PROBE:V', '-SPEC:N', 'PHI:PER:_', 'PHI:NUM:_'}
cau             {'ARG', 'SPEC:D', 'LF:v/Cause', 'PHI:DET:_', 'LANG:EN', 'COMP:V', 'PHI:GEN:_', 'v', 'ASP', '-VAL', '!COMP:*', '!PROBE:V', '-SPEC:N', 'PHI:PER:_', 'PF:Cau', 'PHI:NUM:_'}
INF             {'-COMP:T/fin', 'PF:INF', 'LANG:EN', 'COMP:V', '-SPEC:V', '-COMP:C/fin', '-COMP:FORCE', '!COMP:*', 'COMP:v', '-SPEC:T/fin', 'INF', 'LF:INF'}
prtcpl          {'ARG', 'SPEC:D', 'LANG:EN', 'COMP:V', '-COMP:C/fin', 'PF:T/prt', '!COMP:*', 'COMP:D', 'FIN', '-SPEC:N', 'PHI:PER:_', 'VAL', '-SPEC:T/fin', 'PHI:GEN:_', 'T/prt', '-SPEC:C/fin', '-COMP:T/fin', 'PHI:DET:_', 'T', 'COMP:T/prt', '-COMP:FORCE', '-COMP:NEG', 'COMP:v', '!PROBE:V', 'LF:T/prt', '-SPEC:FORCE', 'SPEC:*', 'PHI:NUM:_', 'INF', '-SPEC:V'}
TO/inf          {'adjoinable', 'LANG:EN', 'COMP:V', '?ARG', '-COMP:C/fin', '!COMP:*', '-SPEC:T/fin', '-COMP:T/fin', '!COMP:V', 'TO/inf', 'LF:TO/inf', '-COMP:FORCE', '-VAL', 'COMP:v', 'PF:TO/inf', '-SPEC:v', 'INF', '-SPEC:V'}
A/inf           {'LANG:EN', 'COMP:V', '?ARG', '-COMP:C/fin', 'SPEC:*', 'A/inf', '-SPEC:T/fin', '-COMP:T/fin', 'COMP:v', '-COMP:FORCE', '-SPEC:Neg/fin', '?VAL', '!COMP:*', 'LF:A/inf', 'PF:A/inf', 'INF', '-SPEC:V'}
ARE/inf         {'LANG:EN', 'COMP:V', '?ARG', '-COMP:C/fin', 'PF:are', 'VAL', '-SPEC:T/fin', '-adjoinable', '-COMP:T/fin', 'COMP:v', 'ARE/inf', '-COMP:FORCE', 'LF:ARE/inf', '!COMP:*', 'SPEC:*', 'INF', '-SPEC:V'}
ESSA/inf        {'adjoinable', 'LANG:EN', 'COMP:V', '?ARG', '-COMP:C/fin', '-SPEC:N', 'INF', '-SPEC:T/fin', 'ADV', '-COMP:T/fin', 'TAIL:T', 'COMP:v', '-COMP:FORCE', '-SPEC:Neg/fin', '?VAL', 'PF:essa', '!COMP:*', 'ESSA/inf', '-SPEC:FORCE', 'SPEC:*', 'LF:while', '-SPEC:V'}
TUA/inf         {'ARG', 'adjoinable', 'TUA/inf', 'LANG:EN', 'COMP:V', '-COMP:C/fin', '!SPEC:*', 'LF:after', '-SPEC:N', 'PHI:PER:_', 'VAL', '-SPEC:T/fin', 'PHI:GEN:_', 'ADV', '-COMP:T/fin', 'PHI:DET:_', 'TAIL:T', 'COMP:v', '-COMP:FORCE', '-SPEC:Neg/fin', 'PF:tua', '!COMP:*', '-SPEC:FORCE', 'SPEC:*', 'PHI:NUM:_', 'INF', '-SPEC:V'}
VA/inf          {'ARG', 'LF:VA', 'LANG:EN', 'COMP:V', '-COMP:C/fin', '!COMP:*', '!SPEC:*', '-SPEC:N', 'PHI:PER:_', 'VAL', '-SPEC:T/fin', 'PHI:GEN:_', 'PF:vAn', '-COMP:T/fin', 'VA/inf', 'PHI:DET:_', '-COMP:FORCE', 'COMP:v', 'SPEC:*', 'PHI:NUM:_', 'INF', '-SPEC:V'}
MA/ssa          {'ARG', 'adjoinable', 'PF:massa', 'COMP:V', 'LANG:EN', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin', 'TAIL:V', '-SPEC:*', 'PHI:GEN:_', 'ADV', 'MA/inf', 'PHI:DET:_', 'MA/ssa', '-SPEC:Neg/fin', 'LF:in_doing', '-VAL', 'COMP:v', '-SPEC:FORCE', 'PHI:NUM:_'}
MA/tta          {'ARG', 'ADV', 'PF:matta', 'MA/inf', 'adjoinable', 'PHI:DET:_', 'LANG:EN', 'PHI:GEN:_', 'TAIL:T', '-SPEC:Neg/fin', 'LF:without_doing', '-VAL', '-SPEC:FORCE', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:NUM:_'}
MA/lla          {'ARG', 'adjoinable', 'LANG:EN', 'PHI:PER:_', 'MA/inf', 'PHI:DET:_', 'TAIL:T', '-SPEC:Neg/fin', 'COMP:v', '-SPEC:FORCE', 'PHI:NUM:_', 'PF:malla', 'COMP:V', '-SPEC:N', 'PHI:GEN:_', '-SPEC:T/fin', 'ADV', 'LF:by_doing', '-VAL'}
MA/inf          {'ARG', 'adjoinable', 'LANG:EN', 'PHI:PER:_', 'TAIL:V', 'MA/inf', 'PHI:DET:_', '-SPEC:Neg/fin', 'COMP:v', '-SPEC:FORCE', 'PHI:NUM:_', 'LF:to_do', 'COMP:V', '-SPEC:N', '-SPEC:T/fin', 'PHI:GEN:_', 'ADV', 'PF:maan', '-VAL'}
E/inf           {'ADV', 'adjoinable', 'LF:by', '-ARG', 'TAIL:T', '-SPEC:Neg/fin', 'PF:en', '-VAL', '-SPEC:FORCE', '-SPEC:N', 'SPEC:*', 'LANG:FI', '-SPEC:T/fin'}
BE-             {'SPEC:D', 'COMP:P', '-ARG', 'LANG:EN', 'SPEC:P', 'PF:BE', '-COMP:V', '-COMP:N', '-SPEC:T/fin', 'COPULA', '-COMP:T/fin', 'SPEC:TO/inf', 'LF:BE', 'COMP:T/prt', 'V', '-COMP:v', 'ASP', '-VAL', '!COMP:*', 'SPEC:ADV', '-SPEC:FORCE'}
D               {'adjoinable', '-SPEC:P', 'LANG:EN', '-ARG', 'COMP:N', '-COMP:D', 'LF:D', '-SPEC:MA/lla', '!COMP:*', '!PROBE:N', '-SPEC:T/fin', '-COMP:T/fin', '-COMP:uR', '-COMP:P', 'PF:D', '-SPEC:Neg/fin', '-SPEC:C', 'OP', 'D', '-SPEC:INF', '-SPEC:V'}
D/rel           {'adjoinable', 'D', 'OP:REL', '-SPEC:P', 'LANG:EN', '-ARG', 'COMP:N', '-COMP:D', '-COMP:C/fin', 'D/rel', '-SPEC:MA/lla', '!PROBE:N', '-SPEC:T/fin', 'LF:D/rel', '-COMP:T/fin', '-COMP:uR', 'PF:D/rel', '-SPEC:Neg/fin', '-SPEC:C', 'OP:_', 'OP', 'inflectional', '!COMP:*', '-SPEC:INF', '-SPEC:V'}
P               {'ARG', 'adjoinable', '-SPEC:P', 'LANG:EN', '-COMP:ADV', 'PF:P', '-COMP:T', 'P', '-COMP:N', 'COMP:D', '-SPEC:N', 'PHI:PER:_', '-SPEC:T/fin', '-SPEC:*', 'PHI:NUM:_', 'PHI:GEN:_', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:A', 'PHI:DET:_', '-COMP:uWH', '-SPEC:iWH', '-SPEC:ADV', '-SPEC:Neg/fin', '-SPEC:C', '-SPEC:iR', '-VAL', '!COMP:*', '-SPEC:FORCE', '-SPEC:INF', '-float', 'LF:P', '-SPEC:v', '-SPEC:V'}
pro             ['LANG:EN']
pro-            {'-SPEC:R', 'COMP:P', 'PF:(pro)', 'COMP:uR', '-SPEC:P', 'LANG:EN', '-COMP:VA/inf', 'COMP:R/D', '-COMP:C/fin', '-COMP:V', '-COMP:N', 'COMP:C', '-SPEC:N', '-SPEC:T/fin', 'SPEC:A', 'N', 'PHI', '-COMP:WH', '-SPEC:C/fin', '-COMP:AUX', 'COMP:T/prt', 'LF:pro', '-SPEC:uWH', '-SPEC:ADV', '-COMP:v', '-SPEC:FORCE', '-SPEC:INF', '-COMP:A', 'COMP:D/rel', 'COMP:R', '-SPEC:V'}
cl              {'RIGHT:ARE/inf', 'inflectional', 'LEFT:T/fin', 'RIGHT:PRG', 'LANG:EN', 'LEFT:D,CL', 'CL'}
inc             {'LANG:EN', 'inflectional', 'INCORPORATED'}
sg              {'LANG:EN', 'inflectional', 'PHI:NUM:SG'}
pl              {'LANG:EN', 'inflectional', 'PHI:NUM:PL'}
1p              {'LANG:EN', 'inflectional', 'PHI:PER:1'}
2p              {'LANG:EN', 'inflectional', 'PHI:PER:2'}
3p              {'LANG:EN', 'inflectional', 'PHI:PER:3'}
def             {'LANG:EN', 'inflectional', 'PHI:DET:DEF'}
indef           {'LANG:EN', 'inflectional', 'PHI:DET:INDEF'}
hum             {'PHI:HUM:HUM', 'LANG:EN', 'inflectional'}
nonhum          {'PHI:HUM:NONHUM', 'LANG:EN', 'inflectional'}
m               {'PHI:GEN:M', 'LANG:EN', 'inflectional'}
f               {'LANG:EN', 'PHI:GEN:F', 'inflectional'}
nom             {'LANG:EN', 'inflectional', 'NOM', 'TAIL:FIN,!COMP:*,VAL'}
acc             {'TAIL:v', 'ACC', 'inflectional', 'LANG:EN'}
dat             {'DAT', 'LANG:EN', 'inflectional', 'TAIL:v'}
uC/op           {'LANG:EN', 'inflectional', 'uC/op'}
wh              {'LANG:EN', 'OP:WH', 'inflectional', 'OP:_'}
wh_             {'OP:_', 'inflectional', 'OP', 'LANG:EN', 'FORCE:OP:WH'}
top             {'OP:TOP', 'LANG:EN', 'inflectional'}
foc             {'LANG:EN', 'inflectional', 'OP:FOC'}
C/op            {'LANG:EN', 'inflectional', 'OP:C/OP'}
Q               {'OP:WH', 'OP:Q', 'inflectional', 'OP', 'LANG:EN'}
