ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'COMP:D', '-SPEC:V', '-SPEC:P', '-COMP:N', '-SPEC:INF', '-SPEC:FORCE', 'PF:a', 'COMP:ARE/inf', 'LANG:IT', '-COMP:T/fin', 'P', '-SPEC:C', 'LF:to', '-SPEC:iWH', '-SPEC:*', '-COMP:ADV', '-SPEC:ADV', '!COMP:*', '-SPEC:Neg/fin', '-SPEC:v', '-SPEC:iR', '-ARG', '-SPEC:N', '-SPEC:C/fin', '-COMP:uWH', '-SPEC:T/fin', 'adjoinable', '-VAL'}
a_D             {'-SPEC:MA/lla', '-SPEC:P', 'D', '-SPEC:V', 'LF:D', '-SPEC:INF', '-COMP:uR', '-COMP:T/fin', 'LANG:EN', 'OP', '-SPEC:D', '-SPEC:C', '!PROBE:N', 'COMP:N', '!COMP:*', '-SPEC:Neg/fin', '-ARG', '-SPEC:N', '-SPEC:T/fin', 'adjoinable', 'PF:D', '-COMP:D'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'COMP:D', '-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', '-COMP:Neg', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:P', '-SPEC:Neg', 'SPEC:ADV', 'LANG:EN', 'PHI:DET:_', 'PF:admire', '!COMP:*', 'V', '-COMP:v', 'LF:admire', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'CLASS:TR', 'ASP', 'PHI:GEN:_'}
admire*         ['LANG:EN']
T/fin*          {'NO_DET', 'LANG:EN', '!SPEC:*', 'LF:T', '-VAL', 'NO_NUMBER', "PF:T/fin'", 'CAT:T/fin'}
v*              {'CAT:v', 'NO_DET', 'NO_NUMBER', 'PF:v', '-VAL', 'LANG:EN', 'LF:v'}
admire**        ['LANG:EN']
T/fin**         {"PF:T/fin''", 'LANG:EN', 'PHI:PER:3', 'NO_PERSON', '!SPEC:*', 'LF:T', '-VAL', 'NO_NUMBER', 'NO_DET', 'CAT:T/fin'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'PF:adora', 'COMP:D', '-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'LANG:IT', 'PHI:DET:_', 'V', '-COMP:v', 'LF:admire', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'ASP', 'PHI:GEN:_'}
antaa           ['LANG:FI']
anta-           {'COMP:D', '-COMP:N', 'COMP:P', '-COMP:FIN', '+SEM:directional', 'LANG:FI', 'SPEC:TO/inf', 'PHI:PER:_', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:D', 'PHI:DET:_', 'ASP:BOUNDED', 'LF:give', '!COMP:*', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'CLASS:DITR', 'PF:antaa', 'ASP'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'SEM:internal', 'COMP:D', '-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'LF:ask', 'SPEC:ADV', 'SPEC:D', 'LANG:EN', 'PHI:DET:_', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', 'PF:ask', '-SPEC:T/fin', 'ARG', '-VAL', 'ASP', 'PHI:GEN:_'}
ask-            {'SEM:internal', 'COMP:D', '-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'LF:ask', 'SPEC:ADV', 'SPEC:D', 'LANG:EN', 'PHI:DET:_', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', 'PF:ask', '-SPEC:T/fin', 'ARG', '-VAL', 'ASP', 'PHI:GEN:_'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'LANG:FI', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', 'LF:key', '-SEM:directional', '-COMP:T/fin', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'PF:avain', '-COMP:AUX'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'LF:car', '-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'PF:auto', 'COMP:P', 'LANG:FI', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-SEM:directional', '-COMP:T/fin', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
city            {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'LANG:EN', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', 'LF:city', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'PF:city', '-COMP:AUX'}
che             ['LANG:IT']
che-            {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'PHI_N', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'LF:who', 'PF:che', 'COMP:uR', '-COMP:T/fin', 'LANG:IT', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:*', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
chiamato        ['LANG:IT']
chiamata-       {'PF:chiamato', '-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'LANG:IT', 'PHI:DET:_', 'LF:called', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'ASP', 'PHI:GEN:_'}
danno           {'LF:damage', '-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'LANG:IT', 'COMP:R', 'PF:danno', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'SEM:internal', 'COMP:D', '-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'COMP:ARE/inf', 'LANG:IT', 'PHI:DET:_', 'ASP', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'PF:detest', 'LF:detest', 'PHI:GEN:_'}
devono          ['LANG:EN']
deva-           {'SEM:internal', '-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', '-VAL', 'PHI:NUM:_', '-ASP', 'SPEC:ADV', 'COMP:ARE/inf', 'LANG:IT', 'SPEC:D', 'PHI:DET:_', 'LF:must', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', 'PF:deva', 'PHI:GEN:_'}
di              {'COMP:D', '-SPEC:V', '-SPEC:P', '-COMP:N', 'LANG:FI', 'PHI:PER:_', 'PF:di', '-SPEC:INF', '-SPEC:FORCE', 'PHI:NUM:_', 'LF:of', '-COMP:T/fin', '-adjoinable', 'PHI:DET:_', 'P', '-SPEC:C', '-SPEC:iWH', '-COMP:ADV', '-SPEC:ADV', '!COMP:*', '-SPEC:Neg/fin', 'SPEC:*', '-SPEC:v', '-SPEC:iR', '-SPEC:N', '-SPEC:C/fin', '-COMP:uWH', '-SPEC:T/fin', 'ARG', '-VAL'}
does            {'COMP:T/prt', 'COMP:D', '-SPEC:V', 'PHI:NUM:SG', 'PHI:GEN:F', 'T/fin', 'COMP:V', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'LF:does', '!SPEC:*', '-COMP:T/fin', 'SPEC:D', 'LANG:EN', 'VAL', 'PHI:DET:_', 'PHI:GEN:M', 'PF:does', '!PROBE:V', '-COMP:INF', '!COMP:*', 'FIN', 'SPEC:*', '-SPEC:v', 'SPEC:INF', 'PHI:PER:3', 'COMP:Neg', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'ARG', 'PHI:GEN:_', 'T', 'COMP:v'}
does_C          ['LANG:EN']
does-           {'COMP:T/prt', 'COMP:D', '-SPEC:V', 'PHI:NUM:SG', 'PHI:GEN:F', 'T/fin', 'COMP:V', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'LF:does', '!SPEC:*', '-COMP:T/fin', 'SPEC:D', 'LANG:EN', 'VAL', 'PHI:DET:_', 'PHI:GEN:M', 'PF:does', '!PROBE:V', '-COMP:INF', '!COMP:*', 'FIN', 'SPEC:*', '-SPEC:v', 'SPEC:INF', 'PHI:PER:3', 'COMP:Neg', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'ARG', 'PHI:GEN:_', 'T', 'COMP:v'}
dorme           ['LANG:IT']
dorme-          {'-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', '!SPEC:D', 'LANG:EN', 'PHI:DET:_', 'PF:dorme', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', 'PHI:GEN:_', '-SPEC:T/fin', 'ARG', '-VAL', 'ASP', 'LF:sleep'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'COMP:T/prt', 'SEM:internal', 'LANG:FI', 'PHI:PER:_', 'LF:neg', 'NEG', 'POL:NEG', 'PHI:NUM:_', '!SPEC:*', 'PF:ei', 'Neg/fin', 'VAL', 'PHI:DET:_', '%SPEC:INF', 'FIN', '!COMP:*', 'SPEC:*', 'ARG', '-SPEC:T/fin', '!COMP:T', '-SPEC:T'}
e-              {'COMP:T/prt', 'SEM:internal', 'LANG:FI', 'PHI:PER:_', 'LF:neg', 'NEG', 'POL:NEG', 'PHI:NUM:_', '!SPEC:*', 'PF:ei', 'Neg/fin', 'VAL', 'PHI:DET:_', '%SPEC:INF', 'FIN', '!COMP:*', 'SPEC:*', 'ARG', '-SPEC:T/fin', '!COMP:T', '-SPEC:T'}
elaa            ['LANG:FI']
ela-            {'-COMP:N', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'CLASS:INTR', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:D', 'LF:live', 'PHI:DET:_', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', 'ARG', '-SPEC:T/fin', 'PF:elaa', '-VAL', '-COMP:D', 'ASP'}
etsii           ['LANG:FI']
etsi-           {'COMP:D', '-COMP:N', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:DET:_', '!COMP:D', 'LF:search', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'ASP', 'PF:etsi'}
etta            {'-SPEC:*', 'FORCE', 'FIN', '!COMP:*', 'LANG:FI', 'COMP:T/fin', '!PROBE:T/fin', 'COMP:C/fin', '-ARG', 'LF:that', '-VAL', 'PF:ettÃ¤'}
flow'           {'PF:flow', '-COMP:N', 'COMP:P', 'PHI:PER:_', 'LF:flow', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:D', 'LANG:EN', 'PHI:DET:_', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'ASP', 'PHI:GEN:_'}
from            {'COMP:D', '-SPEC:V', '-SPEC:P', '-COMP:N', 'PHI:PER:_', '-SPEC:INF', '-SPEC:FORCE', 'PHI:NUM:_', 'adjoinable', 'LF:from', '-COMP:T/fin', 'LANG:EN', 'PHI:DET:_', 'PF:from', 'P', '-SPEC:C', '-float', '-SPEC:iWH', '-SPEC:*', '-COMP:ADV', '-SPEC:ADV', '!COMP:*', '-SPEC:Neg/fin', '-SPEC:v', '-SPEC:iR', '-SPEC:N', '-SPEC:C/fin', '-COMP:uWH', '-SPEC:T/fin', 'ARG', '-VAL', 'TAIL:V,+SEM:directional', 'PHI:GEN:_'}
gave            ['LANG:EN']
give-           {'COMP:D', '-COMP:N', 'COMP:P', '-COMP:FIN', '+SEM:directional', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:D', 'LANG:EN', 'PHI:DET:_', 'PF:give', '!COMP:*', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'CLASS:DITR', 'LF:give', 'ASP', 'PHI:GEN:_'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-SEM:directional', '-COMP:T/fin', 'LANG:IT', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'LF:Giuseppe', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'PF:Giuseppe', '-COMP:AUX'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'SEM:internal', 'COMP:D', '-COMP:N', 'LF:want', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PF:haluaa', 'PHI:DET:_', 'ASP:BOUNDED', 'COMP:A/inf', '-SPEC:*', '!COMP:*', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'CLASS:TR', 'ASP'}
hairitsee       ['LANG:FI']
hairitse-       {'-COMP:N', 'COMP:P', '-COMP:FIN', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:D', 'PHI:DET:_', '!COMP:D', 'LF:disturb', 'PF:hairitsee', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'ASP'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'SEM:internal', 'LF:have', '-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', 'COMP:T', '-SPEC:FORCE', 'PHI:NUM:_', '-ASP', 'SPEC:ADV', 'LANG:IT', 'SPEC:D', 'PHI:DET:_', 'SPEC:*', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'PF:ha', 'ARG', '-VAL', 'PHI:GEN:_'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'PF:havia', '-COMP:N', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'CLASS:INTR', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:D', 'PHI:DET:_', 'V', 'LF:disappear', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', '-COMP:D', 'ASP'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'COMP:D', '-COMP:N', 'COMP:P', '-COMP:FIN', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PF:ihaile-', 'PHI:DET:_', '!COMP:D', '!COMP:*', 'V', '-COMP:v', 'LF:admire', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'CLASS:TR', 'ASP'}
il              {'-SPEC:MA/lla', 'PF:il', 'D', '-SPEC:P', '-SPEC:V', '-SPEC:INF', '-COMP:uR', '-COMP:T/fin', 'LANG:IT', 'LF:the', 'OP', '-SPEC:D', '-SPEC:C', '!PROBE:N', 'COMP:N', '!COMP:*', '-SPEC:Neg/fin', '-ARG', '-SPEC:N', '-SPEC:T/fin', 'adjoinable', '-COMP:D'}
i               {'-SPEC:MA/lla', 'PF:il', 'D', '-SPEC:P', '-SPEC:V', '-SPEC:INF', '-COMP:uR', '-COMP:T/fin', 'LANG:IT', 'LF:the', 'OP', '-SPEC:D', '-SPEC:C', '!PROBE:N', 'COMP:N', '!COMP:*', '-SPEC:Neg/fin', '-ARG', '-SPEC:N', '-SPEC:T/fin', 'adjoinable', '-COMP:D'}
in              {'COMP:D', '-SPEC:V', '-SPEC:P', '-COMP:N', 'PHI:PER:_', '-SPEC:INF', '-SPEC:FORCE', 'PHI:NUM:_', 'adjoinable', '-COMP:T/fin', 'LANG:IT', 'PHI:DET:_', 'P', '-SPEC:C', '-SPEC:iWH', '-COMP:ADV', '-SPEC:ADV', '!COMP:*', 'LF:in', '-SPEC:Neg/fin', '-SPEC:v', 'PF:in', '-SPEC:iR', '-SPEC:N', '-SPEC:C/fin', '-COMP:uWH', '-SPEC:T/fin', 'ARG', '-VAL', 'PHI:GEN:_'}
infermieri      {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', 'LF:nurses', '-COMP:T/fin', 'LANG:IT', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', 'PF:infermieri', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
is              ['LANG:EN']
be-             {'-COMP:N', 'COMP:P', 'SPEC:TO/inf', '-SPEC:FORCE', 'SPEC:ADV', 'PF:be', 'SPEC:D', 'LANG:EN', 'COPULA', 'LF:be', '!COMP:*', 'V', '-COMP:v', '-COMP:TO/inf', '-ARG', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', '-VAL', 'ASP'}
istuuko         ['LANG:FI']
istuu-          {'-COMP:N', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'CLASS:INTR', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:D', 'PHI:DET:_', 'LF:sit', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', '-COMP:D', 'ASP', 'PF:istuu'}
John            ['LANG:EN']
John-           {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-SEM:directional', '-COMP:T/fin', '-adjoinable', 'LANG:EN', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'PF:John', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', 'LF:John', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'LANG:FI', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', 'PF:Jukka', '-SEM:directional', '-COMP:T/fin', 'LF:Jukka', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
juosten         ['LANG:FI']
juokse-         {'-COMP:N', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'LF:run', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'PF:juokse-', 'PHI:DET:_', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'ASP'}
istuu           ['LANG:FI']
istu-           {'-COMP:N', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:DET:_', 'LF:sit', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'ASP', 'PF:istuu'}
kaksi           {'COMP:n', 'PHI:NUM:SG', 'NUM', 'COMP:N', 'PF:kaksi', 'LANG:FI', 'SPEC:*', 'PHI:PER:_', 'PHI:NUM:_', 'TAIL:ARG,VAL,FIN', 'ARG', '-VAL', 'PHI:DET:_', 'LF:two'}
kaksi           {'COMP:n', 'NUM', 'COMP:N', 'PF:kaksi', 'SPEC:*', 'TAIL:ARG,ASP:BOUNDED', 'LANG:EN', 'LF:two', 'TAIL:*POL:NEG'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'COMP:n', 'SPEC:*', 'NUM', 'PF:kaksi', 'LANG:FI', 'COMP:N', 'LF:two'}
kaupunkia       ['LANG:EN']
kaupunki        {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'LANG:FI', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:P', '-COMP:T/fin', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', 'LF:city', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'PF:kaupunki', '-COMP:AUX'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'-COMP:N', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SEM:external', 'SPEC:ADV', 'PHI:DET:_', '!COMP:A/inf', 'PF:kaske', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'LF:order', 'ASP'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'LANG:FI', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'PF:kello', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', 'LF:watch', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
kello0-         {'0', 'LF:watch', 'PF:kello', 'LANG:FI', '2SPEC', 'SPEC:D'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'PF:key', '-SPEC:V', '-COMP:C/fin', '-COMP:N', 'COMP:P', '-SPEC:P', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', 'LF:key', '-COMP:T/fin', 'LANG:EN', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'LF:book', '-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'LANG:FI', '-COMP:AUX', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-SEM:directional', '-COMP:T/fin', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'PF:kirja'}
kohti           {'TAIL:V', 'COMP:D', 'LF:towards', '-SPEC:V', '-SPEC:P', '-COMP:N', 'PF:kohti', 'LANG:FI', 'PHI:PER:_', '-SPEC:INF', '-SPEC:FORCE', 'PHI:NUM:_', 'adjoinable', '-COMP:T/fin', 'PHI:DET:_', 'P', '-SPEC:C', '-SPEC:iWH', '-COMP:ADV', '-SPEC:ADV', '!COMP:*', '-SPEC:Neg/fin', 'SPEC:*', '-SPEC:v', '-SPEC:iR', '-SPEC:N', '-SPEC:C/fin', '-COMP:uWH', '-SPEC:T/fin', 'ARG', '-VAL'}
koko            {'-SPEC:MA/lla', '-SPEC:P', 'D', '-SPEC:V', 'LANG:FI', '-SPEC:INF', '-COMP:uR', '-COMP:T/fin', 'TAIL:T', 'OP', '-SPEC:D', '-SPEC:C', '!PROBE:N', 'COMP:N', '!COMP:*', 'PF:koko', 'LF:all', '-SPEC:Neg/fin', '-ARG', '-SPEC:N', '-SPEC:T/fin', 'adjoinable', '-COMP:D'}
kuka            ['LANG:FI']
kuka-           {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'LANG:FI', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'LF:who', 'COMP:uR', '-COMP:T/fin', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', 'PHI', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'PF:kuka', '-COMP:AUX'}
kuorsaa-        {'-COMP:N', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', '-COMP:WH', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:T/fin', 'PHI:DET:_', 'PF:kuorsaa', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', 'LF:snore', '-VAL', '-COMP:D', 'ASP'}
kuorsaamalla    ['LANG:FI']
lahella         {'-SPEC:V', '-COMP:C/fin', '-COMP:N', 'PF:lahella', 'LANG:FI', '-SPEC:INF', '-SPEC:FORCE', 'PHI:NUM:_', '!SPEC:*', '-SPEC:C', 'INF', '-SPEC:iWH', '-COMP:ADV', '-SPEC:ADV', '!COMP:*', '-SPEC:v', '-SPEC:N', '-SPEC:C/fin', 'ARG', 'COMP:v', 'LF:near', 'COMP:D', '-SPEC:P', 'COMP:V', 'PHI:PER:_', '-COMP:T/fin', 'VAL', 'PHI:DET:_', 'P', '!PROBE:V', '-SPEC:Neg/fin', 'SPEC:*', '-SPEC:iR', '-COMP:FORCE', '-COMP:uWH', '-SPEC:T/fin', 'adjoinable', '!SPEC:D'}
lahella         {'LF:near', '-SPEC:V', 'COMP:D', '-SPEC:P', '-COMP:N', 'PF:lahella', 'LANG:FI', 'PHI:PER:_', '-SPEC:INF', '-SPEC:FORCE', 'PHI:NUM:_', 'adjoinable', '-COMP:T/fin', 'PHI:DET:_', 'P', '-SPEC:C', '-SPEC:iWH', '!COMP:D', '-COMP:ADV', '-SPEC:ADV', '!COMP:*', '-SPEC:Neg/fin', 'SPEC:*', '-SPEC:v', '-SPEC:iR', '-SPEC:N', '-SPEC:C/fin', '-COMP:uWH', '-SPEC:T/fin', 'ARG', '-VAL'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'-COMP:N', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PF:lahtea', 'CLASS:INTR', 'PHI:NUM:_', 'COMP:PP', 'SPEC:ADV', 'SPEC:D', 'PHI:DET:_', 'LF:leave', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', '-COMP:D', 'ASP'}
lavano          ['LANG:IT']
lava-           {'COMP:D', 'PF:lava', '-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'LANG:IT', 'PHI:DET:_', '!COMP:*', 'ASP', 'V', '-COMP:v', 'SPEC:P', '-COMP:V', '-SPEC:T/fin', 'ARG', '-VAL', 'LF:wash', 'PHI:GEN:_'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-SPEC:MA/lla', '-SPEC:P', 'D', '-SPEC:V', 'LF:D', 'PF:le', '-SPEC:INF', '-COMP:uR', '-COMP:T/fin', 'LANG:IT', 'OP', '-SPEC:D', '-SPEC:C', '!PROBE:N', 'COMP:N', '!COMP:*', '-SPEC:Neg/fin', '-ARG', '-SPEC:N', '-SPEC:T/fin', 'adjoinable', '-COMP:D'}
leaves          ['LANG:EN']
leave           {'-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', '!SPEC:D', 'LANG:EN', 'PHI:DET:_', 'LF:leave', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', 'PF:leave', '-VAL', 'ASP', 'PHI:GEN:_'}
leave-          {'-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:T/fin', '!SPEC:D', 'LANG:EN', 'PHI:DET:_', 'LF:leave', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', 'PF:leave', '-VAL', 'ASP', 'PHI:GEN:_'}
like-           {'-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'PF:like', 'LANG:EN', 'PHI:DET:_', '!COMP:D', 'V', 'LF:like', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'ASP', 'PHI:GEN:_'}
likes           ['LANG:EN']
like            {'-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'PF:like', 'LANG:EN', 'PHI:DET:_', '!COMP:D', 'V', 'LF:like', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'ASP', 'PHI:GEN:_'}
little          ['LANG:EN']
little-         {'LF:little', '0', 'PF:little-', 'SPEC:D', 'LANG:EN', '2SPEC'}
lle             {'COMP:D', '-SPEC:V', '-SPEC:P', '-COMP:N', 'LF:for', '+SEM:directional', 'LANG:FI', 'PHI:PER:_', '-SPEC:INF', '-SPEC:FORCE', 'PHI:NUM:_', 'adjoinable', '-COMP:T/fin', 'PHI:DET:_', 'P', '-SPEC:C', '-SPEC:iWH', '-SPEC:*', '-COMP:ADV', '-SPEC:ADV', '!COMP:*', '-SPEC:Neg/fin', '-SPEC:v', '-SPEC:iR', '-SPEC:N', '-SPEC:C/fin', '-COMP:uWH', '-SPEC:T/fin', 'ARG', '-VAL', 'PF:P(lle)', 'TAIL:V,+SEM:directional'}
lla             {'LF:by', 'COMP:D', '-SPEC:V', '-SPEC:P', '-COMP:N', 'LANG:FI', 'PHI:PER:_', '-SPEC:INF', '-SPEC:FORCE', 'PHI:NUM:_', 'adjoinable', '-COMP:T/fin', 'TAIL:T', 'PHI:DET:_', 'P', '-SPEC:C', '-SPEC:iWH', 'TAIL:*V', '-COMP:ADV', '-SPEC:ADV', '!COMP:*', '-SPEC:Neg/fin', 'SPEC:*', '-SPEC:v', '-SPEC:iR', '-SPEC:N', '-SPEC:C/fin', 'PF:P(lla)', '-COMP:uWH', 'ARG', '-SPEC:T/fin', '-VAL'}
Luisa           ['LANG:IT']
Luisa-          {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', 'LF:Luisa', '-SEM:directional', '-COMP:T/fin', 'LANG:IT', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', 'PF:Luisa', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
lukemalla       ['LANG:FI']
luke-           {'COMP:D', '-COMP:N', 'COMP:P', 'PF:luke', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'LF:read', '-COMP:P', 'SPEC:ADV', 'PHI:DET:_', '!COMP:*', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'CLASS:TR', 'ASP'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'LF:find', 'COMP:D', '-COMP:N', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PHI:DET:_', 'ASP:BOUNDED', '!COMP:D', '!COMP:*', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', 'PF:loyta-', '-SPEC:T/fin', 'ARG', '-VAL', 'CLASS:TR', 'ASP'}
Mary            ['LANG:EN']
Mary-           {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-SEM:directional', '-COMP:T/fin', '-adjoinable', 'LANG:EN', 'COMP:R', 'LF:Mary', '-SPEC:R', 'COMP:R/D', 'N', 'PF:Mary', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'PF:Merja', '-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'LANG:FI', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-SEM:directional', '-COMP:T/fin', '-adjoinable', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', 'LF:Merja', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'LF:by', 'MA/inf', 'LANG:FI', '-SPEC:Neg/fin', 'PF:malla', 'SPEC:*', '-SPEC:FORCE', 'ADV', '-SPEC:N', '-SPEC:T/fin', 'adjoinable', 'TAIL:T', 'COMP:v'}
meren           ['LANG:FI']
mere-           {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'LANG:FI', '-COMP:D', '-SPEC:INF', 'PF:meri', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', 'LF:ocean', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
mistake         {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'LANG:EN', 'LF:mistake', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', 'PF:mistake', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'PF:mika-', '-SPEC:V', '-COMP:C/fin', '-COMP:N', 'COMP:P', '-SPEC:P', 'LANG:FI', 'LF:what', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'COMP:D', '-COMP:N', 'COMP:P', '+SEM:directional', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PF:move', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PHI:DET:_', 'LANGN:EN', 'LF:move', '!COMP:*', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'CLASS:TR', 'ASP', 'PHI:GEN:_'}
mukavasti       ['LANG:EN']
mukava-         {'0', 'PF:mukavasti', 'LANG:FI', 'LF:comfortably', '2SPEC', 'SPEC:D'}
must            {'COMP:T/prt', 'COMP:D', '-SPEC:V', 'T/fin', 'COMP:V', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', '!SPEC:*', '-COMP:T/fin', 'SPEC:D', 'LANG:EN', 'VAL', 'PHI:DET:_', 'LF:must', 'MODAL', '!PROBE:V', '-COMP:INF', '!COMP:*', 'FIN', 'SPEC:*', '-SPEC:v', 'SPEC:INF', 'PF:must', 'COMP:Neg', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'ARG', 'PHI:GEN:_', 'T', 'COMP:v'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'COMP:D', '-COMP:N', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', '-VAL', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PHI:DET:_', 'ASP:BOUNDED', '!COMP:*', 'LF:sell', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', 'PF:myy', 'CLASS:TR', 'ASP'}
naki            ['LANG:FI']
nake-           {'COMP:D', '-COMP:N', 'PF:nake', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PHI:DET:_', 'ASP:BOUNDED', '-COMP:ESSA/inf', '-COMP:MA/inf', '!COMP:*', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', 'LF:see', '-VAL', 'CLASS:TR', 'ASP'}
nayttaa         ['LANG:FI']
naytta-         {'SEM:internal', 'PF:naytta', '-COMP:N', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', '-VAL', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:D', 'PHI:DET:_', 'LF:seem', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '!COMP:VA/inf', 'ASP'}
ndo             {'-SPEC:V', '-COMP:C/fin', 'COMP:V', 'PRG', '-COMP:T/fin', 'LANG:EN', 'VAL', 'INF', 'LF:ing', '!PROBE:V', '!COMP:*', '-COMP:FORCE', 'PF:PRG', '-SPEC:T/fin', '?ARG', 'COMP:v'}
ne              {'-SPEC:MA/lla', '-SPEC:P', 'D', '-SPEC:V', 'LANG:FI', '-SPEC:INF', '-COMP:uR', '-COMP:T/fin', 'OP', '-SPEC:D', 'PHI:NUM:PL', '-SPEC:C', 'PF:ne', '!PROBE:N', 'COMP:N', 'LF:those', '!COMP:*', '-SPEC:Neg/fin', '-ARG', 'PHI:PER:3', '-SPEC:N', '-SPEC:T/fin', 'adjoinable', '-COMP:D'}
niiden          ['LANG:EN']
nen             {'LF:ing', 'COMP:0', '-SPEC:A', 'LANG:FI', 'SPEC:*', 'TAIL:D', 'A', 'PF:a', 'adjoinable', '-SPEC:D'}
not             {'PF:not', '-COMP:FIN', '!COMP:*', 'SPEC:*', 'PHI:PER:_', 'PHI:DET:_', 'POL:NEG', 'ARG', '-COMP:C', 'PHI:NUM:_', '-SPEC:T/fin', 'LF:not', 'Neg', '-VAL', 'LANG:EN', '-COMP:D', 'PHI:GEN:_'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-COMP:N', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'CLASS:INTR', 'PHI:NUM:_', 'SPEC:ADV', '-COMP:T/fin', 'SPEC:D', 'PHI:DET:_', '-COMP:T', 'PF:nukku', '-COMP:Neg/fin', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', '-COMP:D', 'ASP', 'LF:sleep'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'LANG:FI', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', 'PF:omaisuuden', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'LF:possessions', '-COMP:AUX'}
operatoria      ['LANG:IT']
operatoria-     {'0', 'PF:operatoria', 'LANG:IT', 'LF:operation', '2SPEC', 'SPEC:D'}
ostaa           ['LANG:FI']
osta-           {'COMP:D', '-COMP:N', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PF:osta', 'PHI:DET:_', 'ASP:BOUNDED', 'LF:buy', '!COMP:*', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'CLASS:TR', 'ASP'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'LANG:FI', '-COMP:D', 'LF:day', '-SPEC:INF', 'SEM:nonreferential', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', 'PF:paiva', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
Pariisia        ['LANG:FI']
Pariisi-        {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'LANG:FI', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'PF:Pariisi', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'LF:Paris', '-COMP:AUX'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'LANG:FI', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-SEM:directional', 'LF:Pekka', 'PF:Pekka', '-COMP:T/fin', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
pelottaa        ['LANG:FI']
pelkaa-         {'COMP:D', 'LF:fear', '-COMP:N', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PHI:DET:_', '!COMP:*', 'ASP', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'CLASS:TR', 'PF:pelkaa'}
persuades       ['LANG:EN']
persuade-       {'-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SEM:external', 'SPEC:ADV', 'PF:persuade', 'LANG:EN', 'PHI:DET:_', 'LF:persuade', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', 'COMP:TO/inf', '-SPEC:T/fin', 'ARG', '-VAL', 'ASP', 'PHI:GEN:_'}
peruuntui       ['LANG:FI']
peruuntu-       {'-COMP:N', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:D', 'PHI:DET:_', 'PF:peruuntui', 'V', '-COMP:v', 'LF:cancelled', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'ASP'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'COMP:D', '-COMP:N', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PHI:DET:_', 'PF:pese', 'ASP:BOUNDED', '!COMP:*', 'ASP', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'CLASS:TR', 'LF:wash'}
pese-           {'COMP:D', '-COMP:N', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PHI:DET:_', 'PF:pese', '!COMP:*', 'ASP', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'CLASS:TR', 'LF:wash'}
petardi         {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'LANG:IT', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', 'LF:firecrackers', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', 'PF:petardi', '-SPEC:T/fin', '-COMP:AUX'}
pieni           ['LANG:FI']
pieni-          {'2SPEC', '0', 'LF:small', 'LANG:FI', 'PF:pieni-', 'SPEC:D'}
poikien         ['LANG:FI']
poika-          {'PF:poika', 'LF:boy', '-SPEC:V', '-COMP:C/fin', '-COMP:N', 'COMP:P', '-SPEC:P', 'LANG:FI', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
puhelinta       ['LANG:FI']
puhelin-        {'PF:puhelin', '2SPEC', '0', 'LANG:FI', 'LF:phone', 'SPEC:D'}
punainen        ['LANG:FI']
puna-           {'0', 'SPEC:D', 'LF:red', 'LANG:FI', '2SPEC', 'PF:puna-'}
presupposto     {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'LANG:IT', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'PF:presupposto', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'LF:presupposition', '-COMP:AUX'}
primary         {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', 'LF:nurse', 'PF:primary', 'LANG:IT', '-COMP:T/fin', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
promises        ['LANG:EN']
promise-        {'SEM:internal', 'COMP:D', '-COMP:N', 'PF:promise', 'COMP:P', 'PHI:PER:_', 'LF:promise', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:D', 'LANG:EN', 'PHI:DET:_', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'ASP', 'PHI:GEN:_'}
pyytaa          ['LANG:FI']
pyyta-          {'-COMP:N', 'COMP:P', 'PF:pyyda', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SEM:external', 'LF:ask', 'SPEC:ADV', 'PHI:DET:_', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'ASP'}
raukesi         ['LANG:FI']
raukea-         {'-COMP:N', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'PHI:DET:_', 'PF:raukea', 'LF:terminate', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'ASP'}
red             ['LANG:EN']
red-            {'0', 'PF:red', 'LF:red', 'SPEC:D', 'LANG:EN', '2SPEC'}
saavuttaa       ['LANG:FI']
saavutta-       {'COMP:D', '-COMP:N', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'LF:reach', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PHI:DET:_', 'ASP:BOUNDED', '!COMP:D', '!COMP:*', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', 'CLASS:TR', '-VAL', 'PF:saavutta-', 'ASP'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'-COMP:N', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PF:sano-', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:D', 'PHI:DET:_', 'LF:say', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', 'COMP:VA/inf', '-SPEC:T/fin', 'ARG', '-VAL', 'COMP:FORCE', 'ASP'}
said            ['LANG:EN']
say'            {'-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:D', 'LANG:EN', 'PHI:DET:_', '!COMP:FORCE', 'LF:say', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'PF:say', 'ASP', 'PHI:GEN:_'}
say-            {'-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:D', 'LANG:EN', 'PHI:DET:_', '!COMP:FORCE', 'LF:say', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'PF:say', 'ASP', 'PHI:GEN:_'}
sala            ['LANG:IT']
sala-           {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'PF:sala', 'COMP:P', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', 'LF:room', '-COMP:T/fin', 'LANG:IT', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
scoppiati       ['LANG:IT']
scoppia-        {'PF:scoppia', '-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', 'LF:explode', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'LANG:IT', 'PHI:DET:_', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'ASP', 'PHI:GEN:_'}
sen             {'-SPEC:MA/lla', '-SPEC:P', 'D', '-SPEC:V', 'LANG:FI', '-SPEC:INF', 'TAIL:PHI', '-COMP:uR', 'TAIL:ASP', '-COMP:T/fin', 'PF:sen', 'OP', '-SPEC:D', '-SPEC:C', '!PROBE:N', 'COMP:N', '!COMP:*', '-SPEC:Neg/fin', '-ARG', '-SPEC:N', '-SPEC:T/fin', 'adjoinable', '-COMP:D', 'LF:the/that', 'TAIL:*POL:NEG'}
se'             {'-SPEC:MA/lla', '-SPEC:P', 'D', '-SPEC:V', 'LANG:FI', '-SPEC:INF', 'PF:se', '-COMP:uR', '-COMP:T/fin', 'OP', '-SPEC:D', '-SPEC:C', '!PROBE:N', 'COMP:N', '!COMP:*', '-SPEC:Neg/fin', '-ARG', '-SPEC:N', '-SPEC:T/fin', 'adjoinable', '-COMP:D', 'LF:the/that'}
sentenza        {'PF:sentenza', '-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', 'LF:sentence', '-COMP:T/fin', 'LANG:IT', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
Seine           ['LANG:EN']
Seine-          {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'LANG:EN', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'PF:Seine', 'LF:Seine', '-COMP:AUX'}
sembrano        ['LANG:IT']
sembra-         {'PF:sembra', '-COMP:N', 'COMP:P', 'SPEC:TO/inf', '-SPEC:FORCE', '-ASP', 'SPEC:ADV', 'SPEC:D', '!COMP:ARE/inf', 'LANG:EN', 'LF:seem', 'V', '-COMP:v', '-ARG', 'SPEC:P', '-COMP:V', '-SPEC:T/fin', '-VAL', '-COMP:D'}
sleeps          ['LANG:EN']
sleep           {'-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'CLASS:INTR', 'PHI:NUM:_', 'SPEC:ADV', 'PF:sleep', 'SPEC:D', 'LANG:EN', 'PHI:DET:_', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', 'PHI:GEN:_', '-SPEC:T/fin', 'ARG', '-VAL', '-COMP:D', 'ASP', 'LF:sleep'}
sleep-          {'-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'CLASS:INTR', 'PHI:NUM:_', 'SPEC:ADV', 'PF:sleep', 'SPEC:D', 'LANG:EN', 'PHI:DET:_', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', 'PHI:GEN:_', '-SPEC:T/fin', 'ARG', '-VAL', '-COMP:D', 'ASP', 'LF:sleep'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'PF:sopimus', 'LANG:FI', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'COMP:R', '!COMP:A/inf', 'LF:agreement', '-SPEC:R', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', 'COMP:R/D', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
spinge          ['LANG:IT']
spinge-         {'-COMP:N', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'LANG:IT', 'PHI:DET:_', '!COMP:D', 'LF:push', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', 'PF:spinge', '-SPEC:T/fin', 'ARG', '-VAL', 'ASP', 'PHI:GEN:_'}
ssa             {'TAIL:V', 'COMP:D', '-SPEC:V', '-SPEC:P', '-COMP:N', 'LANG:FI', 'PHI:PER:_', '-SPEC:INF', '-SPEC:FORCE', 'PHI:NUM:_', 'adjoinable', '-COMP:T/fin', 'PHI:DET:_', 'P', '-SPEC:C', '-SPEC:iWH', 'COMP:n/MA', '-COMP:ADV', '-SPEC:ADV', '!COMP:*', 'LF:in', '-SPEC:Neg/fin', 'SPEC:*', '-SPEC:v', '-SPEC:iR', '-SPEC:N', '-SPEC:C/fin', '-COMP:uWH', '-SPEC:T/fin', 'ARG', '-VAL', 'PF:ssa'}
stanno          ['LANG:IT']
sta-            {'SEM:internal', '-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', '-ASP', 'SPEC:ADV', 'SPEC:D', 'LANG:EN', 'PHI:DET:_', 'COMP:PRG', 'LF:stay', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'PF:sta', 'PHI:GEN:_'}
sti             {'LF:by', '!COMP:*', 'LANG:FI', '-SPEC:Neg/fin', 'SPEC:*', '-SPEC:FORCE', 'PF:sti', '-ARG', 'ADV', '-SPEC:N', '-SPEC:T/fin', 'adjoinable', 'TAIL:T'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'LANG:FI', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'PF:sukka-', 'COMP:uR', '-COMP:T/fin', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', 'LF:socks', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
talo            {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'LANG:FI', 'PF:talo', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', 'LF:house', '-COMP:T/fin', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
tama            ['LANG:EN']
tama-           {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'LANG:FI', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', 'PF:tama', '-COMP:T/fin', 'COMP:R', '-SPEC:R', 'LF:this', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', 'PHI', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'-COMP:N', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'SPEC:TO/inf', 'PF:taytyy', '-SPEC:FORCE', 'PHI:NUM:_', '-ASP', 'SPEC:ADV', 'PHI:DET:_', 'LF:must', 'MODAL', '!COMP:A/inf', 'FIN', 'SPEC:*', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL'}
teki            ['LANG:FI']
teke-           {'COMP:D', '-COMP:N', 'COMP:P', 'LANG:FI', 'LF:make', 'SPEC:TO/inf', 'PHI:PER:_', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PHI:DET:_', 'ASP:BOUNDED', '!COMP:D', 'PF:teke', '!COMP:*', 'ASP', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'CLASS:TR', '-COMP:A/inf'}
that            {'-SPEC:*', 'FORCE', 'FIN', '!COMP:*', 'COMP:T/fin', '!PROBE:T/fin', 'COMP:C/fin', '-ARG', 'PF:that', 'LF:that', '-VAL', 'LANG:EN'}
the             {'PHI:DEF:DEF', '-SPEC:MA/lla', '-SPEC:P', 'D', '-SPEC:V', '-SPEC:INF', '-COMP:uR', '-COMP:T/fin', 'LF:the', 'LANG:EN', 'OP', '-SPEC:D', '-SPEC:C', '!PROBE:N', 'COMP:N', 'PF:the', '!COMP:*', '-SPEC:Neg/fin', '-ARG', '-SPEC:N', '-SPEC:T/fin', 'adjoinable', '-COMP:D'}
to              {'COMP:D', '-SPEC:V', '-SPEC:P', '-COMP:N', '+SEM:directional', 'PHI:PER:_', '-SPEC:INF', '-SPEC:FORCE', 'PHI:NUM:_', 'adjoinable', '-COMP:T/fin', 'LANG:EN', 'PHI:DET:_', 'P', '-SPEC:C', '-float', 'LF:to', '-SPEC:iWH', '-SPEC:*', '-COMP:ADV', '-SPEC:ADV', '!COMP:*', 'PF:to', '-SPEC:Neg/fin', '-SPEC:v', '-SPEC:iR', '-SPEC:N', '-SPEC:C/fin', '-COMP:uWH', '-SPEC:T/fin', 'ARG', '-VAL', 'TAIL:V,+SEM:directional', 'PHI:GEN:_'}
to_inf          {'-SPEC:V', '-COMP:C/fin', 'COMP:V', '-COMP:T/fin', 'LANG:EN', 'INF', 'PF:TO/inf', '!PROBE:V', 'LF:TO/inf', '!COMP:*', 'TO/inf', '-SPEC:v', '-COMP:FORCE', '-SPEC:T/fin', 'adjoinable', '-VAL', '?ARG', 'COMP:v'}
towards         {'TAIL:V', 'COMP:D', 'LF:towards', '-SPEC:V', '-SPEC:P', '-COMP:N', 'PHI:PER:_', '-SPEC:INF', '-SPEC:FORCE', 'PHI:NUM:_', 'adjoinable', 'PF:towards', '-COMP:T/fin', 'LANG:EN', 'PHI:DET:_', 'P', '-SPEC:C', '-float', '-SPEC:iWH', '-SPEC:*', '-COMP:ADV', '-SPEC:ADV', '!COMP:*', '-SPEC:Neg/fin', '-SPEC:v', '-SPEC:iR', '-SPEC:N', '-SPEC:C/fin', '-COMP:uWH', '-SPEC:T/fin', 'ARG', '-VAL', 'PHI:GEN:_'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'COMP:D', '-COMP:N', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'LF:nudge', 'SPEC:TO/inf', 'PF:tonaise', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PHI:DET:_', '!COMP:*', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'CLASS:TR', 'ASP'}
tta             {'COMP:D', '-SPEC:V', '-SPEC:P', '-COMP:N', 'LANG:FI', 'PHI:PER:_', '-SPEC:INF', '-SPEC:FORCE', 'PHI:NUM:_', 'adjoinable', 'PF:tta', '-COMP:T/fin', 'PHI:DET:_', 'P', '-SPEC:C', '-SPEC:iWH', 'COMP:n/MA', '-COMP:ADV', 'LF:without', '-SPEC:ADV', '!COMP:*', '-SPEC:Neg/fin', 'SPEC:*', '-SPEC:v', '-SPEC:iR', 'ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:uWH', '-SPEC:T/fin', 'ARG', '-VAL'}
tries           ['LANG:EN']
try-            {'SEM:internal', '-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'PF:try', 'SPEC:D', 'LANG:EN', 'LF:try', 'PHI:DET:_', '!COMP:-ARG', 'V', '-COMP:v', '-COMP:V', '!COMP:TO/inf', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'ASP', 'PHI:GEN:_'}
verifiche       {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', 'PF:verifiche', 'LANG:IT', '-COMP:T/fin', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', 'LF:verification', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'PF:virtaa', '-COMP:N', 'COMP:P', 'LANG:FI', 'PHI:PER:_', 'LF:flow', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:D', '!COMP:P', 'PHI:DET:_', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', '-COMP:D', 'ASP'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'SEM:internal', '-COMP:N', 'LF:want', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', 'PF:volu', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'LANG:EN', 'PHI:DET:_', '-SPEC:*', '!COMP:*', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'ASP', 'PHI:GEN:_'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'COMP:D', '-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', 'LF:win', '-SPEC:FORCE', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'LANG:EN', 'PHI:DET:_', 'SEM:achievement', 'ASP:BOUNDED', '!COMP:*', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', 'PF:voitta', '-SPEC:T/fin', 'ARG', '-VAL', 'CLASS:TR', 'ASP', 'PHI:GEN:_'}
wants           ['LANG:EN']
want-           {'COMP:D', '-COMP:N', 'LF:want', 'COMP:P', 'PHI:PER:_', '-SPEC:FORCE', '-SPEC:TO/inf', 'PHI:NUM:_', '-COMP:P', 'SPEC:ADV', 'PF:want', 'LANG:EN', 'PHI:DET:_', '!COMP:*', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', 'COMP:TO/inf', '-SPEC:T/fin', 'ARG', '-VAL', 'CLASS:TR', 'ASP', 'PHI:GEN:_'}
what            ['LANG:EN']
what-           {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'LF:what', 'PHI_N', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'LANG:EN', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:*', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', 'PF:what', '-SPEC:T/fin', '-COMP:AUX'}
which           {'-SPEC:MA/lla', '-SPEC:P', 'D', '-SPEC:V', '-SPEC:INF', 'OP:WH', '-COMP:uR', 'LF:which', '-COMP:T/fin', 'LANG:EN', 'OP', '-SPEC:D', '-SPEC:C', 'PF:which', '!PROBE:N', 'COMP:N', '!COMP:*', '-SPEC:Neg/fin', '-ARG', '-SPEC:N', '-SPEC:T/fin', 'adjoinable', '-COMP:D'}
who             ['LANG:EN']
who-            {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'PHI_N', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'LF:who', 'COMP:uR', '-COMP:T/fin', 'LANG:EN', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:*', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'PF:who', '-COMP:AUX'}
whether         {'OP:Q', 'PF:whether', 'COMP:C/fin', 'OP:WH', 'OP', 'LANG:EN', '-SPEC:*', 'FORCE', 'Q', 'FIN', '!COMP:*', 'COMP:T/fin', '!PROBE:T/fin', '-ARG', 'LF:whether', '-VAL'}
yrittaa         ['LANG:FI']
yritta-         {'SEM:internal', '-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', 'PF:yritta', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:D', 'LANG:EN', 'LF:try', 'PHI:DET:_', '!COMP:A/inf', '!COMP:-ARG', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'ASP', 'PHI:GEN:_'}
mina            ['LANG:EN']
mina-           {'PF:mina', '-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'LANG:FI', 'PHI_N', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:*', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'LF:I', '-COMP:AUX'}
sina            ['LANG:EN']
sina-           {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'PHI_N', 'LANG:FI', 'PF:sina', '-SPEC:INF', '-COMP:D', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'COMP:R', 'LF:you', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:*', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
han             ['LANG:EN']
han-            {'-SPEC:V', '-SPEC:P', 'PF:han', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'LANG:FI', 'PHI_N', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:*', '-COMP:v', '-COMP:V', '-COMP:A', 'LF:s/he', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'PF:me', 'COMP:P', 'LANG:FI', 'PHI_N', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'LF:we', 'COMP:uR', '-COMP:T/fin', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:*', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
te              ['LANG:EN']
te-             {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'PHI_N', 'LANG:FI', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'PF:te', 'COMP:uR', '-COMP:T/fin', 'COMP:R', 'LF:you', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:*', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he-             {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'PHI_N', 'LANG:FI', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', 'LF:they', '-SPEC:ADV', 'PF:he', '-COMP:ADV', '-SPEC:uWH', '-COMP:*', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
he-             {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'PHI_N', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'LANG:EN', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', 'PF:he', '-SPEC:uWH', '-COMP:*', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'LF:he', '-COMP:AUX'}
se              ['LANG:FI']
se-             {'-SPEC:MA/lla', '-SPEC:P', 'D', '-SPEC:V', 'LANG:FI', '-SPEC:INF', 'PF:se', '-COMP:uR', '-COMP:T/fin', 'OP', '-SPEC:D', '-SPEC:C', '!PROBE:N', 'COMP:N', 'LF:it/that', '!COMP:*', '-SPEC:Neg/fin', '-ARG', '-SPEC:N', '-SPEC:T/fin', 'adjoinable', '-COMP:D'}
I               ['LANG:EN']
I-              {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'PHI_N', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'LANG:EN', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'PF:I', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:*', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'LF:I', '-COMP:AUX'}
you             ['LANG:EN']
you-            {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'PHI_N', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'LANG:EN', 'COMP:R', 'LF:you', '-SPEC:R', 'COMP:R/D', 'PF:you', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:*', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
he              ['LANG:EN']
she             ['LANG:EN']
she-            {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'PHI_N', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'LANG:EN', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', 'LF:she', '-SPEC:uWH', '-COMP:*', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', 'PF:she', '-SPEC:T/fin', '-COMP:AUX'}
we              ['LANG:EN']
we-             {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'PHI_N', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'LF:we', 'COMP:uR', '-COMP:T/fin', 'LANG:EN', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', 'PF:we', '-COMP:*', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
you_pl          ['LANG:EN']
you_pl-         {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'LANG:EN', 'COMP:R', 'PF:you_pl', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', 'PHI', '-SPEC:uWH', '-COMP:v', '-COMP:V', 'LF:you_pl', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
they            ['LANG:EN']
they-           {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'PHI_N', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'LANG:EN', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', 'LF:they', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:*', '-COMP:v', '-COMP:V', 'PF:they', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
it              ['LANG:EN']
it-             {'-SPEC:MA/lla', '-SPEC:P', 'D', '-SPEC:V', '-SPEC:INF', '-COMP:uR', '-COMP:T/fin', 'LANG:EN', 'OP', '-SPEC:D', '-SPEC:C', '!PROBE:N', 'COMP:N', 'LF:it/that', '!COMP:*', '-SPEC:Neg/fin', 'PF:it', '-ARG', '-SPEC:N', '-SPEC:T/fin', 'adjoinable', '-COMP:D'}
io              ['LANG:EN']
io-             {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'PHI_N', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'LANG:IT', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', 'PF:io', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:*', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'LF:I', '-COMP:AUX'}
tu              ['LANG:EN']
tu-             {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'PHI_N', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'LANG:IT', 'PF:tu', 'COMP:R', 'LF:you', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:*', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
lui             ['LANG:EN']
lui-            {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'PHI_N', '-COMP:D', 'PF:lui', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'LANG:IT', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:*', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'LF:he', '-COMP:AUX'}
lei             ['LANG:EN']
lei-            {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'PHI_N', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'LANG:IT', 'PF:lei', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', 'LF:she', '-SPEC:uWH', '-COMP:*', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
noi             ['LANG:EN']
noi-            {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'PHI_N', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'LF:we', 'COMP:uR', 'PF:noi', '-COMP:T/fin', 'LANG:IT', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:*', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
voi             ['LANG:EN']
voi-            {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'PHI_N', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'LANG:IT', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:*', 'PF:voi', '-COMP:v', '-COMP:V', 'LF:you_pl', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
loro            ['LANG:EN']
loro-           {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'PHI_N', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'LANG:IT', 'COMP:R', 'PF:loro', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', 'LF:they', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:*', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', '-COMP:AUX'}
mi              ['LANG:EN']
mi-             {'-SPEC:V', '-COMP:C/fin', '-COMP:N', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'COMP:uR', 'LF:me', 'LANG:IT', 'COMP:R', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-COMP:*', '-SPEC:N', '-SPEC:C/fin', 'PF:mi(cl)', '-COMP:AUX', '-COMP:D', 'CL', '-SPEC:P', 'PHI_N', '-COMP:WH', '-COMP:T/fin', '-SPEC:R', 'COMP:R/D', 'N', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-SPEC:T/fin', '-COMP:A'}
la              ['LANG:EN']
la-             {'-SPEC:V', 'PF:la(cl)', '-COMP:C/fin', '-COMP:N', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'COMP:uR', 'LANG:IT', 'COMP:R', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-COMP:*', '-SPEC:N', '-SPEC:C/fin', '-COMP:AUX', '-COMP:D', 'CL', '-SPEC:P', 'LF:her', 'PHI_N', '-COMP:WH', '-COMP:T/fin', '-SPEC:R', 'COMP:R/D', 'N', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-SPEC:T/fin', '-COMP:A'}
lo              ['LANG:EN']
lo-             {'-SPEC:V', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'PF:lo(cl)', '-SPEC:INF', '-SPEC:FORCE', 'COMP:uR', 'LANG:IT', 'COMP:R', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-COMP:*', '-SPEC:N', '-SPEC:C/fin', 'LF:him', '-COMP:AUX', '-COMP:D', 'CL', '-SPEC:P', 'PHI_N', '-COMP:WH', '-COMP:T/fin', '-SPEC:R', 'COMP:R/D', 'N', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-SPEC:T/fin', '-COMP:A'}
si              ['LANG:EN']
si-             {'-SPEC:V', '-COMP:C/fin', '-COMP:N', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'COMP:uR', 'LANG:IT', 'LF:3sg', 'PF:si(cl)', 'COMP:R', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-COMP:*', 'CAL:CL', '-SPEC:N', '-SPEC:C/fin', '-COMP:AUX', '-COMP:D', '-SPEC:P', 'PHI_N', '-COMP:WH', '-COMP:T/fin', '-SPEC:R', 'COMP:R/D', 'N', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-SPEC:T/fin', '-COMP:A'}
gli             ['LANG:EN']
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'PHI_N', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'PF:ci', 'COMP:uR', '-COMP:T/fin', 'LANG:IT', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '-SPEC:uWH', '-COMP:*', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'LF:there', '-COMP:AUX'}
[-n]            {'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI', 'inflectional', 'LANG:FI', 'PHI:DET:DEF'}
[-t]            {'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'PHI', 'inflectional', 'LANG:FI', 'PHI:DET:DEF'}
[-V]            {'PHI:PER:3', 'PHI:NUM:SG', 'PHI', 'inflectional', 'LANG:FI'}
[-mme]          {'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:PER:1', 'PHI', 'inflectional', 'LANG:FI', 'PHI:DET:DEF'}
[-mme]          {'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:PER:1', 'inflectional', 'LANG:FI', 'PHI:DET:DEF'}
[-tte]          {'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI', 'inflectional', 'LANG:FI', 'PHI:DET:DEF'}
[-vat]          {'PHI:NUM:PL', 'PHI:PER:3', 'PHI', 'inflectional', 'LANG:FI'}
[-ni]           {'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI', 'inflectional', 'LANG:FI', 'PHI:DET:DEF'}
[-si]           {'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'PHI', 'inflectional', 'LANG:FI', 'PHI:DET:DEF'}
[-nsa]          {'PHI', 'inflectional', 'LANG:FI', 'PHI:PER:3'}
[-an]           {'PHI', 'inflectional', 'LANG:FI', 'PHI:PER:3'}
[-nne]          {'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:PER:2', 'inflectional', 'LANG:FI', 'PHI:DET:DEF'}
[-s]            {'PHI:PER:3', 'PHI:NUM:SG', 'PHI:GEN:F', 'PHI', 'inflectional', 'LANG:EN', 'PHI:GEN:M'}
[-0]            {'PHI:NUM:PL', 'PHI:NUM:SG', 'PHI', 'inflectional', 'PHI:DET:DEF', 'PHI:PER:2', 'PHI:PER:1', 'PHI:PER:3', 'PHI:GEN:N', 'LANG:EN'}
[-o]            {'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'PHI', 'inflectional', 'LANG:IT', 'PHI:DET:DEF'}
[-i]            {'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'PHI', 'inflectional', 'LANG:IT', 'PHI:DET:DEF'}
[-a]            {'PHI:PER:3', 'PHI:NUM:SG', 'PHI', 'inflectional', 'LANG:IT', 'PHI:DET:DEF'}
[-e]            {'PHI:PER:3', 'PHI:NUM:SG', 'PHI', 'inflectional', 'LANG:IT', 'PHI:DET:DEF'}
[-iamo]         {'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:PER:1', 'PHI', 'inflectional', 'LANG:IT', 'PHI:DET:DEF'}
[-te]           {'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI', 'inflectional', 'LANG:IT', 'PHI:DET:DEF'}
[-no]           {'PHI:NUM:PL', 'PHI:PER:3', 'PHI', 'inflectional', 'LANG:IT', 'PHI:DET:DEF'}
[-nom]          {'adjoinable', 'inflectional', 'TAIL:FIN,ARG,VAL', 'LANG:EN', 'NOM'}
[-par]          {'TAIL:ARG,-VAL', 'adjoinable', 'inflectional', 'LANG:FI', 'PAR'}
[-gen]          {'LANG:EN', 'inflectional', 'GEN', 'TAIL:INF,ARG'}
gen             {'LANG:EN', 'inflectional', 'GEN', 'TAIL:INF,ARG'}
[-n_acc]        {'TAIL:PHI', 'n-ACC', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable', 'inflectional', 'LANG:FI', 'TAIL:*POL:NEG'}
[-t_acc]        {'t-ACC', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable', 'inflectional', 'LANG:FI', 'TAIL:*POL:NEG'}
[-0_acc]        {'TAIL:*PHI', 'TAIL:ARG,ASP:BOUNDED', 'adjoinable', 'inflectional', 'LANG:FI', '0_ACC', 'TAIL:*POL:NEG'}
asp             {'ASP:BOUNDED', 'inflectional', 'LANG:EN'}
a'              {'LF:A', 'LANG:X', 'PF:a', 'a'}
b'              {'PF:b', 'b', 'LANG:X', 'LF:B'}
b''             {'LF:B', 'b', '-COMP:c', 'PF:b', 'LANG:EN'}
c''             {'c', 'PF:c', 'SPEC:a', 'LF:C', 'LANG:EN'}
c'              {'c', 'LANG:X', 'LF:C', 'PF:c'}
d'              {'LANG:', 'PF:d', 'd', 'LF:D'}
a''             ['LANG:EN']
x'              {'LF:X', 'LANG:X', 'x', 'PF:x'}
y'              {'PF:y', 'LANG:X', 'LF:Y', 'y'}
z'              {'PF:x', 'LF:Z', 'LANG:X', 'z'}
John'           {'LANG:X', "N'", 'PF:John', 'LF:John'}
admires'        {'LANG:X', "V'", 'LF:admires', 'PF:admires'}
admires''       {'-COMP:N', 'COMP:P', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'SPEC:ADV', 'SPEC:D', 'LANG:EN', 'LF:admires', 'PHI:DET:_', 'PF:admires', 'V', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-VAL', 'ASP', 'PHI:GEN:_'}
Mary'           {'LF:mary', "N'", 'LANG:X', 'PF:Mary'}
T/fin           {'COMP:T/prt', 'COMP:D', '-SPEC:V', 'T/fin', 'COMP:V', 'PHI:PER:_', 'SPEC:TO/inf', '-SPEC:FORCE', 'PHI:NUM:_', 'LF:T', '!SPEC:*', '-COMP:T/fin', 'PF:T', 'SPEC:D', 'LANG:EN', 'VAL', 'PHI:DET:_', '!PROBE:V', '-COMP:INF', '!COMP:*', 'FIN', 'SPEC:*', '-SPEC:v', 'SPEC:INF', 'PHI:GEN:_', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'ARG', 'T', 'COMP:v'}
v               {'!PROBE:V', 'COMP:V', '!COMP:*', 'PHI:PER:_', 'v', 'LF:v', 'PHI:NUM:_', '-SPEC:N', 'PHI:GEN:_', 'ARG', 'PF:v', '-VAL', 'LANG:EN', 'PHI:DET:_', 'ASP', 'SPEC:D'}
C/fin           {'C/fin', '-COMP:C/fin', 'COMP:Neg/fin', 'LANG:EN', 'VAL', '-COMP:T/prt', 'FIN', '!COMP:*', 'SPEC:*', 'COMP:T/fin', 'PF:C', '-ARG', '-SPEC:N', '-SPEC:C/fin', '!PROBE:FIN', '-SPEC:T/fin', 'LF:C/fin', 'C'}
T               {'COMP:T/prt', 'COMP:D', '-SPEC:V', 'COMP:V', 'PHI:PER:_', '-SPEC:FORCE', 'PHI:NUM:_', 'LF:T', '!SPEC:*', 'PF:T', 'SPEC:D', 'LANG:EN', 'VAL', 'PHI:DET:_', '!PROBE:V', 'FIN', '!COMP:*', 'SPEC:*', 'PHI:GEN:_', '-SPEC:N', '-SPEC:T/fin', 'ARG', '-COMP:NEG', 'T', 'COMP:v'}
T/prt           {'COMP:T/prt', 'COMP:D', '-SPEC:V', 'COMP:V', 'PF:T/prt', 'PHI:PER:_', 'LF:T/prt', '-SPEC:FORCE', 'PHI:NUM:_', '!SPEC:*', 'SPEC:D', 'LANG:EN', 'VAL', 'PHI:DET:_', '!PROBE:V', 'FIN', '!COMP:*', 'T/prt', 'SPEC:*', 'PHI:GEN:_', '-SPEC:N', '-SPEC:T/fin', 'ARG', '-COMP:NEG', 'T', 'COMP:v'}
a0              {'-SPEC:D', 'COMP:0', '-SPEC:A', 'TAIL:D', 'A', 'adjoinable', 'LF:A', '-adjoinable', 'LANG:EN', 'PF:A'}
n               {'-SPEC:V', '-COMP:C/fin', '-COMP:N', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'COMP:uR', 'PHI:NUM:_', '!SPEC:*', 'COMP:R', 'INF', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', '!COMP:*', '-SPEC:N', '-SPEC:C/fin', 'PF:n', 'ARG', '-COMP:AUX', '-COMP:D', 'COMP:v', '-SPEC:P', 'COMP:0', 'COMP:V', 'LF:n', 'PHI:PER:_', '-COMP:WH', '-COMP:T/fin', 'LANG:EN', 'VAL', 'PHI:DET:_', '-SPEC:R', 'COMP:R/D', 'N', '-SPEC:uWH', 'SPEC:*', '-COMP:v', '-COMP:V', 'n', '-SPEC:T/fin', '!SPEC:D', '-COMP:A', 'PHI:GEN:_'}
impass          {'LF:impass', '!PROBE:V', 'COMP:V', '!COMP:*', 'PHI:PER:_', 'v', 'PHI:NUM:_', '-SPEC:N', 'PHI:GEN:_', 'ARG', '-VAL', 'PF:impass', 'LANG:EN', 'PHI:DET:_', 'ASP', 'SPEC:D'}
cau             {'!PROBE:V', 'COMP:V', 'PF:Cau', '!COMP:*', 'PHI:PER:_', 'v', 'LF:v/Cause', '-SPEC:N', 'PHI:NUM:_', 'PHI:GEN:_', 'ARG', '-VAL', 'LANG:EN', 'PHI:DET:_', 'ASP', 'SPEC:D'}
INF             {'INF', 'LF:INF', '-SPEC:V', '-COMP:C/fin', '!PROBE:V', '-COMP:T/fin', '!COMP:*', 'COMP:V', '-COMP:FORCE', '-SPEC:T/fin', 'PF:INF', 'LANG:EN', 'COMP:v'}
prtcpl          {'COMP:T/prt', 'COMP:D', '-SPEC:V', '-COMP:C/fin', 'COMP:V', 'PF:T/prt', 'PHI:PER:_', 'LF:T/prt', '-SPEC:FORCE', 'PHI:NUM:_', '!SPEC:*', '-COMP:T/fin', 'SPEC:D', 'LANG:EN', 'VAL', 'PHI:DET:_', 'INF', '!PROBE:V', '!COMP:*', 'FIN', 'T/prt', 'SPEC:*', '-COMP:FORCE', 'PHI:GEN:_', '-SPEC:N', '-SPEC:T/fin', 'ARG', '-COMP:NEG', 'T', 'COMP:v'}
TO/inf          {'COMP:v', '!COMP:V', '-SPEC:V', '-COMP:C/fin', 'COMP:V', '-COMP:T/fin', 'LANG:EN', 'INF', 'PF:TO/inf', '!PROBE:V', 'LF:TO/inf', '!COMP:*', '-SPEC:v', '-COMP:FORCE', '-SPEC:T/fin', 'adjoinable', '-VAL', '?ARG', 'TO/inf'}
A/inf           {'-SPEC:V', '-COMP:C/fin', 'COMP:V', '-COMP:T/fin', 'PF:A/inf', 'LANG:EN', 'INF', '!PROBE:V', '!COMP:*', 'SPEC:*', '-SPEC:Neg/fin', 'LF:A/inf', 'A/inf', '-COMP:FORCE', '?VAL', '-SPEC:T/fin', '?ARG', 'COMP:v'}
ARE/inf         {'-SPEC:V', '-COMP:C/fin', 'COMP:V', 'PF:are', 'ARE/inf', '-COMP:T/fin', '-adjoinable', 'LANG:EN', 'VAL', 'INF', '!PROBE:V', '!COMP:*', 'SPEC:*', '-COMP:FORCE', '-SPEC:T/fin', '?ARG', 'LF:ARE/inf', 'COMP:v'}
ESSA/inf        {'LF:while', '-SPEC:V', '-COMP:C/fin', 'COMP:V', '-SPEC:FORCE', '-COMP:T/fin', 'TAIL:T', 'LANG:EN', 'INF', '!PROBE:V', '!COMP:*', 'SPEC:*', '-SPEC:Neg/fin', '-COMP:FORCE', 'ADV', 'PF:essa', 'ESSA/inf', '?VAL', '-SPEC:N', '-SPEC:T/fin', 'adjoinable', '?ARG', 'COMP:v'}
TUA/inf         {'-SPEC:V', '-COMP:C/fin', 'COMP:V', 'PF:tua', 'PHI:PER:_', '-SPEC:FORCE', 'PHI:NUM:_', 'adjoinable', '!SPEC:*', '-COMP:T/fin', 'TAIL:T', 'LF:after', 'LANG:EN', 'PHI:DET:_', 'INF', '!PROBE:V', '!COMP:*', 'TUA/inf', '-SPEC:Neg/fin', '-COMP:FORCE', 'ADV', 'CAL', '-SPEC:N', 'PHI:GEN:_', '-SPEC:T/fin', 'ARG', 'COMP:v'}
VA/inf          {'-SPEC:V', '-COMP:C/fin', 'COMP:V', 'PHI:PER:_', 'PHI:NUM:_', '!SPEC:*', '-COMP:T/fin', 'LANG:EN', 'VAL', 'PHI:DET:_', 'INF', '!PROBE:V', '!COMP:*', 'SPEC:*', '-COMP:FORCE', 'PF:vAn', 'LF:VA', 'ARG', 'PHI:GEN:_', '-SPEC:N', '-SPEC:T/fin', 'VA/inf', 'COMP:v'}
MA/ssa          {'TAIL:V', 'COMP:V', 'PHI:PER:_', '-SPEC:FORCE', '-VAL', 'PHI:NUM:_', 'adjoinable', 'LANG:EN', 'PHI:DET:_', '-SPEC:*', 'MA/inf', 'LF:in_doing', '-SPEC:Neg/fin', 'ADV', 'PHI:GEN:_', '-SPEC:N', '-SPEC:T/fin', 'ARG', 'PF:massa', 'COMP:v'}
MA/tta          {'MA/inf', '-SPEC:Neg/fin', 'TAIL:T', 'PHI:PER:_', 'PF:matta', '-SPEC:FORCE', 'ADV', 'PHI:NUM:_', 'adjoinable', '-SPEC:N', '-SPEC:T/fin', 'PHI:GEN:_', 'ARG', '-VAL', 'LANG:EN', 'PHI:DET:_', 'LF:without_doing'}
MA/lla          {'PF:malla', '-SPEC:FORCE', 'PHI:NUM:_', 'LF:by_doing', 'TAIL:T', 'MA/inf', '-SPEC:N', 'ARG', 'COMP:v', 'COMP:V', 'PHI:PER:_', 'LANG:EN', 'PHI:DET:_', '-SPEC:Neg/fin', 'ADV', '-SPEC:T/fin', 'adjoinable', '-VAL', 'PHI:GEN:_'}
MA/inf          {'LF:to_do', 'PF:maan', '-SPEC:FORCE', 'PHI:NUM:_', 'MA/inf', '-SPEC:N', 'ARG', 'COMP:v', 'TAIL:V', 'COMP:V', 'PHI:PER:_', 'LANG:EN', 'PHI:DET:_', '-SPEC:Neg/fin', 'ADV', '-SPEC:T/fin', 'adjoinable', '-VAL', 'PHI:GEN:_'}
E/inf           {'LF:by', 'PF:en', 'LANG:FI', '-SPEC:Neg/fin', 'SPEC:*', '-SPEC:FORCE', '-ARG', 'ADV', '-SPEC:N', '-SPEC:T/fin', 'adjoinable', '-VAL'}
BE-             {'COMP:T/prt', '-COMP:N', 'COMP:P', 'SPEC:TO/inf', '-SPEC:FORCE', 'SPEC:ADV', '-COMP:T/fin', 'SPEC:D', 'LANG:EN', 'COPULA', 'PF:BE', '!COMP:*', 'LF:BE', 'V', '-ARG', '-COMP:v', '-COMP:V', 'SPEC:P', '-SPEC:T/fin', '-VAL', 'ASP'}
D               {'-SPEC:MA/lla', '-SPEC:P', 'D', '-SPEC:V', 'LF:D', '-SPEC:INF', '-COMP:uR', '-COMP:T/fin', 'LANG:EN', 'OP', '-SPEC:D', '-SPEC:C', '!PROBE:N', 'COMP:N', '!COMP:*', '-SPEC:Neg/fin', '-ARG', '-SPEC:N', '-SPEC:T/fin', 'adjoinable', 'PF:D', '-COMP:D'}
P               {'COMP:D', '-SPEC:V', '-SPEC:P', '-COMP:N', 'PHI:PER:_', '-SPEC:INF', '-SPEC:FORCE', 'PHI:NUM:_', 'adjoinable', '-COMP:T/fin', 'LANG:EN', 'PHI:DET:_', 'P', '-SPEC:C', '-float', '-SPEC:iWH', '-SPEC:*', '-COMP:ADV', '-SPEC:ADV', '!COMP:*', '-SPEC:Neg/fin', 'LF:P', '-SPEC:v', '-SPEC:iR', '-SPEC:N', '-SPEC:C/fin', '-COMP:uWH', '-SPEC:T/fin', 'ARG', 'PF:P', '-VAL', 'PHI:GEN:_'}
pro             ['LANG:EN']
pro-            {'-SPEC:V', '-SPEC:P', '-COMP:C/fin', '-COMP:N', 'COMP:P', 'LF:pro', '-COMP:D', '-SPEC:INF', '-SPEC:FORCE', '-COMP:WH', 'COMP:uR', '-COMP:T/fin', 'LANG:EN', 'COMP:R', '-SPEC:R', 'COMP:R/D', 'N', 'SPEC:A', '-SPEC:ADV', '-COMP:ADV', 'PHI', '-SPEC:uWH', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'PF:(pro)', '-COMP:AUX'}
cl              {'RIGHT:PRG', 'CL', 'inflectional', 'RIGHT:ARE/inf', 'LANG:EN', 'LEFT:T/fin', 'LEFT:D,CL'}
inc             {'inflectional', 'LANG:EN', 'INCORPORATED'}
sg              {'inflectional', 'PHI:NUM:SG', 'LANG:EN'}
pl              {'PHI:NUM:PL', 'inflectional', 'LANG:EN'}
1p              {'inflectional', 'PHI:PER:1', 'LANG:EN'}
2p              {'inflectional', 'PHI:PER:2', 'LANG:EN'}
3p              {'inflectional', 'PHI:PER:3', 'LANG:EN'}
def             {'inflectional', 'PHI:DET:DEF', 'LANG:EN'}
indef           {'inflectional', 'LANG:EN', 'PHI:DET:INDEF'}
hum             {'inflectional', 'PHI:HUM:HUM', 'LANG:EN'}
nonhum          {'inflectional', 'LANG:EN', 'PHI:HUM:NONHUM'}
m               {'inflectional', 'LANG:EN', 'PHI:GEN:M'}
f               {'inflectional', 'LANG:EN', 'PHI:GEN:F'}
nom             {'inflectional', 'LANG:EN', 'TAIL:FIN,!COMP:*,VAL'}
acc             {'inflectional', 'TAIL:v', 'LANG:EN'}
dat             {'TAIL:!COMP:*,v', 'inflectional', 'LANG:EN'}
uC/op           {'inflectional', 'uC/op', 'LANG:EN'}
wh              {'LANG:EN', 'inflectional', 'OP:WH', 'OP:_'}
wh_             {'FORCE:OP:WH', 'OP:_', 'inflectional', 'OP', 'LANG:EN'}
top             {'inflectional', 'OP:TOP', 'LANG:EN'}
foc             {'inflectional', 'OP:FOC', 'LANG:EN'}
C/op            {'inflectional', 'OP:C/OP', 'LANG:EN'}
rel             {'OP:REL', '-COMP:C/fin', 'adjoinable', 'inflectional', 'LANG:EN'}
Q               {'OP:Q', 'OP:WH', 'OP', 'inflectional', 'LANG:EN'}
