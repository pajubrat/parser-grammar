ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'-ARG', '-SPEC:C', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '-SPEC:v', '-COMP:uWH', '!COMP:*', '-SPEC:ADV', 'COMP:ARE/inf', '-SPEC:V', '-COMP:ADV', '-SPEC:Neg/fin', 'LANG:IT', '-SPEC:iR', '-COMP:T', 'COMP:D', '-SPEC:P', '-VAL', '-SPEC:iWH', '-SPEC:*', '-SPEC:T/fin', 'P', '-COMP:T/fin', 'adjoinable', 'LF:to', 'PF:a', '-SPEC:INF', 'TAIL:V', '-SPEC:C/fin', '-COMP:A'}
a_D             {'-ARG', '!PROBE:N', '-SPEC:C', '-SPEC:MA/lla', '!COMP:*', 'LANG:EN', '-SPEC:V', '-COMP:uR', 'OP', '-COMP:P', '-SPEC:P', 'LF:D', 'D', 'PF:D', '-COMP:D', '-COMP:T/fin', 'COMP:N', 'adjoinable', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:T/fin'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'PHI:GEN:_', '-COMP:N', 'CLASS:TR', '-SPEC:FORCE', 'ARG', 'COMP:P', 'PF:admire', '!COMP:*', 'V', 'PHI:NUM:_', '-COMP:Neg', 'LANG:EN', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:P', '-COMP:V', 'COMP:D', '-COMP:v', '-VAL', 'SPEC:P', '-COMP:T/fin', 'SPEC:ADV', 'LF:admire', '-SPEC:Neg', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
admire*         ['LANG:EN']
T/fin*          {"PF:T/fin'", 'NO_NUMBER', '-VAL', 'LF:T', 'NO_DET', 'CAT:T/fin', 'LANG:EN', '!SPEC:*'}
v*              {'CAT:v', 'NO_NUMBER', 'NO_DET', '-VAL', 'LANG:EN', 'PF:v', 'LF:v'}
admire**        ['LANG:EN']
T/fin**         {'NO_NUMBER', '-VAL', 'LF:T', "PF:T/fin''", 'NO_PERSON', 'PHI:PER:3', 'NO_DET', 'CAT:T/fin', 'LANG:EN', '!SPEC:*'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'PF:adora', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:V', 'LANG:IT', 'COMP:D', '-COMP:v', '-VAL', 'SPEC:P', 'SPEC:ADV', 'LF:admire', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
antaa           ['LANG:FI']
anta-           {'-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', '+SEM:directional', 'PF:antaa', '!COMP:*', 'ASP:BOUNDED', 'V', 'PHI:NUM:_', 'CLASS:DITR', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:V', 'COMP:D', '-COMP:v', '-VAL', '-COMP:FIN', 'SPEC:D', 'SPEC:P', 'LF:give', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'V', 'PHI:NUM:_', 'LANG:EN', 'PHI:DET:_', 'SEM:internal', 'SPEC:TO/inf', '-COMP:V', 'COMP:D', 'PF:ask', '-COMP:v', '-VAL', 'SPEC:D', 'SPEC:P', 'LF:ask', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', '-SPEC:R', 'COMP:R', '-SPEC:ADV', 'COMP:C', 'N', 'PF:avain', '-SPEC:V', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SEM:directional', '-SPEC:uWH', 'SPEC:A', '-COMP:A', '-COMP:C/fin', '-COMP:AUX', 'LF:key', '-COMP:WH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', '-SPEC:R', 'COMP:R', '-SPEC:ADV', 'PF:auto', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SEM:directional', '-SPEC:uWH', 'LF:car', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
bank            {'-COMP:N', '-SPEC:FORCE', 'COMP:P', 'FREQ:1', '-SPEC:N', 'PF:bank1', 'COMP:R', 'LF:bank_inst', '-SPEC:ADV', 'LANG:EN', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
bank            {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', 'COMP:R', '-SPEC:ADV', 'LANG:EN', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SPEC:uWH', 'SPEC:A', 'PF:bank2', 'FREQ:2', '-COMP:C/fin', '-COMP:AUX', 'LF:bank_river', '-COMP:A', '-COMP:WH', '-SPEC:INF', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
barn            {'PF:barn', '-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', 'COMP:R', '-SPEC:ADV', 'LANG:EN', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', 'LF:barn', '-COMP:A', '-COMP:WH', '-SPEC:INF', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
city            {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', 'COMP:R', '-SPEC:ADV', 'LANG:EN', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', 'PF:city', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', 'LF:city', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
che             ['LANG:IT']
che-            {'-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'LANG:IT', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'LF:who', 'SPEC:A', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', '-COMP:N', 'PF:che', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', 'COMP:C', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
chiamato        ['LANG:IT']
chiamata-       {'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'PF:chiamato', 'LANG:IT', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', 'LF:called', '-VAL', 'SPEC:P', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
claims          ['LANG:EN']
claim-          {'PF:claim', 'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'V', 'PHI:NUM:_', 'COMP:T/fin', 'LANG:EN', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', 'SPEC:D', 'SPEC:P', '-COMP:D', 'LF:claim', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
danno           {'PF:danno', '-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', 'COMP:R', '-SPEC:ADV', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', 'LANG:IT', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin', 'LF:damage'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'LF:detest', 'ARG', 'COMP:P', 'V', 'PHI:NUM:_', 'COMP:ARE/inf', 'PHI:DET:_', 'LANG:IT', 'SEM:internal', 'SPEC:TO/inf', 'COMP:D', '-COMP:V', '-COMP:v', '-VAL', 'SPEC:P', 'SPEC:ADV', 'PF:detest', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
devono          ['LANG:EN']
deva-           {'PHI:PER:_', 'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'V', 'PHI:NUM:_', 'COMP:ARE/inf', 'PHI:DET:_', 'LANG:IT', 'SEM:internal', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', 'LF:must', 'SPEC:D', 'SPEC:P', 'SPEC:ADV', 'PF:deva', '-ASP', '-SPEC:T/fin'}
di              {'PHI:PER:_', '-SPEC:C', '-SPEC:FORCE', 'PF:di', 'ARG', '-adjoinable', '-COMP:N', '-SPEC:N', '-SPEC:v', '-COMP:uWH', '!COMP:*', 'PHI:NUM:_', 'SPEC:*', '-SPEC:ADV', '-SPEC:V', '-COMP:T', '-COMP:ADV', 'PHI:DET:_', '-SPEC:iR', '-SPEC:P', 'COMP:D', 'LF:of', '-VAL', '-SPEC:iWH', '-SPEC:T/fin', 'P', '-COMP:T/fin', '-SPEC:INF', '-SPEC:Neg/fin', 'LANG:FI', '-SPEC:C/fin', '-COMP:A'}
does            {'ARG', '!PROBE:V', '-SPEC:v', 'T', 'PHI:NUM:_', '-SPEC:V', 'COMP:T/prt', 'COMP:Neg', 'SPEC:D', 'LF:does', 'SPEC:C/fin', 'PHI:GEN:M', 'COMP:v', 'FIN', 'PHI:NUM:SG', 'T/fin', '-COMP:INF', 'PHI:GEN:_', '-SPEC:C', 'PHI:PER:3', '-SPEC:N', 'SPEC:FORCE', '!COMP:*', '-SPEC:TO/inf', 'SPEC:*', 'LANG:EN', 'VAL', 'PHI:DET:_', 'SPEC:TO/inf', '!SPEC:*', 'COMP:V', 'PHI:GEN:F', 'PF:does', '-COMP:T/fin', '-SPEC:Neg', 'PHI:PER:_', '-SPEC:T/fin'}
does_C          ['LANG:EN']
does-           {'ARG', '!PROBE:V', '-SPEC:v', 'T', 'PHI:NUM:_', '-SPEC:V', 'COMP:T/prt', 'COMP:Neg', 'SPEC:D', 'LF:does', 'SPEC:C/fin', 'PHI:GEN:M', 'COMP:v', 'FIN', 'PHI:NUM:SG', 'T/fin', '-COMP:INF', 'PHI:GEN:_', '-SPEC:C', 'PHI:PER:3', '-SPEC:N', 'SPEC:FORCE', '!COMP:*', '-SPEC:TO/inf', 'SPEC:*', 'LANG:EN', 'VAL', 'PHI:DET:_', 'SPEC:TO/inf', '!SPEC:*', 'COMP:V', 'PHI:GEN:F', 'PF:does', '-COMP:T/fin', '-SPEC:Neg', 'PHI:PER:_', '-SPEC:T/fin'}
dorme           ['LANG:IT']
dorme-          {'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'CLASS:INTR', 'V', 'LF:sleep', 'PHI:NUM:_', 'LANG:EN', 'PHI:DET:_', '-COMP:MA/inf', 'SPEC:TO/inf', '!SPEC:D', '-COMP:V', '-COMP:v', '-VAL', 'SPEC:D', 'SPEC:P', '-COMP:D', 'ASP', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', 'PF:dorme'}
disappeared     ['LANG:EN']
disappear-      {'PF:disappear', 'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'CLASS:INTR', 'V', 'PHI:NUM:_', 'LF:disappear', 'LANG:EN', 'PHI:DET:_', '-COMP:MA/inf', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', 'SPEC:D', 'SPEC:P', '-COMP:D', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'0', '2SPEC', 'LANG:EN', 'SPEC:D', 'PF:easy', 'LF:easy'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'LF:neg', 'NEG', 'ARG', '!COMP:*', 'PHI:NUM:_', 'SPEC:*', '-SPEC:T', 'VAL', 'PHI:DET:_', 'SEM:internal', '!SPEC:*', 'Neg/fin', 'COMP:T/prt', 'POL:NEG', '!COMP:T', 'PF:ei', '%SPEC:INF', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'FIN'}
e-              {'LF:neg', 'NEG', 'ARG', '!COMP:*', 'PHI:NUM:_', 'SPEC:*', '-SPEC:T', 'VAL', 'PHI:DET:_', 'SEM:internal', '!SPEC:*', 'Neg/fin', 'COMP:T/prt', 'POL:NEG', '!COMP:T', 'PF:ei', '%SPEC:INF', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'FIN'}
elaa            ['LANG:FI']
ela-            {'PF:elaa', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'CLASS:INTR', 'V', 'PHI:NUM:_', 'LF:live', 'PHI:DET:_', '-COMP:MA/inf', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', 'SPEC:D', 'SPEC:P', '-COMP:D', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
etsii           ['LANG:FI']
etsi-           {'LF:search', '-COMP:N', 'CLASS:TR', '-SPEC:FORCE', 'ARG', 'COMP:P', 'PF:etsi', '!COMP:*', 'V', 'PHI:NUM:_', '!COMP:D', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:P', '-COMP:V', 'COMP:D', '-COMP:v', '-VAL', 'SPEC:P', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
etta            {'-ARG', 'PF:etta', '-VAL', '-SPEC:*', 'LF:that', '-SPEC:D', 'FORCE', '!COMP:*', '!PROBE:FIN', 'COMP:T/fin', 'COMP:C/fin', 'LANG:FI', 'FIN'}
fell            ['LANG:EN']
fell-           {'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'CLASS:INTR', 'V', 'PHI:NUM:_', 'LANG:EN', 'PHI:DET:_', '-COMP:MA/inf', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', 'LF:fell', '-VAL', 'SPEC:D', 'SPEC:P', '-COMP:D', 'SPEC:ADV', 'PHI:PER:_', 'PF:fell', '-SPEC:T/fin', 'ASP'}
flow'           {'PHI:GEN:_', 'PF:flow', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'ARG', 'V', 'PHI:NUM:_', 'LANG:EN', 'LF:flow', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', '-SPEC:T/fin', 'SPEC:D', 'SPEC:ADV', 'PHI:PER:_', 'SPEC:P', 'ASP'}
from            {'PF:from', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:C', '-SPEC:FORCE', 'ARG', '-COMP:N', '-SPEC:N', '-SPEC:v', '-COMP:uWH', '!COMP:*', 'PHI:NUM:_', 'TAIL:V,+SEM:directional', 'LANG:EN', 'LF:from', '-SPEC:ADV', '-SPEC:V', '-COMP:T', '-COMP:ADV', 'PHI:DET:_', '-SPEC:iR', '-SPEC:P', 'COMP:D', '-VAL', '-SPEC:iWH', '-SPEC:*', '-SPEC:T/fin', 'P', '-float', '-COMP:T/fin', 'adjoinable', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:C/fin', '-COMP:A'}
gave            ['LANG:EN']
give-           {'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', '+SEM:directional', '!COMP:*', 'V', 'PHI:NUM:_', 'CLASS:DITR', 'LANG:EN', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:V', 'COMP:D', '-COMP:v', '-VAL', '-COMP:FIN', 'PF:give', 'SPEC:D', 'SPEC:P', 'LF:give', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-COMP:N', '-SPEC:FORCE', 'COMP:P', 'LF:Giuseppe', '-SPEC:N', 'COMP:R', '-SPEC:ADV', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', 'LANG:IT', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SEM:directional', '-SPEC:uWH', 'SPEC:A', 'PF:Giuseppe', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'PHI:PER:_', '-COMP:N', 'CLASS:TR', '-SPEC:FORCE', 'ARG', 'COMP:P', '!COMP:*', 'ASP:BOUNDED', 'V', 'PHI:NUM:_', 'LF:want', 'PHI:DET:_', 'SEM:internal', 'SPEC:TO/inf', '-COMP:P', 'COMP:D', '-COMP:V', '-COMP:v', '-VAL', '-SPEC:*', 'SPEC:P', 'SPEC:ADV', 'LANG:FI', 'PF:haluaa', 'COMP:A/inf', '-SPEC:T/fin', 'ASP'}
hairitsee       ['LANG:FI']
hairitse-       {'-COMP:N', 'CLASS:TR', '-SPEC:FORCE', 'ARG', 'COMP:P', '!COMP:*', 'V', 'PHI:NUM:_', 'PF:hairitsee', '!COMP:D', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:P', 'LF:disturb', 'COMP:D', '-COMP:V', '-COMP:v', '-VAL', '-COMP:FIN', 'SPEC:D', 'SPEC:P', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'PHI:PER:_', 'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'COMP:T', 'ARG', 'COMP:P', 'V', 'SPEC:*', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:IT', 'SEM:internal', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', 'SPEC:D', 'SPEC:P', 'SPEC:ADV', 'LF:have', 'PF:ha', '-ASP', '-SPEC:T/fin'}
horse           {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', 'COMP:R', '-SPEC:ADV', 'LANG:EN', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'LF:horse', 'COMP:D/rel', '-COMP:v', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin', 'PF:horse'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'CLASS:INTR', 'V', 'PHI:NUM:_', 'LF:disappear', 'PHI:DET:_', '-COMP:MA/inf', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', 'SPEC:D', 'SPEC:P', '-COMP:D', 'PF:havia', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
Helsingissa     ['LANG:FI']
Helsinki        ['LANG:FI']
Helsinki-       {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', 'PF:Helsinki', '-SPEC:R', 'COMP:R', '-SPEC:ADV', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', 'LF:Helsinki', '-COMP:v', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'-COMP:N', 'CLASS:TR', '-SPEC:FORCE', 'PF:ihaile-', 'ARG', 'COMP:P', '!COMP:*', 'V', 'PHI:NUM:_', '!COMP:D', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:P', '-COMP:V', 'COMP:D', '-COMP:v', '-VAL', '-COMP:FIN', 'SPEC:P', 'SPEC:ADV', 'LF:admire', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
il              {'-ARG', '!PROBE:N', '-SPEC:C', '-SPEC:MA/lla', '!COMP:*', '-SPEC:V', '-COMP:uR', 'OP', 'LANG:IT', '-COMP:P', '-SPEC:P', 'PF:il', 'D', '-COMP:D', '-COMP:T/fin', 'COMP:N', 'adjoinable', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:T/fin', 'LF:the'}
i               {'-ARG', '!PROBE:N', '-SPEC:C', '-SPEC:MA/lla', '!COMP:*', '-SPEC:V', '-COMP:uR', 'OP', 'LANG:IT', '-COMP:P', '-SPEC:P', 'PF:il', 'D', '-COMP:D', '-COMP:T/fin', 'COMP:N', 'adjoinable', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:T/fin', 'LF:the'}
in              {'PHI:PER:_', 'PHI:GEN:_', '-SPEC:C', '-SPEC:FORCE', 'ARG', '-COMP:N', '-SPEC:N', '-SPEC:v', '-COMP:uWH', '!COMP:*', 'PF:in', 'PHI:NUM:_', '-SPEC:ADV', '-SPEC:V', '-COMP:T', '-COMP:ADV', 'PHI:DET:_', 'LANG:IT', '-SPEC:iR', '-SPEC:P', 'COMP:D', '-VAL', 'LF:in', '-SPEC:iWH', '-SPEC:T/fin', 'P', '-COMP:T/fin', 'adjoinable', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:C/fin', '-COMP:A'}
infermieri      {'PF:infermieri', '-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', 'COMP:R', '-SPEC:ADV', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', 'LANG:IT', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SPEC:uWH', 'LF:nurses', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
is              ['LANG:EN']
be-             {'-ARG', '-COMP:N', 'LF:be', '-SPEC:FORCE', 'COMP:P', '!COMP:*', 'V', 'LANG:EN', 'SPEC:TO/inf', '-COMP:V', '-COMP:TO/inf', '-COMP:v', 'COPULA', '-VAL', 'SPEC:D', 'PF:be', 'SPEC:P', 'SPEC:ADV', '-SPEC:T/fin', 'ASP'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'CLASS:INTR', 'V', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:MA/inf', 'SPEC:TO/inf', '-COMP:V', 'LF:sit', '-COMP:v', '-VAL', '-SPEC:T/fin', 'SPEC:D', 'SPEC:P', '-COMP:D', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', 'PF:istuu', 'ASP'}
John            ['LANG:EN']
John-           {'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SEM:directional', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', '-COMP:N', '-SPEC:FORCE', 'COMP:P', '-adjoinable', '-SPEC:N', '-SPEC:R', 'COMP:C', 'LANG:EN', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', 'LF:John', '-COMP:A', 'PF:John', '-SPEC:C/fin', '-SPEC:T/fin'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'LF:who', 'SPEC:A', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', 'PF:joka', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', '-SPEC:R', 'COMP:C', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-COMP:N', '-SPEC:FORCE', 'COMP:P', 'LF:Jukka', '-SPEC:N', '-SPEC:R', 'COMP:R', '-SPEC:ADV', 'COMP:C', 'N', 'PF:Jukka', '-SPEC:V', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SEM:directional', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'-COMP:N', '-SPEC:FORCE', 'ARG', 'LF:run', 'COMP:P', 'V', 'PHI:NUM:_', 'PF:juokse-', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', 'SPEC:P', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
kaksi           {'PHI:NUM:SG', 'LF:two', '-VAL', 'ARG', 'COMP:n', 'COMP:N', 'PHI:NUM:_', 'SPEC:*', 'PF:kaksi', 'NUM', 'TAIL:ARG,VAL,FIN', 'PHI:DET:_', 'LANG:FI', 'PHI:PER:_'}
kaksi           {'LF:two', 'COMP:n', 'TAIL:*POL:NEG', 'COMP:N', 'SPEC:*', 'PF:kaksi', 'NUM', 'LANG:EN', 'TAIL:ARG,ASP:BOUNDED'}
kaksi_1         {'PHI:NUM:SG', 'LF:two', '-VAL', 'ARG', 'COMP:n', 'COMP:N', 'PHI:NUM:_', 'SPEC:*', 'PF:kaksi', 'NUM', 'TAIL:ARG,VAL,FIN', 'PHI:DET:_', 'LANG:FI', 'PHI:PER:_'}
kaksi_2         {'LF:two', 'COMP:n', 'TAIL:*POL:NEG', 'COMP:N', 'SPEC:*', 'PF:kaksi', 'NUM', 'LANG:EN', 'TAIL:ARG,ASP:BOUNDED'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'SPEC:*', 'PF:kaksi', 'NUM', 'LF:two', 'COMP:n', 'LANG:FI', 'COMP:N'}
kaupunkia       ['LANG:EN']
kaupunki        {'-COMP:N', '-SPEC:FORCE', '-SPEC:N', '-SPEC:R', 'PF:kaupunki', 'COMP:R', '-SPEC:ADV', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', '-COMP:P', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', 'LF:city', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'LF:order', '-COMP:N', '-SPEC:FORCE', 'ARG', 'SEM:external', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', '-SPEC:T/fin', 'PF:kaske', 'SPEC:ADV', '!COMP:A/inf', 'LANG:FI', 'PHI:PER:_', 'SPEC:P', 'ASP'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', '-SPEC:R', 'COMP:R', '-SPEC:ADV', 'COMP:C', 'N', '-SPEC:V', 'LF:watch', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', 'PF:kello', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
kello0-         {'0', '2SPEC', 'PF:kello', 'LANG:FI', 'SPEC:D', 'LF:watch'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', 'COMP:R', '-SPEC:ADV', 'LANG:EN', 'PF:key', 'N', '-SPEC:V', 'COMP:C', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SPEC:uWH', 'SPEC:A', '-COMP:A', '-COMP:C/fin', '-COMP:AUX', 'LF:key', '-COMP:WH', '-SPEC:INF', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
kirja           ['LANG:FI']
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', '-SPEC:R', 'COMP:R', '-SPEC:ADV', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'PF:kirja', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SEM:directional', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', 'LF:book', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
knows           ['LANG:EN']
know-           {'LF:know', 'PHI:GEN:_', '-COMP:N', 'CLASS:TR', '-SPEC:FORCE', 'ARG', 'COMP:P', '!COMP:*', 'V', 'PHI:NUM:_', 'LANG:EN', 'PF:know', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:P', '-COMP:V', 'COMP:D', '-COMP:v', '-VAL', 'SPEC:P', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
kohti           {'LF:towards', 'PHI:PER:_', '-SPEC:C', '-SPEC:FORCE', 'ARG', '-COMP:N', '-SPEC:N', '-SPEC:v', '-COMP:uWH', '!COMP:*', 'PHI:NUM:_', 'PF:kohti', 'SPEC:*', '-SPEC:ADV', '-SPEC:V', '-COMP:T', '-COMP:ADV', '-SPEC:Neg/fin', 'PHI:DET:_', '-SPEC:iR', '-SPEC:P', 'COMP:D', '-VAL', '-SPEC:iWH', '-SPEC:T/fin', 'P', '-COMP:T/fin', 'adjoinable', '-SPEC:INF', 'TAIL:V', 'LANG:FI', '-SPEC:C/fin', '-COMP:A'}
koko            {'-ARG', '!PROBE:N', '-SPEC:C', '-SPEC:MA/lla', '!COMP:*', 'PF:koko', '-SPEC:V', '-COMP:uR', 'OP', '-COMP:P', '-SPEC:P', 'TAIL:T', 'LF:all', 'D', '-COMP:D', '-COMP:T/fin', 'COMP:N', 'adjoinable', '-SPEC:INF', '-SPEC:Neg/fin', 'LANG:FI', '-SPEC:T/fin'}
kuka            ['LANG:FI']
kuka-           {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', '-SPEC:R', 'COMP:R', '-SPEC:ADV', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', 'PHI', '-SPEC:uWH', 'LF:who', 'SPEC:A', '-COMP:A', '-COMP:C/fin', '-COMP:AUX', 'PF:kuka', '-COMP:WH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'-COMP:N', '-SPEC:FORCE', 'COMP:P', 'ARG', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', 'SPEC:P', '-COMP:T/fin', '-COMP:D', 'PF:kuorsaa', 'SPEC:ADV', 'LF:snore', '-COMP:WH', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
lahella         {'INF', 'ARG', 'LF:near', '-SPEC:v', '-COMP:uWH', 'PHI:NUM:_', '-SPEC:ADV', '-SPEC:V', '-COMP:ADV', '!SPEC:D', '-SPEC:iR', 'COMP:D', 'P', '-SPEC:INF', 'COMP:v', '-SPEC:Neg/fin', 'PHI:PER:_', '-SPEC:C', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '!COMP:*', 'SPEC:*', 'VAL', '-COMP:T', 'PHI:DET:_', '!SPEC:*', '-SPEC:P', 'COMP:V', '-SPEC:iWH', '-SPEC:T/fin', '-COMP:T/fin', 'adjoinable', '-COMP:C/fin', 'PF:lahella', 'LANG:FI', '-SPEC:C/fin', '-COMP:A', '-COMP:FORCE'}
lahella         {'PHI:PER:_', '-SPEC:C', '-SPEC:FORCE', 'ARG', 'LF:near', '-COMP:N', '-SPEC:N', '-SPEC:v', '-COMP:uWH', '!COMP:*', 'PHI:NUM:_', 'SPEC:*', '-SPEC:ADV', '!COMP:D', '-SPEC:V', '-COMP:ADV', '-SPEC:Neg/fin', '-COMP:T', '-SPEC:iR', '-SPEC:P', 'COMP:D', 'PHI:DET:_', '-VAL', '-SPEC:iWH', '-SPEC:T/fin', 'P', '-COMP:T/fin', 'adjoinable', '-SPEC:INF', 'PF:lahella', 'LANG:FI', '-SPEC:C/fin', '-COMP:A'}
lahella_1       {'PHI:PER:_', '-SPEC:C', '-SPEC:FORCE', 'ARG', 'LF:near', '-COMP:N', '-SPEC:N', '-SPEC:v', '-COMP:uWH', '!COMP:*', 'PHI:NUM:_', 'SPEC:*', '-SPEC:ADV', '!COMP:D', '-SPEC:V', '-COMP:ADV', '-SPEC:Neg/fin', '-COMP:T', '-SPEC:iR', '-SPEC:P', 'COMP:D', 'PHI:DET:_', '-VAL', '-SPEC:iWH', '-SPEC:T/fin', 'P', '-COMP:T/fin', 'adjoinable', '-SPEC:INF', 'PF:lahella', 'LANG:FI', '-SPEC:C/fin', '-COMP:A'}
lahella_2       {'INF', 'ARG', 'LF:near', '-SPEC:v', '-COMP:uWH', 'PHI:NUM:_', '-SPEC:ADV', '-SPEC:V', '-COMP:ADV', '!SPEC:D', '-SPEC:iR', 'COMP:D', 'P', '-SPEC:INF', 'COMP:v', '-SPEC:Neg/fin', 'PHI:PER:_', '-SPEC:C', '-SPEC:FORCE', '-COMP:N', '-SPEC:N', '!COMP:*', 'SPEC:*', 'VAL', '-COMP:T', 'PHI:DET:_', '!SPEC:*', '-SPEC:P', 'COMP:V', '-SPEC:iWH', '-SPEC:T/fin', '-COMP:T/fin', 'adjoinable', '-COMP:C/fin', 'PF:lahella', 'LANG:FI', '-SPEC:C/fin', '-COMP:A', '-COMP:FORCE'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'CLASS:INTR', 'LF:leave', 'V', 'PHI:NUM:_', 'PF:lahtea', 'PHI:DET:_', '-COMP:MA/inf', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', 'SPEC:D', 'COMP:PP', 'SPEC:P', '-COMP:D', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
lavano          ['LANG:IT']
lava-           {'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', '!COMP:*', 'V', 'PHI:NUM:_', 'PF:lava', 'PHI:DET:_', 'LANG:IT', 'SPEC:TO/inf', '-COMP:V', 'COMP:D', '-COMP:v', '-VAL', '-SPEC:T/fin', 'LF:wash', 'SPEC:ADV', 'PHI:PER:_', 'SPEC:P', 'ASP'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-ARG', '!PROBE:N', '-SPEC:C', '-SPEC:MA/lla', '!COMP:*', '-SPEC:V', '-COMP:uR', 'OP', 'LANG:IT', '-COMP:P', '-SPEC:P', 'LF:D', 'D', 'PF:le', '-COMP:D', '-COMP:T/fin', 'COMP:N', 'adjoinable', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:T/fin'}
leaves          ['LANG:EN']
leave           {'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'LF:leave', 'V', 'PHI:NUM:_', 'LANG:EN', 'PHI:DET:_', 'PF:leave', 'SPEC:TO/inf', '-COMP:V', '!SPEC:D', '-COMP:v', '-VAL', '-SPEC:T/fin', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'SPEC:P', 'ASP'}
leave-          {'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'LF:leave', 'V', 'PHI:NUM:_', 'LANG:EN', 'PHI:DET:_', 'PF:leave', 'SPEC:TO/inf', '-COMP:V', '!SPEC:D', '-COMP:v', '-VAL', '-SPEC:T/fin', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'SPEC:P', 'ASP'}
like-           {'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'V', 'PF:like', 'PHI:NUM:_', 'LF:like', 'LANG:EN', '!COMP:D', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', '-SPEC:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'SPEC:P', 'ASP'}
likes           ['LANG:EN']
like            {'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'V', 'PF:like', 'PHI:NUM:_', 'LF:like', 'LANG:EN', '!COMP:D', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', '-SPEC:T/fin', 'SPEC:ADV', 'PHI:PER:_', 'SPEC:P', 'ASP'}
little          ['LANG:EN']
little-         {'0', 'LF:little', '2SPEC', 'LANG:EN', 'SPEC:D', 'PF:little-'}
lle             {'PHI:PER:_', '-SPEC:C', '-SPEC:FORCE', 'ARG', '-COMP:N', '+SEM:directional', '-SPEC:N', '-SPEC:v', '-COMP:uWH', '!COMP:*', 'PHI:NUM:_', 'TAIL:V,+SEM:directional', '-SPEC:ADV', '-SPEC:V', '-COMP:T', '-COMP:ADV', 'PHI:DET:_', '-SPEC:iR', '-SPEC:P', 'COMP:D', 'PF:P(lle)', '-VAL', '-SPEC:iWH', '-SPEC:*', '-SPEC:T/fin', 'P', 'LF:for', '-COMP:T/fin', 'adjoinable', '-SPEC:INF', '-SPEC:Neg/fin', 'LANG:FI', '-SPEC:C/fin', '-COMP:A'}
lla             {'PHI:PER:_', '-SPEC:C', '-SPEC:FORCE', 'ARG', '-COMP:N', 'TAIL:*V', '-SPEC:N', '-SPEC:v', '-COMP:uWH', '!COMP:*', 'PHI:NUM:_', 'SPEC:*', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:V', '-COMP:T', '-COMP:ADV', 'PHI:DET:_', '-SPEC:iR', '-SPEC:P', 'COMP:D', '-VAL', '-SPEC:iWH', '-SPEC:T/fin', 'PF:P(lla)', 'P', 'TAIL:T', '-COMP:T/fin', 'adjoinable', '-SPEC:INF', '-SPEC:Neg/fin', 'LANG:FI', 'LF:by', '-COMP:A'}
Luisa           ['LANG:IT']
Luisa-          {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', 'COMP:R', '-SPEC:ADV', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', 'LANG:IT', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', 'LF:Luisa', '-COMP:v', '-SEM:directional', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', 'PF:Luisa', '-COMP:A', '-COMP:WH', '-SPEC:INF', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'-COMP:N', 'CLASS:TR', '-SPEC:FORCE', 'ARG', 'COMP:P', '!COMP:*', 'V', 'PHI:NUM:_', 'LF:read', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:P', '-COMP:V', 'COMP:D', '-COMP:v', '-VAL', 'SPEC:P', 'PF:luke', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'-COMP:N', 'CLASS:TR', '-SPEC:FORCE', 'ARG', 'COMP:P', '!COMP:*', 'ASP:BOUNDED', 'V', 'PHI:NUM:_', 'PF:loyta-', '!COMP:D', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:P', '-COMP:V', 'COMP:D', '-COMP:v', '-VAL', 'SPEC:P', 'SPEC:ADV', 'LF:find', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
Mary            ['LANG:EN']
Mary-           {'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SEM:directional', '-SPEC:uWH', 'SPEC:A', 'PF:Mary', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', '-COMP:N', '-SPEC:FORCE', 'COMP:P', '-adjoinable', '-SPEC:N', 'COMP:C', 'LANG:EN', 'COMP:R/D', 'LF:Mary', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SEM:directional', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', 'PF:Merja', '-COMP:N', '-SPEC:FORCE', 'COMP:P', '-adjoinable', '-SPEC:N', '-SPEC:R', 'COMP:C', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', 'LF:Merja', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'-SPEC:FORCE', 'TAIL:T', '-SPEC:N', 'PF:malla', 'MA/inf', 'ADV', 'adjoinable', 'SPEC:*', '-SPEC:Neg/fin', 'COMP:v', 'LANG:FI', 'LF:by', '-SPEC:T/fin'}
meren           ['LANG:FI']
mere-           {'LF:ocean', '-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', '-SPEC:R', 'COMP:R', '-SPEC:ADV', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'PF:meri', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
mies            {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', '-SPEC:R', 'COMP:R', 'LF:man', '-SPEC:ADV', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SPEC:uWH', 'PF:mies', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
mistake         {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', '-SPEC:R', 'COMP:R', '-SPEC:ADV', 'LANG:EN', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', 'LF:mistake', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', 'PF:mistake', '-SPEC:C/fin', '-SPEC:T/fin'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', '-SPEC:R', 'COMP:R', '-SPEC:ADV', 'COMP:C', 'PF:mika-', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', 'LF:what', '-COMP:A', '-COMP:WH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'PHI:GEN:_', '-COMP:N', 'CLASS:TR', '-SPEC:FORCE', 'ARG', 'COMP:P', '+SEM:directional', 'PF:move', '!COMP:*', 'V', 'LANGN:EN', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:P', '-COMP:V', 'COMP:D', '-COMP:v', '-VAL', 'SPEC:P', 'SPEC:ADV', 'LF:move', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
mukavasti       ['LANG:EN']
mukava-         {'LF:comfortably', 'PF:mukavasti', '0', '2SPEC', 'SPEC:D', 'LANG:FI'}
must            {'T/fin', '-COMP:INF', 'PHI:GEN:_', '-SPEC:C', 'ARG', '!PROBE:V', '-SPEC:N', '-SPEC:v', 'SPEC:FORCE', 'PF:must', 'T', '!COMP:*', '-SPEC:TO/inf', 'PHI:NUM:_', 'SPEC:*', 'LANG:EN', 'VAL', '-SPEC:V', 'PHI:DET:_', 'SPEC:TO/inf', '!SPEC:*', 'COMP:V', 'MODAL', 'COMP:T/prt', 'COMP:Neg', 'LF:must', 'SPEC:D', '-COMP:T/fin', 'SPEC:C/fin', 'COMP:v', '-SPEC:Neg', 'PHI:PER:_', '-SPEC:T/fin', 'FIN'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'-COMP:N', 'CLASS:TR', '-SPEC:FORCE', 'ARG', 'COMP:P', '!COMP:*', 'ASP:BOUNDED', 'V', 'LF:sell', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:P', '-COMP:V', 'COMP:D', '-COMP:v', '-VAL', 'SPEC:P', '-COMP:T/fin', 'PF:myy', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
naki            ['LANG:FI']
nakee           ['LANG:FI']
nake-           {'PF:nake', '-COMP:N', 'CLASS:TR', '-SPEC:FORCE', 'ARG', 'COMP:P', '-COMP:MA/tta', '!COMP:*', 'ASP:BOUNDED', 'V', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:ESSA/inf', '-COMP:MA/ssa', 'SPEC:TO/inf', '-COMP:P', '-COMP:V', 'COMP:D', '-COMP:v', '-VAL', 'LF:see', 'SPEC:P', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
nayttaa         ['LANG:FI']
naytta-         {'-ARG', '!COMP:VA/inf', 'LF:seem', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PF:naytta', 'V', 'VAL', 'SEM:internal', '!SPEC:D', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', 'SPEC:P', 'SPEC:ADV', 'LANG:FI', '-SPEC:T/fin', 'ASP'}
ndo             {'COMP:v', 'INF', '-SPEC:V', 'PRG', 'LF:ing', '-SPEC:T/fin', 'COMP:V', '-COMP:T/fin', '!COMP:*', '-COMP:C/fin', 'LANG:EN', 'VAL', '?ARG', 'PF:PRG', '-COMP:FORCE'}
ne              {'-ARG', '!PROBE:N', 'PF:ne', '-SPEC:C', '-SPEC:MA/lla', 'PHI:PER:3', 'PHI:NUM:PL', 'LF:those', '!COMP:*', '-SPEC:V', '-COMP:uR', 'OP', '-COMP:P', '-SPEC:P', 'D', '-COMP:D', '-COMP:T/fin', 'COMP:N', 'adjoinable', '-SPEC:INF', '-SPEC:Neg/fin', 'LANG:FI', '-SPEC:T/fin'}
niiden          ['LANG:EN']
nen             {'-SPEC:A', 'LF:ing', '-SPEC:D', 'COMP:0', 'TAIL:D', 'SPEC:*', 'PF:a', 'A', 'LANG:FI'}
not             {'POL:NEG', 'PHI:GEN:_', 'PF:not', '-VAL', 'Neg', 'ARG', '-COMP:FIN', '-COMP:D', '!COMP:*', '-COMP:C', 'PHI:NUM:_', 'SPEC:*', 'LANG:EN', 'PHI:DET:_', 'LF:not', 'PHI:PER:_', '-SPEC:T/fin'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'CLASS:INTR', 'V', 'LF:sleep', 'PHI:NUM:_', '-COMP:Neg/fin', '-COMP:T', 'PHI:DET:_', '-COMP:MA/inf', 'SPEC:TO/inf', '-COMP:V', 'PF:nukku', '-COMP:v', '-VAL', 'SPEC:D', 'SPEC:P', '-COMP:T/fin', '-COMP:D', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PF:omaisuuden', '-SPEC:N', '-SPEC:R', 'COMP:R', 'LF:possessions', '-SPEC:ADV', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
operatoria      ['LANG:IT']
operatoria-     {'0', '2SPEC', 'LF:operation', 'SPEC:D', 'PF:operatoria', 'LANG:IT'}
ostaa           ['LANG:FI']
osta-           {'PF:osta', '-COMP:N', 'CLASS:TR', '-SPEC:FORCE', 'ARG', 'COMP:P', '!COMP:*', 'ASP:BOUNDED', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:P', '-COMP:V', 'COMP:D', '-COMP:v', 'LF:buy', '-VAL', 'SPEC:P', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', 'SEM:nonreferential', '-SPEC:R', 'COMP:R', '-SPEC:ADV', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', '-SPEC:P', 'LF:day', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:V', '-COMP:v', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', 'PF:paiva', '-COMP:A', '-COMP:WH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
past            {'PHI:PER:_', 'PHI:GEN:_', '-SPEC:C', '-SPEC:FORCE', 'ARG', '-COMP:N', '-SPEC:N', '-SPEC:v', 'LF:past', '-COMP:uWH', '!COMP:*', 'PHI:NUM:_', '-SPEC:ADV', 'LANG:EN', 'PF:past', '-SPEC:V', '-COMP:T', '-COMP:ADV', 'PHI:DET:_', '-SPEC:iR', '-SPEC:P', 'COMP:D', '-VAL', '-SPEC:iWH', '-SPEC:*', '-SPEC:T/fin', 'P', '-float', '-COMP:T/fin', 'adjoinable', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:C/fin', '-COMP:A'}
Pariisia        ['LANG:FI']
Pariisi-        {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', '-SPEC:R', 'COMP:R', '-SPEC:ADV', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', 'PF:Pariisi', '-SPEC:uWH', 'SPEC:A', '-COMP:A', '-COMP:C/fin', '-COMP:AUX', 'LF:Paris', '-COMP:WH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'LF:Pekka', '-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', '-SPEC:R', 'COMP:R', '-SPEC:ADV', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'PF:Pekka', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SEM:directional', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'-COMP:N', 'CLASS:TR', '-SPEC:FORCE', 'ARG', 'COMP:P', '!COMP:*', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:P', '-COMP:V', 'COMP:D', '-COMP:v', '-VAL', 'PF:pelkaa', 'SPEC:P', 'LF:fear', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
persuades       ['LANG:EN']
persuade-       {'PF:persuade', 'PHI:GEN:_', 'LF:persuade', '-COMP:N', '-SPEC:FORCE', 'SEM:external', 'ARG', 'COMP:P', 'COMP:TO/inf', '!COMP:*', 'V', 'PHI:NUM:_', 'LANG:EN', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', 'SPEC:P', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
peruuntui       ['LANG:FI']
peruuntu-       {'PF:peruuntui', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LF:cancelled', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', '-SPEC:T/fin', 'SPEC:D', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', 'SPEC:P', 'ASP'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'-COMP:N', 'CLASS:TR', '-SPEC:FORCE', 'ARG', 'COMP:P', '!COMP:*', 'PF:pese_asp', 'V', 'ASP:BOUNDED', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:P', '-COMP:V', 'COMP:D', '-COMP:v', '-VAL', 'LF:wash', 'SPEC:P', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
pese-           {'-COMP:N', 'CLASS:TR', '-SPEC:FORCE', 'ARG', 'COMP:P', '!COMP:*', 'V', 'PF:pese', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:P', '-COMP:V', 'COMP:D', '-COMP:v', '-VAL', 'LF:wash', 'SPEC:P', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
petardi         {'PF:petardi', '-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', 'COMP:R', '-SPEC:ADV', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', 'LANG:IT', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SPEC:uWH', 'SPEC:A', 'LF:firecrackers', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
pieni           ['LANG:FI']
pieni-          {'0', '2SPEC', 'LANG:FI', 'SPEC:D', 'LF:small', 'PF:pieni-'}
poikien         ['LANG:FI']
poika-          {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', '-SPEC:R', 'COMP:R', '-SPEC:ADV', 'COMP:C', 'N', '-SPEC:V', 'PF:poika', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SPEC:T/fin', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', 'LF:boy'}
puhelinta       ['LANG:FI']
puhelin-        {'0', 'PF:puhelin', '2SPEC', 'SPEC:D', 'LANG:FI', 'LF:phone'}
punainen        ['LANG:FI']
puna-           {'0', 'LF:red', '2SPEC', 'SPEC:D', 'PF:puna-', 'LANG:FI'}
presupposto     {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', 'COMP:R', '-SPEC:ADV', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', 'LANG:IT', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', 'LF:presupposition', '-COMP:A', 'PF:presupposto', '-SPEC:INF', '-COMP:WH', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
primary         {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', 'LF:nurse', 'COMP:R', '-SPEC:ADV', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', 'LANG:IT', '-SPEC:P', '-COMP:V', 'PF:primary', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
promises        ['LANG:EN']
promise-        {'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'V', 'PHI:NUM:_', 'LANG:EN', 'PHI:DET:_', 'SEM:internal', 'SPEC:TO/inf', '-COMP:V', 'COMP:D', '-COMP:v', '-VAL', 'PF:promise', 'SPEC:D', 'SPEC:P', 'LF:promise', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
problem         {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', 'COMP:R', '-SPEC:ADV', 'LANG:EN', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', 'LF:problem', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', 'PF:problem', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
pyytaa          ['LANG:FI']
pyyta-          {'-COMP:N', 'CLASS:TR', '-SPEC:FORCE', 'SEM:external', 'ARG', 'COMP:P', '!COMP:*', 'V', 'PHI:NUM:_', 'PF:pyyda', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:P', '-COMP:V', 'COMP:D', '-COMP:v', '-VAL', 'SPEC:P', 'LF:ask', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'ARG', 'CLASS:INTR', 'V', 'PHI:NUM:_', 'LANG:EN', 'PHI:DET:_', 'PF:race', '-COMP:MA/inf', 'SPEC:TO/inf', '-COMP:V', 'LAMG:EN', '-COMP:v', '-VAL', 'SPEC:D', 'SPEC:P', '-COMP:T/fin', '-COMP:D', 'ASP', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', 'LF:race'}
raukesi         ['LANG:FI']
raukea-         {'-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'V', 'PHI:NUM:_', 'LF:terminate', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', 'SPEC:P', 'SPEC:ADV', 'LANG:FI', 'PF:raukea', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
red             ['LANG:EN']
red-            {'0', '2SPEC', 'LF:red', 'LANG:EN', 'SPEC:D', 'PF:red'}
saavuttaa       ['LANG:FI']
saavutta-       {'PF:saavutta-', '-COMP:N', 'CLASS:TR', '-SPEC:FORCE', 'ARG', 'COMP:P', '!COMP:*', 'ASP:BOUNDED', 'V', 'PHI:NUM:_', '!COMP:D', 'PHI:DET:_', 'LF:reach', 'SPEC:TO/inf', '-COMP:P', 'COMP:D', '-COMP:V', '-COMP:v', '-VAL', 'SPEC:P', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'-COMP:N', 'CLASS:TR', '-SPEC:FORCE', 'ARG', 'COMP:P', '!COMP:*', 'V', 'PHI:NUM:_', 'COMP:FORCE', 'PHI:DET:_', 'LF:say', 'COMP:VA/inf', 'SPEC:TO/inf', '-COMP:P', '-COMP:V', 'COMP:D', '-COMP:v', '-VAL', 'PF:sano-', 'SPEC:D', 'SPEC:P', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
said            ['LANG:EN']
say'            {'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', '!COMP:FORCE', 'COMP:P', 'V', 'PHI:NUM:_', 'LANG:EN', 'PF:say', 'PHI:DET:_', 'LF:say', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', '-SPEC:T/fin', 'SPEC:D', 'SPEC:ADV', 'PHI:PER:_', 'SPEC:P', 'ASP'}
say-            {'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', '!COMP:FORCE', 'COMP:P', 'V', 'PHI:NUM:_', 'LANG:EN', 'PF:say', 'PHI:DET:_', 'LF:say', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', '-SPEC:T/fin', 'SPEC:D', 'SPEC:ADV', 'PHI:PER:_', 'SPEC:P', 'ASP'}
sala            ['LANG:IT']
sala-           {'-COMP:N', '-SPEC:FORCE', 'COMP:P', 'LF:room', '-SPEC:N', 'COMP:R', '-SPEC:ADV', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', 'LANG:IT', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SPEC:uWH', 'SPEC:A', 'PF:sala', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
scoppiati       ['LANG:IT']
scoppia-        {'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'PF:scoppia', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:IT', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', 'SPEC:P', 'LF:explode', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
sentenza        {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', 'PF:sentenza', 'COMP:R', '-SPEC:ADV', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', 'LANG:IT', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', 'LF:sentence', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
Seine           ['LANG:EN']
Seine-          {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', 'COMP:R', '-SPEC:ADV', 'LANG:EN', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SPEC:uWH', 'SPEC:A', 'LF:Seine', 'PF:Seine', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
sembrano        ['LANG:IT']
sembra-         {'-ARG', 'LF:seem', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'V', 'PF:sembra', 'LANG:EN', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '!COMP:ARE/inf', '-VAL', '-SPEC:T/fin', 'SPEC:D', '-COMP:D', 'SPEC:ADV', '-ASP', 'SPEC:P'}
sleeps          ['LANG:EN']
sleep           {'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'CLASS:INTR', 'V', 'LF:sleep', 'PHI:NUM:_', 'LANG:EN', 'PHI:DET:_', '-COMP:MA/inf', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', 'SPEC:D', 'SPEC:P', '-COMP:D', 'SPEC:ADV', 'PF:sleep', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
sleep-          {'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'CLASS:INTR', 'V', 'LF:sleep', 'PHI:NUM:_', 'LANG:EN', 'PHI:DET:_', '-COMP:MA/inf', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', 'SPEC:D', 'SPEC:P', '-COMP:D', 'SPEC:ADV', 'PF:sleep', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
solution        {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', 'COMP:R', '-SPEC:ADV', 'LANG:EN', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', '-SPEC:P', 'LF:solution', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', 'PF:solution', '-COMP:V', '-COMP:v', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'PF:sopimus', '-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', '-SPEC:R', 'COMP:R', '-SPEC:ADV', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', 'LF:agreement', '-SPEC:uWH', 'SPEC:A', '-SPEC:INF', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '!COMP:A/inf', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
spinge          ['LANG:IT']
spinge-         {'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'V', 'PHI:NUM:_', '!COMP:D', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:V', 'LANG:IT', '-COMP:P', '-COMP:v', '-VAL', 'SPEC:P', 'PF:spinge', 'SPEC:ADV', 'LF:push', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
ssa             {'PHI:PER:_', 'COMP:n/MA', '-SPEC:C', '-SPEC:FORCE', 'ARG', '-COMP:N', '-SPEC:N', '-SPEC:v', '-COMP:uWH', '!COMP:*', 'PHI:NUM:_', 'SPEC:*', '-SPEC:ADV', '-SPEC:V', '-COMP:T', '-COMP:ADV', '-SPEC:Neg/fin', 'PHI:DET:_', '-SPEC:iR', '-SPEC:P', 'COMP:D', 'PF:ssa', '-VAL', 'LF:in', '-SPEC:iWH', '-SPEC:T/fin', 'P', '-COMP:T/fin', 'adjoinable', '-SPEC:INF', 'TAIL:V', 'LANG:FI', '-SPEC:C/fin', '-COMP:A'}
stanno          ['LANG:IT']
sta-            {'PHI:PER:_', 'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'V', 'PHI:NUM:_', 'LANG:EN', 'PHI:DET:_', 'SEM:internal', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', 'SPEC:D', 'SPEC:P', '-ASP', 'SPEC:ADV', 'COMP:PRG', 'LF:stay', 'PF:sta', '-SPEC:T/fin'}
sti             {'PF:sti', '-ARG', '-SPEC:FORCE', 'TAIL:T', '-SPEC:N', '!COMP:*', 'ADV', 'adjoinable', 'SPEC:*', '-SPEC:Neg/fin', 'LANG:FI', 'LF:by', '-SPEC:T/fin'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', '-SPEC:R', 'COMP:R', 'LF:socks', '-SPEC:ADV', 'COMP:C', '-SPEC:C/fin', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', 'LANG:FI', 'PF:sukka-', '-SPEC:T/fin'}
surprised       ['LANG:EN']
surprise-       {'LF:surprise', 'PHI:GEN:_', '-COMP:N', 'CLASS:TR', '-SPEC:FORCE', 'ARG', 'COMP:P', '!COMP:*', 'V', 'PHI:NUM:_', 'LANG:EN', 'PHI:DET:_', 'PF:surprise', 'SPEC:TO/inf', '-COMP:P', 'COMP:D', '-COMP:V', '-COMP:v', '-VAL', 'SPEC:P', '-COMP:T/fin', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
talo            {'-COMP:N', '-SPEC:FORCE', 'COMP:P', 'LF:house', '-SPEC:N', '-SPEC:R', 'COMP:R', 'PF:talo', '-SPEC:ADV', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
tama            ['LANG:EN']
tama-           {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', '-SPEC:R', 'COMP:R', '-SPEC:ADV', 'COMP:C', 'N', 'PF:tama', '-SPEC:V', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', 'PHI', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', 'LF:this', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'PHI:PER:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'V', 'SPEC:*', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:V', 'MODAL', '-COMP:v', '-VAL', 'LF:must', 'SPEC:P', 'PF:taytyy', 'SPEC:ADV', '!COMP:A/inf', 'LANG:FI', '-ASP', '-SPEC:T/fin', 'FIN'}
teki            ['LANG:FI']
teke-           {'-COMP:N', 'CLASS:TR', '-SPEC:FORCE', 'ARG', 'COMP:P', 'LF:make', '!COMP:*', 'ASP:BOUNDED', 'V', 'PF:teke', 'PHI:NUM:_', '!COMP:D', 'PHI:DET:_', '-COMP:A/inf', 'SPEC:TO/inf', '-COMP:P', '-COMP:V', 'COMP:D', '-COMP:v', '-VAL', 'SPEC:P', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
that            {'-ARG', '-VAL', '-SPEC:*', 'LF:that', 'PF:that', 'FORCE', '!COMP:*', '!PROBE:FIN', 'COMP:T/fin', 'LANG:EN', 'COMP:C/fin', 'FIN'}
the             {'-ARG', '!PROBE:N', '-SPEC:C', '-SPEC:MA/lla', '!COMP:*', 'LANG:EN', '-SPEC:V', 'PHI:DEF:DEF', '-COMP:uR', 'OP', '-COMP:P', '-SPEC:P', 'D', '-COMP:D', '-COMP:T/fin', 'COMP:N', 'adjoinable', 'LF:the', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:T/fin', 'PF:the'}
to              {'ARG', 'PF:to', '-SPEC:v', '-COMP:uWH', 'PHI:NUM:_', '-SPEC:ADV', '-SPEC:V', '-COMP:ADV', '-SPEC:iR', 'COMP:D', 'P', '-float', '-SPEC:INF', '-SPEC:Neg/fin', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:C', '-SPEC:FORCE', '-COMP:N', '+SEM:directional', '-SPEC:N', '!COMP:*', 'LANG:EN', '-COMP:T', 'PHI:DET:_', '-SPEC:P', '-VAL', '-SPEC:iWH', '-SPEC:*', '-SPEC:T/fin', '-COMP:T/fin', 'adjoinable', 'LF:to', 'TAIL:V', '-SPEC:C/fin', '-COMP:A'}
to_inf          {'INF', '?ARG', '-SPEC:v', 'TO/inf', '!COMP:*', 'LF:TO/inf', 'LANG:EN', '-SPEC:V', 'COMP:V', 'PF:TO/inf', '-VAL', '-COMP:T/fin', 'adjoinable', '-COMP:C/fin', 'COMP:v', '-SPEC:T/fin', '-COMP:FORCE'}
towards         {'LF:towards', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:C', '-SPEC:FORCE', 'ARG', '-COMP:N', '-SPEC:N', '-SPEC:v', '-COMP:uWH', '!COMP:*', 'PHI:NUM:_', '-SPEC:ADV', 'LANG:EN', '-SPEC:V', '-COMP:T', '-COMP:ADV', '-SPEC:Neg/fin', 'PHI:DET:_', '-SPEC:iR', '-SPEC:P', 'COMP:D', 'PF:towards', '-VAL', '-SPEC:iWH', '-SPEC:*', '-SPEC:T/fin', 'P', '-float', '-COMP:T/fin', 'adjoinable', '-SPEC:INF', 'TAIL:V', '-SPEC:C/fin', '-COMP:A'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'-COMP:N', 'CLASS:TR', '-SPEC:FORCE', 'ARG', 'COMP:P', '!COMP:*', 'V', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:P', '-COMP:V', 'COMP:D', '-COMP:v', '-VAL', 'SPEC:P', 'PF:tonaise', 'LF:nudge', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
tta             {'PHI:PER:_', 'COMP:n/MA', '-SPEC:C', '-SPEC:FORCE', 'ARG', '-COMP:N', '-SPEC:N', '-SPEC:v', '-COMP:uWH', 'ADV', '!COMP:*', 'PF:tta', 'SPEC:*', 'PHI:NUM:_', '-SPEC:ADV', '-SPEC:V', '-COMP:T', '-COMP:ADV', 'PHI:DET:_', '-SPEC:iR', '-SPEC:P', 'COMP:D', '-VAL', '-SPEC:iWH', '-SPEC:T/fin', 'P', '-COMP:T/fin', 'LF:without', 'adjoinable', '-SPEC:INF', '-SPEC:Neg/fin', 'LANG:FI', '-SPEC:C/fin', '-COMP:A'}
tries           ['LANG:EN']
try-            {'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', '!COMP:-ARG', 'V', 'PHI:NUM:_', 'PF:try', 'LANG:EN', 'PHI:DET:_', 'SEM:internal', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', 'SPEC:D', 'SPEC:P', '!COMP:TO/inf', 'SPEC:ADV', 'LF:try', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
verifiche       {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', 'COMP:R', 'LF:verification', '-SPEC:ADV', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', 'LANG:IT', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', 'PF:verifiche', '-COMP:v', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'CLASS:INTR', 'V', 'PHI:NUM:_', 'LF:flow', 'PHI:DET:_', '!COMP:P', 'PF:virtaa', 'SPEC:TO/inf', '-COMP:MA/inf', '-COMP:V', '-COMP:v', '-VAL', 'SPEC:D', 'SPEC:P', '-COMP:D', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', '!COMP:*', 'V', 'PHI:NUM:_', 'LANG:EN', 'LF:want', 'PF:volu', 'PHI:DET:_', 'SEM:internal', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', '-SPEC:*', 'SPEC:P', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'SEM:achievement', 'PHI:GEN:_', '-COMP:N', 'CLASS:TR', '-SPEC:FORCE', 'ARG', 'COMP:P', '!COMP:*', 'ASP:BOUNDED', 'V', 'PHI:NUM:_', 'LANG:EN', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:P', '-COMP:V', 'COMP:D', '-COMP:v', '-VAL', 'PF:voitta', 'SPEC:P', 'LF:win', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
wants           ['LANG:EN']
want-           {'PHI:GEN:_', '-COMP:N', 'CLASS:TR', '-SPEC:FORCE', 'ARG', 'COMP:P', 'COMP:TO/inf', '-SPEC:TO/inf', '!COMP:*', 'V', 'PHI:NUM:_', 'LANG:EN', 'PF:want', 'LF:want', 'PHI:DET:_', '-COMP:P', '-COMP:V', 'COMP:D', '-COMP:v', '-VAL', 'SPEC:P', 'SPEC:ADV', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
what            ['LANG:EN']
what-           {'-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', 'LF:what', '-COMP:WH', '-SPEC:INF', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', 'PF:what', 'COMP:C', 'LANG:EN', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
which           {'-ARG', '!PROBE:N', 'LF:which', 'PF:which', '-SPEC:C', '-SPEC:MA/lla', '!COMP:*', 'LANG:EN', 'OP:WH', '-SPEC:V', '-COMP:uR', 'OP', '-COMP:P', '-SPEC:P', 'D', '-COMP:D', '-COMP:T/fin', 'COMP:N', 'adjoinable', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:T/fin'}
who             ['LANG:EN']
who-            {'-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'LF:who', 'SPEC:A', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', 'COMP:C', 'LANG:EN', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', 'PF:who', '-COMP:A', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
whether         {'-ARG', 'PF:whether', '!COMP:*', 'COMP:T/fin', 'OP:Q', 'LANG:EN', 'OP:WH', 'COMP:C/fin', 'Q', 'OP', 'LF:whether', '-VAL', '-SPEC:*', 'FORCE', '!PROBE:FIN', 'FIN'}
yrittaa         ['LANG:FI']
yritta-         {'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', '!COMP:-ARG', 'V', 'PHI:NUM:_', 'LANG:EN', 'PHI:DET:_', 'SEM:internal', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', 'SPEC:D', 'PF:yritta', 'SPEC:P', 'SPEC:ADV', 'LF:try', '!COMP:A/inf', 'PHI:PER:_', '-SPEC:T/fin', 'ASP'}
mina            ['LANG:EN']
mina-           {'-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', 'PF:mina', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', '-SPEC:R', 'COMP:C', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', 'LANG:FI', '-SPEC:C/fin', 'LF:I', '-SPEC:T/fin'}
sina            ['LANG:EN']
sina-           {'-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', '-SPEC:R', 'PF:sina', 'COMP:C', 'LF:you', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
han             ['LANG:EN']
han-            {'-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'LF:s/he', 'SPEC:A', '-COMP:AUX', 'PF:han', '-COMP:WH', '-SPEC:INF', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', '-SPEC:R', 'COMP:C', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'COMP:T/prt', 'LF:we', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', '-SPEC:R', 'COMP:C', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', 'PF:me', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
te              ['LANG:EN']
te-             {'-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'PF:te', 'SPEC:A', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', '-SPEC:R', 'COMP:C', 'LF:you', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', 'PF:he', 'LF:they', '-COMP:WH', '-SPEC:INF', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', '-SPEC:R', 'COMP:C', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', 'LANG:FI', '-SPEC:C/fin', '-SPEC:T/fin'}
se              {'-ARG', '!PROBE:N', '-SPEC:C', '-SPEC:MA/lla', '!COMP:*', '-SPEC:V', '-COMP:uR', 'OP', '-COMP:P', '-SPEC:P', 'D', 'PF:se', '-COMP:D', '-COMP:T/fin', 'COMP:N', 'adjoinable', 'LF:the/that', '-SPEC:INF', '-SPEC:Neg/fin', 'LANG:FI', '-SPEC:T/fin'}
sen             {'-ARG', '!PROBE:N', '-SPEC:C', '-SPEC:MA/lla', 'TAIL:*POL:NEG', '!COMP:*', 'PF:sen', '-SPEC:V', '-SPEC:Neg/fin', '-COMP:uR', 'OP', '-COMP:P', '-SPEC:P', 'D', 'TAIL:PHI', '-COMP:D', '-COMP:T/fin', 'COMP:N', 'adjoinable', 'LF:the/that', '-SPEC:INF', 'TAIL:ASP', 'LANG:FI', '-SPEC:T/fin'}
I               ['LANG:EN']
I-              {'-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', 'COMP:C', 'LANG:EN', 'COMP:R/D', 'PF:I', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:R', '-SPEC:C/fin', 'LF:I', '-SPEC:T/fin'}
you             ['LANG:EN']
you-            {'-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', 'COMP:C', 'LANG:EN', 'LF:you', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', 'PF:you', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
he              ['LANG:EN']
he-             {'-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', 'PF:he', 'LF:he', '-COMP:WH', '-SPEC:INF', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', 'COMP:C', 'LANG:EN', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
she             ['LANG:EN']
she-            {'-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', 'PF:she', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', 'LF:she', 'COMP:C', 'LANG:EN', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
we              ['LANG:EN']
we-             {'-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'COMP:T/prt', 'LF:we', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', 'COMP:C', 'LANG:EN', '-SPEC:C/fin', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:R', 'PF:we', '-SPEC:T/fin'}
you_pl          ['LANG:EN']
you_pl-         {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', 'LF:you_pl', 'COMP:R', '-SPEC:ADV', 'LANG:EN', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'PF:you_pl', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', 'PHI', '-SPEC:uWH', 'SPEC:A', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
they            ['LANG:EN']
they-           {'-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', 'PF:they', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', 'LF:they', '-COMP:WH', '-SPEC:INF', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', 'COMP:C', 'LANG:EN', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
it              ['LANG:EN']
it-             {'-ARG', '!PROBE:N', 'PF:it', '-SPEC:C', '-SPEC:MA/lla', '!COMP:*', 'LANG:EN', '-SPEC:V', '-COMP:uR', 'OP', '-COMP:P', '-SPEC:P', 'D', '-COMP:D', '-COMP:T/fin', 'COMP:N', 'adjoinable', 'LF:it/that', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:T/fin'}
io              ['LANG:EN']
io-             {'-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'LANG:IT', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', 'PF:io', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', 'COMP:C', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:R', '-SPEC:C/fin', 'LF:I', '-SPEC:T/fin'}
tu              ['LANG:EN']
tu-             {'-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'PF:tu', 'LANG:IT', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', 'COMP:C', 'LF:you', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
lui             ['LANG:EN']
lui-            {'-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'LANG:IT', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', 'LF:he', '-COMP:WH', '-SPEC:INF', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', 'COMP:C', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'PF:lui', '-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
lei             ['LANG:EN']
lei-            {'PF:lei', '-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'LANG:IT', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', 'LF:she', 'COMP:C', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
noi             ['LANG:EN']
noi-            {'-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'LANG:IT', 'COMP:T/prt', 'LF:we', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', 'PF:noi', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', 'COMP:C', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
voi             ['LANG:EN']
voi-            {'-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'LANG:IT', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', 'PF:voi', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', 'LF:you_pl', 'COMP:C', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
loro            ['LANG:EN']
loro-           {'-COMP:*', 'PF:loro', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'LANG:IT', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', 'LF:they', '-COMP:WH', '-SPEC:INF', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', 'COMP:C', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
mi              ['LANG:EN']
mi-             {'CL', '-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'LANG:IT', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', 'LF:me', 'PF:mi(cl)', 'COMP:C', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
la              ['LANG:EN']
la-             {'CL', '-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'LANG:IT', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', 'PF:la(cl)', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', 'COMP:C', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', 'LF:her', '-COMP:C/fin', '-COMP:A', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
lo              ['LANG:EN']
lo-             {'LF:him', 'CL', '-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'LANG:IT', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', 'PF:lo(cl)', 'COMP:C', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
si              ['LANG:EN']
si-             {'LF:3sg', '-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'LANG:IT', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', 'CAL:CL', 'PF:si(cl)', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', 'COMP:C', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-COMP:*', 'COMP:R', '-SPEC:ADV', 'N', '-SPEC:V', 'LANG:IT', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', 'PF:ci', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PHI_N', '-SPEC:N', 'COMP:C', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', '-COMP:v', '-COMP:C/fin', '-COMP:A', 'LF:there', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
[-n]            {'PHI:NUM:SG', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'LANG:FI', 'inflectional'}
[-t]            {'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI', 'PHI:DET:DEF', 'LANG:FI', 'inflectional'}
[-V]            {'PHI:NUM:SG', 'PHI', 'inflectional', 'LANG:FI', 'PHI:PER:3'}
[-mme]          {'PHI:PER:1', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'LANG:FI', 'inflectional', 'PHI:NUM:PL'}
[-mme]          {'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'LANG:FI', 'inflectional', 'PHI:NUM:PL'}
[-tte]          {'PHI:HUM:HUM', 'PHI:PER:2', 'PHI', 'PHI:DET:DEF', 'LANG:FI', 'inflectional', 'PHI:NUM:PL'}
[-vat]          {'PHI', 'inflectional', 'LANG:FI', 'PHI:PER:3', 'PHI:NUM:PL'}
[-ni]           {'PHI:NUM:SG', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'LANG:FI', 'inflectional'}
[-si]           {'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI', 'PHI:DET:DEF', 'LANG:FI', 'inflectional'}
[-nsa]          {'PHI:NUM:SG', 'PHI', 'inflectional', 'LANG:FI', 'PHI:PER:3'}
[-an]           {'PHI:NUM:SG', 'PHI:DET:DET', 'PHI', 'inflectional', 'LANG:FI', 'PHI:PER:3'}
[-nne]          {'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:DET:DEF', 'LANG:FI', 'inflectional', 'PHI:NUM:PL'}
[-s]            {'PHI:NUM:SG', 'LANG:EN', 'PHI:GEN:M', 'PHI', 'inflectional', 'PHI:GEN:F', 'PHI:PER:3'}
[-0]            {'PHI:NUM:SG', 'PHI:GEN:N', 'PHI', 'inflectional', 'PHI:NUM:PL', 'PHI:PER:3', 'PHI:PER:1', 'PHI:PER:2', 'LANG:EN', 'PHI:DET:DEF'}
[-o]            {'PHI:NUM:SG', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'inflectional', 'LANG:IT'}
[-i]            {'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI', 'PHI:DET:DEF', 'inflectional', 'LANG:IT'}
[-a]            {'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI', 'inflectional', 'PHI:PER:3', 'LANG:IT'}
[-e]            {'PHI:NUM:SG', 'PHI:DET:DEF', 'PHI', 'inflectional', 'PHI:PER:3', 'LANG:IT'}
[-iamo]         {'PHI:PER:1', 'PHI:HUM:HUM', 'PHI', 'PHI:DET:DEF', 'inflectional', 'PHI:NUM:PL', 'LANG:IT'}
[-te]           {'PHI:HUM:HUM', 'PHI:PER:2', 'PHI', 'PHI:DET:DEF', 'inflectional', 'PHI:NUM:PL', 'LANG:IT'}
[-no]           {'PHI:DET:DEF', 'PHI', 'inflectional', 'PHI:PER:3', 'PHI:NUM:PL', 'LANG:IT'}
[-nom]          {'NOM', 'adjoinable', 'LANG:EN', 'TAIL:FIN,ARG,VAL', 'inflectional'}
[-par]          {'adjoinable', 'TAIL:ARG,-VAL', 'LANG:FI', 'inflectional', 'PAR'}
[-gen]          {'LANG:EN', 'GEN', '-float', 'inflectional', 'TAIL:INF,ARG'}
gen             {'LANG:EN', 'GEN', '-float', 'inflectional', 'TAIL:INF,ARG'}
[-n_acc]        {'adjoinable', 'n-ACC', 'TAIL:ARG,ASP:BOUNDED', 'inflectional', 'LANG:FI', 'TAIL:*POL:NEG', 'TAIL:PHI'}
[-t_acc]        {'adjoinable', 'LANG:FI', 't-ACC', 'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG'}
[-0_acc]        {'TAIL:*PHI', 'adjoinable', 'TAIL:ARG,ASP:BOUNDED', 'inflectional', 'LANG:FI', 'TAIL:*POL:NEG', '0_ACC'}
asp             {'ASP:BOUNDED', 'LANG:EN', 'inflectional'}
a'              {'LANG:X', 'LF:A', 'PF:a', 'a'}
b'              {'b', 'LF:B', 'LANG:X', 'PF:b'}
b''             {'b', 'LANG:EN', 'LF:B', 'PF:b', '-COMP:c'}
c''             {'PF:c', 'LANG:EN', 'SPEC:a', 'LF:C', 'c'}
c'              {'PF:c', 'LF:C', 'LANG:X', 'c'}
d'              {'d', 'LANG:', 'PF:d', 'LF:D'}
a''             ['LANG:EN']
x'              {'LANG:X', 'x', 'PF:x', 'LF:X'}
y'              {'PF:y', 'y', 'LANG:X', 'LF:Y'}
z'              {'LF:Z', 'LANG:X', 'PF:x', 'z'}
John'           {'PF:John', 'LANG:X', 'LF:John', "N'"}
admires'        {"V'", 'PF:admires', 'LANG:X', 'LF:admires'}
admires''       {'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'ARG', 'COMP:P', 'PF:admires', 'V', 'PHI:NUM:_', 'LANG:EN', 'PHI:DET:_', 'LF:admires', 'SPEC:TO/inf', '-COMP:V', '-COMP:v', '-VAL', '-SPEC:T/fin', 'SPEC:D', 'SPEC:ADV', 'PHI:PER:_', 'SPEC:P', 'ASP'}
Mary'           {'LF:mary', 'LANG:X', "N'", 'PF:Mary'}
T/fin           {'T/fin', '-COMP:INF', 'PHI:GEN:_', '-SPEC:C', 'ARG', '!PROBE:V', '-SPEC:N', '-SPEC:v', 'SPEC:FORCE', 'T', '!COMP:*', '-SPEC:TO/inf', 'PHI:NUM:_', 'SPEC:*', 'LANG:EN', 'VAL', '-SPEC:V', 'PHI:DET:_', 'SPEC:TO/inf', '!SPEC:*', 'COMP:V', 'COMP:T/prt', 'LF:T', 'SPEC:D', '-COMP:T/fin', 'SPEC:C/fin', 'PF:T', 'COMP:v', '-SPEC:Neg', 'PHI:PER:_', '-SPEC:T/fin', 'FIN'}
v               {'PHI:PER:_', 'PHI:GEN:_', '-VAL', 'PF:v', 'ARG', 'SPEC:D', '!PROBE:V', '-SPEC:N', '!COMP:*', 'ASP', 'PHI:NUM:_', 'LANG:EN', 'LF:v', 'PHI:DET:_', 'v', 'COMP:V'}
C/fin           {'-ARG', '-SPEC:N', 'COMP:Neg/fin', '!COMP:*', 'SPEC:*', 'COMP:T/fin', 'LANG:EN', 'VAL', 'PF:C', 'C', '-COMP:C/fin', '-COMP:T/prt', '!PROBE:FIN', 'C/fin', 'LF:C/fin', '-SPEC:C/fin', '-SPEC:T/fin', 'FIN'}
T               {'PHI:GEN:_', '-SPEC:FORCE', 'ARG', '!PROBE:V', '-SPEC:N', 'T', '!COMP:*', 'PHI:NUM:_', 'SPEC:*', 'LANG:EN', 'VAL', '-SPEC:V', 'PHI:DET:_', 'COMP:V', 'COMP:T/prt', 'LF:T', 'SPEC:D', 'PF:T', '-COMP:NEG', 'COMP:v', 'PHI:PER:_', '-SPEC:T/fin', 'FIN'}
T/prt           {'PHI:PER:_', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', '!PROBE:V', '-SPEC:N', 'T', '!COMP:*', 'PHI:NUM:_', 'SPEC:*', 'LANG:EN', 'VAL', 'PF:T/prt', '-SPEC:V', 'PHI:DET:_', 'COMP:V', 'COMP:T/prt', 'LF:T/prt', 'COMP:D', 'SPEC:D', '-COMP:NEG', 'COMP:v', '-SPEC:C/fin', 'T/prt', '-SPEC:T/fin', 'FIN'}
a0              {'-SPEC:A', 'PF:A', '-adjoinable', '-SPEC:D', 'COMP:0', 'TAIL:D', 'A', 'LANG:EN', 'LF:A'}
n               {'INF', 'ARG', 'COMP:R', 'PHI:NUM:_', 'n', '-SPEC:ADV', 'N', '-SPEC:V', '!SPEC:D', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:uWH', 'SPEC:A', '-COMP:AUX', '-COMP:WH', '-SPEC:INF', 'COMP:v', 'PHI:PER:_', 'PHI:GEN:_', '-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', 'COMP:0', 'LF:n', '!COMP:*', 'SPEC:*', 'COMP:C', 'LANG:EN', 'VAL', 'COMP:R/D', 'PHI:DET:_', 'COMP:uR', '-SPEC:P', '-COMP:V', '!SPEC:*', 'COMP:V', '-COMP:v', '-COMP:C/fin', 'PF:n', '-COMP:A', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
impass          {'PHI:PER:_', 'PHI:GEN:_', '-VAL', 'ARG', 'v', 'SPEC:D', '!PROBE:V', 'PF:impass', '-SPEC:N', '!COMP:*', 'ASP', 'PHI:NUM:_', 'LANG:EN', 'PHI:DET:_', 'LF:impass', 'COMP:V'}
cau             {'PHI:PER:_', 'PF:Cau', 'PHI:GEN:_', '-VAL', 'ARG', 'LF:v/Cause', 'SPEC:D', '!PROBE:V', '-SPEC:N', '!COMP:*', 'ASP', 'PHI:NUM:_', 'LANG:EN', 'PHI:DET:_', 'v', 'COMP:V'}
INF             {'INF', 'PF:INF', '-SPEC:V', 'COMP:V', '-COMP:T/fin', '!COMP:*', '-COMP:C/fin', 'LF:INF', 'LANG:EN', 'COMP:v', '-SPEC:T/fin', '-COMP:FORCE'}
prtcpl          {'PHI:PER:_', 'INF', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', '!PROBE:V', '-SPEC:N', 'T', '!COMP:*', 'PHI:NUM:_', 'SPEC:*', 'LANG:EN', 'VAL', 'PF:T/prt', '-SPEC:V', '-COMP:FORCE', 'PHI:DET:_', 'COMP:V', 'COMP:T/prt', 'LF:T/prt', 'COMP:D', 'SPEC:D', '-COMP:T/fin', '-COMP:C/fin', '-COMP:NEG', 'COMP:v', '-SPEC:C/fin', 'T/prt', '-SPEC:T/fin', 'FIN'}
TO/inf          {'INF', '!COMP:V', '-SPEC:v', 'TO/inf', '!COMP:*', 'LF:TO/inf', 'LANG:EN', '-SPEC:V', 'COMP:V', 'PF:TO/inf', 'COMP:v', '-VAL', '-COMP:T/fin', 'adjoinable', '-COMP:C/fin', '?ARG', '-SPEC:T/fin', '-COMP:FORCE'}
A/inf           {'INF', '?ARG', 'A/inf', '!COMP:*', 'SPEC:*', 'LANG:EN', '-SPEC:V', '-SPEC:Neg/fin', 'COMP:V', 'LF:A/inf', 'PF:A/inf', '-COMP:T/fin', '-COMP:C/fin', '?VAL', 'COMP:v', '-SPEC:T/fin', '-COMP:FORCE'}
ARE/inf         {'INF', 'LF:ARE/inf', '?ARG', 'PF:are', '-adjoinable', '!COMP:*', 'SPEC:*', 'LANG:EN', 'VAL', '-SPEC:V', 'COMP:V', 'ARE/inf', '-COMP:T/fin', '-COMP:C/fin', 'COMP:v', '-SPEC:T/fin', '-COMP:FORCE'}
ESSA/inf        {'INF', '-SPEC:FORCE', '-SPEC:N', 'ADV', '!COMP:*', 'SPEC:*', 'LANG:EN', '-SPEC:V', '-SPEC:Neg/fin', 'ESSA/inf', 'COMP:V', 'COMP:v', 'TAIL:T', 'PF:essa', '-COMP:T/fin', 'LF:while', 'adjoinable', '-COMP:C/fin', '?VAL', '?ARG', '-SPEC:T/fin', '-COMP:FORCE'}
TUA/inf         {'INF', 'PHI:GEN:_', 'LF:after', '-SPEC:FORCE', 'ARG', '-SPEC:N', 'ADV', '!COMP:*', 'PHI:NUM:_', 'SPEC:*', 'LANG:EN', 'VAL', '-SPEC:V', 'PHI:DET:_', '-SPEC:Neg/fin', '!SPEC:*', 'COMP:V', 'TAIL:T', 'PF:tua', '-COMP:T/fin', 'adjoinable', '-COMP:C/fin', 'TUA/inf', 'COMP:v', 'PHI:PER:_', '-SPEC:T/fin', '-COMP:FORCE'}
VA/inf          {'INF', 'VA/inf', 'PHI:GEN:_', 'ARG', '-SPEC:N', '!COMP:*', 'LF:VA', 'PHI:NUM:_', 'SPEC:*', 'LANG:EN', 'PF:vAn', 'VAL', '-SPEC:V', 'PHI:DET:_', 'COMP:V', '!SPEC:*', '-COMP:T/fin', '-COMP:C/fin', 'COMP:v', 'PHI:PER:_', '-SPEC:T/fin', '-COMP:FORCE'}
MA/ssa          {'PF:massa', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', '-SPEC:N', 'ADV', 'LF:in_doing', 'PHI:NUM:_', 'LANG:EN', 'PHI:DET:_', '-SPEC:Neg/fin', 'COMP:V', 'COMP:v', 'MA/ssa', '-VAL', '-SPEC:*', 'MA/inf', 'adjoinable', 'TAIL:V', 'PHI:PER:_', '-SPEC:T/fin'}
MA/tta          {'LF:without_doing', 'PF:matta', '-VAL', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'TAIL:T', '-SPEC:N', 'MA/inf', 'ADV', 'adjoinable', 'PHI:NUM:_', 'PHI:DET:_', 'LANG:EN', '-SPEC:Neg/fin', 'PHI:PER:_', '-SPEC:T/fin'}
MA/lla          {'ARG', 'ADV', 'LF:by_doing', 'PHI:NUM:_', 'COMP:v', '-SPEC:Neg/fin', 'PHI:GEN:_', '-SPEC:FORCE', '-SPEC:N', 'PF:malla', 'LANG:EN', 'PHI:DET:_', 'COMP:V', '-VAL', 'TAIL:T', 'MA/inf', 'adjoinable', 'PHI:PER:_', '-SPEC:T/fin'}
MA/inf          {'ARG', 'ADV', 'PHI:NUM:_', 'LF:to_do', 'PF:maan', 'COMP:v', '-SPEC:Neg/fin', 'PHI:GEN:_', '-SPEC:FORCE', '-SPEC:N', 'LANG:EN', 'PHI:DET:_', 'COMP:V', '-VAL', 'MA/inf', 'adjoinable', 'TAIL:V', 'PHI:PER:_', '-SPEC:T/fin'}
E/inf           {'-ARG', '-VAL', '-SPEC:FORCE', 'TAIL:T', '-SPEC:N', 'PF:en', 'ADV', 'adjoinable', 'SPEC:*', '-SPEC:Neg/fin', 'LANG:FI', 'LF:by', '-SPEC:T/fin'}
BE-             {'-ARG', '-COMP:N', '-SPEC:FORCE', 'COMP:P', 'PF:BE', '!COMP:*', 'V', 'LANG:EN', 'SPEC:TO/inf', 'LF:BE', '-COMP:V', 'COMP:T/prt', '-COMP:v', 'COPULA', '-VAL', 'SPEC:D', 'SPEC:P', '-COMP:T/fin', 'SPEC:ADV', '-SPEC:T/fin', 'ASP'}
D               {'-ARG', '!PROBE:N', '-SPEC:C', '-SPEC:MA/lla', '!COMP:*', 'LANG:EN', '-SPEC:V', '-COMP:uR', 'OP', '-COMP:P', '-SPEC:P', 'LF:D', 'D', 'PF:D', '-COMP:D', '-COMP:T/fin', 'COMP:N', 'adjoinable', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:T/fin'}
D/rel           {'-ARG', '!PROBE:N', 'PF:D/rel', '-SPEC:C', '-SPEC:MA/lla', 'inflectional', 'LF:D/rel', '!COMP:*', 'LANG:EN', '-SPEC:V', '-COMP:uR', 'OP', '-SPEC:P', 'D/rel', 'OP:REL', 'D', 'OP:_', '-COMP:D', 'COMP:N', 'adjoinable', '-COMP:T/fin', '-COMP:C/fin', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:T/fin'}
P               {'PHI:PER:_', 'PHI:GEN:_', '-SPEC:C', '-SPEC:FORCE', 'ARG', '-COMP:N', '-SPEC:N', '-SPEC:v', '-COMP:uWH', '!COMP:*', 'PHI:NUM:_', '-SPEC:ADV', 'LANG:EN', '-SPEC:V', '-COMP:T', '-COMP:ADV', 'PHI:DET:_', '-SPEC:iR', '-SPEC:P', 'COMP:D', 'PF:P', '-VAL', '-SPEC:iWH', '-SPEC:*', '-SPEC:T/fin', 'P', '-float', '-COMP:T/fin', 'adjoinable', 'LF:P', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:C/fin', '-COMP:A'}
pro             ['LANG:EN']
pro-            {'-COMP:N', '-SPEC:FORCE', 'COMP:P', '-SPEC:N', 'COMP:R', '-SPEC:ADV', 'LANG:EN', 'COMP:C', 'N', '-SPEC:V', 'COMP:R/D', 'COMP:uR', '-SPEC:P', '-COMP:V', 'COMP:T/prt', '-COMP:VA/inf', 'COMP:D/rel', '-COMP:v', 'PHI', '-SPEC:uWH', 'SPEC:A', 'PF:(pro)', '-COMP:C/fin', '-COMP:AUX', '-COMP:A', '-COMP:WH', '-SPEC:INF', 'LF:pro', '-SPEC:R', '-SPEC:C/fin', '-SPEC:T/fin'}
cl              {'CL', 'RIGHT:PRG', 'LEFT:T/fin', 'LANG:EN', 'RIGHT:ARE/inf', 'inflectional', 'LEFT:D,CL'}
inc             {'inflectional', 'INCORPORATED', 'LANG:EN'}
sg              {'PHI:NUM:SG', 'inflectional', 'LANG:EN'}
pl              {'inflectional', 'PHI:NUM:PL', 'LANG:EN'}
1p              {'PHI:PER:1', 'inflectional', 'LANG:EN'}
2p              {'PHI:PER:2', 'inflectional', 'LANG:EN'}
3p              {'PHI:PER:3', 'inflectional', 'LANG:EN'}
def             {'PHI:DET:DEF', 'inflectional', 'LANG:EN'}
indef           {'LANG:EN', 'inflectional', 'PHI:DET:INDEF'}
hum             {'PHI:HUM:HUM', 'inflectional', 'LANG:EN'}
nonhum          {'PHI:HUM:NONHUM', 'inflectional', 'LANG:EN'}
m               {'inflectional', 'PHI:GEN:M', 'LANG:EN'}
f               {'PHI:GEN:F', 'inflectional', 'LANG:EN'}
nom             {'NOM', 'inflectional', 'TAIL:FIN,!COMP:*,VAL', 'LANG:EN'}
acc             {'TAIL:v', 'ACC', 'inflectional', 'LANG:EN'}
dat             {'TAIL:v', 'inflectional', 'DAT', 'LANG:EN'}
uC/op           {'inflectional', 'uC/op', 'LANG:EN'}
wh              {'OP:WH', 'inflectional', 'OP:_', 'LANG:EN'}
wh_             {'FORCE:OP:WH', 'LANG:EN', 'inflectional', 'OP', 'OP:_'}
top             {'OP:TOP', 'inflectional', 'LANG:EN'}
foc             {'OP:FOC', 'inflectional', 'LANG:EN'}
C/op            {'OP:C/OP', 'inflectional', 'LANG:EN'}
Q               {'OP:Q', 'LANG:EN', 'OP:WH', 'inflectional', 'OP'}
