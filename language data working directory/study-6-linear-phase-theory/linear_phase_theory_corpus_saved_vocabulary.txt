ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'adjoinable', '-COMP:ADV', 'COMP:ARE/inf', '-COMP:uWH', '-COMP:N', '-SPEC:*', '-SPEC:iR', '-SPEC:V', 'P', 'COMP:D', '-SPEC:P', '-SPEC:T/fin', 'LANG:IT', '-SPEC:ADV', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'PF:a', '-ARG', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C', '-VAL', '-SPEC:N', '-SPEC:iWH', '-COMP:T/fin', '-SPEC:v', 'LF:to'}
a_D             {'-SPEC:D', 'COMP:N', 'adjoinable', 'LANG:EN', 'LF:D', 'D', '-SPEC:V', 'PF:D', '!PROBE:N', '-SPEC:P', '-SPEC:T/fin', '-COMP:D', '-SPEC:INF', '-ARG', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C', '-SPEC:N', 'OP', '-COMP:T/fin', '-SPEC:MA/lla', '-COMP:uR'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'PHI:GEN:_', 'LANG:EN', 'ARG', '-COMP:N', 'PHI:DET:_', 'V', 'LF:admire', 'COMP:D', 'CLASS:TR', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', '-SPEC:Neg', 'PHI:NUM:_', '-COMP:V', '-COMP:P', 'ASP', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-VAL', 'SPEC:P', '-COMP:T/fin', 'PF:admire', 'SPEC:TO/inf', '-COMP:Neg'}
admire*         ['LANG:EN']
T/fin*          {'NO_DET', 'LANG:EN', "PF:T/fin'", '!SPEC:*', '-VAL', 'LF:T', 'NO_NUMBER', 'CAT:T/fin'}
v*              {'CAT:v', 'PF:v', 'NO_DET', 'LANG:EN', 'NO_NUMBER', '-VAL', 'LF:v'}
admire**        ['LANG:EN']
T/fin**         {'PHI:PER:3', 'NO_DET', 'LANG:EN', 'NO_NUMBER', '!SPEC:*', '-VAL', 'LF:T', "PF:T/fin''", 'CAT:T/fin', 'NO_PERSON'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'PHI:GEN:_', 'ARG', '-COMP:N', 'PHI:DET:_', 'V', 'LF:admire', 'COMP:D', '-SPEC:T/fin', '-COMP:v', 'LANG:IT', 'SPEC:ADV', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'PF:adora', 'SPEC:P'}
antaa           ['LANG:FI']
anta-           {'CLASS:DITR', 'ARG', '-COMP:N', 'PHI:DET:_', '-COMP:FIN', 'V', 'LF:give', 'COMP:D', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'LANG:FI', 'ASP:BOUNDED', 'SPEC:D', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-VAL', '+SEM:directional', '-COMP:T/fin', 'PF:antaa', 'SPEC:TO/inf', 'SPEC:P'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'PHI:GEN:_', 'LANG:EN', 'ARG', '-COMP:N', 'PF:ask', 'PHI:DET:_', 'V', 'COMP:D', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'SEM:internal', 'COMP:P', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'LF:ask', 'SPEC:P'}
ask-            {'PHI:GEN:_', 'LANG:EN', 'ARG', '-COMP:N', 'PF:ask', 'PHI:DET:_', 'V', 'COMP:D', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'SEM:internal', 'COMP:P', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'LF:ask', 'SPEC:P'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-COMP:ADV', 'N', '-COMP:N', 'PF:avain', '-SEM:directional', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'LANG:FI', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin', 'LF:key'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-COMP:ADV', 'N', '-COMP:N', '-SEM:directional', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'LANG:FI', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', 'LF:car', '-COMP:C/fin', 'PF:auto'}
city            {'LANG:EN', 'N', 'LF:city', '-COMP:ADV', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', 'PF:city', '-COMP:v', '-SPEC:T/fin', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
che             ['LANG:IT']
che-            {'-COMP:ADV', 'N', '-COMP:*', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', 'LF:who', 'LANG:IT', '-COMP:v', '-SPEC:ADV', '-COMP:WH', '-COMP:A', 'PF:che', '-COMP:D', '-COMP:V', 'COMP:R', 'COMP:uR', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
chiamato        ['LANG:IT']
chiamata-       {'PHI:GEN:_', 'ARG', '-COMP:N', 'LF:called', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', 'LANG:IT', 'SPEC:ADV', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', '-VAL', 'PF:chiamato', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
danno           {'LF:damage', '-COMP:ADV', 'N', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', 'LANG:IT', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', 'PF:danno', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'PHI:GEN:_', 'COMP:ARE/inf', 'ARG', '-COMP:N', 'PHI:DET:_', 'V', 'COMP:D', '-SPEC:T/fin', '-COMP:v', 'LANG:IT', 'SPEC:ADV', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:V', 'LF:detest', 'ASP', '-SPEC:FORCE', 'SEM:internal', 'COMP:P', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'PF:detest', 'SPEC:P'}
devono          ['LANG:EN']
deva-           {'PHI:GEN:_', '-ASP', 'COMP:ARE/inf', 'ARG', '-COMP:N', 'PHI:DET:_', 'V', 'LF:must', '-SPEC:T/fin', '-COMP:v', 'LANG:IT', 'SPEC:ADV', 'PHI:PER:_', 'SPEC:D', 'PHI:NUM:_', '-COMP:V', 'COMP:P', '-SPEC:FORCE', 'SEM:internal', '-VAL', 'PF:deva', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
di              {'LF:of', '-COMP:ADV', '-COMP:uWH', 'PF:di', '-COMP:N', 'ARG', '-SPEC:iR', '-SPEC:V', '-adjoinable', 'PHI:DET:_', 'P', 'COMP:D', '-SPEC:P', '-SPEC:T/fin', 'PHI:PER:_', '-SPEC:ADV', 'LANG:FI', 'PHI:NUM:_', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:Neg/fin', 'SPEC:*', '!COMP:*', '-SPEC:C', '-VAL', '-SPEC:N', '-SPEC:iWH', '-COMP:T/fin', '-SPEC:v'}
does            {'PHI:GEN:_', 'COMP:v', 'PHI:GEN:M', '-SPEC:V', 'COMP:D', 'PHI:PER:_', 'SPEC:D', '!SPEC:D', '-SPEC:FORCE', 'VAL', '-SPEC:N', 'SPEC:TO/inf', 'T', 'PHI:PER:3', 'PHI:GEN:F', 'PHI:NUM:SG', 'T/fin', '-SPEC:TO/inf', 'LANG:EN', 'LF:does', 'ARG', 'FIN', 'COMP:V', 'PHI:DET:_', '!PROBE:V', '-SPEC:T/fin', 'COMP:T/prt', '-SPEC:Neg', '-COMP:INF', 'PHI:NUM:_', '-SPEC:C/fin', 'PF:does', 'SPEC:*', '!COMP:*', '-COMP:T/fin', 'COMP:Neg', '-SPEC:v'}
does_C          ['LANG:EN']
does-           {'PHI:GEN:_', 'COMP:v', 'PHI:GEN:M', '-SPEC:V', 'COMP:D', 'PHI:PER:_', 'SPEC:D', '!SPEC:D', '-SPEC:FORCE', 'VAL', '-SPEC:N', 'SPEC:TO/inf', 'T', 'PHI:PER:3', 'PHI:GEN:F', 'PHI:NUM:SG', 'T/fin', '-SPEC:TO/inf', 'LANG:EN', 'LF:does', 'ARG', 'FIN', 'COMP:V', 'PHI:DET:_', '!PROBE:V', '-SPEC:T/fin', 'COMP:T/prt', '-SPEC:Neg', '-COMP:INF', 'PHI:NUM:_', '-SPEC:C/fin', 'PF:does', 'SPEC:*', '!COMP:*', '-COMP:T/fin', 'COMP:Neg', '-SPEC:v'}
dorme           ['LANG:IT']
dorme-          {'PHI:GEN:_', 'LANG:EN', 'ARG', '-COMP:N', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', '!SPEC:D', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', '-VAL', 'LF:sleep', 'PF:dorme', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'-SPEC:T', 'POL:NEG', 'ARG', 'FIN', '!COMP:T', 'NEG', 'PHI:DET:_', '-SPEC:T/fin', 'PHI:PER:_', 'LANG:FI', 'PF:ei', 'LF:neg', 'COMP:T/prt', '%SPEC:INF', 'PHI:NUM:_', 'Neg/fin', 'SPEC:*', 'VAL', 'SEM:internal', '!COMP:*', '!SPEC:*'}
e-              {'-SPEC:T', 'POL:NEG', 'ARG', 'FIN', '!COMP:T', 'NEG', 'PHI:DET:_', '-SPEC:T/fin', 'PHI:PER:_', 'LANG:FI', 'PF:ei', 'LF:neg', 'COMP:T/prt', '%SPEC:INF', 'PHI:NUM:_', 'Neg/fin', 'SPEC:*', 'VAL', 'SEM:internal', '!COMP:*', '!SPEC:*'}
elaa            ['LANG:FI']
ela-            {'ARG', '-COMP:N', 'PHI:DET:_', 'PF:elaa', 'V', '-SPEC:T/fin', '-COMP:v', '-COMP:D', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', 'SPEC:D', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', '-VAL', 'LF:live', 'CLASS:INTR', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
etsii           ['LANG:FI']
etsi-           {'LF:search', 'ARG', '-COMP:N', '!COMP:D', 'PHI:DET:_', 'V', 'COMP:D', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'LANG:FI', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', '-VAL', '-COMP:T/fin', 'PF:etsi', 'SPEC:TO/inf', 'SPEC:P'}
etta            {'COMP:T/fin', '-ARG', 'COMP:C/fin', '-SPEC:*', '!COMP:*', '-VAL', 'FIN', 'LF:that', '!PROBE:T/fin', 'PF:etta', 'FORCE', 'LANG:FI'}
flow'           {'PHI:GEN:_', 'LANG:EN', 'ARG', '-COMP:N', 'PF:flow', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'PHI:NUM:_', '-COMP:V', 'COMP:P', 'ASP', '-SPEC:FORCE', 'LF:flow', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
from            {'PHI:GEN:_', 'adjoinable', 'LANG:EN', '-COMP:ADV', '-COMP:uWH', 'ARG', '-COMP:N', '-SPEC:*', 'LF:from', '-SPEC:iR', '-SPEC:V', 'PHI:DET:_', 'P', 'COMP:D', '-SPEC:P', '-SPEC:T/fin', 'PHI:PER:_', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:INF', 'PF:from', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C', '-VAL', '-SPEC:N', '-SPEC:iWH', '-float', '-COMP:T/fin', 'TAIL:V,+SEM:directional', '-SPEC:v'}
gave            ['LANG:EN']
give-           {'PHI:GEN:_', 'CLASS:DITR', 'LANG:EN', 'ARG', '-COMP:N', 'PHI:DET:_', '-COMP:FIN', 'V', 'LF:give', 'COMP:D', '-SPEC:T/fin', 'PF:give', '-COMP:v', 'SPEC:ADV', 'PHI:PER:_', 'SPEC:D', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-VAL', '+SEM:directional', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'LF:Giuseppe', 'N', '-COMP:ADV', '-COMP:N', '-SEM:directional', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', 'PF:Giuseppe', 'LANG:IT', '-SPEC:ADV', '-COMP:WH', '-COMP:A', '-COMP:D', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'PF:haluaa', 'ARG', '-COMP:N', '-SPEC:*', 'PHI:DET:_', 'V', 'COMP:D', 'CLASS:TR', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'ASP:BOUNDED', 'LANG:FI', 'PHI:NUM:_', '-COMP:V', '-COMP:P', 'ASP', '-SPEC:FORCE', 'SEM:internal', 'COMP:P', '!COMP:*', '-VAL', '-COMP:T/fin', 'COMP:A/inf', 'SPEC:TO/inf', 'SPEC:P', 'LF:want'}
hairitsee       ['LANG:FI']
hairitse-       {'ARG', '-COMP:N', 'LF:disturb', 'PF:hairitsee', '!COMP:D', 'V', '-COMP:FIN', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'LANG:FI', 'SPEC:D', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'PHI:GEN:_', '-ASP', 'ARG', '-COMP:N', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', 'LANG:IT', 'SPEC:ADV', 'PHI:PER:_', 'LF:have', 'SPEC:D', 'PHI:NUM:_', '-COMP:V', 'COMP:P', 'SPEC:*', 'SEM:internal', '-SPEC:FORCE', '-VAL', 'PF:ha', 'COMP:T', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'ARG', '-COMP:N', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', '-COMP:D', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', 'SPEC:D', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', 'PF:havia', '-VAL', 'CLASS:INTR', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P', 'LF:disappear'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'PF:ihaile-', 'ARG', '-COMP:N', '!COMP:D', '-COMP:FIN', 'PHI:DET:_', 'V', 'LF:admire', 'COMP:D', 'CLASS:TR', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'LANG:FI', 'PHI:NUM:_', '-COMP:V', '-COMP:P', 'ASP', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
il              {'PF:il', '-SPEC:D', 'COMP:N', 'adjoinable', 'D', '-SPEC:V', '!PROBE:N', '-SPEC:P', '-SPEC:T/fin', 'LANG:IT', '-COMP:D', '-SPEC:INF', 'LF:the', '-ARG', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C', '-SPEC:N', 'OP', '-COMP:T/fin', '-SPEC:MA/lla', '-COMP:uR'}
i               {'PF:il', '-SPEC:D', 'COMP:N', 'adjoinable', 'D', '-SPEC:V', '!PROBE:N', '-SPEC:P', '-SPEC:T/fin', 'LANG:IT', '-COMP:D', '-SPEC:INF', 'LF:the', '-ARG', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C', '-SPEC:N', 'OP', '-COMP:T/fin', '-SPEC:MA/lla', '-COMP:uR'}
in              {'PHI:GEN:_', 'adjoinable', '-COMP:ADV', '-COMP:uWH', 'ARG', '-COMP:N', 'PF:in', '-SPEC:iR', '-SPEC:V', 'PHI:DET:_', 'P', 'COMP:D', '-SPEC:P', '-SPEC:T/fin', 'PHI:PER:_', 'LANG:IT', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C', '-VAL', '-SPEC:N', '-SPEC:iWH', '-COMP:T/fin', 'LF:in', '-SPEC:v'}
infermieri      {'-COMP:ADV', 'N', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', 'LF:nurses', '-SPEC:P', '-COMP:v', 'LANG:IT', '-SPEC:ADV', '-SPEC:T/fin', '-COMP:WH', '-COMP:A', '-COMP:D', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', 'PF:infermieri', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
is              ['LANG:EN']
be-             {'LANG:EN', '-COMP:N', 'V', '-SPEC:T/fin', '-COMP:v', 'SPEC:ADV', '-COMP:TO/inf', 'SPEC:D', '-COMP:V', 'PF:be', '-ARG', 'COPULA', 'COMP:P', '!COMP:*', 'ASP', '-SPEC:FORCE', '-VAL', '-COMP:T/fin', 'LF:be', 'SPEC:TO/inf', 'SPEC:P'}
istuuko         ['LANG:FI']
istuu-          {'LF:sit', 'ARG', '-COMP:N', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', '-COMP:D', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', 'SPEC:D', 'PHI:NUM:_', '-COMP:V', 'ASP', 'PF:istuu', '-SPEC:FORCE', 'COMP:P', '-VAL', 'CLASS:INTR', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
John            ['LANG:EN']
John-           {'LANG:EN', 'N', '-COMP:ADV', '-COMP:N', 'LF:John', '-SEM:directional', '-SPEC:V', '-adjoinable', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'COMP:uR', '-COMP:WH', '-COMP:A', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', 'PF:John', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-COMP:ADV', 'N', '-COMP:N', '-SEM:directional', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'LANG:FI', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', 'PF:Jukka', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'LF:Jukka', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
juosten         ['LANG:FI']
juokse-         {'ARG', '-COMP:N', 'PHI:DET:_', 'V', 'PF:juokse-', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'LANG:FI', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', '-VAL', 'LF:run', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
istuu           ['LANG:FI']
istu-           {'LF:sit', 'ARG', '-COMP:N', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'LANG:FI', 'PHI:NUM:_', '-COMP:V', 'ASP', 'PF:istuu', '-SPEC:FORCE', 'COMP:P', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
kaksi           {'NUM', 'TAIL:ARG,VAL,FIN', 'PHI:NUM:_', 'COMP:N', 'PF:kaksi', 'ARG', 'SPEC:*', 'COMP:n', '-VAL', 'LANG:FI', 'PHI:DET:_', 'LF:two', 'PHI:PER:_', 'PHI:NUM:SG'}
kaksi           {'NUM', 'TAIL:ARG,ASP:BOUNDED', 'COMP:N', 'LANG:EN', 'PF:kaksi', 'SPEC:*', 'COMP:n', 'TAIL:*POL:NEG', 'LF:two'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'NUM', 'LF:two', 'COMP:N', 'PF:kaksi', 'SPEC:*', 'COMP:n', 'LANG:FI'}
kaupunkia       ['LANG:EN']
kaupunki        {'-COMP:ADV', 'N', 'LF:city', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'LANG:FI', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-COMP:P', '-SPEC:FORCE', '-SPEC:C/fin', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin', 'PF:kaupunki'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'ARG', '-COMP:N', '!COMP:A/inf', 'PHI:DET:_', 'LF:order', 'V', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'LANG:FI', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P', 'PF:kaske', 'SEM:external'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'PF:kello', '-COMP:ADV', 'N', 'LF:watch', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'LANG:FI', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
kello0-         {'0', 'SPEC:D', 'PF:kello', '2SPEC', 'LF:watch', 'LANG:FI'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'LANG:EN', 'N', '-COMP:ADV', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'COMP:uR', '-COMP:WH', '-COMP:A', 'PF:key', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin', 'LF:key'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-COMP:ADV', 'N', '-COMP:N', '-SEM:directional', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', 'LF:book', 'LANG:FI', '-SPEC:ADV', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'PF:kirja', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
kohti           {'adjoinable', '-COMP:ADV', '-COMP:uWH', 'ARG', '-COMP:N', '-SPEC:iR', '-SPEC:V', 'PHI:DET:_', 'P', 'PF:kohti', 'COMP:D', '-SPEC:P', '-SPEC:T/fin', 'PHI:PER:_', '-SPEC:ADV', 'LANG:FI', 'TAIL:V', 'PHI:NUM:_', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:Neg/fin', 'SPEC:*', '!COMP:*', '-SPEC:C', '-VAL', '-SPEC:N', '-SPEC:iWH', '-COMP:T/fin', '-SPEC:v', 'LF:towards'}
koko            {'-SPEC:D', 'COMP:N', 'adjoinable', 'PF:koko', 'D', '-SPEC:V', 'TAIL:T', '!PROBE:N', 'LF:all', '-SPEC:P', '-SPEC:T/fin', '-COMP:D', 'LANG:FI', '-SPEC:INF', '-ARG', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C', '-SPEC:N', 'OP', '-COMP:T/fin', '-SPEC:MA/lla', '-COMP:uR'}
kuka            ['LANG:FI']
kuka-           {'-COMP:ADV', 'N', '-COMP:N', 'PF:kuka', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', 'PHI', '-SPEC:P', '-SPEC:T/fin', 'LF:who', '-COMP:v', '-SPEC:ADV', 'LANG:FI', '-COMP:WH', '-COMP:A', '-COMP:D', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
kuorsaa-        {'ARG', '-COMP:N', 'PHI:DET:_', 'V', 'PF:kuorsaa', '-SPEC:T/fin', '-COMP:v', '-COMP:D', 'SPEC:ADV', 'LANG:FI', '-COMP:WH', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:V', 'COMP:P', 'LF:snore', 'ASP', '-SPEC:FORCE', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
kuorsaamalla    ['LANG:FI']
lahella         {'-COMP:FORCE', 'COMP:v', 'adjoinable', '-COMP:ADV', '-COMP:uWH', '-COMP:N', 'INF', '-SPEC:V', 'P', 'COMP:D', 'PHI:PER:_', '-SPEC:ADV', '!SPEC:D', '-SPEC:FORCE', '-SPEC:Neg/fin', 'VAL', '!SPEC:*', 'PF:lahella', '-SPEC:C', '-SPEC:N', '-SPEC:iWH', '-COMP:C/fin', 'LF:near', 'ARG', '-SPEC:iR', 'COMP:V', 'PHI:DET:_', '-SPEC:P', '-SPEC:T/fin', 'LANG:FI', 'PHI:NUM:_', '-SPEC:INF', '-SPEC:C/fin', 'SPEC:*', '!COMP:*', '-COMP:T/fin', '-SPEC:v'}
lahella         {'adjoinable', '-COMP:ADV', '-COMP:uWH', 'ARG', '-COMP:N', '-SPEC:iR', '-SPEC:V', '!COMP:D', 'PHI:DET:_', 'P', 'COMP:D', '-SPEC:P', '-SPEC:T/fin', 'PHI:PER:_', '-SPEC:ADV', 'LANG:FI', 'PHI:NUM:_', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:Neg/fin', 'SPEC:*', '!COMP:*', '-SPEC:C', 'PF:lahella', '-VAL', '-SPEC:N', '-SPEC:iWH', '-COMP:T/fin', 'LF:near', '-SPEC:v'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'COMP:PP', 'ARG', '-COMP:N', 'LF:leave', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', '-COMP:D', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', 'SPEC:D', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', '-VAL', 'CLASS:INTR', '-COMP:T/fin', 'SPEC:TO/inf', 'PF:lahtea', 'SPEC:P'}
lavano          ['LANG:IT']
lava-           {'PHI:GEN:_', 'ARG', '-COMP:N', 'PHI:DET:_', 'V', 'COMP:D', '-SPEC:T/fin', '-COMP:v', 'LANG:IT', 'SPEC:ADV', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', 'PF:lava', '!COMP:*', '-VAL', 'LF:wash', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-SPEC:D', 'COMP:N', 'adjoinable', 'LF:D', 'D', '-SPEC:V', '!PROBE:N', '-SPEC:P', '-SPEC:T/fin', 'LANG:IT', '-COMP:D', '-SPEC:INF', '-ARG', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C', '-SPEC:N', 'OP', 'PF:le', '-COMP:T/fin', '-SPEC:MA/lla', '-COMP:uR'}
leaves          ['LANG:EN']
leave           {'PHI:GEN:_', 'LANG:EN', 'ARG', '-COMP:N', 'LF:leave', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'PF:leave', '!SPEC:D', '-COMP:V', 'PHI:NUM:_', 'ASP', '-SPEC:FORCE', 'COMP:P', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
leave-          {'PHI:GEN:_', 'LANG:EN', 'ARG', '-COMP:N', 'LF:leave', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'PF:leave', '!SPEC:D', '-COMP:V', 'PHI:NUM:_', 'ASP', '-SPEC:FORCE', 'COMP:P', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
like-           {'PHI:GEN:_', 'LANG:EN', 'ARG', '-COMP:N', '!COMP:D', 'LF:like', 'PHI:DET:_', 'V', 'PF:like', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
likes           ['LANG:EN']
like            {'PHI:GEN:_', 'LANG:EN', 'ARG', '-COMP:N', '!COMP:D', 'LF:like', 'PHI:DET:_', 'V', 'PF:like', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
little          ['LANG:EN']
little-         {'0', 'SPEC:D', 'LANG:EN', '2SPEC', 'PF:little-', 'LF:little'}
lle             {'adjoinable', '-COMP:ADV', '-COMP:uWH', 'ARG', '-COMP:N', '-SPEC:*', '-SPEC:iR', '-SPEC:V', 'PHI:DET:_', 'P', 'LF:for', 'COMP:D', '-SPEC:P', '-SPEC:T/fin', 'PHI:PER:_', '-SPEC:ADV', 'LANG:FI', 'PHI:NUM:_', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C', '-VAL', '+SEM:directional', '-SPEC:N', '-SPEC:iWH', 'PF:P(lle)', '-COMP:T/fin', 'TAIL:V,+SEM:directional', '-SPEC:v'}
lla             {'adjoinable', '-COMP:ADV', '-COMP:uWH', 'ARG', 'PF:P(lla)', '-COMP:N', '-SPEC:iR', '-SPEC:V', 'PHI:DET:_', 'TAIL:T', 'P', 'COMP:D', '-SPEC:P', '-SPEC:T/fin', 'PHI:PER:_', '-SPEC:ADV', 'LANG:FI', 'PHI:NUM:_', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:Neg/fin', 'SPEC:*', '!COMP:*', '-SPEC:C', 'LF:by', 'TAIL:*V', '-VAL', '-SPEC:N', '-SPEC:iWH', '-COMP:T/fin', '-SPEC:v'}
Luisa           ['LANG:IT']
Luisa-          {'-COMP:ADV', 'N', '-COMP:N', '-SEM:directional', 'LF:Luisa', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', 'LANG:IT', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', 'PF:Luisa', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
lukemalla       ['LANG:FI']
luke-           {'ARG', '-COMP:N', 'PHI:DET:_', 'V', 'PF:luke', 'COMP:D', 'CLASS:TR', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'LANG:FI', 'PHI:NUM:_', '-COMP:V', '-COMP:P', 'ASP', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P', 'LF:read'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'ARG', '-COMP:N', 'LF:find', '!COMP:D', 'PHI:DET:_', 'V', 'PF:loyta-', 'CLASS:TR', 'COMP:D', '-SPEC:T/fin', '-COMP:v', 'SPEC:ADV', 'LANG:FI', 'ASP:BOUNDED', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:V', '-COMP:P', 'ASP', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
Mary            ['LANG:EN']
Mary-           {'PF:Mary', 'LANG:EN', 'N', '-COMP:ADV', '-COMP:N', '-SEM:directional', '-SPEC:V', '-adjoinable', 'COMP:R/D', '-COMP:AUX', 'LF:Mary', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'COMP:uR', '-COMP:WH', '-COMP:A', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-COMP:ADV', 'N', 'LF:Merja', '-COMP:N', '-SEM:directional', '-SPEC:V', '-adjoinable', 'COMP:R/D', 'PF:Merja', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'LANG:FI', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'COMP:v', 'adjoinable', 'PF:malla', '-SPEC:FORCE', 'SPEC:*', '-SPEC:Neg/fin', 'LF:by', '-SPEC:N', 'ADV', 'TAIL:T', '-SPEC:T/fin', 'MA/inf', 'LANG:FI'}
meren           ['LANG:FI']
mere-           {'-COMP:ADV', 'N', '-COMP:N', 'LF:ocean', 'PF:meri', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'LANG:FI', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
mistake         {'PF:mistake', 'LANG:EN', 'N', '-COMP:ADV', '-COMP:N', 'LF:mistake', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'COMP:uR', '-COMP:WH', '-COMP:A', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-COMP:ADV', 'N', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', 'LF:what', '-SPEC:ADV', 'LANG:FI', '-COMP:WH', '-COMP:A', '-COMP:D', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'PF:mika-', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'PHI:GEN:_', 'ARG', '-COMP:N', 'PHI:DET:_', 'V', 'LF:move', 'COMP:D', 'CLASS:TR', 'LANGN:EN', '-SPEC:T/fin', '-COMP:v', 'SPEC:ADV', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:V', '-COMP:P', 'ASP', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-VAL', '+SEM:directional', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P', 'PF:move'}
mukavasti       ['LANG:EN']
mukava-         {'0', 'SPEC:D', '2SPEC', 'LF:comfortably', 'PF:mukavasti', 'LANG:FI'}
must            {'PHI:GEN:_', '-SPEC:TO/inf', 'COMP:v', 'LANG:EN', 'ARG', 'T', '-SPEC:V', 'FIN', 'COMP:V', 'PHI:DET:_', '!PROBE:V', 'COMP:D', 'LF:must', '-SPEC:T/fin', 'PHI:PER:_', 'SPEC:D', '!SPEC:D', 'COMP:T/prt', '-SPEC:Neg', '-COMP:INF', '-SPEC:C/fin', 'PHI:NUM:_', '-SPEC:FORCE', 'SPEC:*', 'VAL', '!COMP:*', '-SPEC:N', '-COMP:T/fin', 'MODAL', 'COMP:Neg', 'SPEC:TO/inf', '-SPEC:v', 'PF:must', 'T/fin'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'ARG', '-COMP:N', 'LF:sell', 'PHI:DET:_', 'V', 'COMP:D', 'CLASS:TR', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'LANG:FI', 'ASP:BOUNDED', 'PHI:NUM:_', '-COMP:V', '-COMP:P', 'ASP', '-SPEC:FORCE', 'COMP:P', '!COMP:*', 'PF:myy', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
naki            ['LANG:FI']
nake-           {'ARG', '-COMP:N', '-COMP:ESSA/inf', 'PHI:DET:_', 'V', 'COMP:D', 'CLASS:TR', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'LF:see', 'LANG:FI', 'ASP:BOUNDED', 'PF:nake', 'PHI:NUM:_', '-COMP:V', '-COMP:P', 'ASP', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-VAL', 'SPEC:P', '-COMP:T/fin', 'SPEC:TO/inf', '-COMP:MA/inf'}
nayttaa         ['LANG:FI']
naytta-         {'-COMP:N', 'LF:seem', 'V', '!COMP:VA/inf', '-SPEC:T/fin', '-COMP:v', 'SPEC:ADV', 'LANG:FI', '!SPEC:D', '-COMP:V', 'PF:naytta', 'ASP', '-ARG', 'VAL', 'SEM:internal', 'COMP:P', '-SPEC:FORCE', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
ndo             {'?ARG', '-COMP:FORCE', 'COMP:v', 'LANG:EN', 'PRG', 'VAL', 'INF', '!COMP:*', 'LF:ing', '-SPEC:V', 'COMP:V', '-COMP:T/fin', '-COMP:C/fin', '-SPEC:T/fin', 'PF:PRG'}
ne              {'PHI:PER:3', '-SPEC:D', 'COMP:N', 'adjoinable', 'D', '-SPEC:V', '!PROBE:N', '-SPEC:P', '-SPEC:T/fin', '-COMP:D', 'LANG:FI', 'LF:those', '-SPEC:INF', '-ARG', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C', '-SPEC:N', 'OP', '-COMP:T/fin', '-SPEC:MA/lla', 'PHI:NUM:PL', 'PF:ne', '-COMP:uR'}
niiden          ['LANG:EN']
nen             {'-SPEC:A', '-SPEC:D', 'adjoinable', 'TAIL:D', 'PF:a', 'A', 'SPEC:*', 'LF:ing', 'COMP:0', 'LANG:FI'}
not             {'PHI:NUM:_', 'PHI:GEN:_', 'LANG:EN', 'POL:NEG', 'ARG', 'SPEC:*', '-COMP:C', 'LF:not', '!COMP:*', '-VAL', 'PHI:PER:_', 'PHI:DET:_', '-COMP:FIN', 'PF:not', '-SPEC:T/fin', 'Neg', '-COMP:D'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'ARG', '-COMP:N', 'PF:nukku', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', '-COMP:D', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', 'SPEC:D', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', '-VAL', 'LF:sleep', 'CLASS:INTR', '-COMP:T/fin', '-COMP:Neg/fin', 'SPEC:TO/inf', '-COMP:T', 'SPEC:P'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'LF:possessions', '-COMP:ADV', 'N', '-COMP:N', '-SPEC:V', 'COMP:R/D', 'PF:omaisuuden', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'LANG:FI', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
operatoria      ['LANG:IT']
operatoria-     {'0', 'SPEC:D', '2SPEC', 'LF:operation', 'PF:operatoria', 'LANG:IT'}
ostaa           ['LANG:FI']
osta-           {'ARG', '-COMP:N', 'PHI:DET:_', 'PF:osta', 'V', 'COMP:D', 'CLASS:TR', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'LANG:FI', 'ASP:BOUNDED', 'PHI:NUM:_', '-COMP:V', '-COMP:P', 'ASP', '-SPEC:FORCE', 'LF:buy', 'COMP:P', '!COMP:*', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'SEM:nonreferential', '-COMP:ADV', 'N', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'LANG:FI', 'PF:paiva', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', 'LF:day', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
Pariisia        ['LANG:FI']
Pariisi-        {'-COMP:ADV', 'N', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'LANG:FI', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', 'LF:Paris', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', 'PF:Pariisi', '-COMP:C/fin'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-COMP:ADV', 'N', '-COMP:N', '-SEM:directional', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'LANG:FI', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', 'PF:Pekka', '-SPEC:FORCE', 'COMP:P', 'LF:Pekka', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
pelottaa        ['LANG:FI']
pelkaa-         {'LF:fear', 'ARG', '-COMP:N', 'PHI:DET:_', 'V', 'COMP:D', 'CLASS:TR', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'LANG:FI', 'PHI:NUM:_', '-COMP:V', '-COMP:P', 'ASP', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-VAL', 'PF:pelkaa', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
persuades       ['LANG:EN']
persuade-       {'PHI:GEN:_', 'LANG:EN', 'ARG', '-COMP:N', 'PF:persuade', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-VAL', 'LF:persuade', '-COMP:T/fin', 'COMP:TO/inf', 'SPEC:TO/inf', 'SPEC:P', 'SEM:external'}
peruuntui       ['LANG:FI']
peruuntu-       {'ARG', '-COMP:N', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'LANG:FI', 'LF:cancelled', 'SPEC:D', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'PF:peruuntui', 'COMP:P', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'ARG', '-COMP:N', 'PHI:DET:_', 'V', 'COMP:D', 'CLASS:TR', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'LANG:FI', 'ASP:BOUNDED', 'PHI:NUM:_', 'PF:pese', '-COMP:V', '-COMP:P', 'ASP', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-VAL', 'LF:wash', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
pese-           {'ARG', '-COMP:N', 'PHI:DET:_', 'V', 'COMP:D', 'CLASS:TR', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'LANG:FI', 'PHI:NUM:_', 'PF:pese', '-COMP:V', '-COMP:P', 'ASP', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-VAL', 'LF:wash', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
petardi         {'-COMP:ADV', 'N', 'PF:petardi', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', 'LANG:IT', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-COMP:A', 'COMP:uR', 'LF:firecrackers', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
pieni           ['LANG:FI']
pieni-          {'0', 'SPEC:D', '2SPEC', 'PF:pieni-', 'LF:small', 'LANG:FI'}
poikien         ['LANG:FI']
poika-          {'PF:poika', '-COMP:ADV', 'N', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'LANG:FI', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', 'LF:boy', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
puhelinta       ['LANG:FI']
puhelin-        {'0', 'SPEC:D', 'PF:puhelin', '2SPEC', 'LF:phone', 'LANG:FI'}
punainen        ['LANG:FI']
puna-           {'0', 'SPEC:D', 'PF:puna-', '2SPEC', 'LF:red', 'LANG:FI'}
presupposto     {'-COMP:ADV', 'N', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', 'LF:presupposition', 'LANG:IT', '-SPEC:ADV', '-COMP:WH', '-COMP:A', '-COMP:D', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', 'PF:presupposto', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
primary         {'-COMP:ADV', 'N', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', 'LF:nurse', '-COMP:v', 'LANG:IT', '-SPEC:ADV', '-SPEC:T/fin', '-COMP:WH', '-COMP:A', '-COMP:D', 'COMP:uR', '-COMP:V', 'PF:primary', 'COMP:R', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
promises        ['LANG:EN']
promise-        {'PHI:GEN:_', 'LANG:EN', 'ARG', '-COMP:N', 'LF:promise', 'PHI:DET:_', 'V', 'COMP:D', '-SPEC:T/fin', 'PF:promise', '-COMP:v', 'SPEC:ADV', 'PHI:PER:_', 'SPEC:D', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'SEM:internal', 'COMP:P', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
pyytaa          ['LANG:FI']
pyyta-          {'ARG', '-COMP:N', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'LANG:FI', 'PHI:NUM:_', '-COMP:V', 'ASP', 'PF:pyyda', '-SPEC:FORCE', 'COMP:P', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'LF:ask', 'SPEC:P', 'SEM:external'}
raukesi         ['LANG:FI']
raukea-         {'LF:terminate', 'ARG', '-COMP:N', 'PF:raukea', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'LANG:FI', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
red             ['LANG:EN']
red-            {'0', 'SPEC:D', 'LANG:EN', 'PF:red', '2SPEC', 'LF:red'}
saavuttaa       ['LANG:FI']
saavutta-       {'ARG', '-COMP:N', '!COMP:D', 'PHI:DET:_', 'V', 'COMP:D', 'CLASS:TR', 'LF:reach', '-SPEC:T/fin', '-COMP:v', 'SPEC:ADV', 'LANG:FI', 'ASP:BOUNDED', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:V', '-COMP:P', 'ASP', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-VAL', '-COMP:T/fin', 'PF:saavutta-', 'SPEC:TO/inf', 'SPEC:P'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'LF:say', 'ARG', '-COMP:N', 'COMP:VA/inf', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'LANG:FI', 'PF:sano-', 'SPEC:D', 'COMP:FORCE', '-COMP:V', 'PHI:NUM:_', 'ASP', '-SPEC:FORCE', 'COMP:P', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
said            ['LANG:EN']
say'            {'PHI:GEN:_', 'LANG:EN', 'LF:say', 'ARG', '-COMP:N', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', 'PF:say', '-VAL', '!COMP:FORCE', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
say-            {'PHI:GEN:_', 'LANG:EN', 'LF:say', 'ARG', '-COMP:N', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', 'PF:say', '-VAL', '!COMP:FORCE', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
sala            ['LANG:IT']
sala-           {'-COMP:ADV', 'N', '-COMP:N', 'PF:sala', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', 'LANG:IT', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-COMP:A', 'COMP:uR', 'LF:room', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
scoppiati       ['LANG:IT']
scoppia-        {'PHI:GEN:_', 'ARG', '-COMP:N', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', 'LANG:IT', 'SPEC:ADV', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', '-VAL', 'LF:explode', '-COMP:T/fin', 'PF:scoppia', 'SPEC:TO/inf', 'SPEC:P'}
sen             {'LF:the/that', '-SPEC:D', 'COMP:N', 'adjoinable', 'PF:sen', 'D', '-SPEC:V', '!PROBE:N', 'TAIL:ASP', '-SPEC:P', '-SPEC:T/fin', 'TAIL:PHI', '-COMP:D', 'LANG:FI', '-SPEC:INF', '-ARG', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C', 'TAIL:*POL:NEG', '-SPEC:N', 'OP', '-COMP:T/fin', '-SPEC:MA/lla', '-COMP:uR'}
se'             {'LF:the/that', '-SPEC:D', 'COMP:N', 'adjoinable', 'D', 'PF:se', '-SPEC:V', '!PROBE:N', '-SPEC:P', '-SPEC:T/fin', '-COMP:D', 'LANG:FI', '-SPEC:INF', '-ARG', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C', '-SPEC:N', 'OP', '-COMP:T/fin', '-SPEC:MA/lla', '-COMP:uR'}
sentenza        {'-COMP:ADV', 'N', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', 'LANG:IT', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'PF:sentenza', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', 'LF:sentence', '-COMP:T/fin', '-COMP:C/fin'}
Seine           ['LANG:EN']
Seine-          {'LANG:EN', 'N', '-COMP:ADV', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', 'PF:Seine', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'COMP:uR', '-COMP:WH', '-COMP:A', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', 'LF:Seine', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
sembrano        ['LANG:IT']
sembra-         {'-ASP', 'LANG:EN', '-COMP:N', 'LF:seem', 'V', 'PF:sembra', '-SPEC:T/fin', '-COMP:D', '!COMP:ARE/inf', '-COMP:v', 'SPEC:ADV', 'SPEC:D', '-COMP:V', 'COMP:P', '-ARG', '-SPEC:FORCE', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
sleeps          ['LANG:EN']
sleep           {'PHI:GEN:_', 'LANG:EN', 'PF:sleep', 'ARG', '-COMP:N', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', '-COMP:D', 'SPEC:ADV', 'PHI:PER:_', 'SPEC:D', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', '-VAL', 'LF:sleep', 'CLASS:INTR', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
sleep-          {'PHI:GEN:_', 'LANG:EN', 'PF:sleep', 'ARG', '-COMP:N', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', '-COMP:D', 'SPEC:ADV', 'PHI:PER:_', 'SPEC:D', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', '-VAL', 'LF:sleep', 'CLASS:INTR', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-COMP:ADV', 'N', '-COMP:N', 'PF:sopimus', '-SPEC:V', 'LF:agreement', '!COMP:A/inf', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'LANG:FI', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
spinge          ['LANG:IT']
spinge-         {'PHI:GEN:_', 'ARG', '-COMP:N', '!COMP:D', 'PF:spinge', 'PHI:DET:_', 'V', 'LF:push', '-SPEC:T/fin', '-COMP:v', 'LANG:IT', 'SPEC:ADV', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:V', '-COMP:P', 'ASP', '-SPEC:FORCE', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
ssa             {'adjoinable', '-COMP:ADV', '-COMP:uWH', 'ARG', '-COMP:N', '-SPEC:iR', '-SPEC:V', 'PHI:DET:_', 'P', 'COMP:D', '-SPEC:P', '-SPEC:T/fin', 'PHI:PER:_', 'PF:ssa', 'COMP:n/MA', 'LANG:FI', 'TAIL:V', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:Neg/fin', 'SPEC:*', '!COMP:*', '-SPEC:C', '-VAL', '-SPEC:N', '-SPEC:iWH', '-COMP:T/fin', 'LF:in', '-SPEC:v'}
stanno          ['LANG:IT']
sta-            {'PHI:GEN:_', '-ASP', 'LANG:EN', 'ARG', '-COMP:N', 'PHI:DET:_', 'V', 'PF:sta', '-SPEC:T/fin', '-COMP:v', 'SPEC:ADV', 'PHI:PER:_', 'SPEC:D', 'COMP:PRG', 'PHI:NUM:_', '-COMP:V', 'COMP:P', '-SPEC:FORCE', 'SEM:internal', 'LF:stay', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
sti             {'adjoinable', '-SPEC:FORCE', '-ARG', 'SPEC:*', '-SPEC:Neg/fin', '!COMP:*', 'LF:by', '-SPEC:N', 'ADV', 'PF:sti', 'TAIL:T', '-SPEC:T/fin', 'LANG:FI'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'LF:socks', '-COMP:ADV', 'N', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'LANG:FI', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin', 'PF:sukka-'}
talo            {'-COMP:ADV', 'N', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'LANG:FI', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', 'LF:house', '-COMP:T/fin', '-COMP:C/fin', 'PF:talo'}
tama            ['LANG:EN']
tama-           {'-COMP:ADV', 'N', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', 'PF:tama', 'PHI', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'LANG:FI', '-COMP:WH', '-COMP:A', 'COMP:uR', 'LF:this', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'-ASP', 'ARG', '-COMP:N', 'FIN', '!COMP:A/inf', 'PHI:DET:_', 'V', 'LF:must', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'LANG:FI', 'PHI:NUM:_', 'PF:taytyy', '-COMP:V', 'COMP:P', 'SPEC:*', '-SPEC:FORCE', '-VAL', '-COMP:T/fin', 'MODAL', 'SPEC:TO/inf', 'SPEC:P'}
teki            ['LANG:FI']
teke-           {'LF:make', 'ARG', '-COMP:N', '-COMP:A/inf', '!COMP:D', 'PHI:DET:_', 'V', 'COMP:D', 'CLASS:TR', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'LANG:FI', 'ASP:BOUNDED', 'PF:teke', 'PHI:NUM:_', '-COMP:V', '-COMP:P', 'ASP', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
that            {'LANG:EN', '-ARG', 'COMP:C/fin', 'PF:that', '-SPEC:*', '!COMP:*', '-VAL', 'FIN', 'LF:that', '!PROBE:T/fin', 'FORCE', 'COMP:T/fin'}
the             {'-SPEC:D', 'COMP:N', 'adjoinable', 'LANG:EN', 'D', '-SPEC:V', '!PROBE:N', 'PF:the', '-SPEC:P', '-SPEC:T/fin', '-COMP:D', '-SPEC:INF', 'PHI:DEF:DEF', 'LF:the', '-ARG', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C', '-SPEC:N', 'OP', '-COMP:T/fin', '-SPEC:MA/lla', '-COMP:uR'}
to              {'PHI:GEN:_', 'adjoinable', 'LANG:EN', '-COMP:ADV', '-COMP:uWH', 'ARG', '-COMP:N', '-SPEC:*', '-SPEC:iR', '-SPEC:V', 'PHI:DET:_', 'P', 'COMP:D', '-SPEC:P', '-SPEC:T/fin', 'PHI:PER:_', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C', '-VAL', '+SEM:directional', '-SPEC:N', '-SPEC:iWH', '-float', '-COMP:T/fin', 'TAIL:V,+SEM:directional', 'PF:to', '-SPEC:v', 'LF:to'}
to_inf          {'?ARG', '-COMP:FORCE', 'adjoinable', 'TO/inf', 'LANG:EN', 'COMP:v', 'INF', '-SPEC:V', 'COMP:V', '-SPEC:T/fin', 'LF:TO/inf', 'PF:TO/inf', '!COMP:*', '-VAL', '-COMP:T/fin', '-COMP:C/fin', '-SPEC:v'}
towards         {'PHI:GEN:_', 'adjoinable', 'LANG:EN', '-COMP:ADV', '-COMP:uWH', 'ARG', '-COMP:N', '-SPEC:*', '-SPEC:iR', '-SPEC:V', 'PHI:DET:_', 'P', 'COMP:D', '-SPEC:P', '-SPEC:T/fin', 'PHI:PER:_', '-SPEC:ADV', 'TAIL:V', 'PHI:NUM:_', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C', '-VAL', '-SPEC:N', '-SPEC:v', '-SPEC:iWH', '-float', '-COMP:T/fin', 'PF:towards', 'LF:towards'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'ARG', '-COMP:N', 'PHI:DET:_', 'V', 'COMP:D', 'CLASS:TR', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'LANG:FI', 'PHI:NUM:_', '-COMP:V', '-COMP:P', 'ASP', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-VAL', 'SPEC:P', '-COMP:T/fin', 'PF:tonaise', 'SPEC:TO/inf', 'LF:nudge'}
tta             {'adjoinable', '-COMP:ADV', '-COMP:uWH', 'ARG', '-COMP:N', 'PF:tta', '-SPEC:iR', 'ADV', '-SPEC:V', 'PHI:DET:_', 'P', 'COMP:D', '-SPEC:P', '-SPEC:T/fin', 'PHI:PER:_', 'COMP:n/MA', 'LANG:FI', '-SPEC:ADV', 'PHI:NUM:_', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:Neg/fin', 'SPEC:*', '!COMP:*', '-SPEC:C', '-VAL', '-SPEC:N', '-SPEC:iWH', 'LF:without', '-COMP:T/fin', '-SPEC:v'}
tries           ['LANG:EN']
try-            {'PHI:GEN:_', 'LANG:EN', 'ARG', '-COMP:N', '!COMP:TO/inf', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'SEM:internal', 'COMP:P', 'LF:try', '-VAL', 'PF:try', '!COMP:-ARG', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
verifiche       {'-COMP:ADV', 'N', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', 'LF:verification', '-SPEC:P', '-COMP:v', 'LANG:IT', 'PF:verifiche', '-SPEC:ADV', '-COMP:WH', '-COMP:A', '-SPEC:T/fin', '-COMP:D', '-COMP:V', 'COMP:R', 'COMP:uR', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'ARG', '-COMP:N', '!COMP:P', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', '-COMP:D', 'SPEC:ADV', 'LANG:FI', 'PHI:PER:_', 'SPEC:D', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', 'LF:flow', '-VAL', 'PF:virtaa', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'PF:volu', 'PHI:GEN:_', 'LANG:EN', 'ARG', '-COMP:N', '-SPEC:*', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'SEM:internal', 'COMP:P', '!COMP:*', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P', 'LF:want'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'PHI:GEN:_', 'LANG:EN', 'ARG', 'LF:win', '-COMP:N', 'PHI:DET:_', 'V', 'PF:voitta', 'COMP:D', 'CLASS:TR', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'ASP:BOUNDED', 'PHI:NUM:_', '-COMP:V', 'SEM:achievement', '-COMP:P', 'ASP', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
wants           ['LANG:EN']
want-           {'PHI:GEN:_', '-SPEC:TO/inf', 'LANG:EN', 'ARG', '-COMP:N', 'PF:want', 'PHI:DET:_', 'V', 'COMP:D', 'CLASS:TR', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'PHI:NUM:_', '-COMP:V', '-COMP:P', 'ASP', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-VAL', '-COMP:T/fin', 'COMP:TO/inf', 'SPEC:P', 'LF:want'}
what            ['LANG:EN']
what-           {'LANG:EN', 'N', '-COMP:ADV', '-COMP:*', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', 'LF:what', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:N', '-SPEC:R', 'SPEC:A', 'PF:what', '-COMP:T/fin', '-COMP:C/fin'}
which           {'-SPEC:D', 'COMP:N', 'adjoinable', 'LANG:EN', 'D', '-SPEC:V', '!PROBE:N', 'OP:WH', 'LF:which', '-SPEC:P', '-SPEC:T/fin', '-COMP:D', '-SPEC:INF', '-ARG', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C', '-SPEC:N', 'OP', 'PF:which', '-COMP:T/fin', '-SPEC:MA/lla', '-COMP:uR'}
who             ['LANG:EN']
who-            {'LANG:EN', 'N', '-COMP:ADV', '-COMP:*', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', 'LF:who', '-COMP:v', '-SPEC:ADV', '-COMP:D', '-COMP:WH', 'PF:who', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
whether         {'LF:whether', 'LANG:EN', 'OP:Q', '-SPEC:*', 'FIN', 'OP:WH', 'FORCE', 'COMP:T/fin', 'Q', '-ARG', 'COMP:C/fin', '!COMP:*', '-VAL', 'OP', 'PF:whether', '!PROBE:T/fin'}
yrittaa         ['LANG:FI']
yritta-         {'PHI:GEN:_', 'LANG:EN', 'ARG', '-COMP:N', '!COMP:A/inf', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'SPEC:D', 'PHI:NUM:_', '-COMP:V', 'PF:yritta', 'ASP', '-SPEC:FORCE', 'SEM:internal', 'COMP:P', 'LF:try', '-VAL', '!COMP:-ARG', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
mina            ['LANG:EN']
mina-           {'-COMP:ADV', 'N', '-COMP:*', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', 'PF:mina', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'LANG:FI', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin', 'LF:I'}
sina            ['LANG:EN']
sina-           {'PF:sina', '-COMP:ADV', 'N', '-COMP:*', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', 'LF:you', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'LANG:FI', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
han             ['LANG:EN']
han-            {'-COMP:ADV', 'N', '-COMP:*', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'LANG:FI', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', 'LF:s/he', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin', 'PF:han'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-COMP:ADV', 'N', '-COMP:*', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'LANG:FI', '-COMP:WH', '-COMP:A', '-COMP:C/fin', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', 'PF:me', 'LF:we'}
te              ['LANG:EN']
te-             {'-COMP:ADV', 'N', '-COMP:*', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', 'PF:te', 'LF:you', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'LANG:FI', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he-             {'-COMP:ADV', 'N', '-COMP:*', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'LANG:FI', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:N', 'LF:they', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin', 'PF:he'}
he-             {'LANG:EN', 'N', '-COMP:ADV', '-COMP:*', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'COMP:uR', '-COMP:WH', '-COMP:A', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', 'LF:he', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin', 'PF:he'}
se              ['LANG:FI']
se-             {'-SPEC:D', 'COMP:N', 'adjoinable', 'D', 'PF:se', '-SPEC:V', '!PROBE:N', 'LF:it/that', '-SPEC:P', '-SPEC:T/fin', '-COMP:D', 'LANG:FI', '-SPEC:INF', '-ARG', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C', '-SPEC:N', 'OP', '-COMP:T/fin', '-SPEC:MA/lla', '-COMP:uR'}
I               ['LANG:EN']
I-              {'LANG:EN', 'N', '-COMP:ADV', '-COMP:*', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', 'PF:I', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'COMP:uR', '-COMP:WH', '-COMP:A', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin', 'LF:I'}
you             ['LANG:EN']
you-            {'LANG:EN', 'N', '-COMP:ADV', '-COMP:*', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', 'LF:you', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'COMP:uR', '-COMP:WH', '-COMP:A', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', 'PF:you', '-SPEC:uWH', 'PHI_N', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
he              ['LANG:EN']
she             ['LANG:EN']
she-            {'LANG:EN', 'N', '-COMP:ADV', '-COMP:*', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'COMP:uR', '-COMP:WH', '-COMP:A', 'PF:she', '-COMP:V', 'LF:she', 'COMP:R', '-SPEC:FORCE', '-SPEC:INF', '-SPEC:C/fin', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
we              ['LANG:EN']
we-             {'LANG:EN', 'N', '-COMP:ADV', '-COMP:*', '-COMP:N', 'PF:we', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'COMP:uR', '-COMP:WH', '-COMP:A', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin', 'LF:we'}
you_pl          ['LANG:EN']
you_pl-         {'PF:you_pl', 'LANG:EN', 'N', '-COMP:ADV', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', 'PHI', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'COMP:uR', '-COMP:WH', '-COMP:A', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', 'LF:you_pl', '-COMP:T/fin', '-COMP:C/fin'}
they            ['LANG:EN']
they-           {'LANG:EN', 'N', '-COMP:ADV', '-COMP:*', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', 'PF:they', '-COMP:v', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:N', 'LF:they', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
it              ['LANG:EN']
it-             {'-SPEC:D', 'COMP:N', 'adjoinable', 'LANG:EN', 'D', '-SPEC:V', '!PROBE:N', 'LF:it/that', '-SPEC:P', '-SPEC:T/fin', '-COMP:D', '-SPEC:INF', '-ARG', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C', '-SPEC:N', 'OP', 'PF:it', '-COMP:T/fin', '-SPEC:MA/lla', '-COMP:uR'}
io              ['LANG:EN']
io-             {'-COMP:ADV', 'N', '-COMP:*', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', 'LANG:IT', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-COMP:A', 'PF:io', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin', 'LF:I'}
tu              ['LANG:EN']
tu-             {'-COMP:ADV', 'N', '-COMP:*', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', 'LF:you', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', 'LANG:IT', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin', 'PF:tu'}
lui             ['LANG:EN']
lui-            {'-COMP:ADV', 'N', '-COMP:*', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', 'LANG:IT', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', 'LF:he', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:N', '-SPEC:R', 'SPEC:A', 'PF:lui', '-COMP:T/fin', '-COMP:C/fin'}
lei             ['LANG:EN']
lei-            {'-COMP:ADV', 'N', '-COMP:*', 'PF:lei', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', 'LANG:IT', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', 'LF:she', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:C/fin', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
noi             ['LANG:EN']
noi-            {'-COMP:ADV', 'N', '-COMP:*', '-COMP:N', 'PF:noi', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', 'LANG:IT', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin', 'LF:we'}
voi             ['LANG:EN']
voi-            {'-COMP:ADV', 'N', '-COMP:*', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', 'LANG:IT', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:N', '-SPEC:R', 'SPEC:A', 'PF:voi', 'LF:you_pl', '-COMP:T/fin', '-COMP:C/fin'}
loro            ['LANG:EN']
loro-           {'-COMP:ADV', 'N', '-COMP:*', '-COMP:N', '-SPEC:V', 'COMP:R/D', 'PF:loro', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', 'LANG:IT', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:N', 'LF:they', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
mi              ['LANG:EN']
mi-             {'-COMP:ADV', 'N', '-COMP:*', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-COMP:v', '-SPEC:ADV', '-COMP:WH', '-COMP:A', '-COMP:V', 'COMP:R', '-SPEC:FORCE', '-SPEC:N', 'SPEC:A', '-COMP:C/fin', 'PF:mi(cl)', 'CL', '-SPEC:P', '-SPEC:T/fin', 'LF:me', 'LANG:IT', '-COMP:D', 'COMP:uR', '-SPEC:INF', '-SPEC:C/fin', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:R', '-COMP:T/fin'}
la              ['LANG:EN']
la-             {'-COMP:ADV', 'N', '-COMP:*', '-COMP:N', '-SPEC:V', 'LF:her', 'COMP:R/D', '-COMP:AUX', '-COMP:v', '-SPEC:ADV', '-COMP:WH', '-COMP:A', '-COMP:V', 'COMP:R', '-SPEC:FORCE', '-SPEC:N', 'SPEC:A', '-COMP:C/fin', 'CL', '-SPEC:P', '-SPEC:T/fin', 'PF:la(cl)', 'LANG:IT', '-COMP:D', 'COMP:uR', '-SPEC:INF', '-SPEC:C/fin', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:R', '-COMP:T/fin'}
lo              ['LANG:EN']
lo-             {'-COMP:ADV', 'N', '-COMP:*', '-COMP:N', 'LF:him', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-COMP:v', '-SPEC:ADV', '-COMP:WH', '-COMP:A', '-COMP:V', 'COMP:R', '-SPEC:FORCE', '-SPEC:N', 'SPEC:A', '-COMP:C/fin', 'PF:lo(cl)', 'CL', '-SPEC:P', '-SPEC:T/fin', 'LANG:IT', '-COMP:D', 'COMP:uR', '-SPEC:INF', '-SPEC:C/fin', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:R', '-COMP:T/fin'}
si              ['LANG:EN']
si-             {'-COMP:ADV', 'N', '-COMP:*', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-COMP:v', '-SPEC:ADV', '-COMP:WH', '-COMP:A', '-COMP:V', 'COMP:R', 'PF:si(cl)', '-SPEC:FORCE', '-SPEC:N', 'SPEC:A', '-COMP:C/fin', 'CAL:CL', 'LF:3sg', '-SPEC:P', '-SPEC:T/fin', 'LANG:IT', '-COMP:D', 'COMP:uR', '-SPEC:INF', '-SPEC:C/fin', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:R', '-COMP:T/fin'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-COMP:ADV', 'N', 'PF:ci', '-COMP:*', '-COMP:N', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', 'LANG:IT', '-SPEC:ADV', '-COMP:D', '-COMP:WH', '-COMP:A', 'COMP:uR', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', 'PHI_N', '-SPEC:N', '-SPEC:R', 'SPEC:A', 'LF:there', '-COMP:T/fin', '-COMP:C/fin'}
[-n]            {'PHI:DET:DEF', 'PHI', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'LANG:FI', 'inflectional'}
[-t]            {'PHI:DET:DEF', 'PHI', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'LANG:FI', 'inflectional'}
[-V]            {'LANG:FI', 'PHI', 'PHI:PER:3', 'inflectional', 'PHI:NUM:SG'}
[-mme]          {'PHI:DET:DEF', 'PHI', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'LANG:FI', 'inflectional'}
[-mme]          {'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'LANG:FI', 'inflectional'}
[-tte]          {'PHI:DET:DEF', 'PHI', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'LANG:FI', 'inflectional'}
[-vat]          {'PHI', 'PHI:NUM:PL', 'PHI:PER:3', 'inflectional', 'LANG:FI'}
[-ni]           {'PHI:DET:DEF', 'PHI', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:1', 'LANG:FI', 'inflectional'}
[-si]           {'PHI:DET:DEF', 'PHI', 'PHI:HUM:HUM', 'PHI:NUM:SG', 'PHI:PER:2', 'LANG:FI', 'inflectional'}
[-nsa]          {'PHI:PER:3', 'inflectional', 'LANG:FI', 'PHI'}
[-an]           {'PHI:PER:3', 'inflectional', 'LANG:FI', 'PHI'}
[-nne]          {'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'LANG:FI', 'inflectional'}
[-s]            {'LANG:EN', 'PHI', 'PHI:GEN:M', 'PHI:NUM:SG', 'PHI:PER:3', 'inflectional', 'PHI:GEN:F'}
[-0]            {'LANG:EN', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI', 'PHI:PER:1', 'PHI:NUM:PL', 'PHI:PER:3', 'inflectional', 'PHI:NUM:SG', 'PHI:GEN:N'}
[-o]            {'PHI:DET:DEF', 'PHI', 'PHI:HUM:HUM', 'LANG:IT', 'PHI:PER:1', 'PHI:NUM:SG', 'inflectional'}
[-i]            {'PHI:DET:DEF', 'PHI', 'PHI:HUM:HUM', 'LANG:IT', 'PHI:PER:2', 'PHI:NUM:SG', 'inflectional'}
[-a]            {'PHI:DET:DEF', 'PHI', 'PHI:PER:3', 'inflectional', 'PHI:NUM:SG', 'LANG:IT'}
[-e]            {'PHI:DET:DEF', 'PHI', 'PHI:PER:3', 'inflectional', 'PHI:NUM:SG', 'LANG:IT'}
[-iamo]         {'PHI:DET:DEF', 'PHI', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'LANG:IT', 'PHI:PER:1', 'inflectional'}
[-te]           {'PHI:DET:DEF', 'PHI', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'LANG:IT', 'PHI:PER:2', 'inflectional'}
[-no]           {'PHI:DET:DEF', 'PHI', 'PHI:NUM:PL', 'PHI:PER:3', 'inflectional', 'LANG:IT'}
[-nom]          {'adjoinable', 'LANG:EN', 'NOM', 'TAIL:FIN,ARG,VAL', 'inflectional'}
[-par]          {'PAR', 'TAIL:ARG,-VAL', 'adjoinable', 'inflectional', 'LANG:FI'}
[-gen]          {'-float', 'GEN', 'TAIL:INF,ARG', 'LANG:EN', 'inflectional'}
gen             {'-float', 'GEN', 'TAIL:INF,ARG', 'LANG:EN', 'inflectional'}
[-n_acc]        {'TAIL:ARG,ASP:BOUNDED', 'adjoinable', 'n-ACC', 'TAIL:PHI', 'TAIL:*POL:NEG', 'LANG:FI', 'inflectional'}
[-t_acc]        {'TAIL:ARG,ASP:BOUNDED', 'adjoinable', 't-ACC', 'TAIL:*POL:NEG', 'LANG:FI', 'inflectional'}
[-0_acc]        {'TAIL:ARG,ASP:BOUNDED', 'adjoinable', '0_ACC', 'TAIL:*PHI', 'TAIL:*POL:NEG', 'LANG:FI', 'inflectional'}
asp             {'LANG:EN', 'inflectional', 'ASP:BOUNDED'}
a'              {'a', 'PF:a', 'LANG:X', 'LF:A'}
b'              {'LF:B', 'LANG:X', 'b', 'PF:b'}
b''             {'-COMP:c', 'LF:B', 'b', 'LANG:EN', 'PF:b'}
c''             {'c', 'PF:c', 'LANG:EN', 'LF:C', 'SPEC:a'}
c'              {'LF:C', 'c', 'PF:c', 'LANG:X'}
d'              {'LANG:', 'd', 'PF:d', 'LF:D'}
a''             ['LANG:EN']
x'              {'LANG:X', 'x', 'LF:X', 'PF:x'}
y'              {'PF:y', 'LF:Y', 'y', 'LANG:X'}
z'              {'PF:x', 'LF:Z', 'LANG:X', 'z'}
John'           {'PF:John', 'LANG:X', "N'", 'LF:John'}
admires'        {"V'", 'LF:admires', 'LANG:X', 'PF:admires'}
admires''       {'PHI:GEN:_', 'LANG:EN', 'ARG', '-COMP:N', 'LF:admires', 'PHI:DET:_', 'V', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:ADV', 'PF:admires', 'SPEC:D', 'PHI:NUM:_', '-COMP:V', 'ASP', '-SPEC:FORCE', 'COMP:P', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P'}
Mary'           {'LF:mary', 'PF:Mary', 'LANG:X', "N'"}
T/fin           {'PHI:GEN:_', '-SPEC:TO/inf', 'COMP:v', 'LANG:EN', 'ARG', 'T', 'LF:T', '-SPEC:V', 'FIN', 'COMP:V', 'PHI:DET:_', '!PROBE:V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'SPEC:D', '!SPEC:D', 'COMP:T/prt', '-SPEC:Neg', '-COMP:INF', '-SPEC:C/fin', 'PHI:NUM:_', '-SPEC:FORCE', 'SPEC:*', 'PF:T', 'VAL', '!COMP:*', '-SPEC:N', '-COMP:T/fin', 'SPEC:TO/inf', '-SPEC:v', 'T/fin'}
v               {'SPEC:D', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:EN', 'ASP', 'ARG', '!COMP:*', '-VAL', '-SPEC:N', 'COMP:V', 'PHI:DET:_', '!PROBE:V', 'v', 'PHI:PER:_', 'PF:v', 'LF:v'}
C/fin           {'LANG:EN', '!PROBE:FIN', 'PF:C', 'FIN', '-SPEC:T/fin', 'COMP:T/fin', '-COMP:T/prt', '-SPEC:C/fin', '-ARG', 'VAL', 'SPEC:*', 'C/fin', '!COMP:*', '-SPEC:N', 'LF:C/fin', 'C', '-COMP:C/fin', 'COMP:Neg/fin'}
T               {'PHI:GEN:_', 'COMP:v', 'LANG:EN', 'ARG', 'LF:T', 'FIN', 'COMP:V', '-SPEC:V', 'PHI:DET:_', '!PROBE:V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'COMP:T/prt', 'SPEC:D', 'PHI:NUM:_', '-SPEC:FORCE', 'SPEC:*', 'PF:T', 'VAL', '!COMP:*', '-SPEC:N', '-COMP:NEG', 'T'}
T/prt           {'PHI:GEN:_', 'COMP:v', 'LANG:EN', 'ARG', 'T/prt', '-SPEC:V', 'COMP:V', 'FIN', 'PHI:DET:_', '!PROBE:V', 'PF:T/prt', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'COMP:T/prt', 'SPEC:D', 'PHI:NUM:_', '-SPEC:FORCE', 'SPEC:*', 'VAL', '!COMP:*', '-SPEC:N', '-COMP:NEG', 'T', 'LF:T/prt'}
a0              {'-SPEC:A', '-SPEC:D', 'LF:A', 'LANG:EN', 'adjoinable', 'TAIL:D', 'A', '-adjoinable', 'PF:A', 'COMP:0'}
n               {'PHI:GEN:_', 'COMP:v', '-COMP:ADV', 'N', '-COMP:N', 'INF', 'LF:n', 'COMP:R/D', '-SPEC:V', '-COMP:AUX', '-COMP:v', 'PHI:PER:_', '-SPEC:ADV', '-COMP:WH', '-COMP:A', '!SPEC:D', '-COMP:V', 'COMP:R', '-SPEC:FORCE', 'VAL', '!SPEC:*', '-SPEC:N', 'SPEC:A', 'n', '-COMP:C/fin', 'LANG:EN', 'ARG', 'COMP:V', 'PHI:DET:_', 'COMP:0', '-SPEC:P', '-SPEC:T/fin', '-COMP:D', 'COMP:uR', 'PHI:NUM:_', '-SPEC:INF', '-SPEC:C/fin', 'COMP:P', 'SPEC:*', '-SPEC:uWH', '!COMP:*', '-SPEC:R', '-COMP:T/fin', 'PF:n'}
impass          {'SPEC:D', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:EN', 'ASP', 'ARG', '!COMP:*', '-VAL', '-SPEC:N', 'PF:impass', 'COMP:V', 'PHI:DET:_', '!PROBE:V', 'v', 'PHI:PER:_', 'LF:impass'}
cau             {'SPEC:D', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:EN', 'ASP', 'ARG', 'PF:Cau', '!COMP:*', '-VAL', '-SPEC:N', 'COMP:V', 'PHI:DET:_', '!PROBE:V', 'LF:v/Cause', 'v', 'PHI:PER:_'}
INF             {'-COMP:FORCE', 'COMP:v', 'LANG:EN', 'LF:INF', 'INF', 'PF:INF', '!COMP:*', '-SPEC:V', 'COMP:V', '-COMP:T/fin', '-COMP:C/fin', '-SPEC:T/fin'}
prtcpl          {'-COMP:FORCE', 'PHI:GEN:_', 'COMP:v', 'LANG:EN', 'ARG', 'INF', 'T/prt', '-SPEC:V', 'FIN', 'COMP:V', 'PHI:DET:_', '!PROBE:V', 'PF:T/prt', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', '-COMP:C/fin', 'SPEC:D', 'COMP:T/prt', 'PHI:NUM:_', '-SPEC:FORCE', 'SPEC:*', 'VAL', '!COMP:*', '-SPEC:N', '-COMP:NEG', '-COMP:T/fin', 'T', 'LF:T/prt'}
TO/inf          {'?ARG', '-COMP:FORCE', 'adjoinable', 'TO/inf', 'LANG:EN', 'COMP:v', 'INF', '-SPEC:V', 'COMP:V', '-SPEC:T/fin', '!COMP:V', 'LF:TO/inf', 'PF:TO/inf', '!COMP:*', '-VAL', '-COMP:T/fin', '-COMP:C/fin', '-SPEC:v'}
A/inf           {'?ARG', '-COMP:FORCE', 'COMP:v', 'LF:A/inf', 'LANG:EN', 'INF', '-SPEC:V', 'COMP:V', 'PF:A/inf', '?VAL', '-SPEC:T/fin', 'A/inf', 'SPEC:*', '-SPEC:Neg/fin', '!COMP:*', '-COMP:T/fin', '-COMP:C/fin'}
ARE/inf         {'?ARG', '-COMP:FORCE', 'COMP:v', 'LANG:EN', 'INF', '-SPEC:V', '-adjoinable', 'COMP:V', 'LF:ARE/inf', '-SPEC:T/fin', 'PF:are', 'SPEC:*', 'VAL', 'ARE/inf', '!COMP:*', '-COMP:T/fin', '-COMP:C/fin'}
ESSA/inf        {'?ARG', '-COMP:FORCE', 'adjoinable', 'LANG:EN', 'COMP:v', 'INF', 'ADV', '-SPEC:V', 'COMP:V', 'TAIL:T', '?VAL', '-SPEC:T/fin', 'ESSA/inf', 'PF:essa', 'LF:while', '-SPEC:FORCE', 'SPEC:*', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:N', '-COMP:T/fin', '-COMP:C/fin'}
TUA/inf         {'-COMP:FORCE', 'PHI:GEN:_', 'adjoinable', 'LANG:EN', 'COMP:v', 'TUA/inf', 'CAL', 'INF', 'ARG', 'PF:tua', 'ADV', 'LF:after', '-SPEC:V', 'TAIL:T', 'COMP:V', 'PHI:DET:_', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:Neg/fin', '!COMP:*', '!SPEC:*', '-SPEC:N', '-COMP:T/fin', '-COMP:C/fin'}
VA/inf          {'-COMP:FORCE', 'PHI:GEN:_', 'COMP:v', 'LANG:EN', 'ARG', 'INF', '-SPEC:V', 'COMP:V', 'PHI:DET:_', '-SPEC:T/fin', 'PF:vAn', 'PHI:PER:_', 'PHI:NUM:_', 'VA/inf', 'LF:VA', 'SPEC:*', 'VAL', '!COMP:*', '!SPEC:*', '-SPEC:N', '-COMP:T/fin', '-COMP:C/fin'}
MA/ssa          {'PHI:GEN:_', 'COMP:v', 'adjoinable', 'LANG:EN', 'LF:in_doing', 'ARG', '-SPEC:*', 'ADV', 'COMP:V', 'PHI:DET:_', '-SPEC:T/fin', 'PHI:PER:_', 'TAIL:V', 'PHI:NUM:_', '-SPEC:FORCE', '-SPEC:Neg/fin', 'PF:massa', '-VAL', '-SPEC:N', 'MA/inf'}
MA/tta          {'PHI:NUM:_', 'PHI:GEN:_', 'adjoinable', 'LANG:EN', '-SPEC:FORCE', 'ARG', 'PF:matta', '-SPEC:Neg/fin', '-VAL', '-SPEC:N', 'ADV', 'PHI:DET:_', 'TAIL:T', '-SPEC:T/fin', 'PHI:PER:_', 'MA/inf', 'LF:without_doing'}
MA/lla          {'PHI:GEN:_', 'COMP:v', 'adjoinable', 'PF:malla', 'TAIL:T', 'PHI:PER:_', '-SPEC:FORCE', '-SPEC:Neg/fin', '-VAL', '-SPEC:N', 'LANG:EN', 'ARG', 'LF:by_doing', 'ADV', 'COMP:V', 'PHI:DET:_', '-SPEC:T/fin', 'PHI:NUM:_', 'MA/inf'}
MA/inf          {'PHI:GEN:_', 'COMP:v', 'adjoinable', 'PHI:PER:_', 'TAIL:V', 'PF:maan', '-SPEC:FORCE', '-SPEC:Neg/fin', '-VAL', '-SPEC:N', 'LF:to_do', 'LANG:EN', 'ARG', 'ADV', 'COMP:V', 'PHI:DET:_', '-SPEC:T/fin', 'PHI:NUM:_', 'MA/inf'}
E/inf           {'adjoinable', '-SPEC:FORCE', '-ARG', 'SPEC:*', '-SPEC:Neg/fin', '-VAL', 'LF:by', 'ADV', '-SPEC:N', 'PF:en', '-SPEC:T/fin', 'LANG:FI'}
BE-             {'LANG:EN', 'LF:BE', '-COMP:N', 'V', '-SPEC:T/fin', '-COMP:v', 'SPEC:ADV', 'SPEC:D', 'COMP:T/prt', '-COMP:V', 'COMP:P', '-ARG', 'COPULA', 'ASP', '!COMP:*', '-SPEC:FORCE', '-VAL', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:P', 'PF:BE'}
D               {'-SPEC:D', 'COMP:N', 'adjoinable', 'LANG:EN', 'LF:D', 'D', '-SPEC:V', 'PF:D', '!PROBE:N', '-SPEC:P', '-SPEC:T/fin', '-COMP:D', '-SPEC:INF', '-ARG', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C', '-SPEC:N', 'OP', '-COMP:T/fin', '-SPEC:MA/lla', '-COMP:uR'}
P               {'PHI:GEN:_', 'adjoinable', 'LANG:EN', '-COMP:ADV', '-COMP:uWH', 'ARG', '-COMP:N', '-SPEC:*', '-SPEC:iR', '-SPEC:V', 'PHI:DET:_', 'P', 'COMP:D', '-SPEC:P', '-SPEC:T/fin', 'PHI:PER:_', '-SPEC:ADV', 'PHI:NUM:_', 'LF:P', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C', '-VAL', '-SPEC:N', 'PF:P', '-SPEC:iWH', '-float', '-COMP:T/fin', '-SPEC:v'}
pro             ['LANG:EN']
pro-            {'LANG:EN', 'N', '-COMP:ADV', 'LF:pro', '-COMP:N', 'PF:(pro)', '-SPEC:V', 'COMP:R/D', '-COMP:AUX', 'PHI', '-SPEC:P', '-SPEC:T/fin', '-COMP:v', '-COMP:D', '-SPEC:ADV', 'COMP:uR', '-COMP:WH', '-COMP:A', '-COMP:V', 'COMP:R', '-SPEC:INF', '-SPEC:C/fin', '-SPEC:FORCE', 'COMP:P', '-SPEC:uWH', '-SPEC:N', '-SPEC:R', 'SPEC:A', '-COMP:T/fin', '-COMP:C/fin'}
cl              {'RIGHT:PRG', 'LANG:EN', 'LEFT:D,CL', 'CL', 'LEFT:T/fin', 'inflectional', 'RIGHT:ARE/inf'}
inc             {'LANG:EN', 'INCORPORATED', 'inflectional'}
sg              {'LANG:EN', 'inflectional', 'PHI:NUM:SG'}
pl              {'LANG:EN', 'PHI:NUM:PL', 'inflectional'}
1p              {'LANG:EN', 'inflectional', 'PHI:PER:1'}
2p              {'LANG:EN', 'PHI:PER:2', 'inflectional'}
3p              {'LANG:EN', 'PHI:PER:3', 'inflectional'}
def             {'LANG:EN', 'PHI:DET:DEF', 'inflectional'}
indef           {'LANG:EN', 'inflectional', 'PHI:DET:INDEF'}
hum             {'LANG:EN', 'inflectional', 'PHI:HUM:HUM'}
nonhum          {'LANG:EN', 'inflectional', 'PHI:HUM:NONHUM'}
m               {'LANG:EN', 'inflectional', 'PHI:GEN:M'}
f               {'LANG:EN', 'inflectional', 'PHI:GEN:F'}
nom             {'TAIL:FIN,!COMP:*,VAL', 'inflectional', 'LANG:EN'}
acc             {'LANG:EN', 'TAIL:v', 'inflectional'}
dat             {'LANG:EN', 'TAIL:v', 'inflectional'}
uC/op           {'LANG:EN', 'inflectional', 'uC/op'}
wh              {'OP:_', 'OP:WH', 'inflectional', 'LANG:EN'}
wh_             {'OP:_', 'LANG:EN', 'FORCE:OP:WH', 'inflectional', 'OP'}
top             {'LANG:EN', 'inflectional', 'OP:TOP'}
foc             {'LANG:EN', 'OP:FOC', 'inflectional'}
C/op            {'LANG:EN', 'OP:C/OP', 'inflectional'}
rel             {'adjoinable', 'LANG:EN', '-COMP:C/fin', 'OP:REL', 'inflectional'}
Q               {'OP:WH', 'LANG:EN', 'OP:Q', 'inflectional', 'OP'}
