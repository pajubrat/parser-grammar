ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'-SPEC:v', '-SPEC:iWH', '-COMP:uWH', 'LF:to', '-SPEC:ADV', '-SPEC:C', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'adjoinable', 'P', '-COMP:T/fin', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:Neg/fin', 'LANG:IT', '-SPEC:iR', '-SPEC:T/fin', '-SPEC:*', '-SPEC:P', '-COMP:ADV', '!COMP:*', 'COMP:D', 'COMP:ARE/inf', 'PF:a', '-SPEC:N', '-ARG', '-VAL'}
a_D             {'-SPEC:C', '-SPEC:V', '-COMP:D', 'LF:D', 'PF:D', 'adjoinable', '-COMP:T/fin', '-SPEC:INF', 'COMP:N', '-SPEC:Neg/fin', '-SPEC:MA/lla', '-SPEC:T/fin', '-SPEC:P', '-COMP:uR', '!COMP:*', 'OP', '!PROBE:N', 'LANG:EN', 'D', '-SPEC:N', '-SPEC:D', '-ARG'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'PF:admire', 'V', 'ASP', 'SPEC:TO/inf', 'LF:admire', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'SPEC:P', 'COMP:P', '-COMP:P', 'CLASS:TR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-SPEC:Neg', '-COMP:v', 'PHI:PER:_', '!COMP:*', 'COMP:D', 'LANG:EN', '-COMP:Neg', 'ARG', '-VAL'}
admire*         ['LANG:EN']
T/fin*          {"PF:T/fin'", 'NO_DET', 'NO_NUMBER', 'CAT:T/fin', 'LANG:EN', 'LF:T', '!SPEC:*', '-VAL'}
v*              {'LF:v', 'LANG:EN', 'NO_DET', 'NO_NUMBER', 'PF:v', 'CAT:v', '-VAL'}
admire**        ['LANG:EN']
T/fin**         {'NO_PERSON', 'NO_DET', "PF:T/fin''", 'NO_NUMBER', 'PHI:PER:3', 'CAT:T/fin', 'LANG:EN', 'LF:T', '!SPEC:*', '-VAL'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'V', 'ASP', 'SPEC:TO/inf', 'LF:admire', 'PF:adora', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:IT', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'COMP:D', 'SPEC:P', 'ARG', '-VAL'}
antaa           ['LANG:FI']
anta-           {'PF:antaa', 'V', 'ASP', 'SPEC:TO/inf', 'LF:give', '-COMP:N', '-COMP:V', 'CLASS:DITR', 'SPEC:D', 'COMP:P', 'ARG', 'ASP:BOUNDED', '+SEM:directional', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', '-COMP:FIN', '!COMP:*', 'COMP:D', 'SPEC:P', 'LANG:FI', '-VAL'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'V', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'SPEC:D', 'COMP:P', 'ARG', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', 'LF:ask', '-COMP:v', 'PHI:PER:_', 'COMP:D', 'LANG:EN', 'SPEC:P', 'PF:ask', 'SEM:internal', '-VAL'}
ask-            {'V', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'SPEC:D', 'COMP:P', 'ARG', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', 'LF:ask', '-COMP:v', 'PHI:PER:_', 'COMP:D', 'LANG:EN', 'SPEC:P', 'PF:ask', 'SEM:internal', '-VAL'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'PF:avain', '-SEM:directional', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D', 'LANG:FI', 'LF:key'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', 'LF:car', '-SPEC:FORCE', '-SEM:directional', 'PF:auto', '-COMP:C/fin', '-COMP:A', '-SPEC:T/fin', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D', 'LANG:FI'}
city            {'LF:city', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'LANG:EN', 'COMP:R', '-SPEC:N', 'PF:city', '-COMP:D'}
che             ['LANG:IT']
che-            {'LF:who', '-SPEC:ADV', 'PHI_N', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'LANG:IT', '-COMP:C/fin', 'PF:che', '-COMP:A', '-SPEC:T/fin', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-SPEC:P', 'SPEC:A', 'N', '-COMP:ADV', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D'}
chiamato        ['LANG:IT']
chiamata-       {'V', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'PF:chiamato', '-COMP:V', 'PHI:GEN:_', 'COMP:P', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:IT', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'LF:called', 'PHI:PER:_', 'SPEC:P', 'ARG', '-VAL'}
danno           {'LF:damage', 'PF:danno', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'LANG:IT', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'V', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'ARG', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:IT', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'PF:detest', 'COMP:D', 'COMP:ARE/inf', 'SPEC:P', 'SEM:internal', 'LF:detest', '-VAL'}
devono          ['LANG:EN']
deva-           {'V', 'SPEC:TO/inf', 'LF:must', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'SPEC:D', 'COMP:P', 'ARG', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:IT', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'PF:deva', 'COMP:ARE/inf', 'SPEC:P', 'SEM:internal', '-ASP', '-VAL'}
di              {'-adjoinable', '-SPEC:v', 'LF:of', '-SPEC:iWH', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'P', '-COMP:T/fin', 'ARG', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:Neg/fin', 'SPEC:*', '-SPEC:iR', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:P', '-COMP:ADV', 'PHI:PER:_', '!COMP:*', 'PF:di', 'COMP:D', '-SPEC:N', 'LANG:FI', '-VAL'}
does            {'PHI:GEN:F', '-SPEC:v', 'COMP:Neg', 'COMP:v', 'LF:does', 'SPEC:TO/inf', 'PHI:PER:3', 'COMP:V', 'PHI:NUM:SG', '-SPEC:C/fin', '-SPEC:V', 'PF:does', 'FIN', 'SPEC:D', '-COMP:T/fin', 'PHI:GEN:_', 'T/fin', '!SPEC:*', '-COMP:INF', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:*', '-SPEC:T/fin', 'SPEC:INF', 'T', 'PHI:PER:_', '!PROBE:V', '!COMP:*', 'COMP:D', 'VAL', 'LANG:EN', 'COMP:T/prt', 'PHI:GEN:M', '-SPEC:N', 'ARG'}
does_C          ['LANG:EN']
does-           {'PHI:GEN:F', '-SPEC:v', 'COMP:Neg', 'COMP:v', 'LF:does', 'SPEC:TO/inf', 'PHI:PER:3', 'COMP:V', 'PHI:NUM:SG', '-SPEC:C/fin', '-SPEC:V', 'PF:does', 'FIN', 'SPEC:D', '-COMP:T/fin', 'PHI:GEN:_', 'T/fin', '!SPEC:*', '-COMP:INF', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:*', '-SPEC:T/fin', 'SPEC:INF', 'T', 'PHI:PER:_', '!PROBE:V', '!COMP:*', 'COMP:D', 'VAL', 'LANG:EN', 'COMP:T/prt', 'PHI:GEN:M', '-SPEC:N', 'ARG'}
dorme           ['LANG:IT']
dorme-          {'V', 'PF:dorme', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'LANG:EN', 'LF:sleep', 'SPEC:P', 'ARG', '!SPEC:D', '-VAL'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'PF:ei', 'SEM:internal', 'NEG', 'FIN', '!SPEC:*', 'ARG', '-SPEC:T', 'Neg/fin', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:*', 'LF:neg', '-SPEC:T/fin', 'PHI:PER:_', '!COMP:T', '!COMP:*', 'POL:NEG', 'VAL', 'COMP:T/prt', '%SPEC:INF', 'LANG:FI'}
e-              {'PF:ei', 'SEM:internal', 'NEG', 'FIN', '!SPEC:*', 'ARG', '-SPEC:T', 'Neg/fin', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:*', 'LF:neg', '-SPEC:T/fin', 'PHI:PER:_', '!COMP:T', '!COMP:*', 'POL:NEG', 'VAL', 'COMP:T/prt', '%SPEC:INF', 'LANG:FI'}
elaa            ['LANG:FI']
ela-            {'V', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:V', 'SPEC:D', 'COMP:P', 'ARG', 'CLASS:INTR', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'PF:elaa', 'SPEC:P', '-COMP:D', 'LF:live', 'LANG:FI', '-VAL'}
etsii           ['LANG:FI']
etsi-           {'V', 'ASP', 'SPEC:TO/inf', 'LANG:FI', '-COMP:N', '-COMP:V', 'COMP:P', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '!COMP:D', '-COMP:v', 'PHI:PER:_', 'COMP:D', 'PF:etsi', 'SPEC:P', 'ARG', 'LF:search', '-VAL'}
etta            {'FORCE', 'PF:ettÃ¤', 'COMP:T/fin', '-SPEC:*', '!COMP:*', 'COMP:C/fin', 'FIN', '!PROBE:T/fin', 'LF:that', 'LANG:FI', '-ARG', '-VAL'}
flow'           {'V', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'SPEC:D', 'COMP:P', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'PF:flow', 'LANG:EN', 'SPEC:P', 'LF:flow', 'ARG', '-VAL'}
from            {'-SPEC:v', '-SPEC:iWH', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'adjoinable', 'P', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:Neg/fin', 'PF:from', '-SPEC:iR', '-SPEC:T/fin', 'PHI:NUM:_', '-SPEC:*', '-SPEC:P', 'PHI:DET:_', '-float', '-COMP:ADV', 'PHI:PER:_', '!COMP:*', 'COMP:D', 'LANG:EN', '-SPEC:N', 'TAIL:V,+SEM:directional', 'LF:from', 'ARG', '-VAL'}
gave            ['LANG:EN']
give-           {'PF:give', 'V', 'ASP', 'SPEC:TO/inf', 'LF:give', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'CLASS:DITR', 'SPEC:D', 'COMP:P', '+SEM:directional', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', '-COMP:FIN', '!COMP:*', 'COMP:D', 'LANG:EN', 'SPEC:P', 'ARG', '-VAL'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-SEM:directional', 'LANG:IT', '-COMP:C/fin', '-COMP:A', '-SPEC:T/fin', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'PF:Giuseppe', 'N', 'SPEC:A', 'COMP:R/D', 'COMP:R', '-SPEC:N', 'LF:Giuseppe', '-COMP:D'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'V', 'ASP', 'SPEC:TO/inf', 'SEM:internal', 'COMP:A/inf', '-COMP:N', '-COMP:V', 'COMP:P', 'ARG', 'ASP:BOUNDED', '-COMP:P', 'CLASS:TR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-SPEC:*', '-COMP:v', 'PHI:PER:_', 'PF:haluaa', '!COMP:*', 'LF:want', 'COMP:D', 'SPEC:P', 'LANG:FI', '-VAL'}
hairitsee       ['LANG:FI']
hairitse-       {'V', '-VAL', 'ASP', 'SPEC:TO/inf', 'PF:hairitsee', '-COMP:N', '-COMP:V', 'SPEC:D', 'COMP:P', 'ARG', 'SPEC:ADV', 'LF:disturb', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', '-COMP:FIN', 'SPEC:P', 'LANG:FI', '!COMP:D'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'SPEC:D', 'COMP:P', 'ARG', 'SPEC:ADV', 'SPEC:*', 'PF:ha', 'LF:have', 'LANG:IT', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:v', 'PHI:PER:_', 'COMP:T', 'SPEC:P', 'SEM:internal', '-ASP', '-VAL'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'V', 'ASP', 'SPEC:TO/inf', 'PF:havia', '-COMP:N', '-COMP:V', 'SPEC:D', 'COMP:P', 'ARG', 'CLASS:INTR', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'LF:disappear', 'SPEC:P', '-COMP:D', 'LANG:FI', '-VAL'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'V', '-VAL', 'ASP', 'SPEC:TO/inf', 'LF:admire', '-COMP:N', '-COMP:V', 'COMP:P', 'ARG', '-COMP:P', 'CLASS:TR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', 'PF:ihaile-', '-COMP:v', 'PHI:PER:_', '-COMP:FIN', '!COMP:*', 'COMP:D', 'SPEC:P', 'LANG:FI', '!COMP:D'}
il              {'-SPEC:C', '-SPEC:V', '-COMP:D', 'adjoinable', '-COMP:T/fin', '-SPEC:INF', 'COMP:N', '-SPEC:Neg/fin', 'LANG:IT', '-SPEC:MA/lla', '-SPEC:T/fin', '-SPEC:P', 'LF:the', '-COMP:uR', '!COMP:*', 'OP', '!PROBE:N', 'PF:il', 'D', '-SPEC:N', '-SPEC:D', '-ARG'}
i               {'-SPEC:C', '-SPEC:V', '-COMP:D', 'adjoinable', '-COMP:T/fin', '-SPEC:INF', 'COMP:N', '-SPEC:Neg/fin', 'LANG:IT', '-SPEC:MA/lla', '-SPEC:T/fin', '-SPEC:P', 'LF:the', '-COMP:uR', '!COMP:*', 'OP', '!PROBE:N', 'PF:il', 'D', '-SPEC:N', '-SPEC:D', '-ARG'}
in              {'-SPEC:v', '-SPEC:iWH', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'adjoinable', 'P', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:Neg/fin', 'LANG:IT', '-SPEC:iR', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:P', '-COMP:ADV', 'PHI:PER:_', 'PF:in', '!COMP:*', 'COMP:D', '-SPEC:N', 'LF:in', 'ARG', '-VAL'}
infermieri      {'-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', 'LF:nurses', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'LANG:IT', 'PF:infermieri', '-COMP:C/fin', '-COMP:A', '-SPEC:T/fin', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D'}
is              ['LANG:EN']
be-             {'V', 'ASP', 'SPEC:TO/inf', 'PF:be', '-COMP:N', 'LF:be', 'SPEC:D', '-COMP:V', 'COMP:P', '-COMP:TO/inf', 'SPEC:ADV', 'COPULA', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:v', '!COMP:*', 'LANG:EN', 'SPEC:P', '-ARG', '-VAL'}
istuuko         ['LANG:FI']
istuu-          {'V', 'ASP', 'SPEC:TO/inf', 'LANG:FI', '-COMP:N', '-COMP:V', 'SPEC:D', 'COMP:P', 'ARG', 'CLASS:INTR', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', 'LF:sit', '-COMP:v', 'PHI:PER:_', 'SPEC:P', '-COMP:D', 'PF:istuu', '-VAL'}
John            ['LANG:EN']
John-           {'LF:John', '-adjoinable', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-SEM:directional', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', 'PF:John', '-SPEC:uWH', 'SPEC:A', 'N', '-COMP:ADV', 'COMP:R/D', 'LANG:EN', 'COMP:R', '-SPEC:N', '-COMP:D'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', 'LF:Jukka', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-SEM:directional', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'PF:Jukka', 'COMP:R', '-SPEC:N', '-COMP:D', 'LANG:FI'}
juosten         ['LANG:FI']
juokse-         {'V', 'PF:juokse-', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:V', 'COMP:P', 'ARG', 'LF:run', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:P', 'LANG:FI', '-VAL'}
istuu           ['LANG:FI']
istu-           {'V', 'PF:istuu', 'SPEC:TO/inf', 'ASP', '-COMP:N', '-COMP:V', 'COMP:P', 'ARG', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', 'LF:sit', '-COMP:v', 'PHI:PER:_', 'SPEC:P', 'LANG:FI', '-VAL'}
kaksi           {'PHI:NUM:_', 'COMP:N', 'NUM', 'LANG:FI', 'PHI:PER:_', 'TAIL:ARG,VAL,FIN', 'PHI:NUM:SG', 'PF:kaksi', 'SPEC:*', 'COMP:n', 'ARG', 'PHI:DET:_', 'LF:two', '-VAL'}
kaksi           {'COMP:N', 'TAIL:ARG,ASP:BOUNDED', 'NUM', 'TAIL:*POL:NEG', 'PF:kaksi', 'LANG:EN', 'COMP:n', 'SPEC:*', 'LF:two'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'COMP:N', 'PF:kaksi', 'NUM', 'COMP:n', 'LANG:FI', 'LF:two', 'SPEC:*'}
kaupunkia       ['LANG:EN']
kaupunki        {'LF:city', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', '-SPEC:INF', '-COMP:P', '-SPEC:FORCE', 'PF:kaupunki', '-COMP:C/fin', '-COMP:A', '-SPEC:T/fin', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D', 'LANG:FI'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'V', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:V', 'COMP:P', 'ARG', 'LF:order', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PF:kaske', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', '!COMP:A/inf', 'PHI:PER:_', 'SEM:external', 'SPEC:P', 'LANG:FI', '-VAL'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'LF:watch', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'COMP:R', '-SPEC:N', 'PF:kello', '-COMP:D', 'LANG:FI'}
kello0-         {'0', 'PF:kello', 'SPEC:D', '2SPEC', 'LF:watch', 'LANG:FI'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'PF:key', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'LANG:EN', 'COMP:R', '-SPEC:N', '-COMP:D', 'LF:key'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-SEM:directional', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'LF:book', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D', 'LANG:FI', 'PF:kirja'}
kohti           {'-SPEC:v', '-SPEC:iWH', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'adjoinable', 'P', '-COMP:T/fin', 'ARG', '-SPEC:INF', 'TAIL:V', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:iR', 'PF:kohti', '-SPEC:T/fin', 'SPEC:*', '-SPEC:P', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:ADV', 'LF:towards', 'PHI:PER:_', '!COMP:*', 'COMP:D', '-SPEC:N', 'LANG:FI', '-VAL'}
koko            {'LF:all', '-SPEC:C', '-SPEC:V', '-COMP:D', 'adjoinable', '-COMP:T/fin', '-SPEC:INF', 'PF:koko', 'COMP:N', '-SPEC:Neg/fin', '-SPEC:MA/lla', '-SPEC:T/fin', 'TAIL:T', '-SPEC:P', '-COMP:uR', '!COMP:*', 'OP', '!PROBE:N', 'D', '-SPEC:N', '-SPEC:D', 'LANG:FI', '-ARG'}
kuka            ['LANG:FI']
kuka-           {'LF:who', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'PF:kuka', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D', 'LANG:FI', 'PHI'}
kuorsaa-        {'V', 'PF:kuorsaa', 'SPEC:TO/inf', 'ASP', '-COMP:N', '-COMP:WH', '-COMP:T/fin', 'COMP:P', '-COMP:V', 'ARG', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', 'LF:snore', '-COMP:v', 'PHI:PER:_', 'SPEC:P', '-COMP:D', 'LANG:FI', '-VAL'}
kuorsaamalla    ['LANG:FI']
lahella         {'COMP:v', '-SPEC:iWH', 'COMP:V', '-SPEC:C', 'P', '!SPEC:*', 'PHI:DET:_', '-SPEC:Neg/fin', '-SPEC:iR', '-COMP:C/fin', 'PHI:PER:_', '!PROBE:V', 'COMP:D', 'LANG:FI', 'ARG', '-SPEC:v', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', '-COMP:FORCE', 'adjoinable', '-COMP:T/fin', 'LF:near', '-SPEC:INF', '-SPEC:FORCE', 'PHI:NUM:_', 'PF:lahella', 'INF', '-SPEC:T/fin', '-SPEC:P', '-COMP:ADV', '!COMP:*', 'VAL', '-SPEC:N', 'SPEC:*', '!SPEC:D'}
lahella         {'-SPEC:v', '-VAL', '-SPEC:iWH', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'adjoinable', 'P', '-COMP:T/fin', 'ARG', 'LF:near', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:Neg/fin', 'PF:lahella', '-SPEC:iR', '-SPEC:T/fin', 'SPEC:*', 'PHI:NUM:_', '-SPEC:P', 'PHI:DET:_', '-COMP:ADV', 'PHI:PER:_', '!COMP:*', 'COMP:D', '-SPEC:N', 'LANG:FI', '!COMP:D'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'V', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:V', 'SPEC:D', 'COMP:P', 'ARG', 'CLASS:INTR', 'LF:leave', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', 'PF:lahtea', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'COMP:PP', 'SPEC:P', '-COMP:D', 'LANG:FI', '-VAL'}
lavano          ['LANG:IT']
lava-           {'V', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'LF:wash', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:IT', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', '!COMP:*', 'PF:lava', 'COMP:D', 'SPEC:P', 'ARG', '-VAL'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-SPEC:C', '-SPEC:V', '-COMP:D', 'LF:D', 'adjoinable', '-COMP:T/fin', '-SPEC:INF', 'COMP:N', '-SPEC:Neg/fin', 'LANG:IT', '-SPEC:MA/lla', '-SPEC:T/fin', '-SPEC:P', '-COMP:uR', '!COMP:*', 'OP', '!PROBE:N', 'D', '-SPEC:N', 'PF:le', '-SPEC:D', '-ARG'}
leaves          ['LANG:EN']
leave           {'V', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'LF:leave', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'LANG:EN', 'PF:leave', 'SPEC:P', 'ARG', '!SPEC:D', '-VAL'}
leave-          {'V', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'PHI:GEN:_', '-COMP:T/fin', '-COMP:V', 'COMP:P', 'LF:leave', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'LANG:EN', 'PF:leave', 'SPEC:P', 'ARG', '!SPEC:D', '-VAL'}
like-           {'V', 'ASP', 'SPEC:TO/inf', 'PF:like', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'LF:like', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '!COMP:D', '-COMP:v', 'PHI:PER:_', 'LANG:EN', 'SPEC:P', 'ARG', '-VAL'}
likes           ['LANG:EN']
like            {'V', 'ASP', 'SPEC:TO/inf', 'PF:like', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'LF:like', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '!COMP:D', '-COMP:v', 'PHI:PER:_', 'LANG:EN', 'SPEC:P', 'ARG', '-VAL'}
little          ['LANG:EN']
little-         {'PF:little-', '0', 'LANG:EN', 'SPEC:D', '2SPEC', 'LF:little'}
lle             {'LF:for', '-SPEC:v', '-SPEC:iWH', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'adjoinable', 'PF:P(lle)', 'P', '-COMP:T/fin', 'ARG', '-SPEC:INF', '+SEM:directional', '-SPEC:FORCE', '-SPEC:Neg/fin', 'PHI:NUM:_', '-SPEC:iR', '-SPEC:T/fin', 'PHI:DET:_', '-SPEC:*', '-SPEC:P', '-COMP:ADV', 'PHI:PER:_', '!COMP:*', 'COMP:D', '-SPEC:N', 'TAIL:V,+SEM:directional', 'LANG:FI', '-VAL'}
lla             {'-SPEC:v', '-SPEC:iWH', '-COMP:uWH', '-SPEC:ADV', 'LF:by', '-SPEC:C', '-SPEC:C/fin', '-SPEC:V', 'TAIL:*V', '-COMP:N', 'adjoinable', 'P', '-COMP:T/fin', 'ARG', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:Neg/fin', 'SPEC:*', '-SPEC:iR', '-SPEC:T/fin', 'TAIL:T', 'PHI:NUM:_', '-SPEC:P', 'PHI:DET:_', '-COMP:ADV', 'PHI:PER:_', '!COMP:*', 'COMP:D', '-SPEC:N', 'PF:P(lla)', 'LANG:FI', '-VAL'}
Luisa           ['LANG:IT']
Luisa-          {'-SPEC:ADV', 'LF:Luisa', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'LANG:IT', '-SEM:directional', '-COMP:C/fin', '-COMP:A', '-SPEC:T/fin', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D', 'PF:Luisa'}
lukemalla       ['LANG:FI']
luke-           {'V', 'ASP', 'SPEC:TO/inf', 'PF:luke', 'LF:read', '-COMP:N', '-COMP:V', 'COMP:P', 'ARG', '-COMP:P', 'CLASS:TR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', '!COMP:*', 'COMP:D', 'SPEC:P', 'LANG:FI', '-VAL'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'V', '-VAL', 'LF:find', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:V', 'COMP:P', 'ARG', 'ASP:BOUNDED', '-COMP:P', 'CLASS:TR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', '!COMP:*', 'COMP:D', 'SPEC:P', 'LANG:FI', 'PF:loyta-', '!COMP:D'}
Mary            ['LANG:EN']
Mary-           {'-adjoinable', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:D', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-SEM:directional', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'LANG:EN', 'COMP:R', 'LF:Mary', '-SPEC:N', 'PF:Mary'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-adjoinable', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-SEM:directional', 'PF:Merja', '-COMP:C/fin', '-COMP:A', '-SPEC:T/fin', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'COMP:R', 'LF:Merja', '-SPEC:N', '-COMP:D', 'LANG:FI'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'-SPEC:Neg/fin', '-SPEC:T/fin', 'TAIL:T', 'COMP:v', 'PF:malla', 'LF:by', 'ADV', 'MA/inf', '-SPEC:N', 'adjoinable', '-SPEC:FORCE', 'LANG:FI', 'SPEC:*'}
meren           ['LANG:FI']
mere-           {'LF:ocean', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:T/fin', 'PF:meri', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D', 'LANG:FI'}
mistake         {'-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', 'PF:mistake', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'LANG:EN', 'COMP:R', '-SPEC:N', '-COMP:D', 'LF:mistake'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'PF:mika-', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', 'LF:what', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D', 'LANG:FI'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'V', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'COMP:P', '+SEM:directional', '-COMP:P', 'CLASS:TR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', 'PF:move', 'LANGN:EN', '-COMP:v', 'PHI:PER:_', '!COMP:*', 'COMP:D', 'SPEC:P', 'ARG', 'LF:move', '-VAL'}
mukavasti       ['LANG:EN']
mukava-         {'0', 'PF:mukavasti', 'SPEC:D', '2SPEC', 'LF:comfortably', 'LANG:FI'}
must            {'-SPEC:v', 'COMP:Neg', 'COMP:v', 'SPEC:TO/inf', 'COMP:V', '-SPEC:C/fin', '-SPEC:V', 'LF:must', 'PHI:GEN:_', 'FIN', 'SPEC:D', '-COMP:T/fin', '!SPEC:*', 'T/fin', '-COMP:INF', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:*', '-SPEC:T/fin', 'SPEC:INF', 'T', 'PHI:PER:_', '!PROBE:V', '!COMP:*', 'COMP:D', 'VAL', 'MODAL', 'LANG:EN', 'COMP:T/prt', '-SPEC:N', 'PF:must', 'ARG'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'V', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:V', 'LF:sell', 'COMP:P', 'ARG', 'ASP:BOUNDED', '-COMP:P', 'CLASS:TR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', '!COMP:*', 'COMP:D', 'SPEC:P', 'LANG:FI', 'PF:myy', '-VAL'}
naki            ['LANG:FI']
nake-           {'V', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:V', 'COMP:P', 'ARG', 'ASP:BOUNDED', '-COMP:P', 'CLASS:TR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:MA/inf', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', '!COMP:*', 'COMP:D', '-COMP:ESSA/inf', 'LF:see', 'SPEC:P', 'PF:nake', 'LANG:FI', '-VAL'}
nayttaa         ['LANG:FI']
naytta-         {'V', 'ASP', 'SPEC:TO/inf', 'SEM:internal', '-COMP:N', '-COMP:V', 'SPEC:D', 'COMP:P', 'ARG', 'PF:naytta', 'SPEC:ADV', 'LF:seem', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', '!COMP:VA/inf', 'SPEC:P', 'LANG:FI', '-VAL'}
ndo             {'COMP:v', 'COMP:V', '-SPEC:V', '-COMP:FORCE', '-COMP:T/fin', 'LF:ing', '-COMP:C/fin', 'INF', '-SPEC:T/fin', '!PROBE:V', '!COMP:*', 'VAL', '?ARG', 'PRG', 'LANG:EN', 'PF:PRG'}
ne              {'PHI:PER:3', '-SPEC:C', '-SPEC:V', '-COMP:D', 'adjoinable', '-COMP:T/fin', '-SPEC:INF', 'PF:ne', 'COMP:N', 'PHI:NUM:PL', '-SPEC:Neg/fin', '-SPEC:MA/lla', '-SPEC:T/fin', '-SPEC:P', '-COMP:uR', '!COMP:*', 'OP', '!PROBE:N', 'LF:those', 'D', '-SPEC:N', '-SPEC:D', 'LANG:FI', '-ARG'}
niiden          ['LANG:EN']
nen             {'LF:ing', 'A', '-SPEC:A', '-SPEC:D', 'PF:a', 'adjoinable', 'COMP:0', 'TAIL:D', 'LANG:FI', 'SPEC:*'}
not             {'PHI:NUM:_', 'LF:not', '-SPEC:T/fin', '-COMP:C', 'PHI:PER:_', '-COMP:FIN', 'PF:not', 'POL:NEG', '!COMP:*', 'SPEC:*', 'LANG:EN', 'PHI:GEN:_', 'Neg', '-COMP:D', 'ARG', 'PHI:DET:_', '-VAL'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'V', 'ASP', 'SPEC:TO/inf', 'PF:nukku', '-COMP:N', '-COMP:T/fin', 'SPEC:D', '-COMP:V', 'COMP:P', 'ARG', 'CLASS:INTR', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', '-COMP:Neg/fin', 'LF:sleep', 'SPEC:P', '-COMP:D', 'LANG:FI', '-COMP:T', '-VAL'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', 'PF:omaisuuden', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'COMP:R', '-SPEC:N', 'LF:possessions', '-COMP:D', 'LANG:FI'}
operatoria      ['LANG:IT']
operatoria-     {'LANG:IT', '0', 'PF:operatoria', 'LF:operation', 'SPEC:D', '2SPEC'}
ostaa           ['LANG:FI']
osta-           {'V', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:V', 'COMP:P', 'ARG', 'ASP:BOUNDED', '-COMP:P', 'CLASS:TR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'LF:buy', '!COMP:*', 'COMP:D', 'SPEC:P', 'LANG:FI', 'PF:osta', '-VAL'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'LANG:FI', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', 'SEM:nonreferential', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-SPEC:P', 'SPEC:A', 'N', 'LF:day', 'COMP:R/D', '-COMP:ADV', 'COMP:R', '-SPEC:N', '-COMP:D', 'PF:paiva'}
Pariisia        ['LANG:FI']
Pariisi-        {'PF:Pariisi', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', 'LF:Paris', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D', 'LANG:FI'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', 'LF:Pekka', '-SPEC:INF', '-SPEC:FORCE', '-SEM:directional', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', 'PF:Pekka', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D', 'LANG:FI'}
pelottaa        ['LANG:FI']
pelkaa-         {'V', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:V', 'COMP:P', 'ARG', '-COMP:P', 'CLASS:TR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:NUM:_', 'LF:fear', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:v', 'PHI:PER:_', '!COMP:*', 'PF:pelkaa', 'COMP:D', 'SPEC:P', 'LANG:FI', '-VAL'}
persuades       ['LANG:EN']
persuade-       {'V', 'COMP:TO/inf', 'ASP', 'SPEC:TO/inf', 'LF:persuade', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PF:persuade', 'PHI:PER:_', 'LANG:EN', 'SEM:external', 'SPEC:P', 'ARG', '-VAL'}
peruuntui       ['LANG:FI']
peruuntu-       {'V', 'ASP', 'SPEC:TO/inf', 'PF:peruuntui', 'LANG:FI', '-COMP:N', '-COMP:V', 'SPEC:D', 'COMP:P', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'LF:cancelled', 'SPEC:P', 'ARG', '-VAL'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'V', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:V', 'COMP:P', 'ARG', 'ASP:BOUNDED', '-COMP:P', 'LF:wash', 'CLASS:TR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', 'PF:pese', '-COMP:v', 'PHI:PER:_', '!COMP:*', 'COMP:D', 'SPEC:P', 'LANG:FI', '-VAL'}
pese-           {'V', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:V', 'COMP:P', 'ARG', '-COMP:P', 'LF:wash', 'CLASS:TR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', 'PF:pese', '-COMP:v', 'PHI:PER:_', '!COMP:*', 'COMP:D', 'SPEC:P', 'LANG:FI', '-VAL'}
petardi         {'PF:petardi', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', 'LF:firecrackers', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'LANG:IT', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D'}
pieni           ['LANG:FI']
pieni-          {'PF:pieni-', '0', 'SPEC:D', '2SPEC', 'LF:small', 'LANG:FI'}
poikien         ['LANG:FI']
poika-          {'LF:boy', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'PF:poika', 'N', 'SPEC:A', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D', 'LANG:FI'}
puhelinta       ['LANG:FI']
puhelin-        {'0', 'PF:puhelin', 'SPEC:D', '2SPEC', 'LANG:FI', 'LF:phone'}
punainen        ['LANG:FI']
puna-           {'PF:puna-', '0', 'SPEC:D', '2SPEC', 'LF:red', 'LANG:FI'}
presupposto     {'-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'LANG:IT', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'LF:presupposition', 'COMP:R', '-SPEC:N', '-COMP:D', 'PF:presupposto'}
primary         {'-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'LANG:IT', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', 'LF:nurse', '-SPEC:P', 'PF:primary', '-COMP:v', '-SPEC:R', '-SPEC:uWH', 'SPEC:A', 'N', '-COMP:ADV', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D'}
promises        ['LANG:EN']
promise-        {'V', 'LF:promise', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'SPEC:D', 'COMP:P', 'ARG', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'PF:promise', 'COMP:D', 'LANG:EN', 'SPEC:P', 'SEM:internal', '-VAL'}
pyytaa          ['LANG:FI']
pyyta-          {'V', 'ASP', 'SPEC:TO/inf', 'LANG:FI', '-COMP:N', '-COMP:V', 'COMP:P', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', 'LF:ask', '-COMP:v', 'PHI:PER:_', 'PF:pyyda', 'SEM:external', 'SPEC:P', 'ARG', '-VAL'}
raukesi         ['LANG:FI']
raukea-         {'V', '-VAL', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:V', 'COMP:P', 'ARG', 'SPEC:ADV', '-SPEC:FORCE', 'LF:terminate', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'SPEC:P', 'LANG:FI', 'PF:raukea'}
red             ['LANG:EN']
red-            {'0', 'LANG:EN', 'PF:red', 'SPEC:D', '2SPEC', 'LF:red'}
saavuttaa       ['LANG:FI']
saavutta-       {'V', '-VAL', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:V', 'COMP:P', 'ARG', 'ASP:BOUNDED', '-COMP:P', 'CLASS:TR', '-SPEC:FORCE', 'SPEC:ADV', 'PF:saavutta-', 'PHI:NUM:_', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:v', 'PHI:PER:_', 'LF:reach', '!COMP:*', 'COMP:D', 'SPEC:P', 'LANG:FI', '!COMP:D'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'V', 'PF:sano-', 'COMP:VA/inf', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:V', 'SPEC:D', 'COMP:P', 'ARG', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', 'LF:say', '-COMP:v', 'PHI:PER:_', 'SPEC:P', 'COMP:FORCE', 'LANG:FI', '-VAL'}
said            ['LANG:EN']
say'            {'V', 'PF:say', '!COMP:FORCE', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'SPEC:D', 'COMP:P', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', 'LF:say', '-COMP:v', 'PHI:PER:_', 'LANG:EN', 'SPEC:P', 'ARG', '-VAL'}
say-            {'V', 'PF:say', '!COMP:FORCE', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'SPEC:D', 'COMP:P', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', 'LF:say', '-COMP:v', 'PHI:PER:_', 'LANG:EN', 'SPEC:P', 'ARG', '-VAL'}
sala            ['LANG:IT']
sala-           {'-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'LANG:IT', 'LF:room', '-COMP:C/fin', '-COMP:A', '-SPEC:T/fin', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'COMP:R', 'PF:sala', '-SPEC:N', '-COMP:D'}
scoppiati       ['LANG:IT']
scoppia-        {'PF:scoppia', 'V', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:IT', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'LF:explode', 'SPEC:P', 'ARG', '-VAL'}
sen             {'LF:the/that', '-SPEC:C', '-SPEC:V', '-COMP:D', 'TAIL:*POL:NEG', 'adjoinable', '-COMP:T/fin', '-SPEC:INF', 'TAIL:ASP', 'COMP:N', 'TAIL:PHI', '-SPEC:Neg/fin', '-SPEC:MA/lla', '-SPEC:T/fin', 'PF:sen', '-SPEC:P', '-COMP:uR', '!COMP:*', 'OP', '!PROBE:N', 'D', '-SPEC:N', '-SPEC:D', 'LANG:FI', '-ARG'}
se'             {'LF:the/that', '-SPEC:C', '-SPEC:V', '-COMP:D', 'adjoinable', '-COMP:T/fin', '-SPEC:INF', 'COMP:N', '-SPEC:Neg/fin', '-SPEC:MA/lla', '-SPEC:T/fin', '-SPEC:P', '-COMP:uR', '!COMP:*', 'OP', '!PROBE:N', 'D', '-SPEC:N', '-SPEC:D', 'PF:se', 'LANG:FI', '-ARG'}
sentenza        {'-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', 'PF:sentenza', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'LANG:IT', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D', 'LF:sentence'}
Seine           ['LANG:EN']
Seine-          {'-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', 'LF:Seine', '-SPEC:INF', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'PF:Seine', 'LANG:EN', 'COMP:R', '-SPEC:N', '-COMP:D'}
sembrano        ['LANG:IT']
sembra-         {'V', 'SPEC:TO/inf', '-COMP:N', '-COMP:V', 'SPEC:D', 'COMP:P', 'PF:sembra', 'SPEC:ADV', 'LF:seem', '-SPEC:FORCE', '-SPEC:T/fin', '-COMP:v', 'LANG:EN', '!COMP:ARE/inf', 'SPEC:P', '-COMP:D', '-ASP', '-ARG', '-VAL'}
sleeps          ['LANG:EN']
sleep           {'V', 'ASP', 'SPEC:TO/inf', 'PF:sleep', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'SPEC:D', 'COMP:P', 'CLASS:INTR', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'LANG:EN', 'LF:sleep', 'SPEC:P', '-COMP:D', 'ARG', '-VAL'}
sleep-          {'V', 'ASP', 'SPEC:TO/inf', 'PF:sleep', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'SPEC:D', 'COMP:P', 'CLASS:INTR', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'LANG:EN', 'LF:sleep', 'SPEC:P', '-COMP:D', 'ARG', '-VAL'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', 'PF:sopimus', '-SPEC:V', '-COMP:N', 'COMP:uR', 'LF:agreement', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'COMP:R', '-SPEC:N', '!COMP:A/inf', '-COMP:D', 'LANG:FI'}
spinge          ['LANG:IT']
spinge-         {'V', 'ASP', 'SPEC:TO/inf', 'LF:push', '-COMP:N', 'PHI:GEN:_', '-COMP:V', '-COMP:P', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'LANG:IT', 'PHI:DET:_', '-SPEC:T/fin', '!COMP:D', '-COMP:v', 'PF:spinge', 'PHI:PER:_', 'SPEC:P', 'ARG', '-VAL'}
ssa             {'-SPEC:v', '-SPEC:iWH', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'adjoinable', 'P', '-COMP:T/fin', 'ARG', '-SPEC:INF', 'TAIL:V', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:iR', '-SPEC:T/fin', 'SPEC:*', 'PHI:NUM:_', 'PF:ssa', '-SPEC:P', 'PHI:DET:_', '-COMP:ADV', 'PHI:PER:_', '!COMP:*', 'COMP:D', '-SPEC:N', 'COMP:n/MA', 'LF:in', 'LANG:FI', '-VAL'}
stanno          ['LANG:IT']
sta-            {'V', 'SPEC:TO/inf', 'LF:stay', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'SPEC:D', 'COMP:P', 'ARG', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', 'COMP:PRG', '-SPEC:T/fin', '-COMP:v', 'PF:sta', 'PHI:PER:_', 'LANG:EN', 'SPEC:P', 'SEM:internal', '-ASP', '-VAL'}
sti             {'-SPEC:Neg/fin', '-SPEC:T/fin', 'TAIL:T', 'LF:by', '!COMP:*', 'ADV', '-SPEC:N', 'adjoinable', 'PF:sti', '-SPEC:FORCE', 'LANG:FI', '-ARG', 'SPEC:*'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', 'LF:socks', 'PF:sukka-', '-SPEC:INF', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D', 'LANG:FI'}
talo            {'PF:talo', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'LF:house', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D', 'LANG:FI'}
tama            ['LANG:EN']
tama-           {'-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'LF:this', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', 'PF:tama', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D', 'LANG:FI', 'PHI'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'V', 'SPEC:TO/inf', 'LF:must', '-COMP:N', 'FIN', '-COMP:V', 'COMP:P', 'SPEC:P', 'ARG', 'PF:taytyy', 'SPEC:ADV', 'SPEC:*', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'MODAL', '!COMP:A/inf', 'LANG:FI', '-ASP', '-VAL'}
teki            ['LANG:FI']
teke-           {'V', '-VAL', 'LF:make', 'ASP', 'SPEC:TO/inf', '-COMP:N', '-COMP:V', '-COMP:A/inf', 'COMP:P', 'ARG', 'ASP:BOUNDED', '-COMP:P', 'CLASS:TR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', '!COMP:*', 'COMP:D', 'SPEC:P', 'LANG:FI', 'PF:teke', '!COMP:D'}
that            {'FORCE', 'COMP:T/fin', '-SPEC:*', '!COMP:*', 'PF:that', 'LANG:EN', 'COMP:C/fin', 'FIN', '!PROBE:T/fin', 'LF:that', '-ARG', '-VAL'}
the             {'-SPEC:C', '-SPEC:V', '-COMP:D', 'PHI:DEF:DEF', 'adjoinable', '-COMP:T/fin', '-SPEC:INF', 'COMP:N', '-SPEC:Neg/fin', '-SPEC:MA/lla', '-SPEC:T/fin', 'PF:the', '-SPEC:P', 'LF:the', '-COMP:uR', '!COMP:*', 'OP', '!PROBE:N', 'LANG:EN', 'D', '-SPEC:N', '-SPEC:D', '-ARG'}
to              {'-SPEC:v', '-SPEC:iWH', '-COMP:uWH', 'LF:to', '-SPEC:ADV', '-SPEC:C', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'adjoinable', 'P', '-COMP:T/fin', 'PHI:GEN:_', 'PF:to', '-SPEC:INF', '+SEM:directional', '-SPEC:FORCE', '-SPEC:Neg/fin', 'PHI:NUM:_', '-SPEC:iR', '-SPEC:T/fin', 'PHI:DET:_', '-SPEC:*', '-SPEC:P', '-float', '-COMP:ADV', 'PHI:PER:_', '!COMP:*', 'COMP:D', 'LANG:EN', '-SPEC:N', 'TAIL:V,+SEM:directional', 'ARG', '-VAL'}
to_inf          {'-SPEC:v', 'COMP:v', 'COMP:V', '-SPEC:V', '-COMP:FORCE', 'adjoinable', '-COMP:T/fin', 'LF:TO/inf', '-COMP:C/fin', 'INF', '-SPEC:T/fin', '!PROBE:V', '!COMP:*', '?ARG', 'LANG:EN', 'PF:TO/inf', 'TO/inf', '-VAL'}
towards         {'-SPEC:v', '-SPEC:iWH', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'adjoinable', 'P', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:INF', 'PHI:DET:_', 'TAIL:V', '-SPEC:Neg/fin', 'PF:towards', '-SPEC:iR', '-SPEC:FORCE', '-SPEC:T/fin', '-SPEC:*', '-SPEC:P', 'PHI:NUM:_', '-float', '-COMP:ADV', 'LF:towards', 'PHI:PER:_', '!COMP:*', 'COMP:D', 'LANG:EN', '-SPEC:N', 'ARG', '-VAL'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'V', 'ASP', 'SPEC:TO/inf', 'PF:tonaise', '-COMP:N', '-COMP:V', 'COMP:P', 'ARG', '-COMP:P', 'CLASS:TR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', '!COMP:*', 'COMP:D', 'LF:nudge', 'SPEC:P', 'LANG:FI', '-VAL'}
tta             {'-SPEC:v', '-SPEC:iWH', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C', '-SPEC:C/fin', 'ADV', '-SPEC:V', '-COMP:N', 'adjoinable', 'P', '-COMP:T/fin', 'ARG', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:Neg/fin', 'SPEC:*', '-SPEC:iR', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:P', 'LF:without', '-COMP:ADV', 'PHI:PER:_', '!COMP:*', 'COMP:D', '-SPEC:N', 'COMP:n/MA', 'PF:tta', 'LANG:FI', '-VAL'}
tries           ['LANG:EN']
try-            {'PF:try', 'V', 'ASP', '!COMP:-ARG', 'SPEC:TO/inf', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'SPEC:D', 'COMP:P', 'LF:try', 'ARG', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '!COMP:TO/inf', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'LANG:EN', 'SPEC:P', 'SEM:internal', '-VAL'}
verifiche       {'LF:verification', '-SPEC:ADV', 'PF:verifiche', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'LANG:IT', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'V', 'ASP', 'SPEC:TO/inf', 'PF:virtaa', '-COMP:N', '-COMP:V', 'SPEC:D', 'COMP:P', 'ARG', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '!COMP:P', '-SPEC:T/fin', 'LF:flow', '-COMP:v', 'PHI:PER:_', 'SPEC:P', '-COMP:D', 'LANG:FI', '-VAL'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'V', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'ARG', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PF:volu', 'PHI:DET:_', '-SPEC:T/fin', '-SPEC:*', '-COMP:v', 'PHI:PER:_', '!COMP:*', 'LF:want', 'LANG:EN', 'SPEC:P', 'SEM:internal', '-VAL'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'V', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'SEM:achievement', 'PHI:GEN:_', '-COMP:V', 'COMP:P', 'ASP:BOUNDED', 'PF:voitta', '-COMP:P', 'CLASS:TR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'LF:win', '!COMP:*', 'COMP:D', 'LANG:EN', 'SPEC:P', 'ARG', '-VAL'}
wants           ['LANG:EN']
want-           {'V', 'COMP:TO/inf', 'ASP', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'COMP:P', '-COMP:P', 'CLASS:TR', '-SPEC:FORCE', 'SPEC:ADV', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', '!COMP:*', 'LF:want', 'COMP:D', '-SPEC:TO/inf', 'LANG:EN', 'PF:want', 'SPEC:P', 'ARG', '-VAL'}
what            ['LANG:EN']
what-           {'-SPEC:ADV', 'PHI_N', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', 'LF:what', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'PF:what', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-SPEC:P', 'SPEC:A', 'N', '-COMP:ADV', 'COMP:R/D', 'LANG:EN', 'COMP:R', '-SPEC:N', '-COMP:D'}
which           {'LF:which', '-SPEC:C', '-SPEC:V', '-COMP:D', 'adjoinable', '-COMP:T/fin', '-SPEC:INF', 'PF:which', 'COMP:N', '-SPEC:Neg/fin', '-SPEC:MA/lla', '-SPEC:T/fin', '-SPEC:P', '-COMP:uR', '!COMP:*', 'OP', '!PROBE:N', 'LANG:EN', 'D', '-SPEC:N', 'OP:WH', '-SPEC:D', '-ARG'}
who             ['LANG:EN']
who-            {'PF:who', 'LF:who', '-SPEC:ADV', 'PHI_N', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-SPEC:P', 'SPEC:A', 'N', '-COMP:ADV', 'COMP:R/D', 'LANG:EN', 'COMP:R', '-SPEC:N', '-COMP:D'}
whether         {'FORCE', 'COMP:T/fin', 'PF:whether', 'Q', 'LF:whether', 'COMP:C/fin', 'FIN', 'OP:Q', '-SPEC:*', '!COMP:*', 'OP', 'LANG:EN', '!PROBE:T/fin', 'OP:WH', '-ARG', '-VAL'}
yrittaa         ['LANG:FI']
yritta-         {'V', 'ASP', '!COMP:-ARG', 'SPEC:TO/inf', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'SPEC:D', 'COMP:P', 'LF:try', 'SPEC:P', 'ARG', 'SPEC:ADV', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', 'PF:yritta', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'LANG:EN', '!COMP:A/inf', 'SEM:internal', '-VAL'}
mina            ['LANG:EN']
mina-           {'-SPEC:ADV', 'PHI_N', '-COMP:AUX', '-SPEC:C/fin', 'PF:mina', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-SPEC:P', 'SPEC:A', 'N', '-COMP:ADV', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D', 'LF:I', 'LANG:FI'}
sina            ['LANG:EN']
sina-           {'PF:sina', '-SPEC:ADV', 'PHI_N', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'LF:you', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-SPEC:P', 'SPEC:A', 'N', '-COMP:ADV', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D', 'LANG:FI'}
han             ['LANG:EN']
han-            {'PF:han', '-SPEC:ADV', 'PHI_N', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', 'LF:s/he', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-SPEC:P', 'SPEC:A', 'N', '-COMP:ADV', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D', 'LANG:FI'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'PF:me', '-SPEC:ADV', 'PHI_N', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', 'LF:we', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-SPEC:P', 'SPEC:A', 'N', '-COMP:ADV', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D', 'LANG:FI'}
te              ['LANG:EN']
te-             {'-SPEC:ADV', 'PHI_N', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', 'PF:te', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'LF:you', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-SPEC:P', 'SPEC:A', 'N', '-COMP:ADV', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D', 'LANG:FI'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he-             {'-SPEC:ADV', 'PHI_N', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'LF:they', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:T/fin', 'PF:he', '-COMP:A', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-SPEC:P', 'SPEC:A', 'N', '-COMP:ADV', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D', 'LANG:FI'}
he-             {'-SPEC:ADV', 'PHI_N', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-COMP:C/fin', 'LF:he', 'PF:he', '-COMP:A', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:P', 'COMP:R/D', '-COMP:ADV', 'LANG:EN', 'COMP:R', '-SPEC:N', '-COMP:D'}
se              ['LANG:FI']
se-             {'-SPEC:C', '-SPEC:V', '-COMP:D', 'adjoinable', '-COMP:T/fin', '-SPEC:INF', 'COMP:N', '-SPEC:Neg/fin', '-SPEC:MA/lla', '-SPEC:T/fin', 'LF:it/that', '-SPEC:P', '-COMP:uR', '!COMP:*', 'OP', '!PROBE:N', 'D', '-SPEC:N', '-SPEC:D', 'PF:se', 'LANG:FI', '-ARG'}
I               ['LANG:EN']
I-              {'-SPEC:ADV', 'PHI_N', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', 'PF:I', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-SPEC:P', 'SPEC:A', 'N', '-COMP:ADV', 'COMP:R/D', 'LANG:EN', 'COMP:R', '-SPEC:N', '-COMP:D', 'LF:I'}
you             ['LANG:EN']
you-            {'-SPEC:ADV', 'PHI_N', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'LF:you', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-SPEC:P', 'SPEC:A', 'N', '-COMP:ADV', 'COMP:R/D', 'LANG:EN', 'PF:you', 'COMP:R', '-SPEC:N', '-COMP:D'}
he              ['LANG:EN']
she             ['LANG:EN']
she-            {'-SPEC:ADV', 'PHI_N', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'PF:she', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-SPEC:P', 'SPEC:A', 'N', '-COMP:ADV', 'COMP:R/D', 'LANG:EN', 'COMP:R', '-SPEC:N', '-COMP:D', 'LF:she'}
we              ['LANG:EN']
we-             {'-SPEC:ADV', 'PHI_N', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'PF:we', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', 'LF:we', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-SPEC:P', 'SPEC:A', 'N', '-COMP:ADV', 'COMP:R/D', 'LANG:EN', 'COMP:R', '-SPEC:N', '-COMP:D'}
you_pl          ['LANG:EN']
you_pl-         {'-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', 'PF:you_pl', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'LANG:EN', 'LF:you_pl', 'COMP:R', '-SPEC:N', '-COMP:D', 'PHI'}
they            ['LANG:EN']
they-           {'-SPEC:ADV', 'PHI_N', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'LF:they', 'COMP:P', '-SPEC:INF', 'PF:they', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-SPEC:P', 'SPEC:A', 'N', '-COMP:ADV', 'COMP:R/D', 'LANG:EN', 'COMP:R', '-SPEC:N', '-COMP:D'}
it              ['LANG:EN']
it-             {'-SPEC:C', 'PF:it', '-SPEC:V', '-COMP:D', 'adjoinable', '-COMP:T/fin', '-SPEC:INF', 'COMP:N', '-SPEC:Neg/fin', '-SPEC:MA/lla', '-SPEC:T/fin', 'LF:it/that', '-SPEC:P', '-COMP:uR', '!COMP:*', 'OP', '!PROBE:N', 'LANG:EN', 'D', '-SPEC:N', '-SPEC:D', '-ARG'}
io              ['LANG:EN']
io-             {'-SPEC:ADV', 'PHI_N', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'LANG:IT', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', 'PF:io', 'SPEC:A', 'N', '-SPEC:P', 'COMP:R/D', '-COMP:ADV', 'COMP:R', '-SPEC:N', '-COMP:D', 'LF:I'}
tu              ['LANG:EN']
tu-             {'-SPEC:ADV', 'PHI_N', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'LANG:IT', 'LF:you', '-COMP:C/fin', 'PF:tu', '-COMP:A', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-SPEC:T/fin', 'SPEC:A', 'N', '-SPEC:P', 'COMP:R/D', '-COMP:ADV', 'COMP:R', '-SPEC:N', '-COMP:D'}
lui             ['LANG:EN']
lui-            {'-SPEC:ADV', 'PHI_N', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'LANG:IT', '-COMP:C/fin', 'LF:he', '-COMP:A', '-SPEC:T/fin', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-SPEC:P', 'SPEC:A', 'N', '-COMP:ADV', 'COMP:R/D', 'PF:lui', 'COMP:R', '-SPEC:N', '-COMP:D'}
lei             ['LANG:EN']
lei-            {'-SPEC:ADV', 'PHI_N', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'PF:lei', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'LANG:IT', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-SPEC:P', 'SPEC:A', 'N', '-COMP:ADV', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D', 'LF:she'}
noi             ['LANG:EN']
noi-            {'PF:noi', '-SPEC:ADV', 'PHI_N', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'LANG:IT', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', 'LF:we', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-SPEC:P', 'SPEC:A', 'N', '-COMP:ADV', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D'}
voi             ['LANG:EN']
voi-            {'-SPEC:ADV', 'PHI_N', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'LANG:IT', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-SPEC:P', 'SPEC:A', 'N', '-COMP:ADV', 'COMP:R/D', 'LF:you_pl', 'COMP:R', '-SPEC:N', '-COMP:D', 'PF:voi'}
loro            ['LANG:EN']
loro-           {'-SPEC:ADV', 'PHI_N', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'PF:loro', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'LF:they', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'LANG:IT', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-SPEC:P', 'SPEC:A', 'N', '-COMP:ADV', 'COMP:R/D', 'COMP:R', '-SPEC:N', '-COMP:D'}
mi              ['LANG:EN']
mi-             {'-COMP:AUX', '-COMP:WH', '-COMP:C/fin', '-COMP:A', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', 'SPEC:A', 'PF:mi(cl)', 'N', 'COMP:R/D', '-COMP:D', '-SPEC:ADV', 'PHI_N', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:T/fin', '-COMP:V', 'COMP:P', 'CL', '-SPEC:INF', '-SPEC:FORCE', 'LANG:IT', '-SPEC:T/fin', '-SPEC:P', '-COMP:ADV', 'LF:me', 'COMP:R', '-SPEC:N'}
la              ['LANG:EN']
la-             {'-COMP:AUX', '-COMP:WH', 'LF:her', '-COMP:C/fin', 'PF:la(cl)', '-COMP:A', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', 'SPEC:A', 'N', 'COMP:R/D', '-COMP:D', '-SPEC:ADV', 'PHI_N', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:T/fin', '-COMP:V', 'COMP:P', 'CL', '-SPEC:INF', '-SPEC:FORCE', 'LANG:IT', '-SPEC:T/fin', '-SPEC:P', '-COMP:ADV', 'COMP:R', '-SPEC:N'}
lo              ['LANG:EN']
lo-             {'-COMP:AUX', 'PF:lo(cl)', '-COMP:WH', '-COMP:C/fin', '-COMP:A', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', 'SPEC:A', 'N', 'COMP:R/D', '-COMP:D', '-SPEC:ADV', 'PHI_N', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:T/fin', '-COMP:V', 'COMP:P', 'CL', '-SPEC:INF', '-SPEC:FORCE', 'LANG:IT', '-SPEC:T/fin', '-SPEC:P', '-COMP:ADV', 'LF:him', 'COMP:R', '-SPEC:N'}
si              ['LANG:EN']
si-             {'-COMP:AUX', '-COMP:WH', '-COMP:C/fin', '-COMP:A', 'PF:si(cl)', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', 'SPEC:A', 'N', 'COMP:R/D', '-COMP:D', '-SPEC:ADV', 'PHI_N', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', 'LF:3sg', '-SPEC:FORCE', 'LANG:IT', '-SPEC:T/fin', '-SPEC:P', '-COMP:ADV', 'CAL:CL', 'COMP:R', '-SPEC:N'}
gli             ['LANG:EN']
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'LF:there', '-SPEC:ADV', 'PHI_N', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'LANG:IT', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-COMP:*', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-SPEC:P', 'SPEC:A', 'N', '-COMP:ADV', 'COMP:R/D', 'COMP:R', 'PF:ci', '-SPEC:N', '-COMP:D'}
[-n]            {'inflectional', 'PHI:PER:1', 'PHI', 'PHI:DET:DEF', 'LANG:FI', 'PHI:NUM:SG', 'PHI:HUM:HUM'}
[-t]            {'inflectional', 'PHI:PER:2', 'PHI', 'PHI:DET:DEF', 'LANG:FI', 'PHI:NUM:SG', 'PHI:HUM:HUM'}
[-V]            {'inflectional', 'PHI', 'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG'}
[-mme]          {'inflectional', 'PHI:PER:1', 'PHI:DET:DEF', 'LANG:FI', 'PHI', 'PHI:HUM:HUM', 'PHI:NUM:PL'}
[-mme]          {'inflectional', 'PHI:PER:1', 'PHI:DET:DEF', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:NUM:PL'}
[-tte]          {'inflectional', 'PHI', 'PHI:DET:DEF', 'LANG:FI', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI:NUM:PL'}
[-vat]          {'inflectional', 'PHI:PER:3', 'LANG:FI', 'PHI', 'PHI:NUM:PL'}
[-ni]           {'inflectional', 'PHI:PER:1', 'PHI', 'PHI:DET:DEF', 'LANG:FI', 'PHI:NUM:SG', 'PHI:HUM:HUM'}
[-si]           {'inflectional', 'PHI:PER:2', 'PHI', 'PHI:DET:DEF', 'LANG:FI', 'PHI:NUM:SG', 'PHI:HUM:HUM'}
[-nsa]          {'PHI:PER:3', 'inflectional', 'LANG:FI', 'PHI'}
[-an]           {'PHI:PER:3', 'inflectional', 'LANG:FI', 'PHI'}
[-nne]          {'inflectional', 'PHI:DET:DEF', 'LANG:FI', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI:NUM:PL'}
[-s]            {'PHI:GEN:F', 'inflectional', 'LANG:EN', 'PHI:GEN:M', 'PHI', 'PHI:PER:3', 'PHI:NUM:SG'}
[-0]            {'PHI:GEN:N', 'PHI:PER:3', 'PHI:NUM:SG', 'inflectional', 'LANG:EN', 'PHI:PER:2', 'PHI:PER:1', 'PHI', 'PHI:DET:DEF', 'PHI:NUM:PL'}
[-o]            {'LANG:IT', 'inflectional', 'PHI:PER:1', 'PHI', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:HUM:HUM'}
[-i]            {'LANG:IT', 'inflectional', 'PHI:PER:2', 'PHI', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:HUM:HUM'}
[-a]            {'LANG:IT', 'inflectional', 'PHI', 'PHI:PER:3', 'PHI:NUM:SG', 'PHI:DET:DEF'}
[-e]            {'LANG:IT', 'inflectional', 'PHI', 'PHI:PER:3', 'PHI:NUM:SG', 'PHI:DET:DEF'}
[-iamo]         {'LANG:IT', 'inflectional', 'PHI:PER:1', 'PHI:DET:DEF', 'PHI', 'PHI:HUM:HUM', 'PHI:NUM:PL'}
[-te]           {'LANG:IT', 'inflectional', 'PHI', 'PHI:DET:DEF', 'PHI:PER:2', 'PHI:HUM:HUM', 'PHI:NUM:PL'}
[-no]           {'LANG:IT', 'inflectional', 'PHI:PER:3', 'PHI', 'PHI:DET:DEF', 'PHI:NUM:PL'}
[-nom]          {'inflectional', 'LANG:EN', 'adjoinable', 'TAIL:FIN,ARG,VAL', 'NOM'}
[-par]          {'inflectional', 'adjoinable', 'PAR', 'LANG:FI', 'TAIL:ARG,-VAL'}
[-gen]          {'GEN', 'inflectional', 'LANG:EN', 'TAIL:INF,ARG'}
gen             {'GEN', 'inflectional', 'LANG:EN', 'TAIL:INF,ARG'}
[-n_acc]        {'TAIL:PHI', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'inflectional', 'adjoinable', 'LANG:FI', 'n-ACC'}
[-t_acc]        {'TAIL:*POL:NEG', 't-ACC', 'TAIL:ARG,ASP:BOUNDED', 'inflectional', 'adjoinable', 'LANG:FI'}
[-0_acc]        {'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'inflectional', 'adjoinable', '0_ACC', 'TAIL:*PHI', 'LANG:FI'}
asp             {'inflectional', 'LANG:EN', 'ASP:BOUNDED'}
a'              {'LF:A', 'LANG:X', 'PF:a', 'a'}
b'              {'LF:B', 'PF:b', 'LANG:X', 'b'}
b''             {'LF:B', 'LANG:EN', 'b', 'PF:b', '-COMP:c'}
c''             {'LANG:EN', 'LF:C', 'PF:c', 'SPEC:a', 'c'}
c'              {'LANG:X', 'c', 'LF:C', 'PF:c'}
d'              {'LF:D', 'd', 'LANG:', 'PF:d'}
a''             ['LANG:EN']
x'              {'LANG:X', 'x', 'PF:x', 'LF:X'}
y'              {'y', 'LF:Y', 'LANG:X', 'PF:y'}
z'              {'LF:Z', 'LANG:X', 'PF:x', 'z'}
John'           {'LF:John', 'PF:John', 'LANG:X', "N'"}
admires'        {'PF:admires', 'LANG:X', 'LF:admires', "V'"}
admires''       {'V', 'LF:admires', 'ASP', 'SPEC:TO/inf', '-COMP:N', 'PHI:GEN:_', '-COMP:V', 'SPEC:D', 'COMP:P', 'SPEC:ADV', '-SPEC:FORCE', 'PF:admires', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', '-COMP:v', 'PHI:PER:_', 'LANG:EN', 'SPEC:P', 'ARG', '-VAL'}
Mary'           {'PF:Mary', 'LANG:X', "N'", 'LF:mary'}
T/fin           {'PF:T', '-SPEC:v', 'COMP:v', 'SPEC:TO/inf', 'COMP:V', '-SPEC:C/fin', '-SPEC:V', 'PHI:GEN:_', 'FIN', 'SPEC:D', '-COMP:T/fin', '!SPEC:*', 'T/fin', '-COMP:INF', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:*', '-SPEC:T/fin', 'SPEC:INF', 'T', 'PHI:PER:_', '!PROBE:V', '!COMP:*', 'COMP:D', 'VAL', 'LANG:EN', 'LF:T', 'COMP:T/prt', '-SPEC:N', 'ARG'}
v               {'PHI:NUM:_', '-VAL', 'ASP', 'PHI:PER:_', 'PF:v', 'COMP:V', '!COMP:*', '!PROBE:V', 'LANG:EN', 'LF:v', '-SPEC:N', 'PHI:GEN:_', 'SPEC:D', 'ARG', 'PHI:DET:_', 'v'}
C/fin           {'COMP:T/fin', '!PROBE:FIN', 'LF:C/fin', 'C', '-COMP:T/prt', '-SPEC:C/fin', 'FIN', 'PF:C', '-COMP:C/fin', '-SPEC:T/fin', 'COMP:Neg/fin', '!COMP:*', 'VAL', 'LANG:EN', '-SPEC:N', 'SPEC:*', 'C/fin', '-ARG'}
T               {'PF:T', 'COMP:v', 'COMP:V', '-SPEC:V', 'PHI:GEN:_', 'FIN', 'SPEC:D', '!SPEC:*', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', 'SPEC:*', '-SPEC:T/fin', 'T', 'PHI:PER:_', '!PROBE:V', '!COMP:*', 'COMP:D', 'VAL', 'LANG:EN', 'LF:T', 'COMP:T/prt', '-SPEC:N', '-COMP:NEG', 'ARG'}
T/prt           {'COMP:v', 'COMP:V', '-SPEC:V', 'PHI:GEN:_', 'FIN', 'SPEC:D', '!SPEC:*', 'ARG', 'LF:T/prt', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:DET:_', '-SPEC:T/fin', 'T/prt', 'T', 'PHI:PER:_', '!PROBE:V', '!COMP:*', 'PF:T/prt', 'COMP:D', 'VAL', 'LANG:EN', 'COMP:T/prt', '-SPEC:N', '-COMP:NEG', 'SPEC:*'}
a0              {'-adjoinable', 'LF:A', 'A', '-SPEC:A', '-SPEC:D', 'LANG:EN', 'adjoinable', 'PF:A', 'COMP:0', 'TAIL:D'}
n               {'COMP:v', '-COMP:AUX', 'COMP:V', 'n', 'PHI:GEN:_', '-COMP:WH', 'COMP:0', '!SPEC:*', 'PHI:DET:_', '-COMP:C/fin', '-COMP:A', '-COMP:v', '-SPEC:R', '-SPEC:uWH', 'PHI:PER:_', 'SPEC:A', 'N', 'COMP:R/D', 'LANG:EN', '-COMP:D', 'ARG', '-SPEC:ADV', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', 'PHI:NUM:_', 'LF:n', '-SPEC:T/fin', 'INF', '-SPEC:P', '-COMP:ADV', '!COMP:*', 'VAL', 'COMP:R', '-SPEC:N', 'PF:n', 'SPEC:*', '!SPEC:D'}
impass          {'PHI:NUM:_', '-VAL', 'LF:impass', 'ASP', 'PHI:PER:_', 'COMP:V', '!COMP:*', '!PROBE:V', 'LANG:EN', 'PF:impass', '-SPEC:N', 'PHI:GEN:_', 'SPEC:D', 'ARG', 'PHI:DET:_', 'v'}
cau             {'PHI:NUM:_', '-VAL', 'ASP', 'PHI:PER:_', 'COMP:V', '!COMP:*', '!PROBE:V', 'LANG:EN', '-SPEC:N', 'PHI:GEN:_', 'SPEC:D', 'PHI:DET:_', 'ARG', 'PF:Cau', 'LF:v/Cause', 'v'}
INF             {'-COMP:C/fin', 'INF', '-SPEC:T/fin', 'COMP:v', '!PROBE:V', 'COMP:V', '!COMP:*', '-SPEC:V', 'LANG:EN', '-COMP:FORCE', 'PF:INF', '-COMP:T/fin', 'LF:INF'}
prtcpl          {'COMP:v', 'COMP:V', '-SPEC:V', '-COMP:FORCE', 'PHI:GEN:_', 'FIN', 'SPEC:D', '-COMP:T/fin', '!SPEC:*', 'LF:T/prt', '-SPEC:FORCE', 'SPEC:*', 'PHI:NUM:_', '-COMP:C/fin', 'INF', '-SPEC:T/fin', 'PHI:DET:_', 'T/prt', 'T', 'PHI:PER:_', '!PROBE:V', '!COMP:*', 'PF:T/prt', 'COMP:D', 'VAL', 'LANG:EN', 'COMP:T/prt', '-SPEC:N', '-COMP:NEG', 'ARG'}
TO/inf          {'-SPEC:v', 'COMP:v', 'COMP:V', '-SPEC:V', '-COMP:FORCE', 'adjoinable', '-COMP:T/fin', 'LF:TO/inf', '-COMP:C/fin', 'INF', '-SPEC:T/fin', '!PROBE:V', '!COMP:*', '?ARG', 'LANG:EN', 'PF:TO/inf', 'TO/inf', '!COMP:V', '-VAL'}
A/inf           {'?VAL', 'COMP:v', 'COMP:V', '-SPEC:V', '-COMP:FORCE', '-COMP:T/fin', 'A/inf', 'LF:A/inf', '-SPEC:Neg/fin', '-COMP:C/fin', 'INF', '-SPEC:T/fin', '!PROBE:V', '!COMP:*', 'PF:A/inf', '?ARG', 'LANG:EN', 'SPEC:*'}
ARE/inf         {'-adjoinable', 'COMP:v', 'COMP:V', '-SPEC:V', '-COMP:FORCE', '-COMP:T/fin', 'LF:ARE/inf', '-COMP:C/fin', 'INF', '-SPEC:T/fin', '!PROBE:V', '!COMP:*', 'PF:are', 'VAL', '?ARG', 'LANG:EN', 'SPEC:*', 'ARE/inf'}
ESSA/inf        {'?VAL', 'COMP:v', 'LF:while', 'COMP:V', 'ADV', '-SPEC:V', '-COMP:FORCE', 'adjoinable', '-COMP:T/fin', 'ESSA/inf', '-SPEC:FORCE', '-SPEC:Neg/fin', '-COMP:C/fin', 'INF', 'TAIL:T', '-SPEC:T/fin', '!PROBE:V', '!COMP:*', '?ARG', 'PF:essa', 'LANG:EN', '-SPEC:N', 'SPEC:*'}
TUA/inf         {'COMP:v', 'PF:tua', 'COMP:V', 'ADV', '-SPEC:V', 'LF:after', '-COMP:FORCE', 'adjoinable', '-COMP:T/fin', 'PHI:GEN:_', '!SPEC:*', '-SPEC:FORCE', '-SPEC:Neg/fin', 'PHI:NUM:_', '-COMP:C/fin', 'INF', 'TAIL:T', '-SPEC:T/fin', 'PHI:DET:_', 'CAL', 'PHI:PER:_', '!PROBE:V', '!COMP:*', 'LANG:EN', '-SPEC:N', 'TUA/inf', 'ARG'}
VA/inf          {'COMP:v', 'VA/inf', 'COMP:V', '-SPEC:V', '-COMP:FORCE', 'PHI:GEN:_', '-COMP:T/fin', '!SPEC:*', 'PF:vAn', 'SPEC:*', 'PHI:NUM:_', 'PHI:DET:_', '-COMP:C/fin', 'INF', '-SPEC:T/fin', 'PHI:PER:_', '!PROBE:V', '!COMP:*', 'VAL', 'LANG:EN', '-SPEC:N', 'ARG', 'LF:VA'}
MA/ssa          {'COMP:v', 'COMP:V', 'ADV', 'PF:massa', 'adjoinable', 'PHI:GEN:_', '-SPEC:FORCE', '-SPEC:Neg/fin', 'TAIL:V', 'LF:in_doing', '-SPEC:T/fin', 'PHI:NUM:_', '-SPEC:*', 'PHI:DET:_', 'PHI:PER:_', 'LANG:EN', 'MA/inf', '-SPEC:N', 'ARG', '-VAL'}
MA/tta          {'-SPEC:Neg/fin', 'PHI:NUM:_', '-SPEC:T/fin', 'TAIL:T', 'PF:matta', 'PHI:PER:_', 'ADV', 'LANG:EN', 'MA/inf', 'adjoinable', '-SPEC:N', 'LF:without_doing', 'PHI:GEN:_', '-SPEC:FORCE', 'ARG', 'PHI:DET:_', '-VAL'}
MA/lla          {'COMP:v', 'LF:by_doing', 'COMP:V', 'PHI:GEN:_', 'PHI:DET:_', '-SPEC:Neg/fin', 'PHI:PER:_', 'LANG:EN', 'ARG', 'ADV', 'adjoinable', '-SPEC:FORCE', 'PHI:NUM:_', '-SPEC:T/fin', 'TAIL:T', 'PF:malla', 'MA/inf', '-SPEC:N', '-VAL'}
MA/inf          {'COMP:v', 'LF:to_do', 'COMP:V', 'PHI:GEN:_', 'PHI:DET:_', '-SPEC:Neg/fin', 'PHI:PER:_', 'PF:maan', 'LANG:EN', 'ARG', 'ADV', 'adjoinable', '-SPEC:FORCE', 'PHI:NUM:_', 'TAIL:V', '-SPEC:T/fin', 'MA/inf', '-SPEC:N', '-VAL'}
E/inf           {'-SPEC:Neg/fin', '-SPEC:T/fin', 'PF:en', 'LF:by', 'ADV', '-SPEC:N', 'adjoinable', 'SPEC:*', '-SPEC:FORCE', 'LANG:FI', '-ARG', '-VAL'}
BE-             {'V', 'PF:BE', 'SPEC:TO/inf', 'ASP', '-COMP:N', '-COMP:T/fin', 'SPEC:D', '-COMP:V', 'COMP:P', 'SPEC:ADV', 'COPULA', '-SPEC:FORCE', '-SPEC:T/fin', 'LF:BE', '-COMP:v', '!COMP:*', 'LANG:EN', 'COMP:T/prt', 'SPEC:P', '-ARG', '-VAL'}
D               {'-SPEC:C', '-SPEC:V', '-COMP:D', 'LF:D', 'PF:D', 'adjoinable', '-COMP:T/fin', '-SPEC:INF', 'COMP:N', '-SPEC:Neg/fin', '-SPEC:MA/lla', '-SPEC:T/fin', '-SPEC:P', '-COMP:uR', '!COMP:*', 'OP', '!PROBE:N', 'LANG:EN', 'D', '-SPEC:N', '-SPEC:D', '-ARG'}
P               {'-SPEC:v', 'PF:P', 'LF:P', '-SPEC:iWH', '-COMP:uWH', '-SPEC:ADV', '-SPEC:C', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'adjoinable', 'P', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:INF', '-SPEC:FORCE', '-SPEC:Neg/fin', 'PHI:NUM:_', '-SPEC:iR', '-SPEC:T/fin', 'PHI:DET:_', '-SPEC:*', '-SPEC:P', '-float', '-COMP:ADV', 'PHI:PER:_', '!COMP:*', 'COMP:D', 'LANG:EN', '-SPEC:N', 'ARG', '-VAL'}
pro             ['LANG:EN']
pro-            {'LF:pro', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', '-SPEC:V', '-COMP:N', 'COMP:uR', '-COMP:WH', '-COMP:T/fin', '-COMP:V', 'COMP:P', '-SPEC:INF', '-SPEC:FORCE', '-COMP:C/fin', '-SPEC:T/fin', '-COMP:A', '-SPEC:P', '-COMP:v', '-SPEC:R', '-SPEC:uWH', '-COMP:ADV', 'SPEC:A', 'N', 'COMP:R/D', 'LANG:EN', 'COMP:R', '-SPEC:N', 'PF:(pro)', '-COMP:D', 'PHI'}
cl              {'inflectional', 'LANG:EN', 'LEFT:T/fin', 'LEFT:D,CL', 'CL', 'RIGHT:PRG', 'RIGHT:ARE/inf'}
inc             {'inflectional', 'INCORPORATED', 'LANG:EN'}
sg              {'inflectional', 'LANG:EN', 'PHI:NUM:SG'}
pl              {'inflectional', 'LANG:EN', 'PHI:NUM:PL'}
1p              {'PHI:PER:1', 'inflectional', 'LANG:EN'}
2p              {'inflectional', 'LANG:EN', 'PHI:PER:2'}
3p              {'PHI:PER:3', 'inflectional', 'LANG:EN'}
def             {'inflectional', 'LANG:EN', 'PHI:DET:DEF'}
indef           {'inflectional', 'PHI:DET:INDEF', 'LANG:EN'}
hum             {'inflectional', 'LANG:EN', 'PHI:HUM:HUM'}
nonhum          {'inflectional', 'PHI:HUM:NONHUM', 'LANG:EN'}
m               {'inflectional', 'LANG:EN', 'PHI:GEN:M'}
f               {'PHI:GEN:F', 'inflectional', 'LANG:EN'}
nom             {'TAIL:FIN,!COMP:*,VAL', 'inflectional', 'LANG:EN'}
acc             {'inflectional', 'LANG:EN', 'TAIL:v'}
dat             {'inflectional', 'TAIL:!COMP:*,v', 'LANG:EN'}
uC/op           {'inflectional', 'LANG:EN', 'uC/op'}
wh              {'inflectional', 'LANG:EN', 'OP:_', 'OP:WH'}
wh_             {'inflectional', 'LANG:EN', 'OP:_', 'OP', 'FORCE:OP:WH'}
top             {'OP:TOP', 'inflectional', 'LANG:EN'}
foc             {'inflectional', 'LANG:EN', 'OP:FOC'}
C/op            {'inflectional', 'OP:C/OP', 'LANG:EN'}
rel             {'OP:REL', 'inflectional', 'LANG:EN', '-COMP:C/fin', 'adjoinable'}
Q               {'inflectional', 'LANG:EN', 'OP:Q', 'OP:WH', 'OP'}
