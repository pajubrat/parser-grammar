ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'-SPEC:iR', '-SPEC:P', 'LANG:IT', '-COMP:N', 'COMP:ARE/inf', '-SPEC:INF', '!COMP:*', 'LF:to', '-SPEC:C/fin', '-COMP:ADV', '-SPEC:v', 'COMP:D', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:FORCE', '-SPEC:N', '-COMP:uWH', 'PF:a', '-SPEC:C', '-ARG', '-SPEC:T/fin', '-SPEC:iWH', 'adjoinable', 'P', '-VAL', '-SPEC:V', '-SPEC:*', '-SPEC:Neg/fin'}
a_D             {'LANG:EN', 'OP', '-SPEC:P', '-SPEC:INF', '-COMP:uR', '!COMP:*', 'COMP:N', '-SPEC:MA/lla', '-COMP:T/fin', 'LF:D', '-SPEC:N', '!PROBE:N', 'PF:D', '-COMP:D', '-SPEC:C', '-SPEC:D', '-ARG', '-SPEC:T/fin', 'D', 'adjoinable', '-SPEC:V', '-SPEC:Neg/fin'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'LANG:EN', '-COMP:v', 'LF:admire', '-SPEC:Neg', '-COMP:P', '-COMP:N', '!COMP:*', '-COMP:Neg', 'V', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'CLASS:TR', 'SPEC:P', 'ASP', 'PHI:NUM:_', 'PF:admire', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', '-VAL'}
admire*         ['LANG:EN']
T/fin*          {"PF:T/fin'", 'NO_NUMBER', 'LANG:EN', 'NO_DET', '!SPEC:*', 'CAT:T/fin', 'LF:T', '-VAL'}
v*              {'LANG:EN', 'NO_NUMBER', 'LF:v', 'NO_DET', '-VAL', 'CAT:v', 'PF:v'}
admire**        ['LANG:EN']
T/fin**         {'LANG:EN', 'NO_NUMBER', 'NO_DET', '!SPEC:*', 'CAT:T/fin', 'PHI:PER:3', 'NO_PERSON', 'LF:T', "PF:T/fin''", '-VAL'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'-COMP:v', 'LF:admire', 'LANG:IT', '-COMP:N', 'V', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'SPEC:P', 'PF:adora', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', '-VAL'}
antaa           ['LANG:FI']
anta-           {'LANG:FI', '-COMP:v', '-COMP:N', '!COMP:*', 'V', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'LF:give', 'ARG', 'SPEC:ADV', '-COMP:FIN', 'SPEC:TO/inf', '-SPEC:FORCE', 'SPEC:P', 'ASP', 'CLASS:DITR', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', '+SEM:directional', 'ASP:BOUNDED', 'PHI:DET:_', 'PF:antaa', 'COMP:P', '-VAL', 'SPEC:D'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'LANG:EN', '-COMP:v', '-COMP:N', 'V', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'SEM:internal', '-SPEC:FORCE', 'SPEC:P', 'ASP', 'PHI:NUM:_', 'PF:ask', '-COMP:V', '-SPEC:T/fin', 'LF:ask', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', '-VAL', 'SPEC:D'}
ask-            {'LANG:EN', '-COMP:v', '-COMP:N', 'V', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'SEM:internal', '-SPEC:FORCE', 'SPEC:P', 'ASP', 'PHI:NUM:_', 'PF:ask', '-COMP:V', '-SPEC:T/fin', 'LF:ask', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', '-VAL', 'SPEC:D'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-SPEC:P', 'LF:key', 'LANG:FI', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', '-SEM:directional', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', 'PF:avain', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-SPEC:P', 'LANG:FI', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', 'PF:auto', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:uWH', 'LF:car', '-SEM:directional', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
city            {'LANG:EN', '-SPEC:P', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', 'LF:city', '-COMP:V', '-SPEC:T/fin', '-COMP:WH', 'PF:city', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
che             ['LANG:IT']
che-            {'-SPEC:P', '-COMP:v', 'LANG:IT', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', 'PHI_N', 'LF:who', 'PF:che', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
chiamato        ['LANG:IT']
chiamata-       {'-COMP:v', 'LANG:IT', '-COMP:N', 'V', 'LF:called', '-COMP:T/fin', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'PHI:PER:_', '-SPEC:FORCE', 'SPEC:P', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', '-VAL', 'PF:chiamato'}
danno           {'-SPEC:P', '-COMP:v', 'LANG:IT', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', 'LF:damage', '-SPEC:FORCE', '-SPEC:N', 'N', 'PF:danno', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'-COMP:v', 'LANG:IT', '-COMP:N', 'COMP:ARE/inf', 'V', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'SEM:internal', '-SPEC:FORCE', 'SPEC:P', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PF:detest', 'PHI:DET:_', 'PHI:GEN:_', 'COMP:P', '-VAL', 'LF:detest'}
devono          ['LANG:EN']
deva-           {'LF:must', '-COMP:v', 'LANG:IT', '-COMP:N', 'COMP:ARE/inf', 'V', 'PF:deva', '-COMP:T/fin', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'SEM:internal', '-ASP', 'PHI:PER:_', '-SPEC:FORCE', 'SPEC:P', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', '-VAL', 'SPEC:D'}
di              {'LF:of', '-SPEC:iR', 'LANG:FI', 'PF:di', '-SPEC:P', '-COMP:N', '-SPEC:INF', '!COMP:*', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:v', 'COMP:D', '-COMP:T/fin', '-SPEC:ADV', 'ARG', 'PHI:PER:_', '-SPEC:FORCE', '-SPEC:N', '-COMP:uWH', 'PHI:NUM:_', '-SPEC:C', '-SPEC:T/fin', '-SPEC:iWH', 'SPEC:*', '-adjoinable', 'P', 'PHI:DET:_', '-VAL', '-SPEC:V', '-SPEC:Neg/fin'}
does            {'LANG:EN', 'COMP:T/prt', '!COMP:*', '-SPEC:C/fin', 'PF:does', 'PHI:PER:3', 'COMP:D', '-COMP:T/fin', 'ARG', 'VAL', 'PHI:PER:_', 'COMP:Neg', 'PHI:NUM:SG', 'PHI:GEN:M', '-SPEC:T/fin', 'SPEC:*', 'PHI:GEN:_', 'PHI:GEN:F', '-COMP:INF', '-SPEC:V', '!SPEC:D', 'LF:does', 'T', '-SPEC:Neg', '-SPEC:v', 'FIN', 'SPEC:TO/inf', 'T/fin', 'COMP:v', 'COMP:V', '-SPEC:FORCE', '-SPEC:N', 'PHI:NUM:_', '!PROBE:V', 'PHI:DET:_', '-SPEC:TO/inf', 'SPEC:D'}
does_C          ['LANG:EN']
does-           {'LANG:EN', 'COMP:T/prt', '!COMP:*', '-SPEC:C/fin', 'PF:does', 'PHI:PER:3', 'COMP:D', '-COMP:T/fin', 'ARG', 'VAL', 'PHI:PER:_', 'COMP:Neg', 'PHI:NUM:SG', 'PHI:GEN:M', '-SPEC:T/fin', 'SPEC:*', 'PHI:GEN:_', 'PHI:GEN:F', '-COMP:INF', '-SPEC:V', '!SPEC:D', 'LF:does', 'T', '-SPEC:Neg', '-SPEC:v', 'FIN', 'SPEC:TO/inf', 'T/fin', 'COMP:v', 'COMP:V', '-SPEC:FORCE', '-SPEC:N', 'PHI:NUM:_', '!PROBE:V', 'PHI:DET:_', '-SPEC:TO/inf', 'SPEC:D'}
dorme           ['LANG:IT']
dorme-          {'LANG:EN', '-COMP:v', '-COMP:N', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:P', '-SPEC:FORCE', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:DET:_', 'PF:dorme', 'LF:sleep', 'COMP:P', '-VAL', '!SPEC:D'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'LANG:FI', 'COMP:T/prt', '%SPEC:INF', 'LF:neg', '!COMP:*', '!SPEC:*', 'FIN', '!COMP:T', '-SPEC:T', 'Neg/fin', 'VAL', 'POL:NEG', 'ARG', 'SEM:internal', 'PHI:PER:_', 'PHI:NUM:_', '-SPEC:T/fin', 'NEG', 'SPEC:*', 'PHI:DET:_', 'PF:ei'}
e-              {'LANG:FI', 'COMP:T/prt', '%SPEC:INF', 'LF:neg', '!COMP:*', '!SPEC:*', 'FIN', '!COMP:T', '-SPEC:T', 'Neg/fin', 'VAL', 'POL:NEG', 'ARG', 'SEM:internal', 'PHI:PER:_', 'PHI:NUM:_', '-SPEC:T/fin', 'NEG', 'SPEC:*', 'PHI:DET:_', 'PF:ei'}
elaa            ['LANG:FI']
ela-            {'LANG:FI', '-COMP:v', '-COMP:N', 'V', '-COMP:T/fin', 'PF:elaa', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'PHI:PER:_', '-SPEC:FORCE', 'SPEC:P', 'ASP', '-COMP:D', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:DET:_', 'LF:live', 'COMP:P', 'CLASS:INTR', '-VAL', 'SPEC:D'}
etsii           ['LANG:FI']
etsi-           {'!COMP:D', 'LANG:FI', '-COMP:v', '-COMP:N', 'V', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'SPEC:P', 'ASP', 'LF:search', 'PHI:NUM:_', '-COMP:V', 'PF:etsi', '-SPEC:T/fin', 'PHI:DET:_', 'COMP:P', '-VAL'}
etta            {'LANG:FI', '-ARG', 'COMP:C/fin', '!COMP:*', 'PF:etta', 'FORCE', 'FIN', 'COMP:T/fin', '-VAL', '!PROBE:T/fin', '-SPEC:*', 'LF:that'}
flow'           {'LANG:EN', 'PF:flow', '-COMP:v', '-COMP:N', 'LF:flow', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'SPEC:P', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', '-VAL', 'SPEC:D'}
from            {'LANG:EN', '-SPEC:iR', '-SPEC:P', '-COMP:N', '-SPEC:INF', '!COMP:*', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:v', 'COMP:D', '-COMP:T/fin', '-SPEC:ADV', 'ARG', 'PHI:PER:_', 'PF:from', 'LF:from', '-SPEC:FORCE', '-SPEC:N', '-COMP:uWH', 'PHI:NUM:_', 'TAIL:V,+SEM:directional', '-SPEC:C', '-SPEC:T/fin', '-float', '-SPEC:iWH', 'adjoinable', 'PHI:DET:_', 'P', 'PHI:GEN:_', '-VAL', '-SPEC:V', '-SPEC:*', '-SPEC:Neg/fin'}
gave            ['LANG:EN']
give-           {'LANG:EN', '-COMP:v', 'PF:give', '-COMP:N', '!COMP:*', 'V', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'LF:give', 'ARG', 'SPEC:ADV', '-COMP:FIN', 'SPEC:TO/inf', '-SPEC:FORCE', 'SPEC:P', 'ASP', 'CLASS:DITR', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', '+SEM:directional', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', '-VAL', 'SPEC:D'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SPEC:P', '-COMP:v', 'LANG:IT', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', '-SEM:directional', '-SPEC:FORCE', 'PF:Giuseppe', '-SPEC:N', 'N', 'LF:Giuseppe', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'LANG:FI', '-COMP:v', '-COMP:P', '-COMP:N', '!COMP:*', 'V', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'SEM:internal', '-SPEC:FORCE', 'CLASS:TR', 'PF:haluaa', 'SPEC:P', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'ASP:BOUNDED', 'PHI:DET:_', 'COMP:P', 'COMP:A/inf', '-VAL', 'LF:want', '-SPEC:*'}
hairitsee       ['LANG:FI']
hairitse-       {'!COMP:D', 'LANG:FI', '-COMP:v', '-COMP:N', 'V', '-COMP:T/fin', 'SPEC:D', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-COMP:FIN', 'PHI:PER:_', '-SPEC:FORCE', 'SPEC:P', 'ASP', 'PF:hairitsee', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:DET:_', 'COMP:P', '-VAL', 'LF:disturb'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'-COMP:v', 'LANG:IT', '-COMP:N', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'SEM:internal', '-ASP', '-SPEC:FORCE', 'SPEC:P', 'COMP:T', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PF:ha', 'SPEC:*', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', '-VAL', 'LF:have', 'SPEC:D'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'LANG:FI', '-COMP:v', 'PF:havia', '-COMP:N', 'LF:disappear', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'SPEC:P', 'ASP', '-COMP:D', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:DET:_', 'COMP:P', 'CLASS:INTR', '-VAL', 'SPEC:D'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'!COMP:D', 'LANG:FI', '-COMP:v', 'LF:admire', '-COMP:P', '-COMP:N', '!COMP:*', 'V', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-COMP:FIN', 'PF:ihaile-', '-SPEC:FORCE', 'CLASS:TR', 'SPEC:P', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:DET:_', 'COMP:P', '-VAL'}
il              {'OP', '-SPEC:P', 'LANG:IT', '-SPEC:INF', '-COMP:uR', '!COMP:*', 'COMP:N', '-SPEC:MA/lla', '-COMP:T/fin', '-SPEC:Neg/fin', 'LF:the', '-SPEC:N', '!PROBE:N', '-COMP:D', '-SPEC:C', '-SPEC:D', '-ARG', '-SPEC:T/fin', 'D', 'adjoinable', '-SPEC:V', 'PF:il'}
i               {'OP', '-SPEC:P', 'LANG:IT', '-SPEC:INF', '-COMP:uR', '!COMP:*', 'COMP:N', '-SPEC:MA/lla', '-COMP:T/fin', '-SPEC:Neg/fin', 'LF:the', '-SPEC:N', '!PROBE:N', '-COMP:D', '-SPEC:C', '-SPEC:D', '-ARG', '-SPEC:T/fin', 'D', 'adjoinable', '-SPEC:V', 'PF:il'}
in              {'-SPEC:iR', '-SPEC:P', 'LANG:IT', '-COMP:N', '-SPEC:INF', '!COMP:*', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:v', 'COMP:D', '-COMP:T/fin', '-SPEC:ADV', 'ARG', 'PF:in', 'PHI:PER:_', 'LF:in', '-SPEC:FORCE', '-SPEC:N', '-COMP:uWH', 'PHI:NUM:_', '-SPEC:C', '-SPEC:T/fin', '-SPEC:iWH', 'adjoinable', 'PHI:DET:_', 'P', 'PHI:GEN:_', '-VAL', '-SPEC:V', '-SPEC:Neg/fin'}
infermieri      {'-SPEC:P', 'PF:infermieri', '-COMP:v', 'LF:nurses', 'LANG:IT', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
is              ['LANG:EN']
be-             {'LANG:EN', 'LF:be', '-COMP:v', '-COMP:N', '!COMP:*', 'V', 'PF:be', '-COMP:T/fin', 'SPEC:TO/inf', 'SPEC:ADV', 'COPULA', '-SPEC:FORCE', 'SPEC:P', 'ASP', '-COMP:V', '-COMP:TO/inf', '-ARG', '-SPEC:T/fin', 'COMP:P', '-VAL', 'SPEC:D'}
istuuko         ['LANG:FI']
istuu-          {'LANG:FI', '-COMP:v', '-COMP:N', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'SPEC:P', 'ASP', '-COMP:D', 'LF:sit', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:DET:_', 'PF:istuu', 'COMP:P', 'CLASS:INTR', '-VAL', 'SPEC:D'}
John            ['LANG:EN']
John-           {'LANG:EN', '-SPEC:P', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', 'LF:John', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:uWH', '-SEM:directional', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', '-adjoinable', '-COMP:WH', '-COMP:C/fin', 'COMP:P', 'PF:John', '-COMP:A', '-SPEC:V', '-SPEC:R'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'LF:Jukka', 'LANG:FI', '-SPEC:P', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', '-SEM:directional', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', 'PF:Jukka', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
juosten         ['LANG:FI']
juokse-         {'LANG:FI', '-COMP:v', '-COMP:N', 'V', 'PF:juokse-', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'SPEC:P', 'ASP', 'LF:run', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:DET:_', 'COMP:P', '-VAL'}
istuu           ['LANG:FI']
istu-           {'LANG:FI', '-COMP:v', '-COMP:N', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'SPEC:P', 'ASP', 'LF:sit', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:DET:_', 'PF:istuu', 'COMP:P', '-VAL'}
kaksi           {'TAIL:ARG,VAL,FIN', 'LANG:FI', 'NUM', 'PHI:NUM:_', 'PHI:NUM:SG', 'COMP:n', 'SPEC:*', 'PHI:DET:_', 'COMP:N', 'LF:two', 'ARG', 'PHI:PER:_', 'PF:kaksi', '-VAL'}
kaksi           {'LANG:EN', 'NUM', 'TAIL:*POL:NEG', 'COMP:n', 'SPEC:*', 'COMP:N', 'LF:two', 'TAIL:ARG,ASP:BOUNDED', 'PF:kaksi'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'COMP:N', 'LANG:FI', 'NUM', 'LF:two', 'COMP:n', 'PF:kaksi', 'SPEC:*'}
kaupunkia       ['LANG:EN']
kaupunki        {'PF:kaupunki', 'LANG:FI', '-SPEC:P', '-COMP:v', '-COMP:P', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', 'LF:city', '-COMP:V', '-SPEC:T/fin', '-COMP:WH', '-COMP:C/fin', '-COMP:A', '-SPEC:V', '-SPEC:R'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'PF:kaske', 'LANG:FI', '-COMP:v', '-COMP:N', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '!COMP:A/inf', '-SPEC:FORCE', 'SPEC:P', 'SEM:external', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:DET:_', 'COMP:P', 'LF:order', '-VAL'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-SPEC:P', 'LANG:FI', '-COMP:v', '-COMP:N', 'LF:watch', 'COMP:uR', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-SPEC:INF', '-COMP:ADV', 'COMP:R', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', 'PF:kello', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
kello0-         {'2SPEC', 'PF:kello', 'LANG:FI', 'LF:watch', '0', 'SPEC:D'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'LANG:EN', '-SPEC:P', 'LF:key', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', 'PF:key', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-SPEC:P', 'LANG:FI', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'LF:book', 'PF:kirja', '-COMP:T/fin', 'COMP:R', '-SPEC:ADV', '-SPEC:uWH', '-SEM:directional', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
kohti           {'-SPEC:iR', 'LANG:FI', '-SPEC:P', '-COMP:N', '-SPEC:INF', 'TAIL:V', '!COMP:*', '-SPEC:C/fin', '-COMP:ADV', '-SPEC:v', 'COMP:D', 'PF:kohti', '-COMP:T/fin', 'ARG', '-SPEC:ADV', 'PHI:PER:_', '-SPEC:FORCE', '-SPEC:N', '-COMP:uWH', 'PHI:NUM:_', '-SPEC:C', '-SPEC:T/fin', '-SPEC:iWH', 'SPEC:*', 'adjoinable', 'PHI:DET:_', 'P', '-VAL', 'LF:towards', '-SPEC:V', '-SPEC:Neg/fin'}
koko            {'OP', '-SPEC:P', 'LANG:FI', '-SPEC:INF', '-COMP:uR', '!COMP:*', 'PF:koko', 'COMP:N', '-SPEC:MA/lla', '-COMP:T/fin', '-SPEC:N', '!PROBE:N', '-COMP:D', '-SPEC:C', '-SPEC:D', '-ARG', '-SPEC:T/fin', 'D', 'TAIL:T', 'adjoinable', 'LF:all', '-SPEC:V', '-SPEC:Neg/fin'}
kuka            ['LANG:FI']
kuka-           {'-SPEC:P', 'LANG:FI', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', 'PF:kuka', '-SPEC:FORCE', '-SPEC:N', 'N', 'PHI', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', 'LF:who', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
kuorsaa-        {'LANG:FI', '-COMP:v', '-COMP:N', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'SPEC:P', '-COMP:D', 'ASP', 'PHI:NUM:_', '-COMP:V', 'LF:snore', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:WH', 'PF:kuorsaa', 'COMP:P', '-VAL'}
kuorsaamalla    ['LANG:FI']
lahella         {'-SPEC:iR', 'LF:near', '-COMP:N', '!COMP:*', '!SPEC:*', '-SPEC:C/fin', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'VAL', '-SPEC:C', '-COMP:FORCE', '-SPEC:T/fin', 'SPEC:*', 'adjoinable', '-SPEC:V', '!SPEC:D', '-SPEC:P', 'LANG:FI', '-SPEC:INF', '-COMP:ADV', '-SPEC:v', 'PF:lahella', '-SPEC:ADV', 'COMP:v', 'COMP:V', '-SPEC:FORCE', '-SPEC:N', '-COMP:uWH', 'INF', 'PHI:NUM:_', '-SPEC:iWH', 'PHI:DET:_', 'P', '-COMP:C/fin', '-SPEC:Neg/fin'}
lahella         {'-SPEC:iR', 'LF:near', '!COMP:D', 'LANG:FI', '-SPEC:P', '-COMP:N', '-SPEC:INF', '!COMP:*', '-COMP:ADV', '-SPEC:C/fin', 'PF:lahella', '-SPEC:v', 'COMP:D', '-COMP:T/fin', '-SPEC:ADV', 'ARG', 'PHI:PER:_', '-SPEC:FORCE', '-SPEC:N', '-COMP:uWH', 'PHI:NUM:_', '-SPEC:C', '-SPEC:T/fin', '-SPEC:iWH', 'SPEC:*', 'adjoinable', 'PHI:DET:_', 'P', '-VAL', '-SPEC:V', '-SPEC:Neg/fin'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'LANG:FI', '-COMP:v', 'PF:lahtea', '-COMP:N', 'V', 'COMP:PP', '-COMP:T/fin', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'PHI:PER:_', 'LF:leave', '-SPEC:FORCE', 'SPEC:P', 'ASP', '-COMP:D', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:DET:_', 'COMP:P', 'CLASS:INTR', '-VAL', 'SPEC:D'}
lavano          ['LANG:IT']
lava-           {'-COMP:v', 'LANG:IT', '-COMP:N', '!COMP:*', 'V', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:P', '-SPEC:FORCE', 'PF:lava', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', 'LF:wash', '-VAL'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'OP', '-SPEC:P', 'PF:le', 'LANG:IT', '-SPEC:INF', '-COMP:uR', '!COMP:*', 'COMP:N', '-SPEC:MA/lla', '-COMP:T/fin', 'LF:D', '-SPEC:N', '!PROBE:N', '-COMP:D', '-SPEC:C', '-SPEC:D', '-ARG', '-SPEC:T/fin', 'D', 'adjoinable', '-SPEC:V', '-SPEC:Neg/fin'}
leaves          ['LANG:EN']
leave           {'LANG:EN', '-COMP:v', '-COMP:N', 'PF:leave', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'LF:leave', 'SPEC:P', '-SPEC:FORCE', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', '-VAL', '!SPEC:D'}
leave-          {'LANG:EN', '-COMP:v', '-COMP:N', 'PF:leave', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'LF:leave', '-SPEC:FORCE', 'SPEC:P', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', '-VAL', '!SPEC:D'}
like-           {'LANG:EN', '!COMP:D', '-COMP:v', 'LF:like', '-COMP:N', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'PF:like', 'SPEC:P', '-SPEC:FORCE', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', '-VAL'}
likes           ['LANG:EN']
like            {'LANG:EN', '!COMP:D', '-COMP:v', 'LF:like', '-COMP:N', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'PF:like', 'SPEC:P', '-SPEC:FORCE', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', '-VAL'}
little          ['LANG:EN']
little-         {'LANG:EN', '2SPEC', 'PF:little-', 'LF:little', '0', 'SPEC:D'}
lle             {'-SPEC:iR', 'LANG:FI', '-SPEC:P', '-COMP:N', '-SPEC:INF', '!COMP:*', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:v', 'COMP:D', '-COMP:T/fin', '-SPEC:ADV', 'ARG', 'PHI:PER:_', '-SPEC:FORCE', '-SPEC:N', '-COMP:uWH', 'PHI:NUM:_', 'TAIL:V,+SEM:directional', '-SPEC:C', '-SPEC:T/fin', '-SPEC:iWH', '+SEM:directional', 'adjoinable', 'PHI:DET:_', 'P', 'LF:for', 'PF:P(lle)', '-VAL', '-SPEC:V', '-SPEC:*', '-SPEC:Neg/fin'}
lla             {'-SPEC:iR', 'LANG:FI', '-SPEC:P', '-COMP:N', '-SPEC:INF', '!COMP:*', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:v', 'COMP:D', '-COMP:T/fin', '-SPEC:ADV', 'ARG', 'TAIL:*V', 'PHI:PER:_', 'LF:by', '-SPEC:FORCE', '-SPEC:N', 'PF:P(lla)', '-COMP:uWH', 'PHI:NUM:_', '-SPEC:C', '-SPEC:T/fin', '-SPEC:iWH', 'SPEC:*', 'TAIL:T', 'adjoinable', 'P', 'PHI:DET:_', '-VAL', '-SPEC:V', '-SPEC:Neg/fin'}
Luisa           ['LANG:IT']
Luisa-          {'-SPEC:P', '-COMP:v', 'LANG:IT', '-COMP:N', 'COMP:uR', '-SPEC:INF', 'PF:Luisa', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:uWH', '-SEM:directional', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', 'LF:Luisa', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
lukemalla       ['LANG:FI']
luke-           {'LANG:FI', '-COMP:v', '-COMP:P', '-COMP:N', '!COMP:*', 'V', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'CLASS:TR', 'SPEC:P', 'ASP', 'LF:read', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PF:luke', 'PHI:DET:_', 'COMP:P', '-VAL'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'!COMP:D', 'LANG:FI', '-COMP:v', '-COMP:P', '-COMP:N', '!COMP:*', 'V', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'CLASS:TR', 'SPEC:P', 'ASP', 'PHI:NUM:_', '-COMP:V', 'PF:loyta-', '-SPEC:T/fin', 'ASP:BOUNDED', 'PHI:DET:_', 'COMP:P', 'LF:find', '-VAL'}
Mary            ['LANG:EN']
Mary-           {'LANG:EN', '-SPEC:P', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', 'PF:Mary', '-SEM:directional', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', '-adjoinable', '-COMP:WH', '-COMP:C/fin', 'COMP:P', 'LF:Mary', '-COMP:A', '-SPEC:V', '-SPEC:R'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-SPEC:P', 'LANG:FI', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', '-SEM:directional', 'LF:Merja', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', 'PF:Merja', '-SPEC:T/fin', '-adjoinable', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'-SPEC:N', 'LANG:FI', 'ADV', 'PF:malla', '-SPEC:T/fin', 'SPEC:*', 'TAIL:T', 'adjoinable', 'COMP:v', '-SPEC:Neg/fin', 'LF:by', '-SPEC:FORCE', 'MA/inf'}
meren           ['LANG:FI']
mere-           {'-SPEC:P', 'LF:ocean', 'LANG:FI', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', 'PF:meri', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
mistake         {'LANG:EN', '-SPEC:P', 'LF:mistake', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', 'PF:mistake', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-SPEC:P', 'LANG:FI', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'LF:what', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', 'PF:mika-', '-SPEC:T/fin', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'LF:move', '-COMP:v', '-COMP:P', '-COMP:N', 'LANGN:EN', 'PF:move', '!COMP:*', 'V', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'CLASS:TR', 'SPEC:P', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', '+SEM:directional', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', '-VAL'}
mukavasti       ['LANG:EN']
mukava-         {'2SPEC', 'PF:mukavasti', 'LANG:FI', 'LF:comfortably', '0', 'SPEC:D'}
must            {'LANG:EN', 'MODAL', 'LF:must', 'COMP:T/prt', 'T', '-SPEC:Neg', '!COMP:*', '-SPEC:v', '-SPEC:C/fin', 'FIN', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'VAL', 'T/fin', 'SPEC:TO/inf', 'COMP:v', 'COMP:V', '-SPEC:FORCE', '-SPEC:N', 'COMP:Neg', 'PHI:NUM:_', '!PROBE:V', '-SPEC:T/fin', '-SPEC:TO/inf', 'SPEC:*', 'PHI:GEN:_', 'PHI:DET:_', '-COMP:INF', 'PF:must', '-SPEC:V', '!SPEC:D', 'SPEC:D'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'LANG:FI', '-COMP:v', 'PF:myy', '-COMP:P', '-COMP:N', '!COMP:*', 'V', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'CLASS:TR', 'SPEC:P', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'ASP:BOUNDED', 'PHI:DET:_', 'LF:sell', 'COMP:P', '-VAL'}
naki            ['LANG:FI']
nake-           {'LANG:FI', '-COMP:v', 'LF:see', '-COMP:P', '-COMP:N', '!COMP:*', '-COMP:MA/inf', 'V', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'CLASS:TR', 'SPEC:P', 'PF:nake', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'ASP:BOUNDED', 'PHI:DET:_', '-COMP:ESSA/inf', 'COMP:P', '-VAL'}
nayttaa         ['LANG:FI']
naytta-         {'LANG:FI', '-COMP:v', '-COMP:N', '!COMP:VA/inf', 'V', '-COMP:T/fin', 'VAL', 'SPEC:ADV', 'SEM:internal', 'SPEC:TO/inf', '-SPEC:FORCE', '!SPEC:D', 'SPEC:P', 'ASP', '-COMP:V', '-ARG', '-SPEC:T/fin', 'LF:seem', 'COMP:P', 'PF:naytta'}
ndo             {'LANG:EN', 'INF', '-COMP:FORCE', '-SPEC:T/fin', 'PRG', '!COMP:*', '?ARG', 'PF:PRG', '-COMP:T/fin', 'VAL', 'COMP:v', '-COMP:C/fin', 'COMP:V', 'LF:ing', '-SPEC:V'}
ne              {'OP', '-SPEC:P', 'LANG:FI', 'PHI:NUM:PL', '-SPEC:INF', '-COMP:uR', '!COMP:*', 'PHI:PER:3', 'COMP:N', '-SPEC:MA/lla', '-COMP:T/fin', '-SPEC:N', '!PROBE:N', '-COMP:D', '-SPEC:C', '-SPEC:D', '-ARG', '-SPEC:T/fin', 'LF:those', 'D', 'adjoinable', 'PF:ne', '-SPEC:V', '-SPEC:Neg/fin'}
niiden          ['LANG:EN']
nen             {'LANG:FI', 'PF:a', 'COMP:0', '-SPEC:D', '-SPEC:A', 'SPEC:*', 'adjoinable', 'A', 'TAIL:D', 'LF:ing'}
not             {'LANG:EN', '-COMP:D', 'PHI:NUM:_', '-SPEC:T/fin', 'Neg', 'LF:not', '-COMP:C', '!COMP:*', 'SPEC:*', 'PHI:GEN:_', 'PHI:DET:_', 'PHI:PER:_', 'ARG', 'POL:NEG', '-COMP:FIN', '-VAL', 'PF:not'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'LANG:FI', '-COMP:v', '-COMP:N', 'V', 'PF:nukku', '-COMP:T/fin', '-COMP:Neg/fin', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'PHI:PER:_', '-SPEC:FORCE', 'SPEC:P', 'ASP', '-COMP:D', 'PHI:NUM:_', '-COMP:V', '-COMP:T', '-SPEC:T/fin', 'PHI:DET:_', 'LF:sleep', 'COMP:P', 'CLASS:INTR', '-VAL', 'SPEC:D'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-SPEC:P', 'LANG:FI', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', '-COMP:WH', '-COMP:A', '-COMP:C/fin', 'COMP:P', 'LF:possessions', '-SPEC:V', '-SPEC:R', 'PF:omaisuuden'}
operatoria      ['LANG:IT']
operatoria-     {'2SPEC', 'LF:operation', 'LANG:IT', '0', 'PF:operatoria', 'SPEC:D'}
ostaa           ['LANG:FI']
osta-           {'LANG:FI', '-COMP:v', '-COMP:P', '-COMP:N', '!COMP:*', 'PF:osta', 'V', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'LF:buy', '-SPEC:FORCE', 'CLASS:TR', 'SPEC:P', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'ASP:BOUNDED', 'PHI:DET:_', 'COMP:P', '-VAL'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-SPEC:P', 'PF:paiva', 'LANG:FI', '-COMP:v', 'LF:day', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:FORCE', 'SEM:nonreferential', 'N', '-SPEC:N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
Pariisia        ['LANG:FI']
Pariisi-        {'-SPEC:P', 'LANG:FI', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', 'PF:Pariisi', '-SPEC:R', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', 'LF:Paris'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-SPEC:P', 'LANG:FI', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', '-SEM:directional', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', 'PF:Pekka', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', '-COMP:C/fin', 'LF:Pekka', '-COMP:A', '-SPEC:V', '-SPEC:R'}
pelottaa        ['LANG:FI']
pelkaa-         {'LANG:FI', 'LF:fear', 'PF:pelkaa', '-COMP:v', '-COMP:P', '-COMP:N', '!COMP:*', 'V', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'CLASS:TR', 'SPEC:P', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:DET:_', 'COMP:P', '-VAL'}
persuades       ['LANG:EN']
persuade-       {'LANG:EN', '-COMP:v', '-COMP:N', '!COMP:*', 'PF:persuade', 'COMP:TO/inf', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'SPEC:P', 'SEM:external', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', '-VAL', 'LF:persuade'}
peruuntui       ['LANG:FI']
peruuntu-       {'LANG:FI', '-COMP:v', '-COMP:N', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'PF:peruuntui', 'SPEC:P', '-SPEC:FORCE', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'LF:cancelled', 'PHI:DET:_', 'COMP:P', '-VAL', 'SPEC:D'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'LANG:FI', '-COMP:v', '-COMP:P', '-COMP:N', '!COMP:*', 'V', 'COMP:D', 'PF:pese', '-COMP:T/fin', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'PHI:PER:_', '-SPEC:FORCE', 'CLASS:TR', 'SPEC:P', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'ASP:BOUNDED', 'PHI:DET:_', 'COMP:P', 'LF:wash', '-VAL'}
pese-           {'LANG:FI', '-COMP:v', '-COMP:P', '-COMP:N', '!COMP:*', 'V', 'COMP:D', 'PF:pese', '-COMP:T/fin', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'PHI:PER:_', '-SPEC:FORCE', 'CLASS:TR', 'SPEC:P', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:DET:_', 'COMP:P', 'LF:wash', '-VAL'}
petardi         {'-SPEC:P', '-COMP:v', 'PF:petardi', 'LANG:IT', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', 'LF:firecrackers', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
pieni           ['LANG:FI']
pieni-          {'2SPEC', 'LANG:FI', 'PF:pieni-', 'LF:small', '0', 'SPEC:D'}
poikien         ['LANG:FI']
poika-          {'-SPEC:P', 'LANG:FI', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', 'LF:boy', '-SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', '-COMP:WH', '-COMP:C/fin', 'COMP:P', 'PF:poika', '-COMP:A', '-SPEC:V', '-SPEC:R'}
puhelinta       ['LANG:FI']
puhelin-        {'PF:puhelin', '2SPEC', 'LANG:FI', 'LF:phone', '0', 'SPEC:D'}
punainen        ['LANG:FI']
puna-           {'2SPEC', 'LANG:FI', 'PF:puna-', 'LF:red', '0', 'SPEC:D'}
presupposto     {'-SPEC:P', '-COMP:v', 'LF:presupposition', 'LANG:IT', '-COMP:N', 'COMP:uR', '-SPEC:INF', 'PF:presupposto', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
primary         {'-SPEC:P', '-COMP:v', 'LANG:IT', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', 'LF:nurse', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', '-COMP:WH', 'PF:primary', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
promises        ['LANG:EN']
promise-        {'LANG:EN', '-COMP:v', '-COMP:N', 'V', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'LF:promise', 'ARG', 'SPEC:ADV', 'SEM:internal', 'PF:promise', 'SPEC:TO/inf', '-SPEC:FORCE', 'SPEC:P', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', '-VAL', 'SPEC:D'}
pyytaa          ['LANG:FI']
pyyta-          {'LANG:FI', '-COMP:v', '-COMP:N', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:P', '-SPEC:FORCE', 'SEM:external', 'PF:pyyda', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'LF:ask', 'PHI:DET:_', 'COMP:P', '-VAL'}
raukesi         ['LANG:FI']
raukea-         {'LANG:FI', '-COMP:v', '-COMP:N', 'V', '-COMP:T/fin', 'PF:raukea', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'PHI:PER:_', '-SPEC:FORCE', 'SPEC:P', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:DET:_', 'COMP:P', '-VAL', 'LF:terminate'}
red             ['LANG:EN']
red-            {'LANG:EN', 'PF:red', '2SPEC', 'LF:red', '0', 'SPEC:D'}
saavuttaa       ['LANG:FI']
saavutta-       {'!COMP:D', 'LANG:FI', 'PF:saavutta-', '-COMP:v', '-COMP:P', '-COMP:N', '!COMP:*', 'V', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'CLASS:TR', 'SPEC:P', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'ASP:BOUNDED', 'PHI:DET:_', 'COMP:P', 'LF:reach', '-VAL'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'LANG:FI', '-COMP:v', '-COMP:N', 'COMP:FORCE', 'V', 'PF:sano-', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'SPEC:P', 'LF:say', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'COMP:VA/inf', 'PHI:DET:_', 'COMP:P', '-VAL', 'SPEC:D'}
said            ['LANG:EN']
say'            {'LANG:EN', '-COMP:v', '-COMP:N', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'SPEC:P', 'LF:say', 'ASP', 'PF:say', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', '!COMP:FORCE', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', '-VAL', 'SPEC:D'}
say-            {'LANG:EN', '-COMP:v', '-COMP:N', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'SPEC:P', 'LF:say', 'ASP', 'PF:say', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', '!COMP:FORCE', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', '-VAL', 'SPEC:D'}
sala            ['LANG:IT']
sala-           {'-SPEC:P', '-COMP:v', 'LANG:IT', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', 'PF:sala', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', 'LF:room', '-COMP:C/fin', '-COMP:A', '-SPEC:V', '-SPEC:R'}
scoppiati       ['LANG:IT']
scoppia-        {'-COMP:v', 'LANG:IT', '-COMP:N', 'LF:explode', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'SPEC:P', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:DET:_', 'PF:scoppia', 'COMP:P', '-VAL'}
sen             {'OP', '-SPEC:P', 'LF:the/that', 'TAIL:PHI', 'LANG:FI', 'TAIL:*POL:NEG', '-SPEC:INF', '-COMP:uR', '!COMP:*', 'COMP:N', '-SPEC:MA/lla', '-COMP:T/fin', 'PF:sen', '-SPEC:N', '!PROBE:N', '-COMP:D', '-SPEC:C', '-SPEC:D', '-ARG', '-SPEC:T/fin', 'D', 'adjoinable', 'TAIL:ASP', '-SPEC:V', '-SPEC:Neg/fin'}
se'             {'OP', '-SPEC:P', 'LF:the/that', 'LANG:FI', '-SPEC:INF', '-COMP:uR', '!COMP:*', 'COMP:N', '-SPEC:MA/lla', '-COMP:T/fin', 'PF:se', '-SPEC:N', '!PROBE:N', '-COMP:D', '-SPEC:C', '-SPEC:D', '-ARG', '-SPEC:T/fin', 'D', 'adjoinable', '-SPEC:V', '-SPEC:Neg/fin'}
sentenza        {'-SPEC:P', '-COMP:v', 'LANG:IT', '-COMP:N', 'COMP:uR', 'PF:sentenza', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-SPEC:INF', '-COMP:ADV', 'COMP:R', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', '-COMP:WH', 'LF:sentence', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
Seine           ['LANG:EN']
Seine-          {'LANG:EN', '-SPEC:P', '-COMP:v', 'PF:Seine', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R', 'LF:Seine'}
sembrano        ['LANG:IT']
sembra-         {'LANG:EN', '-COMP:v', '-COMP:N', 'V', '-COMP:T/fin', 'SPEC:ADV', 'SPEC:TO/inf', '-ASP', 'SPEC:P', '-SPEC:FORCE', '-COMP:D', '-COMP:V', '-ARG', '-SPEC:T/fin', 'PF:sembra', 'LF:seem', 'COMP:P', '-VAL', '!COMP:ARE/inf', 'SPEC:D'}
sleeps          ['LANG:EN']
sleep           {'LANG:EN', '-COMP:v', '-COMP:N', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'SPEC:P', 'ASP', '-COMP:D', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:DET:_', 'LF:sleep', 'COMP:P', 'CLASS:INTR', 'PF:sleep', '-VAL', 'SPEC:D'}
sleep-          {'LANG:EN', '-COMP:v', '-COMP:N', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'SPEC:P', 'ASP', '-COMP:D', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:DET:_', 'LF:sleep', 'COMP:P', 'CLASS:INTR', 'PF:sleep', '-VAL', 'SPEC:D'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'PF:sopimus', 'LF:agreement', 'LANG:FI', '-COMP:v', '-SPEC:P', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', '!COMP:A/inf', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
spinge          ['LANG:IT']
spinge-         {'!COMP:D', '-COMP:v', '-COMP:P', 'LANG:IT', '-COMP:N', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'LF:push', 'SPEC:P', '-SPEC:FORCE', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'PF:spinge', 'PHI:DET:_', '-VAL'}
ssa             {'-SPEC:iR', 'LANG:FI', '-SPEC:P', '-COMP:N', '-SPEC:INF', 'TAIL:V', '!COMP:*', '-SPEC:C/fin', '-COMP:ADV', '-SPEC:v', 'COMP:D', '-COMP:T/fin', '-SPEC:ADV', 'ARG', 'PHI:PER:_', 'LF:in', '-SPEC:FORCE', '-SPEC:N', '-COMP:uWH', 'PHI:NUM:_', '-SPEC:C', '-SPEC:T/fin', '-SPEC:iWH', 'SPEC:*', 'adjoinable', 'PHI:DET:_', 'P', 'PF:ssa', 'COMP:n/MA', '-VAL', '-SPEC:V', '-SPEC:Neg/fin'}
stanno          ['LANG:IT']
sta-            {'PF:sta', 'LANG:EN', '-COMP:v', '-COMP:N', 'LF:stay', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'SEM:internal', '-ASP', 'COMP:PRG', '-SPEC:FORCE', 'SPEC:P', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', '-VAL', 'SPEC:D'}
sti             {'-SPEC:N', 'LANG:FI', 'ADV', 'PF:sti', '-ARG', '-SPEC:T/fin', '!COMP:*', 'SPEC:*', 'TAIL:T', 'adjoinable', 'LF:by', '-SPEC:FORCE', '-SPEC:Neg/fin'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-SPEC:P', 'LANG:FI', 'LF:socks', '-COMP:v', '-COMP:N', 'PF:sukka-', 'COMP:uR', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-SPEC:INF', '-COMP:ADV', 'COMP:R', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
talo            {'-SPEC:P', 'LANG:FI', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', 'LF:house', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', '-COMP:WH', 'PF:talo', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
tama            ['LANG:EN']
tama-           {'-SPEC:P', 'LANG:FI', '-COMP:v', 'PF:tama', '-COMP:N', 'COMP:uR', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-SPEC:INF', '-COMP:ADV', 'COMP:R', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', 'N', 'PHI', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', 'LF:this', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'LANG:FI', 'LF:must', 'MODAL', '-COMP:v', '-COMP:N', 'PF:taytyy', 'V', 'FIN', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-ASP', '!COMP:A/inf', '-SPEC:FORCE', 'SPEC:P', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'SPEC:*', 'PHI:DET:_', 'COMP:P', '-VAL'}
teki            ['LANG:FI']
teke-           {'!COMP:D', 'LANG:FI', '-COMP:v', '-COMP:P', '-COMP:N', '!COMP:*', 'V', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'CLASS:TR', 'SPEC:P', 'LF:make', 'ASP', 'PHI:NUM:_', '-COMP:V', 'PF:teke', '-SPEC:T/fin', '-COMP:A/inf', 'ASP:BOUNDED', 'PHI:DET:_', 'COMP:P', '-VAL'}
that            {'LANG:EN', '-ARG', 'COMP:C/fin', '!COMP:*', 'FORCE', 'PF:that', 'FIN', 'COMP:T/fin', '-VAL', '!PROBE:T/fin', '-SPEC:*', 'LF:that'}
the             {'LANG:EN', 'OP', '-SPEC:P', '-SPEC:INF', '-COMP:uR', '!COMP:*', 'COMP:N', '-SPEC:MA/lla', '-COMP:T/fin', 'LF:the', 'PF:the', '-SPEC:N', '!PROBE:N', '-COMP:D', '-SPEC:C', '-SPEC:D', 'PHI:DEF:DEF', '-ARG', '-SPEC:T/fin', 'D', 'adjoinable', '-SPEC:V', '-SPEC:Neg/fin'}
to              {'LANG:EN', '-SPEC:iR', '-SPEC:P', '-COMP:N', 'PF:to', '-SPEC:INF', '!COMP:*', 'LF:to', '-SPEC:C/fin', '-COMP:ADV', '-SPEC:v', 'COMP:D', '-COMP:T/fin', '-SPEC:ADV', 'ARG', 'PHI:PER:_', '-SPEC:FORCE', '-SPEC:N', '-COMP:uWH', 'PHI:NUM:_', 'TAIL:V,+SEM:directional', '-SPEC:C', '-SPEC:T/fin', '-float', '+SEM:directional', '-SPEC:iWH', 'adjoinable', 'PHI:DET:_', 'P', 'PHI:GEN:_', '-VAL', '-SPEC:V', '-SPEC:*', '-SPEC:Neg/fin'}
to_inf          {'LANG:EN', 'LF:TO/inf', '!COMP:*', '-SPEC:v', 'PF:TO/inf', '?ARG', '-COMP:T/fin', 'COMP:v', 'COMP:V', 'TO/inf', 'INF', '-COMP:FORCE', '-SPEC:T/fin', 'adjoinable', '-COMP:C/fin', '-VAL', '-SPEC:V'}
towards         {'LANG:EN', '-SPEC:iR', '-SPEC:P', '-COMP:N', '-SPEC:INF', 'TAIL:V', '!COMP:*', '-SPEC:C/fin', '-COMP:ADV', '-SPEC:v', 'COMP:D', '-COMP:T/fin', '-SPEC:ADV', 'ARG', 'PHI:PER:_', 'PF:towards', '-SPEC:FORCE', '-SPEC:N', '-COMP:uWH', 'PHI:NUM:_', '-SPEC:C', '-SPEC:T/fin', '-float', '-SPEC:iWH', 'adjoinable', 'PHI:DET:_', 'P', 'PHI:GEN:_', '-VAL', 'LF:towards', '-SPEC:V', '-SPEC:*', '-SPEC:Neg/fin'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'LANG:FI', '-COMP:v', '-COMP:P', '-COMP:N', '!COMP:*', 'V', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'LF:nudge', '-SPEC:FORCE', 'CLASS:TR', 'SPEC:P', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PF:tonaise', 'PHI:DET:_', 'COMP:P', '-VAL'}
tta             {'-SPEC:iR', 'LANG:FI', '-SPEC:P', '-COMP:N', '-SPEC:INF', '!COMP:*', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:v', 'COMP:D', '-COMP:T/fin', '-SPEC:ADV', 'ARG', 'PHI:PER:_', '-SPEC:V', '-SPEC:FORCE', '-SPEC:N', '-COMP:uWH', 'PHI:NUM:_', 'ADV', '-SPEC:C', '-SPEC:T/fin', '-SPEC:iWH', 'SPEC:*', 'adjoinable', 'PHI:DET:_', 'P', 'COMP:n/MA', '-VAL', 'LF:without', 'PF:tta', '-SPEC:Neg/fin'}
tries           ['LANG:EN']
try-            {'LANG:EN', '-COMP:v', '!COMP:-ARG', '-COMP:N', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'LF:try', 'SEM:internal', 'SPEC:TO/inf', '!COMP:TO/inf', '-SPEC:FORCE', 'SPEC:P', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PF:try', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', '-VAL', 'SPEC:D'}
verifiche       {'-SPEC:P', '-COMP:v', 'LANG:IT', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', 'LF:verification', '-SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', '-COMP:WH', '-COMP:A', '-COMP:C/fin', 'COMP:P', 'PF:verifiche', '-SPEC:V', '-SPEC:R'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'LANG:FI', '-COMP:v', '-COMP:N', 'LF:flow', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '!COMP:P', '-SPEC:FORCE', 'SPEC:P', '-COMP:D', 'ASP', 'PHI:NUM:_', 'PF:virtaa', '-COMP:V', '-SPEC:T/fin', 'PHI:DET:_', 'COMP:P', '-VAL', 'SPEC:D'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'LANG:EN', '-COMP:v', '-COMP:N', '!COMP:*', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'SEM:internal', '-SPEC:FORCE', 'SPEC:P', 'PF:volu', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', '-VAL', 'LF:want', '-SPEC:*'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'LANG:EN', '-COMP:v', '-COMP:P', '-COMP:N', '!COMP:*', 'V', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', '-SPEC:FORCE', 'CLASS:TR', 'SPEC:P', 'SEM:achievement', 'ASP', 'PHI:NUM:_', 'PF:voitta', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'ASP:BOUNDED', 'PHI:DET:_', 'LF:win', 'COMP:P', '-VAL'}
wants           ['LANG:EN']
want-           {'LANG:EN', 'PF:want', '-COMP:v', '-COMP:P', '-COMP:N', '!COMP:*', 'V', 'COMP:TO/inf', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', '-SPEC:FORCE', 'CLASS:TR', 'SPEC:P', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', '-VAL', 'LF:want', '-SPEC:TO/inf'}
what            ['LANG:EN']
what-           {'LANG:EN', '-SPEC:P', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'LF:what', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', 'PF:what', 'PHI_N', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
which           {'PF:which', 'LANG:EN', 'OP', '-SPEC:P', '-SPEC:INF', '-COMP:uR', '!COMP:*', 'OP:WH', 'COMP:N', '-SPEC:MA/lla', '-COMP:T/fin', '-SPEC:N', '!PROBE:N', '-COMP:D', '-SPEC:C', '-SPEC:D', '-ARG', '-SPEC:T/fin', 'D', 'adjoinable', 'LF:which', '-SPEC:V', '-SPEC:Neg/fin'}
who             ['LANG:EN']
who-            {'LANG:EN', '-SPEC:P', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', 'PF:who', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', 'PHI_N', 'LF:who', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
whether         {'LANG:EN', 'OP', 'COMP:C/fin', 'OP:Q', '!COMP:*', 'LF:whether', 'FORCE', 'FIN', 'OP:WH', 'Q', 'PF:whether', '-ARG', '-VAL', '!PROBE:T/fin', '-SPEC:*', 'COMP:T/fin'}
yrittaa         ['LANG:FI']
yritta-         {'LANG:EN', '-COMP:v', '!COMP:-ARG', '-COMP:N', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'LF:try', 'SEM:internal', 'SPEC:TO/inf', '!COMP:A/inf', 'PF:yritta', '-SPEC:FORCE', 'SPEC:P', 'ASP', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', '-VAL', 'SPEC:D'}
mina            ['LANG:EN']
mina-           {'-SPEC:P', 'LANG:FI', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', 'LF:I', '-SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'PF:mina', 'COMP:R/D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', 'PHI_N', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
sina            ['LANG:EN']
sina-           {'-SPEC:P', 'LANG:FI', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:V', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', 'PHI_N', '-COMP:WH', 'PF:sina', '-COMP:C/fin', 'COMP:P', '-COMP:A', 'LF:you', '-SPEC:R'}
han             ['LANG:EN']
han-            {'-SPEC:P', 'LANG:FI', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', 'LF:s/he', '-SPEC:FORCE', '-SPEC:N', 'PF:han', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', 'PHI_N', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-SPEC:P', 'LANG:FI', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', 'PF:me', 'LF:we', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', 'PHI_N', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
te              ['LANG:EN']
te-             {'-SPEC:P', 'LANG:FI', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:V', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', 'PHI_N', '-COMP:WH', '-COMP:C/fin', 'COMP:P', 'PF:te', '-COMP:A', 'LF:you', '-SPEC:R'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he-             {'-SPEC:P', 'LANG:FI', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', 'LF:they', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', 'PF:he', 'PHI_N', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
he-             {'LANG:EN', '-SPEC:P', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', 'LF:he', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', 'PF:he', 'PHI_N', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
se              ['LANG:FI']
se-             {'OP', '-SPEC:P', 'LANG:FI', '-SPEC:INF', '-COMP:uR', '!COMP:*', 'COMP:N', '-SPEC:MA/lla', '-COMP:T/fin', 'PF:se', 'LF:it/that', '-SPEC:N', '!PROBE:N', '-COMP:D', '-SPEC:C', '-SPEC:D', '-ARG', '-SPEC:T/fin', 'D', 'adjoinable', '-SPEC:V', '-SPEC:Neg/fin'}
I               ['LANG:EN']
I-              {'LANG:EN', '-SPEC:P', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', 'LF:I', '-SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', 'PHI_N', '-COMP:WH', 'COMP:P', '-COMP:C/fin', 'PF:I', '-COMP:A', '-SPEC:V', '-SPEC:R'}
you             ['LANG:EN']
you-            {'LANG:EN', '-SPEC:P', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:V', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', 'PHI_N', '-COMP:WH', 'PF:you', '-COMP:C/fin', 'COMP:P', '-COMP:A', 'LF:you', '-SPEC:R'}
he              ['LANG:EN']
she             ['LANG:EN']
she-            {'LANG:EN', '-SPEC:P', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', 'PF:she', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', 'LF:she', 'PHI_N', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
we              ['LANG:EN']
we-             {'LANG:EN', '-SPEC:P', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', 'LF:we', '-SPEC:V', '-SPEC:FORCE', 'N', '-SPEC:N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', 'PHI_N', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', 'PF:we', '-SPEC:R'}
you_pl          ['LANG:EN']
you_pl-         {'LANG:EN', '-SPEC:P', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:R', '-SPEC:FORCE', '-SPEC:N', 'N', 'PHI', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', 'PF:you_pl', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', 'LF:you_pl'}
they            ['LANG:EN']
they-           {'LANG:EN', '-SPEC:P', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', 'PF:they', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:uWH', 'LF:they', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', 'PHI_N', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
it              ['LANG:EN']
it-             {'LANG:EN', 'OP', '-SPEC:P', '-SPEC:INF', '-COMP:uR', '!COMP:*', 'COMP:N', '-SPEC:MA/lla', '-COMP:T/fin', 'LF:it/that', '-SPEC:N', '!PROBE:N', '-COMP:D', '-SPEC:C', '-SPEC:D', '-ARG', '-SPEC:T/fin', 'D', 'adjoinable', 'PF:it', '-SPEC:V', '-SPEC:Neg/fin'}
io              ['LANG:EN']
io-             {'-SPEC:P', '-COMP:v', 'LANG:IT', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', 'LF:I', '-SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', 'PHI_N', 'PF:io', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
tu              ['LANG:EN']
tu-             {'-SPEC:P', '-COMP:v', 'LANG:IT', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', 'PF:tu', '-SPEC:V', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', 'PHI_N', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', 'LF:you', '-SPEC:R'}
lui             ['LANG:EN']
lui-            {'-SPEC:P', '-COMP:v', 'PF:lui', 'LANG:IT', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', 'LF:he', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', 'PHI_N', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
lei             ['LANG:EN']
lei-            {'-SPEC:P', '-COMP:v', 'LANG:IT', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', 'LF:she', 'PHI_N', '-COMP:WH', '-COMP:C/fin', 'COMP:P', 'PF:lei', '-COMP:A', '-SPEC:V', '-SPEC:R'}
noi             ['LANG:EN']
noi-            {'-SPEC:P', '-COMP:v', 'LANG:IT', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', 'PF:noi', 'LF:we', '-SPEC:FORCE', 'N', '-SPEC:N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', 'PHI_N', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
voi             ['LANG:EN']
voi-            {'-SPEC:P', '-COMP:v', 'LANG:IT', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', 'PF:voi', '-COMP:T/fin', '-SPEC:uWH', '-SPEC:R', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', 'PHI_N', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', 'LF:you_pl'}
loro            ['LANG:EN']
loro-           {'-SPEC:P', '-COMP:v', 'LANG:IT', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', '-SPEC:uWH', 'LF:they', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', 'PHI_N', 'PF:loro', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
mi              ['LANG:EN']
mi-             {'-COMP:v', 'LANG:IT', '-COMP:N', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', 'LF:me', '-COMP:T/fin', '-COMP:D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', 'PF:mi(cl)', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:R', '-SPEC:P', 'COMP:uR', '-SPEC:INF', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', 'N', 'COMP:R/D', 'PHI_N', 'CL', '-COMP:C/fin', '-COMP:A'}
la              ['LANG:EN']
la-             {'-COMP:v', 'LANG:IT', '-COMP:N', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:T/fin', 'LF:her', '-COMP:D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:R', '-SPEC:P', 'COMP:uR', '-SPEC:INF', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-SPEC:uWH', '-SPEC:FORCE', 'PF:la(cl)', 'N', '-SPEC:N', 'COMP:R/D', 'PHI_N', 'CL', '-COMP:C/fin', '-COMP:A'}
lo              ['LANG:EN']
lo-             {'-COMP:v', 'LANG:IT', '-COMP:N', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:T/fin', 'LF:him', '-COMP:D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', '-COMP:WH', 'COMP:P', '-SPEC:V', '-SPEC:R', '-SPEC:P', 'COMP:uR', '-SPEC:INF', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', 'N', 'COMP:R/D', 'PHI_N', 'PF:lo(cl)', 'CL', '-COMP:C/fin', '-COMP:A'}
si              ['LANG:EN']
si-             {'-COMP:v', 'LANG:IT', '-COMP:N', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:T/fin', '-COMP:D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', '-COMP:WH', '-SPEC:V', '-SPEC:R', '-SPEC:P', 'COMP:uR', '-SPEC:INF', 'CAL:CL', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-SPEC:uWH', 'LF:3sg', '-SPEC:FORCE', '-SPEC:N', 'N', 'COMP:R/D', 'PHI_N', '-COMP:C/fin', 'COMP:P', '-COMP:A', 'PF:si(cl)'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-SPEC:P', '-COMP:v', 'LANG:IT', '-COMP:N', 'COMP:uR', '-SPEC:INF', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-SPEC:ADV', '-COMP:T/fin', 'LF:there', '-SPEC:uWH', '-SPEC:FORCE', '-SPEC:N', 'N', '-COMP:D', 'COMP:R/D', '-COMP:V', '-COMP:*', '-SPEC:T/fin', 'PHI_N', '-COMP:WH', 'COMP:P', 'PF:ci', '-COMP:C/fin', '-COMP:A', '-SPEC:V', '-SPEC:R'}
[-n]            {'PHI', 'inflectional', 'LANG:FI', 'PHI:PER:1', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-t]            {'PHI', 'inflectional', 'LANG:FI', 'PHI:PER:2', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-V]            {'PHI:PER:3', 'PHI', 'inflectional', 'LANG:FI', 'PHI:NUM:SG'}
[-mme]          {'PHI', 'inflectional', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:PER:1', 'PHI:NUM:PL', 'PHI:DET:DEF'}
[-mme]          {'LANG:FI', 'inflectional', 'PHI:NUM:PL', 'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-tte]          {'PHI', 'inflectional', 'LANG:FI', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:NUM:PL', 'PHI:DET:DEF'}
[-vat]          {'PHI:PER:3', 'PHI', 'inflectional', 'LANG:FI', 'PHI:NUM:PL'}
[-ni]           {'PHI', 'inflectional', 'LANG:FI', 'PHI:PER:1', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-si]           {'PHI', 'inflectional', 'LANG:FI', 'PHI:PER:2', 'PHI:NUM:SG', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-nsa]          {'PHI:PER:3', 'PHI', 'inflectional', 'LANG:FI', 'PHI:NUM:SG'}
[-an]           {'PHI:PER:3', 'PHI', 'inflectional', 'LANG:FI'}
[-nne]          {'LANG:FI', 'inflectional', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:NUM:PL', 'PHI:DET:DEF'}
[-s]            {'LANG:EN', 'PHI:GEN:F', 'PHI', 'inflectional', 'PHI:PER:3', 'PHI:NUM:SG', 'PHI:GEN:M'}
[-0]            {'LANG:EN', 'PHI', 'inflectional', 'PHI:NUM:SG', 'PHI:NUM:PL', 'PHI:PER:3', 'PHI:PER:2', 'PHI:PER:1', 'PHI:GEN:N', 'PHI:DET:DEF'}
[-o]            {'PHI', 'inflectional', 'PHI:PER:1', 'PHI:NUM:SG', 'LANG:IT', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-i]            {'PHI', 'inflectional', 'PHI:PER:2', 'PHI:NUM:SG', 'LANG:IT', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-a]            {'PHI:PER:3', 'PHI', 'inflectional', 'PHI:NUM:SG', 'LANG:IT', 'PHI:DET:DEF'}
[-e]            {'PHI:PER:3', 'PHI', 'inflectional', 'PHI:NUM:SG', 'LANG:IT', 'PHI:DET:DEF'}
[-iamo]         {'PHI', 'inflectional', 'PHI:HUM:HUM', 'PHI:PER:1', 'LANG:IT', 'PHI:NUM:PL', 'PHI:DET:DEF'}
[-te]           {'PHI', 'inflectional', 'PHI:HUM:HUM', 'PHI:PER:2', 'LANG:IT', 'PHI:NUM:PL', 'PHI:DET:DEF'}
[-no]           {'PHI:PER:3', 'PHI', 'inflectional', 'LANG:IT', 'PHI:NUM:PL', 'PHI:DET:DEF'}
[-nom]          {'LANG:EN', 'inflectional', 'NOM', 'TAIL:FIN,ARG,VAL', 'adjoinable'}
[-par]          {'TAIL:ARG,-VAL', 'LANG:FI', 'inflectional', 'PAR', 'adjoinable'}
[-gen]          {'LANG:EN', 'TAIL:INF,ARG', 'inflectional', 'GEN', '-float'}
gen             {'LANG:EN', 'TAIL:INF,ARG', 'inflectional', 'GEN', '-float'}
[-n_acc]        {'LANG:FI', 'inflectional', 'TAIL:PHI', 'n-ACC', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'adjoinable'}
[-t_acc]        {'t-ACC', 'LANG:FI', 'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'adjoinable'}
[-0_acc]        {'0_ACC', 'LANG:FI', 'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*PHI', 'TAIL:*POL:NEG', 'adjoinable'}
asp             {'ASP:BOUNDED', 'LANG:EN', 'inflectional'}
a'              {'PF:a', 'LF:A', 'LANG:X', 'a'}
b'              {'LF:B', 'b', 'LANG:X', 'PF:b'}
b''             {'LANG:EN', '-COMP:c', 'b', 'LF:B', 'PF:b'}
c''             {'LANG:EN', 'LF:C', 'c', 'PF:c', 'SPEC:a'}
c'              {'LF:C', 'LANG:X', 'c', 'PF:c'}
d'              {'LANG:', 'PF:d', 'LF:D', 'd'}
a''             ['LANG:EN']
x'              {'PF:x', 'LF:X', 'LANG:X', 'x'}
y'              {'LF:Y', 'y', 'LANG:X', 'PF:y'}
z'              {'PF:x', 'LANG:X', 'LF:Z', 'z'}
John'           {'LF:John', 'PF:John', "N'", 'LANG:X'}
admires'        {'PF:admires', "V'", 'LANG:X', 'LF:admires'}
admires''       {'LANG:EN', '-COMP:v', '-COMP:N', 'V', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'SPEC:ADV', 'SPEC:TO/inf', 'SPEC:P', '-SPEC:FORCE', 'ASP', 'LF:admires', 'PHI:NUM:_', '-COMP:V', '-SPEC:T/fin', 'PHI:GEN:_', 'PHI:DET:_', 'COMP:P', 'PF:admires', '-VAL', 'SPEC:D'}
Mary'           {'PF:Mary', 'LF:mary', "N'", 'LANG:X'}
T/fin           {'LANG:EN', 'COMP:T/prt', 'T', '-SPEC:Neg', '!COMP:*', '-SPEC:v', 'PF:T', '-SPEC:C/fin', 'FIN', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'VAL', 'T/fin', 'SPEC:TO/inf', 'COMP:v', 'COMP:V', '-SPEC:FORCE', '-SPEC:N', 'PHI:NUM:_', '!PROBE:V', '-SPEC:T/fin', '-SPEC:TO/inf', 'SPEC:*', 'PHI:GEN:_', 'PHI:DET:_', 'LF:T', '-COMP:INF', '-SPEC:V', '!SPEC:D', 'SPEC:D'}
v               {'LANG:EN', '-SPEC:N', 'ASP', 'PHI:NUM:_', 'v', '!PROBE:V', '!COMP:*', 'PHI:GEN:_', 'PHI:DET:_', 'PHI:PER:_', 'LF:v', 'ARG', 'PF:v', 'COMP:V', '-VAL', 'SPEC:D'}
C/fin           {'LANG:EN', '!PROBE:FIN', '!COMP:*', '-SPEC:C/fin', 'FIN', 'VAL', 'COMP:Neg/fin', 'PF:C', 'LF:C/fin', 'C/fin', '-SPEC:N', '-COMP:T/prt', '-ARG', 'C', '-SPEC:T/fin', 'SPEC:*', '-COMP:C/fin', 'COMP:T/fin'}
T               {'LANG:EN', 'COMP:T/prt', 'T', '-COMP:NEG', '!COMP:*', 'PF:T', 'FIN', 'COMP:D', 'PHI:PER:_', 'ARG', 'VAL', 'COMP:v', 'COMP:V', '-SPEC:FORCE', '-SPEC:N', 'PHI:NUM:_', '!PROBE:V', '-SPEC:T/fin', 'SPEC:*', 'PHI:GEN:_', 'PHI:DET:_', 'LF:T', '-SPEC:V', 'SPEC:D'}
T/prt           {'T/prt', 'PF:T/prt', 'LANG:EN', 'COMP:T/prt', 'T', '-COMP:NEG', '!COMP:*', 'LF:T/prt', 'FIN', 'COMP:D', 'PHI:PER:_', 'ARG', 'VAL', 'COMP:v', 'COMP:V', '-SPEC:FORCE', '-SPEC:N', 'PHI:NUM:_', '!PROBE:V', '-SPEC:T/fin', 'SPEC:*', 'PHI:GEN:_', 'PHI:DET:_', '-SPEC:V', 'SPEC:D'}
a0              {'LANG:EN', 'PF:A', 'COMP:0', '-SPEC:A', '-SPEC:D', 'LF:A', 'adjoinable', 'A', '-adjoinable', 'TAIL:D'}
n               {'LANG:EN', '-COMP:v', '-COMP:N', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '!COMP:*', '!SPEC:*', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'VAL', '-COMP:D', '-COMP:V', '-SPEC:T/fin', 'SPEC:*', 'PHI:GEN:_', '-COMP:WH', '-SPEC:V', '!SPEC:D', '-SPEC:R', '-SPEC:P', 'COMP:uR', '-SPEC:INF', '-COMP:ADV', 'COMP:R', 'LF:n', '-SPEC:ADV', '-SPEC:uWH', 'COMP:v', 'n', 'COMP:V', '-SPEC:FORCE', '-SPEC:N', 'N', 'COMP:R/D', 'INF', 'PHI:NUM:_', 'COMP:0', 'PF:n', 'PHI:DET:_', '-COMP:C/fin', 'COMP:P', '-COMP:A'}
impass          {'LANG:EN', '-SPEC:N', 'ASP', 'LF:impass', 'PHI:NUM:_', 'v', '!PROBE:V', '!COMP:*', 'PHI:GEN:_', 'PHI:DET:_', 'PHI:PER:_', 'ARG', 'COMP:V', 'PF:impass', '-VAL', 'SPEC:D'}
cau             {'LANG:EN', '-SPEC:N', 'PF:Cau', 'ASP', 'LF:v/Cause', 'PHI:NUM:_', 'v', '!PROBE:V', '!COMP:*', 'PHI:GEN:_', 'PHI:DET:_', 'PHI:PER:_', 'ARG', 'COMP:V', '-VAL', 'SPEC:D'}
INF             {'LANG:EN', 'PF:INF', 'INF', '-COMP:FORCE', '-SPEC:T/fin', 'LF:INF', '!COMP:*', '-COMP:T/fin', 'COMP:v', '-COMP:C/fin', 'COMP:V', '-SPEC:V'}
prtcpl          {'T/prt', 'PF:T/prt', 'LANG:EN', 'COMP:T/prt', 'T', '-COMP:NEG', '!COMP:*', 'LF:T/prt', 'FIN', 'COMP:D', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'VAL', 'COMP:v', 'COMP:V', '-SPEC:FORCE', '-SPEC:N', 'INF', 'PHI:NUM:_', '-COMP:FORCE', '!PROBE:V', '-SPEC:T/fin', 'SPEC:*', 'PHI:GEN:_', 'PHI:DET:_', '-COMP:C/fin', '-SPEC:V', 'SPEC:D'}
TO/inf          {'LANG:EN', '!COMP:V', 'LF:TO/inf', '!COMP:*', '-SPEC:v', 'PF:TO/inf', '?ARG', '-COMP:T/fin', 'COMP:v', 'COMP:V', 'TO/inf', 'INF', '-COMP:FORCE', '-SPEC:T/fin', 'adjoinable', '-COMP:C/fin', '-VAL', '-SPEC:V'}
A/inf           {'LANG:EN', 'A/inf', 'PF:A/inf', 'LF:A/inf', '!COMP:*', '?ARG', '-COMP:T/fin', 'COMP:v', 'COMP:V', 'INF', '-COMP:FORCE', '-SPEC:T/fin', 'SPEC:*', '-COMP:C/fin', '?VAL', '-SPEC:V', '-SPEC:Neg/fin'}
ARE/inf         {'LANG:EN', 'PF:are', '!COMP:*', '?ARG', '-COMP:T/fin', 'LF:ARE/inf', 'VAL', 'COMP:v', 'COMP:V', 'INF', '-COMP:FORCE', '-SPEC:T/fin', 'SPEC:*', '-adjoinable', '-COMP:C/fin', 'ARE/inf', '-SPEC:V'}
ESSA/inf        {'LANG:EN', '!COMP:*', '?ARG', '-COMP:T/fin', 'COMP:v', 'COMP:V', '-SPEC:FORCE', '-SPEC:N', 'LF:while', 'INF', 'ADV', '-COMP:FORCE', '-SPEC:T/fin', 'SPEC:*', 'TAIL:T', 'adjoinable', 'ESSA/inf', '-COMP:C/fin', 'PF:essa', '?VAL', '-SPEC:V', '-SPEC:Neg/fin'}
TUA/inf         {'LANG:EN', 'LF:after', '!COMP:*', '!SPEC:*', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'COMP:v', 'PF:tua', 'COMP:V', '-SPEC:FORCE', '-SPEC:N', 'INF', 'PHI:NUM:_', 'ADV', 'TUA/inf', '-COMP:FORCE', '-SPEC:T/fin', 'TAIL:T', 'adjoinable', 'PHI:DET:_', 'PHI:GEN:_', '-COMP:C/fin', '-SPEC:V', 'CAL', '-SPEC:Neg/fin'}
VA/inf          {'LANG:EN', 'LF:VA', '!COMP:*', 'PF:vAn', '!SPEC:*', '-COMP:T/fin', 'PHI:PER:_', 'ARG', 'VAL', 'COMP:v', 'COMP:V', '-SPEC:N', 'INF', 'PHI:NUM:_', '-COMP:FORCE', '-SPEC:T/fin', 'VA/inf', 'SPEC:*', 'PHI:GEN:_', 'PHI:DET:_', '-COMP:C/fin', '-SPEC:V'}
MA/ssa          {'LANG:EN', 'TAIL:V', 'LF:in_doing', 'PF:massa', 'ARG', 'COMP:v', 'PHI:PER:_', 'COMP:V', '-SPEC:FORCE', 'MA/inf', '-SPEC:N', 'PHI:NUM:_', 'ADV', '-SPEC:T/fin', 'adjoinable', 'PHI:DET:_', 'PHI:GEN:_', '-VAL', '-SPEC:*', '-SPEC:Neg/fin'}
MA/tta          {'LANG:EN', '-SPEC:N', 'PHI:NUM:_', 'ADV', 'PF:matta', '-SPEC:T/fin', 'LF:without_doing', 'TAIL:T', 'adjoinable', 'PHI:DET:_', 'PHI:GEN:_', 'PHI:PER:_', 'ARG', '-SPEC:Neg/fin', '-VAL', '-SPEC:FORCE', 'MA/inf'}
MA/lla          {'LANG:EN', 'PF:malla', 'PHI:PER:_', 'LF:by_doing', 'ARG', 'ADV', '-SPEC:T/fin', 'TAIL:T', 'adjoinable', 'PHI:GEN:_', 'COMP:v', 'COMP:V', '-SPEC:FORCE', 'MA/inf', '-SPEC:N', 'PHI:NUM:_', 'PHI:DET:_', '-VAL', '-SPEC:Neg/fin'}
MA/inf          {'LANG:EN', 'TAIL:V', 'PHI:PER:_', 'ARG', 'ADV', 'LF:to_do', '-SPEC:T/fin', 'PF:maan', 'adjoinable', 'PHI:GEN:_', 'COMP:v', 'COMP:V', '-SPEC:FORCE', 'MA/inf', '-SPEC:N', 'PHI:NUM:_', 'PHI:DET:_', '-VAL', '-SPEC:Neg/fin'}
E/inf           {'-SPEC:N', 'LANG:FI', '-SPEC:FORCE', 'ADV', '-ARG', '-SPEC:T/fin', 'SPEC:*', 'adjoinable', '-VAL', 'LF:by', 'PF:en', '-SPEC:Neg/fin'}
BE-             {'LANG:EN', 'COMP:T/prt', '-COMP:v', '-COMP:N', '!COMP:*', 'V', '-COMP:T/fin', 'SPEC:ADV', 'SPEC:TO/inf', 'COPULA', '-SPEC:FORCE', 'SPEC:P', 'ASP', '-COMP:V', '-ARG', '-SPEC:T/fin', 'LF:BE', 'PF:BE', 'COMP:P', '-VAL', 'SPEC:D'}
D               {'LANG:EN', 'OP', '-SPEC:P', '-SPEC:INF', '-COMP:uR', '!COMP:*', 'COMP:N', '-SPEC:MA/lla', '-COMP:T/fin', 'LF:D', '-SPEC:N', '!PROBE:N', 'PF:D', '-COMP:D', '-SPEC:C', '-SPEC:D', '-ARG', '-SPEC:T/fin', 'D', 'adjoinable', '-SPEC:V', '-SPEC:Neg/fin'}
P               {'LANG:EN', '-SPEC:iR', '-SPEC:P', '-COMP:N', '-SPEC:INF', '!COMP:*', '-COMP:ADV', '-SPEC:C/fin', '-SPEC:v', 'COMP:D', '-COMP:T/fin', '-SPEC:ADV', 'ARG', 'PHI:PER:_', '-SPEC:Neg/fin', '-SPEC:FORCE', '-SPEC:N', '-COMP:uWH', 'PHI:NUM:_', '-SPEC:C', '-SPEC:T/fin', '-float', '-SPEC:iWH', 'adjoinable', 'LF:P', 'P', 'PHI:DET:_', 'PHI:GEN:_', '-VAL', '-SPEC:V', '-SPEC:*', 'PF:P'}
pro             ['LANG:EN']
pro-            {'LANG:EN', '-SPEC:P', '-COMP:v', '-COMP:N', 'COMP:uR', '-SPEC:INF', 'LF:pro', '-COMP:AUX', 'SPEC:A', '-SPEC:C/fin', '-COMP:ADV', 'COMP:R', '-COMP:T/fin', '-SPEC:ADV', '-SPEC:uWH', 'PF:(pro)', '-SPEC:FORCE', '-SPEC:N', 'N', 'PHI', '-COMP:D', 'COMP:R/D', '-COMP:V', '-SPEC:T/fin', '-COMP:WH', '-COMP:C/fin', 'COMP:P', '-COMP:A', '-SPEC:V', '-SPEC:R'}
cl              {'LANG:EN', 'RIGHT:ARE/inf', 'inflectional', 'LEFT:T/fin', 'CL', 'LEFT:D,CL', 'RIGHT:PRG'}
inc             {'INCORPORATED', 'inflectional', 'LANG:EN'}
sg              {'LANG:EN', 'inflectional', 'PHI:NUM:SG'}
pl              {'LANG:EN', 'PHI:NUM:PL', 'inflectional'}
1p              {'LANG:EN', 'inflectional', 'PHI:PER:1'}
2p              {'LANG:EN', 'inflectional', 'PHI:PER:2'}
3p              {'LANG:EN', 'PHI:PER:3', 'inflectional'}
def             {'LANG:EN', 'inflectional', 'PHI:DET:DEF'}
indef           {'LANG:EN', 'inflectional', 'PHI:DET:INDEF'}
hum             {'LANG:EN', 'PHI:HUM:HUM', 'inflectional'}
nonhum          {'LANG:EN', 'inflectional', 'PHI:HUM:NONHUM'}
m               {'LANG:EN', 'inflectional', 'PHI:GEN:M'}
f               {'PHI:GEN:F', 'inflectional', 'LANG:EN'}
nom             {'NOM', 'inflectional', 'LANG:EN', 'TAIL:FIN,!COMP:*,VAL'}
acc             {'LANG:EN', 'TAIL:v', 'ACC', 'inflectional'}
dat             {'DAT', 'TAIL:v', 'inflectional', 'LANG:EN'}
uC/op           {'LANG:EN', 'inflectional', 'uC/op'}
wh              {'OP:WH', 'inflectional', 'LANG:EN', 'OP:_'}
wh_             {'OP', 'LANG:EN', 'inflectional', 'OP:_', 'FORCE:OP:WH'}
top             {'LANG:EN', 'inflectional', 'OP:TOP'}
foc             {'LANG:EN', 'OP:FOC', 'inflectional'}
C/op            {'LANG:EN', 'inflectional', 'OP:C/OP'}
rel             {'LANG:EN', 'inflectional', '-COMP:C/fin', 'OP:REL', 'adjoinable'}
Q               {'OP', 'LANG:EN', 'OP:WH', 'inflectional', 'OP:Q'}
