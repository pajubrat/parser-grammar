ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'-SPEC:FORCE', '-COMP:ADV', '-SPEC:Neg/fin', '!COMP:*', '-ARG', '-SPEC:C', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-SPEC:iR', 'PF:a', '-SPEC:v', '-SPEC:*', '-SPEC:iWH', 'adjoinable', 'LF:to', '-SPEC:T/fin', 'COMP:ARE/inf', '-COMP:uWH', 'P', '-SPEC:P', 'COMP:D', '-VAL', '-SPEC:V', '-COMP:T/fin', 'LANG:IT', '-SPEC:C/fin'}
a_D             {'-SPEC:Neg/fin', '-SPEC:D', '!COMP:*', '-SPEC:C', '-ARG', '-SPEC:INF', '-SPEC:N', 'OP', '-COMP:D', '!PROBE:N', '-COMP:T/fin', 'LF:D', 'D', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:T/fin', 'adjoinable', '-SPEC:P', '-SPEC:V', 'PF:D', 'COMP:N', 'LANG:EN'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-SPEC:FORCE', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'V', 'LF:admire', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:v', '-COMP:Neg', 'COMP:P', '-COMP:V', 'ARG', '-COMP:P', '-SPEC:Neg', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'PF:admire', 'CLASS:TR', 'COMP:D', '-VAL', '-COMP:T/fin', 'PHI:GEN:_', 'LANG:EN'}
admire*         ['LANG:EN']
T/fin*          {'NO_NUMBER', 'LANG:EN', 'LF:T', '!SPEC:*', 'NO_DET', '-VAL', "PF:T/fin'", 'CAT:T/fin'}
v*              {'NO_NUMBER', 'NO_DET', '-VAL', 'CAT:v', 'LF:v', 'PF:v', 'LANG:EN'}
admire**        ['LANG:EN']
T/fin**         {'NO_NUMBER', 'PHI:PER:3', 'LANG:EN', 'LF:T', 'NO_PERSON', '!SPEC:*', "PF:T/fin''", 'NO_DET', '-VAL', 'CAT:T/fin'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'-SPEC:FORCE', 'PHI:DET:_', 'SPEC:P', 'V', 'PF:adora', 'LF:admire', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'COMP:D', '-VAL', '-COMP:T/fin', 'LANG:IT', 'PHI:GEN:_'}
antaa           ['LANG:FI']
anta-           {'-SPEC:FORCE', 'LF:give', 'CLASS:DITR', 'ASP:BOUNDED', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:FIN', '-COMP:V', 'SPEC:D', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'PF:antaa', '+SEM:directional', 'COMP:D', '-VAL', '-COMP:T/fin'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'-SPEC:FORCE', 'PHI:DET:_', 'SPEC:P', 'V', 'SPEC:TO/inf', 'PF:ask', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', 'SEM:internal', 'LF:ask', '-COMP:v', 'COMP:P', '-COMP:V', 'SPEC:D', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'COMP:D', '-VAL', '-COMP:T/fin', 'PHI:GEN:_', 'LANG:EN'}
ask-            {'-SPEC:FORCE', 'PHI:DET:_', 'SPEC:P', 'V', 'SPEC:TO/inf', 'PF:ask', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', 'SEM:internal', 'LF:ask', '-COMP:v', 'COMP:P', '-COMP:V', 'SPEC:D', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'COMP:D', '-VAL', '-COMP:T/fin', 'PHI:GEN:_', 'LANG:EN'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', 'PF:avain', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:C/fin', '-COMP:D', '-COMP:v', 'N', 'LF:key', 'COMP:P', '-COMP:V', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', '-SEM:directional', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', '-SPEC:C/fin', '-SPEC:uWH'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', 'LF:car', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:C/fin', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:V', 'PF:auto', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', '-SEM:directional', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', '-SPEC:C/fin', '-SPEC:uWH'}
city            {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', 'LF:city', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-SPEC:uWH', '-COMP:V', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', 'PF:city', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN'}
che             ['LANG:IT']
che-            {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', 'LF:who', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', 'PF:che', '-COMP:V', 'PHI_N', '-COMP:A', 'SPEC:A', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:WH', '-COMP:*', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', 'LANG:IT', '-SPEC:C/fin', '-SPEC:uWH'}
chiamato        ['LANG:IT']
chiamata-       {'LF:called', '-SPEC:FORCE', 'PHI:DET:_', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '-VAL', '-COMP:T/fin', 'LANG:IT', 'PHI:GEN:_', 'PF:chiamato'}
danno           {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', 'LF:damage', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:V', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', 'PF:danno', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', 'LANG:IT', '-SPEC:C/fin', '-SPEC:uWH'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'-SPEC:FORCE', 'PHI:DET:_', 'PF:detest', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', 'SEM:internal', '-COMP:v', 'COMP:P', '-COMP:V', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'COMP:ARE/inf', 'LF:detest', 'COMP:D', '-VAL', '-COMP:T/fin', 'LANG:IT', 'PHI:GEN:_'}
devono          ['LANG:EN']
deva-           {'-SPEC:FORCE', 'PHI:DET:_', '-ASP', 'SPEC:P', 'LF:must', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', 'SEM:internal', '-COMP:v', 'COMP:P', '-COMP:V', 'SPEC:D', 'ARG', '-SPEC:T/fin', 'SPEC:ADV', 'PHI:GEN:_', 'COMP:ARE/inf', '-VAL', '-COMP:T/fin', 'LANG:IT', 'PF:deva'}
di              {'-SPEC:FORCE', '-COMP:ADV', '-SPEC:Neg/fin', '!COMP:*', 'PHI:DET:_', '-SPEC:C', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', 'LANG:FI', '-SPEC:iR', 'PHI:PER:_', 'PHI:NUM:_', '-SPEC:v', 'ARG', '-SPEC:iWH', '-SPEC:T/fin', 'LF:of', '-COMP:uWH', 'P', 'PF:di', '-SPEC:P', 'COMP:D', '-VAL', '-adjoinable', '-SPEC:V', '-COMP:T/fin', '-SPEC:C/fin', 'SPEC:*'}
does            {'PHI:DET:_', 'COMP:Neg', 'SPEC:TO/inf', '-SPEC:N', 'COMP:v', 'PHI:GEN:M', 'SPEC:D', '-SPEC:T/fin', 'PF:does', 'COMP:D', 'SPEC:*', '-SPEC:FORCE', 'PHI:PER:3', '!COMP:*', 'PHI:GEN:F', 'COMP:T/prt', '!SPEC:D', 'LF:does', 'FIN', 'PHI:PER:_', 'PHI:NUM:_', 'T', '-SPEC:v', 'ARG', '-SPEC:TO/inf', 'PHI:NUM:SG', '-SPEC:Neg', 'PHI:GEN:_', 'T/fin', '!PROBE:V', 'COMP:V', '-SPEC:V', '-COMP:T/fin', '-COMP:INF', 'VAL', '-SPEC:C/fin', 'LANG:EN'}
does_C          ['LANG:EN']
does-           {'PHI:DET:_', 'COMP:Neg', 'SPEC:TO/inf', '-SPEC:N', 'COMP:v', 'PHI:GEN:M', 'SPEC:D', '-SPEC:T/fin', 'PF:does', 'COMP:D', 'SPEC:*', '-SPEC:FORCE', 'PHI:PER:3', '!COMP:*', 'PHI:GEN:F', 'COMP:T/prt', '!SPEC:D', 'LF:does', 'FIN', 'PHI:PER:_', 'PHI:NUM:_', 'T', '-SPEC:v', 'ARG', '-SPEC:TO/inf', 'PHI:NUM:SG', '-SPEC:Neg', 'PHI:GEN:_', 'T/fin', '!PROBE:V', 'COMP:V', '-SPEC:V', '-COMP:T/fin', '-COMP:INF', 'VAL', '-SPEC:C/fin', 'LANG:EN'}
dorme           ['LANG:IT']
dorme-          {'-SPEC:FORCE', 'PHI:DET:_', '!SPEC:D', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LF:sleep', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '-VAL', 'PF:dorme', '-COMP:T/fin', 'PHI:GEN:_', 'LANG:EN'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'!COMP:*', 'PHI:DET:_', 'COMP:T/prt', 'PF:ei', 'FIN', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', 'SEM:internal', 'Neg/fin', 'ARG', 'LF:neg', 'POL:NEG', '-SPEC:T/fin', '!SPEC:*', '-SPEC:T', 'NEG', '!COMP:T', 'VAL', '%SPEC:INF', 'SPEC:*'}
e-              {'!COMP:*', 'PHI:DET:_', 'COMP:T/prt', 'PF:ei', 'FIN', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', 'SEM:internal', 'Neg/fin', 'ARG', 'LF:neg', 'POL:NEG', '-SPEC:T/fin', '!SPEC:*', '-SPEC:T', 'NEG', '!COMP:T', 'VAL', '%SPEC:INF', 'SPEC:*'}
elaa            ['LANG:FI']
ela-            {'-SPEC:FORCE', 'PHI:DET:_', 'LF:live', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-COMP:D', '-COMP:v', 'COMP:P', '-COMP:V', 'SPEC:D', 'ARG', 'PF:elaa', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '-VAL', '-COMP:T/fin', 'CLASS:INTR'}
etsii           ['LANG:FI']
etsi-           {'-SPEC:FORCE', 'PHI:DET:_', '!COMP:D', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-COMP:v', 'COMP:P', 'PF:etsi', '-COMP:V', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'COMP:D', '-VAL', '-COMP:T/fin', 'LF:search'}
etta            {'!COMP:*', '-SPEC:*', 'FORCE', '-ARG', '!PROBE:T/fin', 'LF:that', 'COMP:T/fin', 'FIN', 'COMP:C/fin', '-VAL', 'PF:etta', 'LANG:FI'}
flow'           {'-SPEC:FORCE', 'PHI:DET:_', 'SPEC:P', 'V', 'SPEC:TO/inf', 'PF:flow', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'SPEC:D', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '-VAL', '-COMP:T/fin', 'PHI:GEN:_', 'LF:flow', 'LANG:EN'}
from            {'-SPEC:FORCE', 'PF:from', 'LF:from', '-COMP:ADV', '-SPEC:Neg/fin', '!COMP:*', '-float', '-SPEC:C', 'PHI:DET:_', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-SPEC:iR', 'PHI:PER:_', 'PHI:NUM:_', '-SPEC:v', '-SPEC:*', 'ARG', '-SPEC:iWH', 'adjoinable', '-SPEC:T/fin', '-COMP:uWH', 'P', '-SPEC:P', 'COMP:D', '-VAL', '-SPEC:V', '-COMP:T/fin', 'TAIL:V,+SEM:directional', 'PHI:GEN:_', '-SPEC:C/fin', 'LANG:EN'}
gave            ['LANG:EN']
give-           {'-SPEC:FORCE', 'LF:give', 'CLASS:DITR', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:FIN', 'PF:give', '-COMP:V', 'SPEC:D', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '+SEM:directional', 'COMP:D', '-VAL', '-COMP:T/fin', 'PHI:GEN:_', 'LANG:EN'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', '-SEM:directional', '-COMP:WH', 'PF:Giuseppe', '-SPEC:P', 'LF:Giuseppe', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', 'LANG:IT', '-SPEC:C/fin', '-SPEC:uWH'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'-SPEC:FORCE', 'ASP:BOUNDED', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'LF:want', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', 'SEM:internal', 'PF:haluaa', '-COMP:v', 'COMP:P', '-COMP:T/fin', '-COMP:V', '-SPEC:*', 'ARG', '-COMP:P', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'CLASS:TR', 'COMP:D', '-VAL', 'COMP:A/inf'}
hairitsee       ['LANG:FI']
hairitse-       {'-SPEC:FORCE', 'PHI:DET:_', '!COMP:D', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:FIN', '-COMP:V', 'PF:hairitsee', 'SPEC:D', 'ARG', 'LF:disturb', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '-VAL', '-COMP:T/fin'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'-SPEC:FORCE', 'PHI:DET:_', '-ASP', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'COMP:T', 'PHI:NUM:_', 'SEM:internal', '-COMP:v', 'COMP:P', '-COMP:V', 'SPEC:D', 'ARG', '-SPEC:T/fin', 'SPEC:ADV', 'LF:have', 'PF:ha', '-VAL', '-COMP:T/fin', 'LANG:IT', 'PHI:GEN:_', 'SPEC:*'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'-SPEC:FORCE', 'PHI:DET:_', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'LF:disappear', 'PHI:NUM:_', '-COMP:D', '-COMP:v', 'COMP:P', '-COMP:V', 'SPEC:D', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'PF:havia', '-VAL', '-COMP:T/fin', 'CLASS:INTR'}
ihailen         ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'-SPEC:FORCE', '!COMP:*', 'PHI:DET:_', '!COMP:D', 'SPEC:P', 'V', 'LF:admire', 'PF:ihaile-', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:FIN', '-COMP:V', 'ARG', '-COMP:P', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'CLASS:TR', 'COMP:D', '-VAL', '-COMP:T/fin'}
il              {'-SPEC:Neg/fin', '-SPEC:D', '!COMP:*', '-SPEC:C', '-ARG', '-SPEC:INF', '-SPEC:N', 'OP', '-COMP:D', '!PROBE:N', 'D', '-SPEC:MA/lla', 'LF:the', '-COMP:uR', '-SPEC:T/fin', 'adjoinable', '-SPEC:P', '-SPEC:V', '-COMP:T/fin', 'COMP:N', 'LANG:IT', 'PF:il'}
i               {'-SPEC:Neg/fin', '-SPEC:D', '!COMP:*', '-SPEC:C', '-ARG', '-SPEC:INF', '-SPEC:N', 'OP', '-COMP:D', '!PROBE:N', 'D', '-SPEC:MA/lla', 'LF:the', '-COMP:uR', '-SPEC:T/fin', 'adjoinable', '-SPEC:P', '-SPEC:V', '-COMP:T/fin', 'COMP:N', 'LANG:IT', 'PF:il'}
in              {'-SPEC:FORCE', '-COMP:ADV', '-SPEC:Neg/fin', '!COMP:*', 'PHI:DET:_', '-SPEC:C', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-SPEC:iR', 'PHI:PER:_', 'PHI:NUM:_', 'PF:in', '-SPEC:v', 'ARG', '-SPEC:iWH', 'adjoinable', 'LF:in', '-SPEC:T/fin', '-COMP:uWH', 'P', '-SPEC:P', 'COMP:D', '-VAL', '-SPEC:V', '-COMP:T/fin', 'LANG:IT', 'PHI:GEN:_', '-SPEC:C/fin'}
infermieri      {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', 'PF:infermieri', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:V', '-COMP:A', 'SPEC:A', 'LF:nurses', '-SPEC:T/fin', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', 'LANG:IT', '-SPEC:C/fin', '-SPEC:uWH'}
is              ['LANG:EN']
be-             {'-SPEC:FORCE', '!COMP:*', '-ARG', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', '-COMP:TO/inf', 'COPULA', '-COMP:v', 'LF:be', 'COMP:P', '-COMP:V', 'SPEC:D', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'PF:be', '-VAL', '-COMP:T/fin', 'LANG:EN'}
istuuko         ['LANG:FI']
istuu-          {'-SPEC:FORCE', 'PHI:DET:_', 'LF:sit', 'SPEC:P', 'V', 'PF:istuu', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-COMP:D', '-COMP:v', 'COMP:P', '-COMP:V', 'SPEC:D', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '-VAL', '-COMP:T/fin', 'CLASS:INTR'}
John            ['LANG:EN']
John-           {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', 'PF:John', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', 'LF:John', '-SPEC:N', '-COMP:AUX', '-COMP:C/fin', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:A', '-SPEC:uWH', 'SPEC:A', '-SPEC:T/fin', '-SEM:directional', '-COMP:WH', '-SPEC:P', 'COMP:R', '-adjoinable', 'COMP:R/D', '-SPEC:V', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-SPEC:R', '-SPEC:FORCE', 'LF:Jukka', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:C/fin', 'PF:Jukka', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:V', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', '-SEM:directional', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', '-SPEC:C/fin', '-SPEC:uWH'}
juosten         ['LANG:FI']
juokse-         {'-SPEC:FORCE', 'PHI:DET:_', 'SPEC:P', 'V', 'SPEC:TO/inf', 'PF:juokse-', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'LF:run', '-VAL', '-COMP:T/fin'}
istuu           ['LANG:FI']
istu-           {'-SPEC:FORCE', 'PHI:DET:_', 'LF:sit', 'SPEC:P', 'V', 'PF:istuu', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '-VAL', '-COMP:T/fin'}
kaksi           {'ARG', 'PHI:NUM:_', 'PHI:DET:_', 'PHI:NUM:SG', 'PF:kaksi', '-VAL', 'LANG:FI', 'TAIL:ARG,VAL,FIN', 'PHI:PER:_', 'COMP:N', 'NUM', 'LF:two', 'COMP:n', 'SPEC:*'}
kaksi           {'LANG:EN', 'SPEC:*', 'PF:kaksi', 'COMP:N', 'TAIL:ARG,ASP:BOUNDED', 'NUM', 'LF:two', 'COMP:n', 'TAIL:*POL:NEG'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'PF:kaksi', 'LANG:FI', 'COMP:N', 'NUM', 'LF:two', 'COMP:n', 'SPEC:*'}
kaupunkia       ['LANG:EN']
kaupunki        {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', 'LF:city', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:C/fin', '-COMP:D', '-COMP:v', 'N', '-COMP:V', '-COMP:A', 'SPEC:A', '-COMP:P', '-SPEC:T/fin', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', '-SPEC:C/fin', 'PF:kaupunki', '-SPEC:uWH'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'-SPEC:FORCE', 'PHI:DET:_', 'SEM:external', '!COMP:A/inf', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'PF:kaske', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'LF:order', '-VAL', '-COMP:T/fin'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:C/fin', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:A', '-SPEC:uWH', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'PF:kello', 'COMP:uR', '-SPEC:C/fin', 'LF:watch'}
kello0-         {'0', 'SPEC:D', '2SPEC', 'LANG:FI', 'PF:kello', 'LF:watch'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'LF:key', 'COMP:P', '-COMP:V', '-COMP:A', '-SPEC:uWH', 'PF:key', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', 'PF:kirja', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:C/fin', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:V', '-COMP:A', 'LF:book', 'SPEC:A', '-SPEC:T/fin', '-SEM:directional', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', '-SPEC:C/fin', '-SPEC:uWH'}
kohti           {'-SPEC:FORCE', '-COMP:ADV', '-SPEC:Neg/fin', '!COMP:*', 'PHI:DET:_', 'PF:kohti', '-SPEC:C', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', 'LANG:FI', '-SPEC:iR', 'PHI:PER:_', 'PHI:NUM:_', '-SPEC:v', 'ARG', '-SPEC:iWH', 'adjoinable', '-SPEC:T/fin', 'TAIL:V', '-COMP:uWH', 'LF:towards', 'P', '-SPEC:P', 'COMP:D', '-VAL', '-SPEC:V', '-COMP:T/fin', '-SPEC:C/fin', 'SPEC:*'}
koko            {'TAIL:T', '-SPEC:Neg/fin', '-SPEC:D', '!COMP:*', '-SPEC:C', '-ARG', '-SPEC:INF', '-SPEC:N', 'LANG:FI', 'OP', '-COMP:D', '!PROBE:N', 'D', 'LF:all', 'adjoinable', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:T/fin', '-SPEC:P', 'PF:koko', '-SPEC:V', '-COMP:T/fin', 'COMP:N'}
kuka            ['LANG:FI']
kuka-           {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', 'PHI', 'LF:who', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:C/fin', '-COMP:D', '-COMP:v', 'N', 'COMP:P', 'PF:kuka', '-COMP:V', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', '-SPEC:C/fin', '-SPEC:uWH'}
kuorsaa-        {'-SPEC:FORCE', 'PHI:DET:_', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-COMP:D', '-COMP:v', 'COMP:P', 'LF:snore', '-COMP:V', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'PF:kuorsaa', '-COMP:WH', '-VAL', '-COMP:T/fin'}
kuorsaamalla    ['LANG:FI']
lahella         {'-COMP:ADV', 'PHI:DET:_', '-SPEC:ADV', '-SPEC:INF', '-SPEC:N', 'LANG:FI', 'INF', 'COMP:v', '-COMP:FORCE', 'adjoinable', '-SPEC:T/fin', 'P', 'COMP:D', 'LF:near', 'SPEC:*', '-SPEC:FORCE', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C', '!SPEC:D', 'PF:lahella', '-COMP:N', '-COMP:C/fin', '-SPEC:iR', 'PHI:PER:_', 'PHI:NUM:_', '-SPEC:v', 'ARG', '-SPEC:iWH', '-COMP:uWH', '!SPEC:*', '-SPEC:P', 'COMP:V', '-SPEC:V', '-COMP:T/fin', 'VAL', '-SPEC:C/fin'}
lahella         {'-SPEC:FORCE', '-COMP:ADV', '!COMP:*', '-SPEC:Neg/fin', 'PHI:DET:_', '-SPEC:C', '-SPEC:ADV', '-SPEC:INF', '!COMP:D', 'PF:lahella', '-COMP:N', '-SPEC:N', 'LANG:FI', '-SPEC:iR', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:T/fin', '-SPEC:v', 'ARG', '-SPEC:iWH', 'adjoinable', '-SPEC:T/fin', '-COMP:uWH', 'P', '-SPEC:P', 'COMP:D', '-VAL', '-SPEC:V', 'LF:near', '-SPEC:C/fin', 'SPEC:*'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahte-          {'-SPEC:FORCE', 'PHI:DET:_', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-COMP:D', '-COMP:v', 'COMP:P', '-COMP:V', 'SPEC:D', 'ARG', '-SPEC:T/fin', 'ASP', 'COMP:PP', 'SPEC:ADV', 'PF:lahtea', '-VAL', 'LF:leave', '-COMP:T/fin', 'CLASS:INTR'}
lavano          ['LANG:IT']
lava-           {'-SPEC:FORCE', '!COMP:*', 'PHI:DET:_', 'PF:lava', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'ARG', 'LF:wash', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'COMP:D', '-VAL', '-COMP:T/fin', 'LANG:IT', 'PHI:GEN:_'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-SPEC:Neg/fin', '-SPEC:D', '!COMP:*', '-SPEC:C', '-ARG', '-SPEC:INF', '-SPEC:N', 'OP', '-COMP:D', '!PROBE:N', 'LF:D', 'D', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:T/fin', 'adjoinable', 'PF:le', '-SPEC:P', '-SPEC:V', '-COMP:T/fin', 'COMP:N', 'LANG:IT'}
leaves          ['LANG:EN']
leave           {'-SPEC:FORCE', 'PHI:DET:_', '!SPEC:D', 'SPEC:P', 'V', 'SPEC:TO/inf', 'PF:leave', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '-VAL', 'LF:leave', '-COMP:T/fin', 'PHI:GEN:_', 'LANG:EN'}
leave-          {'-SPEC:FORCE', 'PHI:DET:_', '!SPEC:D', 'SPEC:P', 'V', 'SPEC:TO/inf', 'PF:leave', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '-VAL', 'LF:leave', '-COMP:T/fin', 'PHI:GEN:_', 'LANG:EN'}
like-           {'-SPEC:FORCE', 'PHI:DET:_', '!COMP:D', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LF:like', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'PF:like', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '-VAL', '-COMP:T/fin', 'PHI:GEN:_', 'LANG:EN'}
likes           ['LANG:EN']
like            {'-SPEC:FORCE', 'PHI:DET:_', '!COMP:D', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LF:like', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'PF:like', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '-VAL', '-COMP:T/fin', 'PHI:GEN:_', 'LANG:EN'}
little          ['LANG:EN']
little-         {'0', 'SPEC:D', '2SPEC', 'PF:little-', 'LF:little', 'LANG:EN'}
lle             {'-SPEC:FORCE', '-COMP:ADV', '-SPEC:Neg/fin', '!COMP:*', 'PHI:DET:_', '-SPEC:C', 'LF:for', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', 'LANG:FI', '-SPEC:iR', 'PHI:PER:_', 'PHI:NUM:_', 'PF:P(lle)', '-SPEC:v', '-SPEC:*', 'ARG', '-SPEC:iWH', 'adjoinable', '-SPEC:T/fin', '-COMP:uWH', 'P', '+SEM:directional', '-SPEC:P', 'COMP:D', '-VAL', '-SPEC:V', '-COMP:T/fin', 'TAIL:V,+SEM:directional', '-SPEC:C/fin'}
lla             {'-SPEC:FORCE', 'TAIL:T', '-COMP:ADV', '-SPEC:Neg/fin', 'PF:P(lla)', '!COMP:*', '-SPEC:C', 'PHI:DET:_', '-SPEC:ADV', '-SPEC:INF', 'LF:by', '-COMP:N', '-SPEC:N', 'LANG:FI', '-SPEC:iR', 'PHI:PER:_', 'PHI:NUM:_', '-SPEC:v', 'ARG', '-SPEC:iWH', 'adjoinable', '-SPEC:T/fin', '-COMP:uWH', 'P', '-SPEC:P', 'COMP:D', '-VAL', '-SPEC:V', '-COMP:T/fin', 'TAIL:*V', '-SPEC:C/fin', 'SPEC:*'}
Luisa           ['LANG:IT']
Luisa-          {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', 'PF:Luisa', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:V', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', '-SEM:directional', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', 'LANG:IT', '-SPEC:C/fin', 'LF:Luisa', '-SPEC:uWH'}
lukemalla       ['LANG:FI']
luke-           {'-SPEC:FORCE', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'LF:read', 'PHI:NUM:_', '-COMP:v', 'PF:luke', 'COMP:P', '-COMP:V', 'ARG', '-COMP:P', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'CLASS:TR', 'COMP:D', '-VAL', '-COMP:T/fin'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'-SPEC:FORCE', 'ASP:BOUNDED', '!COMP:*', 'PHI:DET:_', 'PF:loyta-', '!COMP:D', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'LF:find', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'ARG', '-COMP:P', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'CLASS:TR', 'COMP:D', '-VAL', '-COMP:T/fin'}
Mary            ['LANG:EN']
Mary-           {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', 'PF:Mary', '-SPEC:ADV', '-SPEC:INF', 'LF:Mary', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:A', '-SPEC:uWH', 'SPEC:A', '-SPEC:T/fin', '-SEM:directional', '-COMP:WH', '-SPEC:P', 'COMP:R', '-adjoinable', 'COMP:R/D', '-SPEC:V', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', 'PF:Merja', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:C/fin', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', '-SEM:directional', '-COMP:WH', '-SPEC:P', 'COMP:R', '-adjoinable', 'COMP:R/D', '-SPEC:V', 'LF:Merja', 'COMP:uR', '-SPEC:C/fin', '-SPEC:uWH'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'-SPEC:FORCE', 'TAIL:T', '-SPEC:Neg/fin', 'adjoinable', '-SPEC:T/fin', 'LF:by', '-SPEC:N', 'MA/inf', 'PF:malla', 'LANG:FI', 'ADV', 'COMP:v', 'SPEC:*'}
meren           ['LANG:FI']
mere-           {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', 'PF:meri', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:C/fin', 'LF:ocean', '-COMP:D', 'N', 'COMP:P', '-COMP:v', '-COMP:V', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', '-SPEC:C/fin', '-SPEC:uWH'}
mistake         {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-SPEC:uWH', '-COMP:V', '-COMP:A', 'SPEC:A', 'PF:mistake', '-SPEC:T/fin', 'LF:mistake', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:C/fin', 'PF:mika-', '-COMP:D', 'LF:what', 'N', 'COMP:P', '-COMP:v', '-COMP:V', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', '-SPEC:C/fin', '-SPEC:uWH'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'-SPEC:FORCE', '!COMP:*', 'PHI:DET:_', 'PF:move', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'LANGN:EN', 'LF:move', 'ARG', '-COMP:P', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '+SEM:directional', 'CLASS:TR', 'COMP:D', '-VAL', '-COMP:T/fin', 'PHI:GEN:_'}
mukavasti       ['LANG:EN']
mukava-         {'0', 'PF:mukavasti', 'SPEC:D', 'LANG:FI', '2SPEC', 'LF:comfortably'}
must            {'-SPEC:FORCE', '!COMP:*', 'PHI:DET:_', 'COMP:T/prt', '!SPEC:D', '-COMP:INF', 'LF:must', 'COMP:Neg', 'SPEC:TO/inf', 'FIN', '-SPEC:N', 'PHI:PER:_', 'PHI:NUM:_', 'T', 'COMP:v', '-SPEC:v', 'SPEC:D', 'ARG', '-SPEC:TO/inf', '-SPEC:Neg', '-SPEC:T/fin', 'PHI:GEN:_', 'T/fin', '!PROBE:V', 'PF:must', 'COMP:D', 'COMP:V', '-SPEC:V', '-COMP:T/fin', 'MODAL', 'VAL', '-SPEC:C/fin', 'SPEC:*', 'LANG:EN'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'-SPEC:FORCE', 'ASP:BOUNDED', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-COMP:v', 'COMP:P', 'LF:sell', '-COMP:V', 'ARG', '-COMP:P', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'CLASS:TR', 'COMP:D', '-VAL', '-COMP:T/fin', 'PF:myy'}
naki            ['LANG:FI']
nake-           {'-SPEC:FORCE', 'ASP:BOUNDED', '!COMP:*', 'PHI:DET:_', 'PF:nake', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', '-COMP:ESSA/inf', 'PHI:NUM:_', '-COMP:MA/inf', '-COMP:v', 'COMP:P', '-COMP:V', 'ARG', '-COMP:P', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'LF:see', 'CLASS:TR', 'COMP:D', '-VAL', '-COMP:T/fin'}
nayttaa         ['LANG:FI']
naytta-         {'-SPEC:FORCE', 'LF:seem', '-ARG', 'PF:naytta', '!SPEC:D', '!COMP:VA/inf', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'LANG:FI', 'SEM:internal', '-COMP:v', 'COMP:P', '-COMP:V', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '-COMP:T/fin', 'VAL'}
ndo             {'!COMP:*', '-COMP:FORCE', '?ARG', '-SPEC:T/fin', 'LF:ing', 'PRG', '-COMP:T/fin', '-COMP:C/fin', 'COMP:V', 'INF', '-SPEC:V', 'VAL', 'PF:PRG', 'COMP:v', 'LANG:EN'}
ne              {'PHI:PER:3', '-SPEC:Neg/fin', '-SPEC:D', '!COMP:*', '-SPEC:C', '-ARG', '-SPEC:INF', '-SPEC:N', 'LANG:FI', 'OP', '-COMP:D', '!PROBE:N', 'LF:those', 'D', '-SPEC:MA/lla', '-COMP:uR', 'PF:ne', '-SPEC:T/fin', 'adjoinable', 'PHI:NUM:PL', '-SPEC:P', '-SPEC:V', '-COMP:T/fin', 'COMP:N'}
niiden          ['LANG:EN']
nen             {'-SPEC:D', 'A', 'TAIL:D', 'adjoinable', 'LF:ing', 'COMP:0', 'LANG:FI', '-SPEC:A', 'SPEC:*', 'PF:a'}
not             {'!COMP:*', 'ARG', 'LF:not', 'PHI:NUM:_', 'PHI:DET:_', 'POL:NEG', '-SPEC:T/fin', 'PHI:GEN:_', 'PF:not', '-VAL', 'Neg', 'PHI:PER:_', '-COMP:C', '-COMP:D', 'SPEC:*', '-COMP:FIN', 'LANG:EN'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-SPEC:FORCE', 'PHI:DET:_', 'PF:nukku', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:Neg/fin', '-COMP:N', 'PHI:PER:_', 'LF:sleep', 'LANG:FI', 'PHI:NUM:_', '-COMP:D', '-COMP:v', 'COMP:P', '-COMP:V', '-COMP:T', 'SPEC:D', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '-VAL', '-COMP:T/fin', 'CLASS:INTR'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', 'PF:omaisuuden', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:C/fin', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:V', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', 'LF:possessions', '-SPEC:C/fin', '-SPEC:uWH'}
operatoria      ['LANG:IT']
operatoria-     {'0', 'SPEC:D', '2SPEC', 'LF:operation', 'LANG:IT', 'PF:operatoria'}
ostaa           ['LANG:FI']
osta-           {'-SPEC:FORCE', 'ASP:BOUNDED', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'V', 'SPEC:TO/inf', 'LF:buy', '-COMP:N', 'LANG:FI', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'ARG', '-COMP:P', 'PF:osta', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'CLASS:TR', 'COMP:D', '-VAL', '-COMP:T/fin'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:C/fin', '-COMP:D', '-COMP:v', 'N', 'PF:paiva', 'COMP:P', '-COMP:V', '-COMP:A', '-COMP:T/fin', 'LF:day', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', 'SEM:nonreferential', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', '-SPEC:C/fin', '-SPEC:uWH'}
Pariisia        ['LANG:FI']
Pariisi-        {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:C/fin', 'LF:Paris', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:V', '-COMP:A', 'SPEC:A', 'PF:Pariisi', '-SPEC:T/fin', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', '-SPEC:C/fin', '-SPEC:uWH'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-SPEC:R', '-SPEC:FORCE', 'PF:Pekka', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:C/fin', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:V', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', 'LF:Pekka', '-SEM:directional', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', '-SPEC:C/fin', '-SPEC:uWH'}
pelottaa        ['LANG:FI']
pelkaa-         {'-SPEC:FORCE', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'ARG', 'PF:pelkaa', '-COMP:P', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'LF:fear', 'CLASS:TR', 'COMP:D', '-VAL', '-COMP:T/fin'}
persuades       ['LANG:EN']
persuade-       {'-SPEC:FORCE', '!COMP:*', 'PHI:DET:_', 'COMP:TO/inf', 'SEM:external', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'PF:persuade', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'LF:persuade', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '-VAL', '-COMP:T/fin', 'PHI:GEN:_', 'LANG:EN'}
peruuntui       ['LANG:FI']
peruuntu-       {'-SPEC:FORCE', 'PHI:DET:_', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'SPEC:D', 'LF:cancelled', 'ARG', '-SPEC:T/fin', 'PF:peruuntui', 'ASP', 'SPEC:ADV', '-VAL', '-COMP:T/fin'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'-SPEC:FORCE', 'ASP:BOUNDED', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'ARG', '-COMP:P', 'LF:wash', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'CLASS:TR', 'COMP:D', '-VAL', '-COMP:T/fin', 'PF:pese'}
pese-           {'-SPEC:FORCE', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'ARG', '-COMP:P', 'LF:wash', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'CLASS:TR', 'COMP:D', '-VAL', '-COMP:T/fin', 'PF:pese'}
petardi         {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', 'PF:petardi', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', 'LF:firecrackers', '-SPEC:V', 'COMP:uR', 'LANG:IT', '-SPEC:C/fin', '-SPEC:uWH'}
pieni           ['LANG:FI']
pieni-          {'0', 'LF:small', 'SPEC:D', 'LANG:FI', '2SPEC', 'PF:pieni-'}
poikien         ['LANG:FI']
poika-          {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:C/fin', 'PF:poika', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'LF:boy', 'COMP:uR', '-SPEC:C/fin', '-SPEC:uWH'}
puhelinta       ['LANG:FI']
puhelin-        {'PF:puhelin', '0', 'SPEC:D', '2SPEC', 'LANG:FI', 'LF:phone'}
punainen        ['LANG:FI']
puna-           {'0', 'SPEC:D', '2SPEC', 'LANG:FI', 'LF:red', 'PF:puna-'}
presupposto     {'PF:presupposto', '-SPEC:R', '-COMP:ADV', '-SPEC:FORCE', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:V', '-COMP:A', 'LF:presupposition', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', 'LANG:IT', '-SPEC:C/fin', '-SPEC:uWH'}
primary         {'PF:primary', '-SPEC:R', '-COMP:ADV', '-SPEC:FORCE', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', 'LANG:IT', '-COMP:V', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', 'LF:nurse', '-SPEC:C/fin', '-SPEC:uWH'}
promises        ['LANG:EN']
promise-        {'PF:promise', '-SPEC:FORCE', 'PHI:DET:_', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', 'SEM:internal', '-COMP:v', 'COMP:P', '-COMP:V', 'SPEC:D', 'ARG', 'LF:promise', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'COMP:D', '-VAL', '-COMP:T/fin', 'PHI:GEN:_', 'LANG:EN'}
pyytaa          ['LANG:FI']
pyyta-          {'-SPEC:FORCE', 'PHI:DET:_', 'SEM:external', 'SPEC:P', 'V', 'SPEC:TO/inf', 'PF:pyyda', '-COMP:N', 'LANG:FI', 'PHI:PER:_', 'PHI:NUM:_', 'LF:ask', '-COMP:v', 'COMP:P', '-COMP:V', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '-VAL', '-COMP:T/fin'}
raukesi         ['LANG:FI']
raukea-         {'-SPEC:FORCE', 'PHI:DET:_', 'SPEC:P', 'LF:terminate', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '-VAL', '-COMP:T/fin', 'PF:raukea'}
red             ['LANG:EN']
red-            {'0', 'SPEC:D', '2SPEC', 'LF:red', 'PF:red', 'LANG:EN'}
saavuttaa       ['LANG:FI']
saavutta-       {'-SPEC:FORCE', 'ASP:BOUNDED', '!COMP:*', 'PHI:DET:_', '!COMP:D', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'ARG', '-COMP:P', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'CLASS:TR', 'COMP:D', '-VAL', '-COMP:T/fin', 'PF:saavutta-', 'LF:reach'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'-SPEC:FORCE', 'PHI:DET:_', 'SPEC:P', 'LF:say', 'V', 'COMP:VA/inf', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'SPEC:D', 'COMP:FORCE', 'ARG', '-SPEC:T/fin', 'PF:sano-', 'ASP', 'SPEC:ADV', '-VAL', '-COMP:T/fin'}
said            ['LANG:EN']
say'            {'-SPEC:FORCE', 'PHI:DET:_', 'SPEC:P', 'LF:say', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '!COMP:FORCE', '-COMP:V', '-COMP:T/fin', 'SPEC:D', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '-VAL', 'PF:say', 'PHI:GEN:_', 'LANG:EN'}
say-            {'-SPEC:FORCE', 'PHI:DET:_', 'SPEC:P', 'LF:say', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '!COMP:FORCE', '-COMP:V', '-COMP:T/fin', 'SPEC:D', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '-VAL', 'PF:say', 'PHI:GEN:_', 'LANG:EN'}
sala            ['LANG:IT']
sala-           {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', 'PF:sala', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-COMP:C/fin', 'LF:room', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:V', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', 'LANG:IT', '-SPEC:C/fin', '-SPEC:uWH'}
scoppiati       ['LANG:IT']
scoppia-        {'-SPEC:FORCE', 'PHI:DET:_', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:v', 'COMP:P', 'LANG:IT', '-COMP:V', 'ARG', '-SPEC:T/fin', 'PF:scoppia', 'ASP', 'SPEC:ADV', '-VAL', '-COMP:T/fin', 'LF:explode', 'PHI:GEN:_'}
sen             {'TAIL:PHI', '-SPEC:Neg/fin', '-SPEC:D', '!COMP:*', '-SPEC:C', '-ARG', '-SPEC:INF', 'TAIL:ASP', '-SPEC:N', 'LANG:FI', 'OP', '-COMP:D', '!PROBE:N', 'PF:sen', 'TAIL:*POL:NEG', 'D', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:T/fin', 'adjoinable', '-SPEC:P', '-SPEC:V', '-COMP:T/fin', 'COMP:N', 'LF:the/that'}
se'             {'-SPEC:Neg/fin', '-SPEC:D', '!COMP:*', '-SPEC:C', '-ARG', '-SPEC:INF', 'PF:se', '-SPEC:N', 'LANG:FI', 'OP', '-COMP:D', '!PROBE:N', 'D', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:T/fin', 'adjoinable', '-SPEC:P', '-SPEC:V', '-COMP:T/fin', 'COMP:N', 'LF:the/that'}
sentenza        {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', 'PF:sentenza', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:V', '-COMP:A', 'SPEC:A', 'LF:sentence', '-SPEC:T/fin', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', 'LANG:IT', '-SPEC:C/fin', '-SPEC:uWH'}
Seine           ['LANG:EN']
Seine-          {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', 'LF:Seine', '-COMP:D', 'N', 'COMP:P', '-COMP:v', '-COMP:V', '-COMP:A', '-SPEC:uWH', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', 'PF:Seine', '-SPEC:C/fin', 'LANG:EN'}
sembrano        ['LANG:IT']
sembra-         {'-SPEC:FORCE', '-ASP', 'LF:seem', '-ARG', 'SPEC:P', 'V', 'SPEC:TO/inf', '!COMP:ARE/inf', '-COMP:N', '-COMP:D', '-COMP:v', 'COMP:P', '-COMP:V', 'SPEC:D', '-SPEC:T/fin', 'PF:sembra', 'SPEC:ADV', '-VAL', '-COMP:T/fin', 'LANG:EN'}
sleeps          ['LANG:EN']
sleep           {'-SPEC:FORCE', 'PHI:DET:_', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LF:sleep', 'PHI:NUM:_', '-COMP:D', '-COMP:v', 'COMP:P', '-COMP:V', 'SPEC:D', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'PF:sleep', '-VAL', '-COMP:T/fin', 'CLASS:INTR', 'PHI:GEN:_', 'LANG:EN'}
sleep-          {'-SPEC:FORCE', 'PHI:DET:_', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LF:sleep', 'PHI:NUM:_', '-COMP:D', '-COMP:v', 'COMP:P', '-COMP:V', 'SPEC:D', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'PF:sleep', '-VAL', '-COMP:T/fin', 'CLASS:INTR', 'PHI:GEN:_', 'LANG:EN'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '!COMP:A/inf', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:C/fin', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:A', 'SPEC:A', 'PF:sopimus', '-SPEC:T/fin', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'LF:agreement', 'COMP:uR', '-SPEC:C/fin', '-SPEC:uWH'}
spinge          ['LANG:IT']
spinge-         {'-SPEC:FORCE', 'PHI:DET:_', '!COMP:D', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:v', '-COMP:V', '-COMP:P', 'ARG', '-SPEC:T/fin', 'ASP', 'PF:spinge', 'SPEC:ADV', 'LF:push', '-VAL', '-COMP:T/fin', 'LANG:IT', 'PHI:GEN:_'}
ssa             {'-SPEC:FORCE', '-COMP:ADV', '-SPEC:Neg/fin', '!COMP:*', 'PHI:DET:_', '-SPEC:C', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', 'LANG:FI', '-SPEC:iR', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:n/MA', '-SPEC:v', 'ARG', '-SPEC:iWH', 'adjoinable', 'LF:in', '-SPEC:T/fin', 'TAIL:V', '-COMP:uWH', 'P', '-SPEC:P', 'COMP:D', 'PF:ssa', '-VAL', '-SPEC:V', '-COMP:T/fin', '-SPEC:C/fin', 'SPEC:*'}
stanno          ['LANG:IT']
sta-            {'-SPEC:FORCE', 'PHI:DET:_', '-ASP', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', 'SEM:internal', '-COMP:v', 'COMP:P', '-COMP:V', 'SPEC:D', 'PF:sta', 'ARG', '-SPEC:T/fin', 'SPEC:ADV', 'LF:stay', '-VAL', '-COMP:T/fin', 'COMP:PRG', 'PHI:GEN:_', 'LANG:EN'}
sti             {'-SPEC:FORCE', 'TAIL:T', '!COMP:*', '-SPEC:Neg/fin', 'PF:sti', '-ARG', 'adjoinable', '-SPEC:T/fin', 'LF:by', '-SPEC:N', 'LANG:FI', 'ADV', 'SPEC:*'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', 'LF:socks', '-SPEC:INF', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:C/fin', '-COMP:D', '-COMP:v', 'N', 'COMP:P', 'PF:sukka-', '-COMP:V', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', '-SPEC:C/fin', '-SPEC:uWH'}
talo            {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:C/fin', '-COMP:D', '-COMP:v', 'N', 'COMP:P', 'PF:talo', '-COMP:V', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', 'LF:house', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', '-SPEC:C/fin', '-SPEC:uWH'}
tama            ['LANG:EN']
tama-           {'-SPEC:R', '-SPEC:FORCE', 'LF:this', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', 'PHI', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:C/fin', '-COMP:D', '-COMP:v', 'N', 'COMP:P', 'PF:tama', '-COMP:V', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', '-SPEC:C/fin', '-SPEC:uWH'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'-SPEC:FORCE', 'PHI:DET:_', '-ASP', '!COMP:A/inf', 'PF:taytyy', 'SPEC:P', 'LF:must', 'V', 'SPEC:TO/inf', 'FIN', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'ARG', '-SPEC:T/fin', 'SPEC:ADV', '-VAL', '-COMP:T/fin', 'MODAL', 'SPEC:*'}
teki            ['LANG:FI']
teke-           {'PF:teke', 'LF:make', 'ASP:BOUNDED', '-SPEC:FORCE', '!COMP:*', 'PHI:DET:_', '!COMP:D', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', '-COMP:A/inf', 'LANG:FI', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'ARG', '-COMP:P', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'CLASS:TR', 'COMP:D', '-VAL', '-COMP:T/fin'}
that            {'!COMP:*', '-SPEC:*', 'FORCE', '-ARG', 'PF:that', 'LF:that', '!PROBE:T/fin', 'COMP:T/fin', 'FIN', 'COMP:C/fin', '-VAL', 'LANG:EN'}
the             {'-SPEC:Neg/fin', '-SPEC:D', '!COMP:*', '-SPEC:C', '-ARG', '-SPEC:INF', 'PF:the', '-SPEC:N', 'OP', '-COMP:D', '!PROBE:N', 'D', '-SPEC:MA/lla', 'LF:the', '-COMP:uR', '-SPEC:T/fin', 'adjoinable', 'PHI:DEF:DEF', '-SPEC:P', '-SPEC:V', '-COMP:T/fin', 'COMP:N', 'LANG:EN'}
to              {'-SPEC:FORCE', '-COMP:ADV', '-SPEC:Neg/fin', '!COMP:*', 'PHI:DET:_', '-float', '-SPEC:C', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-SPEC:iR', 'PHI:PER:_', 'PHI:NUM:_', 'PF:to', '-SPEC:v', '-SPEC:*', 'ARG', '-SPEC:iWH', 'adjoinable', 'LF:to', '-SPEC:T/fin', '-COMP:uWH', 'P', '+SEM:directional', '-SPEC:P', 'COMP:D', '-VAL', '-SPEC:V', '-COMP:T/fin', 'TAIL:V,+SEM:directional', 'PHI:GEN:_', '-SPEC:C/fin', 'LANG:EN'}
to_inf          {'!COMP:*', '?ARG', '-COMP:C/fin', 'INF', 'TO/inf', 'COMP:v', '-SPEC:v', '-COMP:FORCE', 'adjoinable', '-SPEC:T/fin', 'PF:TO/inf', '-VAL', 'LF:TO/inf', 'COMP:V', '-COMP:T/fin', '-SPEC:V', 'LANG:EN'}
towards         {'-SPEC:FORCE', '-COMP:ADV', '-SPEC:Neg/fin', '!COMP:*', 'PHI:DET:_', '-float', '-SPEC:C', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-SPEC:iR', 'PHI:PER:_', 'PHI:NUM:_', '-SPEC:v', '-SPEC:*', 'ARG', '-SPEC:iWH', 'adjoinable', '-SPEC:T/fin', 'TAIL:V', '-COMP:uWH', 'LF:towards', 'P', '-SPEC:P', 'COMP:D', '-VAL', '-SPEC:V', '-COMP:T/fin', 'PF:towards', 'PHI:GEN:_', '-SPEC:C/fin', 'LANG:EN'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'-SPEC:FORCE', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PF:tonaise', 'LANG:FI', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'ARG', '-COMP:P', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'CLASS:TR', 'COMP:D', '-VAL', 'LF:nudge', '-COMP:T/fin'}
tta             {'-SPEC:FORCE', '-COMP:ADV', '-SPEC:Neg/fin', '!COMP:*', 'PHI:DET:_', '-SPEC:C', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', 'LANG:FI', '-SPEC:iR', 'PHI:PER:_', 'PHI:NUM:_', 'PF:tta', 'COMP:n/MA', '-SPEC:v', 'LF:without', 'ARG', '-SPEC:iWH', 'adjoinable', '-SPEC:T/fin', '-COMP:uWH', 'P', '-SPEC:P', 'COMP:D', '-VAL', '-SPEC:V', '-COMP:T/fin', '-SPEC:C/fin', 'ADV', 'SPEC:*'}
tries           ['LANG:EN']
try-            {'-SPEC:FORCE', 'PHI:DET:_', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', 'SEM:internal', '-COMP:v', 'COMP:P', '-COMP:T/fin', 'PF:try', '-COMP:V', 'SPEC:D', 'ARG', 'LF:try', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '!COMP:-ARG', '-VAL', '!COMP:TO/inf', 'PHI:GEN:_', 'LANG:EN'}
verifiche       {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:V', 'PF:verifiche', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', 'LF:verification', 'LANG:IT', '-SPEC:C/fin', '-SPEC:uWH'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'-SPEC:FORCE', 'PHI:DET:_', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'LANG:FI', 'PHI:NUM:_', '-COMP:D', '-COMP:v', 'COMP:P', '!COMP:P', '-COMP:V', 'SPEC:D', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'PF:virtaa', '-VAL', '-COMP:T/fin', 'LF:flow'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'-SPEC:FORCE', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'LF:want', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', 'SEM:internal', '-COMP:v', 'COMP:P', '-COMP:V', '-SPEC:*', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '-VAL', '-COMP:T/fin', 'PHI:GEN:_', 'PF:volu', 'LANG:EN'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'-SPEC:FORCE', 'ASP:BOUNDED', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'PF:voitta', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'ARG', '-COMP:P', 'SEM:achievement', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'CLASS:TR', 'COMP:D', '-VAL', '-COMP:T/fin', 'LF:win', 'PHI:GEN:_', 'LANG:EN'}
wants           ['LANG:EN']
want-           {'-SPEC:FORCE', '!COMP:*', 'PHI:DET:_', 'COMP:TO/inf', 'SPEC:P', 'LF:want', 'V', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', '-SPEC:TO/inf', 'ARG', '-COMP:P', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', 'CLASS:TR', 'PF:want', 'COMP:D', '-VAL', '-COMP:T/fin', 'PHI:GEN:_', 'LANG:EN'}
what            ['LANG:EN']
what-           {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', 'LF:what', 'N', 'COMP:P', '-COMP:v', '-COMP:V', 'PHI_N', '-COMP:A', 'SPEC:A', '-COMP:T/fin', '-SPEC:uWH', 'PF:what', '-SPEC:T/fin', '-COMP:WH', '-COMP:*', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN'}
which           {'-SPEC:Neg/fin', '-SPEC:D', '!COMP:*', '-SPEC:C', '-ARG', '-SPEC:INF', 'OP:WH', '-SPEC:N', 'OP', '-COMP:D', '!PROBE:N', '-COMP:T/fin', 'D', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:T/fin', 'adjoinable', 'PF:which', '-SPEC:P', '-SPEC:V', 'LF:which', 'COMP:N', 'LANG:EN'}
who             ['LANG:EN']
who-            {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', 'LF:who', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', 'PHI_N', '-COMP:A', 'SPEC:A', '-SPEC:uWH', '-SPEC:T/fin', 'PF:who', '-COMP:WH', '-COMP:*', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN'}
whether         {'!COMP:*', 'FORCE', '-ARG', 'PF:whether', 'OP:Q', 'FIN', 'COMP:C/fin', 'OP:WH', 'LF:whether', 'OP', '-SPEC:*', '!PROBE:T/fin', 'COMP:T/fin', 'Q', '-VAL', 'LANG:EN'}
yrittaa         ['LANG:FI']
yritta-         {'-SPEC:FORCE', 'PHI:DET:_', '!COMP:A/inf', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', 'SEM:internal', '-COMP:v', 'COMP:P', '-COMP:V', 'SPEC:D', 'ARG', 'LF:try', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '!COMP:-ARG', '-VAL', 'PF:yritta', '-COMP:T/fin', 'PHI:GEN:_', 'LANG:EN'}
mina            ['LANG:EN']
mina-           {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', 'LF:I', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:C/fin', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', 'PHI_N', '-COMP:A', 'SPEC:A', '-SPEC:uWH', '-SPEC:T/fin', '-COMP:WH', '-COMP:*', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', '-SPEC:C/fin', 'PF:mina'}
sina            ['LANG:EN']
sina-           {'-SPEC:R', 'LF:you', '-COMP:ADV', '-SPEC:FORCE', '-SPEC:ADV', '-SPEC:INF', 'PF:sina', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:N', '-COMP:C/fin', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', 'PHI_N', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-COMP:*', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', '-SPEC:C/fin', '-SPEC:uWH'}
han             ['LANG:EN']
han-            {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', 'PF:han', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:C/fin', 'LF:s/he', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', 'PHI_N', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-COMP:*', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', '-SPEC:C/fin', '-SPEC:uWH'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', 'LF:we', '-SPEC:INF', 'PF:me', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:C/fin', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', 'PHI_N', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-COMP:*', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', '-SPEC:C/fin', '-SPEC:uWH'}
te              ['LANG:EN']
te-             {'-SPEC:R', 'LF:you', '-COMP:ADV', '-SPEC:FORCE', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:C/fin', '-COMP:D', '-COMP:v', 'N', 'PF:te', 'COMP:P', '-COMP:V', 'PHI_N', '-COMP:A', 'SPEC:A', '-COMP:T/fin', '-SPEC:T/fin', '-COMP:WH', '-COMP:*', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', '-SPEC:C/fin', '-SPEC:uWH'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he-             {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', 'LANG:FI', '-COMP:AUX', '-COMP:C/fin', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', 'PHI_N', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', 'PF:he', 'LF:they', '-COMP:WH', '-COMP:*', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', '-SPEC:C/fin', '-SPEC:uWH'}
he-             {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', 'LF:he', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', 'PHI_N', '-COMP:A', 'SPEC:A', '-SPEC:uWH', '-SPEC:T/fin', 'PF:he', '-COMP:WH', '-COMP:*', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN'}
se              ['LANG:FI']
se-             {'-SPEC:Neg/fin', '-SPEC:D', '!COMP:*', '-SPEC:C', '-ARG', '-SPEC:INF', 'PF:se', '-SPEC:N', 'LANG:FI', 'OP', '-COMP:D', '!PROBE:N', 'D', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:T/fin', 'adjoinable', 'LF:it/that', '-SPEC:P', '-SPEC:V', '-COMP:T/fin', 'COMP:N'}
I               ['LANG:EN']
I-              {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', 'LF:I', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', 'PHI_N', '-COMP:A', 'SPEC:A', '-SPEC:uWH', '-SPEC:T/fin', '-COMP:WH', '-COMP:*', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', 'PF:I', '-SPEC:C/fin', 'LANG:EN'}
you             ['LANG:EN']
you-            {'-SPEC:R', 'LF:you', '-COMP:ADV', '-SPEC:FORCE', '-SPEC:ADV', '-SPEC:INF', 'PF:you', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', 'PHI_N', '-COMP:A', 'SPEC:A', '-SPEC:uWH', '-SPEC:T/fin', '-COMP:WH', '-COMP:*', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN'}
he              ['LANG:EN']
she             ['LANG:EN']
she-            {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', 'PF:she', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', 'PHI_N', '-COMP:A', 'SPEC:A', '-SPEC:uWH', '-SPEC:T/fin', '-COMP:WH', '-COMP:*', 'LF:she', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN'}
we              ['LANG:EN']
we-             {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', 'LF:we', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', 'PHI_N', '-COMP:A', 'SPEC:A', '-SPEC:uWH', '-SPEC:T/fin', 'PF:we', '-COMP:WH', '-COMP:*', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN'}
you_pl          ['LANG:EN']
you_pl-         {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', 'PHI', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:A', '-SPEC:uWH', 'SPEC:A', '-SPEC:T/fin', 'LF:you_pl', '-COMP:WH', '-SPEC:P', 'COMP:R', 'COMP:R/D', 'PF:you_pl', '-SPEC:V', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN'}
they            ['LANG:EN']
they-           {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', 'PHI_N', '-COMP:A', 'SPEC:A', '-SPEC:uWH', '-SPEC:T/fin', 'LF:they', 'PF:they', '-COMP:WH', '-COMP:*', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN'}
it              ['LANG:EN']
it-             {'-SPEC:Neg/fin', '-SPEC:D', '!COMP:*', '-SPEC:C', '-ARG', '-SPEC:INF', '-SPEC:N', 'OP', '-COMP:D', '!PROBE:N', 'D', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:T/fin', 'adjoinable', 'PF:it', 'LF:it/that', '-SPEC:P', '-SPEC:V', '-COMP:T/fin', 'COMP:N', 'LANG:EN'}
io              ['LANG:EN']
io-             {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', 'LF:I', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', 'PHI_N', '-COMP:A', 'SPEC:A', 'PF:io', '-SPEC:T/fin', '-COMP:WH', '-COMP:*', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', 'LANG:IT', '-SPEC:C/fin', '-SPEC:uWH'}
tu              ['LANG:EN']
tu-             {'-SPEC:R', 'LF:you', '-COMP:ADV', '-SPEC:FORCE', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', 'PF:tu', '-SPEC:N', '-COMP:AUX', '-COMP:C/fin', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', 'PHI_N', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-COMP:*', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', 'LANG:IT', '-SPEC:C/fin', '-SPEC:uWH'}
lui             ['LANG:EN']
lui-            {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', 'LF:he', 'PF:lui', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', 'PHI_N', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-COMP:*', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', 'LANG:IT', '-SPEC:C/fin', '-SPEC:uWH'}
lei             ['LANG:EN']
lei-            {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', 'PF:lei', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', 'PHI_N', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-COMP:*', 'LF:she', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', 'LANG:IT', '-SPEC:C/fin', '-SPEC:uWH'}
noi             ['LANG:EN']
noi-            {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', 'LF:we', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', 'PHI_N', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', 'PF:noi', '-COMP:WH', '-COMP:*', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', 'LANG:IT', '-SPEC:C/fin', '-SPEC:uWH'}
voi             ['LANG:EN']
voi-            {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', 'PHI_N', '-COMP:A', 'SPEC:A', 'PF:voi', '-SPEC:T/fin', 'LF:you_pl', '-COMP:WH', '-COMP:*', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', 'LANG:IT', '-SPEC:C/fin', '-SPEC:uWH'}
loro            ['LANG:EN']
loro-           {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', 'PF:loro', 'N', 'COMP:P', '-COMP:v', '-COMP:V', 'PHI_N', '-COMP:A', 'SPEC:A', '-COMP:T/fin', '-SPEC:T/fin', 'LF:they', '-COMP:WH', '-COMP:*', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', 'LANG:IT', '-SPEC:C/fin', '-SPEC:uWH'}
mi              ['LANG:EN']
mi-             {'-SPEC:R', '-COMP:ADV', 'LF:me', '-SPEC:ADV', '-SPEC:INF', '-SPEC:N', '-COMP:AUX', 'N', 'COMP:P', '-COMP:V', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-COMP:*', '-SPEC:FORCE', 'PF:mi(cl)', '-COMP:N', '-COMP:C/fin', '-COMP:D', '-COMP:v', 'PHI_N', '-COMP:A', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', 'LANG:IT', '-SPEC:C/fin', 'CL', '-SPEC:uWH'}
la              ['LANG:EN']
la-             {'-SPEC:R', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', '-SPEC:N', '-COMP:AUX', 'PF:la(cl)', 'N', 'COMP:P', '-COMP:V', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-COMP:*', '-SPEC:FORCE', '-COMP:N', '-COMP:C/fin', '-COMP:D', '-COMP:v', 'PHI_N', '-COMP:A', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', 'LANG:IT', '-SPEC:C/fin', 'CL', 'LF:her', '-SPEC:uWH'}
lo              ['LANG:EN']
lo-             {'-SPEC:R', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', '-SPEC:N', '-COMP:AUX', 'N', 'COMP:P', '-COMP:V', 'SPEC:A', '-SPEC:T/fin', 'PF:lo(cl)', '-COMP:WH', '-COMP:*', '-SPEC:FORCE', '-COMP:N', '-COMP:C/fin', '-COMP:D', '-COMP:v', 'PHI_N', '-COMP:A', 'LF:him', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', 'LANG:IT', '-SPEC:C/fin', 'CL', '-SPEC:uWH'}
si              ['LANG:EN']
si-             {'PF:si(cl)', '-SPEC:R', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', '-SPEC:N', '-COMP:AUX', 'N', 'COMP:P', '-COMP:V', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-COMP:*', '-SPEC:FORCE', '-COMP:N', '-COMP:C/fin', '-COMP:D', 'LF:3sg', '-COMP:v', 'PHI_N', '-COMP:A', 'CAL:CL', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', 'LANG:IT', '-SPEC:C/fin', '-SPEC:uWH'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', 'LF:there', 'PF:ci', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', 'PHI_N', '-COMP:A', 'SPEC:A', '-SPEC:T/fin', '-COMP:WH', '-COMP:*', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', 'LANG:IT', '-SPEC:C/fin', '-SPEC:uWH'}
[-n]            {'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:PER:1', 'LANG:FI', 'PHI:NUM:SG', 'PHI', 'inflectional'}
[-t]            {'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:PER:2', 'LANG:FI', 'PHI:NUM:SG', 'PHI', 'inflectional'}
[-V]            {'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'PHI', 'inflectional'}
[-mme]          {'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'LANG:FI', 'PHI', 'inflectional'}
[-mme]          {'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'LANG:FI', 'inflectional'}
[-tte]          {'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'LANG:FI', 'PHI', 'inflectional'}
[-vat]          {'PHI:NUM:PL', 'PHI:PER:3', 'LANG:FI', 'PHI', 'inflectional'}
[-ni]           {'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:PER:1', 'LANG:FI', 'PHI:NUM:SG', 'PHI', 'inflectional'}
[-si]           {'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:PER:2', 'LANG:FI', 'PHI:NUM:SG', 'PHI', 'inflectional'}
[-nsa]          {'PHI:PER:3', 'LANG:FI', 'PHI:NUM:SG', 'PHI', 'inflectional'}
[-an]           {'PHI:PER:3', 'PHI', 'inflectional', 'LANG:FI'}
[-nne]          {'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'LANG:FI', 'inflectional'}
[-s]            {'PHI:PER:3', 'PHI:GEN:M', 'PHI:GEN:F', 'PHI:NUM:SG', 'PHI', 'inflectional', 'LANG:EN'}
[-0]            {'PHI:PER:3', 'PHI:PER:1', 'PHI:NUM:SG', 'PHI', 'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:2', 'inflectional', 'PHI:GEN:N', 'LANG:EN'}
[-o]            {'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:PER:1', 'PHI:NUM:SG', 'LANG:IT', 'PHI', 'inflectional'}
[-i]            {'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:PER:2', 'PHI:NUM:SG', 'LANG:IT', 'PHI', 'inflectional'}
[-a]            {'PHI:DET:DEF', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:IT', 'PHI', 'inflectional'}
[-e]            {'PHI:DET:DEF', 'PHI:PER:3', 'PHI:NUM:SG', 'LANG:IT', 'PHI', 'inflectional'}
[-iamo]         {'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:1', 'LANG:IT', 'PHI', 'inflectional'}
[-te]           {'PHI:DET:DEF', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'PHI:PER:2', 'LANG:IT', 'PHI', 'inflectional'}
[-no]           {'PHI:DET:DEF', 'PHI:NUM:PL', 'PHI:PER:3', 'LANG:IT', 'PHI', 'inflectional'}
[-nom]          {'TAIL:FIN,ARG,VAL', 'NOM', 'adjoinable', 'inflectional', 'LANG:EN'}
[-par]          {'PAR', 'LANG:FI', 'adjoinable', 'inflectional', 'TAIL:ARG,-VAL'}
[-gen]          {'GEN', 'LANG:EN', '-float', 'inflectional', 'TAIL:INF,ARG'}
gen             {'GEN', 'LANG:EN', '-float', 'inflectional', 'TAIL:INF,ARG'}
[-n_acc]        {'TAIL:PHI', 'LANG:FI', 'adjoinable', 'TAIL:ARG,ASP:BOUNDED', 'n-ACC', 'inflectional', 'TAIL:*POL:NEG'}
[-t_acc]        {'inflectional', 'LANG:FI', 'adjoinable', 'TAIL:ARG,ASP:BOUNDED', 't-ACC', 'TAIL:*POL:NEG'}
[-0_acc]        {'inflectional', 'TAIL:*PHI', 'LANG:FI', 'adjoinable', 'TAIL:ARG,ASP:BOUNDED', '0_ACC', 'TAIL:*POL:NEG'}
asp             {'ASP:BOUNDED', 'inflectional', 'LANG:EN'}
a'              {'LANG:X', 'LF:A', 'PF:a', 'a'}
b'              {'PF:b', 'b', 'LF:B', 'LANG:X'}
b''             {'LF:B', 'b', 'PF:b', '-COMP:c', 'LANG:EN'}
c''             {'LANG:EN', 'LF:C', 'c', 'SPEC:a', 'PF:c'}
c'              {'PF:c', 'LANG:X', 'LF:C', 'c'}
d'              {'LANG:', 'LF:D', 'd', 'PF:d'}
a''             ['LANG:EN']
x'              {'PF:x', 'LANG:X', 'LF:X', 'x'}
y'              {'PF:y', 'LANG:X', 'LF:Y', 'y'}
z'              {'LF:Z', 'PF:x', 'LANG:X', 'z'}
John'           {'LF:John', 'LANG:X', "N'", 'PF:John'}
admires'        {'LF:admires', 'LANG:X', 'PF:admires', "V'"}
admires''       {'-SPEC:FORCE', 'PHI:DET:_', 'PF:admires', 'SPEC:P', 'V', 'SPEC:TO/inf', 'LF:admires', '-COMP:N', 'PHI:PER:_', 'PHI:NUM:_', '-COMP:v', 'COMP:P', '-COMP:V', 'SPEC:D', 'ARG', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '-VAL', '-COMP:T/fin', 'PHI:GEN:_', 'LANG:EN'}
Mary'           {'LANG:X', "N'", 'PF:Mary', 'LF:mary'}
T/fin           {'-SPEC:FORCE', '!COMP:*', 'PHI:DET:_', 'COMP:T/prt', '!SPEC:D', 'SPEC:TO/inf', 'FIN', '-SPEC:N', 'PHI:PER:_', 'PF:T', 'PHI:NUM:_', 'T', 'COMP:v', '-SPEC:v', 'SPEC:D', 'ARG', '-SPEC:TO/inf', '-SPEC:Neg', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:T', 'T/fin', '!PROBE:V', 'COMP:D', 'COMP:V', '-SPEC:V', '-COMP:T/fin', '-COMP:INF', 'VAL', '-SPEC:C/fin', 'SPEC:*', 'LANG:EN'}
v               {'!COMP:*', 'SPEC:D', 'ARG', 'PHI:DET:_', 'LF:v', 'PF:v', 'ASP', 'v', '!PROBE:V', '-VAL', 'COMP:V', '-SPEC:N', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:EN'}
C/fin           {'!COMP:*', 'PF:C', '-ARG', '!PROBE:FIN', '-COMP:T/prt', 'FIN', '-COMP:C/fin', '-SPEC:N', 'C', 'LF:C/fin', '-SPEC:T/fin', 'C/fin', 'COMP:T/fin', 'VAL', '-SPEC:C/fin', 'SPEC:*', 'COMP:Neg/fin', 'LANG:EN'}
T               {'-SPEC:FORCE', '!COMP:*', 'PHI:DET:_', 'COMP:T/prt', 'FIN', '-SPEC:N', '-COMP:NEG', 'PHI:PER:_', 'PF:T', 'PHI:NUM:_', 'T', 'COMP:v', 'SPEC:D', 'ARG', '-SPEC:T/fin', 'PHI:GEN:_', 'LF:T', '!PROBE:V', 'COMP:D', 'COMP:V', '-SPEC:V', 'VAL', 'SPEC:*', 'LANG:EN'}
T/prt           {'-SPEC:FORCE', '!COMP:*', 'PHI:DET:_', 'T/prt', 'COMP:T/prt', 'FIN', '-SPEC:N', '-COMP:NEG', 'PHI:PER:_', 'PHI:NUM:_', 'T', 'COMP:v', 'ARG', 'SPEC:D', '-SPEC:T/fin', 'PHI:GEN:_', 'PF:T/prt', '!PROBE:V', 'COMP:D', 'LF:T/prt', 'COMP:V', '-SPEC:V', 'VAL', 'SPEC:*', 'LANG:EN'}
a0              {'-SPEC:D', 'PF:A', 'A', 'TAIL:D', 'adjoinable', 'COMP:0', '-adjoinable', '-SPEC:A', 'LF:A', 'LANG:EN'}
n               {'-SPEC:R', '-COMP:ADV', 'PHI:DET:_', '-SPEC:INF', '-SPEC:ADV', 'PF:n', '-SPEC:N', 'INF', '-COMP:AUX', 'N', 'COMP:P', 'COMP:v', '-COMP:V', '-SPEC:uWH', 'SPEC:A', '-SPEC:T/fin', 'COMP:0', '-COMP:WH', 'SPEC:*', '-SPEC:FORCE', '!COMP:*', '!SPEC:D', 'LF:n', '-COMP:N', '-COMP:C/fin', 'PHI:PER:_', 'PHI:NUM:_', 'n', '-COMP:D', '-COMP:v', '-COMP:A', 'ARG', 'PHI:GEN:_', '!SPEC:*', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', '-COMP:T/fin', 'COMP:uR', 'COMP:V', 'VAL', '-SPEC:C/fin', 'LANG:EN'}
impass          {'!COMP:*', 'ARG', 'SPEC:D', 'PHI:DET:_', 'ASP', 'PF:impass', 'v', 'LF:impass', '!PROBE:V', '-VAL', 'COMP:V', '-SPEC:N', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', 'LANG:EN'}
cau             {'!COMP:*', 'SPEC:D', 'ARG', 'PHI:DET:_', 'ASP', 'PF:Cau', 'v', '!PROBE:V', '-VAL', 'COMP:V', '-SPEC:N', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', 'LF:v/Cause', 'LANG:EN'}
INF             {'!COMP:*', '-COMP:FORCE', '-SPEC:T/fin', 'PF:INF', 'LF:INF', '-COMP:T/fin', '-COMP:C/fin', 'COMP:V', 'INF', '-SPEC:V', 'COMP:v', 'LANG:EN'}
prtcpl          {'-SPEC:FORCE', '!COMP:*', 'PHI:DET:_', 'T/prt', 'COMP:T/prt', 'FIN', '-SPEC:N', '-COMP:NEG', 'INF', '-COMP:C/fin', 'PHI:NUM:_', 'PHI:PER:_', 'T', 'COMP:v', '-COMP:T/fin', 'SPEC:D', '-COMP:FORCE', 'ARG', '-SPEC:T/fin', 'PHI:GEN:_', 'PF:T/prt', 'COMP:D', '!PROBE:V', 'LF:T/prt', 'COMP:V', '-SPEC:V', 'VAL', 'SPEC:*', 'LANG:EN'}
TO/inf          {'!COMP:*', '?ARG', '-COMP:C/fin', 'INF', 'TO/inf', 'COMP:v', '-SPEC:v', '-COMP:FORCE', 'adjoinable', '-SPEC:T/fin', 'PF:TO/inf', '-VAL', 'LF:TO/inf', '!COMP:V', '-COMP:T/fin', 'COMP:V', '-SPEC:V', 'LANG:EN'}
A/inf           {'-SPEC:Neg/fin', '!COMP:*', '?ARG', 'LF:A/inf', '-COMP:C/fin', 'INF', 'COMP:v', 'PF:A/inf', '-COMP:FORCE', 'A/inf', '-SPEC:T/fin', 'COMP:V', '-SPEC:V', '-COMP:T/fin', '?VAL', 'SPEC:*', 'LANG:EN'}
ARE/inf         {'!COMP:*', '?ARG', 'PF:are', 'ARE/inf', 'LF:ARE/inf', '-COMP:C/fin', 'INF', 'COMP:v', '-COMP:FORCE', '-SPEC:T/fin', '-adjoinable', 'COMP:V', '-COMP:T/fin', '-SPEC:V', 'VAL', 'SPEC:*', 'LANG:EN'}
ESSA/inf        {'-SPEC:FORCE', 'TAIL:T', '-SPEC:Neg/fin', '!COMP:*', '?ARG', 'ESSA/inf', '-SPEC:N', '-COMP:C/fin', 'PF:essa', 'INF', 'COMP:v', '-COMP:FORCE', 'adjoinable', 'SPEC:*', '-SPEC:T/fin', 'LF:while', 'COMP:V', '-SPEC:V', '-COMP:T/fin', '?VAL', 'ADV', 'LANG:EN'}
TUA/inf         {'-SPEC:FORCE', 'TAIL:T', '-SPEC:Neg/fin', '!COMP:*', 'PHI:DET:_', '-SPEC:N', '-COMP:C/fin', 'INF', 'CAL', 'PHI:NUM:_', 'PHI:PER:_', 'COMP:v', 'ARG', '-COMP:FORCE', 'adjoinable', 'TUA/inf', '-SPEC:T/fin', '!SPEC:*', 'LF:after', 'COMP:V', '-SPEC:V', '-COMP:T/fin', 'PHI:GEN:_', 'ADV', 'PF:tua', 'LANG:EN'}
VA/inf          {'!COMP:*', 'PHI:DET:_', 'PF:vAn', '-SPEC:N', '-COMP:C/fin', 'INF', 'PHI:PER:_', 'PHI:NUM:_', 'COMP:v', 'LF:VA', 'ARG', '-COMP:FORCE', '-SPEC:T/fin', 'VA/inf', 'PHI:GEN:_', '!SPEC:*', 'COMP:V', '-SPEC:V', '-COMP:T/fin', 'VAL', 'SPEC:*', 'LANG:EN'}
MA/ssa          {'-SPEC:FORCE', '-SPEC:Neg/fin', 'PHI:DET:_', '-SPEC:N', 'PHI:PER:_', 'LF:in_doing', 'PHI:NUM:_', 'COMP:v', '-SPEC:*', 'PF:massa', 'ARG', 'adjoinable', '-SPEC:T/fin', 'TAIL:V', '-VAL', 'COMP:V', 'MA/inf', 'PHI:GEN:_', 'ADV', 'LANG:EN'}
MA/tta          {'-SPEC:FORCE', 'TAIL:T', '-SPEC:Neg/fin', 'ARG', 'PHI:DET:_', 'adjoinable', '-SPEC:T/fin', '-VAL', '-SPEC:N', 'LF:without_doing', 'MA/inf', 'PHI:PER:_', 'PHI:NUM:_', 'PHI:GEN:_', 'ADV', 'PF:matta', 'LANG:EN'}
MA/lla          {'PHI:DET:_', '-SPEC:N', 'PF:malla', 'COMP:v', 'adjoinable', '-SPEC:T/fin', 'LF:by_doing', '-VAL', 'MA/inf', '-SPEC:FORCE', 'TAIL:T', '-SPEC:Neg/fin', 'PHI:PER:_', 'PHI:NUM:_', 'ARG', 'COMP:V', 'PHI:GEN:_', 'ADV', 'LANG:EN'}
MA/inf          {'PHI:DET:_', '-SPEC:N', 'COMP:v', 'adjoinable', '-SPEC:T/fin', 'TAIL:V', '-VAL', 'MA/inf', '-SPEC:FORCE', '-SPEC:Neg/fin', 'PHI:PER:_', 'PHI:NUM:_', 'PF:maan', 'ARG', 'LF:to_do', 'COMP:V', 'PHI:GEN:_', 'ADV', 'LANG:EN'}
E/inf           {'-SPEC:FORCE', '-SPEC:Neg/fin', 'PF:en', '-ARG', 'adjoinable', '-SPEC:T/fin', 'LF:by', '-VAL', '-SPEC:N', 'LANG:FI', 'ADV', 'SPEC:*'}
BE-             {'-SPEC:FORCE', '!COMP:*', '-ARG', 'COMP:T/prt', 'SPEC:P', 'V', 'SPEC:TO/inf', '-COMP:N', 'COPULA', '-COMP:v', 'COMP:P', '-COMP:V', 'LF:BE', 'SPEC:D', '-SPEC:T/fin', 'ASP', 'SPEC:ADV', '-VAL', '-COMP:T/fin', 'PF:BE', 'LANG:EN'}
D               {'-SPEC:Neg/fin', '-SPEC:D', '!COMP:*', '-SPEC:C', '-ARG', '-SPEC:INF', '-SPEC:N', 'OP', '-COMP:D', '!PROBE:N', '-COMP:T/fin', 'LF:D', 'D', '-SPEC:MA/lla', '-COMP:uR', '-SPEC:T/fin', 'adjoinable', '-SPEC:P', '-SPEC:V', 'PF:D', 'COMP:N', 'LANG:EN'}
P               {'-SPEC:FORCE', '-COMP:ADV', '-SPEC:Neg/fin', '!COMP:*', 'PHI:DET:_', '-float', '-SPEC:C', '-SPEC:ADV', '-SPEC:INF', '-COMP:N', '-SPEC:N', '-SPEC:iR', 'PHI:PER:_', 'PHI:NUM:_', 'LF:P', '-SPEC:v', '-SPEC:*', 'ARG', '-SPEC:iWH', 'adjoinable', '-SPEC:T/fin', 'PF:P', '-COMP:uWH', 'P', '-SPEC:P', 'COMP:D', '-VAL', '-SPEC:V', '-COMP:T/fin', 'PHI:GEN:_', '-SPEC:C/fin', 'LANG:EN'}
pro             ['LANG:EN']
pro-            {'-SPEC:R', '-SPEC:FORCE', '-COMP:ADV', '-SPEC:ADV', '-SPEC:INF', 'PHI', '-COMP:N', '-SPEC:N', '-COMP:C/fin', '-COMP:AUX', '-COMP:D', '-COMP:v', 'N', 'COMP:P', '-COMP:T/fin', '-COMP:V', '-COMP:A', '-SPEC:uWH', 'SPEC:A', '-SPEC:T/fin', 'LF:pro', '-COMP:WH', 'PF:(pro)', '-SPEC:P', 'COMP:R', 'COMP:R/D', '-SPEC:V', 'COMP:uR', '-SPEC:C/fin', 'LANG:EN'}
cl              {'LEFT:D,CL', 'RIGHT:PRG', 'CL', 'RIGHT:ARE/inf', 'inflectional', 'LEFT:T/fin', 'LANG:EN'}
inc             {'INCORPORATED', 'inflectional', 'LANG:EN'}
sg              {'PHI:NUM:SG', 'inflectional', 'LANG:EN'}
pl              {'PHI:NUM:PL', 'inflectional', 'LANG:EN'}
1p              {'PHI:PER:1', 'inflectional', 'LANG:EN'}
2p              {'PHI:PER:2', 'inflectional', 'LANG:EN'}
3p              {'PHI:PER:3', 'inflectional', 'LANG:EN'}
def             {'PHI:DET:DEF', 'inflectional', 'LANG:EN'}
indef           {'PHI:DET:INDEF', 'inflectional', 'LANG:EN'}
hum             {'PHI:HUM:HUM', 'inflectional', 'LANG:EN'}
nonhum          {'PHI:HUM:NONHUM', 'inflectional', 'LANG:EN'}
m               {'PHI:GEN:M', 'inflectional', 'LANG:EN'}
f               {'PHI:GEN:F', 'inflectional', 'LANG:EN'}
nom             {'TAIL:FIN,!COMP:*,VAL', 'inflectional', 'NOM', 'LANG:EN'}
acc             {'ACC', 'TAIL:v', 'inflectional', 'LANG:EN'}
dat             {'TAIL:v', 'inflectional', 'DAT', 'LANG:EN'}
uC/op           {'inflectional', 'uC/op', 'LANG:EN'}
wh              {'OP:_', 'OP:WH', 'inflectional', 'LANG:EN'}
wh_             {'FORCE:OP:WH', 'OP:_', 'OP', 'inflectional', 'LANG:EN'}
top             {'OP:TOP', 'inflectional', 'LANG:EN'}
foc             {'inflectional', 'OP:FOC', 'LANG:EN'}
C/op            {'OP:C/OP', 'inflectional', 'LANG:EN'}
rel             {'OP:REL', '-COMP:C/fin', 'adjoinable', 'inflectional', 'LANG:EN'}
Q               {'OP:WH', 'OP', 'inflectional', 'OP:Q', 'LANG:EN'}
