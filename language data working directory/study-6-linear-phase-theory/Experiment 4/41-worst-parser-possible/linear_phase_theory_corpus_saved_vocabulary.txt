ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:V', 'TAIL:V', '-SPEC:C', 'LANG:IT', '-SPEC:Neg/fin', 'COMP:ARE/inf', '-SPEC:iWH', '-SPEC:iR', '-SPEC:ADV', 'adjoinable', '-SPEC:N', '-SPEC:C/fin', 'COMP:D', 'P', '-SPEC:T/fin', '-SPEC:v', '-VAL', '-SPEC:*', '-COMP:T', '-COMP:N', 'LF:to', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:uWH', '-ARG', '!COMP:*', 'PF:a', '-COMP:ADV'}
a_D             {'-SPEC:P', '-SPEC:INF', '-SPEC:V', '-SPEC:MA/lla', 'LANG:EN', '-SPEC:C', '-COMP:D', '-SPEC:Neg/fin', 'OP', 'adjoinable', '-SPEC:T/fin', 'D', 'COMP:N', '-COMP:P', '!PROBE:N', '-COMP:T/fin', 'PF:D', '!COMP:*', 'LF:D', '-ARG', '-COMP:uR'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'-COMP:v', 'LANG:EN', 'LF:admire', 'SPEC:P', '-COMP:V', 'PF:admire', 'SPEC:ADV', 'PHI:GEN:_', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-COMP:Neg', '-COMP:P', '-SPEC:FORCE', '-COMP:T/fin', 'COMP:P', '-SPEC:Neg', '!COMP:*', '-VAL', 'PHI:NUM:_', 'CLASS:TR'}
admire*         ['LANG:EN']
T/fin*          {'LANG:EN', 'CAT:T/fin', 'LF:T', "PF:T/fin'", 'NO_DET', '!SPEC:*', 'NO_NUMBER', '-VAL'}
v*              {'NO_DET', 'LF:v', 'PF:v', 'NO_NUMBER', 'LANG:EN', '-VAL', 'CAT:v'}
admire**        ['LANG:EN']
T/fin**         {'NO_PERSON', "PF:T/fin''", 'LANG:EN', 'CAT:T/fin', 'LF:T', 'NO_DET', '!SPEC:*', 'NO_NUMBER', 'PHI:PER:3', '-VAL'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'-COMP:v', 'LF:admire', 'SPEC:P', 'LANG:IT', 'SPEC:ADV', 'PHI:GEN:_', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-SPEC:FORCE', 'COMP:P', 'PF:adora', '-COMP:V', 'PHI:NUM:_'}
antaa           ['LANG:FI']
anta-           {'-COMP:v', 'PF:antaa', 'SPEC:D', 'SPEC:P', '-COMP:V', 'ASP:BOUNDED', 'CLASS:DITR', 'SPEC:ADV', 'LF:give', '+SEM:directional', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', '-COMP:FIN', '!COMP:*', '-VAL', 'PHI:NUM:_'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'-COMP:v', 'LANG:EN', 'SPEC:D', 'PF:ask', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'PHI:GEN:_', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-SPEC:FORCE', 'COMP:P', 'SEM:internal', 'LF:ask', 'PHI:NUM:_'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'LF:key', 'COMP:uR', 'COMP:T/prt', 'COMP:D/rel', 'PF:avain', '-SEM:directional', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', '-COMP:V'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'COMP:uR', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SEM:directional', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'LF:car', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'PF:auto'}
bank            {'-COMP:v', 'LF:bank_inst', '-COMP:C/fin', '-SPEC:P', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-COMP:WH', '-COMP:AUX', 'LANG:EN', '-SPEC:V', 'COMP:uR', 'FREQ:1', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', 'PF:bank1', '-COMP:N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', '-COMP:V'}
bank            {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'LANG:EN', 'PF:bank2', 'COMP:uR', 'LF:bank_river', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'FREQ:2', '-COMP:V'}
barn            {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'LANG:EN', 'COMP:uR', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', 'LF:barn', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'PF:barn'}
city            {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'LANG:EN', 'COMP:uR', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', 'PF:city', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'LF:city', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', '-COMP:V'}
che             ['LANG:IT']
che-            {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'COMP:T/prt', 'COMP:D/rel', 'LF:who', '-SPEC:uWH', 'COMP:R', '-SPEC:T/fin', 'N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'LANG:IT', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', 'PF:che', '-COMP:N', 'COMP:R/D', '-COMP:V'}
chiamato        ['LANG:IT']
chiamata-       {'-COMP:v', 'PF:chiamato', 'SPEC:P', 'LANG:IT', '-COMP:V', 'SPEC:ADV', 'PHI:GEN:_', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-SPEC:FORCE', 'COMP:P', 'LF:called', '-VAL', 'PHI:NUM:_'}
claims          ['LANG:EN']
claim-          {'-COMP:v', 'LANG:EN', 'SPEC:D', 'COMP:T/fin', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'PHI:GEN:_', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'LF:claim', '-SPEC:FORCE', 'COMP:P', '-COMP:D', 'PF:claim', '-VAL', 'PHI:NUM:_'}
danno           {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'PF:danno', 'LANG:IT', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'LF:damage', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', '-COMP:V'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'LF:detest', '-COMP:v', 'SPEC:P', 'LANG:IT', '-COMP:V', 'COMP:ARE/inf', 'PF:detest', 'SPEC:ADV', 'PHI:GEN:_', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-SPEC:FORCE', 'COMP:P', 'SEM:internal', '-VAL', 'PHI:NUM:_'}
devono          ['LANG:EN']
deva-           {'-COMP:v', 'SPEC:D', 'SPEC:P', 'LANG:IT', 'LF:must', '-COMP:V', 'COMP:ARE/inf', 'SPEC:ADV', '-ASP', 'PHI:GEN:_', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', 'SPEC:TO/inf', 'PF:deva', '-SPEC:FORCE', 'COMP:P', 'SEM:internal', '-VAL', 'PHI:NUM:_'}
di              {'-adjoinable', 'SPEC:*', '-SPEC:P', '-COMP:A', '-SPEC:INF', '-SPEC:V', 'PF:di', '-SPEC:C', 'LF:of', '-SPEC:Neg/fin', '-SPEC:iWH', '-SPEC:iR', '-SPEC:ADV', '-SPEC:N', 'ARG', '-SPEC:C/fin', 'COMP:D', 'P', '-SPEC:T/fin', '-SPEC:v', 'PHI:PER:_', '-COMP:T', '-COMP:N', 'PHI:DET:_', 'LANG:FI', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:uWH', '!COMP:*', '-VAL', '-COMP:ADV', 'PHI:NUM:_'}
does            {'SPEC:*', '-SPEC:TO/inf', 'LANG:EN', '!PROBE:V', 'COMP:T/prt', 'PF:does', 'ARG', 'LF:does', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:INF', 'SPEC:TO/inf', 'COMP:V', '!COMP:*', 'COMP:Neg', 'T/fin', 'FIN', '-SPEC:V', 'VAL', 'SPEC:FORCE', 'SPEC:D', '-SPEC:C', 'PHI:GEN:F', '!SPEC:*', 'PHI:GEN:M', 'PHI:GEN:_', '-SPEC:N', '-SPEC:v', 'PHI:PER:_', 'PHI:NUM:SG', 'COMP:v', '-COMP:T/fin', '-SPEC:Neg', 'PHI:PER:3', 'SPEC:C/fin', 'T', 'PHI:NUM:_'}
does_C          ['LANG:EN']
does-           {'SPEC:*', '-SPEC:TO/inf', 'LANG:EN', '!PROBE:V', 'COMP:T/prt', 'PF:does', 'ARG', 'LF:does', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:INF', 'SPEC:TO/inf', 'COMP:V', '!COMP:*', 'COMP:Neg', 'T/fin', 'FIN', '-SPEC:V', 'VAL', 'SPEC:FORCE', 'SPEC:D', '-SPEC:C', 'PHI:GEN:F', '!SPEC:*', 'PHI:GEN:M', 'PHI:GEN:_', '-SPEC:N', '-SPEC:v', 'PHI:PER:_', 'PHI:NUM:SG', 'COMP:v', '-COMP:T/fin', '-SPEC:Neg', 'PHI:PER:3', 'SPEC:C/fin', 'T', 'PHI:NUM:_'}
dorme           ['LANG:IT']
dorme-          {'-COMP:v', 'CLASS:INTR', 'LANG:EN', 'LF:sleep', 'SPEC:D', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'PHI:GEN:_', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'PF:dorme', 'ASP', '-COMP:N', 'SPEC:TO/inf', '!SPEC:D', '-SPEC:FORCE', 'COMP:P', '-COMP:D', '-COMP:MA/inf', '-VAL', 'PHI:NUM:_'}
disappeared     ['LANG:EN']
disappear-      {'-COMP:v', 'CLASS:INTR', 'LANG:EN', 'SPEC:D', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'PHI:GEN:_', 'ARG', 'V', 'PHI:PER:_', 'LF:disappear', '-SPEC:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'PF:disappear', 'SPEC:TO/inf', '-SPEC:FORCE', 'COMP:P', '-COMP:D', '-COMP:MA/inf', '-VAL', 'PHI:NUM:_'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'LF:easy', '2SPEC', 'LANG:EN', 'SPEC:D', 'PF:easy', '0'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'FIN', 'SPEC:*', 'VAL', '-SPEC:T', 'COMP:T/prt', '!SPEC:*', 'NEG', '%SPEC:INF', 'POL:NEG', 'ARG', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'Neg/fin', 'LANG:FI', 'PF:ei', 'LF:neg', '!COMP:T', '!COMP:*', 'SEM:internal', 'PHI:NUM:_'}
e-              {'FIN', 'SPEC:*', 'VAL', '-SPEC:T', 'COMP:T/prt', '!SPEC:*', 'NEG', '%SPEC:INF', 'POL:NEG', 'ARG', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'Neg/fin', 'LANG:FI', 'PF:ei', 'LF:neg', '!COMP:T', '!COMP:*', 'SEM:internal', 'PHI:NUM:_'}
elaa            ['LANG:FI']
ela-            {'-COMP:v', 'CLASS:INTR', 'SPEC:D', 'SPEC:P', '-COMP:V', 'LF:live', 'PF:elaa', 'SPEC:ADV', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', '-COMP:D', '-COMP:MA/inf', '-VAL', 'PHI:NUM:_'}
etsii           ['LANG:FI']
etsi-           {'-COMP:v', '!COMP:D', 'PF:etsi', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP', '-COMP:N', 'LF:search', 'SPEC:TO/inf', '-COMP:P', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-VAL', 'PHI:NUM:_', 'CLASS:TR'}
etta            {'FIN', '!PROBE:FIN', 'PF:etta', '-SPEC:*', 'COMP:T/fin', 'LANG:FI', 'COMP:C/fin', 'LF:that', '!COMP:*', 'FORCE', '-ARG', '-VAL', '-SPEC:D'}
fell            ['LANG:EN']
fell-           {'-COMP:v', 'CLASS:INTR', 'LANG:EN', 'SPEC:D', 'SPEC:P', '-COMP:V', 'PF:fell', 'SPEC:ADV', 'LF:fell', 'PHI:GEN:_', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-SPEC:FORCE', 'COMP:P', '-COMP:D', '-COMP:MA/inf', '-VAL', 'PHI:NUM:_'}
flow'           {'-COMP:v', 'LANG:EN', 'SPEC:D', 'SPEC:P', 'SPEC:ADV', 'PHI:GEN:_', 'PF:flow', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', '-SPEC:FORCE', 'LF:flow', '-COMP:V', 'PHI:NUM:_'}
from            {'PF:from', '-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:V', 'PHI:PER:_', 'LANG:EN', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:iWH', '-SPEC:iR', '-SPEC:ADV', 'adjoinable', '-SPEC:N', 'PHI:GEN:_', 'ARG', '-SPEC:C/fin', '-float', 'P', 'TAIL:V,+SEM:directional', '-SPEC:T/fin', 'COMP:D', '-COMP:T', '-SPEC:*', '-SPEC:v', '-COMP:N', 'PHI:DET:_', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:uWH', '!COMP:*', 'LF:from', '-VAL', '-COMP:ADV', 'PHI:NUM:_'}
gave            ['LANG:EN']
give-           {'-COMP:v', 'LANG:EN', 'SPEC:D', 'SPEC:P', '-COMP:V', 'CLASS:DITR', 'SPEC:ADV', 'LF:give', 'PHI:GEN:_', '+SEM:directional', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-SPEC:FORCE', 'COMP:P', '-COMP:FIN', '!COMP:*', '-VAL', 'PHI:NUM:_', 'PF:give'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', 'COMP:D/rel', '-SEM:directional', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', 'PF:Giuseppe', '-COMP:N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'LF:Giuseppe', '-COMP:V'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'-COMP:v', 'PF:haluaa', 'SPEC:P', '-COMP:V', 'ASP:BOUNDED', 'SPEC:ADV', 'COMP:A/inf', 'LF:want', 'V', 'COMP:D', 'ARG', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:*', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-COMP:P', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', '!COMP:*', 'SEM:internal', '-VAL', 'PHI:NUM:_', 'CLASS:TR'}
hairitsee       ['LANG:FI']
hairitse-       {'-COMP:v', '!COMP:D', 'SPEC:D', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'LF:disturb', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-COMP:P', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', 'PF:hairitsee', '-COMP:FIN', '!COMP:*', '-VAL', 'PHI:NUM:_', 'CLASS:TR'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'-COMP:v', 'SPEC:*', 'SPEC:D', 'SPEC:P', 'COMP:T', 'LANG:IT', '-COMP:V', 'SPEC:ADV', '-ASP', 'PHI:GEN:_', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', 'LF:have', 'SPEC:TO/inf', '-SPEC:FORCE', 'COMP:P', 'SEM:internal', 'PF:ha', '-VAL', 'PHI:NUM:_'}
horse           {'-COMP:v', 'PF:horse', '-COMP:C/fin', '-SPEC:P', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-COMP:WH', '-COMP:AUX', 'LANG:EN', '-SPEC:V', 'COMP:uR', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'LF:horse', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', '-COMP:V'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'-COMP:v', 'CLASS:INTR', 'SPEC:D', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'ARG', 'V', 'PHI:PER:_', 'LF:disappear', '-SPEC:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', 'PF:havia', '-COMP:D', '-COMP:MA/inf', '-VAL', 'PHI:NUM:_'}
Helsingissa     ['LANG:FI']
Helsinki        ['LANG:FI']
Helsinki-       {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'COMP:uR', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'LF:Helsinki', 'PF:Helsinki'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'-COMP:v', '!COMP:D', 'LF:admire', 'SPEC:P', '-COMP:V', 'PF:ihaile-', 'SPEC:ADV', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-COMP:P', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', '-COMP:FIN', '!COMP:*', '-VAL', 'PHI:NUM:_', 'CLASS:TR'}
il              {'-SPEC:P', '-SPEC:INF', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:C', 'LANG:IT', '-SPEC:Neg/fin', 'OP', 'PF:il', 'adjoinable', 'LF:the', '-SPEC:T/fin', 'D', 'COMP:N', '-COMP:P', '!PROBE:N', '-COMP:T/fin', '!COMP:*', '-COMP:D', '-ARG', '-COMP:uR'}
i               {'-SPEC:P', '-SPEC:INF', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:C', 'LANG:IT', '-SPEC:Neg/fin', 'OP', 'PF:il', 'adjoinable', 'LF:the', '-SPEC:T/fin', 'D', 'COMP:N', '-COMP:P', '!PROBE:N', '-COMP:T/fin', '!COMP:*', '-COMP:D', '-ARG', '-COMP:uR'}
in              {'-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:V', 'LF:in', '-SPEC:C', 'LANG:IT', '-SPEC:Neg/fin', '-SPEC:iWH', '-SPEC:iR', '-SPEC:ADV', 'adjoinable', '-SPEC:N', 'PHI:GEN:_', 'PF:in', 'ARG', '-SPEC:C/fin', 'P', '-SPEC:T/fin', 'COMP:D', '-SPEC:v', '-COMP:T', '-COMP:N', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:uWH', '!COMP:*', '-VAL', '-COMP:ADV', 'PHI:NUM:_'}
infermieri      {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'PF:infermieri', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'LF:nurses', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', '-COMP:V'}
is              ['LANG:EN']
be-             {'-COMP:v', 'LANG:EN', 'SPEC:D', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'V', '-SPEC:T/fin', 'LF:be', 'PF:be', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-ARG', '-COMP:TO/inf', 'COPULA'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'-COMP:v', 'LF:sit', 'CLASS:INTR', 'SPEC:D', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'PF:istuu', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', '-COMP:D', '-COMP:MA/inf', '-VAL', 'PHI:NUM:_'}
John            ['LANG:EN']
John-           {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'LANG:EN', 'COMP:T/prt', 'COMP:D/rel', '-SEM:directional', '-SPEC:uWH', 'COMP:R', '-SPEC:T/fin', 'N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-adjoinable', '-COMP:C/fin', 'PF:John', '-COMP:A', '-COMP:WH', '-COMP:AUX', '-SPEC:V', 'LF:John', 'COMP:uR', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'COMP:R/D', '-COMP:V'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'COMP:T/prt', 'COMP:D/rel', 'LF:who', '-SPEC:uWH', 'COMP:R', '-SPEC:T/fin', 'N', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'COMP:uR', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'PF:joka', 'COMP:R/D', '-COMP:V'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', 'PF:Jukka', '-SPEC:INF', 'SPEC:A', '-COMP:WH', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'COMP:T/prt', 'COMP:D/rel', '-SEM:directional', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'LF:Jukka'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'-COMP:v', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'PF:juokse-', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'LANG:FI', 'LF:run', '-SPEC:FORCE', 'COMP:P', '-VAL', 'PHI:NUM:_'}
kaksi           {'NUM', 'ARG', 'SPEC:*', 'PHI:PER:_', 'PF:kaksi', 'PHI:DET:_', 'LF:two', 'TAIL:ARG,VAL,FIN', 'PHI:NUM:SG', 'COMP:N', 'LANG:FI', 'COMP:n', '-VAL', 'PHI:NUM:_'}
kaksi           {'NUM', 'SPEC:*', 'PF:kaksi', 'LF:two', 'LANG:EN', 'COMP:N', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'COMP:n'}
kaksi_1         {'NUM', 'ARG', 'SPEC:*', 'PHI:PER:_', 'PF:kaksi', 'PHI:DET:_', 'LF:two', 'TAIL:ARG,VAL,FIN', 'PHI:NUM:SG', 'COMP:N', 'LANG:FI', 'COMP:n', '-VAL', 'PHI:NUM:_'}
kaksi_2         {'NUM', 'SPEC:*', 'PF:kaksi', 'LF:two', 'LANG:EN', 'COMP:N', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'COMP:n'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'LANG:FI', 'NUM', 'SPEC:*', 'PF:kaksi', 'COMP:n', 'LF:two', 'COMP:N'}
kaupunkia       ['LANG:EN']
kaupunki        {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', 'PF:kaupunki', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'LF:city', 'LANG:FI', '-COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', '-COMP:V'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'-COMP:v', '!COMP:A/inf', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'PF:kaske', 'ARG', 'V', 'PHI:PER:_', 'SEM:external', '-SPEC:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', 'LF:order', '-VAL', 'PHI:NUM:_'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'LF:watch', 'COMP:uR', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'PF:kello', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', '-COMP:V'}
kello0-         {'2SPEC', 'LANG:FI', '0', 'LF:watch', 'SPEC:D', 'PF:kello'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'LANG:EN', 'LF:key', 'COMP:uR', '-COMP:V', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'PF:key'}
kirja           ['LANG:FI']
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'COMP:T/prt', 'COMP:D/rel', '-SEM:directional', '-SPEC:uWH', 'COMP:C', 'LF:book', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'PF:kirja'}
knows           ['LANG:EN']
know-           {'-COMP:v', 'LANG:EN', 'PF:know', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'PHI:GEN:_', 'LF:know', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-COMP:P', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-VAL', 'PHI:NUM:_', 'CLASS:TR'}
kohti           {'SPEC:*', '-SPEC:P', '-COMP:A', '-SPEC:INF', '-SPEC:V', 'TAIL:V', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:iWH', 'PF:kohti', '-SPEC:iR', '-SPEC:ADV', 'adjoinable', '-SPEC:N', 'ARG', '-SPEC:C/fin', 'COMP:D', 'P', '-SPEC:T/fin', '-SPEC:v', 'PHI:PER:_', '-COMP:T', '-COMP:N', 'PHI:DET:_', 'LANG:FI', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:uWH', '!COMP:*', 'PHI:NUM:_', '-VAL', '-COMP:ADV', 'LF:towards'}
koko            {'-SPEC:P', '-SPEC:INF', '-SPEC:V', '-SPEC:MA/lla', 'TAIL:T', '-SPEC:C', '-SPEC:Neg/fin', 'PF:koko', 'OP', 'adjoinable', '-SPEC:T/fin', 'D', 'COMP:N', 'LF:all', '-COMP:P', 'LANG:FI', '!PROBE:N', '-COMP:T/fin', '!COMP:*', '-COMP:D', '-ARG', '-COMP:uR'}
kuka            ['LANG:FI']
kuka-           {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'COMP:T/prt', 'COMP:D/rel', 'LF:who', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'PHI', 'N', '-COMP:N', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'PF:kuka', '-COMP:V'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'-COMP:v', '-COMP:WH', 'LF:snore', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'PF:kuorsaa', 'SPEC:TO/inf', 'COMP:P', '-COMP:T/fin', 'LANG:FI', '-SPEC:FORCE', '-COMP:D', '-VAL', 'PHI:NUM:_'}
lahella         {'SPEC:*', '-SPEC:P', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:iR', 'ARG', 'P', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:T', '-COMP:FORCE', '!SPEC:D', 'LANG:FI', '-SPEC:FORCE', '-COMP:uWH', '!COMP:*', 'COMP:V', 'INF', '-COMP:ADV', '-COMP:C/fin', '-COMP:A', 'VAL', '-SPEC:V', '-SPEC:C', 'PF:lahella', '!SPEC:*', '-SPEC:iWH', '-SPEC:ADV', 'adjoinable', '-SPEC:N', 'LF:near', '-SPEC:C/fin', 'COMP:D', '-SPEC:v', 'PHI:PER:_', '-COMP:N', 'COMP:v', '-COMP:T/fin', 'PHI:NUM:_'}
lahella         {'!COMP:D', 'SPEC:*', '-SPEC:P', '-COMP:A', '-SPEC:INF', '-SPEC:V', '-SPEC:C', '-SPEC:Neg/fin', 'PF:lahella', '-SPEC:iWH', '-SPEC:iR', '-SPEC:ADV', 'adjoinable', '-SPEC:N', 'LF:near', 'ARG', '-SPEC:C/fin', 'COMP:D', 'P', '-SPEC:T/fin', '-SPEC:v', 'PHI:PER:_', '-COMP:T', '-COMP:N', 'PHI:DET:_', 'LANG:FI', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:uWH', '!COMP:*', '-VAL', '-COMP:ADV', 'PHI:NUM:_'}
lahella_1       {'!COMP:D', 'SPEC:*', '-SPEC:P', '-COMP:A', '-SPEC:INF', '-SPEC:V', '-SPEC:C', '-SPEC:Neg/fin', 'PF:lahella', '-SPEC:iWH', '-SPEC:iR', '-SPEC:ADV', 'adjoinable', '-SPEC:N', 'LF:near', 'ARG', '-SPEC:C/fin', 'COMP:D', 'P', '-SPEC:T/fin', '-SPEC:v', 'PHI:PER:_', '-COMP:T', '-COMP:N', 'PHI:DET:_', 'LANG:FI', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:uWH', '!COMP:*', '-VAL', '-COMP:ADV', 'PHI:NUM:_'}
lahella_2       {'SPEC:*', '-SPEC:P', '-SPEC:INF', '-SPEC:Neg/fin', '-SPEC:iR', 'ARG', 'P', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:T', '-COMP:FORCE', '!SPEC:D', 'LANG:FI', '-SPEC:FORCE', '-COMP:uWH', '!COMP:*', 'COMP:V', 'INF', '-COMP:ADV', '-COMP:C/fin', '-COMP:A', 'VAL', '-SPEC:V', '-SPEC:C', 'PF:lahella', '!SPEC:*', '-SPEC:iWH', '-SPEC:ADV', 'adjoinable', '-SPEC:N', 'LF:near', '-SPEC:C/fin', 'COMP:D', '-SPEC:v', 'PHI:PER:_', '-COMP:N', 'COMP:v', '-COMP:T/fin', 'PHI:NUM:_'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'-COMP:v', 'PF:lahtea', 'CLASS:INTR', 'SPEC:D', 'SPEC:P', 'LF:leave', '-COMP:V', 'SPEC:ADV', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', 'COMP:PP', '-COMP:D', '-COMP:MA/inf', '-VAL', 'PHI:NUM:_'}
lavano          ['LANG:IT']
lava-           {'-COMP:v', 'SPEC:P', 'LANG:IT', '-COMP:V', 'SPEC:ADV', 'PHI:GEN:_', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP', 'PF:lava', '-COMP:N', 'SPEC:TO/inf', '-SPEC:FORCE', 'COMP:P', '!COMP:*', 'LF:wash', '-VAL', 'PHI:NUM:_'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-SPEC:P', '-SPEC:INF', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:C', '-COMP:D', 'LANG:IT', '-SPEC:Neg/fin', 'OP', 'PF:le', 'adjoinable', '-SPEC:T/fin', 'D', 'COMP:N', '-COMP:P', '!PROBE:N', '-COMP:T/fin', '!COMP:*', 'LF:D', '-ARG', '-COMP:uR'}
leaves          ['LANG:EN']
leave           {'-COMP:v', 'LANG:EN', 'SPEC:P', 'LF:leave', 'SPEC:ADV', 'PHI:GEN:_', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', '-VAL', 'ASP', '-COMP:N', 'PF:leave', 'SPEC:TO/inf', '!SPEC:D', '-COMP:T/fin', '-SPEC:FORCE', 'COMP:P', '-COMP:V', 'PHI:NUM:_'}
leave-          {'-COMP:v', 'LANG:EN', 'SPEC:P', 'LF:leave', 'SPEC:ADV', 'PHI:GEN:_', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', '-VAL', 'ASP', '-COMP:N', 'PF:leave', 'SPEC:TO/inf', '!SPEC:D', '-COMP:T/fin', '-SPEC:FORCE', 'COMP:P', '-COMP:V', 'PHI:NUM:_'}
like-           {'-COMP:v', '!COMP:D', 'PF:like', 'LF:like', 'LANG:EN', 'SPEC:P', 'SPEC:ADV', 'PHI:GEN:_', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-SPEC:FORCE', 'COMP:P', '-COMP:V', 'PHI:NUM:_'}
likes           ['LANG:EN']
like            {'-COMP:v', '!COMP:D', 'PF:like', 'LF:like', 'LANG:EN', 'SPEC:P', 'SPEC:ADV', 'PHI:GEN:_', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-SPEC:FORCE', 'COMP:P', '-COMP:V', 'PHI:NUM:_'}
little          ['LANG:EN']
little-         {'2SPEC', 'LF:little', 'SPEC:D', '0', 'LANG:EN', 'PF:little-'}
lle             {'-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:V', 'PHI:PER:_', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:iWH', '-SPEC:iR', '-SPEC:ADV', 'adjoinable', '+SEM:directional', '-SPEC:N', 'ARG', '-SPEC:C/fin', 'COMP:D', 'P', 'LF:for', 'TAIL:V,+SEM:directional', '-SPEC:T/fin', '-SPEC:*', '-COMP:T', '-SPEC:v', '-COMP:N', 'PHI:DET:_', 'LANG:FI', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:uWH', '!COMP:*', 'PF:P(lle)', '-VAL', '-COMP:ADV', 'PHI:NUM:_'}
lla             {'SPEC:*', '-SPEC:P', '-COMP:A', '-SPEC:INF', '-SPEC:V', 'TAIL:T', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:iWH', '-SPEC:iR', '-SPEC:ADV', 'adjoinable', '-SPEC:N', 'PF:P(lla)', 'LF:by', 'ARG', '-SPEC:C/fin', 'COMP:D', 'P', '-SPEC:T/fin', '-SPEC:v', 'PHI:PER:_', '-COMP:T', '-COMP:N', 'PHI:DET:_', 'LANG:FI', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:uWH', '!COMP:*', '-VAL', '-COMP:ADV', 'PHI:NUM:_', 'TAIL:*V'}
Luisa           ['LANG:IT']
Luisa-          {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'PF:Luisa', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', 'COMP:D/rel', '-SEM:directional', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'LF:Luisa', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', '-COMP:V'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'LF:read', '-COMP:v', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-COMP:P', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', '!COMP:*', 'PF:luke', '-VAL', 'PHI:NUM:_', 'CLASS:TR'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'-COMP:v', '!COMP:D', 'SPEC:P', '-COMP:V', 'PF:loyta-', 'ASP:BOUNDED', 'SPEC:ADV', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-COMP:P', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', '!COMP:*', 'LF:find', '-VAL', 'PHI:NUM:_', 'CLASS:TR'}
Mary            ['LANG:EN']
Mary-           {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'LANG:EN', 'COMP:T/prt', 'COMP:D/rel', '-SEM:directional', '-SPEC:uWH', 'COMP:R', '-SPEC:T/fin', 'N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-adjoinable', '-COMP:C/fin', '-COMP:A', '-COMP:WH', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'PF:Mary', 'LF:Mary', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'COMP:R/D', '-COMP:V'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'COMP:T/prt', 'COMP:D/rel', '-SEM:directional', '-SPEC:uWH', 'COMP:R', 'LF:Merja', '-SPEC:T/fin', 'N', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-adjoinable', '-COMP:C/fin', '-COMP:A', '-COMP:WH', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'PF:Merja', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'COMP:R/D', '-COMP:V'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'LF:by', 'SPEC:*', '-SPEC:T/fin', 'MA/inf', 'TAIL:T', 'COMP:v', 'PF:malla', 'LANG:FI', '-SPEC:FORCE', '-SPEC:Neg/fin', 'ADV', 'adjoinable', '-SPEC:N'}
meren           ['LANG:FI']
mere-           {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'LF:ocean', 'PF:meri', '-COMP:V'}
mies            {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', 'PF:mies', '-COMP:N', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'LF:man', '-COMP:V'}
mistake         {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'LANG:EN', 'COMP:uR', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', 'PF:mistake', '-SPEC:N', '-SPEC:C/fin', 'LF:mistake', '-SPEC:T/fin', 'N', '-COMP:N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', '-COMP:V'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'PF:mika-', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', 'LF:what', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', '-COMP:V'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'-COMP:v', 'LF:move', 'PF:move', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'PHI:GEN:_', '+SEM:directional', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-COMP:P', '-SPEC:FORCE', 'COMP:P', 'LANGN:EN', '!COMP:*', '-VAL', 'PHI:NUM:_', 'CLASS:TR'}
mukavasti       ['LANG:EN']
mukava-         {'2SPEC', 'LANG:FI', 'LF:comfortably', 'PF:mukavasti', 'SPEC:D', '0'}
must            {'T/fin', 'FIN', 'SPEC:*', '-SPEC:V', 'VAL', '-SPEC:TO/inf', 'LANG:EN', '!PROBE:V', 'SPEC:FORCE', 'SPEC:D', '-SPEC:C', 'LF:must', 'COMP:T/prt', '!SPEC:*', 'PF:must', 'PHI:GEN:_', '-SPEC:N', 'ARG', '-SPEC:v', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'MODAL', '-COMP:INF', 'SPEC:TO/inf', 'COMP:v', '-COMP:T/fin', 'COMP:V', '!COMP:*', '-SPEC:Neg', 'COMP:Neg', 'SPEC:C/fin', 'T', 'PHI:NUM:_'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'-COMP:v', 'LF:sell', 'SPEC:P', '-COMP:V', 'ASP:BOUNDED', 'SPEC:ADV', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP', 'PF:myy', '-COMP:N', 'SPEC:TO/inf', '-COMP:P', 'LANG:FI', '-COMP:T/fin', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-VAL', 'PHI:NUM:_', 'CLASS:TR'}
naki            ['LANG:FI']
nakee           ['LANG:FI']
nake-           {'-COMP:v', 'PF:nake', 'SPEC:P', '-COMP:V', 'ASP:BOUNDED', 'LF:see', '-COMP:MA/tta', 'SPEC:ADV', '-COMP:ESSA/inf', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-COMP:P', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-COMP:MA/ssa', 'PHI:NUM:_', 'CLASS:TR'}
nayttaa         ['LANG:FI']
naytta-         {'-COMP:v', 'VAL', 'LF:seem', 'SPEC:P', 'SPEC:ADV', 'PF:naytta', 'V', '-SPEC:T/fin', 'ASP', '-COMP:N', 'SPEC:TO/inf', '!COMP:VA/inf', '!SPEC:D', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', '-ARG', 'SEM:internal', '-COMP:V'}
ndo             {'-COMP:C/fin', 'VAL', '-SPEC:V', '-SPEC:T/fin', 'LANG:EN', '?ARG', 'PRG', '-COMP:FORCE', 'LF:ing', 'COMP:v', '-COMP:T/fin', 'COMP:V', '!COMP:*', 'PF:PRG', 'INF'}
ne              {'PHI:NUM:PL', '-SPEC:P', '-SPEC:INF', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:C', '-SPEC:Neg/fin', 'PF:ne', 'OP', 'adjoinable', '-SPEC:T/fin', 'D', 'COMP:N', '-COMP:P', 'LANG:FI', '!PROBE:N', '-COMP:T/fin', 'LF:those', '!COMP:*', '-COMP:D', 'PHI:PER:3', '-ARG', '-COMP:uR'}
niiden          ['LANG:EN']
nen             {'TAIL:D', 'SPEC:*', 'LF:ing', 'A', 'LANG:FI', '-SPEC:A', 'COMP:0', 'PF:a', '-SPEC:D'}
not             {'POL:NEG', 'ARG', 'SPEC:*', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', '-VAL', 'LANG:EN', '-COMP:D', 'PF:not', '-COMP:FIN', 'Neg', '!COMP:*', 'PHI:NUM:_', 'LF:not', 'PHI:GEN:_', '-COMP:C'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-COMP:v', 'CLASS:INTR', 'LF:sleep', 'SPEC:D', 'SPEC:P', '-COMP:V', '-COMP:Neg/fin', 'SPEC:ADV', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:T', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'LANG:FI', '-COMP:T/fin', '-SPEC:FORCE', 'COMP:P', '-COMP:D', '-COMP:MA/inf', '-VAL', 'PHI:NUM:_', 'PF:nukku'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', 'LF:possessions', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'PF:omaisuuden'}
operatoria      ['LANG:IT']
operatoria-     {'2SPEC', 'PF:operatoria', 'LANG:IT', 'SPEC:D', '0', 'LF:operation'}
ostaa           ['LANG:FI']
osta-           {'-COMP:v', 'SPEC:P', '-COMP:V', 'ASP:BOUNDED', 'LF:buy', 'SPEC:ADV', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PF:osta', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-COMP:P', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-VAL', 'PHI:NUM:_', 'CLASS:TR'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'COMP:T/prt', 'COMP:D/rel', 'SEM:nonreferential', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', 'PF:paiva', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'LF:day', '-COMP:V'}
past            {'-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:V', 'PHI:PER:_', 'LANG:EN', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:iWH', '-SPEC:iR', '-SPEC:ADV', 'adjoinable', '-SPEC:N', 'PHI:GEN:_', 'ARG', '-SPEC:C/fin', '-float', 'P', '-SPEC:T/fin', 'COMP:D', '-SPEC:v', '-COMP:T', '-SPEC:*', '-COMP:N', 'PF:past', 'PHI:DET:_', 'LF:past', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:uWH', '!COMP:*', '-VAL', '-COMP:ADV', 'PHI:NUM:_'}
Pariisia        ['LANG:FI']
Pariisi-        {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'LF:Paris', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'PF:Pariisi'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'COMP:T/prt', 'COMP:D/rel', '-SEM:directional', '-SPEC:uWH', 'COMP:C', 'PF:Pekka', 'LF:Pekka', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', '-COMP:V'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'-COMP:v', 'PF:pelkaa', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP', '-COMP:N', 'LF:fear', 'SPEC:TO/inf', '-COMP:P', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-VAL', 'PHI:NUM:_', 'CLASS:TR'}
persuades       ['LANG:EN']
persuade-       {'PF:persuade', '-COMP:v', 'LANG:EN', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'PHI:GEN:_', 'ARG', 'V', 'PHI:PER:_', 'SEM:external', '-SPEC:T/fin', 'PHI:DET:_', 'LF:persuade', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-SPEC:FORCE', 'COMP:P', 'COMP:TO/inf', '!COMP:*', '-VAL', 'PHI:NUM:_'}
peruuntui       ['LANG:FI']
peruuntu-       {'-COMP:v', 'SPEC:D', 'LF:cancelled', 'SPEC:P', 'PF:peruuntui', 'SPEC:ADV', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', '-COMP:V', 'PHI:NUM:_'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'-COMP:v', 'SPEC:P', '-COMP:V', 'ASP:BOUNDED', 'SPEC:ADV', 'PF:pese_asp', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-COMP:P', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', 'LF:wash', '!COMP:*', '-VAL', 'PHI:NUM:_', 'CLASS:TR'}
pese-           {'-COMP:v', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-COMP:P', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', 'PF:pese', 'LF:wash', '!COMP:*', '-VAL', 'PHI:NUM:_', 'CLASS:TR'}
petardi         {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', 'PF:petardi', '-SPEC:C/fin', 'LF:firecrackers', 'N', '-SPEC:T/fin', '-COMP:N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', '-COMP:V'}
pieni           ['LANG:FI']
pieni-          {'2SPEC', 'LANG:FI', 'PF:pieni-', 'LF:small', 'SPEC:D', '0'}
poikien         ['LANG:FI']
poika-          {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'PF:poika', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'LF:boy', '-COMP:V'}
puhelinta       ['LANG:FI']
puhelin-        {'2SPEC', 'LANG:FI', 'PF:puhelin', 'LF:phone', 'SPEC:D', '0'}
punainen        ['LANG:FI']
puna-           {'2SPEC', 'LANG:FI', 'LF:red', 'PF:puna-', 'SPEC:D', '0'}
presupposto     {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', 'LF:presupposition', '-SPEC:T/fin', 'N', '-COMP:N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'PF:presupposto', '-COMP:V'}
primary         {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', 'PF:primary', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'LF:nurse', '-COMP:V'}
promises        ['LANG:EN']
promise-        {'-COMP:v', 'LANG:EN', 'SPEC:D', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'PHI:GEN:_', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'LF:promise', '-SPEC:FORCE', 'COMP:P', 'SEM:internal', 'PF:promise', '-VAL', 'PHI:NUM:_'}
problem         {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'LANG:EN', 'COMP:uR', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', 'LF:problem', '-COMP:N', 'PF:problem', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', '-COMP:V'}
pyytaa          ['LANG:FI']
pyyta-          {'-COMP:v', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'ARG', 'V', 'COMP:D', 'SEM:external', '-SPEC:T/fin', '-VAL', 'PHI:PER:_', 'ASP', '-COMP:N', 'PHI:DET:_', 'SPEC:TO/inf', '-COMP:P', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', '!COMP:*', 'PHI:NUM:_', 'LF:ask', 'PF:pyyda', 'CLASS:TR'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'-COMP:v', 'CLASS:INTR', 'LANG:EN', 'SPEC:D', 'SPEC:P', '-COMP:V', 'LF:race', 'SPEC:ADV', 'LAMG:EN', 'PHI:GEN:_', 'PF:race', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'COMP:P', '-COMP:T/fin', '-SPEC:FORCE', '-COMP:D', '-COMP:MA/inf', '-VAL', 'PHI:NUM:_'}
raukesi         ['LANG:FI']
raukea-         {'-COMP:v', 'PF:raukea', 'SPEC:P', '-COMP:V', 'LF:terminate', 'SPEC:ADV', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', '-VAL', 'PHI:NUM:_'}
red             ['LANG:EN']
red-            {'2SPEC', 'LF:red', 'LANG:EN', 'PF:red', 'SPEC:D', '0'}
saavuttaa       ['LANG:FI']
saavutta-       {'-COMP:v', '!COMP:D', 'SPEC:P', '-COMP:V', 'ASP:BOUNDED', 'SPEC:ADV', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PF:saavutta-', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-COMP:P', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', 'LF:reach', '!COMP:*', '-VAL', 'PHI:NUM:_', 'CLASS:TR'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'-COMP:v', 'LF:say', 'SPEC:D', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'COMP:FORCE', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-COMP:P', 'LANG:FI', 'PF:sano-', '-SPEC:FORCE', 'COMP:P', '!COMP:*', 'COMP:VA/inf', '-VAL', 'PHI:NUM:_', 'CLASS:TR'}
said            ['LANG:EN']
say'            {'-COMP:v', 'LF:say', 'LANG:EN', 'SPEC:D', 'SPEC:P', 'PF:say', 'SPEC:ADV', 'PHI:GEN:_', '!COMP:FORCE', 'V', 'ARG', '-SPEC:T/fin', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-SPEC:FORCE', 'COMP:P', '-COMP:V', 'PHI:NUM:_'}
say-            {'-COMP:v', 'LF:say', 'LANG:EN', 'SPEC:D', 'SPEC:P', 'PF:say', 'SPEC:ADV', 'PHI:GEN:_', '!COMP:FORCE', 'V', 'ARG', '-SPEC:T/fin', 'PHI:PER:_', '-VAL', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-SPEC:FORCE', 'COMP:P', '-COMP:V', 'PHI:NUM:_'}
sala            ['LANG:IT']
sala-           {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', 'PF:sala', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'COMP:P', 'LF:room', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', '-COMP:V'}
scoppiati       ['LANG:IT']
scoppia-        {'-COMP:v', 'SPEC:P', 'LANG:IT', '-COMP:V', 'PF:scoppia', 'SPEC:ADV', 'PHI:GEN:_', 'LF:explode', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-SPEC:FORCE', 'COMP:P', '-VAL', 'PHI:NUM:_'}
sentenza        {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'LF:sentence', 'LANG:IT', 'COMP:T/prt', 'PF:sentenza', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', '-COMP:V'}
Seine           ['LANG:EN']
Seine-          {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'LANG:EN', 'COMP:uR', 'PF:Seine', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', 'LF:Seine', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', '-COMP:V'}
sembrano        ['LANG:IT']
sembra-         {'-COMP:v', 'LANG:EN', 'SPEC:D', 'LF:seem', 'SPEC:P', '-COMP:V', 'SPEC:ADV', '-ASP', 'PF:sembra', 'V', '-SPEC:T/fin', '-COMP:N', 'SPEC:TO/inf', '-SPEC:FORCE', '!COMP:ARE/inf', 'COMP:P', '-ARG', '-COMP:D', '-VAL'}
sleeps          ['LANG:EN']
sleep           {'-COMP:v', 'CLASS:INTR', 'LANG:EN', 'LF:sleep', 'SPEC:D', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'PHI:GEN:_', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', '-COMP:MA/inf', 'SPEC:TO/inf', '-SPEC:FORCE', 'COMP:P', '-COMP:D', 'PF:sleep', '-VAL', 'PHI:NUM:_'}
sleep-          {'-COMP:v', 'CLASS:INTR', 'LANG:EN', 'LF:sleep', 'SPEC:D', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'PHI:GEN:_', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', '-COMP:MA/inf', 'SPEC:TO/inf', '-SPEC:FORCE', 'COMP:P', '-COMP:D', 'PF:sleep', '-VAL', 'PHI:NUM:_'}
solution        {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', 'PF:solution', 'LANG:EN', '-SPEC:V', 'COMP:uR', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', 'LF:solution', '-SPEC:R', 'COMP:R/D', '-COMP:V'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-COMP:v', '!COMP:A/inf', '-COMP:C/fin', '-SPEC:P', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-COMP:WH', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'LF:agreement', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'LANG:FI', 'COMP:P', 'PF:sopimus', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', '-COMP:V'}
spinge          ['LANG:IT']
spinge-         {'-COMP:v', '!COMP:D', 'LF:push', 'SPEC:P', 'LANG:IT', 'SPEC:ADV', 'PHI:GEN:_', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-COMP:P', '-SPEC:FORCE', 'PF:spinge', '-COMP:V', 'PHI:NUM:_'}
ssa             {'COMP:n/MA', 'SPEC:*', '-SPEC:P', '-COMP:A', '-SPEC:INF', '-SPEC:V', 'LF:in', 'TAIL:V', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:iWH', '-SPEC:iR', '-SPEC:ADV', 'adjoinable', '-SPEC:N', 'PF:ssa', 'ARG', '-SPEC:C/fin', 'COMP:D', 'P', '-SPEC:T/fin', '-SPEC:v', 'PHI:PER:_', '-COMP:T', '-COMP:N', 'PHI:DET:_', 'LANG:FI', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:uWH', '!COMP:*', '-VAL', '-COMP:ADV', 'PHI:NUM:_'}
stanno          ['LANG:IT']
sta-            {'-COMP:v', 'LANG:EN', 'SPEC:D', 'SPEC:P', '-COMP:V', 'LF:stay', 'SPEC:ADV', '-ASP', 'PHI:GEN:_', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:N', 'PF:sta', 'SPEC:TO/inf', '-SPEC:FORCE', 'COMP:P', 'SEM:internal', 'COMP:PRG', '-VAL', 'PHI:NUM:_'}
sti             {'LF:by', 'SPEC:*', '-SPEC:T/fin', 'PF:sti', 'TAIL:T', 'LANG:FI', '-SPEC:FORCE', '-SPEC:Neg/fin', '!COMP:*', '-ARG', 'ADV', 'adjoinable', '-SPEC:N'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'LF:socks', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'LANG:FI', 'COMP:P', 'PF:sukka-', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', '-COMP:V'}
surprised       ['LANG:EN']
surprise-       {'-COMP:v', 'LF:surprise', 'LANG:EN', 'SPEC:P', '-COMP:V', 'PF:surprise', 'SPEC:ADV', 'PHI:GEN:_', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-COMP:P', '-SPEC:FORCE', '-COMP:T/fin', 'COMP:P', '!COMP:*', '-VAL', 'PHI:NUM:_', 'CLASS:TR'}
talo            {'PF:talo', '-COMP:v', '-COMP:C/fin', '-SPEC:P', '-COMP:A', '-SPEC:INF', 'SPEC:A', '-COMP:WH', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'LF:house', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', '-COMP:V'}
tama            ['LANG:EN']
tama-           {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'PHI', 'N', 'PF:tama', '-COMP:N', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'LF:this', '-COMP:V'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'-COMP:v', 'FIN', 'SPEC:*', '!COMP:A/inf', 'SPEC:P', '-COMP:V', 'LF:must', 'PF:taytyy', 'SPEC:ADV', '-ASP', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'MODAL', '-COMP:N', 'SPEC:TO/inf', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', '-VAL', 'PHI:NUM:_'}
teki            ['LANG:FI']
teke-           {'-COMP:v', '!COMP:D', 'LF:make', 'SPEC:P', '-COMP:V', 'ASP:BOUNDED', 'SPEC:ADV', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-COMP:P', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', '!COMP:*', 'PF:teke', '-VAL', '-COMP:A/inf', 'PHI:NUM:_', 'CLASS:TR'}
that            {'FIN', '!PROBE:FIN', 'LANG:EN', '-SPEC:*', 'COMP:T/fin', 'COMP:C/fin', 'LF:that', '!COMP:*', 'FORCE', '-ARG', 'PF:that', '-VAL'}
the             {'-SPEC:P', '-SPEC:INF', '-SPEC:V', '-SPEC:MA/lla', 'PF:the', 'LANG:EN', '-SPEC:C', '-SPEC:Neg/fin', 'OP', 'adjoinable', 'LF:the', '-SPEC:T/fin', 'D', 'COMP:N', '-COMP:P', '!PROBE:N', '-COMP:T/fin', '!COMP:*', '-COMP:D', '-ARG', '-COMP:uR', 'PHI:DEF:DEF'}
to              {'-SPEC:P', '-SPEC:INF', 'LANG:EN', 'TAIL:V', '-SPEC:Neg/fin', '-SPEC:iR', '+SEM:directional', 'ARG', '-float', 'P', '-SPEC:T/fin', 'PHI:DET:_', '-SPEC:*', '-COMP:T', 'LF:to', '-SPEC:FORCE', '-COMP:uWH', '!COMP:*', '-COMP:ADV', '-COMP:A', '-SPEC:V', '-SPEC:C', 'PF:to', '-SPEC:iWH', '-SPEC:ADV', 'adjoinable', 'PHI:GEN:_', '-SPEC:N', '-SPEC:C/fin', 'COMP:D', '-SPEC:v', 'PHI:PER:_', '-COMP:N', '-COMP:T/fin', '-VAL', 'PHI:NUM:_'}
to_inf          {'-COMP:C/fin', '-SPEC:V', 'LANG:EN', 'adjoinable', '-SPEC:v', 'LF:TO/inf', '-SPEC:T/fin', '?ARG', '-COMP:FORCE', 'PF:TO/inf', 'COMP:v', '-COMP:T/fin', 'COMP:V', '!COMP:*', 'TO/inf', '-VAL', 'INF'}
towards         {'-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:V', 'PHI:PER:_', 'LANG:EN', 'TAIL:V', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:iWH', '-SPEC:iR', '-SPEC:ADV', 'adjoinable', '-SPEC:N', 'PHI:GEN:_', 'ARG', '-SPEC:C/fin', '-float', 'P', '-SPEC:T/fin', 'COMP:D', '-SPEC:v', '-COMP:T', '-SPEC:*', '-COMP:N', '-VAL', 'PHI:DET:_', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:uWH', '!COMP:*', 'PHI:NUM:_', 'PF:towards', '-COMP:ADV', 'LF:towards'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'-COMP:v', 'PF:tonaise', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'LF:nudge', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-COMP:P', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-VAL', 'PHI:NUM:_', 'CLASS:TR'}
tta             {'COMP:n/MA', 'SPEC:*', '-SPEC:P', '-COMP:A', '-SPEC:INF', '-SPEC:V', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:iWH', 'ADV', '-SPEC:iR', '-SPEC:ADV', 'adjoinable', '-SPEC:N', 'ARG', '-SPEC:C/fin', 'COMP:D', 'P', '-SPEC:T/fin', '-SPEC:v', 'PHI:PER:_', '-COMP:T', '-COMP:N', 'PHI:DET:_', 'LF:without', 'LANG:FI', '-SPEC:FORCE', 'PF:tta', '-COMP:T/fin', '-COMP:uWH', '!COMP:*', '-VAL', '-COMP:ADV', 'PHI:NUM:_'}
tries           ['LANG:EN']
try-            {'-COMP:v', 'PF:try', 'LANG:EN', 'SPEC:D', '!COMP:TO/inf', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'PHI:GEN:_', '!COMP:-ARG', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-SPEC:FORCE', 'COMP:P', 'SEM:internal', '-VAL', 'LF:try', 'PHI:NUM:_'}
verifiche       {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'LANG:IT', 'COMP:T/prt', 'COMP:D/rel', 'PF:verifiche', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'N', '-COMP:N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'LF:verification', 'COMP:R/D', '-COMP:V'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'-COMP:v', 'CLASS:INTR', 'SPEC:D', 'SPEC:P', '-COMP:V', '!COMP:P', 'SPEC:ADV', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'PF:virtaa', 'ASP', '-COMP:N', 'SPEC:TO/inf', 'LANG:FI', '-SPEC:FORCE', 'COMP:P', '-COMP:D', 'LF:flow', '-COMP:MA/inf', '-VAL', 'PHI:NUM:_'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'-COMP:v', 'LANG:EN', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'PHI:GEN:_', 'LF:want', 'V', 'ARG', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', '-SPEC:*', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-SPEC:FORCE', 'COMP:P', '!COMP:*', 'SEM:internal', 'PF:volu', '-VAL', 'PHI:NUM:_'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'-COMP:v', 'LF:win', 'LANG:EN', 'SPEC:P', '-COMP:V', 'ASP:BOUNDED', 'SPEC:ADV', 'PF:voitta', 'PHI:GEN:_', 'SEM:achievement', 'ARG', 'V', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-COMP:P', '-SPEC:FORCE', 'COMP:P', '!COMP:*', '-VAL', 'PHI:NUM:_', 'CLASS:TR'}
wants           ['LANG:EN']
want-           {'-COMP:v', '-SPEC:TO/inf', 'LANG:EN', 'SPEC:P', 'PF:want', 'SPEC:ADV', 'PHI:GEN:_', 'LF:want', 'V', 'ARG', 'COMP:D', '-SPEC:T/fin', '-VAL', 'PHI:PER:_', 'ASP', '-COMP:N', 'PHI:DET:_', '-COMP:P', '-SPEC:FORCE', 'COMP:P', 'COMP:TO/inf', '!COMP:*', '-COMP:V', 'PHI:NUM:_', 'CLASS:TR'}
what            ['LANG:EN']
what-           {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'LANG:EN', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:R', 'PF:what', '-SPEC:T/fin', 'N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'COMP:uR', '-COMP:*', 'COMP:C', 'LF:what', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'COMP:R/D', '-COMP:V'}
which           {'-SPEC:P', '-SPEC:INF', '-SPEC:V', '-SPEC:MA/lla', 'LANG:EN', '-SPEC:C', '-SPEC:Neg/fin', 'OP:WH', 'OP', 'adjoinable', 'LF:which', '-SPEC:T/fin', 'D', 'COMP:N', '-COMP:P', '!PROBE:N', '-COMP:T/fin', '!COMP:*', '-COMP:D', '-ARG', 'PF:which', '-COMP:uR'}
who             ['LANG:EN']
who-            {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'LANG:EN', 'PF:who', 'COMP:T/prt', 'COMP:D/rel', 'LF:who', '-SPEC:uWH', 'COMP:R', '-SPEC:T/fin', 'N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'COMP:uR', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'COMP:R/D', '-COMP:V'}
whether         {'FIN', 'LANG:EN', 'COMP:T/fin', 'OP:WH', 'OP', 'FORCE', 'Q', '!PROBE:FIN', 'PF:whether', '-SPEC:*', 'OP:Q', 'COMP:C/fin', '!COMP:*', '-ARG', 'LF:whether', '-VAL'}
yrittaa         ['LANG:FI']
yritta-         {'-COMP:v', '!COMP:A/inf', 'LANG:EN', 'SPEC:D', 'SPEC:P', '-COMP:V', 'SPEC:ADV', 'PHI:GEN:_', '!COMP:-ARG', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-SPEC:FORCE', 'COMP:P', 'PF:yritta', 'SEM:internal', '-VAL', 'LF:try', 'PHI:NUM:_'}
mina            ['LANG:EN']
mina-           {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:R', '-SPEC:T/fin', 'N', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'LF:I', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'COMP:uR', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', 'PF:mina', '-COMP:N', 'COMP:R/D', '-COMP:V'}
sina            ['LANG:EN']
sina-           {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:R', '-SPEC:T/fin', 'N', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'COMP:uR', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'PF:sina', 'COMP:R/D', 'LF:you', '-COMP:V'}
han             ['LANG:EN']
han-            {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:R', '-SPEC:T/fin', 'N', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'COMP:uR', '-COMP:*', 'COMP:C', 'PF:han', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'COMP:R/D', '-COMP:V', 'LF:s/he'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'PF:me', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:R', '-SPEC:T/fin', 'N', 'LF:we', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'COMP:uR', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'COMP:R/D', '-COMP:V'}
te              ['LANG:EN']
te-             {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:R', '-SPEC:T/fin', 'N', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'PF:te', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'COMP:uR', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'COMP:R/D', 'LF:you', '-COMP:V'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:R', 'PF:he', '-SPEC:T/fin', 'N', 'LANG:FI', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'COMP:uR', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'LF:they', 'COMP:R/D', '-COMP:V'}
se              {'-SPEC:P', '-SPEC:INF', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:C', '-SPEC:Neg/fin', 'OP', 'adjoinable', 'LF:the/that', '-SPEC:T/fin', 'D', 'COMP:N', '-COMP:P', 'LANG:FI', 'PF:se', '!PROBE:N', '-COMP:T/fin', '!COMP:*', '-COMP:D', '-ARG', '-COMP:uR'}
sen             {'-SPEC:P', '-SPEC:INF', '-SPEC:V', '-SPEC:MA/lla', '-SPEC:C', 'TAIL:PHI', '-SPEC:Neg/fin', 'TAIL:*POL:NEG', 'OP', 'adjoinable', 'LF:the/that', '-SPEC:T/fin', '-COMP:uR', 'D', 'COMP:N', '-COMP:P', 'LANG:FI', '!PROBE:N', '-COMP:T/fin', '!COMP:*', '-COMP:D', '-ARG', 'PF:sen', 'TAIL:ASP'}
I               ['LANG:EN']
I-              {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'LANG:EN', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:R', '-SPEC:T/fin', 'N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'LF:I', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'COMP:uR', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'PF:I', 'COMP:R/D', '-COMP:V'}
you             ['LANG:EN']
you-            {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'LANG:EN', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:R', '-SPEC:T/fin', 'N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'COMP:uR', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'PF:you', 'COMP:R/D', 'LF:you', '-COMP:V'}
he              ['LANG:EN']
he-             {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'LANG:EN', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:R', 'PF:he', '-SPEC:T/fin', 'N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', 'LF:he', '-COMP:A', 'PHI_N', '-COMP:WH', '-COMP:AUX', '-SPEC:V', 'COMP:uR', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'COMP:R/D', '-COMP:V'}
she             ['LANG:EN']
she-            {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'LANG:EN', 'COMP:T/prt', 'COMP:D/rel', 'LF:she', '-SPEC:uWH', 'COMP:R', '-SPEC:T/fin', 'N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'PF:she', 'COMP:uR', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'COMP:R/D', '-COMP:V'}
we              ['LANG:EN']
we-             {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'LANG:EN', 'PF:we', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:R', '-SPEC:T/fin', 'N', 'LF:we', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'COMP:uR', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'COMP:R/D', '-COMP:V'}
you_pl          ['LANG:EN']
you_pl-         {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'LANG:EN', 'COMP:uR', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'PHI', 'N', 'LF:you_pl', '-COMP:N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', 'PF:you_pl', '-COMP:V'}
they            ['LANG:EN']
they-           {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'LANG:EN', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:R', '-SPEC:T/fin', 'N', 'PF:they', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'COMP:uR', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'LF:they', 'COMP:R/D', '-COMP:V'}
it              ['LANG:EN']
it-             {'-SPEC:P', '-SPEC:INF', '-SPEC:V', '-SPEC:MA/lla', 'LANG:EN', '-SPEC:C', '-SPEC:Neg/fin', 'OP', 'PF:it', 'adjoinable', '-SPEC:T/fin', 'D', 'COMP:N', '-COMP:P', '!PROBE:N', '-COMP:T/fin', 'LF:it/that', '!COMP:*', '-COMP:D', '-ARG', '-COMP:uR'}
io              ['LANG:EN']
io-             {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'PF:io', 'COMP:R', '-SPEC:T/fin', 'N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'LF:I', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'LANG:IT', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'COMP:R/D', '-COMP:V'}
tu              ['LANG:EN']
tu-             {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'COMP:T/prt', 'PF:tu', 'COMP:D/rel', '-SPEC:uWH', 'COMP:R', '-SPEC:T/fin', 'N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'LANG:IT', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'COMP:R/D', 'LF:you', '-COMP:V'}
lui             ['LANG:EN']
lui-            {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'PF:lui', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:R', '-SPEC:T/fin', 'N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', 'LF:he', '-COMP:A', 'PHI_N', '-COMP:WH', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'LANG:IT', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'COMP:R/D', '-COMP:V'}
lei             ['LANG:EN']
lei-            {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'COMP:T/prt', 'COMP:D/rel', 'LF:she', '-SPEC:uWH', 'COMP:R', 'PF:lei', '-SPEC:T/fin', 'N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'LANG:IT', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'COMP:R/D', '-COMP:V'}
noi             ['LANG:EN']
noi-            {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:R', '-SPEC:T/fin', 'N', 'LF:we', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'LANG:IT', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', 'PF:noi', '-COMP:N', 'COMP:R/D', '-COMP:V'}
voi             ['LANG:EN']
voi-            {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'PF:voi', 'COMP:R', '-SPEC:T/fin', 'N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'LF:you_pl', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'LANG:IT', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'COMP:R/D', '-COMP:V'}
loro            ['LANG:EN']
loro-           {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:R', '-SPEC:T/fin', 'N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'LANG:IT', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', 'PF:loro', '-SPEC:C/fin', '-COMP:N', 'LF:they', 'COMP:R/D', '-COMP:V'}
mi              ['LANG:EN']
mi-             {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:R', 'CL', '-SPEC:T/fin', 'N', 'PF:mi(cl)', 'LF:me', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'LANG:IT', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'COMP:R/D', '-COMP:V'}
la              ['LANG:EN']
la-             {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:R', 'CL', 'LF:her', '-SPEC:T/fin', 'N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'LANG:IT', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'COMP:R/D', 'PF:la(cl)', '-COMP:V'}
lo              ['LANG:EN']
lo-             {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', '-COMP:V', 'COMP:T/prt', 'PF:lo(cl)', 'COMP:D/rel', '-SPEC:uWH', 'COMP:R', 'CL', '-SPEC:T/fin', 'N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'LANG:IT', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'COMP:R/D', 'LF:him'}
si              ['LANG:EN']
si-             {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'PF:si(cl)', 'CAL:CL', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:R', '-SPEC:T/fin', 'N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '-COMP:C/fin', '-COMP:A', '-COMP:WH', 'PHI_N', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'LANG:IT', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'COMP:R/D', 'LF:3sg', '-COMP:V'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-COMP:v', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:R', '-SPEC:T/fin', 'N', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'LF:there', '-COMP:C/fin', 'PF:ci', '-COMP:A', 'PHI_N', '-COMP:WH', '-COMP:AUX', '-SPEC:V', 'COMP:uR', 'LANG:IT', '-COMP:*', 'COMP:C', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-COMP:N', 'COMP:R/D', '-COMP:V'}
[-n]            {'PHI:PER:1', 'LANG:FI', 'PHI:DET:DEF', 'PHI', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG'}
[-t]            {'LANG:FI', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG'}
[-V]            {'LANG:FI', 'PHI', 'PHI:PER:3', 'inflectional', 'PHI:NUM:SG'}
[-mme]          {'PHI:PER:1', 'PHI:NUM:PL', 'LANG:FI', 'PHI:DET:DEF', 'PHI', 'inflectional', 'PHI:HUM:HUM'}
[-mme]          {'PHI:PER:1', 'PHI:NUM:PL', 'LANG:FI', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM'}
[-tte]          {'LANG:FI', 'PHI:PER:2', 'PHI:NUM:PL', 'PHI:DET:DEF', 'PHI', 'inflectional', 'PHI:HUM:HUM'}
[-vat]          {'LANG:FI', 'PHI:NUM:PL', 'PHI', 'PHI:PER:3', 'inflectional'}
[-ni]           {'PHI:PER:1', 'LANG:FI', 'PHI:DET:DEF', 'PHI', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG'}
[-si]           {'LANG:FI', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG'}
[-nsa]          {'LANG:FI', 'PHI', 'PHI:PER:3', 'inflectional', 'PHI:NUM:SG'}
[-an]           {'LANG:FI', 'PHI:DET:DET', 'PHI', 'PHI:PER:3', 'inflectional', 'PHI:NUM:SG'}
[-nne]          {'LANG:FI', 'PHI:NUM:PL', 'PHI:PER:2', 'PHI:DET:DEF', 'inflectional', 'PHI:HUM:HUM'}
[-s]            {'PHI:GEN:F', 'PHI', 'PHI:PER:3', 'LANG:EN', 'inflectional', 'PHI:GEN:M', 'PHI:NUM:SG'}
[-0]            {'PHI:NUM:PL', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI', 'LANG:EN', 'inflectional', 'PHI:NUM:SG', 'PHI:GEN:N', 'PHI:PER:1', 'PHI:PER:3'}
[-o]            {'PHI:PER:1', 'LANG:IT', 'PHI:DET:DEF', 'PHI', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG'}
[-i]            {'LANG:IT', 'PHI:PER:2', 'PHI:DET:DEF', 'PHI', 'inflectional', 'PHI:HUM:HUM', 'PHI:NUM:SG'}
[-a]            {'LANG:IT', 'PHI:DET:DEF', 'PHI', 'PHI:PER:3', 'inflectional', 'PHI:NUM:SG'}
[-e]            {'LANG:IT', 'PHI:DET:DEF', 'PHI', 'PHI:PER:3', 'inflectional', 'PHI:NUM:SG'}
[-iamo]         {'PHI:PER:1', 'PHI:NUM:PL', 'LANG:IT', 'PHI:DET:DEF', 'PHI', 'inflectional', 'PHI:HUM:HUM'}
[-te]           {'LANG:IT', 'PHI:PER:2', 'PHI:NUM:PL', 'PHI:DET:DEF', 'PHI', 'inflectional', 'PHI:HUM:HUM'}
[-no]           {'LANG:IT', 'PHI:NUM:PL', 'PHI:DET:DEF', 'PHI', 'PHI:PER:3', 'inflectional'}
[-nom]          {'TAIL:FIN,ARG,VAL', 'LANG:EN', 'inflectional', 'adjoinable', 'NOM'}
[-par]          {'LANG:FI', 'TAIL:ARG,-VAL', 'inflectional', 'adjoinable', 'PAR'}
[-gen]          {'-float', 'GEN', 'LANG:EN', 'inflectional', 'TAIL:INF,ARG'}
gen             {'-float', 'GEN', 'LANG:EN', 'inflectional', 'TAIL:INF,ARG'}
[-n_acc]        {'TAIL:PHI', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', 'TAIL:*POL:NEG', 'inflectional', 'adjoinable', 'n-ACC'}
[-t_acc]        {'TAIL:ARG,ASP:BOUNDED', 't-ACC', 'LANG:FI', 'TAIL:*POL:NEG', 'inflectional', 'adjoinable'}
[-0_acc]        {'TAIL:ARG,ASP:BOUNDED', 'LANG:FI', '0_ACC', 'TAIL:*POL:NEG', 'TAIL:*PHI', 'inflectional', 'adjoinable'}
asp             {'ASP:BOUNDED', 'LANG:EN', 'inflectional'}
a'              {'a', 'LF:A', 'PF:a', 'LANG:X'}
b'              {'LF:B', 'LANG:X', 'b', 'PF:b'}
b''             {'b', 'PF:b', 'LANG:EN', '-COMP:c', 'LF:B'}
c''             {'c', 'SPEC:a', 'LF:C', 'LANG:EN', 'PF:c'}
c'              {'LF:C', 'PF:c', 'c', 'LANG:X'}
d'              {'PF:d', 'd', 'LANG:', 'LF:D'}
a''             ['LANG:EN']
x'              {'LANG:X', 'PF:x', 'LF:X', 'x'}
y'              {'y', 'LF:Y', 'LANG:X', 'PF:y'}
z'              {'z', 'PF:x', 'LANG:X', 'LF:Z'}
John'           {'LF:John', 'PF:John', 'LANG:X', "N'"}
admires'        {'PF:admires', 'LF:admires', 'LANG:X', "V'"}
admires''       {'-COMP:v', 'PF:admires', 'LANG:EN', 'SPEC:D', 'SPEC:P', 'LF:admires', 'SPEC:ADV', 'PHI:GEN:_', 'ARG', 'V', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', '-VAL', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-SPEC:FORCE', 'COMP:P', '-COMP:V', 'PHI:NUM:_'}
Mary'           {'PF:Mary', 'LF:mary', 'LANG:X', "N'"}
T/fin           {'T/fin', 'FIN', 'SPEC:*', '-SPEC:V', 'VAL', '-SPEC:TO/inf', 'LANG:EN', '!PROBE:V', 'SPEC:FORCE', 'SPEC:D', '-SPEC:C', 'COMP:T/prt', '!SPEC:*', 'PHI:GEN:_', '-SPEC:N', 'ARG', 'PF:T', '-SPEC:v', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'LF:T', '-COMP:INF', 'SPEC:TO/inf', 'COMP:v', '-COMP:T/fin', 'COMP:V', '!COMP:*', '-SPEC:Neg', 'SPEC:C/fin', 'T', 'PHI:NUM:_'}
v               {'ARG', 'PHI:PER:_', 'PHI:DET:_', 'LANG:EN', 'ASP', '!PROBE:V', 'SPEC:D', 'v', 'LF:v', 'COMP:V', '!COMP:*', 'PF:v', '-VAL', 'PHI:GEN:_', 'PHI:NUM:_', '-SPEC:N'}
C/fin           {'-COMP:C/fin', 'FIN', 'SPEC:*', 'VAL', 'LANG:EN', 'COMP:T/fin', 'PF:C', 'C', '-SPEC:N', 'LF:C/fin', '-SPEC:C/fin', 'COMP:Neg/fin', '!PROBE:FIN', '-SPEC:T/fin', 'C/fin', '-COMP:T/prt', '-ARG', '!COMP:*'}
T               {'FIN', 'SPEC:*', 'VAL', '-SPEC:V', 'LANG:EN', '!PROBE:V', 'SPEC:D', 'COMP:T/prt', 'PHI:GEN:_', '-SPEC:N', '-COMP:NEG', 'ARG', 'PF:T', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', 'LF:T', 'COMP:v', '-SPEC:FORCE', 'COMP:V', '!COMP:*', 'T', 'PHI:NUM:_'}
T/prt           {'FIN', 'SPEC:*', '-SPEC:V', 'VAL', 'LF:T/prt', 'LANG:EN', '!PROBE:V', 'SPEC:D', 'COMP:T/prt', 'PHI:GEN:_', '-SPEC:N', '-COMP:NEG', 'ARG', '-SPEC:C/fin', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PF:T/prt', 'T/prt', 'COMP:v', '-SPEC:FORCE', 'COMP:V', '!COMP:*', 'T', 'PHI:NUM:_'}
a0              {'TAIL:D', '-adjoinable', 'LANG:EN', 'A', '-SPEC:A', 'LF:A', 'PF:A', 'COMP:0', '-SPEC:D'}
n               {'-COMP:v', 'SPEC:*', '-SPEC:P', '-SPEC:INF', 'SPEC:A', 'LANG:EN', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:R', 'ARG', '-SPEC:T/fin', 'N', 'PHI:DET:_', 'COMP:P', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', '!SPEC:D', 'COMP:V', '!COMP:*', 'INF', '-COMP:C/fin', '-COMP:A', '-COMP:WH', '-COMP:AUX', '-SPEC:V', 'VAL', 'COMP:uR', 'n', '!SPEC:*', 'COMP:0', 'COMP:C', '-SPEC:ADV', 'PHI:GEN:_', '-SPEC:N', 'LF:n', '-SPEC:C/fin', 'PHI:PER:_', '-COMP:N', 'PF:n', 'COMP:v', 'COMP:R/D', '-COMP:V', 'PHI:NUM:_'}
impass          {'ARG', 'LF:impass', 'PHI:PER:_', 'PHI:DET:_', 'LANG:EN', 'ASP', '!PROBE:V', 'SPEC:D', 'v', 'PF:impass', 'COMP:V', '!COMP:*', '-VAL', 'PHI:GEN:_', 'PHI:NUM:_', '-SPEC:N'}
cau             {'ARG', 'PHI:PER:_', 'PF:Cau', 'PHI:DET:_', 'LANG:EN', 'ASP', '!PROBE:V', 'SPEC:D', 'v', 'LF:v/Cause', 'COMP:V', '!COMP:*', '-VAL', 'PHI:GEN:_', 'PHI:NUM:_', '-SPEC:N'}
INF             {'-COMP:C/fin', '-SPEC:V', '-SPEC:T/fin', 'LANG:EN', '-COMP:FORCE', 'COMP:v', '-COMP:T/fin', 'PF:INF', 'COMP:V', '!COMP:*', 'INF', 'LF:INF'}
prtcpl          {'-COMP:C/fin', 'SPEC:*', 'FIN', '-SPEC:V', 'VAL', 'LF:T/prt', 'LANG:EN', '!PROBE:V', 'SPEC:D', 'COMP:T/prt', 'PHI:GEN:_', '-SPEC:N', '-COMP:NEG', 'ARG', '-SPEC:C/fin', 'COMP:D', '-SPEC:T/fin', 'PHI:PER:_', 'PHI:DET:_', 'PF:T/prt', 'T/prt', '-COMP:FORCE', 'COMP:v', 'T', '-SPEC:FORCE', '-COMP:T/fin', 'COMP:V', '!COMP:*', 'INF', 'PHI:NUM:_'}
TO/inf          {'-COMP:C/fin', '-SPEC:V', 'LANG:EN', 'adjoinable', '!COMP:V', 'LF:TO/inf', '-SPEC:v', '-SPEC:T/fin', '?ARG', '-COMP:FORCE', 'PF:TO/inf', 'COMP:v', '-COMP:T/fin', 'COMP:V', '!COMP:*', 'TO/inf', '-VAL', 'INF'}
A/inf           {'-COMP:C/fin', 'SPEC:*', '-SPEC:V', 'LANG:EN', '-SPEC:Neg/fin', '-SPEC:T/fin', 'LF:A/inf', 'PF:A/inf', '?ARG', '-COMP:FORCE', '?VAL', 'COMP:v', '-COMP:T/fin', 'COMP:V', '!COMP:*', 'INF', 'A/inf'}
ARE/inf         {'-adjoinable', 'SPEC:*', '-COMP:C/fin', 'VAL', '-SPEC:V', 'LANG:EN', 'ARE/inf', '-SPEC:T/fin', '?ARG', '-COMP:FORCE', 'COMP:v', '-COMP:T/fin', 'COMP:V', '!COMP:*', 'PF:are', 'INF', 'LF:ARE/inf'}
ESSA/inf        {'-COMP:C/fin', 'SPEC:*', '-SPEC:V', 'LANG:EN', 'ESSA/inf', 'TAIL:T', '-SPEC:Neg/fin', 'ADV', 'PF:essa', 'adjoinable', '-SPEC:N', '-SPEC:T/fin', '?ARG', '-COMP:FORCE', '?VAL', 'COMP:v', '-SPEC:FORCE', '-COMP:T/fin', 'COMP:V', '!COMP:*', 'LF:while', 'INF'}
TUA/inf         {'-COMP:C/fin', 'PF:tua', 'SPEC:*', 'VAL', '-SPEC:V', 'LANG:EN', 'TAIL:T', 'TUA/inf', '-SPEC:Neg/fin', '!SPEC:*', 'ADV', 'adjoinable', 'PHI:GEN:_', '-SPEC:N', 'ARG', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:FORCE', 'COMP:v', '-SPEC:FORCE', '-COMP:T/fin', 'LF:after', 'COMP:V', '!COMP:*', 'INF', 'PHI:NUM:_'}
VA/inf          {'-COMP:C/fin', 'SPEC:*', 'VAL', '-SPEC:V', 'LANG:EN', 'PF:vAn', '!SPEC:*', 'VA/inf', 'PHI:GEN:_', '-SPEC:N', 'ARG', 'PHI:PER:_', 'LF:VA', '-SPEC:T/fin', 'PHI:DET:_', '-COMP:FORCE', 'COMP:v', '-COMP:T/fin', 'COMP:V', '!COMP:*', 'INF', 'PHI:NUM:_'}
MA/ssa          {'LANG:EN', 'TAIL:V', 'PF:massa', 'LF:in_doing', '-SPEC:Neg/fin', 'MA/ssa', 'ADV', 'adjoinable', 'PHI:GEN:_', '-SPEC:N', 'ARG', 'PHI:PER:_', '-SPEC:T/fin', 'PHI:DET:_', '-SPEC:*', 'MA/inf', 'COMP:v', '-SPEC:FORCE', 'COMP:V', '-VAL', 'PHI:NUM:_'}
MA/tta          {'PF:matta', 'ARG', 'PHI:PER:_', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:DET:_', 'LANG:EN', 'MA/inf', 'TAIL:T', '-SPEC:FORCE', 'LF:without_doing', '-SPEC:Neg/fin', 'ADV', '-VAL', 'adjoinable', 'PHI:NUM:_', '-SPEC:N'}
MA/lla          {'LANG:EN', 'TAIL:T', '-SPEC:Neg/fin', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', 'PF:malla', '-SPEC:FORCE', 'COMP:V', 'ADV', 'PHI:GEN:_', 'adjoinable', '-SPEC:N', 'PHI:PER:_', 'MA/inf', 'COMP:v', 'LF:by_doing', '-VAL', 'PHI:NUM:_'}
MA/inf          {'LANG:EN', 'TAIL:V', '-SPEC:Neg/fin', 'ARG', '-SPEC:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'COMP:V', 'PF:maan', 'ADV', 'PHI:GEN:_', 'adjoinable', '-SPEC:N', 'PHI:PER:_', 'MA/inf', 'COMP:v', 'LF:to_do', '-VAL', 'PHI:NUM:_'}
E/inf           {'LF:by', 'SPEC:*', '-SPEC:T/fin', 'TAIL:T', 'LANG:FI', '-SPEC:FORCE', '-SPEC:Neg/fin', '-ARG', 'PF:en', 'ADV', '-VAL', 'adjoinable', '-SPEC:N'}
BE-             {'-COMP:v', 'LANG:EN', 'SPEC:D', 'SPEC:P', '-COMP:V', 'COMP:T/prt', 'SPEC:ADV', 'V', '-SPEC:T/fin', 'ASP', '-COMP:N', 'SPEC:TO/inf', '-SPEC:FORCE', '-COMP:T/fin', 'PF:BE', 'COMP:P', '-ARG', '!COMP:*', 'LF:BE', '-VAL', 'COPULA'}
D               {'-SPEC:P', '-SPEC:INF', '-SPEC:V', '-SPEC:MA/lla', 'LANG:EN', '-SPEC:C', '-COMP:D', '-SPEC:Neg/fin', 'OP', 'adjoinable', '-SPEC:T/fin', 'D', 'COMP:N', '-COMP:P', '!PROBE:N', '-COMP:T/fin', 'PF:D', '!COMP:*', 'LF:D', '-ARG', '-COMP:uR'}
D/rel           {'-COMP:C/fin', '-SPEC:P', 'OP:_', '-SPEC:INF', '-SPEC:V', '-SPEC:MA/lla', 'LANG:EN', 'inflectional', '-SPEC:C', 'OP:REL', '-SPEC:Neg/fin', '-COMP:D', 'OP', 'adjoinable', 'LF:D/rel', 'D/rel', '-SPEC:T/fin', 'PF:D/rel', 'D', 'COMP:N', '!PROBE:N', '-COMP:T/fin', '-ARG', '!COMP:*', '-COMP:uR'}
P               {'-COMP:A', '-SPEC:P', '-SPEC:INF', '-SPEC:V', 'PHI:PER:_', 'LANG:EN', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:iWH', 'LF:P', '-SPEC:iR', '-SPEC:ADV', 'adjoinable', '-SPEC:N', 'PHI:GEN:_', 'ARG', '-SPEC:C/fin', '-float', 'P', '-SPEC:T/fin', 'PF:P', 'COMP:D', '-COMP:T', '-SPEC:*', '-SPEC:v', '-COMP:N', 'PHI:DET:_', '-SPEC:FORCE', '-COMP:T/fin', '-COMP:uWH', '!COMP:*', '-VAL', '-COMP:ADV', 'PHI:NUM:_'}
pro             ['LANG:EN']
pro-            {'-COMP:v', '-COMP:C/fin', '-COMP:A', '-SPEC:P', '-COMP:WH', '-SPEC:INF', 'SPEC:A', '-COMP:AUX', '-SPEC:V', 'LANG:EN', 'COMP:uR', 'COMP:T/prt', 'COMP:D/rel', '-SPEC:uWH', 'COMP:C', 'COMP:R', '-SPEC:ADV', '-SPEC:N', '-SPEC:C/fin', '-SPEC:T/fin', 'PHI', 'N', '-COMP:N', 'COMP:P', 'PF:(pro)', '-SPEC:FORCE', '-COMP:VA/inf', '-SPEC:R', 'COMP:R/D', '-COMP:V', 'LF:pro'}
cl              {'LEFT:D,CL', 'RIGHT:PRG', 'LANG:EN', 'inflectional', 'RIGHT:ARE/inf', 'CL', 'LEFT:T/fin'}
inc             {'LANG:EN', 'inflectional', 'INCORPORATED'}
sg              {'LANG:EN', 'inflectional', 'PHI:NUM:SG'}
pl              {'LANG:EN', 'inflectional', 'PHI:NUM:PL'}
1p              {'PHI:PER:1', 'inflectional', 'LANG:EN'}
2p              {'LANG:EN', 'inflectional', 'PHI:PER:2'}
3p              {'PHI:PER:3', 'LANG:EN', 'inflectional'}
def             {'LANG:EN', 'inflectional', 'PHI:DET:DEF'}
indef           {'LANG:EN', 'inflectional', 'PHI:DET:INDEF'}
hum             {'LANG:EN', 'inflectional', 'PHI:HUM:HUM'}
nonhum          {'LANG:EN', 'inflectional', 'PHI:HUM:NONHUM'}
m               {'LANG:EN', 'inflectional', 'PHI:GEN:M'}
f               {'PHI:GEN:F', 'LANG:EN', 'inflectional'}
nom             {'TAIL:FIN,!COMP:*,VAL', 'LANG:EN', 'inflectional', 'NOM'}
acc             {'TAIL:v', 'LANG:EN', 'inflectional', 'ACC'}
dat             {'TAIL:v', 'DAT', 'inflectional', 'LANG:EN'}
uC/op           {'LANG:EN', 'inflectional', 'uC/op'}
wh              {'LANG:EN', 'inflectional', 'OP:_', 'OP:WH'}
wh_             {'FORCE:OP:WH', 'OP:_', 'OP', 'LANG:EN', 'inflectional'}
top             {'OP:TOP', 'LANG:EN', 'inflectional'}
foc             {'LANG:EN', 'inflectional', 'OP:FOC'}
C/op            {'LANG:EN', 'inflectional', 'OP:C/OP'}
Q               {'OP:WH', 'OP', 'LANG:EN', 'inflectional', 'OP:Q'}
