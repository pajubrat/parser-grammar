ï»¿dummy        {'dummy', 'LANG:EN'}
a               {'-SPEC:ADV', 'LANG:IT', 'P', '-SPEC:C/fin', 'COMP:ARE/inf', '-SPEC:iWH', '-ARG', 'COMP:D', '-COMP:T', '-SPEC:INF', '-SPEC:C', '-COMP:N', '-SPEC:iR', 'adjoinable', '-SPEC:Neg/fin', '-VAL', '-SPEC:V', '-SPEC:v', 'PF:a', '!COMP:*', '-COMP:uWH', '-COMP:T/fin', '-COMP:A', '-SPEC:*', '-COMP:ADV', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', 'TAIL:V', '-SPEC:P', 'LF:to'}
a_D             {'OP', '-ARG', '-COMP:P', '-SPEC:INF', '-SPEC:C', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', 'LANG:EN', '!PROBE:N', 'D', '!COMP:*', '-COMP:uR', '-COMP:T/fin', 'LF:D', '-SPEC:MA/lla', '-SPEC:T/fin', 'PF:D', 'COMP:N', '-COMP:D', '-SPEC:P'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'CLASS:TR', 'SPEC:TO/inf', '-COMP:Neg', 'COMP:D', '-COMP:P', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'V', '-COMP:V', '!COMP:*', '-COMP:T/fin', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', '-SPEC:Neg', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:PER:_', 'LF:admire', 'ASP', 'SPEC:ADV', 'PF:admire'}
admire*         ['LANG:EN']
T/fin*          {'!SPEC:*', "PF:T/fin'", 'LF:T', '-VAL', 'LANG:EN', 'NO_NUMBER', 'CAT:T/fin', 'NO_DET'}
v*              {'-VAL', 'LF:v', 'LANG:EN', 'PF:v', 'NO_DET', 'NO_NUMBER', 'CAT:v'}
admire**        ['LANG:EN']
T/fin**         {'!SPEC:*', 'PHI:PER:3', 'LF:T', 'NO_PERSON', "PF:T/fin''", '-VAL', 'LANG:EN', 'NO_NUMBER', 'CAT:T/fin', 'NO_DET'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'LANG:IT', 'SPEC:TO/inf', 'COMP:D', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'PF:adora', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:PER:_', 'LF:admire', 'ASP', 'SPEC:ADV'}
antaa           ['LANG:FI']
anta-           {'LF:give', 'CLASS:DITR', 'SPEC:TO/inf', 'COMP:D', '-COMP:FIN', '-COMP:v', '-COMP:N', 'COMP:P', '+SEM:directional', '-VAL', 'V', '-COMP:V', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'SPEC:D', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'PF:antaa', 'ASP:BOUNDED', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'LANG:FI'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask-            {'SEM:internal', 'SPEC:TO/inf', 'COMP:D', '-COMP:v', 'LF:ask', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'V', '-COMP:V', 'PHI:DET:_', 'PF:ask', 'SPEC:P', 'PHI:GEN:_', 'SPEC:D', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'COMP:R/D', '-COMP:WH', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', 'LF:key', '-SEM:directional', 'COMP:C', '-SPEC:T/fin', '-COMP:VA/inf', '-SPEC:FORCE', 'COMP:D/rel', 'PF:avain', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', 'LANG:FI'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'COMP:R/D', '-COMP:WH', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', '-SEM:directional', 'COMP:C', '-SPEC:T/fin', 'COMP:D/rel', '-SPEC:FORCE', 'LF:car', '-SPEC:N', 'PF:auto', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', 'LANG:FI'}
bank            {'COMP:R/D', '-SPEC:ADV', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'LANG:EN', 'SPEC:A', '-COMP:V', 'FREQ:1', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', 'LF:bank_inst', 'PF:bank1', '-COMP:AUX', '-SPEC:P', '-COMP:WH'}
bank            {'COMP:R/D', 'FREQ:2', '-SPEC:C/fin', 'COMP:R', 'LF:bank_river', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'LANG:EN', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:bank2', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', '-COMP:WH'}
barn            {'COMP:R/D', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', 'PF:barn', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'LANG:EN', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'LF:barn', 'N', 'COMP:uR', '-COMP:VA/inf', 'COMP:C', '-SPEC:T/fin', 'COMP:D/rel', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', '-COMP:WH'}
city            {'LF:city', 'COMP:R/D', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'LANG:EN', 'PF:city', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', '-COMP:WH'}
che             ['LANG:IT']
che-            {'COMP:R/D', 'LANG:IT', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', '-COMP:C/fin', '-COMP:*', 'COMP:uR', 'N', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', '-COMP:V', 'PF:che', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', 'LF:who', '-SPEC:P', '-COMP:WH'}
chiamato        ['LANG:IT']
chiamata-       {'LANG:IT', 'SPEC:TO/inf', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'PF:chiamato', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'LF:called', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_'}
claims          ['LANG:EN']
claim-          {'SPEC:TO/inf', 'PF:claim', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'V', '-COMP:V', 'COMP:T/fin', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'SPEC:D', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:PER:_', 'ASP', 'SPEC:ADV', 'LF:claim', '-COMP:D'}
danno           {'COMP:R/D', 'LANG:IT', '-COMP:WH', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', 'LF:damage', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', 'PF:danno'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'LANG:IT', 'SEM:internal', 'COMP:ARE/inf', 'COMP:D', 'SPEC:TO/inf', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', 'PHI:DET:_', 'LF:detest', 'SPEC:P', 'PHI:GEN:_', 'PF:detest', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_'}
devono          ['LANG:EN']
deva-           {'LANG:IT', 'COMP:ARE/inf', 'SEM:internal', 'SPEC:TO/inf', '-COMP:v', 'LF:must', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'SPEC:D', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', '-ASP', 'SPEC:ADV', 'PHI:PER:_', 'PF:deva'}
di              {'-adjoinable', 'P', 'SPEC:*', '-SPEC:C/fin', 'COMP:D', '-SPEC:iWH', '-COMP:T', '-SPEC:INF', '-SPEC:C', '-COMP:N', '-SPEC:iR', '-SPEC:Neg/fin', '-SPEC:V', '-VAL', 'PF:di', '-SPEC:v', '!COMP:*', '-COMP:uWH', '-COMP:T/fin', 'PHI:DET:_', '-COMP:A', '-COMP:ADV', 'ARG', 'LF:of', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', '-SPEC:N', 'PHI:PER:_', '-SPEC:ADV', '-SPEC:P', 'LANG:FI'}
does            {'-COMP:INF', 'COMP:Neg', 'SPEC:*', 'SPEC:TO/inf', '!COMP:*', 'VAL', 'PHI:GEN:_', 'SPEC:C/fin', 'ARG', '-SPEC:T/fin', 'COMP:V', 'SPEC:FORCE', '-SPEC:TO/inf', 'PHI:PER:_', 'PHI:GEN:F', 'T', 'PHI:GEN:M', 'COMP:T/prt', '-SPEC:C', 'T/fin', '-SPEC:V', '-SPEC:v', 'LANG:EN', '!PROBE:V', 'LF:does', '-COMP:T/fin', 'PHI:DET:_', '!SPEC:*', 'PHI:PER:3', 'SPEC:D', 'PHI:NUM:SG', '-SPEC:Neg', 'PF:does', 'FIN', 'PHI:NUM:_', 'COMP:v', '-SPEC:N'}
does_C          ['LANG:EN']
does-           {'-COMP:INF', 'COMP:Neg', 'SPEC:*', 'SPEC:TO/inf', '!COMP:*', 'VAL', 'PHI:GEN:_', 'SPEC:C/fin', 'ARG', '-SPEC:T/fin', 'COMP:V', 'SPEC:FORCE', '-SPEC:TO/inf', 'PHI:PER:_', 'PHI:GEN:F', 'T', 'PHI:GEN:M', 'COMP:T/prt', '-SPEC:C', 'T/fin', '-SPEC:V', '-SPEC:v', 'LANG:EN', '!PROBE:V', 'LF:does', '-COMP:T/fin', 'PHI:DET:_', '!SPEC:*', 'PHI:PER:3', 'SPEC:D', 'PHI:NUM:SG', '-SPEC:Neg', 'PF:does', 'FIN', 'PHI:NUM:_', 'COMP:v', '-SPEC:N'}
dorme           ['LANG:IT']
dorme-          {'CLASS:INTR', 'SPEC:TO/inf', '-COMP:v', '!SPEC:D', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'V', '-COMP:V', 'PF:dorme', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'SPEC:D', 'LF:sleep', '-COMP:MA/inf', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', '-COMP:D'}
disappeared     ['LANG:EN']
disappear-      {'CLASS:INTR', 'LF:disappear', 'SPEC:TO/inf', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'V', '-COMP:V', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'SPEC:D', 'PF:disappear', '-COMP:MA/inf', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', '-COMP:D'}
e               ['LANG:IT']
easy            ['LANG:EN']
easy-           {'LF:easy', '2SPEC', 'LANG:EN', 'PF:easy', 'SPEC:D', '0'}
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'Neg/fin', 'SEM:internal', 'SPEC:*', 'PF:ei', 'LF:neg', 'COMP:T/prt', '!COMP:T', '!COMP:*', 'VAL', 'PHI:DET:_', '-SPEC:T', '!SPEC:*', 'NEG', 'FIN', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:PER:_', '%SPEC:INF', 'POL:NEG', 'LANG:FI'}
e-              {'Neg/fin', 'SEM:internal', 'SPEC:*', 'PF:ei', 'LF:neg', 'COMP:T/prt', '!COMP:T', '!COMP:*', 'VAL', 'PHI:DET:_', '-SPEC:T', '!SPEC:*', 'NEG', 'FIN', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:PER:_', '%SPEC:INF', 'POL:NEG', 'LANG:FI'}
elaa            ['LANG:FI']
ela-            {'CLASS:INTR', 'SPEC:TO/inf', '-COMP:v', 'LF:live', '-COMP:N', 'PF:elaa', 'COMP:P', '-VAL', 'V', '-COMP:V', 'PHI:DET:_', 'SPEC:P', 'SPEC:D', '-COMP:MA/inf', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', '-COMP:D', 'LANG:FI'}
etsii           ['LANG:FI']
etsi-           {'PF:etsi', 'CLASS:TR', 'LF:search', '!COMP:D', 'SPEC:TO/inf', 'COMP:D', '-COMP:P', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'LANG:FI'}
etta            {'-SPEC:*', '-ARG', 'COMP:C/fin', 'LF:that', 'FIN', '-SPEC:D', 'FORCE', '!PROBE:FIN', 'PF:etta', '-VAL', 'COMP:T/fin', '!COMP:*', 'LANG:FI'}
fell            ['LANG:EN']
fell-           {'CLASS:INTR', 'SPEC:TO/inf', '-COMP:v', 'LF:fell', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'V', '-COMP:V', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'SPEC:D', '-COMP:MA/inf', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:PER:_', 'ASP', 'PF:fell', 'SPEC:ADV', '-COMP:D'}
flow'           {'SPEC:TO/inf', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'V', '-COMP:V', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'SPEC:D', 'LF:flow', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'PF:flow'}
from            {'P', '-SPEC:C/fin', '-SPEC:iWH', 'COMP:D', '-COMP:T', 'LF:from', '-SPEC:INF', '-SPEC:C', '-COMP:N', '-SPEC:iR', 'adjoinable', '-SPEC:Neg/fin', '-VAL', 'LANG:EN', '-SPEC:V', '-SPEC:v', '!COMP:*', '-COMP:uWH', '-float', '-COMP:T/fin', 'PHI:DET:_', '-COMP:A', 'PF:from', 'PHI:GEN:_', '-SPEC:*', '-COMP:ADV', 'TAIL:V,+SEM:directional', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', '-SPEC:N', 'PHI:PER:_', '-SPEC:ADV', '-SPEC:P'}
gave            ['LANG:EN']
give-           {'LF:give', 'PF:give', 'CLASS:DITR', 'SPEC:TO/inf', 'COMP:D', '-COMP:FIN', '-COMP:v', '-COMP:N', 'COMP:P', '+SEM:directional', '-VAL', 'LANG:EN', 'V', '-COMP:V', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'SPEC:D', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', 'PF:Giuseppe', 'LF:Giuseppe', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', '-SEM:directional', 'COMP:C', '-SPEC:T/fin', 'COMP:D/rel', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', '-COMP:WH'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'CLASS:TR', 'LF:want', 'SEM:internal', 'SPEC:TO/inf', 'COMP:D', '-COMP:P', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'COMP:A/inf', 'V', '-COMP:V', '!COMP:*', 'PHI:DET:_', 'SPEC:P', '-SPEC:*', 'PF:haluaa', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP:BOUNDED', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'LANG:FI'}
hairitsee       ['LANG:FI']
hairitse-       {'CLASS:TR', '!COMP:D', 'SPEC:TO/inf', 'COMP:D', '-COMP:FIN', '-COMP:P', '-COMP:v', '-COMP:N', 'COMP:P', 'LF:disturb', '-VAL', 'V', '-COMP:V', '!COMP:*', 'PHI:DET:_', 'PF:hairitsee', 'SPEC:P', 'SPEC:D', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'LANG:FI'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'LANG:IT', 'SPEC:*', 'PF:ha', 'SEM:internal', 'SPEC:TO/inf', 'LF:have', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'COMP:T', 'SPEC:D', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', '-ASP', 'SPEC:ADV', 'PHI:PER:_'}
horse           {'PF:horse', 'COMP:R/D', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'LANG:EN', 'SPEC:A', '-COMP:V', 'LF:horse', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', '-COMP:WH'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'CLASS:INTR', 'LF:disappear', 'SPEC:TO/inf', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', 'PHI:DET:_', 'SPEC:P', 'SPEC:D', '-COMP:MA/inf', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:havia', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', '-COMP:D', 'LANG:FI'}
Helsingissa     ['LANG:FI']
Helsinki        ['LANG:FI']
Helsinki-       {'COMP:R/D', '-COMP:WH', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', 'PF:Helsinki', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'LF:Helsinki', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', 'LANG:FI'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'CLASS:TR', '!COMP:D', 'SPEC:TO/inf', 'COMP:D', '-COMP:FIN', '-COMP:P', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:PER:_', 'LF:admire', 'PF:ihaile-', 'ASP', 'SPEC:ADV', 'LANG:FI'}
il              {'LANG:IT', 'OP', '-ARG', 'LF:the', '-COMP:P', '-SPEC:INF', '-SPEC:C', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', '!PROBE:N', 'D', '!COMP:*', '-COMP:uR', '-COMP:T/fin', 'PF:il', '-SPEC:MA/lla', '-SPEC:T/fin', 'COMP:N', '-COMP:D', '-SPEC:P'}
i               {'LANG:IT', 'OP', '-ARG', 'LF:the', '-COMP:P', '-SPEC:INF', '-SPEC:C', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', '!PROBE:N', 'D', '!COMP:*', '-COMP:uR', '-COMP:T/fin', 'PF:il', '-SPEC:MA/lla', '-SPEC:T/fin', 'COMP:N', '-COMP:D', '-SPEC:P'}
in              {'LANG:IT', 'P', '-SPEC:C/fin', '-SPEC:iWH', 'COMP:D', '-COMP:T', '-SPEC:INF', '-SPEC:C', '-COMP:N', '-SPEC:iR', 'adjoinable', '-SPEC:Neg/fin', '-VAL', '-SPEC:V', '-SPEC:v', '!COMP:*', '-COMP:uWH', '-COMP:T/fin', 'PHI:DET:_', '-COMP:A', 'PHI:GEN:_', '-COMP:ADV', 'LF:in', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', '-SPEC:N', 'PHI:PER:_', '-SPEC:ADV', '-SPEC:P', 'PF:in'}
infermieri      {'PF:infermieri', 'LF:nurses', 'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', '-COMP:WH'}
is              ['LANG:EN']
be-             {'SPEC:TO/inf', '-ARG', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'V', 'LF:be', '-COMP:V', '!COMP:*', '-COMP:TO/inf', 'SPEC:P', 'PF:be', 'SPEC:D', 'COPULA', '-SPEC:T/fin', '-SPEC:FORCE', 'ASP', 'SPEC:ADV'}
istuuko         ['LANG:FI']
istuu           ['LANG:FI']
istu-           {'CLASS:INTR', 'SPEC:TO/inf', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', 'PF:istuu', 'PHI:DET:_', 'SPEC:P', 'SPEC:D', '-COMP:MA/inf', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', '-COMP:D', 'LF:sit', 'LANG:FI'}
John            ['LANG:EN']
John-           {'LF:John', 'PF:John', 'COMP:R/D', '-adjoinable', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', '-COMP:C/fin', 'COMP:uR', 'N', '-SEM:directional', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', 'COMP:T/prt', '-SPEC:V', '-SPEC:R', 'LANG:EN', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', '-SPEC:P', '-COMP:WH'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'COMP:R/D', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', '-COMP:C/fin', '-COMP:*', 'COMP:uR', 'N', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', '-COMP:WH', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', 'PF:joka', '-SPEC:N', 'LF:who', '-SPEC:P', 'LANG:FI'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'PF:Jukka', 'COMP:R/D', '-COMP:WH', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', '-SEM:directional', 'COMP:C', '-SPEC:T/fin', 'COMP:D/rel', '-SPEC:FORCE', 'LF:Jukka', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', 'LANG:FI'}
juosten         ['LANG:FI']
juoksee         ['LANG:FI']
juokse-         {'LF:run', 'SPEC:TO/inf', '-COMP:v', '-COMP:N', 'COMP:P', 'PF:juokse-', '-VAL', 'V', '-COMP:V', 'PHI:DET:_', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'LANG:FI'}
kaksi           {'LANG:FI', 'SPEC:*', 'PHI:NUM:SG', 'TAIL:ARG,VAL,FIN', 'ARG', 'PHI:NUM:_', 'PHI:PER:_', 'NUM', '-VAL', 'COMP:N', 'PF:kaksi', 'PHI:DET:_', 'COMP:n', 'LF:two'}
kaksi           {'SPEC:*', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'NUM', 'LANG:EN', 'PF:kaksi', 'COMP:N', 'COMP:n', 'LF:two'}
kaksi_1         {'LANG:FI', 'SPEC:*', 'PHI:NUM:SG', 'TAIL:ARG,VAL,FIN', 'ARG', 'PHI:NUM:_', 'PHI:PER:_', 'NUM', '-VAL', 'COMP:N', 'PF:kaksi', 'PHI:DET:_', 'COMP:n', 'LF:two'}
kaksi_2         {'SPEC:*', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'NUM', 'LANG:EN', 'PF:kaksi', 'COMP:N', 'COMP:n', 'LF:two'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'NUM', 'LF:two', 'SPEC:*', 'PF:kaksi', 'COMP:N', 'COMP:n', 'LANG:FI'}
kaupunkia       ['LANG:EN']
kaupunki        {'LF:city', 'COMP:R/D', '-COMP:WH', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:P', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', 'PF:kaupunki', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', 'LANG:FI'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'SEM:external', 'SPEC:TO/inf', 'LF:order', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', '!COMP:A/inf', 'V', '-COMP:V', 'PHI:DET:_', 'SPEC:P', 'PF:kaske', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'LANG:FI'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'PF:kello', 'COMP:R/D', '-COMP:WH', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'LF:watch', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', 'LANG:FI'}
kello0-         {'LF:watch', 'PF:kello', '2SPEC', 'SPEC:D', '0', 'LANG:FI'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'COMP:R/D', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'LANG:EN', 'SPEC:A', '-COMP:V', 'PF:key', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', 'LF:key', '-COMP:VA/inf', 'COMP:C', '-SPEC:T/fin', 'COMP:D/rel', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', '-COMP:WH'}
kirja           ['LANG:FI']
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'COMP:R/D', '-COMP:WH', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', '-SEM:directional', 'PF:kirja', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', 'COMP:D/rel', 'LF:book', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', 'LANG:FI'}
knows           ['LANG:EN']
know-           {'CLASS:TR', 'SPEC:TO/inf', 'COMP:D', '-COMP:P', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'V', '-COMP:V', '!COMP:*', 'PF:know', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'LF:know', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_'}
kohti           {'-SPEC:ADV', 'P', 'SPEC:*', '-SPEC:C/fin', '-SPEC:iWH', 'COMP:D', '-COMP:T', '-SPEC:INF', '-SPEC:C', '-COMP:N', '-SPEC:iR', 'adjoinable', '-SPEC:Neg/fin', '-VAL', '-SPEC:V', '-SPEC:v', '!COMP:*', '-COMP:uWH', '-COMP:T/fin', 'LF:towards', '-COMP:A', 'PHI:DET:_', '-COMP:ADV', 'ARG', '-SPEC:T/fin', 'PF:kohti', '-SPEC:FORCE', 'PHI:NUM:_', '-SPEC:N', 'PHI:PER:_', 'TAIL:V', '-SPEC:P', 'LANG:FI'}
koko            {'OP', 'TAIL:T', '-ARG', '-COMP:P', '-SPEC:INF', '-SPEC:C', '-SPEC:V', 'adjoinable', '-SPEC:Neg/fin', '!PROBE:N', 'D', '!COMP:*', '-COMP:uR', '-COMP:T/fin', 'LF:all', 'PF:koko', '-SPEC:MA/lla', '-SPEC:T/fin', 'COMP:N', '-COMP:D', '-SPEC:P', 'LANG:FI'}
kuka            ['LANG:FI']
kuka-           {'COMP:R/D', '-COMP:WH', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'PHI', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', 'PF:kuka', '-COMP:VA/inf', 'COMP:C', '-SPEC:T/fin', '-COMP:AUX', '-SPEC:FORCE', 'COMP:D/rel', '-SPEC:N', '-SPEC:ADV', 'LF:who', '-SPEC:P', 'LANG:FI'}
kuorsaa         ['LANG:FI']
kuorsaamalla    ['LANG:FI']
kuorsaa-        {'-COMP:WH', 'SPEC:TO/inf', '-COMP:v', 'PF:kuorsaa', 'LF:snore', 'COMP:P', '-COMP:N', '-VAL', 'V', '-COMP:V', '-COMP:T/fin', 'PHI:DET:_', 'SPEC:P', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', '-COMP:D', 'LANG:FI'}
lahella         {'SPEC:*', 'COMP:D', '-COMP:FORCE', '!SPEC:D', '-SPEC:INF', 'PF:lahella', '-COMP:N', '-SPEC:iR', 'adjoinable', '!COMP:*', 'VAL', '-COMP:C/fin', '-COMP:ADV', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'COMP:V', 'PHI:PER:_', '-SPEC:ADV', 'P', '-SPEC:C/fin', '-SPEC:iWH', '-COMP:T', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:v', '-COMP:uWH', '-COMP:T/fin', 'PHI:DET:_', '-COMP:A', '!SPEC:*', 'INF', 'PHI:NUM:_', '-SPEC:N', 'COMP:v', 'LF:near', '-SPEC:P', 'LANG:FI'}
lahella         {'-SPEC:ADV', 'P', 'SPEC:*', '!COMP:D', '-SPEC:C/fin', 'COMP:D', '-SPEC:iWH', '-COMP:T', '-SPEC:INF', '-SPEC:C', 'PF:lahella', '-COMP:N', '-SPEC:iR', 'adjoinable', '-VAL', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:v', '!COMP:*', '-COMP:uWH', '-COMP:T/fin', 'PHI:DET:_', '-COMP:A', '-COMP:ADV', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', '-SPEC:N', 'PHI:PER:_', 'LF:near', '-SPEC:P', 'LANG:FI'}
lahella_1       {'-SPEC:ADV', 'P', 'SPEC:*', '!COMP:D', '-SPEC:C/fin', 'COMP:D', '-SPEC:iWH', '-COMP:T', '-SPEC:INF', '-SPEC:C', 'PF:lahella', '-COMP:N', '-SPEC:iR', 'adjoinable', '-VAL', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:v', '!COMP:*', '-COMP:uWH', '-COMP:T/fin', 'PHI:DET:_', '-COMP:A', '-COMP:ADV', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', '-SPEC:N', 'PHI:PER:_', 'LF:near', '-SPEC:P', 'LANG:FI'}
lahella_2       {'SPEC:*', 'COMP:D', '-COMP:FORCE', '!SPEC:D', '-SPEC:INF', 'PF:lahella', '-COMP:N', '-SPEC:iR', 'adjoinable', '!COMP:*', 'VAL', '-COMP:C/fin', '-COMP:ADV', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'COMP:V', 'PHI:PER:_', '-SPEC:ADV', 'P', '-SPEC:C/fin', '-SPEC:iWH', '-COMP:T', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:v', '-COMP:uWH', '-COMP:T/fin', 'PHI:DET:_', '-COMP:A', '!SPEC:*', 'INF', 'PHI:NUM:_', '-SPEC:N', 'COMP:v', 'LF:near', '-SPEC:P', 'LANG:FI'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'CLASS:INTR', 'SPEC:TO/inf', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', 'COMP:PP', 'PHI:DET:_', 'SPEC:P', 'SPEC:D', 'PF:lahtea', 'LF:leave', '-COMP:MA/inf', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', '-COMP:D', 'LANG:FI'}
lavano          ['LANG:IT']
lava-           {'LANG:IT', 'SPEC:TO/inf', 'COMP:D', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'LF:wash', 'PF:lava', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'LANG:IT', 'OP', '-ARG', '-COMP:P', '-SPEC:INF', '-SPEC:C', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', '!PROBE:N', 'D', '!COMP:*', '-COMP:uR', '-COMP:T/fin', 'LF:D', '-SPEC:MA/lla', '-SPEC:T/fin', 'COMP:N', 'PF:le', '-COMP:D', '-SPEC:P'}
leaves          ['LANG:EN']
leave           {'SPEC:TO/inf', '-COMP:v', '!SPEC:D', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'V', '-COMP:V', 'PF:leave', '-COMP:T/fin', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'LF:leave', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_'}
leave-          {'SPEC:TO/inf', '-COMP:v', '!SPEC:D', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'V', '-COMP:V', 'PF:leave', '-COMP:T/fin', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'LF:leave', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_'}
like-           {'!COMP:D', 'SPEC:TO/inf', 'LF:like', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'V', '-COMP:V', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'PF:like'}
likes           ['LANG:EN']
like            {'!COMP:D', 'SPEC:TO/inf', 'LF:like', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'V', '-COMP:V', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'PF:like'}
little          ['LANG:EN']
little-         {'PF:little-', 'LF:little', 'LANG:EN', '2SPEC', 'SPEC:D', '0'}
lle             {'P', '-SPEC:C/fin', '-SPEC:iWH', 'COMP:D', '-COMP:T', '-SPEC:INF', '-SPEC:C', '-COMP:N', '-SPEC:iR', '+SEM:directional', 'adjoinable', '-VAL', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:v', '!COMP:*', '-COMP:uWH', '-COMP:T/fin', 'PHI:DET:_', '-COMP:A', '-SPEC:*', '-COMP:ADV', 'TAIL:V,+SEM:directional', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', '-SPEC:N', 'PHI:PER:_', '-SPEC:ADV', 'PF:P(lle)', '-SPEC:P', 'LF:for', 'LANG:FI'}
lla             {'P', 'SPEC:*', '-SPEC:C/fin', 'TAIL:T', 'COMP:D', '-SPEC:iWH', '-COMP:T', '-SPEC:INF', '-SPEC:C', '-COMP:N', '-SPEC:iR', 'adjoinable', '-SPEC:Neg/fin', '-VAL', 'PF:P(lla)', '-SPEC:V', '-SPEC:v', 'TAIL:*V', '!COMP:*', '-COMP:uWH', '-COMP:T/fin', 'PHI:DET:_', '-COMP:A', '-COMP:ADV', 'LF:by', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', '-SPEC:N', 'PHI:PER:_', '-SPEC:ADV', '-SPEC:P', 'LANG:FI'}
Luisa           ['LANG:IT']
Luisa-          {'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'LF:Luisa', 'PF:Luisa', 'COMP:uR', 'N', '-COMP:VA/inf', '-SEM:directional', 'COMP:C', '-SPEC:T/fin', 'COMP:D/rel', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', '-COMP:WH'}
lukemalla       ['LANG:FI']
lukee           ['LANG:FI']
luke-           {'CLASS:TR', 'PF:luke', 'SPEC:TO/inf', 'COMP:D', '-COMP:P', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:PER:_', 'LF:read', 'ASP', 'SPEC:ADV', 'LANG:FI'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'CLASS:TR', '!COMP:D', 'SPEC:TO/inf', 'COMP:D', 'LF:find', '-COMP:P', '-COMP:v', '-COMP:N', 'COMP:P', 'PF:loyta-', '-VAL', 'V', '-COMP:V', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP:BOUNDED', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'LANG:FI'}
Mary            ['LANG:EN']
Mary-           {'COMP:R/D', '-adjoinable', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', 'PF:Mary', '-COMP:C/fin', 'COMP:uR', 'N', '-SEM:directional', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', 'LF:Mary', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', 'COMP:T/prt', '-SPEC:V', '-SPEC:R', 'LANG:EN', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', '-SPEC:P', '-COMP:WH'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'COMP:R/D', '-adjoinable', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'PF:Merja', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', '-COMP:C/fin', 'LF:Merja', 'COMP:uR', 'N', '-SEM:directional', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', '-COMP:WH', '-SPEC:C/fin', 'COMP:T/prt', '-SPEC:V', '-SPEC:R', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', '-SPEC:P', 'LANG:FI'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'MA/inf', 'SPEC:*', 'TAIL:T', 'LF:by', 'PF:malla', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:FORCE', 'adjoinable', 'ADV', 'COMP:v', '-SPEC:N', 'LANG:FI'}
meren           ['LANG:FI']
mere-           {'COMP:R/D', '-COMP:WH', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', 'LF:ocean', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', 'PF:meri', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', 'LANG:FI'}
mies            {'COMP:R/D', '-COMP:WH', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', 'PF:mies', '-SPEC:INF', '-COMP:N', 'COMP:P', 'LF:man', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', 'LANG:FI'}
mistake         {'COMP:R/D', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'LANG:EN', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'LF:mistake', 'PF:mistake', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', '-COMP:WH'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'COMP:R/D', '-COMP:WH', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'PF:mika-', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'LF:what', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', 'LANG:FI'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'CLASS:TR', 'PF:move', 'SPEC:TO/inf', 'COMP:D', '-COMP:P', '-COMP:v', '-COMP:N', 'COMP:P', '+SEM:directional', '-VAL', 'V', '-COMP:V', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'LF:move', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'LANGN:EN'}
mukavasti       ['LANG:EN']
mukava-         {'PF:mukavasti', '2SPEC', 'LF:comfortably', 'SPEC:D', '0', 'LANG:FI'}
must            {'-COMP:INF', 'T', 'PF:must', 'COMP:Neg', 'SPEC:*', 'SPEC:TO/inf', 'MODAL', 'LF:must', 'COMP:T/prt', '-SPEC:C', 'T/fin', '-SPEC:V', '-SPEC:v', 'LANG:EN', '!COMP:*', '!PROBE:V', 'VAL', '-COMP:T/fin', 'PHI:DET:_', 'PHI:GEN:_', '!SPEC:*', 'SPEC:C/fin', 'SPEC:D', '-SPEC:Neg', 'FIN', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:PER:_', 'COMP:V', 'SPEC:FORCE', '-SPEC:TO/inf', 'COMP:v', '-SPEC:N'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'CLASS:TR', 'SPEC:TO/inf', 'COMP:D', '-COMP:P', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', '!COMP:*', '-COMP:T/fin', 'PHI:DET:_', 'SPEC:P', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP:BOUNDED', 'LF:sell', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'PF:myy', 'LANG:FI'}
naki            ['LANG:FI']
nakee           ['LANG:FI']
nake-           {'-COMP:MA/ssa', 'CLASS:TR', 'SPEC:TO/inf', 'COMP:D', '-COMP:P', '-COMP:v', '-COMP:N', '-COMP:ESSA/inf', 'COMP:P', '-VAL', '-COMP:MA/tta', 'V', '-COMP:V', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'LF:see', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP:BOUNDED', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'PF:nake', 'LANG:FI'}
nayttaa         ['LANG:FI']
naytta-         {'SEM:internal', 'SPEC:TO/inf', '-ARG', '-COMP:v', '!SPEC:D', 'LF:seem', '-COMP:N', 'COMP:P', 'V', '-COMP:V', 'VAL', '!COMP:VA/inf', 'SPEC:P', 'PF:naytta', '-SPEC:T/fin', '-SPEC:FORCE', 'ASP', 'SPEC:ADV', 'LANG:FI'}
ndo             {'-COMP:C/fin', 'LF:ing', '-COMP:FORCE', 'INF', '?ARG', '-SPEC:T/fin', 'PF:PRG', '-SPEC:V', '-COMP:T/fin', 'COMP:V', 'LANG:EN', 'COMP:v', 'PRG', '!COMP:*', 'VAL'}
ne              {'OP', '-ARG', '-COMP:P', 'PHI:NUM:PL', '-SPEC:INF', '-SPEC:C', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', '!PROBE:N', 'D', '!COMP:*', '-COMP:uR', '-COMP:T/fin', 'PHI:PER:3', '-SPEC:MA/lla', '-SPEC:T/fin', 'LF:those', 'COMP:N', '-COMP:D', '-SPEC:P', 'PF:ne', 'LANG:FI'}
niiden          ['LANG:EN']
nen             {'LF:ing', 'TAIL:D', 'SPEC:*', 'COMP:0', '-SPEC:D', 'A', '-SPEC:A', 'PF:a', 'LANG:FI'}
not             {'PHI:GEN:_', 'Neg', 'SPEC:*', 'PF:not', '-COMP:FIN', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:PER:_', '-VAL', 'LANG:EN', '-COMP:C', 'PHI:DET:_', '-COMP:D', '!COMP:*', 'POL:NEG', 'LF:not'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'CLASS:INTR', 'SPEC:TO/inf', '-COMP:T', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', '-COMP:T/fin', 'PHI:DET:_', 'SPEC:P', 'SPEC:D', 'LF:sleep', '-COMP:MA/inf', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:PER:_', 'PF:nukku', 'ASP', 'SPEC:ADV', '-COMP:Neg/fin', '-COMP:D', 'LANG:FI'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'COMP:R/D', '-COMP:WH', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', 'PF:omaisuuden', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', 'LF:possessions', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', 'LANG:FI'}
operatoria      ['LANG:IT']
operatoria-     {'PF:operatoria', 'LANG:IT', '2SPEC', 'SPEC:D', 'LF:operation', '0'}
ostaa           ['LANG:FI']
osta-           {'CLASS:TR', 'SPEC:TO/inf', 'COMP:D', '-COMP:P', '-COMP:v', 'PF:osta', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'LF:buy', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP:BOUNDED', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'LANG:FI'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'PF:paiva', 'COMP:R/D', '-COMP:WH', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', 'LF:day', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', 'SEM:nonreferential', 'LANG:FI'}
past            {'P', '-SPEC:C/fin', '-SPEC:iWH', 'COMP:D', '-COMP:T', '-SPEC:INF', '-SPEC:C', 'LF:past', '-COMP:N', '-SPEC:iR', 'adjoinable', 'PF:past', '-VAL', 'LANG:EN', '-SPEC:Neg/fin', '-SPEC:V', '-SPEC:v', '!COMP:*', '-COMP:uWH', '-float', '-COMP:T/fin', 'PHI:DET:_', '-COMP:A', 'PHI:GEN:_', '-SPEC:*', '-COMP:ADV', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', '-SPEC:N', 'PHI:PER:_', '-SPEC:ADV', '-SPEC:P'}
Pariisia        ['LANG:FI']
Pariisi-        {'COMP:R/D', '-COMP:WH', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', 'LF:Paris', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:Pariisi', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', 'LANG:FI'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan           ['LANG:EN']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'COMP:R/D', 'PF:Pekka', '-COMP:WH', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'LF:Pekka', 'COMP:uR', 'N', '-COMP:VA/inf', '-SEM:directional', 'COMP:C', '-SPEC:T/fin', 'COMP:D/rel', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', 'LANG:FI'}
pelottaa        ['LANG:FI']
pelkaa          ['LANG:FI']
pelkaa-         {'CLASS:TR', 'SPEC:TO/inf', 'COMP:D', '-COMP:P', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'PF:pelkaa', 'LF:fear', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'LANG:FI'}
persuades       ['LANG:EN']
persuade-       {'SEM:external', 'LF:persuade', 'SPEC:TO/inf', '-COMP:v', '-COMP:N', 'COMP:P', 'COMP:TO/inf', '-VAL', 'LANG:EN', 'V', '-COMP:V', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'PF:persuade', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_'}
peruuntui       ['LANG:FI']
peruuntu-       {'SPEC:TO/inf', '-COMP:v', 'LF:cancelled', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', 'PHI:DET:_', 'SPEC:P', 'SPEC:D', 'PF:peruuntui', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'LANG:FI'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'CLASS:TR', 'SPEC:TO/inf', 'COMP:D', '-COMP:P', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'PF:pese_asp', 'LF:wash', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP:BOUNDED', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'LANG:FI'}
pese-           {'CLASS:TR', 'SPEC:TO/inf', 'COMP:D', '-COMP:P', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'LF:wash', 'PF:pese', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'LANG:FI'}
petardi         {'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'LF:firecrackers', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'PF:petardi', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', '-COMP:WH'}
pieni           ['LANG:FI']
pieni-          {'SPEC:D', '2SPEC', 'PF:pieni-', '0', 'LF:small', 'LANG:FI'}
poikien         ['LANG:FI']
poika-          {'COMP:R/D', '-COMP:WH', '-SPEC:C/fin', 'LF:boy', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', 'PF:poika', 'COMP:C', '-SPEC:T/fin', 'COMP:D/rel', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', 'LANG:FI'}
puhelinta       ['LANG:FI']
puhelin-        {'2SPEC', 'SPEC:D', 'PF:puhelin', '0', 'LF:phone', 'LANG:FI'}
punainen        ['LANG:FI']
puna-           {'PF:puna-', 'LF:red', '2SPEC', 'SPEC:D', '0', 'LANG:FI'}
presupposto     {'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', 'LF:presupposition', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', 'PF:presupposto', '-COMP:WH'}
primary         {'COMP:R/D', 'LANG:IT', '-SPEC:ADV', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'PF:primary', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', 'LF:nurse', '-COMP:AUX', '-SPEC:P', '-COMP:WH'}
promises        ['LANG:EN']
promise-        {'PF:promise', 'SEM:internal', 'SPEC:TO/inf', 'COMP:D', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'V', 'LF:promise', '-COMP:V', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'SPEC:D', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_'}
problem         {'COMP:R/D', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'LANG:EN', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:problem', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', 'LF:problem', '-COMP:WH'}
pyytaa          ['LANG:FI']
pyyta-          {'CLASS:TR', 'SEM:external', 'SPEC:TO/inf', 'COMP:D', '-COMP:P', '-COMP:v', 'LF:ask', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:pyyda', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'LANG:FI'}
raced           ['FREQ:2', 'INFO:finite_verb', 'LANG:EN']
raced           ['FREQ:1', 'INFO:participle_verb', 'LANG:EN']
race-           {'CLASS:INTR', 'SPEC:TO/inf', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'LAMG:EN', 'V', '-COMP:V', '-COMP:T/fin', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'SPEC:D', '-COMP:MA/inf', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:PER:_', 'LF:race', 'PF:race', 'ASP', 'SPEC:ADV', '-COMP:D'}
raukesi         ['LANG:FI']
raukea-         {'SPEC:TO/inf', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', 'PHI:DET:_', 'SPEC:P', 'PF:raukea', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'LF:terminate', 'LANG:FI'}
red             ['LANG:EN']
red-            {'LF:red', '2SPEC', 'LANG:EN', 'SPEC:D', '0', 'PF:red'}
saavuttaa       ['LANG:FI']
saavutta-       {'CLASS:TR', '!COMP:D', 'SPEC:TO/inf', 'COMP:D', '-COMP:P', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'PF:saavutta-', 'V', '-COMP:V', '!COMP:*', 'PHI:DET:_', 'LF:reach', 'SPEC:P', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP:BOUNDED', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'LANG:FI'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'CLASS:TR', 'SPEC:TO/inf', 'COMP:D', '-COMP:P', 'COMP:VA/inf', '-COMP:v', 'COMP:FORCE', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'SPEC:D', 'PF:sano-', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'LF:say', 'LANG:FI'}
said            ['LANG:EN']
say'            {'SPEC:TO/inf', '-COMP:v', '!COMP:FORCE', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'V', '-COMP:V', 'PHI:DET:_', 'PF:say', 'SPEC:P', 'PHI:GEN:_', 'SPEC:D', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'LF:say'}
say-            {'SPEC:TO/inf', '-COMP:v', '!COMP:FORCE', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'V', '-COMP:V', 'PHI:DET:_', 'PF:say', 'SPEC:P', 'PHI:GEN:_', 'SPEC:D', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'LF:say'}
sala            ['LANG:IT']
sala-           {'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:sala', '-SPEC:N', 'LF:room', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', '-COMP:WH'}
scoppiati       ['LANG:IT']
scoppia-        {'LANG:IT', 'LF:explode', 'SPEC:TO/inf', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'PF:scoppia', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_'}
sentenza        {'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'LF:sentence', 'COMP:P', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'PF:sentenza', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', '-COMP:WH'}
Seine           ['LANG:EN']
Seine-          {'COMP:R/D', '-COMP:WH', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'LANG:EN', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'LF:Seine', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', 'PF:Seine'}
sembrano        ['LANG:IT']
sembra-         {'SPEC:TO/inf', '-ARG', '-COMP:v', 'LF:seem', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'V', '-COMP:V', 'PF:sembra', 'SPEC:P', 'SPEC:D', '!COMP:ARE/inf', '-SPEC:T/fin', '-SPEC:FORCE', '-ASP', 'SPEC:ADV', '-COMP:D'}
sleeps          ['LANG:EN']
sleep           {'CLASS:INTR', 'SPEC:TO/inf', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'V', '-COMP:V', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'SPEC:D', 'LF:sleep', '-COMP:MA/inf', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'PF:sleep', 'ASP', 'SPEC:ADV', 'PHI:PER:_', '-COMP:D'}
sleep-          {'CLASS:INTR', 'SPEC:TO/inf', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'V', '-COMP:V', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'SPEC:D', 'LF:sleep', '-COMP:MA/inf', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'PF:sleep', 'ASP', 'SPEC:ADV', 'PHI:PER:_', '-COMP:D'}
solution        {'COMP:R/D', '-COMP:WH', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'LANG:EN', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'LF:solution', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', 'PF:solution'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'COMP:R/D', '-COMP:WH', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', '!COMP:A/inf', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', 'LF:agreement', '-SPEC:FORCE', '-COMP:AUX', '-SPEC:N', '-SPEC:ADV', 'PF:sopimus', '-SPEC:P', 'LANG:FI'}
spinge          ['LANG:IT']
spinge-         {'LANG:IT', '!COMP:D', 'SPEC:TO/inf', '-COMP:P', '-COMP:v', '-COMP:N', '-VAL', 'V', '-COMP:V', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'LF:push', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'PF:spinge'}
ssa             {'-SPEC:ADV', 'P', 'SPEC:*', '-SPEC:C/fin', '-SPEC:iWH', 'COMP:D', '-COMP:T', '-SPEC:INF', '-SPEC:C', '-COMP:N', '-SPEC:iR', 'adjoinable', '-SPEC:Neg/fin', '-VAL', '-SPEC:V', '-SPEC:v', '!COMP:*', '-COMP:uWH', '-COMP:T/fin', 'PHI:DET:_', '-COMP:A', '-COMP:ADV', 'LF:in', 'COMP:n/MA', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', '-SPEC:N', 'PHI:PER:_', 'TAIL:V', 'PF:ssa', '-SPEC:P', 'LANG:FI'}
stanno          ['LANG:IT']
sta-            {'SEM:internal', 'SPEC:TO/inf', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'COMP:PRG', 'LANG:EN', 'V', '-COMP:V', 'PHI:DET:_', 'LF:stay', 'SPEC:P', 'PHI:GEN:_', 'SPEC:D', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', '-ASP', 'SPEC:ADV', 'PHI:PER:_', 'PF:sta'}
sti             {'SPEC:*', 'TAIL:T', '-ARG', 'LF:by', 'PF:sti', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:FORCE', 'adjoinable', 'ADV', '-SPEC:N', '!COMP:*', 'LANG:FI'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'LF:socks', 'COMP:R/D', '-COMP:WH', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'PF:sukka-', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', 'LANG:FI'}
surprised       ['LANG:EN']
surprise-       {'CLASS:TR', 'LF:surprise', 'SPEC:TO/inf', 'COMP:D', '-COMP:P', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'V', '-COMP:V', '!COMP:*', '-COMP:T/fin', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'PF:surprise'}
talo            {'COMP:R/D', '-COMP:WH', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', 'PF:talo', '-COMP:v', 'LF:house', '-SPEC:INF', 'COMP:T/prt', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', 'LANG:FI'}
tama            ['LANG:EN']
tama-           {'COMP:R/D', '-COMP:WH', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'PF:tama', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'PHI', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'LF:this', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', 'LANG:FI'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'SPEC:*', 'SPEC:TO/inf', 'MODAL', '-COMP:v', 'LF:must', '-COMP:N', 'COMP:P', '-VAL', '!COMP:A/inf', 'V', '-COMP:V', 'PHI:DET:_', 'SPEC:P', 'FIN', 'PF:taytyy', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', '-ASP', 'SPEC:ADV', 'PHI:PER:_', 'LANG:FI'}
teki            ['LANG:FI']
teke-           {'CLASS:TR', '!COMP:D', 'SPEC:TO/inf', 'COMP:D', '-COMP:P', '-COMP:A/inf', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', '!COMP:*', 'LF:make', 'PHI:DET:_', 'SPEC:P', 'PF:teke', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP:BOUNDED', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'LANG:FI'}
that            {'-SPEC:*', '-ARG', 'PF:that', 'COMP:C/fin', 'LF:that', 'FIN', 'FORCE', '!PROBE:FIN', '-VAL', 'LANG:EN', 'COMP:T/fin', '!COMP:*'}
the             {'OP', '-ARG', 'LF:the', '-COMP:P', '-SPEC:INF', '-SPEC:C', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', 'LANG:EN', '!PROBE:N', 'D', '!COMP:*', '-COMP:uR', '-COMP:T/fin', 'PHI:DEF:DEF', '-SPEC:MA/lla', '-SPEC:T/fin', 'PF:the', 'COMP:N', '-COMP:D', '-SPEC:P'}
to              {'COMP:D', '-SPEC:INF', '-COMP:N', '-SPEC:iR', 'adjoinable', '-VAL', '!COMP:*', 'PHI:GEN:_', '-SPEC:*', '-COMP:ADV', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:PER:_', 'TAIL:V', '-SPEC:ADV', 'LF:to', 'P', '-SPEC:C/fin', '-SPEC:iWH', '-COMP:T', '-SPEC:C', '-SPEC:Neg/fin', '-SPEC:V', '+SEM:directional', '-SPEC:v', 'LANG:EN', '-COMP:uWH', '-float', '-COMP:T/fin', 'PHI:DET:_', '-COMP:A', 'PHI:NUM:_', 'PF:to', '-SPEC:N', '-SPEC:P'}
to_inf          {'TO/inf', 'PF:TO/inf', 'LF:TO/inf', '-COMP:FORCE', '?ARG', '-SPEC:v', 'adjoinable', '-SPEC:V', '-VAL', 'LANG:EN', '!COMP:*', '-COMP:T/fin', '-COMP:C/fin', 'INF', '-SPEC:T/fin', 'COMP:V', 'COMP:v'}
towards         {'-SPEC:ADV', 'P', '-SPEC:C/fin', '-SPEC:iWH', 'PF:towards', 'COMP:D', '-COMP:T', '-SPEC:INF', '-SPEC:C', '-COMP:N', '-SPEC:iR', 'adjoinable', '-SPEC:Neg/fin', '-VAL', 'LANG:EN', '-SPEC:V', '-SPEC:v', '!COMP:*', '-COMP:uWH', '-float', '-COMP:T/fin', 'LF:towards', '-COMP:A', 'PHI:DET:_', 'PHI:GEN:_', '-SPEC:*', '-COMP:ADV', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', '-SPEC:N', 'PHI:PER:_', 'TAIL:V', '-SPEC:P'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'CLASS:TR', 'SPEC:TO/inf', 'COMP:D', '-COMP:P', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:tonaise', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'LF:nudge', 'LANG:FI'}
tta             {'P', 'SPEC:*', 'PF:tta', '-SPEC:C/fin', 'COMP:D', '-SPEC:iWH', '-COMP:T', '-SPEC:INF', '-SPEC:C', '-COMP:N', '-SPEC:iR', 'adjoinable', '-SPEC:Neg/fin', 'ADV', '-VAL', '-SPEC:V', '-SPEC:v', '!COMP:*', '-COMP:uWH', '-COMP:T/fin', 'PHI:DET:_', '-COMP:A', 'LF:without', '-COMP:ADV', 'COMP:n/MA', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', '-SPEC:N', 'PHI:PER:_', '-SPEC:ADV', '-SPEC:P', 'LANG:FI'}
tries           ['LANG:EN']
try-            {'LF:try', 'PF:try', 'SEM:internal', 'SPEC:TO/inf', '-COMP:v', '-COMP:N', 'COMP:P', '!COMP:TO/inf', '-VAL', 'LANG:EN', 'V', '-COMP:V', 'PHI:DET:_', 'SPEC:P', '!COMP:-ARG', 'PHI:GEN:_', 'SPEC:D', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_'}
verifiche       {'COMP:R/D', 'LANG:IT', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'LF:verification', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:verifiche', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', '-SPEC:P', '-COMP:WH'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'CLASS:INTR', 'SPEC:TO/inf', '-COMP:v', 'PF:virtaa', '-COMP:N', 'COMP:P', '-VAL', 'V', '-COMP:V', 'PHI:DET:_', 'SPEC:P', 'SPEC:D', '!COMP:P', 'LF:flow', '-COMP:MA/inf', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', '-COMP:D', 'LANG:FI'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'LF:want', 'SEM:internal', 'PF:volu', 'SPEC:TO/inf', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'V', '-COMP:V', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', '-SPEC:*', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'CLASS:TR', 'SPEC:TO/inf', 'COMP:D', '-COMP:P', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'V', '-COMP:V', 'SEM:achievement', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'LF:win', 'PF:voitta', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP:BOUNDED', 'ASP', 'SPEC:ADV', 'PHI:PER:_'}
wants           ['LANG:EN']
want-           {'CLASS:TR', 'LF:want', 'COMP:D', 'PF:want', '-COMP:P', '-COMP:v', '-COMP:N', 'COMP:P', 'COMP:TO/inf', '-VAL', 'LANG:EN', 'V', '-COMP:V', '!COMP:*', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:PER:_', '-SPEC:TO/inf', 'ASP', 'SPEC:ADV'}
what            ['LANG:EN']
what-           {'COMP:R/D', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', '-COMP:C/fin', 'LF:what', '-COMP:*', 'N', 'COMP:uR', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', 'PF:what', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', 'LANG:EN', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', '-SPEC:P', '-COMP:WH'}
which           {'OP', '-ARG', 'PF:which', '-COMP:P', '-SPEC:INF', '-SPEC:C', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', '-COMP:D', 'LANG:EN', '!PROBE:N', 'D', '!COMP:*', '-COMP:uR', '-COMP:T/fin', 'OP:WH', '-SPEC:MA/lla', '-SPEC:T/fin', 'COMP:N', 'LF:which', '-SPEC:P'}
who             ['LANG:EN']
who-            {'COMP:R/D', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', '-COMP:C/fin', '-COMP:*', 'COMP:uR', 'N', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', 'LANG:EN', '-COMP:V', '-COMP:A', 'PF:who', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', 'LF:who', '-SPEC:P', '-COMP:WH'}
whether         {'LF:whether', 'OP', '-ARG', 'COMP:C/fin', '!PROBE:FIN', '-VAL', 'LANG:EN', 'PF:whether', 'COMP:T/fin', '!COMP:*', 'Q', '-SPEC:*', 'FIN', 'OP:WH', 'FORCE', 'OP:Q'}
yrittaa         ['LANG:FI']
yritta-         {'LF:try', 'SEM:internal', 'SPEC:TO/inf', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', '!COMP:A/inf', 'LANG:EN', 'V', '-COMP:V', 'PHI:DET:_', 'SPEC:P', '!COMP:-ARG', 'PHI:GEN:_', 'SPEC:D', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_', 'PF:yritta'}
mina            ['LANG:EN']
mina-           {'COMP:R/D', 'LF:I', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', '-COMP:C/fin', '-COMP:*', 'COMP:uR', 'N', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', 'PF:mina', '-COMP:WH', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', '-SPEC:P', 'LANG:FI'}
sina            ['LANG:EN']
sina-           {'COMP:R/D', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'PF:sina', 'SPEC:A', '-COMP:C/fin', '-COMP:*', 'COMP:uR', 'N', 'LF:you', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', '-COMP:WH', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', '-SPEC:P', 'LANG:FI'}
han             ['LANG:EN']
han-            {'COMP:R/D', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'LF:s/he', 'SPEC:A', '-COMP:C/fin', '-COMP:*', 'COMP:uR', 'N', 'COMP:C', 'PF:han', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', '-COMP:WH', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', '-SPEC:P', 'LANG:FI'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'COMP:R/D', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', '-COMP:C/fin', '-COMP:*', 'COMP:uR', 'N', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:me', '-SPEC:ADV', '-COMP:AUX', '-COMP:WH', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', 'LF:we', '-SPEC:P', 'LANG:FI'}
te              ['LANG:EN']
te-             {'COMP:R/D', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', '-COMP:C/fin', '-COMP:*', 'COMP:uR', 'N', 'LF:you', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', '-COMP:WH', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', 'PF:te', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', '-SPEC:P', 'LANG:FI'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'COMP:R/D', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', '-COMP:C/fin', '-COMP:*', 'COMP:uR', 'N', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', '-COMP:WH', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', 'PF:he', '-SPEC:R', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', '-SPEC:P', 'LF:they', 'LANG:FI'}
se              {'OP', '-ARG', '-COMP:P', '-SPEC:INF', '-SPEC:C', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', '!PROBE:N', 'D', '!COMP:*', '-COMP:uR', '-COMP:T/fin', 'PF:se', '-SPEC:MA/lla', '-SPEC:T/fin', 'LF:the/that', 'COMP:N', '-COMP:D', '-SPEC:P', 'LANG:FI'}
sen             {'OP', '-ARG', '-COMP:P', 'PF:sen', '-SPEC:INF', '-SPEC:C', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', '!PROBE:N', 'TAIL:PHI', 'D', '!COMP:*', '-COMP:uR', '-COMP:T/fin', 'TAIL:*POL:NEG', '-SPEC:MA/lla', '-SPEC:T/fin', 'TAIL:ASP', 'LF:the/that', 'COMP:N', '-COMP:D', '-SPEC:P', 'LANG:FI'}
I               ['LANG:EN']
I-              {'COMP:R/D', 'LF:I', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', '-COMP:C/fin', '-COMP:*', 'COMP:uR', 'N', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', 'PF:I', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', 'LANG:EN', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', '-SPEC:P', '-COMP:WH'}
you             ['LANG:EN']
you-            {'COMP:R/D', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'PF:you', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', '-COMP:C/fin', '-COMP:*', 'COMP:uR', 'N', 'LF:you', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', 'LANG:EN', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', '-SPEC:P', '-COMP:WH'}
he              ['LANG:EN']
he-             {'LF:he', 'COMP:R/D', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', '-COMP:C/fin', '-COMP:*', 'COMP:uR', 'N', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', 'PF:he', '-SPEC:R', 'LANG:EN', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', '-SPEC:P', '-COMP:WH'}
she             ['LANG:EN']
she-            {'COMP:R/D', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', '-COMP:C/fin', '-COMP:*', 'COMP:uR', 'N', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', 'PF:she', '-SPEC:C/fin', 'LF:she', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', 'LANG:EN', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', '-SPEC:P', '-COMP:WH'}
we              ['LANG:EN']
we-             {'COMP:R/D', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', '-COMP:C/fin', 'PF:we', '-COMP:*', 'N', 'COMP:uR', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', 'LANG:EN', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', 'LF:we', '-SPEC:P', '-COMP:WH'}
you_pl          ['LANG:EN']
you_pl-         {'COMP:R/D', '-SPEC:ADV', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'LANG:EN', 'PHI', 'SPEC:A', '-COMP:V', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', 'PF:you_pl', '-SPEC:FORCE', '-SPEC:N', 'LF:you_pl', '-COMP:AUX', '-SPEC:P', '-COMP:WH'}
they            ['LANG:EN']
they-           {'COMP:R/D', 'COMP:R', '-SPEC:uWH', 'PF:they', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', '-COMP:C/fin', '-COMP:*', 'COMP:uR', 'N', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', 'LANG:EN', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', '-SPEC:P', 'LF:they', '-COMP:WH'}
it              ['LANG:EN']
it-             {'OP', 'PF:it', '-ARG', '-COMP:P', '-SPEC:INF', '-SPEC:C', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', 'LANG:EN', '!PROBE:N', 'D', '!COMP:*', '-COMP:uR', '-COMP:T/fin', '-SPEC:MA/lla', '-SPEC:T/fin', 'LF:it/that', 'COMP:N', '-COMP:D', '-SPEC:P'}
io              ['LANG:EN']
io-             {'COMP:R/D', 'LANG:IT', 'PF:io', 'LF:I', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', '-COMP:C/fin', '-COMP:*', 'COMP:uR', 'N', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', '-SPEC:P', '-COMP:WH'}
tu              ['LANG:EN']
tu-             {'COMP:R/D', 'LANG:IT', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'PF:tu', 'SPEC:A', '-COMP:C/fin', '-COMP:*', 'COMP:uR', 'N', 'LF:you', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', '-SPEC:P', '-COMP:WH'}
lui             ['LANG:EN']
lui-            {'LF:he', 'LANG:IT', 'COMP:R/D', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', '-COMP:C/fin', '-COMP:*', 'COMP:uR', 'N', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', 'PF:lui', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', '-SPEC:P', '-COMP:WH'}
lei             ['LANG:EN']
lei-            {'COMP:R/D', 'LANG:IT', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'PF:lei', 'SPEC:A', '-COMP:C/fin', '-COMP:*', 'COMP:uR', 'N', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', 'LF:she', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', '-SPEC:P', '-COMP:WH'}
noi             ['LANG:EN']
noi-            {'COMP:R/D', 'LANG:IT', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', '-COMP:C/fin', '-COMP:*', 'COMP:uR', 'N', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', 'PF:noi', '-SPEC:R', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', 'LF:we', '-SPEC:P', '-COMP:WH'}
voi             ['LANG:EN']
voi-            {'COMP:R/D', 'LANG:IT', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', '-COMP:C/fin', '-COMP:*', 'PF:voi', 'N', 'COMP:uR', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', 'LF:you_pl', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', '-SPEC:P', '-COMP:WH'}
loro            ['LANG:EN']
loro-           {'COMP:R/D', 'LANG:IT', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', '-COMP:C/fin', 'PF:loro', '-COMP:*', 'COMP:uR', 'N', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', '-SPEC:P', 'LF:they', '-COMP:WH'}
mi              ['LANG:EN']
mi-             {'COMP:R/D', 'LANG:IT', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', 'LF:me', '-COMP:C/fin', '-COMP:*', 'COMP:uR', 'N', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', '-COMP:V', 'PF:mi(cl)', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', 'CL', '-SPEC:P', '-COMP:WH'}
la              ['LANG:EN']
la-             {'COMP:R/D', 'LANG:IT', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', 'PF:la(cl)', '-COMP:N', 'LF:her', 'COMP:P', 'SPEC:A', '-COMP:C/fin', '-COMP:*', 'COMP:uR', 'N', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', 'CL', '-SPEC:P', '-COMP:WH'}
lo              ['LANG:EN']
lo-             {'LF:him', 'COMP:R/D', 'LANG:IT', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', '-COMP:C/fin', 'PF:lo(cl)', '-COMP:*', 'COMP:uR', 'N', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', 'CL', '-SPEC:P', '-COMP:WH'}
si              ['LANG:EN']
si-             {'COMP:R/D', 'LANG:IT', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', 'LF:3sg', '-COMP:N', 'COMP:P', 'SPEC:A', '-COMP:C/fin', '-COMP:*', 'COMP:uR', 'N', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', 'PF:si(cl)', 'CAL:CL', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', '-SPEC:P', '-COMP:WH'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'COMP:R/D', 'LANG:IT', 'COMP:R', '-SPEC:uWH', '-COMP:v', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', '-COMP:C/fin', '-COMP:*', 'COMP:uR', 'N', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', 'COMP:T/prt', 'PHI_N', '-SPEC:V', '-SPEC:R', 'LF:there', '-COMP:V', '-COMP:A', '-COMP:VA/inf', 'COMP:D/rel', '-SPEC:N', '-SPEC:P', 'PF:ci', '-COMP:WH'}
[-n]            {'PHI:DET:DEF', 'PHI:PER:1', 'PHI', 'PHI:NUM:SG', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI'}
[-t]            {'PHI:DET:DEF', 'PHI:PER:2', 'PHI', 'PHI:NUM:SG', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI'}
[-V]            {'PHI:PER:3', 'PHI', 'PHI:NUM:SG', 'inflectional', 'LANG:FI'}
[-mme]          {'PHI:DET:DEF', 'PHI:PER:1', 'PHI', 'PHI:NUM:PL', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI'}
[-mme]          {'PHI:PER:1', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'inflectional', 'PHI:DET:DEF', 'LANG:FI'}
[-tte]          {'PHI:DET:DEF', 'PHI:PER:2', 'PHI', 'PHI:NUM:PL', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI'}
[-vat]          {'PHI:PER:3', 'PHI', 'PHI:NUM:PL', 'inflectional', 'LANG:FI'}
[-ni]           {'PHI:DET:DEF', 'PHI:PER:1', 'PHI', 'PHI:NUM:SG', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI'}
[-si]           {'PHI:DET:DEF', 'PHI:PER:2', 'PHI', 'PHI:NUM:SG', 'inflectional', 'PHI:HUM:HUM', 'LANG:FI'}
[-nsa]          {'PHI:PER:3', 'PHI', 'PHI:NUM:SG', 'inflectional', 'LANG:FI'}
[-an]           {'PHI:DET:DET', 'PHI:PER:3', 'PHI', 'PHI:NUM:SG', 'inflectional', 'LANG:FI'}
[-nne]          {'PHI:PER:2', 'PHI:HUM:HUM', 'PHI:NUM:PL', 'inflectional', 'PHI:DET:DEF', 'LANG:FI'}
[-s]            {'PHI:PER:3', 'PHI:GEN:M', 'LANG:EN', 'PHI', 'PHI:NUM:SG', 'PHI:GEN:F', 'inflectional'}
[-0]            {'PHI:DET:DEF', 'PHI:PER:1', 'PHI:PER:3', 'PHI:GEN:N', 'PHI:NUM:SG', 'PHI:NUM:PL', 'LANG:EN', 'PHI', 'inflectional', 'PHI:PER:2'}
[-o]            {'LANG:IT', 'PHI:PER:1', 'PHI:DET:DEF', 'PHI', 'PHI:NUM:SG', 'inflectional', 'PHI:HUM:HUM'}
[-i]            {'LANG:IT', 'PHI:DET:DEF', 'PHI:PER:2', 'PHI', 'PHI:NUM:SG', 'inflectional', 'PHI:HUM:HUM'}
[-a]            {'LANG:IT', 'PHI:PER:3', 'PHI', 'PHI:NUM:SG', 'inflectional', 'PHI:DET:DEF'}
[-e]            {'LANG:IT', 'PHI:PER:3', 'PHI', 'PHI:NUM:SG', 'inflectional', 'PHI:DET:DEF'}
[-iamo]         {'LANG:IT', 'PHI:PER:1', 'PHI:DET:DEF', 'PHI', 'PHI:NUM:PL', 'inflectional', 'PHI:HUM:HUM'}
[-te]           {'LANG:IT', 'PHI:DET:DEF', 'PHI:PER:2', 'PHI', 'PHI:NUM:PL', 'inflectional', 'PHI:HUM:HUM'}
[-no]           {'LANG:IT', 'PHI:PER:3', 'PHI', 'PHI:NUM:PL', 'inflectional', 'PHI:DET:DEF'}
[-nom]          {'TAIL:FIN,ARG,VAL', 'adjoinable', 'LANG:EN', 'NOM', 'inflectional'}
[-par]          {'adjoinable', 'PAR', 'TAIL:ARG,-VAL', 'inflectional', 'LANG:FI'}
[-gen]          {'TAIL:INF,ARG', 'GEN', 'LANG:EN', 'inflectional', '-float'}
gen             {'TAIL:INF,ARG', 'GEN', 'LANG:EN', 'inflectional', '-float'}
[-n_acc]        {'inflectional', 'n-ACC', 'adjoinable', 'TAIL:*POL:NEG', 'TAIL:PHI', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI'}
[-t_acc]        {'inflectional', 'adjoinable', 't-ACC', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'LANG:FI'}
[-0_acc]        {'TAIL:ARG,ASP:BOUNDED', 'adjoinable', 'TAIL:*POL:NEG', 'TAIL:*PHI', 'inflectional', '0_ACC', 'LANG:FI'}
asp             {'ASP:BOUNDED', 'LANG:EN', 'inflectional'}
a'              {'LF:A', 'PF:a', 'LANG:X', 'a'}
b'              {'b', 'PF:b', 'LANG:X', 'LF:B'}
b''             {'b', 'LANG:EN', 'LF:B', '-COMP:c', 'PF:b'}
c''             {'LF:C', 'LANG:EN', 'SPEC:a', 'PF:c', 'c'}
c'              {'PF:c', 'c', 'LANG:X', 'LF:C'}
d'              {'LF:D', 'LANG:', 'PF:d', 'd'}
a''             ['LANG:EN']
x'              {'LF:X', 'LANG:X', 'x', 'PF:x'}
y'              {'LANG:X', 'y', 'LF:Y', 'PF:y'}
z'              {'LF:Z', 'z', 'LANG:X', 'PF:x'}
John'           {'LF:John', 'PF:John', 'LANG:X', "N'"}
admires'        {'PF:admires', "V'", 'LF:admires', 'LANG:X'}
admires''       {'PF:admires', 'SPEC:TO/inf', '-COMP:v', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'V', '-COMP:V', 'PHI:DET:_', 'SPEC:P', 'PHI:GEN:_', 'SPEC:D', 'LF:admires', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'ASP', 'SPEC:ADV', 'PHI:PER:_'}
Mary'           {'PF:Mary', 'LANG:X', "N'", 'LF:mary'}
T/fin           {'-COMP:INF', 'T', 'SPEC:*', 'SPEC:TO/inf', 'COMP:T/prt', 'PF:T', '-SPEC:C', 'T/fin', '-SPEC:V', '-SPEC:v', 'LANG:EN', '!COMP:*', '!PROBE:V', 'VAL', '-COMP:T/fin', 'PHI:DET:_', 'PHI:GEN:_', '!SPEC:*', 'SPEC:C/fin', 'SPEC:D', 'LF:T', '-SPEC:Neg', 'FIN', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:PER:_', 'COMP:V', 'SPEC:FORCE', '-SPEC:TO/inf', 'COMP:v', '-SPEC:N'}
v               {'PHI:GEN:_', 'LF:v', 'SPEC:D', 'ARG', 'PHI:NUM:_', '!PROBE:V', 'PHI:PER:_', '-VAL', 'LANG:EN', 'v', 'PF:v', 'COMP:V', 'ASP', '!COMP:*', '-SPEC:N', 'PHI:DET:_'}
C/fin           {'SPEC:*', '-SPEC:C/fin', '-ARG', '-COMP:T/prt', 'C/fin', '!PROBE:FIN', 'LANG:EN', '!COMP:*', 'COMP:T/fin', 'LF:C/fin', 'C', 'VAL', '-COMP:C/fin', 'COMP:Neg/fin', 'FIN', '-SPEC:T/fin', '-SPEC:N', 'PF:C'}
T               {'T', 'SPEC:*', 'COMP:T/prt', 'PF:T', '-SPEC:V', 'LANG:EN', '-COMP:NEG', '!COMP:*', '!PROBE:V', 'VAL', 'PHI:DET:_', 'PHI:GEN:_', 'SPEC:D', 'LF:T', 'FIN', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:PER:_', 'COMP:V', 'COMP:v', '-SPEC:N'}
T/prt           {'T', '-SPEC:C/fin', 'SPEC:*', 'COMP:D', 'T/prt', 'COMP:T/prt', 'PF:T/prt', '-SPEC:V', 'LANG:EN', '-COMP:NEG', '!COMP:*', '!PROBE:V', 'VAL', 'PHI:DET:_', 'PHI:GEN:_', 'LF:T/prt', 'SPEC:D', 'FIN', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:PER:_', 'COMP:V', 'COMP:v', '-SPEC:N'}
a0              {'TAIL:D', 'PF:A', '-adjoinable', 'COMP:0', '-SPEC:D', 'LF:A', 'A', 'LANG:EN', '-SPEC:A'}
n               {'COMP:R/D', 'SPEC:*', 'COMP:R', 'LF:n', '-SPEC:uWH', '-COMP:v', '!SPEC:D', 'n', '-SPEC:INF', '-COMP:N', 'COMP:P', 'SPEC:A', '!COMP:*', 'VAL', '-COMP:C/fin', 'PF:n', 'PHI:GEN:_', 'COMP:uR', 'N', 'COMP:C', '-SPEC:T/fin', 'ARG', '-SPEC:FORCE', 'COMP:V', 'PHI:PER:_', '-SPEC:ADV', '-COMP:AUX', '-SPEC:C/fin', 'COMP:0', 'COMP:T/prt', '-SPEC:V', '-SPEC:R', 'LANG:EN', '-COMP:V', 'PHI:DET:_', '-COMP:A', '!SPEC:*', 'INF', '-COMP:VA/inf', 'COMP:D/rel', 'PHI:NUM:_', '-SPEC:N', 'COMP:v', '-SPEC:P', '-COMP:WH'}
impass          {'PHI:GEN:_', 'SPEC:D', 'ARG', 'LF:impass', '!PROBE:V', 'PHI:NUM:_', 'PHI:PER:_', '-VAL', 'LANG:EN', 'v', 'COMP:V', 'PF:impass', 'ASP', '!COMP:*', '-SPEC:N', 'PHI:DET:_'}
cau             {'PF:Cau', 'PHI:GEN:_', 'LF:v/Cause', 'SPEC:D', 'ARG', 'PHI:NUM:_', '!PROBE:V', 'PHI:PER:_', '-VAL', 'LANG:EN', 'v', 'COMP:V', 'ASP', '-SPEC:N', '!COMP:*', 'PHI:DET:_'}
INF             {'-COMP:C/fin', 'LF:INF', '-COMP:FORCE', 'INF', '-SPEC:T/fin', '-SPEC:V', 'COMP:V', 'LANG:EN', 'PF:INF', 'COMP:v', '!COMP:*', '-COMP:T/fin'}
prtcpl          {'T', 'SPEC:*', '-SPEC:C/fin', 'COMP:D', '-COMP:FORCE', 'T/prt', 'COMP:T/prt', 'PF:T/prt', '-SPEC:V', 'LANG:EN', '-COMP:NEG', '!COMP:*', '!PROBE:V', 'VAL', '-COMP:C/fin', '-COMP:T/fin', 'PHI:DET:_', 'PHI:GEN:_', 'LF:T/prt', 'SPEC:D', 'INF', 'FIN', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:PER:_', 'COMP:V', 'COMP:v', '-SPEC:N'}
TO/inf          {'TO/inf', 'PF:TO/inf', 'LF:TO/inf', '-COMP:FORCE', '?ARG', '-SPEC:v', 'adjoinable', '-SPEC:V', '-VAL', 'LANG:EN', '!COMP:*', '-COMP:T/fin', '-COMP:C/fin', 'INF', '-SPEC:T/fin', 'COMP:V', 'COMP:v', '!COMP:V'}
A/inf           {'SPEC:*', '-COMP:FORCE', '?ARG', '-SPEC:Neg/fin', '-SPEC:V', 'LANG:EN', 'A/inf', '!COMP:*', 'PF:A/inf', '-COMP:T/fin', '-COMP:C/fin', 'LF:A/inf', 'INF', '-SPEC:T/fin', 'COMP:V', 'COMP:v', '?VAL'}
ARE/inf         {'-adjoinable', 'SPEC:*', '-COMP:FORCE', '?ARG', '-SPEC:V', 'LANG:EN', '!COMP:*', '-COMP:T/fin', '-COMP:C/fin', 'VAL', 'PF:are', 'LF:ARE/inf', 'INF', 'ARE/inf', '-SPEC:T/fin', 'COMP:V', 'COMP:v'}
ESSA/inf        {'SPEC:*', 'TAIL:T', '-COMP:FORCE', '?ARG', '-SPEC:Neg/fin', 'adjoinable', '-SPEC:V', 'ADV', 'LANG:EN', '!COMP:*', '-COMP:T/fin', '-COMP:C/fin', 'INF', 'PF:essa', '-SPEC:T/fin', '-SPEC:FORCE', 'ESSA/inf', 'LF:while', 'COMP:V', '-SPEC:N', 'COMP:v', '?VAL'}
TUA/inf         {'SPEC:*', 'TAIL:T', '-COMP:FORCE', 'PF:tua', 'LF:after', '-SPEC:Neg/fin', 'adjoinable', '-SPEC:V', 'ADV', 'LANG:EN', '!COMP:*', 'TUA/inf', 'VAL', '-COMP:C/fin', '-COMP:T/fin', 'PHI:DET:_', 'PHI:GEN:_', '!SPEC:*', 'INF', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:PER:_', 'COMP:V', '-SPEC:N', 'COMP:v'}
VA/inf          {'SPEC:*', '-COMP:FORCE', '-SPEC:V', 'LANG:EN', '!COMP:*', '-COMP:T/fin', '-COMP:C/fin', 'VAL', 'LF:VA', 'PHI:DET:_', '!SPEC:*', 'PHI:GEN:_', 'INF', 'ARG', '-SPEC:T/fin', 'PHI:NUM:_', 'PHI:PER:_', 'COMP:V', '-SPEC:N', 'PF:vAn', 'VA/inf', 'COMP:v'}
MA/ssa          {'PF:massa', '-SPEC:Neg/fin', 'adjoinable', 'ADV', '-VAL', 'LANG:EN', 'MA/ssa', 'PHI:DET:_', 'PHI:GEN:_', 'LF:in_doing', 'MA/inf', '-SPEC:*', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', 'PHI:PER:_', 'COMP:V', 'COMP:v', '-SPEC:N', 'TAIL:V'}
MA/tta          {'PHI:GEN:_', 'MA/inf', 'TAIL:T', 'PF:matta', 'ARG', '-SPEC:T/fin', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:FORCE', 'ADV', '-VAL', 'LANG:EN', '-SPEC:N', 'PHI:NUM:_', 'PHI:PER:_', 'LF:without_doing', 'PHI:DET:_'}
MA/lla          {'TAIL:T', 'LF:by_doing', 'adjoinable', '-VAL', 'PHI:GEN:_', 'PF:malla', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'COMP:V', 'PHI:PER:_', '-SPEC:Neg/fin', 'ADV', 'LANG:EN', 'PHI:DET:_', 'MA/inf', 'PHI:NUM:_', 'COMP:v', '-SPEC:N'}
MA/inf          {'adjoinable', '-VAL', 'PHI:GEN:_', 'PF:maan', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'COMP:V', 'PHI:PER:_', 'TAIL:V', '-SPEC:Neg/fin', 'ADV', 'LANG:EN', 'PHI:DET:_', 'MA/inf', 'LF:to_do', 'PHI:NUM:_', 'COMP:v', '-SPEC:N'}
E/inf           {'PF:en', 'SPEC:*', 'TAIL:T', '-ARG', 'LF:by', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:FORCE', 'adjoinable', '-VAL', 'ADV', '-SPEC:N', 'LANG:FI'}
BE-             {'SPEC:TO/inf', '-ARG', '-COMP:v', 'COMP:T/prt', '-COMP:N', 'COMP:P', '-VAL', 'LANG:EN', 'V', '-COMP:V', '!COMP:*', '-COMP:T/fin', 'LF:BE', 'SPEC:P', 'SPEC:D', 'COPULA', 'PF:BE', '-SPEC:T/fin', '-SPEC:FORCE', 'ASP', 'SPEC:ADV'}
D               {'OP', '-ARG', '-COMP:P', '-SPEC:INF', '-SPEC:C', '-SPEC:V', '-SPEC:Neg/fin', 'adjoinable', 'LANG:EN', '!PROBE:N', 'D', '!COMP:*', '-COMP:uR', '-COMP:T/fin', 'LF:D', '-SPEC:MA/lla', '-SPEC:T/fin', 'PF:D', 'COMP:N', '-COMP:D', '-SPEC:P'}
D/rel           {'OP', '-ARG', 'OP:_', '-SPEC:INF', '-SPEC:C', '-SPEC:V', 'adjoinable', 'OP:REL', '-SPEC:Neg/fin', 'LANG:EN', 'D/rel', '!PROBE:N', '-SPEC:P', '!COMP:*', 'D', '-COMP:uR', 'inflectional', '-COMP:T/fin', '-COMP:C/fin', '-SPEC:MA/lla', '-SPEC:T/fin', 'COMP:N', '-COMP:D', 'LF:D/rel', 'PF:D/rel'}
P               {'P', '-SPEC:C/fin', '-SPEC:iWH', 'COMP:D', '-COMP:T', 'PF:P', '-SPEC:INF', '-SPEC:C', '-COMP:N', '-SPEC:iR', 'adjoinable', '-SPEC:Neg/fin', '-VAL', 'LANG:EN', '-SPEC:V', '-SPEC:v', '!COMP:*', 'LF:P', '-COMP:uWH', '-float', '-COMP:T/fin', 'PHI:DET:_', '-COMP:A', 'PHI:GEN:_', '-SPEC:*', '-COMP:ADV', 'ARG', '-SPEC:T/fin', '-SPEC:FORCE', 'PHI:NUM:_', '-SPEC:N', 'PHI:PER:_', '-SPEC:ADV', '-SPEC:P'}
pro             ['LANG:EN']
pro-            {'LF:pro', 'COMP:R/D', '-SPEC:C/fin', 'COMP:R', '-SPEC:uWH', '-COMP:v', 'COMP:T/prt', '-SPEC:INF', '-COMP:N', 'COMP:P', '-SPEC:V', '-SPEC:R', 'LANG:EN', 'PHI', 'SPEC:A', '-COMP:V', '-SPEC:P', '-COMP:C/fin', '-COMP:A', 'COMP:uR', 'N', '-COMP:VA/inf', 'COMP:D/rel', 'COMP:C', '-SPEC:T/fin', '-SPEC:FORCE', '-SPEC:N', '-SPEC:ADV', '-COMP:AUX', 'PF:(pro)', '-COMP:WH'}
cl              {'inflectional', 'RIGHT:PRG', 'LEFT:D,CL', 'LEFT:T/fin', 'LANG:EN', 'CL', 'RIGHT:ARE/inf'}
inc             {'INCORPORATED', 'inflectional', 'LANG:EN'}
sg              {'PHI:NUM:SG', 'inflectional', 'LANG:EN'}
pl              {'PHI:NUM:PL', 'inflectional', 'LANG:EN'}
1p              {'PHI:PER:1', 'inflectional', 'LANG:EN'}
2p              {'LANG:EN', 'inflectional', 'PHI:PER:2'}
3p              {'PHI:PER:3', 'inflectional', 'LANG:EN'}
def             {'LANG:EN', 'inflectional', 'PHI:DET:DEF'}
indef           {'PHI:DET:INDEF', 'inflectional', 'LANG:EN'}
hum             {'LANG:EN', 'inflectional', 'PHI:HUM:HUM'}
nonhum          {'PHI:HUM:NONHUM', 'inflectional', 'LANG:EN'}
m               {'PHI:GEN:M', 'inflectional', 'LANG:EN'}
f               {'PHI:GEN:F', 'inflectional', 'LANG:EN'}
nom             {'TAIL:FIN,!COMP:*,VAL', 'NOM', 'inflectional', 'LANG:EN'}
acc             {'ACC', 'inflectional', 'LANG:EN', 'TAIL:v'}
dat             {'LANG:EN', 'inflectional', 'DAT', 'TAIL:v'}
uC/op           {'LANG:EN', 'inflectional', 'uC/op'}
wh              {'OP:_', 'OP:WH', 'inflectional', 'LANG:EN'}
wh_             {'OP', 'LANG:EN', 'FORCE:OP:WH', 'OP:_', 'inflectional'}
top             {'OP:TOP', 'inflectional', 'LANG:EN'}
foc             {'OP:FOC', 'inflectional', 'LANG:EN'}
C/op            {'inflectional', 'LANG:EN', 'OP:C/OP'}
Q               {'inflectional', 'OP', 'LANG:EN', 'OP:Q', 'OP:WH'}
