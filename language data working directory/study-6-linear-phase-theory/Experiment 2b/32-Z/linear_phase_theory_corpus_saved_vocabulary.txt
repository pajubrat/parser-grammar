ï»¿dummy        {'LANG:EN', 'dummy'}
a               {'-SPEC:C/fin', '-ARG', '-SPEC:P', '-COMP:ADV', '-SPEC:v', '-SPEC:*', '-COMP:T/fin', '-SPEC:iWH', '-SPEC:FORCE', '-SPEC:iR', '-COMP:N', '-VAL', '-SPEC:INF', '-SPEC:V', 'P', 'COMP:ARE/inf', 'PF:a', 'LANG:IT', '-COMP:uWH', 'adjoinable', 'TAIL:V', '-SPEC:T/fin', '-SPEC:Neg/fin', 'COMP:D', 'LF:to', '-SPEC:N', '-SPEC:ADV', '!COMP:*', '-SPEC:C'}
a_D             {'-ARG', '-SPEC:P', 'PF:D', '-SPEC:MA/lla', 'OP', '-COMP:T/fin', '-COMP:D', 'LF:D', '-COMP:uR', 'D', '-SPEC:INF', '-SPEC:V', 'LANG:EN', '!PROBE:N', 'COMP:N', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C'}
admire          ['LANG:EN']
admire'         ['LANG:EN']
admires         ['LANG:EN']
admire-         {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:Neg', '-COMP:T/fin', 'PHI:GEN:_', 'PHI:DET:_', '-SPEC:FORCE', '-COMP:P', 'ARG', '-COMP:N', '-VAL', 'PF:admire', 'COMP:P', '-COMP:V', 'LANG:EN', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', '-SPEC:Neg', 'ASP', 'COMP:D', 'PHI:PER:_', 'CLASS:TR', 'SPEC:ADV', '!COMP:*', 'LF:admire'}
admire*         ['LANG:EN']
T/fin*          {"PF:T/fin'", 'LANG:EN', '!SPEC:*', 'NO_NUMBER', 'NO_DET', 'CAT:T/fin', 'LF:T', '-VAL'}
v*              {'LANG:EN', 'LF:v', 'PF:v', 'CAT:v', 'NO_NUMBER', 'NO_DET', '-VAL'}
admire**        ['LANG:EN']
T/fin**         {'PHI:PER:3', 'LANG:EN', "PF:T/fin''", '!SPEC:*', 'NO_NUMBER', 'NO_DET', 'CAT:T/fin', 'LF:T', '-VAL', 'NO_PERSON'}
adoro           ['LANG:IT']
adori           ['LANG:IT']
adora           ['LANG:IT']
adoriamo        ['LANG:IT']
adorate         ['LANG:IT']
adorano         ['LANG:IT']
adora-          {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', 'SPEC:TO/inf', 'LANG:IT', 'LF:admire', '-SPEC:T/fin', 'V', 'ASP', 'COMP:D', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:ADV', 'PF:adora'}
antaa           ['LANG:FI']
anta-           {'SPEC:P', 'PHI:NUM:_', '-COMP:v', 'PF:antaa', 'PHI:PER:_', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', '-COMP:FIN', 'ARG', '-COMP:N', 'CLASS:DITR', 'SPEC:D', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', '+SEM:directional', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'COMP:D', 'ASP:BOUNDED', 'SPEC:ADV', '!COMP:*', 'LF:give'}
antoi           ['LANG:FI']
asks            ['LANG:EN']
ask'            {'SEM:internal', 'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:GEN:_', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', 'SPEC:D', '-VAL', 'COMP:P', '-COMP:V', 'LF:ask', 'LANG:EN', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'COMP:D', 'PHI:PER:_', 'PF:ask', 'SPEC:ADV'}
ask-            {'SEM:internal', 'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:GEN:_', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', 'SPEC:D', '-VAL', 'COMP:P', '-COMP:V', 'LF:ask', 'LANG:EN', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'COMP:D', 'PHI:PER:_', 'PF:ask', 'SPEC:ADV'}
avain_0acc      ['LANG:EN']
avain_nom       ['LANG:EN']
avain           ['LANG:EN']
avaimen_acc     ['LANG:EN']
avaimen         ['LANG:EN']
avaimet         ['LANG:EN']
avainta         ['LANG:EN']
avain-          {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', 'PF:avain', '-SPEC:FORCE', '-SEM:directional', 'LF:key', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
auton           ['LANG:FI']
auto            ['LANG:FI']
auto-           {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-SEM:directional', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', 'PF:auto', '-SPEC:T/fin', 'N', 'SPEC:A', 'LF:car', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
city            {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'PF:city', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', 'LANG:EN', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', '-SPEC:ADV', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', 'LF:city', '-SPEC:uWH'}
che             ['LANG:IT']
che-            {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', 'LF:who', 'LANG:IT', '-COMP:WH', 'PF:che', '-COMP:*', '-SPEC:T/fin', 'PHI_N', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
chiamato        ['LANG:IT']
chiamata-       {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', '-VAL', 'COMP:P', 'LF:called', 'PF:chiamato', '-COMP:V', 'SPEC:TO/inf', 'LANG:IT', '-SPEC:T/fin', 'V', 'ASP', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:ADV'}
danno           {'-SPEC:C/fin', '-SPEC:P', 'PF:danno', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-COMP:WH', '-SPEC:ADV', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', 'LF:damage', '-SPEC:uWH'}
del             ['LANG:IT']
della           ['LANG:IT']
detesto         ['LANG:IT']
detesto         ['LANG:IT']
detest-         {'SEM:internal', 'PF:detest', 'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', '-VAL', 'LF:detest', 'COMP:P', '-COMP:V', 'COMP:ARE/inf', 'SPEC:TO/inf', 'LANG:IT', '-SPEC:T/fin', 'V', 'ASP', 'COMP:D', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:ADV'}
devono          ['LANG:EN']
deva-           {'-ASP', 'SEM:internal', 'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'LF:must', 'PHI:DET:_', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', '-COMP:N', 'SPEC:D', '-VAL', 'COMP:P', '-COMP:V', 'COMP:ARE/inf', 'SPEC:TO/inf', 'LANG:IT', '-SPEC:T/fin', 'V', 'PHI:PER:_', 'PHI:GEN:_', 'PF:deva'}
di              {'-SPEC:C/fin', '-SPEC:P', '-COMP:ADV', '-SPEC:v', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:T/fin', '-adjoinable', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:FORCE', '-SPEC:iR', 'ARG', '-COMP:N', '-VAL', 'SPEC:*', '-SPEC:INF', 'LANG:FI', '-SPEC:V', 'P', 'PF:di', '-SPEC:ADV', '-COMP:uWH', '-SPEC:T/fin', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:N', '-SPEC:C', '!COMP:*', 'LF:of'}
does            {'PHI:PER:3', 'PHI:NUM:SG', '-SPEC:FORCE', 'VAL', 'ARG', 'SPEC:D', '-COMP:INF', 'SPEC:*', '-SPEC:V', 'LANG:EN', 'T/fin', '-SPEC:T/fin', '-SPEC:Neg', '-SPEC:N', 'PHI:PER:_', 'PHI:GEN:_', 'T', '-SPEC:C', '-SPEC:C/fin', 'PHI:NUM:_', 'FIN', '!PROBE:V', '-COMP:T/fin', 'COMP:v', 'PHI:DET:_', '-SPEC:TO/inf', '!COMP:*', 'SPEC:TO/inf', 'LF:does', 'PF:does', 'COMP:T/prt', '!SPEC:D', 'COMP:V', 'PHI:GEN:M', 'PHI:GEN:F', 'COMP:Neg', '-SPEC:v'}
does_C          ['LANG:EN']
does-           {'PHI:PER:3', 'PHI:NUM:SG', '-SPEC:FORCE', 'VAL', 'ARG', 'SPEC:D', '-COMP:INF', 'SPEC:*', '-SPEC:V', 'LANG:EN', 'T/fin', '-SPEC:T/fin', '-SPEC:Neg', '-SPEC:N', 'PHI:PER:_', 'PHI:GEN:_', 'T', '-SPEC:C', '-SPEC:C/fin', 'PHI:NUM:_', 'FIN', '!PROBE:V', '-COMP:T/fin', 'COMP:v', 'PHI:DET:_', '-SPEC:TO/inf', '!COMP:*', 'SPEC:TO/inf', 'LF:does', 'PF:does', 'COMP:T/prt', '!SPEC:D', 'COMP:V', 'PHI:GEN:M', 'PHI:GEN:F', 'COMP:Neg', '-SPEC:v'}
dorme           ['LANG:IT']
dorme-          {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', 'LF:sleep', '-VAL', 'COMP:P', '-COMP:V', 'LANG:EN', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'PF:dorme', 'ASP', '!SPEC:D', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:ADV'}
e               ['LANG:IT']
en              ['LANG:FI']
et              ['LANG:FI']
ei              ['LANG:FI']
emme            ['LANG:FI']
ette            ['LANG:FI']
eivat           ['LANG:FI']
ei'             {'SEM:internal', '!SPEC:*', 'FIN', 'POL:NEG', 'PHI:NUM:_', 'PHI:PER:_', 'LF:neg', 'PHI:DET:_', '%SPEC:INF', 'VAL', 'ARG', '-SPEC:T', 'SPEC:*', 'LANG:FI', 'Neg/fin', 'COMP:T/prt', '-SPEC:T/fin', 'PF:ei', '!COMP:T', '!COMP:*', 'NEG'}
e-              {'SEM:internal', '!SPEC:*', 'FIN', 'POL:NEG', 'PHI:NUM:_', 'PHI:PER:_', 'LF:neg', 'PHI:DET:_', '%SPEC:INF', 'VAL', 'ARG', '-SPEC:T', 'SPEC:*', 'LANG:FI', 'Neg/fin', 'COMP:T/prt', '-SPEC:T/fin', 'PF:ei', '!COMP:T', '!COMP:*', 'NEG'}
elaa            ['LANG:FI']
ela-            {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', '-COMP:D', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', 'SPEC:D', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', 'SPEC:TO/inf', 'CLASS:INTR', '-COMP:MA/inf', '-SPEC:T/fin', 'V', 'ASP', 'PF:elaa', 'PHI:PER:_', 'SPEC:ADV', 'LF:live'}
etsii           ['LANG:FI']
etsi-           {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', '!COMP:D', 'SPEC:TO/inf', 'LF:search', '-SPEC:T/fin', 'V', 'ASP', 'COMP:D', 'PHI:PER:_', 'PF:etsi', 'SPEC:ADV'}
etta            {'LANG:FI', 'FORCE', '-ARG', 'LF:that', '!PROBE:T/fin', 'FIN', 'PF:etta', '-SPEC:*', 'COMP:C/fin', '!COMP:*', '-VAL', 'COMP:T/fin'}
flow'           {'SPEC:P', 'PHI:NUM:_', '-COMP:v', 'PF:flow', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', 'SPEC:D', '-VAL', 'COMP:P', '-COMP:V', 'LANG:EN', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:ADV', 'LF:flow'}
from            {'-SPEC:C/fin', '-SPEC:P', '-COMP:ADV', '-SPEC:v', 'PHI:NUM:_', '-SPEC:*', 'PHI:PER:_', '-COMP:T/fin', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:FORCE', '-SPEC:iR', 'LF:from', 'ARG', '-COMP:N', '-VAL', '-SPEC:INF', '-SPEC:V', 'P', 'LANG:EN', '-float', '-SPEC:ADV', '-COMP:uWH', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:N', 'PHI:GEN:_', 'TAIL:V,+SEM:directional', '!COMP:*', 'PF:from', '-SPEC:C'}
gave            ['LANG:EN']
give-           {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', '-COMP:FIN', 'ARG', '-COMP:N', 'CLASS:DITR', 'SPEC:D', '-VAL', 'COMP:P', '-COMP:V', '+SEM:directional', 'LANG:EN', 'PF:give', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'COMP:D', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:ADV', '!COMP:*', 'LF:give'}
Giuseppe        ['LANG:IT']
Giuseppe-       {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-SEM:directional', 'LF:Giuseppe', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-COMP:WH', '-SPEC:T/fin', 'N', 'SPEC:A', 'PF:Giuseppe', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
haluaa          ['LANG:FI']
halusi          ['LANG:FI']
halusimme       ['LANG:FI']
haluan          ['LANG:FI']
halua           ['LANG:FI']
haluamalla      ['LANG:FI']
haluttiin       ['LANG:FI']
haluttu         ['LANG:FI']
halua-          {'SEM:internal', 'SPEC:P', 'PHI:NUM:_', '-COMP:v', 'PHI:PER:_', '-SPEC:*', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', '-COMP:P', 'ARG', '-COMP:N', '-VAL', 'COMP:A/inf', 'COMP:P', '-COMP:V', 'LANG:FI', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'LF:want', 'PF:haluaa', 'COMP:D', 'ASP:BOUNDED', 'CLASS:TR', 'SPEC:ADV', '!COMP:*'}
hairitsee       ['LANG:FI']
hairitse-       {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'LF:disturb', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', 'SPEC:D', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', '!COMP:D', 'PF:hairitsee', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'PHI:PER:_', 'SPEC:ADV', '-COMP:FIN'}
hanno           ['LANG:IT']
ho              ['LANG:IT']
ha-             {'LF:have', '-ASP', 'SEM:internal', 'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', 'SPEC:D', '-VAL', 'SPEC:*', 'COMP:P', '-COMP:V', 'SPEC:TO/inf', 'LANG:IT', 'PF:ha', '-SPEC:T/fin', 'V', 'COMP:T', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:ADV'}
havisivat       ['LANG:FI']
haviavan        ['LANG:FI']
havisi          ['LANG:FI']
havia-          {'LF:disappear', 'SPEC:P', 'PHI:NUM:_', '-COMP:v', 'PHI:PER:_', '-COMP:T/fin', '-COMP:D', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', 'SPEC:D', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', 'SPEC:TO/inf', 'CLASS:INTR', '-COMP:MA/inf', '-SPEC:T/fin', 'V', 'ASP', 'PF:havia', 'SPEC:ADV'}
ihailen         ['LANG:FI']
ihaili          ['LANG:FI']
ihailet         ['LANG:FI']
ihailee         ['LANG:FI']
ihailemme       ['LANG:FI']
ihailette       ['LANG:FI']
ihailevat       ['LANG:FI']
ihailevansa     ['LANG:FI']
ihailemassa     ['LANG:FI']
ihailtua        ['LANG:FI']
ihaile          ['LANG:FI']
ihaillut        ['LANG:FI']
ihailla         ['LANG:FI']
ihailemalla     ['LANG:FI']
ihaile-         {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', '-COMP:P', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', '!COMP:D', 'SPEC:TO/inf', 'PF:ihaile-', '-SPEC:T/fin', 'V', 'ASP', 'COMP:D', 'PHI:PER:_', 'CLASS:TR', 'SPEC:ADV', '!COMP:*', 'LF:admire', '-COMP:FIN'}
il              {'-ARG', '-SPEC:P', '-SPEC:MA/lla', 'OP', '-COMP:T/fin', '-COMP:D', 'PF:il', '-COMP:uR', 'D', '-SPEC:INF', '-SPEC:V', '!PROBE:N', 'LANG:IT', 'COMP:N', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LF:the', '!COMP:*', '-SPEC:C'}
i               {'-ARG', '-SPEC:P', '-SPEC:MA/lla', 'OP', '-COMP:T/fin', '-COMP:D', 'PF:il', '-COMP:uR', 'D', '-SPEC:INF', '-SPEC:V', '!PROBE:N', 'LANG:IT', 'COMP:N', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LF:the', '!COMP:*', '-SPEC:C'}
in              {'-SPEC:C/fin', '-SPEC:P', '-COMP:ADV', '-SPEC:v', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:T/fin', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:FORCE', '-SPEC:iR', 'ARG', '-COMP:N', '-VAL', '-SPEC:INF', '-SPEC:V', 'P', 'LF:in', 'LANG:IT', '-COMP:uWH', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', 'PF:in', 'COMP:D', '-SPEC:N', 'PHI:GEN:_', '-SPEC:ADV', '!COMP:*', '-SPEC:C'}
infermieri      {'LF:nurses', '-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', 'PF:infermieri', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-COMP:WH', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
is              ['LANG:EN']
be-             {'LF:be', '-ARG', 'SPEC:P', 'PF:be', '-COMP:v', '-COMP:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:D', '-VAL', 'COPULA', 'COMP:P', '-COMP:V', 'LANG:EN', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', '-COMP:TO/inf', 'ASP', 'SPEC:ADV', '!COMP:*'}
istuuko         ['LANG:FI']
istuu-          {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', '-COMP:D', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', 'SPEC:D', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', 'LF:sit', 'SPEC:TO/inf', 'CLASS:INTR', '-COMP:MA/inf', '-SPEC:T/fin', 'PF:istuu', 'V', 'ASP', 'PHI:PER:_', 'SPEC:ADV'}
John            ['LANG:EN']
John-           {'-SPEC:C/fin', 'LF:John', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-adjoinable', '-SPEC:FORCE', '-SEM:directional', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', 'LANG:EN', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', 'PF:John', '-SPEC:uWH'}
joka            ['LANG:FI']
jota            ['LANG:FI']
joka-           {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', 'PF:joka', '-COMP:AUX', 'COMP:P', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', 'LF:who', '-SPEC:INF', '-COMP:WH', '-COMP:*', '-SPEC:T/fin', 'PHI_N', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
Jukka           ['LANG:FI', '-SEM:directional', 'LANG:FI']
Jukkaa          ['LANG:FI', '-SEM:directional']
Jukka-          {'-SPEC:C/fin', '-SPEC:P', 'PF:Jukka', '-COMP:v', 'LF:Jukka', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-SEM:directional', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
juosten         ['LANG:FI']
juokse-         {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', 'PF:juokse-', 'LANG:FI', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'LF:run', 'PHI:PER:_', 'SPEC:ADV'}
istuu           ['LANG:FI']
istu-           {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', 'LF:sit', 'SPEC:TO/inf', '-SPEC:T/fin', 'PF:istuu', 'V', 'ASP', 'PHI:PER:_', 'SPEC:ADV'}
kaksi           {'LANG:FI', 'NUM', 'PF:kaksi', 'PHI:NUM:_', 'LF:two', 'COMP:N', 'COMP:n', 'PHI:NUM:SG', 'PHI:DET:_', 'TAIL:ARG,VAL,FIN', 'ARG', 'PHI:PER:_', '-VAL', 'SPEC:*'}
kaksi           {'NUM', 'LANG:EN', 'PF:kaksi', 'LF:two', 'COMP:N', 'COMP:n', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'SPEC:*'}
kaksi_1         {'LANG:FI', 'NUM', 'PF:kaksi', 'PHI:NUM:_', 'LF:two', 'COMP:N', 'COMP:n', 'PHI:NUM:SG', 'PHI:DET:_', 'TAIL:ARG,VAL,FIN', 'ARG', 'PHI:PER:_', '-VAL', 'SPEC:*'}
kaksi_2         {'NUM', 'LANG:EN', 'PF:kaksi', 'LF:two', 'COMP:N', 'COMP:n', 'TAIL:*POL:NEG', 'TAIL:ARG,ASP:BOUNDED', 'SPEC:*'}
kahdet          ['LANG:FI']
kahden          ['LANG:FI']
kaksi-          {'LANG:FI', 'NUM', 'PF:kaksi', 'LF:two', 'SPEC:*', 'COMP:N', 'COMP:n'}
kaupunkia       ['LANG:EN']
kaupunki        {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:P', '-COMP:N', '-COMP:AUX', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', '-SPEC:ADV', 'PF:kaupunki', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', 'LF:city', '-SPEC:uWH'}
kaski           ['LANG:FI']
kaskee          ['LANG:FI']
kaske-          {'SPEC:P', 'LF:order', '-COMP:v', 'PHI:NUM:_', '-COMP:T/fin', 'SEM:external', 'PHI:DET:_', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', '!COMP:A/inf', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'PHI:PER:_', 'PF:kaske'}
kellon          ['LANG:FI']
kellon          ['LANG:FI']
kellon_n        ['LANG:FI']
kellon_N        ['LANG:FI']
kelloja         ['LANG:FI']
kello           ['LANG:FI']
kello-          {'PF:kello', '-SPEC:C/fin', 'LF:watch', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
kello0-         {'LANG:FI', 'PF:kello', '2SPEC', 'LF:watch', '0', 'SPEC:D'}
keta            ['LANG:FI']
kenen           ['LANG:FI']
key             {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-SPEC:uWH', 'LF:key', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', 'LANG:EN', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', 'PF:key'}
kirjan          ['LANG:FI']
kirjaa          ['LANG:FI']
kirja-          {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-SEM:directional', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', 'LF:book', '-COMP:WH', '-SPEC:T/fin', 'PF:kirja', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
kohti           {'-SPEC:C/fin', '-SPEC:P', '-COMP:ADV', '-SPEC:v', 'PF:kohti', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:T/fin', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:FORCE', '-SPEC:iR', 'ARG', '-COMP:N', '-VAL', 'SPEC:*', '-SPEC:INF', 'LANG:FI', '-SPEC:V', 'P', 'LF:towards', '-COMP:uWH', 'adjoinable', 'TAIL:V', '-SPEC:T/fin', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:N', '-SPEC:ADV', '!COMP:*', '-SPEC:C'}
koko            {'LF:all', '-ARG', '-SPEC:P', '-SPEC:MA/lla', 'OP', '-COMP:T/fin', '-COMP:D', 'TAIL:T', '-COMP:uR', 'D', '-SPEC:INF', 'LANG:FI', '-SPEC:V', '!PROBE:N', 'adjoinable', 'COMP:N', '-SPEC:T/fin', '-SPEC:Neg/fin', 'PF:koko', '!COMP:*', '-SPEC:C'}
kuka            ['LANG:FI']
kuka-           {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', 'LF:who', '-SPEC:INF', '-COMP:WH', 'PF:kuka', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', 'PHI', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
kuorsaa-        {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', '-COMP:D', 'PF:kuorsaa', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', 'SPEC:TO/inf', '-COMP:WH', '-SPEC:T/fin', 'V', 'ASP', 'LF:snore', 'PHI:PER:_', 'SPEC:ADV'}
kuorsaamalla    ['LANG:FI']
lahella         {'-SPEC:iWH', '-SPEC:FORCE', 'VAL', 'ARG', '-COMP:N', 'LF:near', 'SPEC:*', '-SPEC:INF', '-SPEC:V', '-COMP:C/fin', 'adjoinable', '-SPEC:T/fin', 'COMP:D', '-SPEC:N', 'PHI:PER:_', 'PF:lahella', '-SPEC:C', '-SPEC:C/fin', '-SPEC:P', '!SPEC:*', '-COMP:ADV', 'PHI:NUM:_', '-COMP:T/fin', 'COMP:v', 'PHI:DET:_', '-SPEC:iR', 'LANG:FI', 'INF', 'P', '-COMP:FORCE', '-COMP:uWH', '-SPEC:Neg/fin', '!SPEC:D', 'COMP:V', '-SPEC:ADV', '!COMP:*', '-SPEC:v'}
lahella         {'-SPEC:C/fin', '-SPEC:P', '-COMP:ADV', '-SPEC:v', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:T/fin', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:FORCE', '-SPEC:iR', 'ARG', '-COMP:N', 'LF:near', '-VAL', 'SPEC:*', '-SPEC:INF', 'LANG:FI', '-SPEC:V', '!COMP:D', 'P', '-COMP:uWH', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:N', '-SPEC:ADV', '!COMP:*', 'PF:lahella', '-SPEC:C'}
lahella_1       {'-SPEC:C/fin', '-SPEC:P', '-COMP:ADV', '-SPEC:v', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:T/fin', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:FORCE', '-SPEC:iR', 'ARG', '-COMP:N', 'LF:near', '-VAL', 'SPEC:*', '-SPEC:INF', 'LANG:FI', '-SPEC:V', '!COMP:D', 'P', '-COMP:uWH', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:N', '-SPEC:ADV', '!COMP:*', 'PF:lahella', '-SPEC:C'}
lahella_2       {'-SPEC:iWH', '-SPEC:FORCE', 'VAL', 'ARG', '-COMP:N', 'LF:near', 'SPEC:*', '-SPEC:INF', '-SPEC:V', '-COMP:C/fin', 'adjoinable', '-SPEC:T/fin', 'COMP:D', '-SPEC:N', 'PHI:PER:_', 'PF:lahella', '-SPEC:C', '-SPEC:C/fin', '-SPEC:P', '!SPEC:*', '-COMP:ADV', 'PHI:NUM:_', '-COMP:T/fin', 'COMP:v', 'PHI:DET:_', '-SPEC:iR', 'LANG:FI', 'INF', 'P', '-COMP:FORCE', '-COMP:uWH', '-SPEC:Neg/fin', '!SPEC:D', 'COMP:V', '-SPEC:ADV', '!COMP:*', '-SPEC:v'}
lahtee          ['LANG:FI']
lahtea          ['LANG:FI']
lahtemaan       ['LANG:FI']
lahtevan        ['LANG:FI']
lahtevansa      ['LANG:FI']
lahtevani       ['LANG:FI']
lahtemassa      ['LANG:FI']
lahtematta      ['LANG:FI']
lahtemalla      ['LANG:FI']
lahtiessa       ['LANG:FI']
lahtiessaan     ['LANG:FI']
lahdettyaan     ['LANG:FI']
lahdettya       ['LANG:FI']
lahde           ['LANG:FI']
lahti           ['LANG:FI']
lahte-          {'COMP:PP', 'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:D', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', 'SPEC:D', 'PF:lahtea', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', 'LF:leave', 'SPEC:TO/inf', 'CLASS:INTR', '-COMP:MA/inf', '-SPEC:T/fin', 'V', 'ASP', 'PHI:PER:_', 'SPEC:ADV'}
lavano          ['LANG:IT']
lava-           {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', 'LF:wash', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', 'SPEC:TO/inf', 'LANG:IT', 'PF:lava', 'V', '-SPEC:T/fin', 'ASP', 'COMP:D', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:ADV', '!COMP:*'}
lavato          ['LANG:IT']
lavata          ['LANG:IT']
lavare          ['LANG:IT']
lavati          ['LANG:IT']
lavando         ['LANG:IT']
lavo            ['LANG:IT']
lavi            ['LANG:IT']
lava            ['LANG:IT']
le              {'-ARG', '-SPEC:P', '-SPEC:MA/lla', 'OP', '-COMP:T/fin', '-COMP:D', 'LF:D', '-COMP:uR', 'D', '-SPEC:INF', '-SPEC:V', '!PROBE:N', 'LANG:IT', 'COMP:N', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', 'PF:le', '!COMP:*', '-SPEC:C'}
leaves          ['LANG:EN']
leave           {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', 'PF:leave', 'LANG:EN', 'LF:leave', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', '!SPEC:D', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:ADV'}
leave-          {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', 'PF:leave', 'LF:leave', 'LANG:EN', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', '!SPEC:D', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:ADV'}
like-           {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', '!COMP:D', 'LANG:EN', 'SPEC:TO/inf', '-SPEC:T/fin', 'PF:like', 'V', 'ASP', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:ADV', 'LF:like'}
likes           ['LANG:EN']
like            {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', '!COMP:D', 'LANG:EN', 'SPEC:TO/inf', '-SPEC:T/fin', 'PF:like', 'V', 'ASP', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:ADV', 'LF:like'}
little          ['LANG:EN']
little-         {'LF:little', '2SPEC', 'LANG:EN', 'PF:little-', '0', 'SPEC:D'}
lle             {'-SPEC:C/fin', '-SPEC:P', '-COMP:ADV', 'LF:for', '-SPEC:v', '-SPEC:*', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:PER:_', '-SPEC:iWH', 'PF:P(lle)', '-SPEC:FORCE', '-SPEC:iR', 'PHI:DET:_', 'ARG', '-COMP:N', '-VAL', '-SPEC:INF', 'LANG:FI', '+SEM:directional', '-SPEC:V', 'P', '-SPEC:ADV', '-COMP:uWH', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:N', 'TAIL:V,+SEM:directional', '!COMP:*', '-SPEC:C'}
lla             {'-SPEC:C/fin', '-SPEC:P', '-COMP:ADV', '-SPEC:v', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:T/fin', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:FORCE', '-SPEC:iR', 'TAIL:T', 'ARG', '-COMP:N', '-VAL', 'SPEC:*', '-SPEC:INF', 'LANG:FI', '-SPEC:V', 'P', 'LF:by', 'PF:P(lla)', 'adjoinable', '-COMP:uWH', '-SPEC:T/fin', '-SPEC:Neg/fin', 'TAIL:*V', 'COMP:D', '-SPEC:N', '-SPEC:ADV', '!COMP:*', '-SPEC:C'}
Luisa           ['LANG:IT']
Luisa-          {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-SEM:directional', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', 'PF:Luisa', 'LANG:IT', '-COMP:WH', '-SPEC:ADV', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', 'LF:Luisa', '-SPEC:uWH'}
lukemalla       ['LANG:FI']
luke-           {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', '-COMP:P', 'ARG', '-COMP:N', 'LF:read', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'COMP:D', 'PHI:PER:_', 'CLASS:TR', 'SPEC:ADV', '!COMP:*', 'PF:luke'}
loydetty        ['LANG:FI']
loydettiin      ['LANG:FI']
loysimme        ['LANG:FI']
loysi           ['LANG:FI']
loytaa          ['LANG:FI']
loyta-          {'SPEC:P', 'PF:loyta-', 'PHI:NUM:_', '-COMP:v', 'PHI:PER:_', '-COMP:T/fin', 'LF:find', 'PHI:DET:_', '-SPEC:FORCE', '-COMP:P', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', '!COMP:D', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'COMP:D', 'ASP:BOUNDED', 'CLASS:TR', 'SPEC:ADV', '!COMP:*'}
Mary            ['LANG:EN']
Mary-           {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-adjoinable', '-SPEC:FORCE', '-SEM:directional', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', 'LANG:EN', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', '-SPEC:T/fin', 'LF:Mary', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', 'PF:Mary', '-SPEC:uWH'}
Merja           ['LANG:FI']
Merjan          ['LANG:FI']
Merjan_acc      ['LANG:FI']
Merja_0acc      ['LANG:FI']
Merjan_gen      ['LANG:FI']
Merjan_poss     ['LANG:FI']
Merjaa          ['LANG:FI']
Merja-          {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-adjoinable', '-SPEC:FORCE', '-SEM:directional', 'LF:Merja', '-COMP:N', '-COMP:AUX', 'PF:Merja', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
Merjalle        ['LANG:EN']
Merjalla        ['LANG:EN']
malla           {'LANG:FI', 'LF:by', 'MA/inf', 'PF:malla', 'adjoinable', 'COMP:v', '-SPEC:Neg/fin', '-SPEC:T/fin', 'ADV', '-SPEC:FORCE', 'TAIL:T', '-SPEC:N', 'SPEC:*'}
meren           ['LANG:FI']
mere-           {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', 'LF:ocean', '-COMP:N', '-COMP:AUX', 'PF:meri', 'COMP:P', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
mies            {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', '-SPEC:T/fin', 'LF:man', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', 'PF:mies', '-SPEC:uWH'}
mistake         {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', 'LF:mistake', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', 'LANG:EN', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', 'PF:mistake', '-SPEC:uWH'}
minka           ['LANG:FI']
mika            ['LANG:FI']
mika-           {'-SPEC:C/fin', 'PF:mika-', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', 'LF:what', '-SPEC:uWH'}
mita            ['LANG:FI']
moved           ['LANG:EN']
move'           ['LANG:EN']
move-           {'PF:move', 'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:GEN:_', 'PHI:DET:_', '-SPEC:FORCE', '-COMP:P', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', '+SEM:directional', '!COMP:*', 'SPEC:TO/inf', 'LF:move', '-SPEC:T/fin', 'V', 'ASP', 'COMP:D', 'PHI:PER:_', 'CLASS:TR', 'SPEC:ADV', 'LANGN:EN'}
mukavasti       ['LANG:EN']
mukava-         {'LANG:FI', '2SPEC', '0', 'PF:mukavasti', 'LF:comfortably', 'SPEC:D'}
must            {'-SPEC:C/fin', 'PF:must', '-SPEC:v', 'FIN', 'PHI:NUM:_', '!PROBE:V', 'PHI:PER:_', '-COMP:T/fin', 'PHI:GEN:_', 'LF:must', 'COMP:v', 'MODAL', '-SPEC:FORCE', 'PHI:DET:_', 'VAL', 'ARG', 'SPEC:D', '-COMP:INF', 'SPEC:*', '-SPEC:V', '-SPEC:TO/inf', 'LANG:EN', '!COMP:*', 'SPEC:TO/inf', 'T/fin', 'COMP:T/prt', '-SPEC:T/fin', '-SPEC:Neg', '-SPEC:N', '!SPEC:D', 'COMP:V', 'T', 'COMP:Neg', '-SPEC:C'}
myi             ['LANG:FI']
myynyt          ['LANG:FI']
myyda           ['LANG:FI']
myy-            {'SPEC:P', 'PHI:NUM:_', '-COMP:v', 'PHI:PER:_', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', '-COMP:P', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', 'PF:myy', 'SPEC:TO/inf', 'LF:sell', '-SPEC:T/fin', 'V', 'ASP', 'COMP:D', 'ASP:BOUNDED', 'CLASS:TR', 'SPEC:ADV', '!COMP:*'}
naki            ['LANG:FI']
nake-           {'LF:see', 'SPEC:P', '-COMP:ESSA/inf', 'PHI:NUM:_', '-COMP:v', 'PHI:PER:_', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', '-COMP:P', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', '-COMP:MA/tta', 'LANG:FI', 'PF:nake', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'COMP:D', 'ASP:BOUNDED', 'CLASS:TR', 'SPEC:ADV', '!COMP:*'}
nayttaa         ['LANG:FI']
naytta-         {'-ARG', 'SEM:internal', 'SPEC:P', '-COMP:v', 'PF:naytta', '!COMP:VA/inf', '-COMP:T/fin', '-SPEC:FORCE', 'VAL', '-COMP:N', 'COMP:P', '-COMP:V', 'LANG:FI', 'SPEC:TO/inf', 'ASP', 'V', '-SPEC:T/fin', 'LF:seem', '!SPEC:D', 'SPEC:ADV'}
ndo             {'INF', '?ARG', 'PRG', 'LANG:EN', '-SPEC:V', '-COMP:C/fin', '-COMP:FORCE', 'LF:ing', 'PF:PRG', '-COMP:T/fin', 'COMP:v', '-SPEC:T/fin', 'VAL', 'COMP:V', '!COMP:*'}
ne              {'PHI:PER:3', '-ARG', '-SPEC:P', '-SPEC:MA/lla', 'OP', '-COMP:T/fin', '-COMP:D', '-COMP:uR', 'D', '-SPEC:INF', 'LANG:FI', '-SPEC:V', '!PROBE:N', 'LF:those', 'COMP:N', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', 'PHI:NUM:PL', 'PF:ne', '!COMP:*', '-SPEC:C'}
niiden          ['LANG:EN']
nen             {'LANG:FI', '-SPEC:D', 'LF:ing', 'PF:a', 'adjoinable', '-SPEC:A', 'A', 'TAIL:D', 'SPEC:*', 'COMP:0'}
not             {'LANG:EN', 'PHI:NUM:_', 'POL:NEG', '-COMP:C', 'Neg', 'PHI:PER:_', '-COMP:D', 'PHI:GEN:_', '-SPEC:T/fin', 'PHI:DET:_', 'ARG', '-COMP:FIN', 'PF:not', '!COMP:*', 'LF:not', 'SPEC:*', '-VAL'}
nukahti         ['LANG:FI']
nukkunut        ['LANG:FI']
nukuttiin       ['LANG:FI']
nukkua          ['LANG:FI']
nukkui          ['LANG:FI']
nukkuu          ['LANG:FI']
nukku-          {'-COMP:T', 'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', '-COMP:D', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', 'SPEC:D', 'LF:sleep', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', 'SPEC:TO/inf', 'CLASS:INTR', '-COMP:MA/inf', '-SPEC:T/fin', 'V', 'ASP', '-COMP:Neg/fin', 'PHI:PER:_', 'SPEC:ADV', 'PF:nukku'}
ollut           ['LANG:FI']
on'             ['LANG:FI']
on'             ['LANG:FI']
omaisuutensa    ['LANG:FI']
omaisuuttaan    ['LANG:FI']
omaisuus-       {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'LF:possessions', 'PF:omaisuuden', 'COMP:P', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
operatoria      ['LANG:IT']
operatoria-     {'LF:operation', '2SPEC', '0', 'PF:operatoria', 'LANG:IT', 'SPEC:D'}
ostaa           ['LANG:FI']
osta-           {'SPEC:P', 'PHI:NUM:_', '-COMP:v', 'PHI:PER:_', '-COMP:T/fin', 'LF:buy', 'PHI:DET:_', '-SPEC:FORCE', '-COMP:P', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', 'PF:osta', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'COMP:D', 'ASP:BOUNDED', 'CLASS:TR', 'SPEC:ADV', '!COMP:*'}
paivan          ['LANG:EN']
paivaa          ['LANG:EN']
paiva           ['LANG:EN']
paiva-          {'LF:day', '-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', 'SEM:nonreferential', 'PF:paiva', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
Pariisia        ['LANG:FI']
Pariisi-        {'-SPEC:C/fin', '-SPEC:P', 'LF:Paris', '-COMP:v', 'COMP:uR', 'COMP:C', 'PF:Pariisi', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
Pekkaa          ['LANG:FI']
Pekka           ['LANG:FI']
Pekan_gen       ['LANG:FI']
Pekan_acc       ['LANG:FI']
Pekka_0acc      ['LANG:FI']
Pekka-          {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', 'PF:Pekka', '-SEM:directional', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', '-SPEC:T/fin', 'N', 'SPEC:A', 'LF:Pekka', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
pelottaa        ['LANG:FI']
pelkaa-         {'SPEC:P', 'PHI:NUM:_', '-COMP:v', 'LF:fear', 'PF:pelkaa', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', '-COMP:P', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'COMP:D', 'PHI:PER:_', 'CLASS:TR', 'SPEC:ADV', '!COMP:*'}
persuades       ['LANG:EN']
persuade-       {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'SEM:external', 'PHI:DET:_', '-SPEC:FORCE', 'PF:persuade', 'COMP:TO/inf', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', 'LANG:EN', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:ADV', '!COMP:*', 'LF:persuade'}
peruuntui       ['LANG:FI']
peruuntu-       {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PF:peruuntui', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', 'SPEC:D', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', 'LF:cancelled', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'PHI:PER:_', 'SPEC:ADV'}
pesi            ['LANG:FI']
pesta           ['LANG:FI']
pese-           {'SPEC:P', 'PHI:NUM:_', '-COMP:v', 'PHI:PER:_', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', '-COMP:P', 'ARG', 'LF:wash', '-COMP:N', 'PF:pese', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'COMP:D', 'ASP:BOUNDED', 'CLASS:TR', 'SPEC:ADV', '!COMP:*'}
pese-           {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', '-COMP:P', 'ARG', 'LF:wash', '-COMP:N', 'PF:pese', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'COMP:D', 'PHI:PER:_', 'CLASS:TR', 'SPEC:ADV', '!COMP:*'}
petardi         {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', 'LF:firecrackers', 'LANG:IT', '-COMP:WH', '-SPEC:ADV', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', 'PF:petardi', '-SPEC:uWH'}
pieni           ['LANG:FI']
pieni-          {'LANG:FI', '2SPEC', 'PF:pieni-', '0', 'SPEC:D', 'LF:small'}
poikien         ['LANG:FI']
poika-          {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'LF:boy', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', 'PF:poika', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
puhelinta       ['LANG:FI']
puhelin-        {'LANG:FI', '2SPEC', '0', 'LF:phone', 'SPEC:D', 'PF:puhelin'}
punainen        ['LANG:FI']
puna-           {'LANG:FI', '2SPEC', '0', 'LF:red', 'PF:puna-', 'SPEC:D'}
presupposto     {'-SPEC:C/fin', '-SPEC:P', 'PF:presupposto', 'LF:presupposition', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-COMP:WH', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
primary         {'PF:primary', '-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'LF:nurse', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-COMP:WH', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
promises        ['LANG:EN']
promise-        {'LF:promise', 'SEM:internal', 'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', 'SPEC:D', '-VAL', 'COMP:P', '-COMP:V', 'LANG:EN', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'COMP:D', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:ADV', 'PF:promise'}
pyytaa          ['LANG:FI']
pyyta-          {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PF:pyyda', 'SEM:external', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', 'LF:ask', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'PHI:PER:_', 'SPEC:ADV'}
raukesi         ['LANG:FI']
raukea-         {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', 'LF:terminate', '-SPEC:FORCE', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', 'SPEC:TO/inf', 'PF:raukea', '-SPEC:T/fin', 'V', 'ASP', 'PHI:PER:_', 'SPEC:ADV'}
red             ['LANG:EN']
red-            {'2SPEC', 'LANG:EN', '0', 'LF:red', 'SPEC:D', 'PF:red'}
saavuttaa       ['LANG:FI']
saavutta-       {'SPEC:P', 'PHI:NUM:_', '-COMP:v', 'PHI:PER:_', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', '-COMP:P', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', '!COMP:D', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'PF:saavutta-', 'COMP:D', 'ASP:BOUNDED', 'CLASS:TR', 'SPEC:ADV', '!COMP:*', 'LF:reach'}
sanon           ['LANG:FI']
sanoo           ['LANG:FI']
sanoi           ['LANG:FI']
sano-           {'PF:sano-', 'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', 'SPEC:D', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', 'SPEC:TO/inf', 'COMP:VA/inf', 'LF:say', '-SPEC:T/fin', 'V', 'ASP', 'COMP:FORCE', 'PHI:PER:_', 'SPEC:ADV'}
said            ['LANG:EN']
say'            {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', 'SPEC:D', '-VAL', 'COMP:P', '-COMP:V', '!COMP:FORCE', 'LANG:EN', 'SPEC:TO/inf', 'LF:say', '-SPEC:T/fin', 'V', 'ASP', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:ADV', 'PF:say'}
say-            {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', 'SPEC:D', '-VAL', 'COMP:P', '-COMP:V', '!COMP:FORCE', 'LANG:EN', 'SPEC:TO/inf', 'LF:say', '-SPEC:T/fin', 'V', 'ASP', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:ADV', 'PF:say'}
sala            ['LANG:IT']
sala-           {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', 'PF:sala', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', 'LF:room', '-COMP:WH', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
scoppiati       ['LANG:IT']
scoppia-        {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'PF:scoppia', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', 'LF:explode', 'SPEC:TO/inf', 'LANG:IT', '-SPEC:T/fin', 'V', 'ASP', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:ADV'}
sen             {'-ARG', '-SPEC:P', '-SPEC:MA/lla', 'OP', '-COMP:T/fin', '-COMP:D', 'LF:the/that', '-COMP:uR', 'D', 'TAIL:ASP', '-SPEC:INF', 'LANG:FI', '-SPEC:V', '!PROBE:N', 'COMP:N', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', '-SPEC:C', 'TAIL:*POL:NEG', '!COMP:*', 'TAIL:PHI', 'PF:sen'}
se'             {'-ARG', 'PF:se', '-SPEC:P', '-SPEC:MA/lla', 'OP', '-COMP:T/fin', '-COMP:D', 'LF:the/that', '-COMP:uR', 'D', '-SPEC:INF', 'LANG:FI', '-SPEC:V', '!PROBE:N', 'COMP:N', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C'}
se              {'-ARG', 'PF:se', '-SPEC:P', '-SPEC:MA/lla', 'OP', '-COMP:T/fin', '-COMP:D', 'LF:the/that', '-COMP:uR', 'D', '-SPEC:INF', 'LANG:FI', '-SPEC:V', '!PROBE:N', 'COMP:N', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C'}
se              ['LANG:FI']
sentenza        {'-SPEC:C/fin', 'LF:sentence', 'PF:sentenza', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-COMP:WH', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
Seine           ['LANG:EN']
Seine-          {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'LF:Seine', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', 'LANG:EN', '-COMP:V', 'PF:Seine', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
sembrano        ['LANG:IT']
sembra-         {'-ASP', 'PF:sembra', '-ARG', 'SPEC:P', '-COMP:v', '-COMP:D', '-COMP:T/fin', '-SPEC:FORCE', '-COMP:N', 'SPEC:D', '-VAL', 'COMP:P', '-COMP:V', '!COMP:ARE/inf', 'LANG:EN', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'LF:seem', 'SPEC:ADV'}
sleeps          ['LANG:EN']
sleep           {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', '-COMP:D', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', 'SPEC:D', 'LF:sleep', '-VAL', 'COMP:P', '-COMP:V', 'LANG:EN', 'SPEC:TO/inf', 'CLASS:INTR', '-COMP:MA/inf', '-SPEC:T/fin', 'V', 'ASP', 'PF:sleep', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:ADV'}
sleep-          {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', '-COMP:D', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', 'SPEC:D', 'LF:sleep', '-VAL', 'COMP:P', '-COMP:V', 'LANG:EN', 'SPEC:TO/inf', 'CLASS:INTR', '-COMP:MA/inf', '-SPEC:T/fin', 'V', 'ASP', 'PF:sleep', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:ADV'}
sono            ['LANG:IT']
sono_pl         ['LANG:IT']
sopimuksen      ['LANG:FI']
sopimus         ['LANG:FI']
sopimus-        {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '!COMP:A/inf', '-SPEC:INF', '-COMP:WH', 'PF:sopimus', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', 'LF:agreement', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
spinge          ['LANG:IT']
spinge-         {'SPEC:P', 'PHI:NUM:_', '-COMP:v', 'PF:spinge', '-COMP:T/fin', 'PHI:GEN:_', 'PHI:DET:_', '-SPEC:FORCE', '-COMP:P', 'ARG', '-COMP:N', '-VAL', '-COMP:V', '!COMP:D', 'SPEC:TO/inf', 'LANG:IT', '-SPEC:T/fin', 'V', 'ASP', 'PHI:PER:_', 'LF:push', 'SPEC:ADV'}
ssa             {'-SPEC:C/fin', '-SPEC:P', '-COMP:ADV', '-SPEC:v', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:T/fin', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:FORCE', '-SPEC:iR', 'COMP:n/MA', 'ARG', '-COMP:N', '-VAL', 'SPEC:*', '-SPEC:INF', 'LANG:FI', '-SPEC:V', 'PF:ssa', 'P', 'LF:in', '-COMP:uWH', 'adjoinable', 'TAIL:V', '-SPEC:T/fin', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:N', '-SPEC:ADV', '!COMP:*', '-SPEC:C'}
stanno          ['LANG:IT']
sta-            {'-ASP', 'SEM:internal', 'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'LF:stay', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', 'SPEC:D', '-VAL', 'COMP:P', '-COMP:V', 'LANG:EN', 'SPEC:TO/inf', 'COMP:PRG', 'PF:sta', '-SPEC:T/fin', 'V', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:ADV'}
sti             {'LANG:FI', '-ARG', 'LF:by', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:T/fin', 'ADV', '-SPEC:FORCE', 'TAIL:T', '-SPEC:N', '!COMP:*', 'SPEC:*', 'PF:sti'}
sukkaa          ['LANG:EN']
sukan           ['LANG:EN']
sukat           ['LANG:EN']
sukka-          {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', 'LF:socks', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', 'PF:sukka-', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
talo            {'LF:house', '-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', 'PF:talo', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
tama            ['LANG:EN']
tama-           {'-SPEC:C/fin', '-SPEC:P', 'PF:tama', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', 'LF:this', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', 'PHI', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
tassa           ['LANG:EN']
taytyy          ['LANG:FI']
taydy           ['LANG:FI']
tayty-          {'-ASP', 'PF:taytyy', 'SPEC:P', 'PHI:NUM:_', 'FIN', '-COMP:v', '-COMP:T/fin', 'LF:must', 'MODAL', '-SPEC:FORCE', 'PHI:DET:_', 'ARG', '-COMP:N', '-VAL', 'SPEC:*', 'COMP:P', '-COMP:V', 'LANG:FI', '!COMP:A/inf', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'PHI:PER:_', 'SPEC:ADV'}
teki            ['LANG:FI']
teke-           {'LF:make', 'SPEC:P', 'PHI:NUM:_', '-COMP:v', 'PHI:PER:_', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', '-COMP:P', 'PF:teke', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', '!COMP:D', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', '-COMP:A/inf', 'COMP:D', 'ASP:BOUNDED', 'CLASS:TR', 'SPEC:ADV', '!COMP:*'}
that            {'PF:that', 'FORCE', '-ARG', 'LANG:EN', 'LF:that', '!PROBE:T/fin', 'FIN', '-SPEC:*', 'COMP:C/fin', '!COMP:*', '-VAL', 'COMP:T/fin'}
the             {'-ARG', '-SPEC:P', '-SPEC:MA/lla', 'OP', '-COMP:T/fin', '-COMP:D', 'PF:the', '-COMP:uR', 'D', '-SPEC:INF', '-SPEC:V', 'LANG:EN', '!PROBE:N', 'COMP:N', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LF:the', '-SPEC:C', '!COMP:*', 'PHI:DEF:DEF'}
to              {'-SPEC:C/fin', '-SPEC:P', '-COMP:ADV', '-SPEC:v', 'PHI:NUM:_', '-SPEC:*', 'PHI:PER:_', '-COMP:T/fin', '-SPEC:iWH', 'PHI:GEN:_', 'PHI:DET:_', '-SPEC:FORCE', '-SPEC:iR', 'ARG', '-COMP:N', '-VAL', '-SPEC:INF', '+SEM:directional', '-SPEC:V', 'P', 'LANG:EN', '-float', '-SPEC:ADV', '-COMP:uWH', 'adjoinable', 'PF:to', '-SPEC:T/fin', '-SPEC:Neg/fin', 'COMP:D', 'LF:to', '-SPEC:N', 'TAIL:V,+SEM:directional', '!COMP:*', '-SPEC:C'}
to_inf          {'LF:TO/inf', '-COMP:T/fin', 'COMP:v', 'PF:TO/inf', '-VAL', 'INF', '?ARG', 'LANG:EN', '-SPEC:V', '-COMP:C/fin', '-COMP:FORCE', 'adjoinable', '-SPEC:T/fin', 'TO/inf', 'COMP:V', '!COMP:*', '-SPEC:v'}
towards         {'-SPEC:C/fin', '-SPEC:P', '-COMP:ADV', 'PF:towards', '-SPEC:v', '-SPEC:*', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:PER:_', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:FORCE', '-SPEC:iR', 'ARG', '-COMP:N', '-VAL', '-SPEC:INF', '-SPEC:V', 'LANG:EN', 'P', 'LF:towards', '-float', '-COMP:uWH', 'adjoinable', 'TAIL:V', '-SPEC:T/fin', '-SPEC:Neg/fin', 'COMP:D', '-SPEC:N', 'PHI:GEN:_', '-SPEC:ADV', '!COMP:*', '-SPEC:C'}
tonaisi         ['LANG:FI']
tonaista        ['LANG:FI']
tonaise-        {'SPEC:P', 'PHI:NUM:_', '-COMP:v', 'PHI:PER:_', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', '-COMP:P', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', 'LANG:FI', 'PF:tonaise', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'LF:nudge', 'COMP:D', 'CLASS:TR', 'SPEC:ADV', '!COMP:*'}
tta             {'-SPEC:C/fin', '-SPEC:P', '-COMP:ADV', '-SPEC:v', 'PHI:NUM:_', 'PHI:PER:_', '-COMP:T/fin', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:FORCE', '-SPEC:iR', 'COMP:n/MA', 'ARG', '-COMP:N', '-VAL', 'SPEC:*', '-SPEC:INF', 'LANG:FI', '-SPEC:V', 'P', 'LF:without', '-COMP:uWH', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', 'ADV', 'COMP:D', '-SPEC:N', '-SPEC:ADV', '!COMP:*', 'PF:tta', '-SPEC:C'}
tries           ['LANG:EN']
try-            {'SEM:internal', 'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', '-COMP:N', 'SPEC:D', '-VAL', 'COMP:P', '-COMP:V', 'LANG:EN', 'PF:try', 'SPEC:TO/inf', 'LF:try', '!COMP:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'PHI:PER:_', 'PHI:GEN:_', '!COMP:-ARG'}
verifiche       {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', 'LF:verification', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'PF:verifiche', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-COMP:WH', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
virtaamalla     ['LANG:FI']
virtaa          ['LANG:FI']
virta-          {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:D', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', 'SPEC:D', '-VAL', 'COMP:P', '-COMP:V', '!COMP:P', 'LANG:FI', 'SPEC:TO/inf', 'PF:virtaa', '-SPEC:T/fin', 'V', 'ASP', 'PHI:PER:_', 'SPEC:ADV', 'LF:flow'}
voluto          ['LANG:IT']
vuole           ['LANG:IT']
volu-           {'SEM:internal', 'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-SPEC:*', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', 'LANG:EN', 'PF:volu', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'LF:want', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:ADV', '!COMP:*'}
voitti          ['LANG:FI']
voittanut       ['LANG:FI']
voittaa         ['LANG:FI']
voitta-         {'SPEC:P', 'PHI:NUM:_', '-COMP:v', 'PHI:PER:_', 'SEM:achievement', '-COMP:T/fin', 'PHI:GEN:_', 'PHI:DET:_', '-SPEC:FORCE', 'PF:voitta', '-COMP:P', 'LF:win', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', 'LANG:EN', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'COMP:D', 'ASP:BOUNDED', 'CLASS:TR', 'SPEC:ADV', '!COMP:*'}
wants           ['LANG:EN']
want-           {'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:GEN:_', 'PHI:DET:_', '-SPEC:FORCE', 'COMP:TO/inf', '-COMP:P', 'ARG', '-COMP:N', '-VAL', 'COMP:P', '-COMP:V', '-SPEC:TO/inf', 'LANG:EN', 'PF:want', 'ASP', 'V', '-SPEC:T/fin', 'LF:want', 'COMP:D', 'PHI:PER:_', 'CLASS:TR', 'SPEC:ADV', '!COMP:*'}
what            ['LANG:EN']
what-           {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', 'LANG:EN', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', 'PF:what', '-COMP:WH', '-COMP:*', '-SPEC:T/fin', 'PHI_N', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', 'LF:what', '-SPEC:uWH'}
which           {'-ARG', '-SPEC:P', '-SPEC:MA/lla', 'OP', '-COMP:T/fin', '-COMP:D', 'PF:which', '-COMP:uR', 'D', '-SPEC:INF', '-SPEC:V', 'LANG:EN', '!PROBE:N', 'OP:WH', 'COMP:N', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', '!COMP:*', 'LF:which', '-SPEC:C'}
who             ['LANG:EN']
who-            {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', 'PF:who', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', 'LANG:EN', '-COMP:V', '-COMP:C/fin', 'LF:who', '-SPEC:INF', '-COMP:WH', '-COMP:*', '-SPEC:T/fin', 'PHI_N', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
whether         {'-ARG', 'FIN', '-SPEC:*', 'OP', 'PF:whether', '-VAL', 'Q', 'FORCE', 'LANG:EN', 'OP:Q', 'OP:WH', '!PROBE:T/fin', 'COMP:C/fin', '!COMP:*', 'LF:whether', 'COMP:T/fin'}
yrittaa         ['LANG:FI']
yritta-         {'SEM:internal', 'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'SPEC:ADV', 'ARG', '-COMP:N', 'SPEC:D', '-VAL', 'PF:yritta', 'COMP:P', '-COMP:V', 'LANG:EN', '!COMP:A/inf', 'SPEC:TO/inf', 'LF:try', '-SPEC:T/fin', 'V', 'ASP', 'PHI:PER:_', 'PHI:GEN:_', '!COMP:-ARG'}
mina            ['LANG:EN']
mina-           {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', '-SPEC:V', 'LF:I', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', '-COMP:*', '-SPEC:T/fin', 'PHI_N', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', 'PF:mina', '-SPEC:ADV', '-SPEC:uWH'}
sina            ['LANG:EN']
sina-           {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', 'LF:you', '-COMP:*', 'PF:sina', '-SPEC:T/fin', 'PHI_N', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
han             ['LANG:EN']
han-            {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'LF:s/he', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', 'COMP:P', '-COMP:WH', '-COMP:*', '-SPEC:T/fin', 'PHI_N', 'N', 'PF:han', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
hanet           ['LANG:EN']
me              ['LANG:EN']
me-             {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', 'LF:we', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', '-COMP:*', '-SPEC:T/fin', 'PHI_N', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', 'PF:me', '-SPEC:uWH'}
te              ['LANG:EN']
te-             {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'LANG:FI', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', 'LF:you', '-COMP:*', '-SPEC:T/fin', 'PHI_N', 'N', 'SPEC:A', 'PF:te', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
he_FI           ['LANG:EN']
heidan          ['LANG:EN']
he_FI-          {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', 'PF:he', 'LANG:FI', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', 'LF:they', '-COMP:*', '-SPEC:T/fin', 'PHI_N', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
se-             {'-ARG', 'PF:se', '-SPEC:P', '-SPEC:MA/lla', 'OP', '-COMP:T/fin', '-COMP:D', '-COMP:uR', 'D', '-SPEC:INF', 'LANG:FI', '-SPEC:V', '!PROBE:N', 'COMP:N', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LF:it/that', '!COMP:*', '-SPEC:C'}
I               ['LANG:EN']
I-              {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', 'LANG:EN', 'LF:I', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', 'PF:I', '-COMP:*', '-SPEC:T/fin', 'PHI_N', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
you             ['LANG:EN']
you-            {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', 'LANG:EN', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', 'LF:you', '-COMP:*', '-SPEC:T/fin', 'PHI_N', 'PF:you', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
he              ['LANG:EN']
he-             {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', 'PF:he', '-COMP:A', 'COMP:R/D', 'COMP:R', 'LANG:EN', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', '-COMP:*', '-SPEC:T/fin', 'PHI_N', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', 'LF:he', '-SPEC:ADV', '-SPEC:uWH'}
she             ['LANG:EN']
she-            {'-SPEC:C/fin', 'PF:she', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', 'LANG:EN', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', '-COMP:*', 'LF:she', '-SPEC:T/fin', 'PHI_N', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
we              ['LANG:EN']
we-             {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', 'LF:we', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', 'LANG:EN', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', '-COMP:*', '-SPEC:T/fin', 'PHI_N', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', 'PF:we', '-SPEC:uWH'}
you_pl          ['LANG:EN']
you_pl-         {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-SPEC:uWH', '-COMP:N', '-COMP:AUX', 'PF:you_pl', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', 'LANG:EN', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', '-SPEC:T/fin', 'N', 'SPEC:A', '-SPEC:R', 'PHI', '-SPEC:N', '-SPEC:ADV', 'LF:you_pl'}
they            ['LANG:EN']
they-           {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', 'PF:they', 'LANG:EN', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', '-COMP:WH', 'LF:they', '-COMP:*', '-SPEC:T/fin', 'PHI_N', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
it              ['LANG:EN']
it-             {'-ARG', '-SPEC:P', '-SPEC:MA/lla', 'OP', '-COMP:T/fin', '-COMP:D', '-COMP:uR', 'D', '-SPEC:INF', '-SPEC:V', 'LANG:EN', '!PROBE:N', 'COMP:N', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LF:it/that', '!COMP:*', 'PF:it', '-SPEC:C'}
io              ['LANG:EN']
io-             {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', 'PF:io', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', 'LF:I', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-COMP:WH', '-COMP:*', '-SPEC:T/fin', 'PHI_N', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
tu              ['LANG:EN']
tu-             {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', 'PF:tu', 'LF:you', 'LANG:IT', '-COMP:*', '-COMP:WH', '-SPEC:T/fin', 'PHI_N', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
lui             ['LANG:EN']
lui-            {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', 'PF:lui', 'LANG:IT', '-COMP:WH', '-COMP:*', '-SPEC:T/fin', 'PHI_N', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', 'LF:he', '-SPEC:ADV', '-SPEC:uWH'}
lei             ['LANG:EN']
lei-            {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-COMP:WH', '-COMP:*', 'LF:she', '-SPEC:T/fin', 'PHI_N', 'PF:lei', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
noi             ['LANG:EN']
noi-            {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', 'LF:we', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-COMP:WH', '-COMP:*', '-SPEC:ADV', '-SPEC:T/fin', 'PHI_N', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', 'PF:noi', '-SPEC:uWH'}
voi             ['LANG:EN']
voi-            {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-SPEC:uWH', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-COMP:WH', '-COMP:*', '-SPEC:T/fin', 'PF:voi', 'PHI_N', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', 'LF:you_pl'}
loro            ['LANG:EN']
loro-           {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', 'PF:loro', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-COMP:WH', 'LF:they', '-COMP:*', '-SPEC:T/fin', 'PHI_N', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
mi              ['LANG:EN']
mi-             {'-SPEC:C/fin', '-SPEC:P', 'PF:mi(cl)', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'CL', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', 'COMP:P', 'LANG:IT', '-COMP:WH', '-COMP:*', '-SPEC:T/fin', 'LF:me', 'PHI_N', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
la              ['LANG:EN']
la-             {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', 'LF:her', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'CL', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', 'PF:la(cl)', '-COMP:C/fin', '-SPEC:INF', 'COMP:P', 'LANG:IT', '-COMP:WH', '-COMP:*', '-SPEC:T/fin', 'PHI_N', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
lo              ['LANG:EN']
lo-             {'-SPEC:C/fin', 'LF:him', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'CL', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', 'PF:lo(cl)', '-COMP:C/fin', '-SPEC:INF', 'COMP:P', 'LANG:IT', '-COMP:WH', '-COMP:*', '-SPEC:T/fin', 'PHI_N', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
si              ['LANG:EN']
si-             {'-SPEC:C/fin', 'PF:si(cl)', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', 'CAL:CL', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', 'LF:3sg', '-COMP:*', '-COMP:WH', '-SPEC:T/fin', 'PHI_N', 'N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
gli             ['LANG:EN']
ci              ['LANG:EN']
ci-             {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'COMP:P', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', '-COMP:V', 'PF:ci', '-COMP:C/fin', '-SPEC:INF', 'LANG:IT', '-COMP:WH', '-COMP:*', '-SPEC:T/fin', 'LF:there', 'N', 'PHI_N', 'SPEC:A', '-SPEC:R', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
[-n]            {'LANG:FI', 'PHI:PER:1', 'inflectional', 'PHI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-t]            {'LANG:FI', 'PHI:PER:2', 'inflectional', 'PHI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-V]            {'LANG:FI', 'PHI:PER:3', 'inflectional', 'PHI', 'PHI:NUM:SG'}
[-mme]          {'LANG:FI', 'PHI:PER:1', 'inflectional', 'PHI', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-mme]          {'LANG:FI', 'PHI:PER:1', 'inflectional', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-tte]          {'LANG:FI', 'PHI:PER:2', 'inflectional', 'PHI', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-vat]          {'LANG:FI', 'PHI:PER:3', 'inflectional', 'PHI', 'PHI:NUM:PL'}
[-ni]           {'LANG:FI', 'PHI:PER:1', 'inflectional', 'PHI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-si]           {'LANG:FI', 'PHI:PER:2', 'inflectional', 'PHI', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-nsa]          {'LANG:FI', 'PHI:PER:3', 'inflectional', 'PHI', 'PHI:NUM:SG'}
[-an]           {'LANG:FI', 'PHI:PER:3', 'inflectional', 'PHI'}
[-nne]          {'LANG:FI', 'PHI:PER:2', 'inflectional', 'PHI:NUM:PL', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-s]            {'PHI:PER:3', 'LANG:EN', 'inflectional', 'PHI', 'PHI:GEN:M', 'PHI:GEN:F', 'PHI:NUM:SG'}
[-0]            {'PHI:PER:3', 'PHI:PER:2', 'LANG:EN', 'PHI:PER:1', 'inflectional', 'PHI:DET:DEF', 'PHI:NUM:SG', 'PHI:GEN:N', 'PHI', 'PHI:NUM:PL'}
[-o]            {'PHI:PER:1', 'inflectional', 'PHI', 'LANG:IT', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-i]            {'PHI:PER:2', 'inflectional', 'PHI', 'LANG:IT', 'PHI:HUM:HUM', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-a]            {'PHI:PER:3', 'inflectional', 'PHI', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-e]            {'PHI:PER:3', 'inflectional', 'PHI', 'LANG:IT', 'PHI:DET:DEF', 'PHI:NUM:SG'}
[-iamo]         {'PHI:PER:1', 'inflectional', 'PHI', 'PHI:NUM:PL', 'LANG:IT', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-te]           {'PHI:PER:2', 'inflectional', 'PHI', 'PHI:NUM:PL', 'LANG:IT', 'PHI:HUM:HUM', 'PHI:DET:DEF'}
[-no]           {'PHI:PER:3', 'inflectional', 'PHI', 'PHI:NUM:PL', 'LANG:IT', 'PHI:DET:DEF'}
[-nom]          {'LANG:EN', 'NOM', 'inflectional', 'adjoinable', 'TAIL:FIN,ARG,VAL'}
[-par]          {'LANG:FI', 'inflectional', 'PAR', 'TAIL:ARG,-VAL', 'adjoinable'}
[-gen]          {'LANG:EN', '-float', 'TAIL:INF,ARG', 'inflectional', 'GEN'}
gen             {'LANG:EN', '-float', 'TAIL:INF,ARG', 'inflectional', 'GEN'}
[-n_acc]        {'LANG:FI', 'TAIL:*POL:NEG', 'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'n-ACC', 'TAIL:PHI', 'adjoinable'}
[-t_acc]        {'LANG:FI', 't-ACC', 'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'adjoinable'}
[-0_acc]        {'LANG:FI', 'TAIL:*PHI', '0_ACC', 'inflectional', 'TAIL:ARG,ASP:BOUNDED', 'TAIL:*POL:NEG', 'adjoinable'}
asp             {'LANG:EN', 'inflectional', 'ASP:BOUNDED'}
a'              {'a', 'PF:a', 'LF:A', 'LANG:X'}
b'              {'b', 'PF:b', 'LF:B', 'LANG:X'}
b''             {'LANG:EN', 'LF:B', 'b', 'PF:b', '-COMP:c'}
c''             {'LF:C', 'LANG:EN', 'c', 'PF:c', 'SPEC:a'}
c'              {'LF:C', 'PF:c', 'LANG:X', 'c'}
d'              {'LANG:', 'LF:D', 'd', 'PF:d'}
a''             ['LANG:EN']
x'              {'x', 'LF:X', 'PF:x', 'LANG:X'}
y'              {'y', 'LF:Y', 'LANG:X', 'PF:y'}
z'              {'PF:x', 'LANG:X', 'LF:Z', 'z'}
John'           {'PF:John', "N'", 'LF:John', 'LANG:X'}
admires'        {"V'", 'LF:admires', 'PF:admires', 'LANG:X'}
admires''       {'LF:admires', 'SPEC:P', 'PHI:NUM:_', '-COMP:v', '-COMP:T/fin', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-COMP:N', 'SPEC:D', '-VAL', 'COMP:P', '-COMP:V', 'LANG:EN', 'SPEC:TO/inf', '-SPEC:T/fin', 'V', 'ASP', 'PF:admires', 'PHI:PER:_', 'PHI:GEN:_', 'SPEC:ADV'}
Mary'           {"N'", 'PF:Mary', 'LANG:X', 'LF:mary'}
T/fin           {'-SPEC:C/fin', '-SPEC:v', 'FIN', 'PHI:NUM:_', '!PROBE:V', 'PHI:PER:_', '-COMP:T/fin', 'PHI:GEN:_', 'COMP:v', 'PHI:DET:_', '-SPEC:FORCE', 'VAL', 'ARG', 'SPEC:D', '-COMP:INF', 'SPEC:*', '-SPEC:V', '-SPEC:TO/inf', 'LANG:EN', '!COMP:*', 'SPEC:TO/inf', 'T/fin', 'COMP:T/prt', '-SPEC:T/fin', '-SPEC:Neg', 'COMP:V', '-SPEC:N', 'LF:T', '!SPEC:D', '-SPEC:C', 'T', 'PF:T'}
v               {'LANG:EN', 'PHI:NUM:_', 'PHI:PER:_', '!PROBE:V', 'PHI:GEN:_', 'ASP', 'PHI:DET:_', 'LF:v', 'PF:v', 'v', '-SPEC:N', 'ARG', 'COMP:V', 'SPEC:D', '!COMP:*', '-VAL'}
C/fin           {'-SPEC:C/fin', '-ARG', 'FIN', 'C/fin', 'VAL', 'SPEC:*', 'C', 'LANG:EN', '-COMP:C/fin', 'COMP:Neg/fin', 'LF:C/fin', '-SPEC:T/fin', '!PROBE:FIN', '-SPEC:N', 'PF:C', '!COMP:*', '-COMP:T/prt', 'COMP:T/fin'}
T               {'PHI:NUM:_', 'FIN', 'PHI:PER:_', '!PROBE:V', 'PHI:GEN:_', 'COMP:v', 'PHI:DET:_', '-SPEC:FORCE', 'VAL', 'ARG', 'SPEC:D', 'SPEC:*', '-SPEC:V', 'LANG:EN', '!COMP:*', 'COMP:T/prt', '-SPEC:T/fin', '-COMP:NEG', 'LF:T', 'COMP:V', '-SPEC:N', 'T', 'PF:T'}
T/prt           {'PHI:NUM:_', 'FIN', 'PHI:PER:_', '!PROBE:V', 'PF:T/prt', 'COMP:v', 'PHI:GEN:_', 'PHI:DET:_', '-SPEC:FORCE', 'VAL', 'ARG', 'SPEC:D', 'T/prt', 'SPEC:*', '-SPEC:V', 'LANG:EN', 'COMP:T/prt', '-SPEC:T/fin', 'T', '-COMP:NEG', '-SPEC:N', 'COMP:V', 'COMP:D', '!COMP:*', 'LF:T/prt'}
a0              {'LANG:EN', '-SPEC:D', 'PF:A', 'adjoinable', '-adjoinable', '-SPEC:A', 'A', 'TAIL:D', 'LF:A', 'COMP:0'}
n               {'PF:n', 'COMP:uR', '-SPEC:FORCE', 'ARG', '-COMP:N', 'VAL', '-COMP:AUX', 'SPEC:*', '-COMP:V', 'COMP:R/D', 'COMP:R', '-SPEC:V', 'LANG:EN', '-SPEC:INF', '-COMP:C/fin', '-COMP:A', '-SPEC:T/fin', 'SPEC:A', '-SPEC:R', '-SPEC:N', 'PHI:PER:_', 'PHI:GEN:_', 'n', '-SPEC:uWH', '-SPEC:C/fin', '-SPEC:P', '!SPEC:*', '-COMP:v', 'PHI:NUM:_', 'COMP:C', 'COMP:v', 'PHI:DET:_', 'LF:n', 'COMP:P', 'INF', '-COMP:WH', 'N', '!SPEC:D', 'COMP:V', '-SPEC:ADV', '!COMP:*', 'COMP:0'}
impass          {'LF:impass', 'LANG:EN', 'PF:impass', 'PHI:NUM:_', 'PHI:PER:_', '!PROBE:V', 'PHI:GEN:_', 'ASP', 'PHI:DET:_', 'v', 'ARG', '-SPEC:N', 'COMP:V', 'SPEC:D', '!COMP:*', '-VAL'}
cau             {'LANG:EN', 'PHI:NUM:_', '-VAL', 'PHI:PER:_', '!PROBE:V', 'PHI:GEN:_', 'ASP', 'PHI:DET:_', 'v', '-SPEC:N', 'ARG', 'COMP:V', 'SPEC:D', '!COMP:*', 'LF:v/Cause', 'PF:Cau'}
INF             {'INF', '-SPEC:V', 'LANG:EN', '-COMP:C/fin', '-COMP:FORCE', '-COMP:T/fin', 'PF:INF', 'COMP:v', '-SPEC:T/fin', 'LF:INF', 'COMP:V', '!COMP:*'}
prtcpl          {'PHI:NUM:_', 'FIN', 'PHI:PER:_', '!PROBE:V', '-COMP:T/fin', 'PF:T/prt', 'COMP:v', 'PHI:GEN:_', 'PHI:DET:_', '-SPEC:FORCE', 'VAL', 'ARG', 'SPEC:D', 'T/prt', 'SPEC:*', 'INF', '-SPEC:V', 'LANG:EN', '-COMP:C/fin', '-COMP:FORCE', '!COMP:*', 'COMP:T/prt', '-SPEC:T/fin', 'COMP:V', '-SPEC:N', 'COMP:D', '-COMP:NEG', 'T', 'LF:T/prt'}
TO/inf          {'LF:TO/inf', '-COMP:T/fin', 'COMP:v', 'PF:TO/inf', '-VAL', 'INF', '?ARG', 'LANG:EN', '-SPEC:V', '-COMP:C/fin', '-COMP:FORCE', 'adjoinable', '-SPEC:T/fin', 'TO/inf', 'COMP:V', '!COMP:*', '!COMP:V', '-SPEC:v'}
A/inf           {'-COMP:T/fin', '?VAL', 'COMP:v', 'SPEC:*', 'INF', '?ARG', 'LANG:EN', '-SPEC:V', '-COMP:C/fin', '-COMP:FORCE', 'PF:A/inf', 'A/inf', 'LF:A/inf', '-SPEC:Neg/fin', '-SPEC:T/fin', 'COMP:V', '!COMP:*'}
ARE/inf         {'-COMP:T/fin', '-adjoinable', 'COMP:v', 'VAL', 'SPEC:*', 'PF:are', 'INF', '?ARG', 'LANG:EN', '-SPEC:V', 'ARE/inf', '-COMP:C/fin', '-COMP:FORCE', 'LF:ARE/inf', '-SPEC:T/fin', 'COMP:V', '!COMP:*'}
ESSA/inf        {'-COMP:T/fin', '?VAL', 'COMP:v', '-SPEC:FORCE', 'TAIL:T', 'LF:while', 'SPEC:*', 'INF', '?ARG', 'LANG:EN', '-SPEC:V', '-COMP:C/fin', '-COMP:FORCE', 'ESSA/inf', 'adjoinable', 'PF:essa', '-SPEC:Neg/fin', '-SPEC:T/fin', 'ADV', '-SPEC:N', 'COMP:V', '!COMP:*'}
TUA/inf         {'PF:tua', '!SPEC:*', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:GEN:_', 'COMP:v', 'TUA/inf', 'PHI:DET:_', '-SPEC:FORCE', 'TAIL:T', 'VAL', 'ARG', 'SPEC:*', 'INF', '-SPEC:V', 'LANG:EN', '-COMP:C/fin', '-COMP:FORCE', 'adjoinable', '-SPEC:Neg/fin', 'LF:after', '-SPEC:T/fin', 'ADV', '-SPEC:N', 'PHI:PER:_', 'COMP:V', '!COMP:*'}
VA/inf          {'!SPEC:*', 'PHI:NUM:_', '-COMP:T/fin', 'PHI:GEN:_', 'COMP:v', 'PF:vAn', 'PHI:DET:_', 'ARG', 'VAL', 'SPEC:*', 'INF', '-SPEC:V', 'LANG:EN', '-COMP:C/fin', '-COMP:FORCE', 'VA/inf', '-SPEC:T/fin', '-SPEC:N', 'PHI:PER:_', 'COMP:V', '!COMP:*', 'LF:VA'}
MA/ssa          {'PHI:NUM:_', '-SPEC:*', 'LF:in_doing', 'PHI:GEN:_', 'COMP:v', 'PHI:DET:_', '-SPEC:FORCE', 'ARG', '-VAL', 'PF:massa', 'LANG:EN', 'MA/inf', 'adjoinable', 'TAIL:V', '-SPEC:T/fin', '-SPEC:Neg/fin', 'ADV', '-SPEC:N', 'PHI:PER:_', 'COMP:V'}
MA/tta          {'LANG:EN', 'PHI:NUM:_', 'MA/inf', 'PHI:PER:_', 'LF:without_doing', 'adjoinable', 'PHI:GEN:_', '-SPEC:T/fin', '-SPEC:Neg/fin', 'PHI:DET:_', 'ADV', '-SPEC:FORCE', 'ARG', 'TAIL:T', '-SPEC:N', '-VAL', 'PF:matta'}
MA/lla          {'LF:by_doing', '-SPEC:FORCE', 'ARG', 'LANG:EN', 'adjoinable', '-SPEC:T/fin', '-SPEC:N', 'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'PF:malla', 'COMP:v', 'PHI:DET:_', 'TAIL:T', '-VAL', 'MA/inf', '-SPEC:Neg/fin', 'ADV', 'COMP:V'}
MA/inf          {'-SPEC:FORCE', 'ARG', 'PF:maan', 'LANG:EN', 'adjoinable', 'TAIL:V', '-SPEC:T/fin', '-SPEC:N', 'PHI:PER:_', 'PHI:GEN:_', 'PHI:NUM:_', 'COMP:v', 'PHI:DET:_', '-VAL', 'LF:to_do', 'MA/inf', '-SPEC:Neg/fin', 'ADV', 'COMP:V'}
E/inf           {'LANG:FI', '-ARG', 'LF:by', 'adjoinable', '-SPEC:Neg/fin', '-SPEC:T/fin', 'ADV', '-SPEC:FORCE', 'TAIL:T', '-SPEC:N', 'PF:en', 'SPEC:*', '-VAL'}
BE-             {'-ARG', 'SPEC:P', '-COMP:v', '-COMP:T/fin', '-SPEC:FORCE', 'PF:BE', '-COMP:N', 'SPEC:D', '-VAL', 'COPULA', 'COMP:P', '-COMP:V', 'LANG:EN', 'LF:BE', 'SPEC:TO/inf', 'COMP:T/prt', '-SPEC:T/fin', 'V', 'ASP', 'SPEC:ADV', '!COMP:*'}
D               {'-ARG', '-SPEC:P', 'PF:D', '-SPEC:MA/lla', 'OP', '-COMP:T/fin', '-COMP:D', 'LF:D', '-COMP:uR', 'D', '-SPEC:INF', '-SPEC:V', 'LANG:EN', '!PROBE:N', 'COMP:N', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', '!COMP:*', '-SPEC:C'}
D/rel           {'LF:D/rel', 'PF:D/rel', '-ARG', '-SPEC:MA/lla', '-SPEC:P', 'OP', '-COMP:D', '-COMP:T/fin', '-COMP:uR', 'D', 'OP:_', '-SPEC:INF', '-SPEC:V', 'LANG:EN', '-COMP:C/fin', '!PROBE:N', 'OP:REL', 'COMP:N', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', '!COMP:*', 'D/rel', '-SPEC:C'}
P               {'-SPEC:C/fin', 'PF:P', '-SPEC:P', '-COMP:ADV', '-SPEC:v', 'PHI:NUM:_', '-SPEC:*', 'PHI:PER:_', '-COMP:T/fin', '-SPEC:iWH', 'PHI:DET:_', '-SPEC:FORCE', '-SPEC:iR', 'ARG', '-COMP:N', '-VAL', '-SPEC:INF', '-SPEC:V', 'LANG:EN', 'P', '-float', '-COMP:uWH', 'adjoinable', '-SPEC:T/fin', '-SPEC:Neg/fin', 'LF:P', 'COMP:D', '-SPEC:N', 'PHI:GEN:_', '-SPEC:ADV', '!COMP:*', '-SPEC:C'}
pro             ['LANG:EN']
pro-            {'-SPEC:C/fin', '-SPEC:P', '-COMP:v', 'COMP:uR', 'COMP:C', '-SPEC:FORCE', '-COMP:N', '-COMP:AUX', 'LF:pro', '-COMP:A', 'COMP:R/D', 'COMP:R', '-SPEC:V', 'LANG:EN', '-COMP:V', '-COMP:C/fin', '-SPEC:INF', 'COMP:P', '-COMP:WH', '-SPEC:T/fin', 'N', 'SPEC:A', 'PF:(pro)', '-SPEC:R', 'PHI', '-SPEC:N', '-SPEC:ADV', '-SPEC:uWH'}
cl              {'LEFT:T/fin', 'LANG:EN', 'inflectional', 'LEFT:D,CL', 'RIGHT:ARE/inf', 'CL', 'RIGHT:PRG'}
inc             {'LANG:EN', 'INCORPORATED', 'inflectional'}
sg              {'LANG:EN', 'inflectional', 'PHI:NUM:SG'}
pl              {'PHI:NUM:PL', 'LANG:EN', 'inflectional'}
1p              {'LANG:EN', 'PHI:PER:1', 'inflectional'}
2p              {'PHI:PER:2', 'LANG:EN', 'inflectional'}
3p              {'PHI:PER:3', 'LANG:EN', 'inflectional'}
def             {'LANG:EN', 'PHI:DET:DEF', 'inflectional'}
indef           {'LANG:EN', 'PHI:DET:INDEF', 'inflectional'}
hum             {'PHI:HUM:HUM', 'LANG:EN', 'inflectional'}
nonhum          {'LANG:EN', 'PHI:HUM:NONHUM', 'inflectional'}
m               {'PHI:GEN:M', 'LANG:EN', 'inflectional'}
f               {'LANG:EN', 'PHI:GEN:F', 'inflectional'}
nom             {'NOM', 'LANG:EN', 'TAIL:FIN,!COMP:*,VAL', 'inflectional'}
acc             {'LANG:EN', 'ACC', 'TAIL:v', 'inflectional'}
dat             {'DAT', 'LANG:EN', 'TAIL:v', 'inflectional'}
uC/op           {'uC/op', 'LANG:EN', 'inflectional'}
wh              {'LANG:EN', 'OP:_', 'inflectional', 'OP:WH'}
wh_             {'LANG:EN', 'inflectional', 'FORCE:OP:WH', 'OP', 'OP:_'}
top             {'OP:TOP', 'LANG:EN', 'inflectional'}
foc             {'LANG:EN', 'inflectional', 'OP:FOC'}
C/op            {'LANG:EN', 'OP:C/OP', 'inflectional'}
rel             {'LANG:EN', '-COMP:C/fin', 'inflectional', 'OP:REL', 'SPEC:D', 'OP:_', 'adjoinable'}
Q               {'LANG:EN', 'OP:Q', 'inflectional', 'OP:WH', 'OP'}
